(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __require = /* @__PURE__ */ ((x3) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x3, {
    get: (a, b2) => (typeof require !== "undefined" ? require : a)[b2]
  }) : x3)(function(x3) {
    if (typeof require !== "undefined")
      return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + x3 + '" is not supported');
  });
  var __commonJS = (cb, mod) => function __require4() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __export = (target, all) => {
    for (var name3 in all)
      __defProp(target, name3, { get: all[name3], enumerable: true });
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));
  var __accessCheck = (obj, member, msg) => {
    if (!member.has(obj))
      throw TypeError("Cannot " + msg);
  };
  var __privateGet = (obj, member, getter) => {
    __accessCheck(obj, member, "read from private field");
    return getter ? getter.call(obj) : member.get(obj);
  };
  var __privateAdd = (obj, member, value) => {
    if (member.has(obj))
      throw TypeError("Cannot add the same private member more than once");
    member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
  };
  var __privateSet = (obj, member, value, setter) => {
    __accessCheck(obj, member, "write to private field");
    setter ? setter.call(obj, value) : member.set(obj, value);
    return value;
  };

  // node_modules/howler/dist/howler.js
  var require_howler = __commonJS({
    "node_modules/howler/dist/howler.js"(exports) {
      (function() {
        "use strict";
        var HowlerGlobal2 = function() {
          this.init();
        };
        HowlerGlobal2.prototype = {
          init: function() {
            var self2 = this || Howler2;
            self2._counter = 1e3;
            self2._html5AudioPool = [];
            self2.html5PoolSize = 10;
            self2._codecs = {};
            self2._howls = [];
            self2._muted = false;
            self2._volume = 1;
            self2._canPlayEvent = "canplaythrough";
            self2._navigator = typeof window !== "undefined" && window.navigator ? window.navigator : null;
            self2.masterGain = null;
            self2.noAudio = false;
            self2.usingWebAudio = true;
            self2.autoSuspend = true;
            self2.ctx = null;
            self2.autoUnlock = true;
            self2._setup();
            return self2;
          },
          volume: function(vol) {
            var self2 = this || Howler2;
            vol = parseFloat(vol);
            if (!self2.ctx) {
              setupAudioContext();
            }
            if (typeof vol !== "undefined" && vol >= 0 && vol <= 1) {
              self2._volume = vol;
              if (self2._muted) {
                return self2;
              }
              if (self2.usingWebAudio) {
                self2.masterGain.gain.setValueAtTime(vol, Howler2.ctx.currentTime);
              }
              for (var i = 0; i < self2._howls.length; i++) {
                if (!self2._howls[i]._webAudio) {
                  var ids = self2._howls[i]._getSoundIds();
                  for (var j = 0; j < ids.length; j++) {
                    var sound = self2._howls[i]._soundById(ids[j]);
                    if (sound && sound._node) {
                      sound._node.volume = sound._volume * vol;
                    }
                  }
                }
              }
              return self2;
            }
            return self2._volume;
          },
          mute: function(muted) {
            var self2 = this || Howler2;
            if (!self2.ctx) {
              setupAudioContext();
            }
            self2._muted = muted;
            if (self2.usingWebAudio) {
              self2.masterGain.gain.setValueAtTime(muted ? 0 : self2._volume, Howler2.ctx.currentTime);
            }
            for (var i = 0; i < self2._howls.length; i++) {
              if (!self2._howls[i]._webAudio) {
                var ids = self2._howls[i]._getSoundIds();
                for (var j = 0; j < ids.length; j++) {
                  var sound = self2._howls[i]._soundById(ids[j]);
                  if (sound && sound._node) {
                    sound._node.muted = muted ? true : sound._muted;
                  }
                }
              }
            }
            return self2;
          },
          stop: function() {
            var self2 = this || Howler2;
            for (var i = 0; i < self2._howls.length; i++) {
              self2._howls[i].stop();
            }
            return self2;
          },
          unload: function() {
            var self2 = this || Howler2;
            for (var i = self2._howls.length - 1; i >= 0; i--) {
              self2._howls[i].unload();
            }
            if (self2.usingWebAudio && self2.ctx && typeof self2.ctx.close !== "undefined") {
              self2.ctx.close();
              self2.ctx = null;
              setupAudioContext();
            }
            return self2;
          },
          codecs: function(ext) {
            return (this || Howler2)._codecs[ext.replace(/^x-/, "")];
          },
          _setup: function() {
            var self2 = this || Howler2;
            self2.state = self2.ctx ? self2.ctx.state || "suspended" : "suspended";
            self2._autoSuspend();
            if (!self2.usingWebAudio) {
              if (typeof Audio !== "undefined") {
                try {
                  var test = new Audio();
                  if (typeof test.oncanplaythrough === "undefined") {
                    self2._canPlayEvent = "canplay";
                  }
                } catch (e) {
                  self2.noAudio = true;
                }
              } else {
                self2.noAudio = true;
              }
            }
            try {
              var test = new Audio();
              if (test.muted) {
                self2.noAudio = true;
              }
            } catch (e) {
            }
            if (!self2.noAudio) {
              self2._setupCodecs();
            }
            return self2;
          },
          _setupCodecs: function() {
            var self2 = this || Howler2;
            var audioTest = null;
            try {
              audioTest = typeof Audio !== "undefined" ? new Audio() : null;
            } catch (err) {
              return self2;
            }
            if (!audioTest || typeof audioTest.canPlayType !== "function") {
              return self2;
            }
            var mpegTest = audioTest.canPlayType("audio/mpeg;").replace(/^no$/, "");
            var ua = self2._navigator ? self2._navigator.userAgent : "";
            var checkOpera = ua.match(/OPR\/([0-6].)/g);
            var isOldOpera = checkOpera && parseInt(checkOpera[0].split("/")[1], 10) < 33;
            var checkSafari = ua.indexOf("Safari") !== -1 && ua.indexOf("Chrome") === -1;
            var safariVersion = ua.match(/Version\/(.*?) /);
            var isOldSafari = checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15;
            self2._codecs = {
              mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType("audio/mp3;").replace(/^no$/, ""))),
              mpeg: !!mpegTest,
              opus: !!audioTest.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ""),
              ogg: !!audioTest.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
              oga: !!audioTest.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
              wav: !!(audioTest.canPlayType('audio/wav; codecs="1"') || audioTest.canPlayType("audio/wav")).replace(/^no$/, ""),
              aac: !!audioTest.canPlayType("audio/aac;").replace(/^no$/, ""),
              caf: !!audioTest.canPlayType("audio/x-caf;").replace(/^no$/, ""),
              m4a: !!(audioTest.canPlayType("audio/x-m4a;") || audioTest.canPlayType("audio/m4a;") || audioTest.canPlayType("audio/aac;")).replace(/^no$/, ""),
              m4b: !!(audioTest.canPlayType("audio/x-m4b;") || audioTest.canPlayType("audio/m4b;") || audioTest.canPlayType("audio/aac;")).replace(/^no$/, ""),
              mp4: !!(audioTest.canPlayType("audio/x-mp4;") || audioTest.canPlayType("audio/mp4;") || audioTest.canPlayType("audio/aac;")).replace(/^no$/, ""),
              weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, "")),
              webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, "")),
              dolby: !!audioTest.canPlayType('audio/mp4; codecs="ec-3"').replace(/^no$/, ""),
              flac: !!(audioTest.canPlayType("audio/x-flac;") || audioTest.canPlayType("audio/flac;")).replace(/^no$/, "")
            };
            return self2;
          },
          _unlockAudio: function() {
            var self2 = this || Howler2;
            if (self2._audioUnlocked || !self2.ctx) {
              return;
            }
            self2._audioUnlocked = false;
            self2.autoUnlock = false;
            if (!self2._mobileUnloaded && self2.ctx.sampleRate !== 44100) {
              self2._mobileUnloaded = true;
              self2.unload();
            }
            self2._scratchBuffer = self2.ctx.createBuffer(1, 1, 22050);
            var unlock = function(e) {
              while (self2._html5AudioPool.length < self2.html5PoolSize) {
                try {
                  var audioNode = new Audio();
                  audioNode._unlocked = true;
                  self2._releaseHtml5Audio(audioNode);
                } catch (e2) {
                  self2.noAudio = true;
                  break;
                }
              }
              for (var i = 0; i < self2._howls.length; i++) {
                if (!self2._howls[i]._webAudio) {
                  var ids = self2._howls[i]._getSoundIds();
                  for (var j = 0; j < ids.length; j++) {
                    var sound = self2._howls[i]._soundById(ids[j]);
                    if (sound && sound._node && !sound._node._unlocked) {
                      sound._node._unlocked = true;
                      sound._node.load();
                    }
                  }
                }
              }
              self2._autoResume();
              var source = self2.ctx.createBufferSource();
              source.buffer = self2._scratchBuffer;
              source.connect(self2.ctx.destination);
              if (typeof source.start === "undefined") {
                source.noteOn(0);
              } else {
                source.start(0);
              }
              if (typeof self2.ctx.resume === "function") {
                self2.ctx.resume();
              }
              source.onended = function() {
                source.disconnect(0);
                self2._audioUnlocked = true;
                document.removeEventListener("touchstart", unlock, true);
                document.removeEventListener("touchend", unlock, true);
                document.removeEventListener("click", unlock, true);
                document.removeEventListener("keydown", unlock, true);
                for (var i2 = 0; i2 < self2._howls.length; i2++) {
                  self2._howls[i2]._emit("unlock");
                }
              };
            };
            document.addEventListener("touchstart", unlock, true);
            document.addEventListener("touchend", unlock, true);
            document.addEventListener("click", unlock, true);
            document.addEventListener("keydown", unlock, true);
            return self2;
          },
          _obtainHtml5Audio: function() {
            var self2 = this || Howler2;
            if (self2._html5AudioPool.length) {
              return self2._html5AudioPool.pop();
            }
            var testPlay = new Audio().play();
            if (testPlay && typeof Promise !== "undefined" && (testPlay instanceof Promise || typeof testPlay.then === "function")) {
              testPlay.catch(function() {
                console.warn("HTML5 Audio pool exhausted, returning potentially locked audio object.");
              });
            }
            return new Audio();
          },
          _releaseHtml5Audio: function(audio) {
            var self2 = this || Howler2;
            if (audio._unlocked) {
              self2._html5AudioPool.push(audio);
            }
            return self2;
          },
          _autoSuspend: function() {
            var self2 = this;
            if (!self2.autoSuspend || !self2.ctx || typeof self2.ctx.suspend === "undefined" || !Howler2.usingWebAudio) {
              return;
            }
            for (var i = 0; i < self2._howls.length; i++) {
              if (self2._howls[i]._webAudio) {
                for (var j = 0; j < self2._howls[i]._sounds.length; j++) {
                  if (!self2._howls[i]._sounds[j]._paused) {
                    return self2;
                  }
                }
              }
            }
            if (self2._suspendTimer) {
              clearTimeout(self2._suspendTimer);
            }
            self2._suspendTimer = setTimeout(function() {
              if (!self2.autoSuspend) {
                return;
              }
              self2._suspendTimer = null;
              self2.state = "suspending";
              var handleSuspension = function() {
                self2.state = "suspended";
                if (self2._resumeAfterSuspend) {
                  delete self2._resumeAfterSuspend;
                  self2._autoResume();
                }
              };
              self2.ctx.suspend().then(handleSuspension, handleSuspension);
            }, 3e4);
            return self2;
          },
          _autoResume: function() {
            var self2 = this;
            if (!self2.ctx || typeof self2.ctx.resume === "undefined" || !Howler2.usingWebAudio) {
              return;
            }
            if (self2.state === "running" && self2.ctx.state !== "interrupted" && self2._suspendTimer) {
              clearTimeout(self2._suspendTimer);
              self2._suspendTimer = null;
            } else if (self2.state === "suspended" || self2.state === "running" && self2.ctx.state === "interrupted") {
              self2.ctx.resume().then(function() {
                self2.state = "running";
                for (var i = 0; i < self2._howls.length; i++) {
                  self2._howls[i]._emit("resume");
                }
              });
              if (self2._suspendTimer) {
                clearTimeout(self2._suspendTimer);
                self2._suspendTimer = null;
              }
            } else if (self2.state === "suspending") {
              self2._resumeAfterSuspend = true;
            }
            return self2;
          }
        };
        var Howler2 = new HowlerGlobal2();
        var Howl3 = function(o) {
          var self2 = this;
          if (!o.src || o.src.length === 0) {
            console.error("An array of source files must be passed with any new Howl.");
            return;
          }
          self2.init(o);
        };
        Howl3.prototype = {
          init: function(o) {
            var self2 = this;
            if (!Howler2.ctx) {
              setupAudioContext();
            }
            self2._autoplay = o.autoplay || false;
            self2._format = typeof o.format !== "string" ? o.format : [o.format];
            self2._html5 = o.html5 || false;
            self2._muted = o.mute || false;
            self2._loop = o.loop || false;
            self2._pool = o.pool || 5;
            self2._preload = typeof o.preload === "boolean" || o.preload === "metadata" ? o.preload : true;
            self2._rate = o.rate || 1;
            self2._sprite = o.sprite || {};
            self2._src = typeof o.src !== "string" ? o.src : [o.src];
            self2._volume = o.volume !== void 0 ? o.volume : 1;
            self2._xhr = {
              method: o.xhr && o.xhr.method ? o.xhr.method : "GET",
              headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,
              withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false
            };
            self2._duration = 0;
            self2._state = "unloaded";
            self2._sounds = [];
            self2._endTimers = {};
            self2._queue = [];
            self2._playLock = false;
            self2._onend = o.onend ? [{ fn: o.onend }] : [];
            self2._onfade = o.onfade ? [{ fn: o.onfade }] : [];
            self2._onload = o.onload ? [{ fn: o.onload }] : [];
            self2._onloaderror = o.onloaderror ? [{ fn: o.onloaderror }] : [];
            self2._onplayerror = o.onplayerror ? [{ fn: o.onplayerror }] : [];
            self2._onpause = o.onpause ? [{ fn: o.onpause }] : [];
            self2._onplay = o.onplay ? [{ fn: o.onplay }] : [];
            self2._onstop = o.onstop ? [{ fn: o.onstop }] : [];
            self2._onmute = o.onmute ? [{ fn: o.onmute }] : [];
            self2._onvolume = o.onvolume ? [{ fn: o.onvolume }] : [];
            self2._onrate = o.onrate ? [{ fn: o.onrate }] : [];
            self2._onseek = o.onseek ? [{ fn: o.onseek }] : [];
            self2._onunlock = o.onunlock ? [{ fn: o.onunlock }] : [];
            self2._onresume = [];
            self2._webAudio = Howler2.usingWebAudio && !self2._html5;
            if (typeof Howler2.ctx !== "undefined" && Howler2.ctx && Howler2.autoUnlock) {
              Howler2._unlockAudio();
            }
            Howler2._howls.push(self2);
            if (self2._autoplay) {
              self2._queue.push({
                event: "play",
                action: function() {
                  self2.play();
                }
              });
            }
            if (self2._preload && self2._preload !== "none") {
              self2.load();
            }
            return self2;
          },
          load: function() {
            var self2 = this;
            var url5 = null;
            if (Howler2.noAudio) {
              self2._emit("loaderror", null, "No audio support.");
              return;
            }
            if (typeof self2._src === "string") {
              self2._src = [self2._src];
            }
            for (var i = 0; i < self2._src.length; i++) {
              var ext, str4;
              if (self2._format && self2._format[i]) {
                ext = self2._format[i];
              } else {
                str4 = self2._src[i];
                if (typeof str4 !== "string") {
                  self2._emit("loaderror", null, "Non-string found in selected audio sources - ignoring.");
                  continue;
                }
                ext = /^data:audio\/([^;,]+);/i.exec(str4);
                if (!ext) {
                  ext = /\.([^.]+)$/.exec(str4.split("?", 1)[0]);
                }
                if (ext) {
                  ext = ext[1].toLowerCase();
                }
              }
              if (!ext) {
                console.warn('No file extension was found. Consider using the "format" property or specify an extension.');
              }
              if (ext && Howler2.codecs(ext)) {
                url5 = self2._src[i];
                break;
              }
            }
            if (!url5) {
              self2._emit("loaderror", null, "No codec support for selected audio sources.");
              return;
            }
            self2._src = url5;
            self2._state = "loading";
            if (window.location.protocol === "https:" && url5.slice(0, 5) === "http:") {
              self2._html5 = true;
              self2._webAudio = false;
            }
            new Sound2(self2);
            if (self2._webAudio) {
              loadBuffer(self2);
            }
            return self2;
          },
          play: function(sprite, internal) {
            var self2 = this;
            var id = null;
            if (typeof sprite === "number") {
              id = sprite;
              sprite = null;
            } else if (typeof sprite === "string" && self2._state === "loaded" && !self2._sprite[sprite]) {
              return null;
            } else if (typeof sprite === "undefined") {
              sprite = "__default";
              if (!self2._playLock) {
                var num = 0;
                for (var i = 0; i < self2._sounds.length; i++) {
                  if (self2._sounds[i]._paused && !self2._sounds[i]._ended) {
                    num++;
                    id = self2._sounds[i]._id;
                  }
                }
                if (num === 1) {
                  sprite = null;
                } else {
                  id = null;
                }
              }
            }
            var sound = id ? self2._soundById(id) : self2._inactiveSound();
            if (!sound) {
              return null;
            }
            if (id && !sprite) {
              sprite = sound._sprite || "__default";
            }
            if (self2._state !== "loaded") {
              sound._sprite = sprite;
              sound._ended = false;
              var soundId = sound._id;
              self2._queue.push({
                event: "play",
                action: function() {
                  self2.play(soundId);
                }
              });
              return soundId;
            }
            if (id && !sound._paused) {
              if (!internal) {
                self2._loadQueue("play");
              }
              return sound._id;
            }
            if (self2._webAudio) {
              Howler2._autoResume();
            }
            var seek = Math.max(0, sound._seek > 0 ? sound._seek : self2._sprite[sprite][0] / 1e3);
            var duration = Math.max(0, (self2._sprite[sprite][0] + self2._sprite[sprite][1]) / 1e3 - seek);
            var timeout = duration * 1e3 / Math.abs(sound._rate);
            var start = self2._sprite[sprite][0] / 1e3;
            var stop = (self2._sprite[sprite][0] + self2._sprite[sprite][1]) / 1e3;
            sound._sprite = sprite;
            sound._ended = false;
            var setParams = function() {
              sound._paused = false;
              sound._seek = seek;
              sound._start = start;
              sound._stop = stop;
              sound._loop = !!(sound._loop || self2._sprite[sprite][2]);
            };
            if (seek >= stop) {
              self2._ended(sound);
              return;
            }
            var node = sound._node;
            if (self2._webAudio) {
              var playWebAudio = function() {
                self2._playLock = false;
                setParams();
                self2._refreshBuffer(sound);
                var vol = sound._muted || self2._muted ? 0 : sound._volume;
                node.gain.setValueAtTime(vol, Howler2.ctx.currentTime);
                sound._playStart = Howler2.ctx.currentTime;
                if (typeof node.bufferSource.start === "undefined") {
                  sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);
                } else {
                  sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);
                }
                if (timeout !== Infinity) {
                  self2._endTimers[sound._id] = setTimeout(self2._ended.bind(self2, sound), timeout);
                }
                if (!internal) {
                  setTimeout(function() {
                    self2._emit("play", sound._id);
                    self2._loadQueue();
                  }, 0);
                }
              };
              if (Howler2.state === "running" && Howler2.ctx.state !== "interrupted") {
                playWebAudio();
              } else {
                self2._playLock = true;
                self2.once("resume", playWebAudio);
                self2._clearTimer(sound._id);
              }
            } else {
              var playHtml5 = function() {
                node.currentTime = seek;
                node.muted = sound._muted || self2._muted || Howler2._muted || node.muted;
                node.volume = sound._volume * Howler2.volume();
                node.playbackRate = sound._rate;
                try {
                  var play = node.play();
                  if (play && typeof Promise !== "undefined" && (play instanceof Promise || typeof play.then === "function")) {
                    self2._playLock = true;
                    setParams();
                    play.then(function() {
                      self2._playLock = false;
                      node._unlocked = true;
                      if (!internal) {
                        self2._emit("play", sound._id);
                      } else {
                        self2._loadQueue();
                      }
                    }).catch(function() {
                      self2._playLock = false;
                      self2._emit("playerror", sound._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.");
                      sound._ended = true;
                      sound._paused = true;
                    });
                  } else if (!internal) {
                    self2._playLock = false;
                    setParams();
                    self2._emit("play", sound._id);
                  }
                  node.playbackRate = sound._rate;
                  if (node.paused) {
                    self2._emit("playerror", sound._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.");
                    return;
                  }
                  if (sprite !== "__default" || sound._loop) {
                    self2._endTimers[sound._id] = setTimeout(self2._ended.bind(self2, sound), timeout);
                  } else {
                    self2._endTimers[sound._id] = function() {
                      self2._ended(sound);
                      node.removeEventListener("ended", self2._endTimers[sound._id], false);
                    };
                    node.addEventListener("ended", self2._endTimers[sound._id], false);
                  }
                } catch (err) {
                  self2._emit("playerror", sound._id, err);
                }
              };
              if (node.src === "data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA") {
                node.src = self2._src;
                node.load();
              }
              var loadedNoReadyState = window && window.ejecta || !node.readyState && Howler2._navigator.isCocoonJS;
              if (node.readyState >= 3 || loadedNoReadyState) {
                playHtml5();
              } else {
                self2._playLock = true;
                self2._state = "loading";
                var listener = function() {
                  self2._state = "loaded";
                  playHtml5();
                  node.removeEventListener(Howler2._canPlayEvent, listener, false);
                };
                node.addEventListener(Howler2._canPlayEvent, listener, false);
                self2._clearTimer(sound._id);
              }
            }
            return sound._id;
          },
          pause: function(id) {
            var self2 = this;
            if (self2._state !== "loaded" || self2._playLock) {
              self2._queue.push({
                event: "pause",
                action: function() {
                  self2.pause(id);
                }
              });
              return self2;
            }
            var ids = self2._getSoundIds(id);
            for (var i = 0; i < ids.length; i++) {
              self2._clearTimer(ids[i]);
              var sound = self2._soundById(ids[i]);
              if (sound && !sound._paused) {
                sound._seek = self2.seek(ids[i]);
                sound._rateSeek = 0;
                sound._paused = true;
                self2._stopFade(ids[i]);
                if (sound._node) {
                  if (self2._webAudio) {
                    if (!sound._node.bufferSource) {
                      continue;
                    }
                    if (typeof sound._node.bufferSource.stop === "undefined") {
                      sound._node.bufferSource.noteOff(0);
                    } else {
                      sound._node.bufferSource.stop(0);
                    }
                    self2._cleanBuffer(sound._node);
                  } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {
                    sound._node.pause();
                  }
                }
              }
              if (!arguments[1]) {
                self2._emit("pause", sound ? sound._id : null);
              }
            }
            return self2;
          },
          stop: function(id, internal) {
            var self2 = this;
            if (self2._state !== "loaded" || self2._playLock) {
              self2._queue.push({
                event: "stop",
                action: function() {
                  self2.stop(id);
                }
              });
              return self2;
            }
            var ids = self2._getSoundIds(id);
            for (var i = 0; i < ids.length; i++) {
              self2._clearTimer(ids[i]);
              var sound = self2._soundById(ids[i]);
              if (sound) {
                sound._seek = sound._start || 0;
                sound._rateSeek = 0;
                sound._paused = true;
                sound._ended = true;
                self2._stopFade(ids[i]);
                if (sound._node) {
                  if (self2._webAudio) {
                    if (sound._node.bufferSource) {
                      if (typeof sound._node.bufferSource.stop === "undefined") {
                        sound._node.bufferSource.noteOff(0);
                      } else {
                        sound._node.bufferSource.stop(0);
                      }
                      self2._cleanBuffer(sound._node);
                    }
                  } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {
                    sound._node.currentTime = sound._start || 0;
                    sound._node.pause();
                    if (sound._node.duration === Infinity) {
                      self2._clearSound(sound._node);
                    }
                  }
                }
                if (!internal) {
                  self2._emit("stop", sound._id);
                }
              }
            }
            return self2;
          },
          mute: function(muted, id) {
            var self2 = this;
            if (self2._state !== "loaded" || self2._playLock) {
              self2._queue.push({
                event: "mute",
                action: function() {
                  self2.mute(muted, id);
                }
              });
              return self2;
            }
            if (typeof id === "undefined") {
              if (typeof muted === "boolean") {
                self2._muted = muted;
              } else {
                return self2._muted;
              }
            }
            var ids = self2._getSoundIds(id);
            for (var i = 0; i < ids.length; i++) {
              var sound = self2._soundById(ids[i]);
              if (sound) {
                sound._muted = muted;
                if (sound._interval) {
                  self2._stopFade(sound._id);
                }
                if (self2._webAudio && sound._node) {
                  sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler2.ctx.currentTime);
                } else if (sound._node) {
                  sound._node.muted = Howler2._muted ? true : muted;
                }
                self2._emit("mute", sound._id);
              }
            }
            return self2;
          },
          volume: function() {
            var self2 = this;
            var args = arguments;
            var vol, id;
            if (args.length === 0) {
              return self2._volume;
            } else if (args.length === 1 || args.length === 2 && typeof args[1] === "undefined") {
              var ids = self2._getSoundIds();
              var index = ids.indexOf(args[0]);
              if (index >= 0) {
                id = parseInt(args[0], 10);
              } else {
                vol = parseFloat(args[0]);
              }
            } else if (args.length >= 2) {
              vol = parseFloat(args[0]);
              id = parseInt(args[1], 10);
            }
            var sound;
            if (typeof vol !== "undefined" && vol >= 0 && vol <= 1) {
              if (self2._state !== "loaded" || self2._playLock) {
                self2._queue.push({
                  event: "volume",
                  action: function() {
                    self2.volume.apply(self2, args);
                  }
                });
                return self2;
              }
              if (typeof id === "undefined") {
                self2._volume = vol;
              }
              id = self2._getSoundIds(id);
              for (var i = 0; i < id.length; i++) {
                sound = self2._soundById(id[i]);
                if (sound) {
                  sound._volume = vol;
                  if (!args[2]) {
                    self2._stopFade(id[i]);
                  }
                  if (self2._webAudio && sound._node && !sound._muted) {
                    sound._node.gain.setValueAtTime(vol, Howler2.ctx.currentTime);
                  } else if (sound._node && !sound._muted) {
                    sound._node.volume = vol * Howler2.volume();
                  }
                  self2._emit("volume", sound._id);
                }
              }
            } else {
              sound = id ? self2._soundById(id) : self2._sounds[0];
              return sound ? sound._volume : 0;
            }
            return self2;
          },
          fade: function(from, to, len, id) {
            var self2 = this;
            if (self2._state !== "loaded" || self2._playLock) {
              self2._queue.push({
                event: "fade",
                action: function() {
                  self2.fade(from, to, len, id);
                }
              });
              return self2;
            }
            from = Math.min(Math.max(0, parseFloat(from)), 1);
            to = Math.min(Math.max(0, parseFloat(to)), 1);
            len = parseFloat(len);
            self2.volume(from, id);
            var ids = self2._getSoundIds(id);
            for (var i = 0; i < ids.length; i++) {
              var sound = self2._soundById(ids[i]);
              if (sound) {
                if (!id) {
                  self2._stopFade(ids[i]);
                }
                if (self2._webAudio && !sound._muted) {
                  var currentTime = Howler2.ctx.currentTime;
                  var end = currentTime + len / 1e3;
                  sound._volume = from;
                  sound._node.gain.setValueAtTime(from, currentTime);
                  sound._node.gain.linearRampToValueAtTime(to, end);
                }
                self2._startFadeInterval(sound, from, to, len, ids[i], typeof id === "undefined");
              }
            }
            return self2;
          },
          _startFadeInterval: function(sound, from, to, len, id, isGroup) {
            var self2 = this;
            var vol = from;
            var diff = to - from;
            var steps = Math.abs(diff / 0.01);
            var stepLen = Math.max(4, steps > 0 ? len / steps : len);
            var lastTick = Date.now();
            sound._fadeTo = to;
            sound._interval = setInterval(function() {
              var tick = (Date.now() - lastTick) / len;
              lastTick = Date.now();
              vol += diff * tick;
              vol = Math.round(vol * 100) / 100;
              if (diff < 0) {
                vol = Math.max(to, vol);
              } else {
                vol = Math.min(to, vol);
              }
              if (self2._webAudio) {
                sound._volume = vol;
              } else {
                self2.volume(vol, sound._id, true);
              }
              if (isGroup) {
                self2._volume = vol;
              }
              if (to < from && vol <= to || to > from && vol >= to) {
                clearInterval(sound._interval);
                sound._interval = null;
                sound._fadeTo = null;
                self2.volume(to, sound._id);
                self2._emit("fade", sound._id);
              }
            }, stepLen);
          },
          _stopFade: function(id) {
            var self2 = this;
            var sound = self2._soundById(id);
            if (sound && sound._interval) {
              if (self2._webAudio) {
                sound._node.gain.cancelScheduledValues(Howler2.ctx.currentTime);
              }
              clearInterval(sound._interval);
              sound._interval = null;
              self2.volume(sound._fadeTo, id);
              sound._fadeTo = null;
              self2._emit("fade", id);
            }
            return self2;
          },
          loop: function() {
            var self2 = this;
            var args = arguments;
            var loop3, id, sound;
            if (args.length === 0) {
              return self2._loop;
            } else if (args.length === 1) {
              if (typeof args[0] === "boolean") {
                loop3 = args[0];
                self2._loop = loop3;
              } else {
                sound = self2._soundById(parseInt(args[0], 10));
                return sound ? sound._loop : false;
              }
            } else if (args.length === 2) {
              loop3 = args[0];
              id = parseInt(args[1], 10);
            }
            var ids = self2._getSoundIds(id);
            for (var i = 0; i < ids.length; i++) {
              sound = self2._soundById(ids[i]);
              if (sound) {
                sound._loop = loop3;
                if (self2._webAudio && sound._node && sound._node.bufferSource) {
                  sound._node.bufferSource.loop = loop3;
                  if (loop3) {
                    sound._node.bufferSource.loopStart = sound._start || 0;
                    sound._node.bufferSource.loopEnd = sound._stop;
                    if (self2.playing(ids[i])) {
                      self2.pause(ids[i], true);
                      self2.play(ids[i], true);
                    }
                  }
                }
              }
            }
            return self2;
          },
          rate: function() {
            var self2 = this;
            var args = arguments;
            var rate, id;
            if (args.length === 0) {
              id = self2._sounds[0]._id;
            } else if (args.length === 1) {
              var ids = self2._getSoundIds();
              var index = ids.indexOf(args[0]);
              if (index >= 0) {
                id = parseInt(args[0], 10);
              } else {
                rate = parseFloat(args[0]);
              }
            } else if (args.length === 2) {
              rate = parseFloat(args[0]);
              id = parseInt(args[1], 10);
            }
            var sound;
            if (typeof rate === "number") {
              if (self2._state !== "loaded" || self2._playLock) {
                self2._queue.push({
                  event: "rate",
                  action: function() {
                    self2.rate.apply(self2, args);
                  }
                });
                return self2;
              }
              if (typeof id === "undefined") {
                self2._rate = rate;
              }
              id = self2._getSoundIds(id);
              for (var i = 0; i < id.length; i++) {
                sound = self2._soundById(id[i]);
                if (sound) {
                  if (self2.playing(id[i])) {
                    sound._rateSeek = self2.seek(id[i]);
                    sound._playStart = self2._webAudio ? Howler2.ctx.currentTime : sound._playStart;
                  }
                  sound._rate = rate;
                  if (self2._webAudio && sound._node && sound._node.bufferSource) {
                    sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler2.ctx.currentTime);
                  } else if (sound._node) {
                    sound._node.playbackRate = rate;
                  }
                  var seek = self2.seek(id[i]);
                  var duration = (self2._sprite[sound._sprite][0] + self2._sprite[sound._sprite][1]) / 1e3 - seek;
                  var timeout = duration * 1e3 / Math.abs(sound._rate);
                  if (self2._endTimers[id[i]] || !sound._paused) {
                    self2._clearTimer(id[i]);
                    self2._endTimers[id[i]] = setTimeout(self2._ended.bind(self2, sound), timeout);
                  }
                  self2._emit("rate", sound._id);
                }
              }
            } else {
              sound = self2._soundById(id);
              return sound ? sound._rate : self2._rate;
            }
            return self2;
          },
          seek: function() {
            var self2 = this;
            var args = arguments;
            var seek, id;
            if (args.length === 0) {
              if (self2._sounds.length) {
                id = self2._sounds[0]._id;
              }
            } else if (args.length === 1) {
              var ids = self2._getSoundIds();
              var index = ids.indexOf(args[0]);
              if (index >= 0) {
                id = parseInt(args[0], 10);
              } else if (self2._sounds.length) {
                id = self2._sounds[0]._id;
                seek = parseFloat(args[0]);
              }
            } else if (args.length === 2) {
              seek = parseFloat(args[0]);
              id = parseInt(args[1], 10);
            }
            if (typeof id === "undefined") {
              return 0;
            }
            if (typeof seek === "number" && (self2._state !== "loaded" || self2._playLock)) {
              self2._queue.push({
                event: "seek",
                action: function() {
                  self2.seek.apply(self2, args);
                }
              });
              return self2;
            }
            var sound = self2._soundById(id);
            if (sound) {
              if (typeof seek === "number" && seek >= 0) {
                var playing = self2.playing(id);
                if (playing) {
                  self2.pause(id, true);
                }
                sound._seek = seek;
                sound._ended = false;
                self2._clearTimer(id);
                if (!self2._webAudio && sound._node && !isNaN(sound._node.duration)) {
                  sound._node.currentTime = seek;
                }
                var seekAndEmit = function() {
                  if (playing) {
                    self2.play(id, true);
                  }
                  self2._emit("seek", id);
                };
                if (playing && !self2._webAudio) {
                  var emitSeek = function() {
                    if (!self2._playLock) {
                      seekAndEmit();
                    } else {
                      setTimeout(emitSeek, 0);
                    }
                  };
                  setTimeout(emitSeek, 0);
                } else {
                  seekAndEmit();
                }
              } else {
                if (self2._webAudio) {
                  var realTime = self2.playing(id) ? Howler2.ctx.currentTime - sound._playStart : 0;
                  var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;
                  return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));
                } else {
                  return sound._node.currentTime;
                }
              }
            }
            return self2;
          },
          playing: function(id) {
            var self2 = this;
            if (typeof id === "number") {
              var sound = self2._soundById(id);
              return sound ? !sound._paused : false;
            }
            for (var i = 0; i < self2._sounds.length; i++) {
              if (!self2._sounds[i]._paused) {
                return true;
              }
            }
            return false;
          },
          duration: function(id) {
            var self2 = this;
            var duration = self2._duration;
            var sound = self2._soundById(id);
            if (sound) {
              duration = self2._sprite[sound._sprite][1] / 1e3;
            }
            return duration;
          },
          state: function() {
            return this._state;
          },
          unload: function() {
            var self2 = this;
            var sounds = self2._sounds;
            for (var i = 0; i < sounds.length; i++) {
              if (!sounds[i]._paused) {
                self2.stop(sounds[i]._id);
              }
              if (!self2._webAudio) {
                self2._clearSound(sounds[i]._node);
                sounds[i]._node.removeEventListener("error", sounds[i]._errorFn, false);
                sounds[i]._node.removeEventListener(Howler2._canPlayEvent, sounds[i]._loadFn, false);
                sounds[i]._node.removeEventListener("ended", sounds[i]._endFn, false);
                Howler2._releaseHtml5Audio(sounds[i]._node);
              }
              delete sounds[i]._node;
              self2._clearTimer(sounds[i]._id);
            }
            var index = Howler2._howls.indexOf(self2);
            if (index >= 0) {
              Howler2._howls.splice(index, 1);
            }
            var remCache = true;
            for (i = 0; i < Howler2._howls.length; i++) {
              if (Howler2._howls[i]._src === self2._src || self2._src.indexOf(Howler2._howls[i]._src) >= 0) {
                remCache = false;
                break;
              }
            }
            if (cache && remCache) {
              delete cache[self2._src];
            }
            Howler2.noAudio = false;
            self2._state = "unloaded";
            self2._sounds = [];
            self2 = null;
            return null;
          },
          on: function(event, fn, id, once) {
            var self2 = this;
            var events = self2["_on" + event];
            if (typeof fn === "function") {
              events.push(once ? { id, fn, once } : { id, fn });
            }
            return self2;
          },
          off: function(event, fn, id) {
            var self2 = this;
            var events = self2["_on" + event];
            var i = 0;
            if (typeof fn === "number") {
              id = fn;
              fn = null;
            }
            if (fn || id) {
              for (i = 0; i < events.length; i++) {
                var isId = id === events[i].id;
                if (fn === events[i].fn && isId || !fn && isId) {
                  events.splice(i, 1);
                  break;
                }
              }
            } else if (event) {
              self2["_on" + event] = [];
            } else {
              var keys = Object.keys(self2);
              for (i = 0; i < keys.length; i++) {
                if (keys[i].indexOf("_on") === 0 && Array.isArray(self2[keys[i]])) {
                  self2[keys[i]] = [];
                }
              }
            }
            return self2;
          },
          once: function(event, fn, id) {
            var self2 = this;
            self2.on(event, fn, id, 1);
            return self2;
          },
          _emit: function(event, id, msg) {
            var self2 = this;
            var events = self2["_on" + event];
            for (var i = events.length - 1; i >= 0; i--) {
              if (!events[i].id || events[i].id === id || event === "load") {
                setTimeout(function(fn) {
                  fn.call(this, id, msg);
                }.bind(self2, events[i].fn), 0);
                if (events[i].once) {
                  self2.off(event, events[i].fn, events[i].id);
                }
              }
            }
            self2._loadQueue(event);
            return self2;
          },
          _loadQueue: function(event) {
            var self2 = this;
            if (self2._queue.length > 0) {
              var task = self2._queue[0];
              if (task.event === event) {
                self2._queue.shift();
                self2._loadQueue();
              }
              if (!event) {
                task.action();
              }
            }
            return self2;
          },
          _ended: function(sound) {
            var self2 = this;
            var sprite = sound._sprite;
            if (!self2._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {
              setTimeout(self2._ended.bind(self2, sound), 100);
              return self2;
            }
            var loop3 = !!(sound._loop || self2._sprite[sprite][2]);
            self2._emit("end", sound._id);
            if (!self2._webAudio && loop3) {
              self2.stop(sound._id, true).play(sound._id);
            }
            if (self2._webAudio && loop3) {
              self2._emit("play", sound._id);
              sound._seek = sound._start || 0;
              sound._rateSeek = 0;
              sound._playStart = Howler2.ctx.currentTime;
              var timeout = (sound._stop - sound._start) * 1e3 / Math.abs(sound._rate);
              self2._endTimers[sound._id] = setTimeout(self2._ended.bind(self2, sound), timeout);
            }
            if (self2._webAudio && !loop3) {
              sound._paused = true;
              sound._ended = true;
              sound._seek = sound._start || 0;
              sound._rateSeek = 0;
              self2._clearTimer(sound._id);
              self2._cleanBuffer(sound._node);
              Howler2._autoSuspend();
            }
            if (!self2._webAudio && !loop3) {
              self2.stop(sound._id, true);
            }
            return self2;
          },
          _clearTimer: function(id) {
            var self2 = this;
            if (self2._endTimers[id]) {
              if (typeof self2._endTimers[id] !== "function") {
                clearTimeout(self2._endTimers[id]);
              } else {
                var sound = self2._soundById(id);
                if (sound && sound._node) {
                  sound._node.removeEventListener("ended", self2._endTimers[id], false);
                }
              }
              delete self2._endTimers[id];
            }
            return self2;
          },
          _soundById: function(id) {
            var self2 = this;
            for (var i = 0; i < self2._sounds.length; i++) {
              if (id === self2._sounds[i]._id) {
                return self2._sounds[i];
              }
            }
            return null;
          },
          _inactiveSound: function() {
            var self2 = this;
            self2._drain();
            for (var i = 0; i < self2._sounds.length; i++) {
              if (self2._sounds[i]._ended) {
                return self2._sounds[i].reset();
              }
            }
            return new Sound2(self2);
          },
          _drain: function() {
            var self2 = this;
            var limit = self2._pool;
            var cnt = 0;
            var i = 0;
            if (self2._sounds.length < limit) {
              return;
            }
            for (i = 0; i < self2._sounds.length; i++) {
              if (self2._sounds[i]._ended) {
                cnt++;
              }
            }
            for (i = self2._sounds.length - 1; i >= 0; i--) {
              if (cnt <= limit) {
                return;
              }
              if (self2._sounds[i]._ended) {
                if (self2._webAudio && self2._sounds[i]._node) {
                  self2._sounds[i]._node.disconnect(0);
                }
                self2._sounds.splice(i, 1);
                cnt--;
              }
            }
          },
          _getSoundIds: function(id) {
            var self2 = this;
            if (typeof id === "undefined") {
              var ids = [];
              for (var i = 0; i < self2._sounds.length; i++) {
                ids.push(self2._sounds[i]._id);
              }
              return ids;
            } else {
              return [id];
            }
          },
          _refreshBuffer: function(sound) {
            var self2 = this;
            sound._node.bufferSource = Howler2.ctx.createBufferSource();
            sound._node.bufferSource.buffer = cache[self2._src];
            if (sound._panner) {
              sound._node.bufferSource.connect(sound._panner);
            } else {
              sound._node.bufferSource.connect(sound._node);
            }
            sound._node.bufferSource.loop = sound._loop;
            if (sound._loop) {
              sound._node.bufferSource.loopStart = sound._start || 0;
              sound._node.bufferSource.loopEnd = sound._stop || 0;
            }
            sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler2.ctx.currentTime);
            return self2;
          },
          _cleanBuffer: function(node) {
            var self2 = this;
            var isIOS = Howler2._navigator && Howler2._navigator.vendor.indexOf("Apple") >= 0;
            if (Howler2._scratchBuffer && node.bufferSource) {
              node.bufferSource.onended = null;
              node.bufferSource.disconnect(0);
              if (isIOS) {
                try {
                  node.bufferSource.buffer = Howler2._scratchBuffer;
                } catch (e) {
                }
              }
            }
            node.bufferSource = null;
            return self2;
          },
          _clearSound: function(node) {
            var checkIE = /MSIE |Trident\//.test(Howler2._navigator && Howler2._navigator.userAgent);
            if (!checkIE) {
              node.src = "data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA";
            }
          }
        };
        var Sound2 = function(howl) {
          this._parent = howl;
          this.init();
        };
        Sound2.prototype = {
          init: function() {
            var self2 = this;
            var parent = self2._parent;
            self2._muted = parent._muted;
            self2._loop = parent._loop;
            self2._volume = parent._volume;
            self2._rate = parent._rate;
            self2._seek = 0;
            self2._paused = true;
            self2._ended = true;
            self2._sprite = "__default";
            self2._id = ++Howler2._counter;
            parent._sounds.push(self2);
            self2.create();
            return self2;
          },
          create: function() {
            var self2 = this;
            var parent = self2._parent;
            var volume = Howler2._muted || self2._muted || self2._parent._muted ? 0 : self2._volume;
            if (parent._webAudio) {
              self2._node = typeof Howler2.ctx.createGain === "undefined" ? Howler2.ctx.createGainNode() : Howler2.ctx.createGain();
              self2._node.gain.setValueAtTime(volume, Howler2.ctx.currentTime);
              self2._node.paused = true;
              self2._node.connect(Howler2.masterGain);
            } else if (!Howler2.noAudio) {
              self2._node = Howler2._obtainHtml5Audio();
              self2._errorFn = self2._errorListener.bind(self2);
              self2._node.addEventListener("error", self2._errorFn, false);
              self2._loadFn = self2._loadListener.bind(self2);
              self2._node.addEventListener(Howler2._canPlayEvent, self2._loadFn, false);
              self2._endFn = self2._endListener.bind(self2);
              self2._node.addEventListener("ended", self2._endFn, false);
              self2._node.src = parent._src;
              self2._node.preload = parent._preload === true ? "auto" : parent._preload;
              self2._node.volume = volume * Howler2.volume();
              self2._node.load();
            }
            return self2;
          },
          reset: function() {
            var self2 = this;
            var parent = self2._parent;
            self2._muted = parent._muted;
            self2._loop = parent._loop;
            self2._volume = parent._volume;
            self2._rate = parent._rate;
            self2._seek = 0;
            self2._rateSeek = 0;
            self2._paused = true;
            self2._ended = true;
            self2._sprite = "__default";
            self2._id = ++Howler2._counter;
            return self2;
          },
          _errorListener: function() {
            var self2 = this;
            self2._parent._emit("loaderror", self2._id, self2._node.error ? self2._node.error.code : 0);
            self2._node.removeEventListener("error", self2._errorFn, false);
          },
          _loadListener: function() {
            var self2 = this;
            var parent = self2._parent;
            parent._duration = Math.ceil(self2._node.duration * 10) / 10;
            if (Object.keys(parent._sprite).length === 0) {
              parent._sprite = { __default: [0, parent._duration * 1e3] };
            }
            if (parent._state !== "loaded") {
              parent._state = "loaded";
              parent._emit("load");
              parent._loadQueue();
            }
            self2._node.removeEventListener(Howler2._canPlayEvent, self2._loadFn, false);
          },
          _endListener: function() {
            var self2 = this;
            var parent = self2._parent;
            if (parent._duration === Infinity) {
              parent._duration = Math.ceil(self2._node.duration * 10) / 10;
              if (parent._sprite.__default[1] === Infinity) {
                parent._sprite.__default[1] = parent._duration * 1e3;
              }
              parent._ended(self2);
            }
            self2._node.removeEventListener("ended", self2._endFn, false);
          }
        };
        var cache = {};
        var loadBuffer = function(self2) {
          var url5 = self2._src;
          if (cache[url5]) {
            self2._duration = cache[url5].duration;
            loadSound(self2);
            return;
          }
          if (/^data:[^;]+;base64,/.test(url5)) {
            var data = atob(url5.split(",")[1]);
            var dataView = new Uint8Array(data.length);
            for (var i = 0; i < data.length; ++i) {
              dataView[i] = data.charCodeAt(i);
            }
            decodeAudioData(dataView.buffer, self2);
          } else {
            var xhr = new XMLHttpRequest();
            xhr.open(self2._xhr.method, url5, true);
            xhr.withCredentials = self2._xhr.withCredentials;
            xhr.responseType = "arraybuffer";
            if (self2._xhr.headers) {
              Object.keys(self2._xhr.headers).forEach(function(key) {
                xhr.setRequestHeader(key, self2._xhr.headers[key]);
              });
            }
            xhr.onload = function() {
              var code = (xhr.status + "")[0];
              if (code !== "0" && code !== "2" && code !== "3") {
                self2._emit("loaderror", null, "Failed loading audio file with status: " + xhr.status + ".");
                return;
              }
              decodeAudioData(xhr.response, self2);
            };
            xhr.onerror = function() {
              if (self2._webAudio) {
                self2._html5 = true;
                self2._webAudio = false;
                self2._sounds = [];
                delete cache[url5];
                self2.load();
              }
            };
            safeXhrSend(xhr);
          }
        };
        var safeXhrSend = function(xhr) {
          try {
            xhr.send();
          } catch (e) {
            xhr.onerror();
          }
        };
        var decodeAudioData = function(arraybuffer, self2) {
          var error = function() {
            self2._emit("loaderror", null, "Decoding audio data failed.");
          };
          var success = function(buffer) {
            if (buffer && self2._sounds.length > 0) {
              cache[self2._src] = buffer;
              loadSound(self2, buffer);
            } else {
              error();
            }
          };
          if (typeof Promise !== "undefined" && Howler2.ctx.decodeAudioData.length === 1) {
            Howler2.ctx.decodeAudioData(arraybuffer).then(success).catch(error);
          } else {
            Howler2.ctx.decodeAudioData(arraybuffer, success, error);
          }
        };
        var loadSound = function(self2, buffer) {
          if (buffer && !self2._duration) {
            self2._duration = buffer.duration;
          }
          if (Object.keys(self2._sprite).length === 0) {
            self2._sprite = { __default: [0, self2._duration * 1e3] };
          }
          if (self2._state !== "loaded") {
            self2._state = "loaded";
            self2._emit("load");
            self2._loadQueue();
          }
        };
        var setupAudioContext = function() {
          if (!Howler2.usingWebAudio) {
            return;
          }
          try {
            if (typeof AudioContext !== "undefined") {
              Howler2.ctx = new AudioContext();
            } else if (typeof webkitAudioContext !== "undefined") {
              Howler2.ctx = new webkitAudioContext();
            } else {
              Howler2.usingWebAudio = false;
            }
          } catch (e) {
            Howler2.usingWebAudio = false;
          }
          if (!Howler2.ctx) {
            Howler2.usingWebAudio = false;
          }
          var iOS = /iP(hone|od|ad)/.test(Howler2._navigator && Howler2._navigator.platform);
          var appVersion = Howler2._navigator && Howler2._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/);
          var version = appVersion ? parseInt(appVersion[1], 10) : null;
          if (iOS && version && version < 9) {
            var safari = /safari/.test(Howler2._navigator && Howler2._navigator.userAgent.toLowerCase());
            if (Howler2._navigator && !safari) {
              Howler2.usingWebAudio = false;
            }
          }
          if (Howler2.usingWebAudio) {
            Howler2.masterGain = typeof Howler2.ctx.createGain === "undefined" ? Howler2.ctx.createGainNode() : Howler2.ctx.createGain();
            Howler2.masterGain.gain.setValueAtTime(Howler2._muted ? 0 : Howler2._volume, Howler2.ctx.currentTime);
            Howler2.masterGain.connect(Howler2.ctx.destination);
          }
          Howler2._setup();
        };
        if (typeof define === "function" && define.amd) {
          define([], function() {
            return {
              Howler: Howler2,
              Howl: Howl3
            };
          });
        }
        if (typeof exports !== "undefined") {
          exports.Howler = Howler2;
          exports.Howl = Howl3;
        }
        if (typeof global !== "undefined") {
          global.HowlerGlobal = HowlerGlobal2;
          global.Howler = Howler2;
          global.Howl = Howl3;
          global.Sound = Sound2;
        } else if (typeof window !== "undefined") {
          window.HowlerGlobal = HowlerGlobal2;
          window.Howler = Howler2;
          window.Howl = Howl3;
          window.Sound = Sound2;
        }
      })();
      (function() {
        "use strict";
        HowlerGlobal.prototype._pos = [0, 0, 0];
        HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];
        HowlerGlobal.prototype.stereo = function(pan) {
          var self2 = this;
          if (!self2.ctx || !self2.ctx.listener) {
            return self2;
          }
          for (var i = self2._howls.length - 1; i >= 0; i--) {
            self2._howls[i].stereo(pan);
          }
          return self2;
        };
        HowlerGlobal.prototype.pos = function(x3, y4, z3) {
          var self2 = this;
          if (!self2.ctx || !self2.ctx.listener) {
            return self2;
          }
          y4 = typeof y4 !== "number" ? self2._pos[1] : y4;
          z3 = typeof z3 !== "number" ? self2._pos[2] : z3;
          if (typeof x3 === "number") {
            self2._pos = [x3, y4, z3];
            if (typeof self2.ctx.listener.positionX !== "undefined") {
              self2.ctx.listener.positionX.setTargetAtTime(self2._pos[0], Howler.ctx.currentTime, 0.1);
              self2.ctx.listener.positionY.setTargetAtTime(self2._pos[1], Howler.ctx.currentTime, 0.1);
              self2.ctx.listener.positionZ.setTargetAtTime(self2._pos[2], Howler.ctx.currentTime, 0.1);
            } else {
              self2.ctx.listener.setPosition(self2._pos[0], self2._pos[1], self2._pos[2]);
            }
          } else {
            return self2._pos;
          }
          return self2;
        };
        HowlerGlobal.prototype.orientation = function(x3, y4, z3, xUp, yUp, zUp) {
          var self2 = this;
          if (!self2.ctx || !self2.ctx.listener) {
            return self2;
          }
          var or = self2._orientation;
          y4 = typeof y4 !== "number" ? or[1] : y4;
          z3 = typeof z3 !== "number" ? or[2] : z3;
          xUp = typeof xUp !== "number" ? or[3] : xUp;
          yUp = typeof yUp !== "number" ? or[4] : yUp;
          zUp = typeof zUp !== "number" ? or[5] : zUp;
          if (typeof x3 === "number") {
            self2._orientation = [x3, y4, z3, xUp, yUp, zUp];
            if (typeof self2.ctx.listener.forwardX !== "undefined") {
              self2.ctx.listener.forwardX.setTargetAtTime(x3, Howler.ctx.currentTime, 0.1);
              self2.ctx.listener.forwardY.setTargetAtTime(y4, Howler.ctx.currentTime, 0.1);
              self2.ctx.listener.forwardZ.setTargetAtTime(z3, Howler.ctx.currentTime, 0.1);
              self2.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);
              self2.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);
              self2.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);
            } else {
              self2.ctx.listener.setOrientation(x3, y4, z3, xUp, yUp, zUp);
            }
          } else {
            return or;
          }
          return self2;
        };
        Howl.prototype.init = function(_super) {
          return function(o) {
            var self2 = this;
            self2._orientation = o.orientation || [1, 0, 0];
            self2._stereo = o.stereo || null;
            self2._pos = o.pos || null;
            self2._pannerAttr = {
              coneInnerAngle: typeof o.coneInnerAngle !== "undefined" ? o.coneInnerAngle : 360,
              coneOuterAngle: typeof o.coneOuterAngle !== "undefined" ? o.coneOuterAngle : 360,
              coneOuterGain: typeof o.coneOuterGain !== "undefined" ? o.coneOuterGain : 0,
              distanceModel: typeof o.distanceModel !== "undefined" ? o.distanceModel : "inverse",
              maxDistance: typeof o.maxDistance !== "undefined" ? o.maxDistance : 1e4,
              panningModel: typeof o.panningModel !== "undefined" ? o.panningModel : "HRTF",
              refDistance: typeof o.refDistance !== "undefined" ? o.refDistance : 1,
              rolloffFactor: typeof o.rolloffFactor !== "undefined" ? o.rolloffFactor : 1
            };
            self2._onstereo = o.onstereo ? [{ fn: o.onstereo }] : [];
            self2._onpos = o.onpos ? [{ fn: o.onpos }] : [];
            self2._onorientation = o.onorientation ? [{ fn: o.onorientation }] : [];
            return _super.call(this, o);
          };
        }(Howl.prototype.init);
        Howl.prototype.stereo = function(pan, id) {
          var self2 = this;
          if (!self2._webAudio) {
            return self2;
          }
          if (self2._state !== "loaded") {
            self2._queue.push({
              event: "stereo",
              action: function() {
                self2.stereo(pan, id);
              }
            });
            return self2;
          }
          var pannerType = typeof Howler.ctx.createStereoPanner === "undefined" ? "spatial" : "stereo";
          if (typeof id === "undefined") {
            if (typeof pan === "number") {
              self2._stereo = pan;
              self2._pos = [pan, 0, 0];
            } else {
              return self2._stereo;
            }
          }
          var ids = self2._getSoundIds(id);
          for (var i = 0; i < ids.length; i++) {
            var sound = self2._soundById(ids[i]);
            if (sound) {
              if (typeof pan === "number") {
                sound._stereo = pan;
                sound._pos = [pan, 0, 0];
                if (sound._node) {
                  sound._pannerAttr.panningModel = "equalpower";
                  if (!sound._panner || !sound._panner.pan) {
                    setupPanner(sound, pannerType);
                  }
                  if (pannerType === "spatial") {
                    if (typeof sound._panner.positionX !== "undefined") {
                      sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);
                      sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);
                      sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);
                    } else {
                      sound._panner.setPosition(pan, 0, 0);
                    }
                  } else {
                    sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);
                  }
                }
                self2._emit("stereo", sound._id);
              } else {
                return sound._stereo;
              }
            }
          }
          return self2;
        };
        Howl.prototype.pos = function(x3, y4, z3, id) {
          var self2 = this;
          if (!self2._webAudio) {
            return self2;
          }
          if (self2._state !== "loaded") {
            self2._queue.push({
              event: "pos",
              action: function() {
                self2.pos(x3, y4, z3, id);
              }
            });
            return self2;
          }
          y4 = typeof y4 !== "number" ? 0 : y4;
          z3 = typeof z3 !== "number" ? -0.5 : z3;
          if (typeof id === "undefined") {
            if (typeof x3 === "number") {
              self2._pos = [x3, y4, z3];
            } else {
              return self2._pos;
            }
          }
          var ids = self2._getSoundIds(id);
          for (var i = 0; i < ids.length; i++) {
            var sound = self2._soundById(ids[i]);
            if (sound) {
              if (typeof x3 === "number") {
                sound._pos = [x3, y4, z3];
                if (sound._node) {
                  if (!sound._panner || sound._panner.pan) {
                    setupPanner(sound, "spatial");
                  }
                  if (typeof sound._panner.positionX !== "undefined") {
                    sound._panner.positionX.setValueAtTime(x3, Howler.ctx.currentTime);
                    sound._panner.positionY.setValueAtTime(y4, Howler.ctx.currentTime);
                    sound._panner.positionZ.setValueAtTime(z3, Howler.ctx.currentTime);
                  } else {
                    sound._panner.setPosition(x3, y4, z3);
                  }
                }
                self2._emit("pos", sound._id);
              } else {
                return sound._pos;
              }
            }
          }
          return self2;
        };
        Howl.prototype.orientation = function(x3, y4, z3, id) {
          var self2 = this;
          if (!self2._webAudio) {
            return self2;
          }
          if (self2._state !== "loaded") {
            self2._queue.push({
              event: "orientation",
              action: function() {
                self2.orientation(x3, y4, z3, id);
              }
            });
            return self2;
          }
          y4 = typeof y4 !== "number" ? self2._orientation[1] : y4;
          z3 = typeof z3 !== "number" ? self2._orientation[2] : z3;
          if (typeof id === "undefined") {
            if (typeof x3 === "number") {
              self2._orientation = [x3, y4, z3];
            } else {
              return self2._orientation;
            }
          }
          var ids = self2._getSoundIds(id);
          for (var i = 0; i < ids.length; i++) {
            var sound = self2._soundById(ids[i]);
            if (sound) {
              if (typeof x3 === "number") {
                sound._orientation = [x3, y4, z3];
                if (sound._node) {
                  if (!sound._panner) {
                    if (!sound._pos) {
                      sound._pos = self2._pos || [0, 0, -0.5];
                    }
                    setupPanner(sound, "spatial");
                  }
                  if (typeof sound._panner.orientationX !== "undefined") {
                    sound._panner.orientationX.setValueAtTime(x3, Howler.ctx.currentTime);
                    sound._panner.orientationY.setValueAtTime(y4, Howler.ctx.currentTime);
                    sound._panner.orientationZ.setValueAtTime(z3, Howler.ctx.currentTime);
                  } else {
                    sound._panner.setOrientation(x3, y4, z3);
                  }
                }
                self2._emit("orientation", sound._id);
              } else {
                return sound._orientation;
              }
            }
          }
          return self2;
        };
        Howl.prototype.pannerAttr = function() {
          var self2 = this;
          var args = arguments;
          var o, id, sound;
          if (!self2._webAudio) {
            return self2;
          }
          if (args.length === 0) {
            return self2._pannerAttr;
          } else if (args.length === 1) {
            if (typeof args[0] === "object") {
              o = args[0];
              if (typeof id === "undefined") {
                if (!o.pannerAttr) {
                  o.pannerAttr = {
                    coneInnerAngle: o.coneInnerAngle,
                    coneOuterAngle: o.coneOuterAngle,
                    coneOuterGain: o.coneOuterGain,
                    distanceModel: o.distanceModel,
                    maxDistance: o.maxDistance,
                    refDistance: o.refDistance,
                    rolloffFactor: o.rolloffFactor,
                    panningModel: o.panningModel
                  };
                }
                self2._pannerAttr = {
                  coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== "undefined" ? o.pannerAttr.coneInnerAngle : self2._coneInnerAngle,
                  coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== "undefined" ? o.pannerAttr.coneOuterAngle : self2._coneOuterAngle,
                  coneOuterGain: typeof o.pannerAttr.coneOuterGain !== "undefined" ? o.pannerAttr.coneOuterGain : self2._coneOuterGain,
                  distanceModel: typeof o.pannerAttr.distanceModel !== "undefined" ? o.pannerAttr.distanceModel : self2._distanceModel,
                  maxDistance: typeof o.pannerAttr.maxDistance !== "undefined" ? o.pannerAttr.maxDistance : self2._maxDistance,
                  refDistance: typeof o.pannerAttr.refDistance !== "undefined" ? o.pannerAttr.refDistance : self2._refDistance,
                  rolloffFactor: typeof o.pannerAttr.rolloffFactor !== "undefined" ? o.pannerAttr.rolloffFactor : self2._rolloffFactor,
                  panningModel: typeof o.pannerAttr.panningModel !== "undefined" ? o.pannerAttr.panningModel : self2._panningModel
                };
              }
            } else {
              sound = self2._soundById(parseInt(args[0], 10));
              return sound ? sound._pannerAttr : self2._pannerAttr;
            }
          } else if (args.length === 2) {
            o = args[0];
            id = parseInt(args[1], 10);
          }
          var ids = self2._getSoundIds(id);
          for (var i = 0; i < ids.length; i++) {
            sound = self2._soundById(ids[i]);
            if (sound) {
              var pa = sound._pannerAttr;
              pa = {
                coneInnerAngle: typeof o.coneInnerAngle !== "undefined" ? o.coneInnerAngle : pa.coneInnerAngle,
                coneOuterAngle: typeof o.coneOuterAngle !== "undefined" ? o.coneOuterAngle : pa.coneOuterAngle,
                coneOuterGain: typeof o.coneOuterGain !== "undefined" ? o.coneOuterGain : pa.coneOuterGain,
                distanceModel: typeof o.distanceModel !== "undefined" ? o.distanceModel : pa.distanceModel,
                maxDistance: typeof o.maxDistance !== "undefined" ? o.maxDistance : pa.maxDistance,
                refDistance: typeof o.refDistance !== "undefined" ? o.refDistance : pa.refDistance,
                rolloffFactor: typeof o.rolloffFactor !== "undefined" ? o.rolloffFactor : pa.rolloffFactor,
                panningModel: typeof o.panningModel !== "undefined" ? o.panningModel : pa.panningModel
              };
              var panner = sound._panner;
              if (panner) {
                panner.coneInnerAngle = pa.coneInnerAngle;
                panner.coneOuterAngle = pa.coneOuterAngle;
                panner.coneOuterGain = pa.coneOuterGain;
                panner.distanceModel = pa.distanceModel;
                panner.maxDistance = pa.maxDistance;
                panner.refDistance = pa.refDistance;
                panner.rolloffFactor = pa.rolloffFactor;
                panner.panningModel = pa.panningModel;
              } else {
                if (!sound._pos) {
                  sound._pos = self2._pos || [0, 0, -0.5];
                }
                setupPanner(sound, "spatial");
              }
            }
          }
          return self2;
        };
        Sound.prototype.init = function(_super) {
          return function() {
            var self2 = this;
            var parent = self2._parent;
            self2._orientation = parent._orientation;
            self2._stereo = parent._stereo;
            self2._pos = parent._pos;
            self2._pannerAttr = parent._pannerAttr;
            _super.call(this);
            if (self2._stereo) {
              parent.stereo(self2._stereo);
            } else if (self2._pos) {
              parent.pos(self2._pos[0], self2._pos[1], self2._pos[2], self2._id);
            }
          };
        }(Sound.prototype.init);
        Sound.prototype.reset = function(_super) {
          return function() {
            var self2 = this;
            var parent = self2._parent;
            self2._orientation = parent._orientation;
            self2._stereo = parent._stereo;
            self2._pos = parent._pos;
            self2._pannerAttr = parent._pannerAttr;
            if (self2._stereo) {
              parent.stereo(self2._stereo);
            } else if (self2._pos) {
              parent.pos(self2._pos[0], self2._pos[1], self2._pos[2], self2._id);
            } else if (self2._panner) {
              self2._panner.disconnect(0);
              self2._panner = void 0;
              parent._refreshBuffer(self2);
            }
            return _super.call(this);
          };
        }(Sound.prototype.reset);
        var setupPanner = function(sound, type) {
          type = type || "spatial";
          if (type === "spatial") {
            sound._panner = Howler.ctx.createPanner();
            sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;
            sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;
            sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;
            sound._panner.distanceModel = sound._pannerAttr.distanceModel;
            sound._panner.maxDistance = sound._pannerAttr.maxDistance;
            sound._panner.refDistance = sound._pannerAttr.refDistance;
            sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;
            sound._panner.panningModel = sound._pannerAttr.panningModel;
            if (typeof sound._panner.positionX !== "undefined") {
              sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);
              sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);
              sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);
            } else {
              sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);
            }
            if (typeof sound._panner.orientationX !== "undefined") {
              sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);
              sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);
              sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);
            } else {
              sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);
            }
          } else {
            sound._panner = Howler.ctx.createStereoPanner();
            sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);
          }
          sound._panner.connect(sound._node);
          if (!sound._paused) {
            sound._parent.pause(sound._id, true).play(sound._id, true);
          }
        };
      })();
    }
  });

  // node_modules/device-decoder/dist/device.frontend.esm.js
  var __create2 = Object.create;
  var __defProp2 = Object.defineProperty;
  var __getOwnPropDesc2 = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames2 = Object.getOwnPropertyNames;
  var __getProtoOf2 = Object.getPrototypeOf;
  var __hasOwnProp2 = Object.prototype.hasOwnProperty;
  var __require2 = ((x3) => typeof __require !== "undefined" ? __require : typeof Proxy !== "undefined" ? new Proxy(x3, { get: (a, b2) => (typeof __require !== "undefined" ? __require : a)[b2] }) : x3)(function(x3) {
    if (typeof __require !== "undefined")
      return __require.apply(this, arguments);
    throw new Error('Dynamic require of "' + x3 + '" is not supported');
  });
  var __esm = (fn, res) => function __init() {
    return fn && (res = (0, fn[__getOwnPropNames2(fn)[0]])(fn = 0)), res;
  };
  var __commonJS2 = (cb, mod) => function __require32() {
    return mod || (0, cb[__getOwnPropNames2(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __export2 = (target, all) => {
    for (var name3 in all)
      __defProp2(target, name3, { get: all[name3], enumerable: true });
  };
  var __copyProps2 = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames2(from))
        if (!__hasOwnProp2.call(to, key) && key !== except)
          __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: true }) : target, mod));
  var createCapacitorPlatforms;
  var initPlatforms;
  var CapacitorPlatforms;
  var addPlatform;
  var setPlatform;
  var ExceptionCode;
  var CapacitorException;
  var getPlatformId;
  var createCapacitor;
  var initCapacitorGlobal;
  var Capacitor;
  var registerPlugin;
  var Plugins;
  var WebPlugin;
  var init_dist = __esm({ "src/ble/node_modules/@capacitor/core/dist/index.js"() {
    createCapacitorPlatforms = (win) => {
      const defaultPlatformMap = /* @__PURE__ */ new Map();
      defaultPlatformMap.set("web", { name: "web" });
      const capPlatforms = win.CapacitorPlatforms || { currentPlatform: { name: "web" }, platforms: defaultPlatformMap };
      const addPlatform2 = (name3, platform) => {
        capPlatforms.platforms.set(name3, platform);
      };
      const setPlatform2 = (name3) => {
        if (capPlatforms.platforms.has(name3)) {
          capPlatforms.currentPlatform = capPlatforms.platforms.get(name3);
        }
      };
      capPlatforms.addPlatform = addPlatform2;
      capPlatforms.setPlatform = setPlatform2;
      return capPlatforms;
    };
    initPlatforms = (win) => win.CapacitorPlatforms = createCapacitorPlatforms(win);
    CapacitorPlatforms = initPlatforms(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {});
    addPlatform = CapacitorPlatforms.addPlatform;
    setPlatform = CapacitorPlatforms.setPlatform;
    (function(ExceptionCode2) {
      ExceptionCode2["Unimplemented"] = "UNIMPLEMENTED";
      ExceptionCode2["Unavailable"] = "UNAVAILABLE";
    })(ExceptionCode || (ExceptionCode = {}));
    CapacitorException = class extends Error {
      constructor(message4, code, data) {
        super(message4);
        this.message = message4;
        this.code = code;
        this.data = data;
      }
    };
    getPlatformId = (win) => {
      var _a, _b;
      if (win === null || win === void 0 ? void 0 : win.androidBridge) {
        return "android";
      } else if ((_b = (_a = win === null || win === void 0 ? void 0 : win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {
        return "ios";
      } else {
        return "web";
      }
    };
    createCapacitor = (win) => {
      var _a, _b, _c, _d, _e;
      const capCustomPlatform = win.CapacitorCustomPlatform || null;
      const cap = win.Capacitor || {};
      const Plugins2 = cap.Plugins = cap.Plugins || {};
      const capPlatforms = win.CapacitorPlatforms;
      const defaultGetPlatform = () => {
        return capCustomPlatform !== null ? capCustomPlatform.name : getPlatformId(win);
      };
      const getPlatform = ((_a = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _a === void 0 ? void 0 : _a.getPlatform) || defaultGetPlatform;
      const defaultIsNativePlatform = () => getPlatform() !== "web";
      const isNativePlatform = ((_b = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _b === void 0 ? void 0 : _b.isNativePlatform) || defaultIsNativePlatform;
      const defaultIsPluginAvailable = (pluginName) => {
        const plugin = registeredPlugins.get(pluginName);
        if (plugin === null || plugin === void 0 ? void 0 : plugin.platforms.has(getPlatform())) {
          return true;
        }
        if (getPluginHeader(pluginName)) {
          return true;
        }
        return false;
      };
      const isPluginAvailable = ((_c = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _c === void 0 ? void 0 : _c.isPluginAvailable) || defaultIsPluginAvailable;
      const defaultGetPluginHeader = (pluginName) => {
        var _a2;
        return (_a2 = cap.PluginHeaders) === null || _a2 === void 0 ? void 0 : _a2.find((h) => h.name === pluginName);
      };
      const getPluginHeader = ((_d = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _d === void 0 ? void 0 : _d.getPluginHeader) || defaultGetPluginHeader;
      const handleError = (err) => win.console.error(err);
      const pluginMethodNoop = (_target, prop, pluginName) => {
        return Promise.reject(`${pluginName} does not have an implementation of "${prop}".`);
      };
      const registeredPlugins = /* @__PURE__ */ new Map();
      const defaultRegisterPlugin = (pluginName, jsImplementations = {}) => {
        const registeredPlugin = registeredPlugins.get(pluginName);
        if (registeredPlugin) {
          console.warn(`Capacitor plugin "${pluginName}" already registered. Cannot register plugins twice.`);
          return registeredPlugin.proxy;
        }
        const platform = getPlatform();
        const pluginHeader = getPluginHeader(pluginName);
        let jsImplementation;
        const loadPluginImplementation = async () => {
          if (!jsImplementation && platform in jsImplementations) {
            jsImplementation = typeof jsImplementations[platform] === "function" ? jsImplementation = await jsImplementations[platform]() : jsImplementation = jsImplementations[platform];
          } else if (capCustomPlatform !== null && !jsImplementation && "web" in jsImplementations) {
            jsImplementation = typeof jsImplementations["web"] === "function" ? jsImplementation = await jsImplementations["web"]() : jsImplementation = jsImplementations["web"];
          }
          return jsImplementation;
        };
        const createPluginMethod = (impl, prop) => {
          var _a2, _b2;
          if (pluginHeader) {
            const methodHeader = pluginHeader === null || pluginHeader === void 0 ? void 0 : pluginHeader.methods.find((m) => prop === m.name);
            if (methodHeader) {
              if (methodHeader.rtype === "promise") {
                return (options) => cap.nativePromise(pluginName, prop.toString(), options);
              } else {
                return (options, callback) => cap.nativeCallback(pluginName, prop.toString(), options, callback);
              }
            } else if (impl) {
              return (_a2 = impl[prop]) === null || _a2 === void 0 ? void 0 : _a2.bind(impl);
            }
          } else if (impl) {
            return (_b2 = impl[prop]) === null || _b2 === void 0 ? void 0 : _b2.bind(impl);
          } else {
            throw new CapacitorException(`"${pluginName}" plugin is not implemented on ${platform}`, ExceptionCode.Unimplemented);
          }
        };
        const createPluginMethodWrapper = (prop) => {
          let remove;
          const wrapper = (...args) => {
            const p = loadPluginImplementation().then((impl) => {
              const fn = createPluginMethod(impl, prop);
              if (fn) {
                const p2 = fn(...args);
                remove = p2 === null || p2 === void 0 ? void 0 : p2.remove;
                return p2;
              } else {
                throw new CapacitorException(`"${pluginName}.${prop}()" is not implemented on ${platform}`, ExceptionCode.Unimplemented);
              }
            });
            if (prop === "addListener") {
              p.remove = async () => remove();
            }
            return p;
          };
          wrapper.toString = () => `${prop.toString()}() { [capacitor code] }`;
          Object.defineProperty(wrapper, "name", { value: prop, writable: false, configurable: false });
          return wrapper;
        };
        const addListener = createPluginMethodWrapper("addListener");
        const removeListener = createPluginMethodWrapper("removeListener");
        const addListenerNative = (eventName, callback) => {
          const call = addListener({ eventName }, callback);
          const remove = async () => {
            const callbackId = await call;
            removeListener({ eventName, callbackId }, callback);
          };
          const p = new Promise((resolve) => call.then(() => resolve({ remove })));
          p.remove = async () => {
            console.warn(`Using addListener() without 'await' is deprecated.`);
            await remove();
          };
          return p;
        };
        const proxy = new Proxy({}, { get(_2, prop) {
          switch (prop) {
            case "$$typeof":
              return void 0;
            case "toJSON":
              return () => ({});
            case "addListener":
              return pluginHeader ? addListenerNative : addListener;
            case "removeListener":
              return removeListener;
            default:
              return createPluginMethodWrapper(prop);
          }
        } });
        Plugins2[pluginName] = proxy;
        registeredPlugins.set(pluginName, { name: pluginName, proxy, platforms: /* @__PURE__ */ new Set([...Object.keys(jsImplementations), ...pluginHeader ? [platform] : []]) });
        return proxy;
      };
      const registerPlugin2 = ((_e = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _e === void 0 ? void 0 : _e.registerPlugin) || defaultRegisterPlugin;
      if (!cap.convertFileSrc) {
        cap.convertFileSrc = (filePath) => filePath;
      }
      cap.getPlatform = getPlatform;
      cap.handleError = handleError;
      cap.isNativePlatform = isNativePlatform;
      cap.isPluginAvailable = isPluginAvailable;
      cap.pluginMethodNoop = pluginMethodNoop;
      cap.registerPlugin = registerPlugin2;
      cap.Exception = CapacitorException;
      cap.DEBUG = !!cap.DEBUG;
      cap.isLoggingEnabled = !!cap.isLoggingEnabled;
      cap.platform = cap.getPlatform();
      cap.isNative = cap.isNativePlatform();
      return cap;
    };
    initCapacitorGlobal = (win) => win.Capacitor = createCapacitor(win);
    Capacitor = initCapacitorGlobal(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {});
    registerPlugin = Capacitor.registerPlugin;
    Plugins = Capacitor.Plugins;
    WebPlugin = class {
      constructor(config) {
        this.listeners = {};
        this.windowListeners = {};
        if (config) {
          console.warn(`Capacitor WebPlugin "${config.name}" config object was deprecated in v3 and will be removed in v4.`);
          this.config = config;
        }
      }
      addListener(eventName, listenerFunc) {
        const listeners = this.listeners[eventName];
        if (!listeners) {
          this.listeners[eventName] = [];
        }
        this.listeners[eventName].push(listenerFunc);
        const windowListener = this.windowListeners[eventName];
        if (windowListener && !windowListener.registered) {
          this.addWindowListener(windowListener);
        }
        const remove = async () => this.removeListener(eventName, listenerFunc);
        const p = Promise.resolve({ remove });
        Object.defineProperty(p, "remove", { value: async () => {
          console.warn(`Using addListener() without 'await' is deprecated.`);
          await remove();
        } });
        return p;
      }
      async removeAllListeners() {
        this.listeners = {};
        for (const listener in this.windowListeners) {
          this.removeWindowListener(this.windowListeners[listener]);
        }
        this.windowListeners = {};
      }
      notifyListeners(eventName, data) {
        const listeners = this.listeners[eventName];
        if (listeners) {
          listeners.forEach((listener) => listener(data));
        }
      }
      hasListeners(eventName) {
        return !!this.listeners[eventName].length;
      }
      registerWindowListener(windowEventName, pluginEventName) {
        this.windowListeners[pluginEventName] = { registered: false, windowEventName, pluginEventName, handler: (event) => {
          this.notifyListeners(pluginEventName, event);
        } };
      }
      unimplemented(msg = "not implemented") {
        return new Capacitor.Exception(msg, ExceptionCode.Unimplemented);
      }
      unavailable(msg = "not available") {
        return new Capacitor.Exception(msg, ExceptionCode.Unavailable);
      }
      async removeListener(eventName, listenerFunc) {
        const listeners = this.listeners[eventName];
        if (!listeners) {
          return;
        }
        const index = listeners.indexOf(listenerFunc);
        this.listeners[eventName].splice(index, 1);
        if (!this.listeners[eventName].length) {
          this.removeWindowListener(this.windowListeners[eventName]);
        }
      }
      addWindowListener(handle) {
        window.addEventListener(handle.windowEventName, handle.handler);
        handle.registered = true;
      }
      removeWindowListener(handle) {
        if (!handle) {
          return;
        }
        window.removeEventListener(handle.windowEventName, handle.handler);
        handle.registered = false;
      }
    };
  } });
  function numbersToDataView(value) {
    return new DataView(Uint8Array.from(value).buffer);
  }
  function dataViewToNumbers(value) {
    return Array.from(new Uint8Array(value.buffer));
  }
  function numberToUUID(value) {
    return `0000${value.toString(16).padStart(4, "0")}-0000-1000-8000-00805f9b34fb`;
  }
  function hexStringToDataView(value) {
    const numbers = value.trim().split(" ").filter((e) => e !== "").map((s) => parseInt(s, 16));
    return numbersToDataView(numbers);
  }
  function dataViewToHexString(value) {
    return dataViewToNumbers(value).map((n) => {
      let s = n.toString(16);
      if (s.length == 1) {
        s = "0" + s;
      }
      return s;
    }).join(" ");
  }
  function webUUIDToString(uuid) {
    if (typeof uuid === "string") {
      return uuid;
    } else if (typeof uuid === "number") {
      return numberToUUID(uuid);
    } else {
      throw new Error("Invalid UUID");
    }
  }
  function mapToObject(map) {
    const obj = {};
    if (!map) {
      return void 0;
    }
    map.forEach((value, key) => {
      obj[key.toString()] = value;
    });
    return obj;
  }
  var init_conversion = __esm({ "src/ble/node_modules/@capacitor-community/bluetooth-le/dist/esm/conversion.js"() {
  } });
  async function runWithTimeout(promise, time, exception) {
    let timer;
    return Promise.race([promise, new Promise((_2, reject) => {
      timer = setTimeout(() => reject(exception), time);
    })]).finally(() => clearTimeout(timer));
  }
  var init_timeout = __esm({ "src/ble/node_modules/@capacitor-community/bluetooth-le/dist/esm/timeout.js"() {
  } });
  var web_exports = {};
  __export2(web_exports, { BluetoothLeWeb: () => BluetoothLeWeb });
  var BluetoothLeWeb;
  var init_web = __esm({ "src/ble/node_modules/@capacitor-community/bluetooth-le/dist/esm/web.js"() {
    init_dist();
    init_conversion();
    init_timeout();
    BluetoothLeWeb = class extends WebPlugin {
      constructor() {
        super(...arguments);
        this.deviceMap = /* @__PURE__ */ new Map();
        this.discoveredDevices = /* @__PURE__ */ new Map();
        this.scan = null;
        this.DEFAULT_CONNECTION_TIMEOUT = 1e4;
        this.onAdvertisementReceivedCallback = this.onAdvertisementReceived.bind(this);
        this.onDisconnectedCallback = this.onDisconnected.bind(this);
        this.onCharacteristicValueChangedCallback = this.onCharacteristicValueChanged.bind(this);
      }
      async initialize() {
        if (typeof navigator === "undefined" || !navigator.bluetooth) {
          throw this.unavailable("Web Bluetooth API not available in this browser.");
        }
        const isAvailable = await navigator.bluetooth.getAvailability();
        if (!isAvailable) {
          throw this.unavailable("No Bluetooth radio available.");
        }
      }
      async isEnabled() {
        return { value: true };
      }
      async enable() {
        throw this.unavailable("enable is not available on web.");
      }
      async disable() {
        throw this.unavailable("disable is not available on web.");
      }
      async startEnabledNotifications() {
      }
      async stopEnabledNotifications() {
      }
      async isLocationEnabled() {
        throw this.unavailable("isLocationEnabled is not available on web.");
      }
      async openLocationSettings() {
        throw this.unavailable("openLocationSettings is not available on web.");
      }
      async openBluetoothSettings() {
        throw this.unavailable("openBluetoothSettings is not available on web.");
      }
      async openAppSettings() {
        throw this.unavailable("openAppSettings is not available on web.");
      }
      async setDisplayStrings() {
      }
      async requestDevice(options) {
        const filters = this.getFilters(options);
        const device = await navigator.bluetooth.requestDevice({ filters: filters.length ? filters : void 0, optionalServices: options === null || options === void 0 ? void 0 : options.optionalServices, acceptAllDevices: filters.length === 0 });
        this.deviceMap.set(device.id, device);
        const bleDevice = this.getBleDevice(device);
        return bleDevice;
      }
      async requestLEScan(options) {
        this.requestBleDeviceOptions = options;
        const filters = this.getFilters(options);
        await this.stopLEScan();
        this.discoveredDevices = /* @__PURE__ */ new Map();
        navigator.bluetooth.removeEventListener("advertisementreceived", this.onAdvertisementReceivedCallback);
        navigator.bluetooth.addEventListener("advertisementreceived", this.onAdvertisementReceivedCallback);
        this.scan = await navigator.bluetooth.requestLEScan({ filters: filters.length ? filters : void 0, acceptAllAdvertisements: filters.length === 0, keepRepeatedDevices: options === null || options === void 0 ? void 0 : options.allowDuplicates });
      }
      onAdvertisementReceived(event) {
        var _a, _b;
        const deviceId = event.device.id;
        this.deviceMap.set(deviceId, event.device);
        const isNew = !this.discoveredDevices.has(deviceId);
        if (isNew || ((_a = this.requestBleDeviceOptions) === null || _a === void 0 ? void 0 : _a.allowDuplicates)) {
          this.discoveredDevices.set(deviceId, true);
          const device = this.getBleDevice(event.device);
          const result = { device, localName: device.name, rssi: event.rssi, txPower: event.txPower, manufacturerData: mapToObject(event.manufacturerData), serviceData: mapToObject(event.serviceData), uuids: (_b = event.uuids) === null || _b === void 0 ? void 0 : _b.map(webUUIDToString) };
          this.notifyListeners("onScanResult", result);
        }
      }
      async stopLEScan() {
        var _a;
        if ((_a = this.scan) === null || _a === void 0 ? void 0 : _a.active) {
          this.scan.stop();
        }
        this.scan = null;
      }
      async getDevices(_options) {
        const devices = await navigator.bluetooth.getDevices();
        const bleDevices = devices.map((device) => {
          this.deviceMap.set(device.id, device);
          const bleDevice = this.getBleDevice(device);
          return bleDevice;
        });
        return { devices: bleDevices };
      }
      async getConnectedDevices(_options) {
        const devices = await navigator.bluetooth.getDevices();
        const bleDevices = devices.filter((device) => {
          var _a;
          return (_a = device.gatt) === null || _a === void 0 ? void 0 : _a.connected;
        }).map((device) => {
          this.deviceMap.set(device.id, device);
          const bleDevice = this.getBleDevice(device);
          return bleDevice;
        });
        return { devices: bleDevices };
      }
      async connect(options) {
        var _a, _b;
        const device = this.getDeviceFromMap(options.deviceId);
        device.removeEventListener("gattserverdisconnected", this.onDisconnectedCallback);
        device.addEventListener("gattserverdisconnected", this.onDisconnectedCallback);
        const timeoutError = Symbol();
        if (device.gatt === void 0) {
          throw new Error("No gatt server available.");
        }
        try {
          const timeout = (_a = options.timeout) !== null && _a !== void 0 ? _a : this.DEFAULT_CONNECTION_TIMEOUT;
          await runWithTimeout(device.gatt.connect(), timeout, timeoutError);
        } catch (error) {
          await ((_b = device.gatt) === null || _b === void 0 ? void 0 : _b.disconnect());
          if (error === timeoutError) {
            throw new Error("Connection timeout");
          } else {
            throw error;
          }
        }
      }
      onDisconnected(event) {
        const deviceId = event.target.id;
        const key = `disconnected|${deviceId}`;
        this.notifyListeners(key, null);
      }
      async createBond(_options) {
        throw this.unavailable("createBond is not available on web.");
      }
      async isBonded(_options) {
        throw this.unavailable("isBonded is not available on web.");
      }
      async disconnect(options) {
        var _a;
        (_a = this.getDeviceFromMap(options.deviceId).gatt) === null || _a === void 0 ? void 0 : _a.disconnect();
      }
      async getServices(options) {
        var _a, _b;
        const services = (_b = await ((_a = this.getDeviceFromMap(options.deviceId).gatt) === null || _a === void 0 ? void 0 : _a.getPrimaryServices())) !== null && _b !== void 0 ? _b : [];
        const bleServices = [];
        for (const service of services) {
          const characteristics = await service.getCharacteristics();
          const bleCharacteristics = [];
          for (const characteristic of characteristics) {
            bleCharacteristics.push({ uuid: characteristic.uuid, properties: this.getProperties(characteristic), descriptors: await this.getDescriptors(characteristic) });
          }
          bleServices.push({ uuid: service.uuid, characteristics: bleCharacteristics });
        }
        return { services: bleServices };
      }
      async getDescriptors(characteristic) {
        try {
          const descriptors = await characteristic.getDescriptors();
          return descriptors.map((descriptor) => ({ uuid: descriptor.uuid }));
        } catch (_a) {
          return [];
        }
      }
      getProperties(characteristic) {
        return { broadcast: characteristic.properties.broadcast, read: characteristic.properties.read, writeWithoutResponse: characteristic.properties.writeWithoutResponse, write: characteristic.properties.write, notify: characteristic.properties.notify, indicate: characteristic.properties.indicate, authenticatedSignedWrites: characteristic.properties.authenticatedSignedWrites, reliableWrite: characteristic.properties.reliableWrite, writableAuxiliaries: characteristic.properties.writableAuxiliaries };
      }
      async getCharacteristic(options) {
        var _a;
        const service = await ((_a = this.getDeviceFromMap(options.deviceId).gatt) === null || _a === void 0 ? void 0 : _a.getPrimaryService(options === null || options === void 0 ? void 0 : options.service));
        return service === null || service === void 0 ? void 0 : service.getCharacteristic(options === null || options === void 0 ? void 0 : options.characteristic);
      }
      async getDescriptor(options) {
        const characteristic = await this.getCharacteristic(options);
        return characteristic === null || characteristic === void 0 ? void 0 : characteristic.getDescriptor(options === null || options === void 0 ? void 0 : options.descriptor);
      }
      async readRssi(_options) {
        throw this.unavailable("readRssi is not available on web.");
      }
      async read(options) {
        const characteristic = await this.getCharacteristic(options);
        const value = await (characteristic === null || characteristic === void 0 ? void 0 : characteristic.readValue());
        return { value };
      }
      async write(options) {
        const characteristic = await this.getCharacteristic(options);
        let dataView;
        if (typeof options.value === "string") {
          dataView = hexStringToDataView(options.value);
        } else {
          dataView = options.value;
        }
        await (characteristic === null || characteristic === void 0 ? void 0 : characteristic.writeValueWithResponse(dataView));
      }
      async writeWithoutResponse(options) {
        const characteristic = await this.getCharacteristic(options);
        let dataView;
        if (typeof options.value === "string") {
          dataView = hexStringToDataView(options.value);
        } else {
          dataView = options.value;
        }
        await (characteristic === null || characteristic === void 0 ? void 0 : characteristic.writeValueWithoutResponse(dataView));
      }
      async readDescriptor(options) {
        const descriptor = await this.getDescriptor(options);
        const value = await (descriptor === null || descriptor === void 0 ? void 0 : descriptor.readValue());
        return { value };
      }
      async writeDescriptor(options) {
        const descriptor = await this.getDescriptor(options);
        let dataView;
        if (typeof options.value === "string") {
          dataView = hexStringToDataView(options.value);
        } else {
          dataView = options.value;
        }
        await (descriptor === null || descriptor === void 0 ? void 0 : descriptor.writeValue(dataView));
      }
      async startNotifications(options) {
        const characteristic = await this.getCharacteristic(options);
        characteristic === null || characteristic === void 0 ? void 0 : characteristic.removeEventListener("characteristicvaluechanged", this.onCharacteristicValueChangedCallback);
        characteristic === null || characteristic === void 0 ? void 0 : characteristic.addEventListener("characteristicvaluechanged", this.onCharacteristicValueChangedCallback);
        await (characteristic === null || characteristic === void 0 ? void 0 : characteristic.startNotifications());
      }
      onCharacteristicValueChanged(event) {
        var _a, _b;
        const characteristic = event.target;
        const key = `notification|${(_a = characteristic.service) === null || _a === void 0 ? void 0 : _a.device.id}|${(_b = characteristic.service) === null || _b === void 0 ? void 0 : _b.uuid}|${characteristic.uuid}`;
        this.notifyListeners(key, { value: characteristic.value });
      }
      async stopNotifications(options) {
        const characteristic = await this.getCharacteristic(options);
        await (characteristic === null || characteristic === void 0 ? void 0 : characteristic.stopNotifications());
      }
      getFilters(options) {
        var _a;
        const filters = [];
        for (const service of (_a = options === null || options === void 0 ? void 0 : options.services) !== null && _a !== void 0 ? _a : []) {
          filters.push({ services: [service], name: options === null || options === void 0 ? void 0 : options.name, namePrefix: options === null || options === void 0 ? void 0 : options.namePrefix });
        }
        if (((options === null || options === void 0 ? void 0 : options.name) || (options === null || options === void 0 ? void 0 : options.namePrefix)) && filters.length === 0) {
          filters.push({ name: options.name, namePrefix: options.namePrefix });
        }
        return filters;
      }
      getDeviceFromMap(deviceId) {
        const device = this.deviceMap.get(deviceId);
        if (device === void 0) {
          throw new Error('Device not found. Call "requestDevice", "requestLEScan" or "getDevices" first.');
        }
        return device;
      }
      getBleDevice(device) {
        var _a;
        const bleDevice = { deviceId: device.id, name: (_a = device.name) !== null && _a !== void 0 ? _a : void 0 };
        return bleDevice;
      }
    };
  } });
  var require_throat = __commonJS2({ "src/ble/node_modules/throat/index.js"(exports, module2) {
    "use strict";
    function throatInternal(size) {
      var queue = new Queue();
      var s = size | 0;
      function run(fn, self2, args) {
        if ((s | 0) !== 0) {
          s = (s | 0) - 1;
          return new Promise(function(resolve) {
            resolve(fn.apply(self2, args));
          }).then(onFulfill, onReject);
        }
        return new Promise(function(resolve) {
          queue.push(new Delayed(resolve, fn, self2, args));
        }).then(runDelayed);
      }
      function runDelayed(d2) {
        try {
          return Promise.resolve(d2.fn.apply(d2.self, d2.args)).then(onFulfill, onReject);
        } catch (ex) {
          onReject(ex);
        }
      }
      function onFulfill(result) {
        release();
        return result;
      }
      function onReject(error) {
        release();
        throw error;
      }
      function release() {
        var next = queue.shift();
        if (next) {
          next.resolve(next);
        } else {
          s = (s | 0) + 1;
        }
      }
      return run;
    }
    function earlyBound(size, fn) {
      const run = throatInternal(size | 0);
      return function() {
        var args = new Array(arguments.length);
        for (var i = 0; i < arguments.length; i++) {
          args[i] = arguments[i];
        }
        return run(fn, this, args);
      };
    }
    function lateBound(size) {
      const run = throatInternal(size | 0);
      return function(fn) {
        if (typeof fn !== "function") {
          throw new TypeError("Expected throat fn to be a function but got " + typeof fn);
        }
        var args = new Array(arguments.length - 1);
        for (var i = 1; i < arguments.length; i++) {
          args[i - 1] = arguments[i];
        }
        return run(fn, this, args);
      };
    }
    module2.exports = function throat2(size, fn) {
      if (typeof size === "function") {
        var temp = fn;
        fn = size;
        size = temp;
      }
      if (typeof size !== "number") {
        throw new TypeError("Expected throat size to be a number but got " + typeof size);
      }
      if (fn !== void 0 && typeof fn !== "function") {
        throw new TypeError("Expected throat fn to be a function but got " + typeof fn);
      }
      if (typeof fn === "function") {
        return earlyBound(size | 0, fn);
      } else {
        return lateBound(size | 0);
      }
    };
    module2.exports.default = module2.exports;
    function Delayed(resolve, fn, self2, args) {
      this.resolve = resolve;
      this.fn = fn;
      this.self = self2 || null;
      this.args = args;
    }
    var blockSize = 64;
    function Queue() {
      this._s1 = [];
      this._s2 = [];
      this._shiftBlock = this._pushBlock = new Array(blockSize);
      this._pushIndex = 0;
      this._shiftIndex = 0;
    }
    Queue.prototype.push = function(value) {
      if (this._pushIndex === blockSize) {
        this._pushIndex = 0;
        this._s1[this._s1.length] = this._pushBlock = new Array(blockSize);
      }
      this._pushBlock[this._pushIndex++] = value;
    };
    Queue.prototype.shift = function() {
      if (this._shiftIndex === blockSize) {
        this._shiftIndex = 0;
        var s2 = this._s2;
        if (s2.length === 0) {
          var s1 = this._s1;
          if (s1.length === 0) {
            return void 0;
          }
          this._s1 = s2;
          s2 = this._s2 = s1.reverse();
        }
        this._shiftBlock = s2.pop();
      }
      if (this._pushBlock === this._shiftBlock && this._pushIndex === this._shiftIndex) {
        return void 0;
      }
      var result = this._shiftBlock[this._shiftIndex];
      this._shiftBlock[this._shiftIndex++] = null;
      return result;
    };
  } });
  var __create22 = Object.create;
  var __defProp22 = Object.defineProperty;
  var __getOwnPropDesc22 = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames22 = Object.getOwnPropertyNames;
  var __getProtoOf22 = Object.getPrototypeOf;
  var __hasOwnProp22 = Object.prototype.hasOwnProperty;
  var __require22 = ((x3) => typeof __require2 !== "undefined" ? __require2 : typeof Proxy !== "undefined" ? new Proxy(x3, { get: (a, b2) => (typeof __require2 !== "undefined" ? __require2 : a)[b2] }) : x3)(function(x3) {
    if (typeof __require2 !== "undefined")
      return __require2.apply(this, arguments);
    throw new Error('Dynamic require of "' + x3 + '" is not supported');
  });
  var __commonJS22 = (cb, mod) => function __require222() {
    return mod || (0, cb[__getOwnPropNames22(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __copyProps22 = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames22(from))
        if (!__hasOwnProp22.call(to, key) && key !== except)
          __defProp22(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc22(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM22 = (mod, isNodeMode, target) => (target = mod != null ? __create22(__getProtoOf22(mod)) : {}, __copyProps22(isNodeMode || !mod || !mod.__esModule ? __defProp22(target, "default", { value: mod, enumerable: true }) : target, mod));
  var require_browser = __commonJS22({ "node_modules/web-worker/cjs/browser.js"(exports, module2) {
    module2.exports = Worker;
  } });
  var EventHandler = class {
    constructor(data) {
      this.pushToState = {};
      this.data = {};
      this.triggers = {};
      this.setState = (updateObj) => {
        Object.assign(this.data, updateObj);
        let props2 = Object.getOwnPropertyNames(updateObj);
        for (const prop of props2) {
          this.triggerEvent(prop, this.data[prop]);
        }
        return this.data;
      };
      this.setValue = (key, value) => {
        this.data[key] = value;
        this.triggerEvent(key, value);
      };
      this.triggerEvent = (key, value) => {
        if (this.triggers[key]) {
          let fn = (obj) => obj.onchange(value);
          this.triggers[key].forEach(fn);
        }
      };
      this.subscribeEvent = (key, onchange, refObject, refKey) => {
        if (key) {
          if (refObject && refKey && !this.triggers[key]) {
            Object.defineProperty(this.data, key, { get: () => {
              return refObject[refKey];
            }, set: (value) => {
              refObject[refKey] = value;
            }, enumerable: true, configurable: true });
          }
          if (!this.triggers[key]) {
            this.triggers[key] = [];
          }
          let l = this.triggers[key].length;
          this.triggers[key].push({ sub: l, onchange });
          return this.triggers[key].length - 1;
        } else
          return void 0;
      };
      this.unsubscribeEvent = (key, sub) => {
        let triggers = this.triggers[key];
        if (triggers) {
          if (!sub) {
            delete this.triggers[key];
            delete this.data[key];
          } else {
            let sub2 = void 0;
            let obj = triggers.find((o, i) => {
              if (o.sub === sub2) {
                sub2 = i;
                return true;
              }
            });
            if (obj)
              triggers.splice(sub2, 1);
            if (Object.keys(triggers).length === 0) {
              delete this.triggers[key];
              delete this.data[key];
            }
            if (this.onRemoved)
              this.onRemoved(obj);
            return true;
          }
        }
      };
      this.subscribeEventOnce = (key, onchange) => {
        let sub;
        let changed = (value) => {
          onchange(value);
          this.unsubscribeEvent(key, sub);
        };
        sub = this.subscribeEvent(key, changed);
      };
      this.getEvent = (key, sub) => {
        for (const s in this.triggers[key]) {
          if (this.triggers[key][s].sub === sub)
            return this.triggers[key][s];
        }
      };
      this.getSnapshot = () => {
        const snapshot = {};
        for (const key in this.data) {
          snapshot[key] = this.data[key];
        }
      };
      if (typeof data === "object")
        this.data = data;
    }
  };
  var state = new EventHandler();
  var GraphNode = class {
    constructor(properties, parent, graph) {
      this.__node = { tag: `node${Math.floor(Math.random() * 1e15)}`, unique: `${Math.floor(Math.random() * 1e15)}`, state };
      this.__setProperties = (properties2, parent2, graph2) => {
        let enforceProperties = () => {
          let orig = properties2;
          if (typeof properties2 === "function") {
            if (isNativeClass(properties2)) {
              properties2 = new properties2();
            } else
              properties2 = { __operator: properties2, __node: { forward: true, tag: properties2.name } };
          } else if (typeof properties2 === "string") {
            if (graph2?.get(properties2)) {
              properties2 = graph2.get(properties2);
            }
          }
          if (!properties2.__node.initial)
            properties2.__node.initial = orig;
        };
        enforceProperties();
        if (typeof properties2 === "object") {
          let assignState = () => {
            if (properties2.__node?.state)
              this.__node.state = properties2.__node.state;
          };
          let setProps22 = () => {
            if (properties2.__props) {
              if (typeof properties2.__props === "function")
                properties2.__props = new properties2.__props();
              if (typeof properties2.__props === "object") {
                this.__proxyObject(properties2.__props);
              }
            }
          };
          let setTag = () => {
            if (!properties2.__node.tag) {
              if (properties2.__operator?.name)
                properties2.__node.tag = properties2.__operator.name;
              else
                properties2.__node.tag = `node${Math.floor(Math.random() * 1e15)}`;
            }
          };
          let setNode = () => {
            if (typeof properties2.__node === "string") {
              if (graph2?.get(properties2.__node.tag)) {
                properties2 = graph2.get(properties2.__node.tag);
              } else
                properties2.__node = {};
            } else if (!properties2.__node)
              properties2.__node = {};
            if (graph2) {
              properties2.__node.graph = graph2;
            }
            if (properties2 instanceof Graph)
              properties2.__node.source = properties2;
          };
          let setParent = () => {
            if (!properties2.__parent && parent2)
              properties2.__parent = parent2;
            if (parent2?.__node && !(parent2 instanceof Graph || properties2 instanceof Graph))
              properties2.__node.tag = parent2.__node.tag + "." + properties2.__node.tag;
            if (parent2 instanceof Graph && properties2 instanceof Graph) {
              if (properties2.__node.loaders)
                Object.assign(parent2.__node.loaders ? parent2.__node.loaders : {}, properties2.__node.loaders);
              if (parent2.__node.mapGraphs) {
                properties2.__node.nodes.forEach((n) => {
                  parent2.set(properties2.__node.tag + "." + n.__node.tag, n);
                });
                let ondelete = () => {
                  properties2.__node.nodes.forEach((n) => {
                    parent2.__node.nodes.delete(properties2.__node.tag + "." + n.__node.tag);
                  });
                };
                this.__addOndisconnected(ondelete);
              }
            }
          };
          let setOp = () => {
            if (typeof properties2.default === "function" && !properties2.__operator) {
              properties2.__operator = properties2.default;
            }
            if (properties2.__operator) {
              if (typeof properties2.__operator === "string") {
                if (graph2) {
                  let n = graph2.get(properties2.__operator);
                  if (n)
                    properties2.__operator = n.__operator;
                  if (!properties2.__node.tag && properties2.__operator.name)
                    properties2.__node.tag = properties2.__operator.name;
                }
              }
              if (typeof properties2.__operator === "function")
                properties2.__operator = this.__setOperator(properties2.__operator);
              if (properties2.default)
                properties2.default = properties2.__operator;
            }
          };
          let assignProps = () => {
            properties2.__node = Object.assign(this.__node, properties2.__node);
            let keys = Object.getOwnPropertyNames(properties2);
            for (const key of keys) {
              this[key] = properties2[key];
            }
          };
          let bindCallbacks = () => {
            if (this.__onconnected) {
              if (typeof this.__onconnected === "function") {
                this.__onconnected = this.__onconnected.bind(this);
              } else if (Array.isArray(this.__onconnected)) {
                this.__onconnected = this.__onconnected.map((f) => {
                  return f.bind(this);
                });
              }
              if (typeof this.__ondisconnected === "function") {
                this.__ondisconnected = this.__ondisconnected.bind(this);
              } else if (Array.isArray(this.__ondisconnected)) {
                this.__ondisconnected = this.__ondisconnected.map((f) => {
                  return f.bind(this);
                });
              }
            }
          };
          assignState();
          setTag();
          setProps22();
          setNode();
          setParent();
          assignProps();
          bindCallbacks();
          setOp();
        }
      };
      this.__subscribe = (callback, key, subInput, bound, target) => {
        const subscribeToFunction = (k, setTarget = (callback2, target2) => callback2, triggerCallback = callback) => {
          let sub = this.__node.state.subscribeEvent(k, triggerCallback, this, key);
          let trigger = this.__node.state.getEvent(k, sub);
          trigger.source = this.__node.tag;
          if (key)
            trigger.key = key;
          trigger.target = setTarget(callback);
          if (bound)
            trigger.bound = bound;
          return sub;
        };
        const subscribeToGraph = (callback2) => {
          let fn = this.__node.graph.get(callback2);
          if (!fn && callback2.includes(".")) {
            let n = this.__node.graph.get(callback2.substring(0, callback2.lastIndexOf(".")));
            let key2 = callback2.substring(callback2.lastIndexOf(".") + 1);
            if (n && typeof n[key2] === "function")
              callback2 = (...args) => {
                return n[key2](...args);
              };
          }
        };
        if (key) {
          if (!this.__node.localState || !this.__node.localState[key]) {
            this.__addLocalState(this, key);
          }
          if (typeof callback === "string") {
            if (target) {
              if (this.__node.graph?.get(target)) {
                let n = this.__node.graph?.get(target);
                if (typeof n[callback] === "function") {
                  let fn = n[callback];
                  callback = (...inp) => {
                    fn(...inp);
                  };
                } else {
                  let k2 = callback;
                  let setter = (inp) => {
                    n[k2] = inp;
                  };
                  callback = setter;
                }
              }
            } else if (typeof this[callback] === "function") {
              let fn = this[callback];
              callback = (...inp) => {
                fn(...inp);
              };
            } else if (this.__node.graph?.get(callback))
              subscribeToGraph(callback);
            if (typeof callback !== "function")
              return void 0;
          }
          let sub;
          let k = subInput ? this.__node.unique + "." + key + "input" : this.__node.unique + "." + key;
          if (typeof callback === "function")
            sub = subscribeToFunction(k);
          else if (callback?.__node)
            sub = subscribeToFunction(k, (callback2, target2) => target2 ? target2 : callback2.__node.unique, (...inp) => {
              if (callback.__operator)
                callback.__operator(...inp);
            });
          return sub;
        } else {
          if (typeof callback === "string") {
            if (this.__node.graph.get(callback))
              callback = this.__node.graph.get(callback);
            if (typeof callback !== "object")
              return void 0;
          }
          let sub;
          let k = subInput ? this.__node.unique + "input" : this.__node.unique;
          if (typeof callback === "function")
            sub = subscribeToFunction(k);
          else if (callback?.__node)
            sub = subscribeToFunction(k, (callback2, target2) => target2 ? target2 : callback2.__node.unique, (...inp) => {
              if (callback.__operator)
                callback.__operator(...inp);
            });
          return sub;
        }
      };
      this.__unsubscribe = (sub, key, unsubInput) => {
        if (key)
          return this.__node.state.unsubscribeEvent(unsubInput ? this.__node.unique + "." + key + "input" : this.__node.unique + "." + key, sub);
        else
          return this.__node.state.unsubscribeEvent(unsubInput ? this.__node.unique + "input" : this.__node.unique, sub);
      };
      this.__setOperator = (fn) => {
        fn = fn.bind(this);
        if (this.__args && this.__node.graph) {
          fn = wrapArgs(fn, this.__args, this.__node.graph);
        }
        let inpstr = `${this.__node.unique}input`;
        this.__operator = (...args) => {
          if (this.__node.state.triggers[inpstr])
            this.__node.state.setValue(inpstr, args);
          let result = fn(...args);
          if (this.__node.state.triggers[this.__node.unique]) {
            if (typeof result?.then === "function") {
              result.then((res) => {
                if (res !== void 0)
                  this.__node.state.setValue(this.__node.unique, res);
              }).catch(console.error);
            } else if (result !== void 0)
              this.__node.state.setValue(this.__node.unique, result);
          }
          return result;
        };
        if (this.__parent instanceof GraphNode && !this.__subscribedToParent) {
          if (this.__parent.__operator) {
            let sub = this.__parent.__subscribe(this);
            let ondelete = () => {
              this.__parent?.__unsubscribe(sub);
              delete this.__subscribedToParent;
            };
            this.__addOndisconnected(ondelete);
            this.__subscribedToParent = true;
          }
        }
        return this.__operator;
      };
      this.__addLocalState = (props2, key) => {
        if (!props2)
          return;
        if (!this.__node.localState) {
          this.__node.localState = {};
        }
        const localState = this.__node.localState;
        const initState = (props22, k) => {
          let str22 = this.__node.unique + "." + k;
          let inpstr = `${str22}input`;
          if (typeof props22[k] === "function" && k !== "__operator") {
            let fn = props22[k].bind(this);
            props22[k] = (...args) => {
              if (this.__node.state.triggers[inpstr])
                this.__node.state.setValue(inpstr, args);
              let result = fn(...args);
              if (this.__node.state.triggers[str22]) {
                if (typeof result?.then === "function") {
                  result.then((res) => {
                    this.__node.state.triggerEvent(str22, res);
                  }).catch(console.error);
                } else
                  this.__node.state.triggerEvent(str22, result);
              }
              return result;
            };
          } else {
            let get, set;
            if (this.__props?.[k]) {
              get = () => {
                return this.__props[k];
              };
              set = (v2) => {
                this.__props[k] = v2;
                if (this.__node.state.triggers[str22])
                  this.__node.state.triggerEvent(str22, v2);
              };
            } else {
              localState[k] = props22[k];
              get = () => {
                return localState[k];
              };
              set = (v2) => {
                localState[k] = v2;
                if (this.__node.state.triggers[str22])
                  this.__node.state.triggerEvent(str22, v2);
              };
            }
            const descriptor = { get, set, enumerable: true, configurable: true };
            Object.defineProperty(props22, k, descriptor);
            if (typeof this.__node.initial === "object") {
              let dec = Object.getOwnPropertyDescriptor(this.__node.initial, k);
              if (dec === void 0 || dec?.configurable) {
                Object.defineProperty(this.__node.initial, k, descriptor);
              }
            }
          }
        };
        if (key)
          initState(props2, key);
        else {
          for (let k in props2) {
            initState(props2, k);
          }
        }
      };
      this.__proxyObject = (obj) => {
        const allProps = getAllProperties(obj);
        for (const k of allProps) {
          if (typeof obj[k] === "function") {
            this[k] = (...args) => {
              return obj[k](...args);
            };
          } else {
            const descriptor = { get: () => {
              return obj[k];
            }, set: (value) => {
              obj[k] = value;
            }, enumerable: true, configurable: true };
            Object.defineProperty(this, k, descriptor);
          }
        }
      };
      this.__setProperties(properties, parent, graph);
    }
    __addOnconnected(callback) {
      callback = callback.bind(this);
      if (Array.isArray(this.__onconnected)) {
        this.__onconnected.push(callback);
      } else if (typeof this.__onconnected === "function") {
        this.__onconnected = [callback, this.__onconnected];
      } else
        this.__onconnected = callback;
    }
    __addOndisconnected(callback) {
      callback = callback.bind(this);
      if (Array.isArray(this.__ondisconnected)) {
        this.__ondisconnected.push(callback);
      } else if (typeof this.__ondisconnected === "function") {
        this.__ondisconnected = [callback, this.__ondisconnected];
      } else
        this.__ondisconnected = callback;
    }
    __callConnected(node = this) {
      if (typeof this.__onconnected === "function") {
        this.__onconnected(this);
      } else if (Array.isArray(this.__onconnected)) {
        let fn = (o) => {
          o(this);
        };
        this.__onconnected.forEach(fn);
      }
    }
    __callDisconnected(node = this) {
      if (typeof this.__ondisconnected === "function")
        this.__ondisconnected(this);
      else if (Array.isArray(this.__ondisconnected)) {
        let fn = (o) => {
          o(this);
        };
        this.__ondisconnected.forEach(fn);
      }
    }
  };
  var Graph = class {
    constructor(options) {
      this.__node = { tag: `graph${Math.floor(Math.random() * 1e15)}`, unique: `${Math.random()}`, nodes: /* @__PURE__ */ new Map(), state, roots: {} };
      this.init = (options2) => {
        if (options2) {
          let cpy = Object.assign({}, options2);
          delete cpy.roots;
          recursivelyAssign(this.__node, cpy);
          if (options2.roots)
            this.load(options2.roots);
        }
      };
      this.load = (roots) => {
        function recursivelyAssignChildren(target, obj, inChildren = true, top = true) {
          if (top) {
            if (target)
              Object.assign(target, obj);
            else
              target = Object.assign({}, obj);
            recursivelyAssignChildren(target, obj, true, false);
          }
          if (obj.__children && !inChildren) {
            if (obj.__children?.constructor.name === "Object") {
              if (target.__children?.constructor.name === "Object")
                recursivelyAssignChildren(target.__children, obj.__children, true, false);
              else
                target.__children = recursivelyAssignChildren({}, obj.__children, true, false);
            } else {
              target.__children = obj.__children;
            }
          } else if (inChildren) {
            for (const key in obj) {
              target[key] = Object.assign({}, obj[key]);
              if (obj[key].__children) {
                recursivelyAssignChildren({}, obj[key].__children, false, false);
              }
            }
          }
          return target;
        }
        this.__node.roots = recursivelyAssignChildren(this.__node.roots ? this.__node.roots : {}, roots);
        let cpy = Object.assign({}, roots);
        if (cpy.__node)
          delete cpy.__node;
        let listeners = this.recursiveSet(cpy, this, void 0, roots);
        if (roots.__node) {
          if (!roots.__node.tag)
            roots.__node._tag = `roots${Math.floor(Math.random() * 1e15)}`;
          else if (!this.get(roots.__node.tag)) {
            let node = new GraphNode(roots, this, this);
            this.set(node.__node.tag, node);
            this.runLoaders(node, this, roots, roots.__node.tag);
            if (node.__listeners) {
              listeners[node.__node.tag] = node.__listeners;
            }
          }
        } else if (roots.__listeners) {
          this.setListeners(roots.__listeners);
        }
        this.setListeners(listeners);
        return cpy;
      };
      this.setLoaders = (loaders22, replace) => {
        if (replace)
          this.__node.loaders = loaders22;
        else
          Object.assign(this.__node.loaders, loaders22);
        return this.__node.loaders;
      };
      this.runLoaders = (node, parent, properties, key) => {
        for (const l in this.__node.loaders) {
          if (typeof this.__node.loaders[l] === "object") {
            if (this.__node.loaders[l].init)
              this.__node.loaders[l](node, parent, this, this.__node.roots, properties, key);
            if (this.__node.loaders[l].connected)
              node.__addOnconnected(this.__node.loaders[l].connect);
            if (this.__node.loaders[l].disconnected)
              node.__addOndisconnected(this.__node.loaders[l].disconnect);
          } else if (typeof this.__node.loaders[l] === "function")
            this.__node.loaders[l](node, parent, this, this.__node.roots, properties, key);
        }
      };
      this.add = (properties, parent) => {
        let listeners = {};
        if (typeof parent === "string")
          parent = this.get(parent);
        let instanced;
        if (typeof properties === "function") {
          if (isNativeClass(properties)) {
            if (properties.prototype instanceof GraphNode) {
              properties = properties.prototype.constructor(properties, parent, this);
              instanced = true;
            } else
              properties = new properties();
          } else
            properties = { __operator: properties };
        } else if (typeof properties === "string") {
          properties = this.__node.roots[properties];
        }
        if (!properties)
          return;
        if (!instanced) {
          let keys = Object.getOwnPropertyNames(properties);
          let cpy = {};
          for (const key of keys) {
            cpy[key] = properties[key];
          }
          properties = cpy;
        }
        if (!properties.__node)
          properties.__node = {};
        properties.__node.initial = properties;
        if (typeof properties === "object" && (!properties?.__node?.tag || !this.get(properties.__node.tag))) {
          let node;
          if (instanced)
            node = properties;
          else
            node = new GraphNode(properties, parent, this);
          this.set(node.__node.tag, node);
          this.runLoaders(node, parent, properties, node.__node.tag);
          this.__node.roots[node.__node.tag] = properties;
          if (node.__children) {
            node.__children = Object.assign({}, node.__children);
            this.recursiveSet(node.__children, node, listeners, node.__children);
          }
          if (node.__listeners) {
            listeners[node.__node.tag] = Object.assign({}, node.__listeners);
            for (const key in node.__listeners) {
              let listener = node.__listeners[key];
              if (node[key]) {
                delete listeners[node.__node.tag][key];
                listeners[node.__node.tag][node.__node.tag + "." + key] = listener;
              }
              if (typeof listener === "string") {
                if (node.__children?.[listener]) {
                  listeners[node.__node.tag][key] = node.__node.tag + "." + listener;
                } else if (parent instanceof GraphNode && (parent.__node.tag === listener || parent.__node.tag.includes(".") && parent.__node.tag.split(".").pop() === listener)) {
                  listeners[node.__node.tag][key] = parent.__node.tag;
                }
              }
            }
          }
          this.setListeners(listeners);
          node.__callConnected();
          return node;
        }
        return;
      };
      this.recursiveSet = (t22, parent, listeners = {}, origin) => {
        let keys = Object.getOwnPropertyNames(origin);
        for (const key of keys) {
          if (key.includes("__"))
            continue;
          let p = origin[key];
          if (Array.isArray(p))
            continue;
          let instanced;
          if (typeof p === "function") {
            if (isNativeClass(p)) {
              p = new p();
              if (p instanceof GraphNode) {
                p = p.prototype.constructor(p, parent, this);
                instanced = true;
              }
            } else
              p = { __operator: p };
          } else if (typeof p === "string") {
            if (this.__node.nodes.get(p))
              p = this.__node.nodes.get(p);
            else
              p = this.__node.roots[p];
          } else if (typeof p === "boolean") {
            if (this.__node.nodes.get(key))
              p = this.__node.nodes.get(key);
            else
              p = this.__node.roots[key];
          }
          if (typeof p === "object") {
            if (!instanced && !(p instanceof GraphNode)) {
              let keys2 = Object.getOwnPropertyNames(p);
              let cpy = {};
              for (const key2 of keys2) {
                cpy[key2] = p[key2];
              }
              p = cpy;
            }
            if (!p.__node)
              p.__node = {};
            if (!p.__node.tag)
              p.__node.tag = key;
            if (!p.__node.initial)
              p.__node.initial = t22[key];
            if (this.get(p.__node.tag) && !(!(parent instanceof Graph) && parent?.__node) || parent?.__node && this.get(parent.__node.tag + "." + p.__node.tag))
              continue;
            let node;
            let newnode = false;
            if (instanced || p instanceof GraphNode) {
              node = p;
            } else {
              node = new GraphNode(p, parent, this);
              newnode = true;
            }
            if (!newnode && p instanceof GraphNode && !instanced && parent instanceof GraphNode) {
              let sub = this.subscribe(parent.__node.tag, node.__node.tag);
              let ondelete = (node2) => {
                this.unsubscribe(parent.__node.tag, sub);
              };
              node.__addOndisconnected(ondelete);
            } else {
              this.set(node.__node.tag, node);
              this.runLoaders(node, parent, t22[key], key);
              t22[key] = node;
              this.__node.roots[node.__node.tag] = p;
              if (node.__children) {
                node.__children = Object.assign({}, node.__children);
                this.recursiveSet(node.__children, node, listeners, node.__children);
              }
              if (node.__listeners) {
                listeners[node.__node.tag] = Object.assign({}, node.__listeners);
                for (const key2 in node.__listeners) {
                  let listener = node.__listeners[key2];
                  let k = key2;
                  if (node[key2]) {
                    delete listeners[node.__node.tag][key2];
                    k = node.__node.tag + "." + key2;
                    listeners[node.__node.tag][k] = listener;
                  }
                  if (typeof listener === "string") {
                    if (node.__children?.[listener]) {
                      listeners[node.__node.tag][k] = node.__node.tag + "." + listener;
                    } else if (parent instanceof GraphNode && (parent.__node.tag === listener || parent.__node.tag.includes(".") && parent.__node.tag.split(".").pop() === listener)) {
                      listeners[node.__node.tag][k] = parent.__node.tag;
                    }
                  }
                }
              }
              node.__callConnected();
            }
          }
        }
        return listeners;
      };
      this.remove = (node, clearListeners = true) => {
        this.unsubscribe(node);
        if (typeof node === "string")
          node = this.get(node);
        if (node instanceof GraphNode) {
          this.delete(node.__node.tag);
          delete this.__node.roots[node.__node.tag];
          if (clearListeners) {
            this.clearListeners(node);
          }
          node.__callDisconnected();
          const recursiveRemove = (t22) => {
            for (const key in t22) {
              this.unsubscribe(t22[key]);
              this.delete(t22[key].__node.tag);
              delete this.__node.roots[t22[key].__node.tag];
              this.delete(key);
              delete this.__node.roots[key];
              t22[key].__node.tag = t22[key].__node.tag.substring(t22[key].__node.tag.lastIndexOf(".") + 1);
              if (clearListeners) {
                this.clearListeners(t22[key]);
              }
              console.log(key, t22[key].__listeners);
              t22[key].__callDisconnected();
              if (t22[key].__children) {
                recursiveRemove(t22[key].__children);
              }
            }
          };
          if (node.__children) {
            recursiveRemove(node.__children);
          }
        }
        if (node?.__node.tag && node?.__parent) {
          delete node?.__parent;
          node.__node.tag = node.__node.tag.substring(node.__node.tag.indexOf(".") + 1);
        }
        return node;
      };
      this.run = (node, ...args) => {
        if (typeof node === "string") {
          let nd = this.get(node);
          if (!nd && node.includes(".")) {
            nd = this.get(node.substring(0, node.lastIndexOf(".")));
            if (typeof nd?.[node.substring(node.lastIndexOf(".") + 1)] === "function")
              return nd[node.substring(node.lastIndexOf(".") + 1)](...args);
          } else if (nd?.__operator)
            return nd.__operator(...args);
        }
        if (node?.__operator) {
          return node?.__operator(...args);
        }
      };
      this.setListeners = (listeners) => {
        for (const key in listeners) {
          let node = this.get(key);
          if (typeof listeners[key] === "object") {
            for (const k in listeners[key]) {
              let n = this.get(k);
              let sub;
              if (typeof listeners[key][k] !== "object")
                listeners[key][k] = { __callback: listeners[key][k] };
              else if (!listeners[key][k].__callback) {
                for (const kk in listeners[key][k]) {
                  if (typeof listeners[key][k][kk] !== "object") {
                    listeners[key][k][kk] = { __callback: listeners[key][k][kk] };
                    if (listeners[key][k][kk].__callback === true || typeof listeners[key][k][kk].__callback === "undefined")
                      listeners[key][k][kk].__callback = node.__operator;
                  }
                  let nn = this.get(kk);
                  if (nn) {
                    if (!nn) {
                      let tag = k.substring(0, k.lastIndexOf("."));
                      nn = this.get(tag);
                      if (n) {
                        sub = this.subscribe(nn, listeners[key][k][kk].__callback, listeners[key][k][kk].__args, k.substring(k.lastIndexOf(".") + 1), listeners[key][k][kk].inputState, key, k);
                        if (typeof node.__listeners[k][kk] !== "object")
                          node.__listeners[k][kk] = { __callback: listeners[key][k][kk].__callback, inputState: listeners[key][k][kk]?.inputState };
                        node.__listeners[k][kk].sub = sub;
                      }
                    } else {
                      sub = this.subscribe(nn, listeners[key][k][kk].__callback, listeners[key][k].__args, void 0, listeners[key][k].inputState, key, k);
                      if (typeof node.__listeners[k][kk] !== "object")
                        node.__listeners[k][kk] = { __callback: listeners[key][k][kk].__callback, inputState: listeners[key][k][kk]?.inputState };
                      node.__listeners[k][kk].sub = sub;
                    }
                  }
                }
              }
              if ("__callback" in listeners[key][k]) {
                if (listeners[key][k].__callback === true || typeof listeners[key][k].__callback === "undefined")
                  listeners[key][k].__callback = node.__operator;
                if (typeof listeners[key][k].__callback === "function")
                  listeners[key][k].__callback = listeners[key][k].__callback.bind(node);
                if (typeof node.__listeners !== "object")
                  node.__listeners = {};
                if (!n) {
                  let tag = k.substring(0, k.lastIndexOf("."));
                  n = this.get(tag);
                  if (n) {
                    sub = this.subscribe(n, listeners[key][k].__callback, listeners[key][k].__args, k.substring(k.lastIndexOf(".") + 1), listeners[key][k].inputState, key, k);
                    if (typeof node.__listeners[k] !== "object")
                      node.__listeners[k] = { __callback: listeners[key][k].__callback, inputState: listeners[key][k]?.inputState };
                    node.__listeners[k].sub = sub;
                  }
                } else {
                  sub = this.subscribe(n, listeners[key][k].__callback, listeners[key][k].__args, void 0, listeners[key][k].inputState, key, k);
                  if (typeof node.__listeners[k] !== "object")
                    node.__listeners[k] = { __callback: listeners[key][k].__callback, inputState: listeners[key][k]?.inputState };
                  node.__listeners[k].sub = sub;
                }
              }
            }
          }
        }
      };
      this.clearListeners = (node, listener) => {
        if (typeof node === "string")
          node = this.get(node);
        if (node?.__listeners) {
          for (const key in node.__listeners) {
            if (listener && key !== listener)
              continue;
            if (typeof node.__listeners[key]?.sub !== "number")
              continue;
            let n = this.get(key);
            if (!n) {
              n = this.get(key.substring(0, key.lastIndexOf(".")));
              if (n) {
                if (typeof node.__listeners[key] === "object" && !node.__listeners[key]?.__callback) {
                  for (const k in node.__listeners[key]) {
                    if (typeof node.__listeners[key][k]?.sub === "number") {
                      this.unsubscribe(n, node.__listeners[key][k].sub, key.substring(key.lastIndexOf(".") + 1), node.__listeners[key][k].inputState);
                      node.__listeners[key][k].sub = void 0;
                    }
                  }
                } else if (typeof node.__listeners[key]?.sub === "number") {
                  this.unsubscribe(n, node.__listeners[key].sub, key.substring(key.lastIndexOf(".") + 1), node.__listeners[key].inputState);
                  node.__listeners[key].sub = void 0;
                }
              }
            } else {
              if (typeof !node.__listeners[key]?.__callback === "number") {
                for (const k in node.__listeners[key]) {
                  if (node.__listeners[key][k]?.sub) {
                    this.unsubscribe(n, node.__listeners[key][k].sub, void 0, node.__listeners[key][k].inputState);
                    node.__listeners[key][k].sub = void 0;
                  }
                }
              } else if (typeof node.__listeners[key]?.sub === "number") {
                this.unsubscribe(n, node.__listeners[key].sub, void 0, node.__listeners[key].inputState);
                node.__listeners[key].sub = void 0;
              }
            }
          }
        }
      };
      this.get = (tag) => {
        return this.__node.nodes.get(tag);
      };
      this.set = (tag, node) => {
        return this.__node.nodes.set(tag, node);
      };
      this.delete = (tag) => {
        return this.__node.nodes.delete(tag);
      };
      this.getProps = (node, getInitial) => {
        if (typeof node === "string")
          node = this.get(node);
        if (node instanceof GraphNode) {
          let cpy;
          if (getInitial)
            cpy = Object.assign({}, this.__node.roots[node.__node.tag]);
          else {
            cpy = Object.assign({}, node);
            for (const key in cpy) {
              if (key.includes("__"))
                delete cpy[key];
            }
          }
        }
      };
      this.subscribe = (nodeEvent, onEvent, args, key, subInput, target, bound) => {
        let nd = nodeEvent;
        if (typeof nodeEvent === "string") {
          nd = this.get(nodeEvent);
          if (!nd && nodeEvent.includes(".")) {
            nd = this.get(nodeEvent.substring(0, nodeEvent.lastIndexOf(".")));
            key = nodeEvent.substring(nodeEvent.lastIndexOf(".") + 1);
          }
        }
        let sub;
        if (target instanceof GraphNode)
          target = target.__node.tag;
        if (typeof onEvent === "string") {
          let key2 = onEvent;
          let setOnEventFromString = (onEvent2) => {
            if (this.get(onEvent2)?.__operator) {
              let node = this.get(onEvent2);
              onEvent2 = function(...inp) {
                return node.__operator(...inp);
              };
            } else if (onEvent2.includes(".")) {
              let n = this.get(onEvent2.substring(0, onEvent2.lastIndexOf(".")));
              let key3 = onEvent2.substring(onEvent2.lastIndexOf(".") + 1);
              if (typeof n[key3] === "function") {
                if (n[key3] instanceof GraphNode)
                  onEvent2 = n[key3];
                else
                  onEvent2 = function(...inp) {
                    return n[key3](...inp);
                  };
              } else {
                onEvent2 = function(inp) {
                  n[key3] = inp;
                  return n[key3];
                };
              }
            }
            return onEvent2;
          };
          if (target) {
            let node = this.get(target);
            if (typeof node?.[onEvent] === "function") {
              onEvent = function(...inp) {
                return node[key2](...inp);
              };
            } else if (node[key2]) {
              if (node[key2] instanceof GraphNode)
                onEvent = node[key2];
              else
                onEvent = function(inp) {
                  node[key2] = inp;
                  return node[key2];
                };
            } else {
              onEvent = setOnEventFromString(onEvent);
            }
          } else {
            onEvent = setOnEventFromString(onEvent);
          }
        }
        if ((typeof onEvent === "function" || onEvent instanceof GraphNode) && args) {
          if (onEvent instanceof GraphNode && onEvent.__operator)
            onEvent = function(inp) {
              return onEvent.__operator(inp);
            };
          onEvent = wrapArgs(onEvent, args, this);
        }
        if (nd instanceof GraphNode) {
          sub = nd.__subscribe(onEvent, key, subInput, target, bound);
          let ondelete = () => {
            nd.__unsubscribe(sub, key, subInput);
          };
          nd.__addOndisconnected(ondelete);
        } else if (typeof nodeEvent === "string") {
          if (this.get(nodeEvent)) {
            if (onEvent instanceof GraphNode && onEvent.__operator) {
              sub = this.get(nodeEvent).__subscribe(onEvent.__operator, key, subInput, target, bound);
              let ondelete = () => {
                this.get(nodeEvent).__unsubscribe(sub);
              };
              onEvent.__addOndisconnected(ondelete);
            } else if (typeof onEvent === "function" || typeof onEvent === "string") {
              sub = this.get(nodeEvent).__subscribe(onEvent, key, subInput, target, bound);
              this.__node.state.getEvent(this.get(nodeEvent).__node.unique, sub).source = nodeEvent;
            }
          } else {
            if (typeof onEvent === "string")
              onEvent = this.__node.nodes.get(onEvent).__operator;
            if (typeof onEvent === "function")
              sub = this.__node.state.subscribeEvent(nodeEvent, onEvent);
          }
        }
        return sub;
      };
      this.unsubscribe = (node, sub, key, subInput) => {
        if (node instanceof GraphNode) {
          return node.__unsubscribe(sub, key, subInput);
        } else
          return this.get(node)?.__unsubscribe(sub, key, subInput);
      };
      this.setState = (update) => {
        this.__node.state.setState(update);
      };
      this.init(options);
    }
  };
  function recursivelyAssign(target, obj) {
    for (const key in obj) {
      if (obj[key]?.constructor.name === "Object" && !Array.isArray(obj[key])) {
        if (target[key]?.constructor.name === "Object" && !Array.isArray(target[key]))
          recursivelyAssign(target[key], obj[key]);
        else
          target[key] = recursivelyAssign({}, obj[key]);
      } else {
        target[key] = obj[key];
      }
    }
    return target;
  }
  function getAllProperties(obj) {
    var allProps = [], curr = obj;
    do {
      var props2 = Object.getOwnPropertyNames(curr);
      let fn = function(prop) {
        if (allProps.indexOf(prop) === -1)
          allProps.push(prop);
      };
      props2.forEach(fn);
    } while (curr = Object.getPrototypeOf(curr));
    return allProps;
  }
  function isNativeClass(thing) {
    return typeof thing === "function" && thing.hasOwnProperty("prototype") && !thing.hasOwnProperty("arguments");
  }
  var wrapArgs = (callback, argOrder, graph) => {
    let args = [];
    let getCallbackFromString = (a) => {
      if (graph.get(a)?.__operator) {
        let node = graph.get(a);
        return (...inp) => {
          node.__operator(...inp);
        };
      } else if (a.includes(".")) {
        let split = a.split(".");
        let popped = split.pop();
        let joined = split.join(".");
        let node = graph.get(joined);
        if (typeof graph.get(joined)?.[popped] === "function") {
          return (...inp) => {
            return node[popped](...inp);
          };
        } else
          return () => {
            return node[popped];
          };
      } else if (graph.get(a)) {
        let node = graph.get(a);
        return () => {
          return node;
        };
      } else {
        let arg = a;
        return () => {
          return arg;
        };
      }
    };
    let forArg = (a, i) => {
      if (a === "__output") {
        args[i] = (inp) => {
          return inp;
        };
      } else if (typeof a === "string") {
        args[i] = getCallbackFromString(a);
      } else if (typeof a === "function") {
        let fn2 = a;
        args[i] = (...inp) => {
          return fn2(...inp);
        };
      } else if (typeof a === "object" && a.__input) {
        let recursivelyCreateCallback = function(c) {
          let input = c.__input;
          if (typeof c.__input === "string") {
            input = getCallbackFromString(c.__input);
          }
          if (c.__args) {
            input = wrapArgs(input, c.__args, graph);
          }
          if (c.__output) {
            let output = c.__output;
            if (typeof c.__output === "string") {
              output = getCallbackFromString(output);
            } else if (typeof a.__output === "object") {
              output = recursivelyCreateCallback(output);
            }
            if (typeof output === "function") {
              let fn2 = input;
              input = (...inp) => {
                return output(fn2(...inp));
              };
            }
          }
          return input;
        };
        args[i] = recursivelyCreateCallback(a);
      } else {
        let arg = a;
        args[i] = () => {
          return arg;
        };
      }
    };
    argOrder.forEach(forArg);
    if (typeof callback === "string")
      callback = getCallbackFromString(callback);
    let fn = callback;
    callback = function(...inp) {
      let mapArg = (arg) => {
        return arg(...inp);
      };
      return fn(...args.map(mapArg));
    };
    return callback;
  };
  var backprop = (node, parent, graph) => {
    if (node.__node.backward && parent instanceof GraphNode) {
      graph.setListeners({ [parent.__node.tag]: { [node.__node.tag]: parent } });
    }
  };
  var loop = (node, parent, graph) => {
    if (node.__operator && !node.__node.looperSet) {
      if (typeof node.__node.delay === "number") {
        let fn = node.__operator;
        node.__setOperator((...args) => {
          return new Promise((res, rej) => {
            setTimeout(async () => {
              res(await fn(...args));
            }, node.__node.delay);
          });
        });
      } else if (node.__node.frame === true) {
        let fn = node.__operator;
        node.__setOperator((...args) => {
          return new Promise((res, rej) => {
            requestAnimationFrame(async () => {
              res(await fn(...args));
            });
          });
        });
      }
      if (typeof node.__node.repeat === "number" || typeof node.__node.recursive === "number") {
        let fn = node.__operator;
        node.__setOperator(async (...args) => {
          let i = node.__node.repeat ? node.__node.repeat : node.__node.recursive;
          let result;
          let repeater = async (tick, ...inp) => {
            while (tick > 0) {
              if (node.__node.delay || node.__node.frame) {
                fn(...inp).then(async (res) => {
                  if (node.__node.recursive) {
                    await repeater(tick, res);
                  } else
                    await repeater(tick, ...inp);
                });
                break;
              } else
                result = await fn(...args);
              tick--;
            }
          };
          await repeater(i, ...args);
          return result;
        });
      }
      if (node.__node.loop && typeof node.__node.loop === "number") {
        node.__node.looperSet = true;
        let fn = node.__operator;
        node.__setOperator((...args) => {
          if (!("looping" in node.__node))
            node.__node.looping = true;
          if (node.__node.looping) {
            fn(...args);
            setTimeout(() => {
              node.__operator(...args);
            }, node.__node.loop);
          }
        });
        if (node.__node.looping)
          node.__operator();
        let ondelete = (node2) => {
          if (node2.__node.looping)
            node2.__node.looping = false;
        };
        node.__addOndisconnected(ondelete);
      }
    }
  };
  var animate = (node, parent, graph) => {
    if (node.__node.animate === true || node.__animation) {
      let fn = node.__operator;
      node.__setOperator((...args) => {
        if (!("animating" in node.__node))
          node.__node.animating = true;
        if (node.__node.animating) {
          if (typeof node.__animation === "function")
            node.__animation(...args);
          else
            fn(...args);
          requestAnimationFrame(() => {
            node.__operator(...args);
          });
        }
      });
      if (node.__node.animating || (!("animating" in node.__node) || node.__node.animating) && node.__animation)
        setTimeout(() => {
          requestAnimationFrame(node.__operator);
        }, 10);
      let ondelete = (node2) => {
        if (node2.__node.animating)
          node2.__node.animating = false;
      };
      node.__addOndisconnected(ondelete);
    }
  };
  var branching = (node, parent, graph) => {
    if (typeof node.__branch === "object" && node.__operator && !node.__branchApplied) {
      let fn = node.__operator;
      node.__branchApplied = true;
      node.__operator = (...args) => {
        let result = fn(...args);
        for (const key in node.__branch) {
          let triggered = () => {
            if (typeof node.__branch[key].then === "function") {
              node.__branch[key].then(result);
            } else if (node.__branch[key].then instanceof GraphNode && node.__branch[key].then.__operator) {
              node.__branch[key].then.__operator(result);
            } else
              result = node.__branch[key].then;
          };
          if (typeof node.__branch[key].if === "function") {
            if (node.__branch[key].if(result) == true) {
              triggered();
            }
          } else if (node.__branch[key].if === result) {
            triggered();
          }
        }
        return result;
      };
    }
    if (node.__listeners) {
      for (const key in node.__listeners) {
        if (typeof node.__listeners[key] === "object") {
          if (node.__listeners[key].branch && !node.__listeners[key].branchApplied) {
            let fn = node.__listeners[key].callback;
            node.__listeners[key].branchApplied = true;
            node.__listeners.callback = (ret) => {
              let triggered = () => {
                if (typeof node.__listeners[key].branch.then === "function") {
                  ret = node.__listeners[key].branch.then(ret);
                } else if (node.__listeners[key].branch.then instanceof GraphNode && node.__listeners[key].branch.then.__operator) {
                  ret = node.__listeners[key].branch.then.__operator(ret);
                } else
                  ret = node.__listeners[key].branch.then;
              };
              if (typeof node.__listeners[key].branch.if === "function") {
                if (node.__listeners[key].branch.if(ret)) {
                  triggered();
                }
              } else if (node.__listeners[key].branch.if === ret) {
                triggered();
              }
              return fn(ret);
            };
          }
        }
      }
    }
  };
  var triggerListenerOncreate = (node, parent, graph) => {
    if (node.__listeners) {
      for (const key in node.__listeners) {
        if (typeof node.__listeners[key] === "object") {
          if (node.__listeners[key].oncreate) {
            node.__listeners[key].callback(node.__listeners[key].oncreate);
          }
        }
      }
    }
  };
  var bindListener = (node, parent, graph) => {
    if (node.__listeners) {
      for (const key in node.__listeners) {
        if (typeof node.__listeners[key] === "object") {
          if (typeof node.__listeners[key].binding === "object") {
            node.__listeners.callback = node.__listeners.callback.bind(node.__listeners[key].binding);
          }
        }
      }
    }
  };
  var transformListenerResult = (node, parent, graph) => {
    if (node.__listeners) {
      for (const key in node.__listeners) {
        if (typeof node.__listeners[key] === "object") {
          if (typeof node.__listeners[key].transform === "function" && !node.__listeners[key].transformApplied) {
            let fn = node.__listeners[key].callback;
            node.__listeners[key].transformApplied = true;
            node.__listeners.callback = (ret) => {
              ret = node.__listeners[key].transform(ret);
              return fn(ret);
            };
          }
        }
      }
    }
  };
  var substitute__operator = (node, parent, graph) => {
    if (node.post && !node.__operator) {
      node.__setOperator(node.post);
    } else if (!node.__operator && typeof node.get == "function") {
      node.__setOperator(node.get);
    }
    if (!node.get && node.__operator) {
      node.get = node.__operator;
    }
    if (node.aliases) {
      node.aliases.forEach((a) => {
        graph.set(a, node);
        let ondelete = (node2) => {
          graph.__node.nodes.delete(a);
        };
        node.__addOndisconnected(ondelete);
      });
    }
    if (typeof graph.__node.roots?.[node.__node.tag] === "object" && node.get)
      graph.__node.roots[node.__node.tag].get = node.get;
  };
  var loaders = { backprop, loop, animate, branching, triggerListenerOncreate, bindListener, transformListenerResult, substitute__operator };
  var recursivelyStringifyFunctions = (obj) => {
    let cpy = {};
    for (const key in obj) {
      if (typeof obj[key] === "object") {
        cpy[key] = recursivelyStringifyFunctions(obj[key]);
      } else if (typeof obj[key] === "function") {
        cpy[key] = obj[key].toString();
      }
    }
    return cpy;
  };
  function parseFunctionFromText(method = "") {
    let getFunctionBody = (methodString) => {
      return methodString.replace(/^\W*(function[^{]+\{([\s\S]*)\}|[^=]+=>[^{]*\{([\s\S]*)\}|[^=]+=>(.+))/i, "$2$3$4");
    };
    let getFunctionHead = (methodString) => {
      let startindex = methodString.indexOf("=>") + 1;
      if (startindex <= 0) {
        startindex = methodString.indexOf("){");
      }
      if (startindex <= 0) {
        startindex = methodString.indexOf(") {");
      }
      return methodString.slice(0, methodString.indexOf("{", startindex) + 1);
    };
    let newFuncHead = getFunctionHead(method);
    let newFuncBody = getFunctionBody(method);
    let newFunc;
    if (newFuncHead.includes("function")) {
      let varName = newFuncHead.split("(")[1].split(")")[0];
      newFunc = new Function(varName, newFuncBody);
    } else {
      if (newFuncHead.substring(0, 6) === newFuncBody.substring(0, 6)) {
        let varName = newFuncHead.split("(")[1].split(")")[0];
        newFunc = new Function(varName, newFuncBody.substring(newFuncBody.indexOf("{") + 1, newFuncBody.length - 1));
      } else {
        try {
          newFunc = (0, eval)(newFuncHead + newFuncBody + "}");
        } catch {
        }
      }
    }
    return newFunc;
  }
  var stringifyWithCircularRefs = function() {
    const refs = /* @__PURE__ */ new Map();
    const parents = [];
    const path = ["this"];
    function clear() {
      refs.clear();
      parents.length = 0;
      path.length = 1;
    }
    function updateParents(key, value) {
      var idx = parents.length - 1;
      var prev = parents[idx];
      if (typeof prev === "object") {
        if (prev[key] === value || idx === 0) {
          path.push(key);
          parents.push(value.pushed);
        } else {
          while (idx-- >= 0) {
            prev = parents[idx];
            if (typeof prev === "object") {
              if (prev[key] === value) {
                idx += 2;
                parents.length = idx;
                path.length = idx;
                --idx;
                parents[idx] = value;
                path[idx] = key;
                break;
              }
            }
            idx--;
          }
        }
      }
    }
    function checkCircular(key, value) {
      if (value != null) {
        if (typeof value === "object") {
          if (key) {
            updateParents(key, value);
          }
          let other = refs.get(value);
          if (other) {
            return "[Circular Reference]" + other;
          } else {
            refs.set(value, path.join("."));
          }
        }
      }
      return value;
    }
    return function stringifyWithCircularRefs22(obj, space) {
      try {
        parents.push(obj);
        return JSON.stringify(obj, checkCircular, space);
      } finally {
        clear();
      }
    };
  }();
  if (JSON.stringifyWithCircularRefs === void 0) {
    JSON.stringifyWithCircularRefs = stringifyWithCircularRefs;
  }
  var stringifyFast = function() {
    const refs = /* @__PURE__ */ new Map();
    const parents = [];
    const path = ["this"];
    function clear() {
      refs.clear();
      parents.length = 0;
      path.length = 1;
    }
    function updateParents(key, value) {
      var idx = parents.length - 1;
      if (parents[idx]) {
        var prev = parents[idx];
        if (typeof prev === "object") {
          if (prev[key] === value || idx === 0) {
            path.push(key);
            parents.push(value.pushed);
          } else {
            while (idx-- >= 0) {
              prev = parents[idx];
              if (typeof prev === "object") {
                if (prev[key] === value) {
                  idx += 2;
                  parents.length = idx;
                  path.length = idx;
                  --idx;
                  parents[idx] = value;
                  path[idx] = key;
                  break;
                }
              }
              idx++;
            }
          }
        }
      }
    }
    function checkValues(key, value) {
      let val;
      if (value != null) {
        if (typeof value === "object") {
          let c = value.constructor.name;
          if (key && c === "Object") {
            updateParents(key, value);
          }
          let other = refs.get(value);
          if (other) {
            return "[Circular Reference]" + other;
          } else {
            refs.set(value, path.join("."));
          }
          if (c === "Array") {
            if (value.length > 20) {
              val = value.slice(value.length - 20);
            } else
              val = value;
          } else if (c.includes("Set")) {
            val = Array.from(value);
          } else if (c !== "Object" && c !== "Number" && c !== "String" && c !== "Boolean") {
            val = "instanceof_" + c;
          } else if (c === "Object") {
            let obj = {};
            for (const prop in value) {
              if (value[prop] == null) {
                obj[prop] = value[prop];
              } else if (Array.isArray(value[prop])) {
                if (value[prop].length > 20)
                  obj[prop] = value[prop].slice(value[prop].length - 20);
                else
                  obj[prop] = value[prop];
              } else if (value[prop].constructor.name === "Object") {
                obj[prop] = {};
                for (const p in value[prop]) {
                  if (Array.isArray(value[prop][p])) {
                    if (value[prop][p].length > 20)
                      obj[prop][p] = value[prop][p].slice(value[prop][p].length - 20);
                    else
                      obj[prop][p] = value[prop][p];
                  } else {
                    if (value[prop][p] != null) {
                      let con = value[prop][p].constructor.name;
                      if (con.includes("Set")) {
                        obj[prop][p] = Array.from(value[prop][p]);
                      } else if (con !== "Number" && con !== "String" && con !== "Boolean") {
                        obj[prop][p] = "instanceof_" + con;
                      } else {
                        obj[prop][p] = value[prop][p];
                      }
                    } else {
                      obj[prop][p] = value[prop][p];
                    }
                  }
                }
              } else {
                let con = value[prop].constructor.name;
                if (con.includes("Set")) {
                  obj[prop] = Array.from(value[prop]);
                } else if (con !== "Number" && con !== "String" && con !== "Boolean") {
                  obj[prop] = "instanceof_" + con;
                } else {
                  obj[prop] = value[prop];
                }
              }
            }
            val = obj;
          } else {
            val = value;
          }
        } else {
          val = value;
        }
      }
      return val;
    }
    return function stringifyFast22(obj, space) {
      parents.push(obj);
      let res = JSON.stringify(obj, checkValues, space);
      clear();
      return res;
    };
  }();
  if (JSON.stringifyFast === void 0) {
    JSON.stringifyFast = stringifyFast;
  }
  function methodstrings(node) {
    if (typeof node.__methods === "object") {
      for (const key in node.__methods) {
        let fstr = node.__methods[key];
        let fn = typeof fstr === "function" ? fstr : parseFunctionFromText(fstr);
        if (key === "__operator") {
          node.__setOperator(fn);
        } else {
          node[key] = fn.bind(node);
        }
      }
    }
  }
  var Service = class extends Graph {
    constructor(options) {
      super({ ...options, loaders: options?.loaders ? Object.assign({ ...loaders }, options.loaders) : { ...loaders } });
      this.name = `service${Math.floor(Math.random() * 1e15)}`;
      this.addServices = (services) => {
        for (const s in services) {
          if (typeof services[s] === "function")
            services[s] = new services[s]();
          if (services[s]?.__node?.loaders)
            Object.assign(this.__node.loaders, services[s].__node.loaders);
          if (services[s]?.__node?.nodes) {
            services[s].__node.nodes.forEach((n, tag) => {
              if (!this.get(tag)) {
                this.set(tag, n);
              } else
                this.set(s + "." + tag, n);
            });
            this.__node.nodes.forEach((n, k) => {
              if (!services[s].__node.nodes.get(k))
                services[s].__node.nodes.set(k, n);
            });
            let set = this.set;
            this.set = (tag, node) => {
              services[s].set(tag, node);
              return set(tag, node);
            };
            let del = this.delete;
            this.delete = (tag) => {
              services[s].delete(tag);
              return del(tag);
            };
          } else if (typeof services[s] === "object") {
            this.load(services[s]);
          }
        }
      };
      this.handleMethod = (route, method, args) => {
        let m = method.toLowerCase();
        let src = this.__node.nodes.get(route);
        if (!src) {
          src = this.__node.roots[route];
        }
        if (src?.[m]) {
          if (typeof src[m] !== "function") {
            if (args)
              src[m] = args;
            return src[m];
          } else
            return src[m](args);
        } else
          return this.handleServiceMessage({ route, args, method });
      };
      this.transmit = (...args) => {
        if (typeof args[0] === "object") {
          if (args[0].method) {
            return this.handleMethod(args[0].route, args[0].method, args[0].args);
          } else if (args[0].route) {
            return this.handleServiceMessage(args[0]);
          } else if (args[0].node) {
            return this.handleGraphNodeCall(args[0].node, args[0].args);
          } else if (this.__node.keepState) {
            if (args[0].route)
              this.setState({ [args[0].route]: args[0].args });
            if (args[0].node)
              this.setState({ [args[0].node]: args[0].args });
          }
          return args;
        } else
          return args;
      };
      this.receive = (...args) => {
        if (args[0]) {
          if (typeof args[0] === "string") {
            let substr = args[0].substring(0, 8);
            if (substr.includes("{") || substr.includes("[")) {
              if (substr.includes("\\"))
                args[0] = args[0].replace(/\\/g, "");
              if (args[0][0] === '"') {
                args[0] = args[0].substring(1, args[0].length - 1);
              }
              ;
              args[0] = JSON.parse(args[0]);
            }
          }
        }
        if (typeof args[0] === "object") {
          if (args[0].method) {
            return this.handleMethod(args[0].route, args[0].method, args[0].args);
          } else if (args[0].route) {
            return this.handleServiceMessage(args[0]);
          } else if (args[0].node) {
            return this.handleGraphNodeCall(args[0].node, args[0].args);
          } else if (this.__node.keepState) {
            if (args[0].route)
              this.setState({ [args[0].route]: args[0].args });
            if (args[0].node)
              this.setState({ [args[0].node]: args[0].args });
          }
          return args;
        } else
          return args;
      };
      this.pipe = (source, destination, endpoint, method, callback) => {
        if (source instanceof GraphNode) {
          if (callback)
            return this.subscribe(source, (res) => {
              let mod = callback(res);
              if (mod !== void 0)
                this.transmit({ route: destination, args: mod, method });
              else
                this.transmit({ route: destination, args: res, method }, endpoint);
            });
          else
            return this.subscribe(source, (res) => {
              this.transmit({ route: destination, args: res, method }, endpoint);
            });
        } else if (typeof source === "string")
          return this.subscribe(source, (res) => {
            this.transmit({ route: destination, args: res, method }, endpoint);
          });
      };
      this.pipeOnce = (source, destination, endpoint, method, callback) => {
        if (source instanceof GraphNode) {
          if (callback)
            return source.__node.state.subscribeEventOnce(source.__node.unique, (res) => {
              let mod = callback(res);
              if (mod !== void 0)
                this.transmit({ route: destination, args: mod, method });
              else
                this.transmit({ route: destination, args: res, method }, endpoint);
            });
          else
            return this.__node.state.subscribeEventOnce(source.__node.unique, (res) => {
              this.transmit({ route: destination, args: res, method }, endpoint);
            });
        } else if (typeof source === "string")
          return this.__node.state.subscribeEventOnce(this.__node.nodes.get(source).__node.unique, (res) => {
            this.transmit({ route: destination, args: res, method }, endpoint);
          });
      };
      this.terminate = (...args) => {
      };
      this.isTypedArray = isTypedArray;
      this.recursivelyAssign = recursivelyAssign2;
      this.spliceTypedArray = spliceTypedArray;
      this.ping = () => {
        console.log("pinged!");
        return "pong";
      };
      this.echo = (...args) => {
        this.transmit(...args);
        return args;
      };
      if (options?.services)
        this.addServices(options.services);
      this.load(this);
    }
    handleServiceMessage(message4) {
      let call;
      if (typeof message4 === "object") {
        if (message4.route)
          call = message4.route;
        else if (message4.node)
          call = message4.node;
      }
      if (call) {
        if (Array.isArray(message4.args))
          return this.run(call, ...message4.args);
        else
          return this.run(call, message4.args);
      } else
        return message4;
    }
    handleGraphNodeCall(route, args) {
      if (!route)
        return args;
      if (args?.args) {
        this.handleServiceMessage(args);
      } else if (Array.isArray(args))
        return this.run(route, ...args);
      else
        return this.run(route, args);
    }
  };
  function isTypedArray(x3) {
    return ArrayBuffer.isView(x3) && Object.prototype.toString.call(x3) !== "[object DataView]";
  }
  var recursivelyAssign2 = (target, obj) => {
    for (const key in obj) {
      if (typeof obj[key] === "object" && !Array.isArray(obj[key])) {
        if (typeof target[key] === "object" && !Array.isArray(target[key]))
          recursivelyAssign2(target[key], obj[key]);
        else
          target[key] = recursivelyAssign2({}, obj[key]);
      } else
        target[key] = obj[key];
    }
    return target;
  };
  function spliceTypedArray(arr, start, end) {
    let s = arr.subarray(0, start);
    let e;
    if (end) {
      e = arr.subarray(end + 1);
    }
    let ta;
    if (s.length > 0 || e?.length > 0)
      ta = new arr.constructor(s.length + e.length);
    if (ta) {
      if (s.length > 0)
        ta.set(s);
      if (e && e.length > 0)
        ta.set(e, s.length);
    }
    return ta;
  }
  var unsafeRoutes = { setRoute: function(fn, fnName) {
    if (typeof fn === "string")
      fn = parseFunctionFromText(fn);
    if (typeof fn === "function") {
      if (!fnName)
        fnName = fn.name;
      if (this.__node.graph.get(fnName)) {
        this.__node.graph.get(fnName).__setOperator(fn);
      } else {
        let node = this.__node.graph.add({ __node: { tag: fnName }, __operator: fn });
      }
      return true;
    }
    return false;
  }, setNode: function(fn, fnName) {
    if (typeof fn === "string")
      fn = parseFunctionFromText(fn);
    if (typeof fn === "function") {
      if (!fnName)
        fnName = fn.name;
      if (this.__node.graph.get(fnName)) {
        this.__node.graph.get(fnName).__setOperator(fn);
      } else
        this.__node.graph.add({ __node: { tag: fnName }, __operator: fn });
      return true;
    }
    return false;
  }, setMethod: function(route, fn, fnName) {
    if (typeof fn === "string")
      fn = parseFunctionFromText(fn);
    if (typeof fn === "function") {
      if (!fnName)
        fnName = fn.name;
      if (this.__node.graph.get(route)) {
        this.__node.graph.get(route)[fnName] = fn;
      } else
        this.__node.graph.add({ __node: { tag: fnName, [fnName]: fn } });
      return true;
    }
    return false;
  }, assignRoute: function(route, source) {
    if (this.__node.graph.get(route) && typeof source === "object") {
      Object.assign(this.__node.graph.get(route), source);
    }
  }, transferClass: (classObj, className) => {
    if (typeof classObj === "object") {
      let str22 = classObj.toString();
      let message4 = { route: "receiveClass", args: [str22, className] };
      return message4;
    }
    return false;
  }, receiveClass: function(stringified, className) {
    if (typeof stringified === "string") {
      if (stringified.indexOf("class") === 0) {
        let cls = (0, eval)("(" + stringified + ")");
        let name3 = className;
        if (!name3)
          name3 = cls.name;
        this.__node.graph[name3] = cls;
        return true;
      }
    }
    return false;
  }, setGlobal: (key, value) => {
    globalThis[key] = value;
    return true;
  }, assignGlobalObject: (target, source) => {
    if (!globalThis[target])
      return false;
    if (typeof source === "object")
      Object.assign(globalThis[target], source);
    return true;
  }, setValue: function(key, value) {
    this.__node.graph[key] = value;
    return true;
  }, assignObject: function(target, source) {
    if (!this.__node.graph[target])
      return false;
    if (typeof source === "object")
      Object.assign(this.__node.graph[target], source);
    return true;
  }, setGlobalFunction: (fn, fnName) => {
    if (typeof fn === "string")
      fn = parseFunctionFromText(fn);
    if (typeof fn === "function") {
      if (!fnName)
        fnName = fn.name;
      globalThis[fnName] = fn;
      return true;
    }
    return false;
  }, assignFunctionToGlobalObject: function(globalObjectName, fn, fnName) {
    if (!globalThis[globalObjectName])
      return false;
    if (typeof fn === "string")
      fn = parseFunctionFromText(fn);
    if (typeof fn === "function") {
      if (!fnName)
        fnName = fn.name;
      this.__node.graph[globalObjectName][fnName] = fn;
      return true;
    }
    return false;
  }, setFunction: function(fn, fnName) {
    if (typeof fn === "string")
      fn = parseFunctionFromText(fn);
    if (typeof fn === "function") {
      if (!fnName)
        fnName = fn.name;
      this.__node.graph[fnName] = fn;
      return true;
    }
    return false;
  }, assignFunctionToObject: function(objectName, fn, fnName) {
    if (!this.__node.graph[objectName])
      return false;
    if (typeof fn === "string")
      fn = parseFunctionFromText(fn);
    if (typeof fn === "function") {
      if (!fnName)
        fnName = fn.name;
      this.__node.graph[objectName][fnName] = fn;
      return true;
    }
    return false;
  } };
  var sjcl = { cipher: {}, hash: {}, keyexchange: {}, mode: {}, misc: {}, codec: {}, exception: { corrupt: function(a) {
    this.toString = function() {
      return "CORRUPT: " + this.message;
    };
    this.message = a;
  }, invalid: function(a) {
    this.toString = function() {
      return "INVALID: " + this.message;
    };
    this.message = a;
  }, bug: function(a) {
    this.toString = function() {
      return "BUG: " + this.message;
    };
    this.message = a;
  }, notReady: function(a) {
    this.toString = function() {
      return "NOT READY: " + this.message;
    };
    this.message = a;
  } } };
  sjcl.cipher.aes = function(a) {
    this.s[0][0][0] || this.O();
    var b2, c, d2, e, f = this.s[0][4], g = this.s[1];
    b2 = a.length;
    var h = 1;
    if (4 !== b2 && 6 !== b2 && 8 !== b2)
      throw new sjcl.exception.invalid("invalid aes key size");
    this.b = [d2 = a.slice(0), e = []];
    for (a = b2; a < 4 * b2 + 28; a++) {
      c = d2[a - 1];
      if (0 === a % b2 || 8 === b2 && 4 === a % b2)
        c = f[c >>> 24] << 24 ^ f[c >> 16 & 255] << 16 ^ f[c >> 8 & 255] << 8 ^ f[c & 255], 0 === a % b2 && (c = c << 8 ^ c >>> 24 ^ h << 24, h = h << 1 ^ 283 * (h >> 7));
      d2[a] = d2[a - b2] ^ c;
    }
    for (b2 = 0; a; b2++, a--)
      c = d2[b2 & 3 ? a : a - 4], e[b2] = 4 >= a || 4 > b2 ? c : g[0][f[c >>> 24]] ^ g[1][f[c >> 16 & 255]] ^ g[2][f[c >> 8 & 255]] ^ g[3][f[c & 255]];
  };
  sjcl.cipher.aes.prototype = { encrypt: function(a) {
    return t(this, a, 0);
  }, decrypt: function(a) {
    return t(this, a, 1);
  }, s: [[[], [], [], [], []], [[], [], [], [], []]], O: function() {
    var a = this.s[0], b2 = this.s[1], c = a[4], d2 = b2[4], e, f, g, h = [], k = [], l, n, m, p;
    for (e = 0; 256 > e; e++)
      k[(h[e] = e << 1 ^ 283 * (e >> 7)) ^ e] = e;
    for (f = g = 0; !c[f]; f ^= l || 1, g = k[g] || 1)
      for (m = g ^ g << 1 ^ g << 2 ^ g << 3 ^ g << 4, m = m >> 8 ^ m & 255 ^ 99, c[f] = m, d2[m] = f, n = h[e = h[l = h[f]]], p = 16843009 * n ^ 65537 * e ^ 257 * l ^ 16843008 * f, n = 257 * h[m] ^ 16843008 * m, e = 0; 4 > e; e++)
        a[e][f] = n = n << 24 ^ n >>> 8, b2[e][m] = p = p << 24 ^ p >>> 8;
    for (e = 0; 5 > e; e++)
      a[e] = a[e].slice(0), b2[e] = b2[e].slice(0);
  } };
  function t(a, b2, c) {
    if (4 !== b2.length)
      throw new sjcl.exception.invalid("invalid aes block size");
    var d2 = a.b[c], e = b2[0] ^ d2[0], f = b2[c ? 3 : 1] ^ d2[1], g = b2[2] ^ d2[2];
    b2 = b2[c ? 1 : 3] ^ d2[3];
    var h, k, l, n = d2.length / 4 - 2, m, p = 4, r = [0, 0, 0, 0];
    h = a.s[c];
    a = h[0];
    var q = h[1], v2 = h[2], w2 = h[3], x3 = h[4];
    for (m = 0; m < n; m++)
      h = a[e >>> 24] ^ q[f >> 16 & 255] ^ v2[g >> 8 & 255] ^ w2[b2 & 255] ^ d2[p], k = a[f >>> 24] ^ q[g >> 16 & 255] ^ v2[b2 >> 8 & 255] ^ w2[e & 255] ^ d2[p + 1], l = a[g >>> 24] ^ q[b2 >> 16 & 255] ^ v2[e >> 8 & 255] ^ w2[f & 255] ^ d2[p + 2], b2 = a[b2 >>> 24] ^ q[e >> 16 & 255] ^ v2[f >> 8 & 255] ^ w2[g & 255] ^ d2[p + 3], p += 4, e = h, f = k, g = l;
    for (m = 0; 4 > m; m++)
      r[c ? 3 & -m : m] = x3[e >>> 24] << 24 ^ x3[f >> 16 & 255] << 16 ^ x3[g >> 8 & 255] << 8 ^ x3[b2 & 255] ^ d2[p++], h = e, e = f, f = g, g = b2, b2 = h;
    return r;
  }
  sjcl.bitArray = { bitSlice: function(a, b2, c) {
    a = sjcl.bitArray.$(a.slice(b2 / 32), 32 - (b2 & 31)).slice(1);
    return void 0 === c ? a : sjcl.bitArray.clamp(a, c - b2);
  }, extract: function(a, b2, c) {
    var d2 = Math.floor(-b2 - c & 31);
    return ((b2 + c - 1 ^ b2) & -32 ? a[b2 / 32 | 0] << 32 - d2 ^ a[b2 / 32 + 1 | 0] >>> d2 : a[b2 / 32 | 0] >>> d2) & (1 << c) - 1;
  }, concat: function(a, b2) {
    if (0 === a.length || 0 === b2.length)
      return a.concat(b2);
    var c = a[a.length - 1], d2 = sjcl.bitArray.getPartial(c);
    return 32 === d2 ? a.concat(b2) : sjcl.bitArray.$(b2, d2, c | 0, a.slice(0, a.length - 1));
  }, bitLength: function(a) {
    var b2 = a.length;
    return 0 === b2 ? 0 : 32 * (b2 - 1) + sjcl.bitArray.getPartial(a[b2 - 1]);
  }, clamp: function(a, b2) {
    if (32 * a.length < b2)
      return a;
    a = a.slice(0, Math.ceil(b2 / 32));
    var c = a.length;
    b2 = b2 & 31;
    0 < c && b2 && (a[c - 1] = sjcl.bitArray.partial(b2, a[c - 1] & 2147483648 >> b2 - 1, 1));
    return a;
  }, partial: function(a, b2, c) {
    return 32 === a ? b2 : (c ? b2 | 0 : b2 << 32 - a) + 1099511627776 * a;
  }, getPartial: function(a) {
    return Math.round(a / 1099511627776) || 32;
  }, equal: function(a, b2) {
    if (sjcl.bitArray.bitLength(a) !== sjcl.bitArray.bitLength(b2))
      return false;
    var c = 0, d2;
    for (d2 = 0; d2 < a.length; d2++)
      c |= a[d2] ^ b2[d2];
    return 0 === c;
  }, $: function(a, b2, c, d2) {
    var e;
    e = 0;
    for (void 0 === d2 && (d2 = []); 32 <= b2; b2 -= 32)
      d2.push(c), c = 0;
    if (0 === b2)
      return d2.concat(a);
    for (e = 0; e < a.length; e++)
      d2.push(c | a[e] >>> b2), c = a[e] << 32 - b2;
    e = a.length ? a[a.length - 1] : 0;
    a = sjcl.bitArray.getPartial(e);
    d2.push(sjcl.bitArray.partial(b2 + a & 31, 32 < b2 + a ? c : d2.pop(), 1));
    return d2;
  }, i: function(a, b2) {
    return [a[0] ^ b2[0], a[1] ^ b2[1], a[2] ^ b2[2], a[3] ^ b2[3]];
  }, byteswapM: function(a) {
    var b2, c;
    for (b2 = 0; b2 < a.length; ++b2)
      c = a[b2], a[b2] = c >>> 24 | c >>> 8 & 65280 | (c & 65280) << 8 | c << 24;
    return a;
  } };
  sjcl.codec.utf8String = { fromBits: function(a) {
    var b2 = "", c = sjcl.bitArray.bitLength(a), d2, e;
    for (d2 = 0; d2 < c / 8; d2++)
      0 === (d2 & 3) && (e = a[d2 / 4]), b2 += String.fromCharCode(e >>> 8 >>> 8 >>> 8), e <<= 8;
    return decodeURIComponent(escape(b2));
  }, toBits: function(a) {
    a = unescape(encodeURIComponent(a));
    var b2 = [], c, d2 = 0;
    for (c = 0; c < a.length; c++)
      d2 = d2 << 8 | a.charCodeAt(c), 3 === (c & 3) && (b2.push(d2), d2 = 0);
    c & 3 && b2.push(sjcl.bitArray.partial(8 * (c & 3), d2));
    return b2;
  } };
  sjcl.codec.hex = { fromBits: function(a) {
    var b2 = "", c;
    for (c = 0; c < a.length; c++)
      b2 += ((a[c] | 0) + 263882790666240).toString(16).substr(4);
    return b2.substr(0, sjcl.bitArray.bitLength(a) / 4);
  }, toBits: function(a) {
    var b2, c = [], d2;
    a = a.replace(/\s|0x/g, "");
    d2 = a.length;
    a = a + "00000000";
    for (b2 = 0; b2 < a.length; b2 += 8)
      c.push(parseInt(a.substr(b2, 8), 16) ^ 0);
    return sjcl.bitArray.clamp(c, 4 * d2);
  } };
  sjcl.codec.base32 = { B: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", X: "0123456789ABCDEFGHIJKLMNOPQRSTUV", BITS: 32, BASE: 5, REMAINING: 27, fromBits: function(a, b2, c) {
    var d2 = sjcl.codec.base32.BASE, e = sjcl.codec.base32.REMAINING, f = "", g = 0, h = sjcl.codec.base32.B, k = 0, l = sjcl.bitArray.bitLength(a);
    c && (h = sjcl.codec.base32.X);
    for (c = 0; f.length * d2 < l; )
      f += h.charAt((k ^ a[c] >>> g) >>> e), g < d2 ? (k = a[c] << d2 - g, g += e, c++) : (k <<= d2, g -= d2);
    for (; f.length & 7 && !b2; )
      f += "=";
    return f;
  }, toBits: function(a, b2) {
    a = a.replace(/\s|=/g, "").toUpperCase();
    var c = sjcl.codec.base32.BITS, d2 = sjcl.codec.base32.BASE, e = sjcl.codec.base32.REMAINING, f = [], g, h = 0, k = sjcl.codec.base32.B, l = 0, n, m = "base32";
    b2 && (k = sjcl.codec.base32.X, m = "base32hex");
    for (g = 0; g < a.length; g++) {
      n = k.indexOf(a.charAt(g));
      if (0 > n) {
        if (!b2)
          try {
            return sjcl.codec.base32hex.toBits(a);
          } catch (p) {
          }
        throw new sjcl.exception.invalid("this isn't " + m + "!");
      }
      h > e ? (h -= e, f.push(l ^ n >>> h), l = n << c - h) : (h += d2, l ^= n << c - h);
    }
    h & 56 && f.push(sjcl.bitArray.partial(h & 56, l, 1));
    return f;
  } };
  sjcl.codec.base32hex = { fromBits: function(a, b2) {
    return sjcl.codec.base32.fromBits(a, b2, 1);
  }, toBits: function(a) {
    return sjcl.codec.base32.toBits(a, 1);
  } };
  sjcl.codec.base64 = { B: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", fromBits: function(a, b2, c) {
    var d2 = "", e = 0, f = sjcl.codec.base64.B, g = 0, h = sjcl.bitArray.bitLength(a);
    c && (f = f.substr(0, 62) + "-_");
    for (c = 0; 6 * d2.length < h; )
      d2 += f.charAt((g ^ a[c] >>> e) >>> 26), 6 > e ? (g = a[c] << 6 - e, e += 26, c++) : (g <<= 6, e -= 6);
    for (; d2.length & 3 && !b2; )
      d2 += "=";
    return d2;
  }, toBits: function(a, b2) {
    a = a.replace(/\s|=/g, "");
    var c = [], d2, e = 0, f = sjcl.codec.base64.B, g = 0, h;
    b2 && (f = f.substr(0, 62) + "-_");
    for (d2 = 0; d2 < a.length; d2++) {
      h = f.indexOf(a.charAt(d2));
      if (0 > h)
        throw new sjcl.exception.invalid("this isn't base64!");
      26 < e ? (e -= 26, c.push(g ^ h >>> e), g = h << 32 - e) : (e += 6, g ^= h << 32 - e);
    }
    e & 56 && c.push(sjcl.bitArray.partial(e & 56, g, 1));
    return c;
  } };
  sjcl.codec.base64url = { fromBits: function(a) {
    return sjcl.codec.base64.fromBits(a, 1, 1);
  }, toBits: function(a) {
    return sjcl.codec.base64.toBits(a, 1);
  } };
  sjcl.hash.sha256 = function(a) {
    this.b[0] || this.O();
    a ? (this.F = a.F.slice(0), this.A = a.A.slice(0), this.l = a.l) : this.reset();
  };
  sjcl.hash.sha256.hash = function(a) {
    return new sjcl.hash.sha256().update(a).finalize();
  };
  sjcl.hash.sha256.prototype = { blockSize: 512, reset: function() {
    this.F = this.Y.slice(0);
    this.A = [];
    this.l = 0;
    return this;
  }, update: function(a) {
    "string" === typeof a && (a = sjcl.codec.utf8String.toBits(a));
    var b2, c = this.A = sjcl.bitArray.concat(this.A, a);
    b2 = this.l;
    a = this.l = b2 + sjcl.bitArray.bitLength(a);
    if (9007199254740991 < a)
      throw new sjcl.exception.invalid("Cannot hash more than 2^53 - 1 bits");
    if ("undefined" !== typeof Uint32Array) {
      var d2 = new Uint32Array(c), e = 0;
      for (b2 = 512 + b2 - (512 + b2 & 511); b2 <= a; b2 += 512)
        u(this, d2.subarray(16 * e, 16 * (e + 1))), e += 1;
      c.splice(0, 16 * e);
    } else
      for (b2 = 512 + b2 - (512 + b2 & 511); b2 <= a; b2 += 512)
        u(this, c.splice(0, 16));
    return this;
  }, finalize: function() {
    var a, b2 = this.A, c = this.F, b2 = sjcl.bitArray.concat(b2, [sjcl.bitArray.partial(1, 1)]);
    for (a = b2.length + 2; a & 15; a++)
      b2.push(0);
    b2.push(Math.floor(this.l / 4294967296));
    for (b2.push(this.l | 0); b2.length; )
      u(this, b2.splice(0, 16));
    this.reset();
    return c;
  }, Y: [], b: [], O: function() {
    function a(a2) {
      return 4294967296 * (a2 - Math.floor(a2)) | 0;
    }
    for (var b2 = 0, c = 2, d2, e; 64 > b2; c++) {
      e = true;
      for (d2 = 2; d2 * d2 <= c; d2++)
        if (0 === c % d2) {
          e = false;
          break;
        }
      e && (8 > b2 && (this.Y[b2] = a(Math.pow(c, 0.5))), this.b[b2] = a(Math.pow(c, 1 / 3)), b2++);
    }
  } };
  function u(a, b2) {
    var c, d2, e, f = a.F, g = a.b, h = f[0], k = f[1], l = f[2], n = f[3], m = f[4], p = f[5], r = f[6], q = f[7];
    for (c = 0; 64 > c; c++)
      16 > c ? d2 = b2[c] : (d2 = b2[c + 1 & 15], e = b2[c + 14 & 15], d2 = b2[c & 15] = (d2 >>> 7 ^ d2 >>> 18 ^ d2 >>> 3 ^ d2 << 25 ^ d2 << 14) + (e >>> 17 ^ e >>> 19 ^ e >>> 10 ^ e << 15 ^ e << 13) + b2[c & 15] + b2[c + 9 & 15] | 0), d2 = d2 + q + (m >>> 6 ^ m >>> 11 ^ m >>> 25 ^ m << 26 ^ m << 21 ^ m << 7) + (r ^ m & (p ^ r)) + g[c], q = r, r = p, p = m, m = n + d2 | 0, n = l, l = k, k = h, h = d2 + (k & l ^ n & (k ^ l)) + (k >>> 2 ^ k >>> 13 ^ k >>> 22 ^ k << 30 ^ k << 19 ^ k << 10) | 0;
    f[0] = f[0] + h | 0;
    f[1] = f[1] + k | 0;
    f[2] = f[2] + l | 0;
    f[3] = f[3] + n | 0;
    f[4] = f[4] + m | 0;
    f[5] = f[5] + p | 0;
    f[6] = f[6] + r | 0;
    f[7] = f[7] + q | 0;
  }
  sjcl.mode.ccm = { name: "ccm", G: [], listenProgress: function(a) {
    sjcl.mode.ccm.G.push(a);
  }, unListenProgress: function(a) {
    a = sjcl.mode.ccm.G.indexOf(a);
    -1 < a && sjcl.mode.ccm.G.splice(a, 1);
  }, fa: function(a) {
    var b2 = sjcl.mode.ccm.G.slice(), c;
    for (c = 0; c < b2.length; c += 1)
      b2[c](a);
  }, encrypt: function(a, b2, c, d2, e) {
    var f, g = b2.slice(0), h = sjcl.bitArray, k = h.bitLength(c) / 8, l = h.bitLength(g) / 8;
    e = e || 64;
    d2 = d2 || [];
    if (7 > k)
      throw new sjcl.exception.invalid("ccm: iv must be at least 7 bytes");
    for (f = 2; 4 > f && l >>> 8 * f; f++)
      ;
    f < 15 - k && (f = 15 - k);
    c = h.clamp(c, 8 * (15 - f));
    b2 = sjcl.mode.ccm.V(a, b2, c, d2, e, f);
    g = sjcl.mode.ccm.C(a, g, c, b2, e, f);
    return h.concat(g.data, g.tag);
  }, decrypt: function(a, b2, c, d2, e) {
    e = e || 64;
    d2 = d2 || [];
    var f = sjcl.bitArray, g = f.bitLength(c) / 8, h = f.bitLength(b2), k = f.clamp(b2, h - e), l = f.bitSlice(b2, h - e), h = (h - e) / 8;
    if (7 > g)
      throw new sjcl.exception.invalid("ccm: iv must be at least 7 bytes");
    for (b2 = 2; 4 > b2 && h >>> 8 * b2; b2++)
      ;
    b2 < 15 - g && (b2 = 15 - g);
    c = f.clamp(c, 8 * (15 - b2));
    k = sjcl.mode.ccm.C(a, k, c, l, e, b2);
    a = sjcl.mode.ccm.V(a, k.data, c, d2, e, b2);
    if (!f.equal(k.tag, a))
      throw new sjcl.exception.corrupt("ccm: tag doesn't match");
    return k.data;
  }, na: function(a, b2, c, d2, e, f) {
    var g = [], h = sjcl.bitArray, k = h.i;
    d2 = [h.partial(8, (b2.length ? 64 : 0) | d2 - 2 << 2 | f - 1)];
    d2 = h.concat(d2, c);
    d2[3] |= e;
    d2 = a.encrypt(d2);
    if (b2.length)
      for (c = h.bitLength(b2) / 8, 65279 >= c ? g = [h.partial(16, c)] : 4294967295 >= c && (g = h.concat([h.partial(16, 65534)], [c])), g = h.concat(g, b2), b2 = 0; b2 < g.length; b2 += 4)
        d2 = a.encrypt(k(d2, g.slice(b2, b2 + 4).concat([0, 0, 0])));
    return d2;
  }, V: function(a, b2, c, d2, e, f) {
    var g = sjcl.bitArray, h = g.i;
    e /= 8;
    if (e % 2 || 4 > e || 16 < e)
      throw new sjcl.exception.invalid("ccm: invalid tag length");
    if (4294967295 < d2.length || 4294967295 < b2.length)
      throw new sjcl.exception.bug("ccm: can't deal with 4GiB or more data");
    c = sjcl.mode.ccm.na(a, d2, c, e, g.bitLength(b2) / 8, f);
    for (d2 = 0; d2 < b2.length; d2 += 4)
      c = a.encrypt(h(c, b2.slice(d2, d2 + 4).concat([0, 0, 0])));
    return g.clamp(c, 8 * e);
  }, C: function(a, b2, c, d2, e, f) {
    var g, h = sjcl.bitArray;
    g = h.i;
    var k = b2.length, l = h.bitLength(b2), n = k / 50, m = n;
    c = h.concat([h.partial(8, f - 1)], c).concat([0, 0, 0]).slice(0, 4);
    d2 = h.bitSlice(g(d2, a.encrypt(c)), 0, e);
    if (!k)
      return { tag: d2, data: [] };
    for (g = 0; g < k; g += 4)
      g > n && (sjcl.mode.ccm.fa(g / k), n += m), c[3]++, e = a.encrypt(c), b2[g] ^= e[0], b2[g + 1] ^= e[1], b2[g + 2] ^= e[2], b2[g + 3] ^= e[3];
    return { tag: d2, data: h.clamp(b2, l) };
  } };
  sjcl.mode.ocb2 = { name: "ocb2", encrypt: function(a, b2, c, d2, e, f) {
    if (128 !== sjcl.bitArray.bitLength(c))
      throw new sjcl.exception.invalid("ocb iv must be 128 bits");
    var g, h = sjcl.mode.ocb2.S, k = sjcl.bitArray, l = k.i, n = [0, 0, 0, 0];
    c = h(a.encrypt(c));
    var m, p = [];
    d2 = d2 || [];
    e = e || 64;
    for (g = 0; g + 4 < b2.length; g += 4)
      m = b2.slice(g, g + 4), n = l(n, m), p = p.concat(l(c, a.encrypt(l(c, m)))), c = h(c);
    m = b2.slice(g);
    b2 = k.bitLength(m);
    g = a.encrypt(l(c, [0, 0, 0, b2]));
    m = k.clamp(l(m.concat([0, 0, 0]), g), b2);
    n = l(n, l(m.concat([0, 0, 0]), g));
    n = a.encrypt(l(n, l(c, h(c))));
    d2.length && (n = l(n, f ? d2 : sjcl.mode.ocb2.pmac(a, d2)));
    return p.concat(k.concat(m, k.clamp(n, e)));
  }, decrypt: function(a, b2, c, d2, e, f) {
    if (128 !== sjcl.bitArray.bitLength(c))
      throw new sjcl.exception.invalid("ocb iv must be 128 bits");
    e = e || 64;
    var g = sjcl.mode.ocb2.S, h = sjcl.bitArray, k = h.i, l = [0, 0, 0, 0], n = g(a.encrypt(c)), m, p, r = sjcl.bitArray.bitLength(b2) - e, q = [];
    d2 = d2 || [];
    for (c = 0; c + 4 < r / 32; c += 4)
      m = k(n, a.decrypt(k(n, b2.slice(c, c + 4)))), l = k(l, m), q = q.concat(m), n = g(n);
    p = r - 32 * c;
    m = a.encrypt(k(n, [0, 0, 0, p]));
    m = k(m, h.clamp(b2.slice(c), p).concat([0, 0, 0]));
    l = k(l, m);
    l = a.encrypt(k(l, k(n, g(n))));
    d2.length && (l = k(l, f ? d2 : sjcl.mode.ocb2.pmac(a, d2)));
    if (!h.equal(h.clamp(l, e), h.bitSlice(b2, r)))
      throw new sjcl.exception.corrupt("ocb: tag doesn't match");
    return q.concat(h.clamp(m, p));
  }, pmac: function(a, b2) {
    var c, d2 = sjcl.mode.ocb2.S, e = sjcl.bitArray, f = e.i, g = [0, 0, 0, 0], h = a.encrypt([0, 0, 0, 0]), h = f(h, d2(d2(h)));
    for (c = 0; c + 4 < b2.length; c += 4)
      h = d2(h), g = f(g, a.encrypt(f(h, b2.slice(c, c + 4))));
    c = b2.slice(c);
    128 > e.bitLength(c) && (h = f(h, d2(h)), c = e.concat(c, [-2147483648, 0, 0, 0]));
    g = f(g, c);
    return a.encrypt(f(d2(f(h, d2(h))), g));
  }, S: function(a) {
    return [a[0] << 1 ^ a[1] >>> 31, a[1] << 1 ^ a[2] >>> 31, a[2] << 1 ^ a[3] >>> 31, a[3] << 1 ^ 135 * (a[0] >>> 31)];
  } };
  sjcl.mode.gcm = { name: "gcm", encrypt: function(a, b2, c, d2, e) {
    var f = b2.slice(0);
    b2 = sjcl.bitArray;
    d2 = d2 || [];
    a = sjcl.mode.gcm.C(true, a, f, d2, c, e || 128);
    return b2.concat(a.data, a.tag);
  }, decrypt: function(a, b2, c, d2, e) {
    var f = b2.slice(0), g = sjcl.bitArray, h = g.bitLength(f);
    e = e || 128;
    d2 = d2 || [];
    e <= h ? (b2 = g.bitSlice(f, h - e), f = g.bitSlice(f, 0, h - e)) : (b2 = f, f = []);
    a = sjcl.mode.gcm.C(false, a, f, d2, c, e);
    if (!g.equal(a.tag, b2))
      throw new sjcl.exception.corrupt("gcm: tag doesn't match");
    return a.data;
  }, ka: function(a, b2) {
    var c, d2, e, f, g, h = sjcl.bitArray.i;
    e = [0, 0, 0, 0];
    f = b2.slice(0);
    for (c = 0; 128 > c; c++) {
      (d2 = 0 !== (a[Math.floor(c / 32)] & 1 << 31 - c % 32)) && (e = h(e, f));
      g = 0 !== (f[3] & 1);
      for (d2 = 3; 0 < d2; d2--)
        f[d2] = f[d2] >>> 1 | (f[d2 - 1] & 1) << 31;
      f[0] >>>= 1;
      g && (f[0] ^= -520093696);
    }
    return e;
  }, j: function(a, b2, c) {
    var d2, e = c.length;
    b2 = b2.slice(0);
    for (d2 = 0; d2 < e; d2 += 4)
      b2[0] ^= 4294967295 & c[d2], b2[1] ^= 4294967295 & c[d2 + 1], b2[2] ^= 4294967295 & c[d2 + 2], b2[3] ^= 4294967295 & c[d2 + 3], b2 = sjcl.mode.gcm.ka(b2, a);
    return b2;
  }, C: function(a, b2, c, d2, e, f) {
    var g, h, k, l, n, m, p, r, q = sjcl.bitArray;
    m = c.length;
    p = q.bitLength(c);
    r = q.bitLength(d2);
    h = q.bitLength(e);
    g = b2.encrypt([0, 0, 0, 0]);
    96 === h ? (e = e.slice(0), e = q.concat(e, [1])) : (e = sjcl.mode.gcm.j(g, [0, 0, 0, 0], e), e = sjcl.mode.gcm.j(g, e, [0, 0, Math.floor(h / 4294967296), h & 4294967295]));
    h = sjcl.mode.gcm.j(g, [0, 0, 0, 0], d2);
    n = e.slice(0);
    d2 = h.slice(0);
    a || (d2 = sjcl.mode.gcm.j(g, h, c));
    for (l = 0; l < m; l += 4)
      n[3]++, k = b2.encrypt(n), c[l] ^= k[0], c[l + 1] ^= k[1], c[l + 2] ^= k[2], c[l + 3] ^= k[3];
    c = q.clamp(c, p);
    a && (d2 = sjcl.mode.gcm.j(g, h, c));
    a = [Math.floor(r / 4294967296), r & 4294967295, Math.floor(p / 4294967296), p & 4294967295];
    d2 = sjcl.mode.gcm.j(g, d2, a);
    k = b2.encrypt(e);
    d2[0] ^= k[0];
    d2[1] ^= k[1];
    d2[2] ^= k[2];
    d2[3] ^= k[3];
    return { tag: q.bitSlice(d2, 0, f), data: c };
  } };
  sjcl.misc.hmac = function(a, b2) {
    this.W = b2 = b2 || sjcl.hash.sha256;
    var c = [[], []], d2, e = b2.prototype.blockSize / 32;
    this.w = [new b2(), new b2()];
    a.length > e && (a = b2.hash(a));
    for (d2 = 0; d2 < e; d2++)
      c[0][d2] = a[d2] ^ 909522486, c[1][d2] = a[d2] ^ 1549556828;
    this.w[0].update(c[0]);
    this.w[1].update(c[1]);
    this.R = new b2(this.w[0]);
  };
  sjcl.misc.hmac.prototype.encrypt = sjcl.misc.hmac.prototype.mac = function(a) {
    if (this.aa)
      throw new sjcl.exception.invalid("encrypt on already updated hmac called!");
    this.update(a);
    return this.digest(a);
  };
  sjcl.misc.hmac.prototype.reset = function() {
    this.R = new this.W(this.w[0]);
    this.aa = false;
  };
  sjcl.misc.hmac.prototype.update = function(a) {
    this.aa = true;
    this.R.update(a);
  };
  sjcl.misc.hmac.prototype.digest = function() {
    var a = this.R.finalize(), a = new this.W(this.w[1]).update(a).finalize();
    this.reset();
    return a;
  };
  sjcl.misc.pbkdf2 = function(a, b2, c, d2, e) {
    c = c || 1e4;
    if (0 > d2 || 0 > c)
      throw new sjcl.exception.invalid("invalid params to pbkdf2");
    "string" === typeof a && (a = sjcl.codec.utf8String.toBits(a));
    "string" === typeof b2 && (b2 = sjcl.codec.utf8String.toBits(b2));
    e = e || sjcl.misc.hmac;
    a = new e(a);
    var f, g, h, k, l = [], n = sjcl.bitArray;
    for (k = 1; 32 * l.length < (d2 || 1); k++) {
      e = f = a.encrypt(n.concat(b2, [k]));
      for (g = 1; g < c; g++)
        for (f = a.encrypt(f), h = 0; h < f.length; h++)
          e[h] ^= f[h];
      l = l.concat(e);
    }
    d2 && (l = n.clamp(l, d2));
    return l;
  };
  sjcl.prng = function(a) {
    this.c = [new sjcl.hash.sha256()];
    this.m = [0];
    this.P = 0;
    this.H = {};
    this.N = 0;
    this.U = {};
    this.Z = this.f = this.o = this.ha = 0;
    this.b = [0, 0, 0, 0, 0, 0, 0, 0];
    this.h = [0, 0, 0, 0];
    this.L = void 0;
    this.M = a;
    this.D = false;
    this.K = { progress: {}, seeded: {} };
    this.u = this.ga = 0;
    this.I = 1;
    this.J = 2;
    this.ca = 65536;
    this.T = [0, 48, 64, 96, 128, 192, 256, 384, 512, 768, 1024];
    this.da = 3e4;
    this.ba = 80;
  };
  sjcl.prng.prototype = { randomWords: function(a, b2) {
    var c = [], d2;
    d2 = this.isReady(b2);
    var e;
    if (d2 === this.u)
      throw new sjcl.exception.notReady("generator isn't seeded");
    if (d2 & this.J) {
      d2 = !(d2 & this.I);
      e = [];
      var f = 0, g;
      this.Z = e[0] = new Date().valueOf() + this.da;
      for (g = 0; 16 > g; g++)
        e.push(4294967296 * Math.random() | 0);
      for (g = 0; g < this.c.length && (e = e.concat(this.c[g].finalize()), f += this.m[g], this.m[g] = 0, d2 || !(this.P & 1 << g)); g++)
        ;
      this.P >= 1 << this.c.length && (this.c.push(new sjcl.hash.sha256()), this.m.push(0));
      this.f -= f;
      f > this.o && (this.o = f);
      this.P++;
      this.b = sjcl.hash.sha256.hash(this.b.concat(e));
      this.L = new sjcl.cipher.aes(this.b);
      for (d2 = 0; 4 > d2 && (this.h[d2] = this.h[d2] + 1 | 0, !this.h[d2]); d2++)
        ;
    }
    for (d2 = 0; d2 < a; d2 += 4)
      0 === (d2 + 1) % this.ca && y(this), e = z(this), c.push(e[0], e[1], e[2], e[3]);
    y(this);
    return c.slice(0, a);
  }, setDefaultParanoia: function(a, b2) {
    if (0 === a && "Setting paranoia=0 will ruin your security; use it only for testing" !== b2)
      throw new sjcl.exception.invalid("Setting paranoia=0 will ruin your security; use it only for testing");
    this.M = a;
  }, addEntropy: function(a, b2, c) {
    c = c || "user";
    var d2, e, f = new Date().valueOf(), g = this.H[c], h = this.isReady(), k = 0;
    d2 = this.U[c];
    void 0 === d2 && (d2 = this.U[c] = this.ha++);
    void 0 === g && (g = this.H[c] = 0);
    this.H[c] = (this.H[c] + 1) % this.c.length;
    switch (typeof a) {
      case "number":
        void 0 === b2 && (b2 = 1);
        this.c[g].update([d2, this.N++, 1, b2, f, 1, a | 0]);
        break;
      case "object":
        c = Object.prototype.toString.call(a);
        if ("[object Uint32Array]" === c) {
          e = [];
          for (c = 0; c < a.length; c++)
            e.push(a[c]);
          a = e;
        } else
          for ("[object Array]" !== c && (k = 1), c = 0; c < a.length && !k; c++)
            "number" !== typeof a[c] && (k = 1);
        if (!k) {
          if (void 0 === b2)
            for (c = b2 = 0; c < a.length; c++)
              for (e = a[c]; 0 < e; )
                b2++, e = e >>> 1;
          this.c[g].update([d2, this.N++, 2, b2, f, a.length].concat(a));
        }
        break;
      case "string":
        void 0 === b2 && (b2 = a.length);
        this.c[g].update([d2, this.N++, 3, b2, f, a.length]);
        this.c[g].update(a);
        break;
      default:
        k = 1;
    }
    if (k)
      throw new sjcl.exception.bug("random: addEntropy only supports number, array of numbers or string");
    this.m[g] += b2;
    this.f += b2;
    h === this.u && (this.isReady() !== this.u && A("seeded", Math.max(this.o, this.f)), A("progress", this.getProgress()));
  }, isReady: function(a) {
    a = this.T[void 0 !== a ? a : this.M];
    return this.o && this.o >= a ? this.m[0] > this.ba && new Date().valueOf() > this.Z ? this.J | this.I : this.I : this.f >= a ? this.J | this.u : this.u;
  }, getProgress: function(a) {
    a = this.T[a ? a : this.M];
    return this.o >= a ? 1 : this.f > a ? 1 : this.f / a;
  }, startCollectors: function() {
    if (!this.D) {
      this.a = { loadTimeCollector: B(this, this.ma), mouseCollector: B(this, this.oa), keyboardCollector: B(this, this.la), accelerometerCollector: B(this, this.ea), touchCollector: B(this, this.qa) };
      if (window.addEventListener)
        window.addEventListener("load", this.a.loadTimeCollector, false), window.addEventListener("mousemove", this.a.mouseCollector, false), window.addEventListener("keypress", this.a.keyboardCollector, false), window.addEventListener("devicemotion", this.a.accelerometerCollector, false), window.addEventListener("touchmove", this.a.touchCollector, false);
      else if (document.attachEvent)
        document.attachEvent("onload", this.a.loadTimeCollector), document.attachEvent("onmousemove", this.a.mouseCollector), document.attachEvent("keypress", this.a.keyboardCollector);
      else
        throw new sjcl.exception.bug("can't attach event");
      this.D = true;
    }
  }, stopCollectors: function() {
    this.D && (window.removeEventListener ? (window.removeEventListener("load", this.a.loadTimeCollector, false), window.removeEventListener("mousemove", this.a.mouseCollector, false), window.removeEventListener("keypress", this.a.keyboardCollector, false), window.removeEventListener("devicemotion", this.a.accelerometerCollector, false), window.removeEventListener("touchmove", this.a.touchCollector, false)) : document.detachEvent && (document.detachEvent("onload", this.a.loadTimeCollector), document.detachEvent("onmousemove", this.a.mouseCollector), document.detachEvent("keypress", this.a.keyboardCollector)), this.D = false);
  }, addEventListener: function(a, b2) {
    this.K[a][this.ga++] = b2;
  }, removeEventListener: function(a, b2) {
    var c, d2, e = this.K[a], f = [];
    for (d2 in e)
      e.hasOwnProperty(d2) && e[d2] === b2 && f.push(d2);
    for (c = 0; c < f.length; c++)
      d2 = f[c], delete e[d2];
  }, la: function() {
    C(this, 1);
  }, oa: function(a) {
    var b2, c;
    try {
      b2 = a.x || a.clientX || a.offsetX || 0, c = a.y || a.clientY || a.offsetY || 0;
    } catch (d2) {
      c = b2 = 0;
    }
    0 != b2 && 0 != c && this.addEntropy([b2, c], 2, "mouse");
    C(this, 0);
  }, qa: function(a) {
    a = a.touches[0] || a.changedTouches[0];
    this.addEntropy([a.pageX || a.clientX, a.pageY || a.clientY], 1, "touch");
    C(this, 0);
  }, ma: function() {
    C(this, 2);
  }, ea: function(a) {
    a = a.accelerationIncludingGravity.x || a.accelerationIncludingGravity.y || a.accelerationIncludingGravity.z;
    if (window.orientation) {
      var b2 = window.orientation;
      "number" === typeof b2 && this.addEntropy(b2, 1, "accelerometer");
    }
    a && this.addEntropy(a, 2, "accelerometer");
    C(this, 0);
  } };
  function A(a, b2) {
    var c, d2 = sjcl.random.K[a], e = [];
    for (c in d2)
      d2.hasOwnProperty(c) && e.push(d2[c]);
    for (c = 0; c < e.length; c++)
      e[c](b2);
  }
  function C(a, b2) {
    "undefined" !== typeof window && window.performance && "function" === typeof window.performance.now ? a.addEntropy(window.performance.now(), b2, "loadtime") : a.addEntropy(new Date().valueOf(), b2, "loadtime");
  }
  function y(a) {
    a.b = z(a).concat(z(a));
    a.L = new sjcl.cipher.aes(a.b);
  }
  function z(a) {
    for (var b2 = 0; 4 > b2 && (a.h[b2] = a.h[b2] + 1 | 0, !a.h[b2]); b2++)
      ;
    return a.L.encrypt(a.h);
  }
  function B(a, b2) {
    return function() {
      b2.apply(a, arguments);
    };
  }
  sjcl.random = new sjcl.prng(6);
  a:
    try {
      if (G = "undefined" !== typeof module && module.exports) {
        try {
          H = __require22("crypto");
        } catch (a) {
          H = null;
        }
        G = E = H;
      }
      if (G && E.randomBytes)
        D = E.randomBytes(128), D = new Uint32Array(new Uint8Array(D).buffer), sjcl.random.addEntropy(D, 1024, "crypto['randomBytes']");
      else if ("undefined" !== typeof window && "undefined" !== typeof Uint32Array) {
        F = new Uint32Array(32);
        if (window.crypto && window.crypto.getRandomValues)
          window.crypto.getRandomValues(F);
        else if (window.msCrypto && window.msCrypto.getRandomValues)
          window.msCrypto.getRandomValues(F);
        else
          break a;
        sjcl.random.addEntropy(F, 1024, "crypto['getRandomValues']");
      }
    } catch (a) {
      "undefined" !== typeof window && window.console && (console.log("There was an error collecting entropy from the browser:"), console.log(a));
    }
  var D;
  var E;
  var F;
  var G;
  var H;
  sjcl.json = { defaults: { v: 1, iter: 1e4, ks: 128, ts: 64, mode: "ccm", adata: "", cipher: "aes" }, ja: function(a, b2, c, d2) {
    c = c || {};
    d2 = d2 || {};
    var e = sjcl.json, f = e.g({ iv: sjcl.random.randomWords(4, 0) }, e.defaults), g;
    e.g(f, c);
    c = f.adata;
    "string" === typeof f.salt && (f.salt = sjcl.codec.base64.toBits(f.salt));
    "string" === typeof f.iv && (f.iv = sjcl.codec.base64.toBits(f.iv));
    if (!sjcl.mode[f.mode] || !sjcl.cipher[f.cipher] || "string" === typeof a && 100 >= f.iter || 64 !== f.ts && 96 !== f.ts && 128 !== f.ts || 128 !== f.ks && 192 !== f.ks && 256 !== f.ks || 2 > f.iv.length || 4 < f.iv.length)
      throw new sjcl.exception.invalid("json encrypt: invalid parameters");
    "string" === typeof a ? (g = sjcl.misc.cachedPbkdf2(a, f), a = g.key.slice(0, f.ks / 32), f.salt = g.salt) : sjcl.ecc && a instanceof sjcl.ecc.elGamal.publicKey && (g = a.kem(), f.kemtag = g.tag, a = g.key.slice(0, f.ks / 32));
    "string" === typeof b2 && (b2 = sjcl.codec.utf8String.toBits(b2));
    "string" === typeof c && (f.adata = c = sjcl.codec.utf8String.toBits(c));
    g = new sjcl.cipher[f.cipher](a);
    e.g(d2, f);
    d2.key = a;
    f.ct = "ccm" === f.mode && sjcl.arrayBuffer && sjcl.arrayBuffer.ccm && b2 instanceof ArrayBuffer ? sjcl.arrayBuffer.ccm.encrypt(g, b2, f.iv, c, f.ts) : sjcl.mode[f.mode].encrypt(g, b2, f.iv, c, f.ts);
    return f;
  }, encrypt: function(a, b2, c, d2) {
    var e = sjcl.json, f = e.ja.apply(e, arguments);
    return e.encode(f);
  }, ia: function(a, b2, c, d2) {
    c = c || {};
    d2 = d2 || {};
    var e = sjcl.json;
    b2 = e.g(e.g(e.g({}, e.defaults), b2), c, true);
    var f, g;
    f = b2.adata;
    "string" === typeof b2.salt && (b2.salt = sjcl.codec.base64.toBits(b2.salt));
    "string" === typeof b2.iv && (b2.iv = sjcl.codec.base64.toBits(b2.iv));
    if (!sjcl.mode[b2.mode] || !sjcl.cipher[b2.cipher] || "string" === typeof a && 100 >= b2.iter || 64 !== b2.ts && 96 !== b2.ts && 128 !== b2.ts || 128 !== b2.ks && 192 !== b2.ks && 256 !== b2.ks || !b2.iv || 2 > b2.iv.length || 4 < b2.iv.length)
      throw new sjcl.exception.invalid("json decrypt: invalid parameters");
    "string" === typeof a ? (g = sjcl.misc.cachedPbkdf2(a, b2), a = g.key.slice(0, b2.ks / 32), b2.salt = g.salt) : sjcl.ecc && a instanceof sjcl.ecc.elGamal.secretKey && (a = a.unkem(sjcl.codec.base64.toBits(b2.kemtag)).slice(0, b2.ks / 32));
    "string" === typeof f && (f = sjcl.codec.utf8String.toBits(f));
    g = new sjcl.cipher[b2.cipher](a);
    f = "ccm" === b2.mode && sjcl.arrayBuffer && sjcl.arrayBuffer.ccm && b2.ct instanceof ArrayBuffer ? sjcl.arrayBuffer.ccm.decrypt(g, b2.ct, b2.iv, b2.tag, f, b2.ts) : sjcl.mode[b2.mode].decrypt(g, b2.ct, b2.iv, f, b2.ts);
    e.g(d2, b2);
    d2.key = a;
    return 1 === c.raw ? f : sjcl.codec.utf8String.fromBits(f);
  }, decrypt: function(a, b2, c, d2) {
    var e = sjcl.json;
    return e.ia(a, e.decode(b2), c, d2);
  }, encode: function(a) {
    var b2, c = "{", d2 = "";
    for (b2 in a)
      if (a.hasOwnProperty(b2)) {
        if (!b2.match(/^[a-z0-9]+$/i))
          throw new sjcl.exception.invalid("json encode: invalid property name");
        c += d2 + '"' + b2 + '":';
        d2 = ",";
        switch (typeof a[b2]) {
          case "number":
          case "boolean":
            c += a[b2];
            break;
          case "string":
            c += '"' + escape(a[b2]) + '"';
            break;
          case "object":
            c += '"' + sjcl.codec.base64.fromBits(a[b2], 0) + '"';
            break;
          default:
            throw new sjcl.exception.bug("json encode: unsupported type");
        }
      }
    return c + "}";
  }, decode: function(a) {
    a = a.replace(/\s/g, "");
    if (!a.match(/^\{.*\}$/))
      throw new sjcl.exception.invalid("json decode: this isn't json!");
    a = a.replace(/^\{|\}$/g, "").split(/,/);
    var b2 = {}, c, d2;
    for (c = 0; c < a.length; c++) {
      if (!(d2 = a[c].match(/^\s*(?:(["']?)([a-z][a-z0-9]*)\1)\s*:\s*(?:(-?\d+)|"([a-z0-9+\/%*_.@=\-]*)"|(true|false))$/i)))
        throw new sjcl.exception.invalid("json decode: this isn't json!");
      null != d2[3] ? b2[d2[2]] = parseInt(d2[3], 10) : null != d2[4] ? b2[d2[2]] = d2[2].match(/^(ct|adata|salt|iv)$/) ? sjcl.codec.base64.toBits(d2[4]) : unescape(d2[4]) : null != d2[5] && (b2[d2[2]] = "true" === d2[5]);
    }
    return b2;
  }, g: function(a, b2, c) {
    void 0 === a && (a = {});
    if (void 0 === b2)
      return a;
    for (var d2 in b2)
      if (b2.hasOwnProperty(d2)) {
        if (c && void 0 !== a[d2] && a[d2] !== b2[d2])
          throw new sjcl.exception.invalid("required parameter overridden");
        a[d2] = b2[d2];
      }
    return a;
  }, sa: function(a, b2) {
    var c = {}, d2;
    for (d2 in a)
      a.hasOwnProperty(d2) && a[d2] !== b2[d2] && (c[d2] = a[d2]);
    return c;
  }, ra: function(a, b2) {
    var c = {}, d2;
    for (d2 = 0; d2 < b2.length; d2++)
      void 0 !== a[b2[d2]] && (c[b2[d2]] = a[b2[d2]]);
    return c;
  } };
  sjcl.encrypt = sjcl.json.encrypt;
  sjcl.decrypt = sjcl.json.decrypt;
  sjcl.misc.pa = {};
  sjcl.misc.cachedPbkdf2 = function(a, b2) {
    var c = sjcl.misc.pa, d2;
    b2 = b2 || {};
    d2 = b2.iter || 1e3;
    c = c[a] = c[a] || {};
    d2 = c[d2] = c[d2] || { firstSalt: b2.salt && b2.salt.length ? b2.salt.slice(0) : sjcl.random.randomWords(2, 0) };
    c = void 0 === b2.salt ? d2.firstSalt : b2.salt;
    d2[c] = d2[c] || sjcl.misc.pbkdf2(a, c, b2.iter);
    return { key: d2[c].slice(0), salt: c.slice(0) };
  };
  var _HTTPfrontend = class extends Service {
    constructor(options, path, fetched) {
      super(options);
      this.name = "http";
      this.fetchProxied = false;
      this.listening = {};
      this.GET = (url22 = "http://localhost:8080/ping", type = "", mimeType) => {
        if (type === "json")
          mimeType = "application/json";
        return new Promise((resolve, reject) => {
          let xhr = _HTTPfrontend.request({ method: "GET", url: url22, responseType: type, mimeType, onload: (ev2) => {
            let data;
            if (xhr.responseType === "" || xhr.responseType === "text")
              data = xhr.responseText;
            else
              data = xhr.response;
            if (url22 instanceof URL)
              url22 = url22.toString();
            this.setState({ [url22]: data });
            resolve(data);
          }, onabort: (er) => {
            reject(er);
          } });
        }).catch(console.error);
      };
      this.POST = (message4, url22 = "http://localhost:8080/echo", type = "", mimeType) => {
        if (typeof message4 === "object" && (type === "json" || type === "text" || !type)) {
          message4 = JSON.stringify(message4);
        }
        if (type === "json")
          mimeType = "application/json";
        return new Promise((resolve, reject) => {
          let xhr = _HTTPfrontend.request({ method: "POST", url: url22, data: message4, responseType: type, mimeType, onload: (ev2) => {
            let data;
            if (xhr.responseType === "" || xhr.responseType === "text")
              data = xhr.responseText;
            else
              data = xhr.response;
            if (url22 instanceof URL)
              url22 = url22.toString();
            this.setState({ [url22]: data });
            resolve(data);
          }, onabort: (er) => {
            reject(er);
          } });
        }).catch(console.error);
      };
      this.transmit = (message4, url22) => {
        let obj = message4;
        if (typeof obj === "object") {
          message4 = JSON.stringify(obj);
        }
        if (obj?.method?.toLowerCase() == "get" || message4?.toLowerCase() === "get")
          return this.GET(url22);
        return this.POST(message4, url22);
      };
      this.transponder = (url22, message4, type = "", mimeType) => {
        if (typeof message4 === "object")
          message4 = JSON.stringify(message4);
        let method = "GET";
        if (message4) {
          method = "POST";
        }
        if (type === "json")
          mimeType = "application/json";
        else
          return new Promise((resolve, reject) => {
            let xhr = _HTTPfrontend.request({ method, url: url22, data: message4, responseType: type, onload: (ev2) => {
              let body = xhr.response;
              if (typeof body === "string") {
                let substr = body.substring(0, 8);
                if (substr.includes("{") || substr.includes("[")) {
                  if (substr.includes("\\"))
                    body = body.replace(/\\/g, "");
                  if (body[0] === '"') {
                    body = body.substring(1, body.length - 1);
                  }
                  ;
                  body = JSON.parse(body);
                }
              }
              if (typeof body?.method === "string") {
                return resolve(this.handleMethod(body.route, body.method, body.args));
              } else if (typeof body?.route === "string") {
                return resolve(this.handleServiceMessage(body));
              } else if (typeof body?.node === "string" || body.node instanceof GraphNode) {
                return resolve(this.handleGraphNodeCall(body.node, body.args));
              } else
                return resolve(body);
            }, onabort: (er) => {
              reject(er);
            } });
          }).catch(console.error);
      };
      this.listen = (path2 = "0", fetched2 = async (clone, args, response) => {
        const result = await clone.text();
        const returned = this.receive(result);
        this.setState({ [response.url]: returned });
      }) => {
        this.listening[path2] = {};
        let listenerId = `${path2}${Math.floor(Math.random() * 1e15)}`;
        this.listening[path2][listenerId] = fetched2;
        if (!this.fetchProxied) {
          globalThis.fetch = new Proxy(globalThis.fetch, { apply(fetch, that, args) {
            const result = fetch.apply(that, args);
            result.then((response) => {
              if (!response.ok)
                return;
              if (this.listening["0"]) {
                for (const key in this.listeners) {
                  const clone = response.clone();
                  this.listening["0"][key](clone, args, response);
                }
              } else {
                for (const key in this.listening) {
                  if (response.url.includes(key)) {
                    for (const key2 in this.listening[path2]) {
                      const clone = response.clone();
                      this.listening[path2][key2](clone, args, response);
                    }
                    break;
                  }
                }
              }
            }).catch((er) => {
              console.error(er);
            });
            return result;
          } });
          this.fetchProxied = true;
        }
        return listenerId;
      };
      this.stopListening = (path2, listener) => {
        if (!path2 && path2 !== 0) {
          for (const key in this.listening)
            delete this.listening[key];
        } else {
          if (!listener)
            delete this.listening[path2];
          else
            delete this.listening[listener];
        }
      };
      this.load(this);
      this.listen(path, fetched);
    }
  };
  var HTTPfrontend = _HTTPfrontend;
  HTTPfrontend.request = (options) => {
    const xhr = new XMLHttpRequest();
    if (options.responseType)
      xhr.responseType = options.responseType;
    else
      options.responseType = "json";
    if (options.mimeType) {
      xhr.overrideMimeType(options.mimeType);
    }
    if (options.onload)
      xhr.addEventListener("load", options.onload, false);
    if (options.onprogress)
      xhr.addEventListener("progress", options.onprogress, false);
    if (options.onabort)
      xhr.addEventListener("abort", options.onabort, false);
    if (options.onloadend)
      xhr.addEventListener("loadend", options.onloadend, false);
    if (options.onerror)
      xhr.addEventListener("error", options.onerror, false);
    xhr.open(options.method, options.url, true, options.user, options.pass);
    if (!options.onerror)
      xhr.onerror = function() {
        xhr.abort();
      };
    xhr.send(options.data);
    return xhr;
  };
  var import_web_worker = __toESM22(require_browser());
  var WorkerService = class extends Service {
    constructor(options) {
      super();
      this.name = "worker";
      this.workers = {};
      this.threadRot = 0;
      this.loadWorkerRoute = (rt, routeKey) => {
        if (rt.workerUrl)
          rt.url = rt.workerUrl;
        if (rt.workerId)
          rt.__node.tag = rt.workerId;
        if (!rt.__node.tag)
          rt.__node.tag = routeKey;
        rt._id = rt.__node.tag;
        let worker;
        if (this.workers[rt._id])
          worker = this.workers[rt._id];
        else if (rt.worker)
          worker = rt.worker;
        if (!worker) {
          worker = this.addWorker(rt);
        }
        rt.worker = worker;
        if (!rt.worker.__ondisconnected) {
          let ondelete = (rt2) => {
            rt2.worker?.terminate();
          };
          rt.__addOndisconnected(ondelete);
        }
        if (rt.transferFunctions) {
          for (const prop in rt.transferFunctions) {
            this.transferFunction(worker, rt.transferFunctions[prop], prop);
          }
        }
        if (rt.transferClasses) {
          for (const prop in rt.transferClasses) {
            this.transferClass(worker, rt.transferClasses[prop], prop);
          }
        }
        if (worker) {
          if (!rt.__operator) {
            rt.__operator = (...args) => {
              if (rt.callback) {
                if (!this.__node.nodes.get(rt.__node.tag)?.__children)
                  worker.post(rt.callback, args);
                else
                  return worker.run(rt.callback, args);
              } else {
                if (!this.__node.nodes.get(rt.__node.tag)?.__children)
                  worker.send(args);
                else
                  return worker.request(args);
              }
            };
          }
          if (rt.init) {
            worker.run(rt.init, rt.initArgs, rt.initTransfer);
          }
          return worker;
        }
      };
      this.workerloader = { "workers": (node, parent, graph, roots) => {
        let rt = node;
        if (!node.parentRoute && (parent?.callback && parent?.worker))
          node.parentRoute = parent?.callback;
        if (rt?.worker || rt?.workerId || rt?.workerUrl) {
          let worker = this.loadWorkerRoute(rt, rt.__node.tag);
          if (worker) {
            if (!rt.parentRoute && rt.__parent?.callback)
              rt.parentRoute = rt.__parent.callback;
            if (rt.__parent && !rt.portId) {
              if (typeof rt.__parent === "string") {
                if (rt.__node.tag !== rt.__parent && worker._id !== rt.__parent)
                  rt.portId = this.establishMessageChannel(worker, rt.__parent);
              } else if (rt.__node.tag !== rt.__parent?.__node?.tag && worker._id !== rt.__parent?.tag) {
                rt.portId = this.establishMessageChannel(worker, rt.__parent.worker);
              }
            }
            ;
            if (rt.parentRoute) {
              if (!rt.stopped) {
                if (typeof rt.__parent === "string" && rt.__parent === worker._id) {
                  worker.run("subscribe", [rt.parentRoute, void 0, void 0, rt.callback]);
                } else if (rt.__node.tag === rt.__parent?.__node?.tag || worker._id === rt.__parent?.__node?.tag) {
                  worker.run("subscribe", [rt.parentRoute, void 0, void 0, rt.callback]);
                } else
                  worker.run("subscribeToWorker", [rt.parentRoute, rt.portId, void 0, rt.callback, void 0, void 0, rt.blocking]).then((sub) => {
                    worker.workerSubs[rt.parentRoute + rt.portId].sub = sub;
                  });
              }
              if (!(typeof rt.__parent === "string" && rt.__parent === worker._id) && !(rt.__node.tag === rt.__parent?.__node?.tag || worker._id === rt.__parent?.__node?.tag))
                worker.workerSubs[rt.parentRoute + rt.portId] = { sub: null, route: rt.parentRoute, portId: rt.portId, callback: rt.callback, blocking: rt.blocking };
            } else if (rt.__parent) {
              if (typeof rt.__parent === "string") {
                if (!rt.stopped) {
                  if (rt.__parent === worker._id) {
                    worker.run("subscribe", [rt.__parent, void 0, rt.callback]);
                  } else
                    worker.run("subscribeToWorker", [rt.__parent, rt.portId, void 0, rt.callback, void 0, void 0, rt.blocking]).then((sub) => {
                      worker.workerSubs[rt.__parent + rt.portId].sub = sub;
                    });
                }
                if (!(typeof rt.__parent === "string" && rt.__parent === worker._id))
                  worker.workerSubs[rt.__parent + rt.portId] = { sub: null, route: worker._id, portId: rt.portId, callback: rt.callback, blocking: rt.blocking };
              } else if (rt.__parent?.__node?.tag && rt.__parent?.worker) {
                if (!rt.stopped) {
                  if (rt.__node.tag === rt.__parent.__node.tag || worker._id === rt.__parent.__node.tag) {
                    worker.run("subscribe", [rt.__parent.__node.tag, void 0, void 0, rt.callback]);
                  } else
                    worker.run("subscribeToWorker", [rt.__parent.__node.tag, rt.portId, void 0, rt.callback, void 0, void 0, rt.blocking]).then((sub) => {
                      worker.workerSubs[rt.__parent.__node.tag + rt.portId].sub = sub;
                    });
                }
                if (!(rt.__node.tag === rt.__parent?.__node?.tag || worker._id === rt.__parent?.__node?.tag))
                  worker.workerSubs[rt.__parent.__node.tag + rt.portId] = { sub: null, route: rt.__parent.__node.tag, portId: rt.portId, callback: rt.callback, blocking: rt.blocking };
              }
            }
          }
        } else if (rt.__parent && rt.parentRoute) {
          if (typeof rt.__parent === "string" && roots[rt.__parent]?.worker) {
            roots[rt.__parent].worker.subscribe(rt.parentRoute, rt.__operator, void 0, void 0, void 0, rt.blocking);
          } else if (rt.__parent?.worker) {
            rt.__parent.worker.subscribe(rt.parentRoute, rt.__operator, void 0, void 0, void 0, rt.blocking);
          }
        }
        return rt;
      } };
      this.addDefaultMessageListener = () => {
        globalThis.onmessage = (ev2) => {
          let result = this.receive(ev2.data);
          if (this.__node.keepState)
            this.setState({ [this.name]: result });
        };
      };
      this.postMessage = (message4, target, transfer) => {
        if (this.workers[target]) {
          this.workers[target].send(message4, transfer);
        } else {
          globalThis.postMessage(message4, target, transfer);
        }
      };
      this.addWorker = (options2) => {
        let worker;
        if (!options2._id)
          options2._id = `worker${Math.floor(Math.random() * 1e15)}`;
        if (options2.url)
          worker = new import_web_worker.default(options2.url);
        else if (options2.port) {
          worker = options2.port;
        } else if (this.workers[options2._id]) {
          if (this.workers[options2._id].port)
            worker = this.workers[options2._id].port;
          else
            worker = this.workers[options2._id].worker;
        }
        if (!worker)
          return;
        let send = (message4, transfer) => {
          return this.transmit(message4, worker, transfer);
        };
        let post = (route, args, transfer, method) => {
          let message4 = { route, args };
          if (method)
            message4.method = method;
          return this.transmit(message4, worker, transfer);
        };
        let run = (route, args, transfer, method) => {
          return new Promise((res, rej) => {
            let callbackId = Math.random();
            let req = { route: "runRequest", args: [{ route, args }, options2._id, callbackId] };
            if (method)
              req.args[0].method = method;
            let onmessage = (ev2) => {
              if (typeof ev2.data === "object") {
                if (ev2.data.callbackId === callbackId) {
                  worker.removeEventListener("message", onmessage);
                  res(ev2.data.args);
                }
              }
            };
            worker.addEventListener("message", onmessage);
            this.transmit(req, worker, transfer);
          });
        };
        let request = (message4, transfer, method) => {
          return new Promise((res, rej) => {
            let callbackId = Math.random();
            let req = { route: "runRequest", args: [message4, options2._id, callbackId] };
            if (method)
              req.method = method;
            let onmessage = (ev2) => {
              if (typeof ev2.data === "object") {
                if (ev2.data.callbackId === callbackId) {
                  worker.removeEventListener("message", onmessage);
                  res(ev2.data.args);
                }
              }
            };
            worker.addEventListener("message", onmessage);
            this.transmit(req, worker, transfer);
          });
        };
        let workerSubs = {};
        let subscribe = (route, callback, args, key, subInput, blocking) => {
          return this.subscribeToWorker(route, options2._id, callback, args, key, subInput, blocking);
        };
        let unsubscribe = (route, sub) => {
          return run("unsubscribe", [route, sub]);
        };
        let start = async (route, portId, callback, blocking) => {
          if (route)
            await run("subscribeToWorker", [route, portId, void 0, callback, blocking]).then((sub) => {
              if (sub)
                workerSubs[route + portId] = { sub, route, portId, callback, blocking };
            });
          else
            for (const key in workerSubs) {
              if (typeof workerSubs[key].sub !== "number")
                await run("subscribeToWorker", [workerSubs[key].route, workerSubs[key].portId, void 0, workerSubs[key].callback, void 0, workerSubs[key].blocking]).then((sub) => {
                  workerSubs[key].sub = sub;
                });
              console.log(JSON.stringify(workerSubs));
            }
          return true;
        };
        let stop = async (route, portId) => {
          if (route && portId && workerSubs[route + portId]) {
            await run("unsubscribe", [route, workerSubs[route + portId].sub]);
            workerSubs[route + portId].sub = false;
          } else {
            for (const key in workerSubs) {
              if (typeof workerSubs[key].sub === "number") {
                await run("unpipeWorkers", [workerSubs[key].route, workerSubs[key].portId, workerSubs[key].sub]).then(console.log);
              }
              workerSubs[key].sub = false;
            }
          }
          return true;
        };
        let terminate = () => {
          for (const key in workerSubs) {
            if (typeof workerSubs[key].sub === "number") {
              run("unpipeWorkers", [workerSubs[key].route, workerSubs[key].portId, workerSubs[key].sub]);
            }
            workerSubs[key].sub = false;
          }
          return this.terminate(options2._id);
        };
        if (!options2.onmessage)
          options2.onmessage = (ev2) => {
            this.receive(ev2.data);
            this.setState({ [options2._id]: ev2.data });
          };
        if (!options2.onerror) {
          options2.onerror = (ev2) => {
            console.error(ev2.data);
          };
        }
        worker.onmessage = options2.onmessage;
        worker.onerror = options2.onerror;
        this.workers[options2._id] = { worker, send, post, run, request, subscribe, unsubscribe, terminate, start, stop, postMessage: worker.postMessage, workerSubs, graph: this, ...options2 };
        return this.workers[options2._id];
      };
      this.toObjectURL = (scriptTemplate) => {
        let blob = new Blob([scriptTemplate], { type: "text/javascript" });
        return URL.createObjectURL(blob);
      };
      this.transmit = (message4, worker, transfer) => {
        if (!transfer) {
          transfer = this.getTransferable(message4);
        }
        if (worker instanceof import_web_worker.default || worker instanceof MessagePort) {
          worker.postMessage(message4, transfer);
        } else if (typeof worker === "string") {
          if (this.workers[worker]) {
            if (this.workers[worker].port)
              this.workers[worker].port.postMessage(message4, transfer);
            else if (this.workers[worker].worker)
              this.workers[worker].worker.postMessage(message4, transfer);
          }
        } else {
          let keys = Object.keys(this.workers);
          this.workers[keys[this.threadRot]].worker.postMessage(message4, transfer);
          this.threadRot++;
          if (this.threadRot === keys.length)
            this.threadRot = 0;
        }
        return message4;
      };
      this.terminate = (worker) => {
        let onclose;
        if (typeof worker === "string") {
          let obj = this.workers[worker];
          if (obj) {
            delete this.workers[worker];
            worker = obj.worker;
            if (obj.onclose)
              onclose = obj.onclose;
          }
        } else if (typeof worker === "object") {
          if (worker?._id) {
            worker = worker.worker;
            delete this.workers[worker?._id];
          }
        }
        if (worker instanceof import_web_worker.default) {
          worker.terminate();
          if (onclose)
            onclose(worker);
          return true;
        }
        if (worker instanceof MessagePort) {
          worker.close();
          if (onclose)
            onclose(worker);
          return true;
        }
        return false;
      };
      this.establishMessageChannel = (worker, worker2) => {
        let workerId;
        if (typeof worker === "string") {
          workerId = worker;
          if (this.workers[worker]) {
            if (this.workers[worker].port)
              worker = this.workers[worker].port;
            else
              worker2 = this.workers[worker].worker;
          }
        } else if (worker?.worker) {
          worker = worker.worker;
        }
        if (typeof worker2 === "string") {
          if (this.workers[worker2]) {
            if (this.workers[worker2].port)
              worker2 = this.workers[worker2].port;
            else
              worker2 = this.workers[worker2].worker;
          }
        } else if (worker2?.worker) {
          worker2 = worker2.worker;
        }
        if (worker instanceof import_web_worker.default || worker instanceof MessagePort) {
          let channel = new MessageChannel();
          let portId = `port${Math.floor(Math.random() * 1e15)}`;
          worker.postMessage({ route: "addWorker", args: { port: channel.port1, _id: portId } }, [channel.port1]);
          if (worker2 instanceof import_web_worker.default || worker2 instanceof MessagePort) {
            worker2.postMessage({ route: "addWorker", args: { port: channel.port2, _id: portId } }, [channel.port2]);
          } else if (workerId && this.workers[workerId]) {
            channel.port2.onmessage = this.workers[workerId].onmessage;
            this.workers[workerId].port = channel.port2;
          }
          return portId;
        }
        return false;
      };
      this.request = (message4, workerId, transfer, method) => {
        let worker = this.workers[workerId].worker;
        return new Promise((res, rej) => {
          let callbackId = Math.random();
          let req = { route: "runRequest", args: [message4, callbackId] };
          if (method)
            req.method = method;
          let onmessage = (ev2) => {
            if (typeof ev2.data === "object") {
              if (ev2.data.callbackId === callbackId) {
                worker.removeEventListener("message", onmessage);
                res(ev2.data.args);
              }
            }
          };
          worker.addEventListener("message", onmessage);
          this.transmit(req, worker, transfer);
        });
      };
      this.runRequest = (message4, worker, callbackId) => {
        let res = this.receive(message4);
        if (typeof worker === "string" && this.workers[worker]) {
          if (this.workers[worker].port)
            worker = this.workers[worker].port;
          else
            worker = this.workers[worker].worker;
        }
        if (res instanceof Promise) {
          res.then((r) => {
            if (worker instanceof import_web_worker.default || worker instanceof MessagePort)
              worker.postMessage({ args: r, callbackId });
            else if (typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope)
              globalThis.postMessage({ args: r, callbackId });
          });
        } else {
          if (worker instanceof import_web_worker.default || worker instanceof MessagePort)
            worker.postMessage({ args: res, callbackId });
          else if (typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope)
            globalThis.postMessage({ args: res, callbackId });
        }
        return res;
      };
      this.subscribeWorker = (route, worker, args, key, subInput, blocking) => {
        let callback;
        if (blocking) {
          let blocked = false;
          callback = (res) => {
            if (!blocked) {
              blocked = true;
              if (res instanceof Promise) {
                res.then((r) => {
                  if (worker?.run)
                    worker.run("triggerSubscription", [route, worker._id, r]).then((ret) => {
                      blocked = false;
                    });
                });
              } else {
                if (worker?.run)
                  worker.run("triggerSubscription", [route, worker._id, res]).then((ret) => {
                    blocked = false;
                  });
              }
            }
          };
        } else {
          callback = (res) => {
            if (res instanceof Promise) {
              res.then((r) => {
                if (worker?.postMessage)
                  worker.postMessage({ args: r, callbackId: route });
                else if (globalThis.postMessage)
                  globalThis.postMessage({ args: r, callbackId: route });
              });
            } else {
              if (worker?.postMessage)
                worker.postMessage({ args: res, callbackId: route });
              else if (globalThis.postMessage)
                globalThis.postMessage({ args: res, callbackId: route });
            }
          };
        }
        if (!blocking && worker?.port) {
          worker = worker.port;
        } else if (!blocking && worker?.worker) {
          worker = worker.worker;
        } else if (typeof worker === "string" && this.workers[worker]) {
          if (blocking)
            worker = this.workers[worker];
          else if (this.workers[worker].port)
            worker = this.workers[worker].port;
          else
            worker = this.workers[worker].worker;
        }
        return this.subscribe(route, callback, args, key, subInput);
      };
      this.subscribeToWorker = (route, workerId, callback, args, key, subInput, blocking) => {
        if (typeof workerId === "string" && this.workers[workerId]) {
          this.__node.state.subscribeEvent(workerId, (res) => {
            if (res?.callbackId === route) {
              if (!callback)
                this.setState({ [workerId]: res.args });
              else if (typeof callback === "string") {
                this.run(callback, res.args);
              } else
                callback(res.args);
            }
          });
          return this.workers[workerId].run("subscribeWorker", [route, workerId, args, key, subInput, blocking]);
        }
      };
      this.triggerSubscription = async (route, workerId, result) => {
        if (this.__node.state.triggers[workerId])
          for (let i = 0; i < this.__node.state.triggers[workerId].length; i++) {
            await this.__node.state.triggers[workerId][i].onchange({ args: result, callbackId: route });
          }
        return true;
      };
      this.pipeWorkers = (sourceWorker, listenerWorker, sourceRoute, listenerRoute, portId, args, key, subInput, blocking) => {
        if (typeof sourceWorker === "string")
          sourceWorker = this.workers[sourceWorker];
        if (typeof listenerWorker === "string")
          listenerWorker = this.workers[listenerWorker];
        if (!portId) {
          portId = this.establishMessageChannel(sourceWorker.worker, listenerWorker.worker);
        }
        return listenerWorker.run("subscribeToWorker", [sourceRoute, portId, listenerRoute, args, key, subInput, blocking]);
      };
      this.unpipeWorkers = (sourceRoute, sourceWorker, sub) => {
        if (typeof sourceWorker === "string")
          sourceWorker = this.workers[sourceWorker];
        if (typeof sourceWorker === "object") {
          return sourceWorker.run("unsubscribe", [sourceRoute, sub]);
        }
      };
      this.connections = { workers: this.workers };
      if (options?.services)
        this.addServices(options.services);
      this.load(this);
      this.setLoaders(this.workerloader);
      if (options)
        this.init(options);
      if (typeof WorkerGlobalScope !== "undefined" && globalThis instanceof WorkerGlobalScope) {
        this.addDefaultMessageListener();
      }
    }
    getTransferable(message4) {
      let transfer;
      if (typeof message4 === "object") {
        if (message4.args) {
          if (message4.args?.constructor?.name === "Object") {
            for (const key in message4.args) {
              if (ArrayBuffer.isView(message4.args[key])) {
                if (!transfer)
                  transfer = [message4.args[key].buffer];
                else
                  transfer.push(message4.args[key].buffer);
              } else if (message4.args[key]?.constructor?.name === "ArrayBuffer") {
                if (!transfer)
                  transfer = [message4.args[key]];
                else
                  transfer.push(message4.args[key]);
              }
            }
          } else if (Array.isArray(message4.args) && message4.args.length < 11) {
            message4.args.forEach((arg) => {
              if (ArrayBuffer.isView(arg)) {
                transfer = [arg.buffer];
              } else if (arg?.constructor?.name === "ArrayBuffer")
                transfer = [arg];
            });
          } else if (ArrayBuffer.isView(message4.args)) {
            transfer = [message4.args.buffer];
          } else if (message4.args?.constructor?.name === "ArrayBuffer") {
            transfer = [message4];
          }
        } else if (message4?.constructor?.name === "Object") {
          for (const key in message4) {
            if (ArrayBuffer.isView(message4[key])) {
              if (!transfer)
                transfer = [message4[key].buffer];
              else
                transfer.push(message4[key].buffer);
            } else if (message4[key]?.constructor?.name === "ArrayBuffer") {
              if (!transfer)
                transfer = [message4[key]];
              else
                transfer.push(message4[key]);
            }
          }
        } else if (Array.isArray(message4) && message4.length < 11) {
          message4.forEach((arg) => {
            if (ArrayBuffer.isView(arg)) {
              transfer = [arg.buffer];
            } else if (arg.constructor?.name === "ArrayBuffer")
              transfer = [arg];
          });
        } else if (ArrayBuffer.isView(message4)) {
          transfer = [message4.buffer];
        } else if (message4.constructor?.name === "ArrayBuffer") {
          transfer = [message4];
        }
      }
      return transfer;
    }
    transferFunction(worker, fn, fnName) {
      if (!fnName)
        fnName = fn.name;
      return worker.request({ route: "setRoute", args: [fn.toString(), fnName] });
    }
    transferClass(worker, cls, className) {
      if (!className)
        className = cls.name;
      return worker.request({ route: "receiveClass", args: [cls.toString(), className] });
    }
    receiveNode(properties) {
      if (properties.__methods) {
        if (!this.__node.graph.loaders.methodstrings) {
          this.__node.graph.__node.loaders.methodstrings = methodstrings;
        }
      }
      let node = this.__node.graph.add(properties);
      return node.__node.tag;
    }
    transferNode(properties, worker, name3) {
      if (!properties.__node) {
        properties.__node = {};
      }
      properties.__node.tag = name3;
      for (const key in properties) {
        if (typeof properties[key] === "function") {
          if (!properties.__methods)
            properties.__methods = {};
          properties.__methods[key] = properties[key].toString();
        }
      }
      if (worker.run)
        return worker.run("receiveNode", [recursivelyStringifyFunctions(properties)]);
      else if (worker.postMessage) {
        worker.postMessage({ route: "receiveNode", args: recursivelyStringifyFunctions(properties) }, void 0);
        return new Promise((r) => r(name3));
      }
    }
  };
  var mouseEventHandler = makeSendPropertiesHandler(["ctrlKey", "metaKey", "shiftKey", "button", "pointerType", "clientX", "clientY", "pageX", "pageY"]);
  var wheelEventHandlerImpl = makeSendPropertiesHandler(["deltaX", "deltaY"]);
  var keydownEventHandler = makeSendPropertiesHandler(["ctrlKey", "metaKey", "shiftKey", "keyCode"]);
  function wheelEventHandler(event, sendFn) {
    event.preventDefault();
    wheelEventHandlerImpl(event, sendFn);
  }
  function preventDefaultHandler(event) {
    event.preventDefault();
  }
  function copyProperties(src, properties, dst) {
    for (const name3 of properties) {
      dst[name3] = src[name3];
    }
  }
  function makeSendPropertiesHandler(properties) {
    return function sendProperties(event, sendFn) {
      const data = { type: event.type };
      copyProperties(event, properties, data);
      sendFn(data);
    };
  }
  function touchEventHandler(event, sendFn) {
    const touches = [];
    const data = { type: event.type, touches };
    for (let i = 0; i < event.touches.length; ++i) {
      const touch = event.touches[i];
      touches.push({ pageX: touch.pageX, pageY: touch.pageY });
    }
    sendFn(data);
  }
  var orbitKeys = { "37": true, "38": true, "39": true, "40": true };
  function filteredKeydownEventHandler(event, sendFn) {
    const { keyCode } = event;
    if (orbitKeys[keyCode]) {
      event.preventDefault();
      keydownEventHandler(event, sendFn);
    }
  }
  var eventHandlers = { contextmenu: preventDefaultHandler, mousedown: mouseEventHandler, mousemove: mouseEventHandler, mouseup: mouseEventHandler, pointerdown: mouseEventHandler, pointermove: mouseEventHandler, pointerup: mouseEventHandler, touchstart: touchEventHandler, touchmove: touchEventHandler, touchend: touchEventHandler, wheel: wheelEventHandler, keydown: filteredKeydownEventHandler };
  function initProxyElement(element, worker, id) {
    if (!id)
      id = "proxy" + Math.floor(Math.random() * 1e15);
    const sendEvent = (data) => {
      if (!worker) {
        handleProxyEvent(data, id);
      } else
        worker.postMessage({ route: "handleProxyEvent", args: [data, id] });
    };
    let entries = Object.entries(eventHandlers);
    for (const [eventName, handler] of entries) {
      element.addEventListener(eventName, function(event) {
        handler(event, sendEvent);
      });
    }
    const sendSize = () => {
      const rect = element.getBoundingClientRect();
      sendEvent({ type: "resize", left: rect.left, top: rect.top, width: element.clientWidth, height: element.clientHeight });
    };
    sendSize();
    globalThis.addEventListener("resize", sendSize);
    return id;
  }
  var EventDispatcher = class {
    addEventListener(type, listener) {
      if (this.__listeners === void 0)
        this.__listeners = {};
      const listeners = this.__listeners;
      if (listeners[type] === void 0) {
        listeners[type] = [];
      }
      if (listeners[type].indexOf(listener) === -1) {
        listeners[type].push(listener);
      }
    }
    hasEventListener(type, listener) {
      if (this.__listeners === void 0)
        return false;
      const listeners = this.__listeners;
      return listeners[type] !== void 0 && listeners[type].indexOf(listener) !== -1;
    }
    removeEventListener(type, listener) {
      if (this.__listeners === void 0)
        return;
      const listeners = this.__listeners;
      const listenerArray = listeners[type];
      if (listenerArray !== void 0) {
        const index = listenerArray.indexOf(listener);
        if (index !== -1) {
          listenerArray.splice(index, 1);
        }
      }
    }
    dispatchEvent(event, target) {
      if (this.__listeners === void 0)
        return;
      const listeners = this.__listeners;
      const listenerArray = listeners[event.type];
      if (listenerArray !== void 0) {
        if (!target)
          event.target = this;
        else
          event.target = target;
        const array = listenerArray.slice(0);
        for (let i = 0, l = array.length; i < l; i++) {
          array[i].call(this, event);
        }
        event.target = null;
      }
    }
  };
  function noop() {
  }
  var ElementProxyReceiver = class extends EventDispatcher {
    constructor() {
      super();
      this.__listeners = {};
      this.style = {};
      this.setPointerCapture = () => {
      };
      this.releasePointerCapture = () => {
      };
      this.getBoundingClientRect = () => {
        return { left: this.left, top: this.top, width: this.width, height: this.height, right: this.left + this.width, bottom: this.top + this.height };
      };
      this.handleEvent = (data) => {
        if (data.type === "resize") {
          this.left = data.left;
          this.top = data.top;
          this.width = data.width;
          this.height = data.height;
          if (typeof this.proxied === "object") {
            this.proxied.style.width = this.width + "px";
            this.proxied.style.height = this.height + "px";
            this.proxied.clientWidth = this.width;
            this.proxied.clientHeight = this.height;
          }
        }
        data.preventDefault = noop;
        data.stopPropagation = noop;
        this.dispatchEvent(data, this.proxied);
      };
      this.style = {};
    }
    get clientWidth() {
      return this.width;
    }
    get clientHeight() {
      return this.height;
    }
    focus() {
    }
  };
  var ProxyManager = class {
    constructor() {
      this.targets = {};
      this.makeProxy = (id, addTo = void 0) => {
        if (!id)
          id = `proxyReceiver${Math.floor(Math.random() * 1e15)}`;
        let proxy;
        if (this.targets[id])
          proxy = this.targets[id];
        else {
          proxy = new ElementProxyReceiver();
          this.targets[id] = proxy;
        }
        if (typeof addTo === "object") {
          addTo.proxy = proxy;
          proxy.proxied = addTo;
          if (typeof WorkerGlobalScope !== "undefined")
            addTo.style = proxy.style;
          if (proxy.width) {
            addTo.style.width = proxy.width + "px";
            addTo.clientWidth = proxy.width;
          }
          if (proxy.height) {
            addTo.style.height = proxy.height + "px";
            addTo.clientHeight = proxy.height;
          }
          addTo.setPointerCapture = proxy.setPointerCapture.bind(proxy);
          addTo.releasePointerCapture = proxy.releasePointerCapture.bind(proxy);
          addTo.getBoundingClientRect = proxy.getBoundingClientRect.bind(proxy);
          addTo.addEventListener = proxy.addEventListener.bind(proxy);
          addTo.removeEventListener = proxy.removeEventListener.bind(proxy);
          addTo.handleEvent = proxy.handleEvent.bind(proxy);
          addTo.dispatchEvent = proxy.dispatchEvent.bind(proxy);
          addTo.focus = proxy.focus.bind(proxy);
        }
      };
      this.getProxy = (id) => {
        return this.targets[id];
      };
      this.handleEvent = (data, id) => {
        if (!this.targets[id])
          this.makeProxy(id);
        if (this.targets[id]) {
          this.targets[id].handleEvent(data);
          return true;
        }
        return void 0;
      };
      if (!globalThis.document)
        globalThis.document = {};
    }
  };
  function makeProxy(id, elm) {
    if (this?.__node?.graph) {
      if (!this.__node.graph.ProxyManager)
        this.__node.graph.ProxyManager = new ProxyManager();
      this.__node.graph.ProxyManager.makeProxy(id, elm);
    } else {
      if (!globalThis.ProxyManager)
        globalThis.ProxyManager = new ProxyManager();
      globalThis.ProxyManager.makeProxy(id, elm);
    }
    return id;
  }
  function handleProxyEvent(data, id) {
    if (this?.__node?.graph) {
      if (!this.__node.graph.ProxyManager)
        this.__node.graph.ProxyManager = new ProxyManager();
      if (this.__node.graph.ProxyManager.handleEvent(data, id))
        return data;
    } else {
      if (!globalThis.ProxyManager)
        globalThis.ProxyManager = new ProxyManager();
      if (globalThis.ProxyManager.handleEvent(data, id))
        return data;
    }
  }
  var proxyElementWorkerRoutes = { initProxyElement, makeProxy, handleProxyEvent };
  function Renderer(options) {
    if (options.worker) {
      let worker = options.worker;
      let route = options.route;
      if (worker instanceof Blob || typeof worker === "string") {
        worker = new Worker(worker);
      }
      delete options.worker;
      delete options.route;
      return transferCanvas(worker, options, route);
    } else {
      initProxyElement(options.canvas, void 0, options._id);
      return setupCanvas(options);
    }
  }
  function transferCanvas(worker, options, route) {
    if (!options)
      return void 0;
    if (!options._id)
      options._id = `canvas${Math.floor(Math.random() * 1e15)}`;
    let offscreen = options.canvas.transferControlToOffscreen();
    if (!options.width)
      options.width = options.canvas.clientWidth;
    if (!options.height)
      options.height = options.canvas.clientHeight;
    let message4 = { route: route ? route : "setupCanvas", args: { ...options, canvas: offscreen } };
    if (this?.__node?.graph)
      this.__node.graph.run("initProxyElement", options.canvas, worker, options._id);
    else
      initProxyElement(options.canvas, worker, options._id);
    if (options.draw) {
      if (typeof options.draw === "function")
        message4.args.draw = options.draw.toString();
      else
        message4.args.draw = options.draw;
    }
    if (options.update) {
      if (typeof options.update === "function")
        message4.args.update = options.update.toString();
      else
        message4.args.update = options.update;
    }
    if (options.init) {
      if (typeof options.init === "function")
        message4.args.init = options.init.toString();
      else
        message4.args.init = options.init;
    }
    if (options.clear) {
      if (typeof options.clear === "function")
        message4.args.clear = options.clear.toString();
      else
        message4.args.clear = options.clear;
    }
    let transfer = [offscreen];
    if (options.transfer) {
      transfer.push(...options.transfer);
      delete options.transfer;
    }
    worker.postMessage(message4, transfer);
    const canvascontrols = { _id: options._id, width: options.width, height: options.height, worker, draw: (props2) => {
      worker.postMessage({ route: "drawFrame", args: [props2, options._id] });
    }, update: (props2) => {
      worker.postMessage({ route: "updateCanvas", args: [props2, options._id] });
    }, clear: () => {
      worker.postMessage({ route: "clearCanvas", args: options._id });
    }, init: () => {
      worker.postMessage({ route: "initCanvas", args: options._id });
    }, stop: () => {
      worker.postMessage({ route: "stopAnim", args: options._id });
    }, start: () => {
      worker.postMessage({ route: "startAnim", args: options._id });
    }, set: (newDrawProps) => {
      worker.postMessage({ route: "setDraw", args: [newDrawProps, options._id] });
    }, terminate: () => {
      worker.terminate();
    } };
    return canvascontrols;
  }
  function setDraw(settings, _id) {
    let canvasopts;
    if (this?.__node?.graph) {
      if (_id)
        canvasopts = this.__node.graph.CANVASES?.[settings._id];
      else if (settings._id)
        canvasopts = this.__node.graph.CANVASES?.[settings._id];
      else
        canvasopts = this.__node.graph.CANVASES?.[Object.keys(this.__node.graph.CANVASES)[0]];
    } else {
      if (_id)
        canvasopts = globalThis.CANVASES?.[settings._id];
      else if (settings._id)
        canvasopts = globalThis.CANVASES?.[settings._id];
      else
        canvasopts = globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]];
    }
    if (canvasopts) {
      if (settings.canvas) {
        canvasopts.canvas = settings.canvas;
        if (this?.__node?.graph)
          this.__node.graph.run("makeProxy", canvasopts._id, canvasopts.canvas);
        else
          proxyElementWorkerRoutes.makeProxy(canvasopts._id, canvasopts.canvas);
      }
      if (typeof settings.context === "string")
        canvasopts.context = canvasopts.canvas.getContext(settings.context);
      else if (settings.context)
        canvasopts.context = settings.context;
      if (settings.width)
        canvasopts.canvas.width = settings.width;
      if (settings.height)
        canvasopts.canvas.height = settings.height;
      if (typeof settings.draw === "string")
        settings.draw = parseFunctionFromText3(settings.draw);
      if (typeof settings.draw === "function") {
        canvasopts.draw = settings.draw;
      }
      if (typeof settings.update === "string")
        settings.update = parseFunctionFromText3(settings.update);
      if (typeof settings.update === "function") {
        canvasopts.update = settings.update;
      }
      if (typeof settings.init === "string")
        settings.init = parseFunctionFromText3(settings.init);
      if (typeof settings.init === "function") {
        canvasopts.init = settings.init;
      }
      if (typeof settings.clear === "string")
        settings.clear = parseFunctionFromText3(settings.clear);
      if (typeof settings.clear === "function") {
        canvasopts.clear = settings.clear;
      }
      return settings._id;
    }
    return void 0;
  }
  function setupCanvas(options) {
    if (this?.__node?.graph) {
      if (!this.__node.graph.CANVASES)
        this.__node.graph.CANVASES = {};
    } else if (!globalThis.CANVASES)
      globalThis.CANVASES = {};
    let canvasOptions = options;
    options._id ? canvasOptions._id = options._id : canvasOptions._id = `canvas${Math.floor(Math.random() * 1e15)}`;
    typeof options.context === "string" ? canvasOptions.context = options.canvas.getContext(options.context) : canvasOptions.context = options.context;
    "animating" in options ? canvasOptions.animating = options.animating : canvasOptions.animating = true;
    if (this?.__node?.graph?.CANVASES[canvasOptions._id]) {
      this.__node.graph.run("setDraw", canvasOptions);
    } else if (globalThis.CANVASES?.[canvasOptions._id]) {
      setDraw(canvasOptions);
    } else {
      if (this?.__node?.graph)
        canvasOptions.graph = this.__node.graph;
      if (this?.__node?.graph)
        this.__node.graph.CANVASES[canvasOptions._id] = canvasOptions;
      else
        globalThis.CANVASES[canvasOptions._id] = canvasOptions;
      if (this?.__node?.graph)
        this.__node.graph.run("makeProxy", canvasOptions._id, canvasOptions.canvas);
      else
        proxyElementWorkerRoutes.makeProxy(canvasOptions._id, canvasOptions.canvas);
      if (options.width)
        canvasOptions.canvas.width = options.width;
      if (options.height)
        canvasOptions.canvas.height = options.height;
      if (typeof canvasOptions.draw === "string") {
        canvasOptions.draw = parseFunctionFromText3(canvasOptions.draw);
      } else if (typeof canvasOptions.draw === "function") {
        canvasOptions.draw = canvasOptions.draw;
      }
      if (typeof canvasOptions.update === "string") {
        canvasOptions.update = parseFunctionFromText3(canvasOptions.update);
      } else if (typeof canvasOptions.update === "function") {
        canvasOptions.update = canvasOptions.update;
      }
      if (typeof canvasOptions.init === "string") {
        canvasOptions.init = parseFunctionFromText3(canvasOptions.init);
      } else if (typeof canvasOptions.init === "function") {
        canvasOptions.init = canvasOptions.init;
      }
      if (typeof canvasOptions.clear === "string") {
        canvasOptions.clear = parseFunctionFromText3(canvasOptions.clear);
      } else if (typeof canvasOptions.clear === "function") {
        canvasOptions.clear = canvasOptions.clear;
      }
      if (typeof canvasOptions.init === "function")
        canvasOptions.init(canvasOptions, canvasOptions.canvas, canvasOptions.context);
      canvasOptions.stop = () => {
        stopAnim(canvasOptions._id);
      };
      canvasOptions.start = (draw) => {
        startAnim(canvasOptions._id, draw);
      };
      canvasOptions.set = (settings) => {
        setDraw(settings, canvasOptions._id);
      };
      if (typeof canvasOptions.draw === "function" && canvasOptions.animating) {
        let draw = (s, canvas, context) => {
          if (s.animating) {
            s.draw(s, canvas, context);
            requestAnimationFrame(() => {
              draw(s, canvas, context);
            });
          }
        };
        draw(canvasOptions, canvasOptions.canvas, canvasOptions.context);
      }
    }
    if (typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope)
      return canvasOptions._id;
    else {
      const canvascontrols = { _id: options._id, width: options.width, height: options.height, draw: (props2) => {
        drawFrame(props2, options._id);
      }, update: (props2) => {
        updateCanvas(props2, options._id);
      }, clear: () => {
        clearCanvas(options._id);
      }, init: () => {
        initCanvas(options._id);
      }, stop: () => {
        stopAnim(options._id);
      }, start: () => {
        startAnim(options._id);
      }, set: (newDrawProps) => {
        setDraw(newDrawProps, options._id);
      }, terminate: () => {
        stopAnim(options._id);
      } };
      return canvascontrols;
    }
  }
  function drawFrame(props2, _id) {
    let canvasopts = getCanvas.call(this, _id);
    if (canvasopts) {
      if (props2)
        Object.assign(canvasopts, props2);
      if (canvasopts.draw) {
        canvasopts.draw(canvasopts, canvasopts.canvas, canvasopts.context);
        return _id;
      }
    }
    return void 0;
  }
  function clearCanvas(_id) {
    let canvasopts = getCanvas.call(this, _id);
    if (canvasopts?.clear) {
      canvasopts.clear(canvasopts, canvasopts.canvas, canvasopts.context);
      return _id;
    }
    return void 0;
  }
  function initCanvas(_id) {
    let canvasopts = getCanvas.call(this, _id);
    if (canvasopts?.init) {
      canvasopts.init(canvasopts, canvasopts.canvas, canvasopts.context);
      return _id;
    }
    return void 0;
  }
  function updateCanvas(input, _id) {
    let canvasopts = getCanvas.call(this, _id);
    if (canvasopts?.update) {
      canvasopts.update(canvasopts, canvasopts.canvas, canvasopts.context, input);
      return _id;
    }
    return void 0;
  }
  function setProps(props2, _id) {
    let canvasopts = getCanvas.call(this, _id);
    if (canvasopts) {
      Object.assign(canvasopts, props2);
      if (props2.width)
        canvasopts.canvas.width = props2.width;
      if (props2.height)
        canvasopts.canvas.height = props2.height;
      return _id;
    }
    return void 0;
  }
  function startAnim(_id, draw) {
    let canvasopts = getCanvas.call(this, _id);
    canvasopts.animating = true;
    if (canvasopts && draw) {
      if (typeof draw === "string")
        draw = parseFunctionFromText3(draw);
      if (typeof draw === "function") {
        canvasopts.draw = draw;
      }
      return _id;
    }
    if (typeof canvasopts?.draw === "function") {
      let draw2 = (s, canvas, context) => {
        if (s.animating) {
          s.draw(s, canvas, context);
          requestAnimationFrame(() => {
            draw2(s, canvas, context);
          });
        }
      };
      if (typeof canvasopts.clear === "function")
        canvasopts.clear(canvasopts, canvasopts.canvas, canvasopts.context);
      if (typeof canvasopts.init === "function")
        canvasopts.init(canvasopts, canvasopts.canvas, canvasopts.context);
      draw2(canvasopts, canvasopts.canvas, canvasopts.context);
      return _id;
    }
    return void 0;
  }
  function stopAnim(_id) {
    let canvasopts = getCanvas.call(this, _id);
    if (canvasopts) {
      canvasopts.animating = false;
      if (typeof canvasopts.clear === "function")
        canvasopts.clear(canvasopts, canvasopts.canvas, canvasopts.context);
      return _id;
    }
    return void 0;
  }
  function getCanvas(_id) {
    let canvasopts;
    if (this?.__node?.graph) {
      if (!_id)
        canvasopts = this.__node.graph.CANVASES?.[Object.keys(this.__node.graph.CANVASES)[0]];
      else
        canvasopts = this.__node.graph.CANVASES?.[_id];
    } else {
      if (!_id)
        canvasopts = globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]];
      else
        canvasopts = globalThis.CANVASES?.[_id];
    }
    return canvasopts;
  }
  var workerCanvasRoutes = { ...proxyElementWorkerRoutes, Renderer, transferCanvas, setupCanvas, setDraw, drawFrame, clearCanvas, initCanvas, updateCanvas, setProps, startAnim, stopAnim };
  function parseFunctionFromText3(method = "") {
    let getFunctionBody = (methodString) => {
      return methodString.replace(/^\W*(function[^{]+\{([\s\S]*)\}|[^=]+=>[^{]*\{([\s\S]*)\}|[^=]+=>(.+))/i, "$2$3$4");
    };
    let getFunctionHead = (methodString) => {
      let startindex = methodString.indexOf("=>") + 1;
      if (startindex <= 0) {
        startindex = methodString.indexOf("){");
      }
      if (startindex <= 0) {
        startindex = methodString.indexOf(") {");
      }
      return methodString.slice(0, methodString.indexOf("{", startindex) + 1);
    };
    let newFuncHead = getFunctionHead(method);
    let newFuncBody = getFunctionBody(method);
    let newFunc;
    if (newFuncHead.includes("function")) {
      let varName = newFuncHead.split("(")[1].split(")")[0];
      newFunc = new Function(varName, newFuncBody);
    } else {
      if (newFuncHead.substring(0, 6) === newFuncBody.substring(0, 6)) {
        let varName = newFuncHead.split("(")[1].split(")")[0];
        newFunc = new Function(varName, newFuncBody.substring(newFuncBody.indexOf("{") + 1, newFuncBody.length - 1));
      } else {
        try {
          newFunc = (0, eval)(newFuncHead + newFuncBody + "}");
        } catch {
        }
      }
    }
    return newFunc;
  }
  var algorithms = {};
  var loadAlgorithms = (settings) => {
    return Object.assign(algorithms, settings);
  };
  function createSubprocess(options, inputs) {
    let ctx = { _id: options._id ? options._id : `algorithm${Math.floor(Math.random() * 1e15)}`, ondata: options.ondata, run: (data) => {
      return ctx.ondata(ctx, data);
    } };
    if (options.structs)
      recursivelyAssign3(ctx, JSON.parse(JSON.stringify(options.structs)));
    if (inputs)
      recursivelyAssign3(ctx, JSON.parse(JSON.stringify(inputs)));
    if (options.oncreate) {
      ctx.oncreate = options.oncreate;
    }
    if (ctx.oncreate) {
      ctx.oncreate(ctx);
    }
    return ctx;
  }
  var recursivelyAssign3 = (target, obj) => {
    for (const key in obj) {
      if (typeof obj[key] === "object" && !Array.isArray(obj[key])) {
        if (typeof target[key] === "object" && !Array.isArray(target[key]))
          recursivelyAssign3(target[key], obj[key]);
        else
          target[key] = recursivelyAssign3({}, obj[key]);
      } else
        target[key] = obj[key];
    }
    return target;
  };
  var subprocessRoutes = { ...unsafeRoutes, loadAlgorithms, "initSubprocesses": async function initSubprocesses(subprocesses, service) {
    if (!service)
      service = this.__node.graph;
    if (!service)
      return void 0;
    for (const p in subprocesses) {
      let s = subprocesses[p];
      if (!s.worker && s.url)
        s.worker = service.addWorker({ url: s.url });
      if (!s.worker)
        continue;
      let w2 = s.worker;
      let wpId;
      wpId = service.establishMessageChannel(w2.worker, s.source?.worker);
      if (!s.source)
        s.source = service;
      if (typeof s.subprocess === "object") {
        const p2 = s.subprocess;
        if (!p2.name)
          continue;
        if (typeof p2.oncreate === "function") {
          p2.oncreate = p2.oncreate.toString();
        }
        if (typeof p2.ondata === "function") {
          p2.ondata = p2.ondata.toString();
        }
        s.worker.post("addSubprocessTemplate", [p2.name, p2.structs, p2.oncreate, p2.ondata, p2.props]);
        s.subprocess = p2.name;
      }
      if (s.init) {
        let r = await w2.run(s.init, s.initArgs);
        s.otherArgs = r;
      }
      if (s.otherArgs) {
        w2.run("setValue", ["otherArgsProxy", Array.isArray(s.otherArgs) ? s.otherArgs : [s.otherArgs]]);
      }
      if (s.pipeTo) {
        w2.run("setValue", ["routeProxy", s.route]);
        w2.run("setValue", ["pipeRoute", s.pipeTo.route]);
        if (s.url && !s.pipeTo.worker) {
          let w22 = service.addWorker({ url: s.url });
          s.pipeTo.portId = service.establishMessageChannel(w2.worker, w22.worker);
          s.pipeTo.worker = w22;
        }
        if (s.pipeTo.init) {
          s.pipeTo.otherArgs = await s.pipeTo.worker.run(s.pipeTo.init, s.pipeTo.initArgs);
        }
        w2.run("setValue", ["pipePort", s.pipeTo.portId]);
        if (s.pipeTo.otherArgs)
          w2.run("setValue", ["otherPipeArgs", s.pipeTo.otherArgs]);
        service.transferFunction(w2, function pipeResults(data) {
          let inp = data;
          if (this.__node.graph.otherArgsProxy)
            inp = [data, ...this.__node.graph.otherArgsProxy];
          let r = this.__node.graph.run(this.__node.graph.routeProxy, inp);
          if (!s.blocking)
            return new Promise((res) => {
              if (r instanceof Promise) {
                r.then((rr) => {
                  if (rr !== void 0) {
                    let args = rr;
                    if (this.__node.graph.otherPipeArgs)
                      args = [rr, ...this.__node.graph.otherPipeArgs];
                    if (this.workers[this.__node.graph.pipePort]) {
                      s.blocking = true;
                      this.workers[this.__node.graph.pipePort].run(this.__node.graph.pipeRoute, args).then((result) => {
                        s.blocking = false;
                        res(result);
                      });
                    }
                  }
                });
              } else if (r !== void 0) {
                let args = r;
                if (this.__node.graph.otherPipeArgs)
                  args = [r, ...this.__node.graph.otherPipeArgs];
                if (this.workers[this.__node.graph.pipePort]) {
                  s.blocking = true;
                  this.workers[this.__node.graph.pipePort].run(this.__node.graph.pipeRoute, args).then((result) => {
                    s.blocking = false;
                    res(result);
                  });
                }
              }
            });
          return void 0;
        }, s.route + "_pipeResults");
        s.route = s.route + "_pipeResults";
      } else {
        w2.run("setValue", ["routeProxy", s.route]);
        service.transferFunction(w2, function routeProxy(data) {
          let r;
          if (this.__node.graph.otherArgsProxy)
            r = this.__node.graph.nodes.get(this.__node.graph.routeProxy).__operator(data, ...this.__node.graph.otherArgsProxy);
          else
            r = this.__node.graph.nodes.get(this.__node.graph.routeProxy).__operator(data);
          if (this.__node.graph.state.triggers[this.__node.graph.routeProxy]) {
            if (r instanceof Promise) {
              r.then((rr) => {
                this.setState({ [this.__node.graph.routeProxy]: rr });
              });
            } else
              this.setState({ [this.__node.graph.routeProxy]: r });
          }
          return r;
        }, s.route + "_routeProxy");
        s.route = s.route + "_routeProxy";
        if (!s.stopped)
          w2.run("subscribeToWorker", [s.subscribeRoute, wpId, s.route]).then((sub) => {
            s.sub = sub;
          });
      }
      s.stop = async () => {
        if (s.source && typeof s.sub === "number") {
          s.source.unsubscribe(s.subscribeRoute, s.sub);
          return true;
        }
        return void 0;
      };
      s.start = async () => {
        if (typeof s.sub !== "number")
          return w2.run("subscribeToWorker", [s.subscribeRoute, wpId, s.route, s.blocking]).then((sub) => {
            s.sub = sub;
          });
      };
      s.setArgs = async (args) => {
        if (Array.isArray(args))
          await w2.run("setValue", ["otherArgsProxy", args]);
        else if (typeof args === "object") {
          for (const key in args) {
            await w2.run("setValue", [key, args[key]]);
          }
        }
        return true;
      };
      s.terminate = () => {
        w2.terminate();
        if (s.source?.worker && typeof s.sub === "number") {
          s.source.post("unsubscribe", s.sub);
        }
        if (s.pipeTo?.worker) {
          s.pipeTo.worker.terminate();
        }
      };
      if (s.callback)
        w2.subscribe(s.route, (res) => {
          if (typeof s.callback === "string")
            this.__node.graph.run(s.callback, res);
          else
            s.callback(res);
        });
    }
    return subprocesses;
  }, "addSubprocessTemplate": function subprocesstempalte(name3, structs2, oncreate2, ondata2, props2) {
    if (typeof oncreate2 === "string")
      oncreate2 = parseFunctionFromText(oncreate2);
    if (typeof ondata2 === "string")
      ondata2 = parseFunctionFromText(ondata2);
    if (typeof ondata2 === "function") {
      algorithms[name3] = { ondata: ondata2, oncreate: typeof oncreate2 === "function" ? oncreate2 : null, structs: structs2 };
      if (typeof props2 === "object")
        Object.assign(algorithms[name3], props2);
      return true;
    }
  }, "updateSubprocess": function updatesubprocess(structs2, _id) {
    if (!this.__node.graph.ALGORITHMS)
      this.__node.graph.ALGORITHMS = {};
    if (!_id)
      _id = Object.keys(this.__node.graph.ALGORITHMS)[0];
    if (!_id)
      return;
    Object.assign(this.__node.graph.ALGORITHMS[_id], structs2);
  }, "createSubprocess": function creatsubprocess(options, inputs) {
    if (!this.__node.graph.ALGORITHMS)
      this.__node.graph.ALGORITHMS = {};
    if (typeof options === "string") {
      options = algorithms[options];
    }
    if (typeof options === "object") {
      if (typeof options.ondata === "string")
        options.ondata = parseFunctionFromText(options.ondata);
      let ctx;
      if (typeof options?.ondata === "function")
        ctx = createSubprocess(options, inputs);
      if (ctx)
        this.__node.graph.ALGORITHMS[ctx._id] = ctx;
      if (ctx)
        return ctx._id;
    }
    return false;
  }, "runSubprocess": function runsubprocess(data, _id) {
    if (!this.__node.graph.ALGORITHMS)
      this.__node.graph.ALGORITHMS = {};
    if (!_id)
      _id = Object.keys(this.__node.graph.ALGORITHMS)[0];
    if (!_id)
      return;
    let res = this.__node.graph.ALGORITHMS[_id].run(data);
    if (res !== void 0) {
      if (Array.isArray(res)) {
        let pass = [];
        res.forEach((r) => {
          if (r !== void 0) {
            pass.push(r);
            this.__node.graph.setState({ [_id]: r });
          }
        });
        if (pass.length > 0) {
          return pass;
        }
      } else {
        this.__node.graph.setState({ [_id]: res });
        return res;
      }
    }
  } };
  var url = URL.createObjectURL(new Blob([String('(()=>{var __require=(x=>typeof require!=="undefined"?require:typeof Proxy!=="undefined"?new Proxy(x,{get:(a,b)=>(typeof require!=="undefined"?require:a)[b]}):x)(function(x){if(typeof require!=="undefined")return require.apply(this,arguments);throw new Error(\'Dynamic require of "\'+x+\'" is not supported\')});var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __require2=(x=>typeof __require!=="undefined"?__require:typeof Proxy!=="undefined"?new Proxy(x,{get:(a,b)=>(typeof __require!=="undefined"?__require:a)[b]}):x)(function(x){if(typeof __require!=="undefined")return __require.apply(this,arguments);throw new Error(\'Dynamic require of "\'+x+\'" is not supported\')});var __commonJS=(cb,mod)=>function __require22(){return mod||(0,cb[__getOwnPropNames(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from==="object"||typeof from==="function"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:true}):target,mod));var require_browser=__commonJS({"node_modules/web-worker/cjs/browser.js"(exports,module2){module2.exports=Worker}});var EventHandler=class{constructor(data){this.pushToState={};this.data={};this.triggers={};this.setState=updateObj=>{Object.assign(this.data,updateObj);let props=Object.getOwnPropertyNames(updateObj);for(const prop of props){this.triggerEvent(prop,this.data[prop])}return this.data};this.setValue=(key,value)=>{this.data[key]=value;this.triggerEvent(key,value)};this.triggerEvent=(key,value)=>{if(this.triggers[key]){let fn=obj=>obj.onchange(value);this.triggers[key].forEach(fn)}};this.subscribeEvent=(key,onchange,refObject,refKey)=>{if(key){if(refObject&&refKey&&!this.triggers[key]){Object.defineProperty(this.data,key,{get:()=>{return refObject[refKey]},set:value=>{refObject[refKey]=value},enumerable:true,configurable:true})}if(!this.triggers[key]){this.triggers[key]=[]}let l=this.triggers[key].length;this.triggers[key].push({sub:l,onchange});return this.triggers[key].length-1}else return void 0};this.unsubscribeEvent=(key,sub)=>{let triggers=this.triggers[key];if(triggers){if(!sub){delete this.triggers[key];delete this.data[key]}else{let sub2=void 0;let obj=triggers.find((o,i)=>{if(o.sub===sub2){sub2=i;return true}});if(obj)triggers.splice(sub2,1);if(Object.keys(triggers).length===0){delete this.triggers[key];delete this.data[key]}if(this.onRemoved)this.onRemoved(obj);return true}}};this.subscribeEventOnce=(key,onchange)=>{let sub;let changed=value=>{onchange(value);this.unsubscribeEvent(key,sub)};sub=this.subscribeEvent(key,changed)};this.getEvent=(key,sub)=>{for(const s in this.triggers[key]){if(this.triggers[key][s].sub===sub)return this.triggers[key][s]}};this.getSnapshot=()=>{const snapshot={};for(const key in this.data){snapshot[key]=this.data[key]}};if(typeof data==="object")this.data=data}};var state=new EventHandler;var GraphNode=class{constructor(properties,parent,graph){this.__node={tag:`node${Math.floor(Math.random()*1e15)}`,unique:`${Math.floor(Math.random()*1e15)}`,state};this.__setProperties=(properties2,parent2,graph2)=>{let enforceProperties=()=>{let orig=properties2;if(typeof properties2==="function"){if(isNativeClass(properties2)){properties2=new properties2}else properties2={__operator:properties2,__node:{forward:true,tag:properties2.name}}}else if(typeof properties2==="string"){if(graph2?.get(properties2)){properties2=graph2.get(properties2)}}if(!properties2.__node.initial)properties2.__node.initial=orig};enforceProperties();if(typeof properties2==="object"){let assignState=()=>{if(properties2.__node?.state)this.__node.state=properties2.__node.state};let setProps2=()=>{if(properties2.__props){if(typeof properties2.__props==="function")properties2.__props=new properties2.__props;if(typeof properties2.__props==="object"){this.__proxyObject(properties2.__props)}}};let setTag=()=>{if(!properties2.__node.tag){if(properties2.__operator?.name)properties2.__node.tag=properties2.__operator.name;else properties2.__node.tag=`node${Math.floor(Math.random()*1e15)}`}};let setNode=()=>{if(typeof properties2.__node==="string"){if(graph2?.get(properties2.__node.tag)){properties2=graph2.get(properties2.__node.tag)}else properties2.__node={}}else if(!properties2.__node)properties2.__node={};if(graph2){properties2.__node.graph=graph2}if(properties2 instanceof Graph)properties2.__node.source=properties2};let setParent=()=>{if(!properties2.__parent&&parent2)properties2.__parent=parent2;if(parent2?.__node&&!(parent2 instanceof Graph||properties2 instanceof Graph))properties2.__node.tag=parent2.__node.tag+"."+properties2.__node.tag;if(parent2 instanceof Graph&&properties2 instanceof Graph){if(properties2.__node.loaders)Object.assign(parent2.__node.loaders?parent2.__node.loaders:{},properties2.__node.loaders);if(parent2.__node.mapGraphs){properties2.__node.nodes.forEach(n=>{parent2.set(properties2.__node.tag+"."+n.__node.tag,n)});let ondelete=()=>{properties2.__node.nodes.forEach(n=>{parent2.__node.nodes.delete(properties2.__node.tag+"."+n.__node.tag)})};this.__addOndisconnected(ondelete)}}};let setOp=()=>{if(typeof properties2.default==="function"&&!properties2.__operator){properties2.__operator=properties2.default}if(properties2.__operator){if(typeof properties2.__operator==="string"){if(graph2){let n=graph2.get(properties2.__operator);if(n)properties2.__operator=n.__operator;if(!properties2.__node.tag&&properties2.__operator.name)properties2.__node.tag=properties2.__operator.name}}if(typeof properties2.__operator==="function")properties2.__operator=this.__setOperator(properties2.__operator);if(properties2.default)properties2.default=properties2.__operator}};let assignProps=()=>{properties2.__node=Object.assign(this.__node,properties2.__node);let keys=Object.getOwnPropertyNames(properties2);for(const key of keys){this[key]=properties2[key]}};let bindCallbacks=()=>{if(this.__onconnected){if(typeof this.__onconnected==="function"){this.__onconnected=this.__onconnected.bind(this)}else if(Array.isArray(this.__onconnected)){this.__onconnected=this.__onconnected.map(f=>{return f.bind(this)})}if(typeof this.__ondisconnected==="function"){this.__ondisconnected=this.__ondisconnected.bind(this)}else if(Array.isArray(this.__ondisconnected)){this.__ondisconnected=this.__ondisconnected.map(f=>{return f.bind(this)})}}};assignState();setTag();setProps2();setNode();setParent();assignProps();bindCallbacks();setOp()}};this.__subscribe=(callback,key,subInput,bound,target)=>{const subscribeToFunction=(k,setTarget=(callback2,target2)=>callback2,triggerCallback=callback)=>{let sub=this.__node.state.subscribeEvent(k,triggerCallback,this,key);let trigger=this.__node.state.getEvent(k,sub);trigger.source=this.__node.tag;if(key)trigger.key=key;trigger.target=setTarget(callback);if(bound)trigger.bound=bound;return sub};const subscribeToGraph=callback2=>{let fn=this.__node.graph.get(callback2);if(!fn&&callback2.includes(".")){let n=this.__node.graph.get(callback2.substring(0,callback2.lastIndexOf(".")));let key2=callback2.substring(callback2.lastIndexOf(".")+1);if(n&&typeof n[key2]==="function")callback2=(...args)=>{return n[key2](...args)}}};if(key){if(!this.__node.localState||!this.__node.localState[key]){this.__addLocalState(this,key)}if(typeof callback==="string"){if(target){if(this.__node.graph?.get(target)){let n=this.__node.graph?.get(target);if(typeof n[callback]==="function"){let fn=n[callback];callback=(...inp)=>{fn(...inp)}}else{let k2=callback;let setter=inp=>{n[k2]=inp};callback=setter}}}else if(typeof this[callback]==="function"){let fn=this[callback];callback=(...inp)=>{fn(...inp)}}else if(this.__node.graph?.get(callback))subscribeToGraph(callback);if(typeof callback!=="function")return void 0}let sub;let k=subInput?this.__node.unique+"."+key+"input":this.__node.unique+"."+key;if(typeof callback==="function")sub=subscribeToFunction(k);else if(callback?.__node)sub=subscribeToFunction(k,(callback2,target2)=>target2?target2:callback2.__node.unique,(...inp)=>{if(callback.__operator)callback.__operator(...inp)});return sub}else{if(typeof callback==="string"){if(this.__node.graph.get(callback))callback=this.__node.graph.get(callback);if(typeof callback!=="object")return void 0}let sub;let k=subInput?this.__node.unique+"input":this.__node.unique;if(typeof callback==="function")sub=subscribeToFunction(k);else if(callback?.__node)sub=subscribeToFunction(k,(callback2,target2)=>target2?target2:callback2.__node.unique,(...inp)=>{if(callback.__operator)callback.__operator(...inp)});return sub}};this.__unsubscribe=(sub,key,unsubInput)=>{if(key)return this.__node.state.unsubscribeEvent(unsubInput?this.__node.unique+"."+key+"input":this.__node.unique+"."+key,sub);else return this.__node.state.unsubscribeEvent(unsubInput?this.__node.unique+"input":this.__node.unique,sub)};this.__setOperator=fn=>{fn=fn.bind(this);if(this.__args&&this.__node.graph){fn=wrapArgs(fn,this.__args,this.__node.graph)}let inpstr=`${this.__node.unique}input`;this.__operator=(...args)=>{if(this.__node.state.triggers[inpstr])this.__node.state.setValue(inpstr,args);let result=fn(...args);if(this.__node.state.triggers[this.__node.unique]){if(typeof result?.then==="function"){result.then(res=>{if(res!==void 0)this.__node.state.setValue(this.__node.unique,res)}).catch(console.error)}else if(result!==void 0)this.__node.state.setValue(this.__node.unique,result)}return result};if(this.__parent instanceof GraphNode&&!this.__subscribedToParent){if(this.__parent.__operator){let sub=this.__parent.__subscribe(this);let ondelete=()=>{this.__parent?.__unsubscribe(sub);delete this.__subscribedToParent};this.__addOndisconnected(ondelete);this.__subscribedToParent=true}}return this.__operator};this.__addLocalState=(props,key)=>{if(!props)return;if(!this.__node.localState){this.__node.localState={}}const localState=this.__node.localState;const initState=(props2,k)=>{let str2=this.__node.unique+"."+k;let inpstr=`${str2}input`;if(typeof props2[k]==="function"&&k!=="__operator"){let fn=props2[k].bind(this);props2[k]=(...args)=>{if(this.__node.state.triggers[inpstr])this.__node.state.setValue(inpstr,args);let result=fn(...args);if(this.__node.state.triggers[str2]){if(typeof result?.then==="function"){result.then(res=>{this.__node.state.triggerEvent(str2,res)}).catch(console.error)}else this.__node.state.triggerEvent(str2,result)}return result}}else{let get,set;if(this.__props?.[k]){get=()=>{return this.__props[k]};set=v=>{this.__props[k]=v;if(this.__node.state.triggers[str2])this.__node.state.triggerEvent(str2,v)}}else{localState[k]=props2[k];get=()=>{return localState[k]};set=v=>{localState[k]=v;if(this.__node.state.triggers[str2])this.__node.state.triggerEvent(str2,v)}}const descriptor={get,set,enumerable:true,configurable:true};Object.defineProperty(props2,k,descriptor);if(typeof this.__node.initial==="object"){let dec=Object.getOwnPropertyDescriptor(this.__node.initial,k);if(dec===void 0||dec?.configurable){Object.defineProperty(this.__node.initial,k,descriptor)}}}};if(key)initState(props,key);else{for(let k in props){initState(props,k)}}};this.__proxyObject=obj=>{const allProps=getAllProperties(obj);for(const k of allProps){if(typeof obj[k]==="function"){this[k]=(...args)=>{return obj[k](...args)}}else{const descriptor={get:()=>{return obj[k]},set:value=>{obj[k]=value},enumerable:true,configurable:true};Object.defineProperty(this,k,descriptor)}}};this.__setProperties(properties,parent,graph)}__addOnconnected(callback){callback=callback.bind(this);if(Array.isArray(this.__onconnected)){this.__onconnected.push(callback)}else if(typeof this.__onconnected==="function"){this.__onconnected=[callback,this.__onconnected]}else this.__onconnected=callback}__addOndisconnected(callback){callback=callback.bind(this);if(Array.isArray(this.__ondisconnected)){this.__ondisconnected.push(callback)}else if(typeof this.__ondisconnected==="function"){this.__ondisconnected=[callback,this.__ondisconnected]}else this.__ondisconnected=callback}__callConnected(node=this){if(typeof this.__onconnected==="function"){this.__onconnected(this)}else if(Array.isArray(this.__onconnected)){let fn=o=>{o(this)};this.__onconnected.forEach(fn)}}__callDisconnected(node=this){if(typeof this.__ondisconnected==="function")this.__ondisconnected(this);else if(Array.isArray(this.__ondisconnected)){let fn=o=>{o(this)};this.__ondisconnected.forEach(fn)}}};var Graph=class{constructor(options){this.__node={tag:`graph${Math.floor(Math.random()*1e15)}`,unique:`${Math.random()}`,nodes:new Map,state,roots:{}};this.init=options2=>{if(options2){let cpy=Object.assign({},options2);delete cpy.roots;recursivelyAssign(this.__node,cpy);if(options2.roots)this.load(options2.roots)}};this.load=roots=>{function recursivelyAssignChildren(target,obj,inChildren=true,top=true){if(top){if(target)Object.assign(target,obj);else target=Object.assign({},obj);recursivelyAssignChildren(target,obj,true,false)}if(obj.__children&&!inChildren){if(obj.__children?.constructor.name==="Object"){if(target.__children?.constructor.name==="Object")recursivelyAssignChildren(target.__children,obj.__children,true,false);else target.__children=recursivelyAssignChildren({},obj.__children,true,false)}else{target.__children=obj.__children}}else if(inChildren){for(const key in obj){target[key]=Object.assign({},obj[key]);if(obj[key].__children){recursivelyAssignChildren({},obj[key].__children,false,false)}}}return target}this.__node.roots=recursivelyAssignChildren(this.__node.roots?this.__node.roots:{},roots);let cpy=Object.assign({},roots);if(cpy.__node)delete cpy.__node;let listeners=this.recursiveSet(cpy,this,void 0,roots);if(roots.__node){if(!roots.__node.tag)roots.__node._tag=`roots${Math.floor(Math.random()*1e15)}`;else if(!this.get(roots.__node.tag)){let node=new GraphNode(roots,this,this);this.set(node.__node.tag,node);this.runLoaders(node,this,roots,roots.__node.tag);if(node.__listeners){listeners[node.__node.tag]=node.__listeners}}}else if(roots.__listeners){this.setListeners(roots.__listeners)}this.setListeners(listeners);return cpy};this.setLoaders=(loaders2,replace)=>{if(replace)this.__node.loaders=loaders2;else Object.assign(this.__node.loaders,loaders2);return this.__node.loaders};this.runLoaders=(node,parent,properties,key)=>{for(const l in this.__node.loaders){if(typeof this.__node.loaders[l]==="object"){if(this.__node.loaders[l].init)this.__node.loaders[l](node,parent,this,this.__node.roots,properties,key);if(this.__node.loaders[l].connected)node.__addOnconnected(this.__node.loaders[l].connect);if(this.__node.loaders[l].disconnected)node.__addOndisconnected(this.__node.loaders[l].disconnect)}else if(typeof this.__node.loaders[l]==="function")this.__node.loaders[l](node,parent,this,this.__node.roots,properties,key)}};this.add=(properties,parent)=>{let listeners={};if(typeof parent==="string")parent=this.get(parent);let instanced;if(typeof properties==="function"){if(isNativeClass(properties)){if(properties.prototype instanceof GraphNode){properties=properties.prototype.constructor(properties,parent,this);instanced=true}else properties=new properties}else properties={__operator:properties}}else if(typeof properties==="string"){properties=this.__node.roots[properties]}if(!properties)return;if(!instanced){let keys=Object.getOwnPropertyNames(properties);let cpy={};for(const key of keys){cpy[key]=properties[key]}properties=cpy}if(!properties.__node)properties.__node={};properties.__node.initial=properties;if(typeof properties==="object"&&(!properties?.__node?.tag||!this.get(properties.__node.tag))){let node;if(instanced)node=properties;else node=new GraphNode(properties,parent,this);this.set(node.__node.tag,node);this.runLoaders(node,parent,properties,node.__node.tag);this.__node.roots[node.__node.tag]=properties;if(node.__children){node.__children=Object.assign({},node.__children);this.recursiveSet(node.__children,node,listeners,node.__children)}if(node.__listeners){listeners[node.__node.tag]=Object.assign({},node.__listeners);for(const key in node.__listeners){let listener=node.__listeners[key];if(node[key]){delete listeners[node.__node.tag][key];listeners[node.__node.tag][node.__node.tag+"."+key]=listener}if(typeof listener==="string"){if(node.__children?.[listener]){listeners[node.__node.tag][key]=node.__node.tag+"."+listener}else if(parent instanceof GraphNode&&(parent.__node.tag===listener||parent.__node.tag.includes(".")&&parent.__node.tag.split(".").pop()===listener)){listeners[node.__node.tag][key]=parent.__node.tag}}}}this.setListeners(listeners);node.__callConnected();return node}return};this.recursiveSet=(t2,parent,listeners={},origin)=>{let keys=Object.getOwnPropertyNames(origin);for(const key of keys){if(key.includes("__"))continue;let p=origin[key];if(Array.isArray(p))continue;let instanced;if(typeof p==="function"){if(isNativeClass(p)){p=new p;if(p instanceof GraphNode){p=p.prototype.constructor(p,parent,this);instanced=true}}else p={__operator:p}}else if(typeof p==="string"){if(this.__node.nodes.get(p))p=this.__node.nodes.get(p);else p=this.__node.roots[p]}else if(typeof p==="boolean"){if(this.__node.nodes.get(key))p=this.__node.nodes.get(key);else p=this.__node.roots[key]}if(typeof p==="object"){if(!instanced&&!(p instanceof GraphNode)){let keys2=Object.getOwnPropertyNames(p);let cpy={};for(const key2 of keys2){cpy[key2]=p[key2]}p=cpy}if(!p.__node)p.__node={};if(!p.__node.tag)p.__node.tag=key;if(!p.__node.initial)p.__node.initial=t2[key];if(this.get(p.__node.tag)&&!(!(parent instanceof Graph)&&parent?.__node)||parent?.__node&&this.get(parent.__node.tag+"."+p.__node.tag))continue;let node;let newnode=false;if(instanced||p instanceof GraphNode){node=p}else{node=new GraphNode(p,parent,this);newnode=true}if(!newnode&&p instanceof GraphNode&&!instanced&&parent instanceof GraphNode){let sub=this.subscribe(parent.__node.tag,node.__node.tag);let ondelete=node2=>{this.unsubscribe(parent.__node.tag,sub)};node.__addOndisconnected(ondelete)}else{this.set(node.__node.tag,node);this.runLoaders(node,parent,t2[key],key);t2[key]=node;this.__node.roots[node.__node.tag]=p;if(node.__children){node.__children=Object.assign({},node.__children);this.recursiveSet(node.__children,node,listeners,node.__children)}if(node.__listeners){listeners[node.__node.tag]=Object.assign({},node.__listeners);for(const key2 in node.__listeners){let listener=node.__listeners[key2];let k=key2;if(node[key2]){delete listeners[node.__node.tag][key2];k=node.__node.tag+"."+key2;listeners[node.__node.tag][k]=listener}if(typeof listener==="string"){if(node.__children?.[listener]){listeners[node.__node.tag][k]=node.__node.tag+"."+listener}else if(parent instanceof GraphNode&&(parent.__node.tag===listener||parent.__node.tag.includes(".")&&parent.__node.tag.split(".").pop()===listener)){listeners[node.__node.tag][k]=parent.__node.tag}}}}node.__callConnected()}}}return listeners};this.remove=(node,clearListeners=true)=>{this.unsubscribe(node);if(typeof node==="string")node=this.get(node);if(node instanceof GraphNode){this.delete(node.__node.tag);delete this.__node.roots[node.__node.tag];if(clearListeners){this.clearListeners(node)}node.__callDisconnected();const recursiveRemove=t2=>{for(const key in t2){this.unsubscribe(t2[key]);this.delete(t2[key].__node.tag);delete this.__node.roots[t2[key].__node.tag];this.delete(key);delete this.__node.roots[key];t2[key].__node.tag=t2[key].__node.tag.substring(t2[key].__node.tag.lastIndexOf(".")+1);if(clearListeners){this.clearListeners(t2[key])}console.log(key,t2[key].__listeners);t2[key].__callDisconnected();if(t2[key].__children){recursiveRemove(t2[key].__children)}}};if(node.__children){recursiveRemove(node.__children)}}if(node?.__node.tag&&node?.__parent){delete node?.__parent;node.__node.tag=node.__node.tag.substring(node.__node.tag.indexOf(".")+1)}return node};this.run=(node,...args)=>{if(typeof node==="string"){let nd=this.get(node);if(!nd&&node.includes(".")){nd=this.get(node.substring(0,node.lastIndexOf(".")));if(typeof nd?.[node.substring(node.lastIndexOf(".")+1)]==="function")return nd[node.substring(node.lastIndexOf(".")+1)](...args)}else if(nd?.__operator)return nd.__operator(...args)}if(node?.__operator){return node?.__operator(...args)}};this.setListeners=listeners=>{for(const key in listeners){let node=this.get(key);if(typeof listeners[key]==="object"){for(const k in listeners[key]){let n=this.get(k);let sub;if(typeof listeners[key][k]!=="object")listeners[key][k]={__callback:listeners[key][k]};else if(!listeners[key][k].__callback){for(const kk in listeners[key][k]){if(typeof listeners[key][k][kk]!=="object"){listeners[key][k][kk]={__callback:listeners[key][k][kk]};if(listeners[key][k][kk].__callback===true||typeof listeners[key][k][kk].__callback==="undefined")listeners[key][k][kk].__callback=node.__operator}let nn=this.get(kk);if(nn){if(!nn){let tag=k.substring(0,k.lastIndexOf("."));nn=this.get(tag);if(n){sub=this.subscribe(nn,listeners[key][k][kk].__callback,listeners[key][k][kk].__args,k.substring(k.lastIndexOf(".")+1),listeners[key][k][kk].inputState,key,k);if(typeof node.__listeners[k][kk]!=="object")node.__listeners[k][kk]={__callback:listeners[key][k][kk].__callback,inputState:listeners[key][k][kk]?.inputState};node.__listeners[k][kk].sub=sub}}else{sub=this.subscribe(nn,listeners[key][k][kk].__callback,listeners[key][k].__args,void 0,listeners[key][k].inputState,key,k);if(typeof node.__listeners[k][kk]!=="object")node.__listeners[k][kk]={__callback:listeners[key][k][kk].__callback,inputState:listeners[key][k][kk]?.inputState};node.__listeners[k][kk].sub=sub}}}}if("__callback"in listeners[key][k]){if(listeners[key][k].__callback===true||typeof listeners[key][k].__callback==="undefined")listeners[key][k].__callback=node.__operator;if(typeof listeners[key][k].__callback==="function")listeners[key][k].__callback=listeners[key][k].__callback.bind(node);if(typeof node.__listeners!=="object")node.__listeners={};if(!n){let tag=k.substring(0,k.lastIndexOf("."));n=this.get(tag);if(n){sub=this.subscribe(n,listeners[key][k].__callback,listeners[key][k].__args,k.substring(k.lastIndexOf(".")+1),listeners[key][k].inputState,key,k);if(typeof node.__listeners[k]!=="object")node.__listeners[k]={__callback:listeners[key][k].__callback,inputState:listeners[key][k]?.inputState};node.__listeners[k].sub=sub}}else{sub=this.subscribe(n,listeners[key][k].__callback,listeners[key][k].__args,void 0,listeners[key][k].inputState,key,k);if(typeof node.__listeners[k]!=="object")node.__listeners[k]={__callback:listeners[key][k].__callback,inputState:listeners[key][k]?.inputState};node.__listeners[k].sub=sub}}}}}};this.clearListeners=(node,listener)=>{if(typeof node==="string")node=this.get(node);if(node?.__listeners){for(const key in node.__listeners){if(listener&&key!==listener)continue;if(typeof node.__listeners[key]?.sub!=="number")continue;let n=this.get(key);if(!n){n=this.get(key.substring(0,key.lastIndexOf(".")));if(n){if(typeof node.__listeners[key]==="object"&&!node.__listeners[key]?.__callback){for(const k in node.__listeners[key]){if(typeof node.__listeners[key][k]?.sub==="number"){this.unsubscribe(n,node.__listeners[key][k].sub,key.substring(key.lastIndexOf(".")+1),node.__listeners[key][k].inputState);node.__listeners[key][k].sub=void 0}}}else if(typeof node.__listeners[key]?.sub==="number"){this.unsubscribe(n,node.__listeners[key].sub,key.substring(key.lastIndexOf(".")+1),node.__listeners[key].inputState);node.__listeners[key].sub=void 0}}}else{if(typeof!node.__listeners[key]?.__callback==="number"){for(const k in node.__listeners[key]){if(node.__listeners[key][k]?.sub){this.unsubscribe(n,node.__listeners[key][k].sub,void 0,node.__listeners[key][k].inputState);node.__listeners[key][k].sub=void 0}}}else if(typeof node.__listeners[key]?.sub==="number"){this.unsubscribe(n,node.__listeners[key].sub,void 0,node.__listeners[key].inputState);node.__listeners[key].sub=void 0}}}}};this.get=tag=>{return this.__node.nodes.get(tag)};this.set=(tag,node)=>{return this.__node.nodes.set(tag,node)};this.delete=tag=>{return this.__node.nodes.delete(tag)};this.getProps=(node,getInitial)=>{if(typeof node==="string")node=this.get(node);if(node instanceof GraphNode){let cpy;if(getInitial)cpy=Object.assign({},this.__node.roots[node.__node.tag]);else{cpy=Object.assign({},node);for(const key in cpy){if(key.includes("__"))delete cpy[key]}}}};this.subscribe=(nodeEvent,onEvent,args,key,subInput,target,bound)=>{let nd=nodeEvent;if(typeof nodeEvent==="string"){nd=this.get(nodeEvent);if(!nd&&nodeEvent.includes(".")){nd=this.get(nodeEvent.substring(0,nodeEvent.lastIndexOf(".")));key=nodeEvent.substring(nodeEvent.lastIndexOf(".")+1)}}let sub;if(target instanceof GraphNode)target=target.__node.tag;if(typeof onEvent==="string"){let key2=onEvent;let setOnEventFromString=onEvent2=>{if(this.get(onEvent2)?.__operator){let node=this.get(onEvent2);onEvent2=function(...inp){return node.__operator(...inp)}}else if(onEvent2.includes(".")){let n=this.get(onEvent2.substring(0,onEvent2.lastIndexOf(".")));let key3=onEvent2.substring(onEvent2.lastIndexOf(".")+1);if(typeof n[key3]==="function"){if(n[key3]instanceof GraphNode)onEvent2=n[key3];else onEvent2=function(...inp){return n[key3](...inp)}}else{onEvent2=function(inp){n[key3]=inp;return n[key3]}}}return onEvent2};if(target){let node=this.get(target);if(typeof node?.[onEvent]==="function"){onEvent=function(...inp){return node[key2](...inp)}}else if(node[key2]){if(node[key2]instanceof GraphNode)onEvent=node[key2];else onEvent=function(inp){node[key2]=inp;return node[key2]}}else{onEvent=setOnEventFromString(onEvent)}}else{onEvent=setOnEventFromString(onEvent)}}if((typeof onEvent==="function"||onEvent instanceof GraphNode)&&args){if(onEvent instanceof GraphNode&&onEvent.__operator)onEvent=function(inp){return onEvent.__operator(inp)};onEvent=wrapArgs(onEvent,args,this)}if(nd instanceof GraphNode){sub=nd.__subscribe(onEvent,key,subInput,target,bound);let ondelete=()=>{nd.__unsubscribe(sub,key,subInput)};nd.__addOndisconnected(ondelete)}else if(typeof nodeEvent==="string"){if(this.get(nodeEvent)){if(onEvent instanceof GraphNode&&onEvent.__operator){sub=this.get(nodeEvent).__subscribe(onEvent.__operator,key,subInput,target,bound);let ondelete=()=>{this.get(nodeEvent).__unsubscribe(sub)};onEvent.__addOndisconnected(ondelete)}else if(typeof onEvent==="function"||typeof onEvent==="string"){sub=this.get(nodeEvent).__subscribe(onEvent,key,subInput,target,bound);this.__node.state.getEvent(this.get(nodeEvent).__node.unique,sub).source=nodeEvent}}else{if(typeof onEvent==="string")onEvent=this.__node.nodes.get(onEvent).__operator;if(typeof onEvent==="function")sub=this.__node.state.subscribeEvent(nodeEvent,onEvent)}}return sub};this.unsubscribe=(node,sub,key,subInput)=>{if(node instanceof GraphNode){return node.__unsubscribe(sub,key,subInput)}else return this.get(node)?.__unsubscribe(sub,key,subInput)};this.setState=update=>{this.__node.state.setState(update)};this.init(options)}};function recursivelyAssign(target,obj){for(const key in obj){if(obj[key]?.constructor.name==="Object"&&!Array.isArray(obj[key])){if(target[key]?.constructor.name==="Object"&&!Array.isArray(target[key]))recursivelyAssign(target[key],obj[key]);else target[key]=recursivelyAssign({},obj[key])}else{target[key]=obj[key]}}return target}function getAllProperties(obj){var allProps=[],curr=obj;do{var props=Object.getOwnPropertyNames(curr);let fn=function(prop){if(allProps.indexOf(prop)===-1)allProps.push(prop)};props.forEach(fn)}while(curr=Object.getPrototypeOf(curr));return allProps}function isNativeClass(thing){return typeof thing==="function"&&thing.hasOwnProperty("prototype")&&!thing.hasOwnProperty("arguments")}var wrapArgs=(callback,argOrder,graph)=>{let args=[];let getCallbackFromString=a=>{if(graph.get(a)?.__operator){let node=graph.get(a);return(...inp)=>{node.__operator(...inp)}}else if(a.includes(".")){let split=a.split(".");let popped=split.pop();let joined=split.join(".");let node=graph.get(joined);if(typeof graph.get(joined)?.[popped]==="function"){return(...inp)=>{return node[popped](...inp)}}else return()=>{return node[popped]}}else if(graph.get(a)){let node=graph.get(a);return()=>{return node}}else{let arg=a;return()=>{return arg}}};let forArg=(a,i)=>{if(a==="__output"){args[i]=inp=>{return inp}}else if(typeof a==="string"){args[i]=getCallbackFromString(a)}else if(typeof a==="function"){let fn2=a;args[i]=(...inp)=>{return fn2(...inp)}}else if(typeof a==="object"&&a.__input){let recursivelyCreateCallback=function(c){let input=c.__input;if(typeof c.__input==="string"){input=getCallbackFromString(c.__input)}if(c.__args){input=wrapArgs(input,c.__args,graph)}if(c.__output){let output=c.__output;if(typeof c.__output==="string"){output=getCallbackFromString(output)}else if(typeof a.__output==="object"){output=recursivelyCreateCallback(output)}if(typeof output==="function"){let fn2=input;input=(...inp)=>{return output(fn2(...inp))}}}return input};args[i]=recursivelyCreateCallback(a)}else{let arg=a;args[i]=()=>{return arg}}};argOrder.forEach(forArg);if(typeof callback==="string")callback=getCallbackFromString(callback);let fn=callback;callback=function(...inp){let mapArg=arg=>{return arg(...inp)};return fn(...args.map(mapArg))};return callback};var backprop=(node,parent,graph)=>{if(node.__node.backward&&parent instanceof GraphNode){graph.setListeners({[parent.__node.tag]:{[node.__node.tag]:parent}})}};var loop=(node,parent,graph)=>{if(node.__operator&&!node.__node.looperSet){if(typeof node.__node.delay==="number"){let fn=node.__operator;node.__setOperator((...args)=>{return new Promise((res,rej)=>{setTimeout(async()=>{res(await fn(...args))},node.__node.delay)})})}else if(node.__node.frame===true){let fn=node.__operator;node.__setOperator((...args)=>{return new Promise((res,rej)=>{requestAnimationFrame(async()=>{res(await fn(...args))})})})}if(typeof node.__node.repeat==="number"||typeof node.__node.recursive==="number"){let fn=node.__operator;node.__setOperator(async(...args)=>{let i=node.__node.repeat?node.__node.repeat:node.__node.recursive;let result;let repeater=async(tick,...inp)=>{while(tick>0){if(node.__node.delay||node.__node.frame){fn(...inp).then(async res=>{if(node.__node.recursive){await repeater(tick,res)}else await repeater(tick,...inp)});break}else result=await fn(...args);tick--}};await repeater(i,...args);return result})}if(node.__node.loop&&typeof node.__node.loop==="number"){node.__node.looperSet=true;let fn=node.__operator;node.__setOperator((...args)=>{if(!("looping"in node.__node))node.__node.looping=true;if(node.__node.looping){fn(...args);setTimeout(()=>{node.__operator(...args)},node.__node.loop)}});if(node.__node.looping)node.__operator();let ondelete=node2=>{if(node2.__node.looping)node2.__node.looping=false};node.__addOndisconnected(ondelete)}}};var animate=(node,parent,graph)=>{if(node.__node.animate===true||node.__animation){let fn=node.__operator;node.__setOperator((...args)=>{if(!("animating"in node.__node))node.__node.animating=true;if(node.__node.animating){if(typeof node.__animation==="function")node.__animation(...args);else fn(...args);requestAnimationFrame(()=>{node.__operator(...args)})}});if(node.__node.animating||(!("animating"in node.__node)||node.__node.animating)&&node.__animation)setTimeout(()=>{requestAnimationFrame(node.__operator)},10);let ondelete=node2=>{if(node2.__node.animating)node2.__node.animating=false};node.__addOndisconnected(ondelete)}};var branching=(node,parent,graph)=>{if(typeof node.__branch==="object"&&node.__operator&&!node.__branchApplied){let fn=node.__operator;node.__branchApplied=true;node.__operator=(...args)=>{let result=fn(...args);for(const key in node.__branch){let triggered=()=>{if(typeof node.__branch[key].then==="function"){node.__branch[key].then(result)}else if(node.__branch[key].then instanceof GraphNode&&node.__branch[key].then.__operator){node.__branch[key].then.__operator(result)}else result=node.__branch[key].then};if(typeof node.__branch[key].if==="function"){if(node.__branch[key].if(result)==true){triggered()}}else if(node.__branch[key].if===result){triggered()}}return result}}if(node.__listeners){for(const key in node.__listeners){if(typeof node.__listeners[key]==="object"){if(node.__listeners[key].branch&&!node.__listeners[key].branchApplied){let fn=node.__listeners[key].callback;node.__listeners[key].branchApplied=true;node.__listeners.callback=ret=>{let triggered=()=>{if(typeof node.__listeners[key].branch.then==="function"){ret=node.__listeners[key].branch.then(ret)}else if(node.__listeners[key].branch.then instanceof GraphNode&&node.__listeners[key].branch.then.__operator){ret=node.__listeners[key].branch.then.__operator(ret)}else ret=node.__listeners[key].branch.then};if(typeof node.__listeners[key].branch.if==="function"){if(node.__listeners[key].branch.if(ret)){triggered()}}else if(node.__listeners[key].branch.if===ret){triggered()}return fn(ret)}}}}}};var triggerListenerOncreate=(node,parent,graph)=>{if(node.__listeners){for(const key in node.__listeners){if(typeof node.__listeners[key]==="object"){if(node.__listeners[key].oncreate){node.__listeners[key].callback(node.__listeners[key].oncreate)}}}}};var bindListener=(node,parent,graph)=>{if(node.__listeners){for(const key in node.__listeners){if(typeof node.__listeners[key]==="object"){if(typeof node.__listeners[key].binding==="object"){node.__listeners.callback=node.__listeners.callback.bind(node.__listeners[key].binding)}}}}};var transformListenerResult=(node,parent,graph)=>{if(node.__listeners){for(const key in node.__listeners){if(typeof node.__listeners[key]==="object"){if(typeof node.__listeners[key].transform==="function"&&!node.__listeners[key].transformApplied){let fn=node.__listeners[key].callback;node.__listeners[key].transformApplied=true;node.__listeners.callback=ret=>{ret=node.__listeners[key].transform(ret);return fn(ret)}}}}}};var substitute__operator=(node,parent,graph)=>{if(node.post&&!node.__operator){node.__setOperator(node.post)}else if(!node.__operator&&typeof node.get=="function"){node.__setOperator(node.get)}if(!node.get&&node.__operator){node.get=node.__operator}if(node.aliases){node.aliases.forEach(a=>{graph.set(a,node);let ondelete=node2=>{graph.__node.nodes.delete(a)};node.__addOndisconnected(ondelete)})}if(typeof graph.__node.roots?.[node.__node.tag]==="object"&&node.get)graph.__node.roots[node.__node.tag].get=node.get};var loaders={backprop,loop,animate,branching,triggerListenerOncreate,bindListener,transformListenerResult,substitute__operator};var recursivelyStringifyFunctions=obj=>{let cpy={};for(const key in obj){if(typeof obj[key]==="object"){cpy[key]=recursivelyStringifyFunctions(obj[key])}else if(typeof obj[key]==="function"){cpy[key]=obj[key].toString()}}return cpy};function parseFunctionFromText(method=""){let getFunctionBody=methodString=>{return methodString.replace(/^\\W*(function[^{]+\\{([\\s\\S]*)\\}|[^=]+=>[^{]*\\{([\\s\\S]*)\\}|[^=]+=>(.+))/i,"$2$3$4")};let getFunctionHead=methodString=>{let startindex=methodString.indexOf("=>")+1;if(startindex<=0){startindex=methodString.indexOf("){")}if(startindex<=0){startindex=methodString.indexOf(") {")}return methodString.slice(0,methodString.indexOf("{",startindex)+1)};let newFuncHead=getFunctionHead(method);let newFuncBody=getFunctionBody(method);let newFunc;if(newFuncHead.includes("function")){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody)}else{if(newFuncHead.substring(0,6)===newFuncBody.substring(0,6)){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody.substring(newFuncBody.indexOf("{")+1,newFuncBody.length-1))}else{try{newFunc=(0,eval)(newFuncHead+newFuncBody+"}")}catch{}}}return newFunc}var stringifyWithCircularRefs=function(){const refs=new Map;const parents=[];const path=["this"];function clear(){refs.clear();parents.length=0;path.length=1}function updateParents(key,value){var idx=parents.length-1;var prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value||idx===0){path.push(key);parents.push(value.pushed)}else{while(idx-->=0){prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value){idx+=2;parents.length=idx;path.length=idx;--idx;parents[idx]=value;path[idx]=key;break}}idx--}}}}function checkCircular(key,value){if(value!=null){if(typeof value==="object"){if(key){updateParents(key,value)}let other=refs.get(value);if(other){return"[Circular Reference]"+other}else{refs.set(value,path.join("."))}}}return value}return function stringifyWithCircularRefs22(obj,space){try{parents.push(obj);return JSON.stringify(obj,checkCircular,space)}finally{clear()}}}();if(JSON.stringifyWithCircularRefs===void 0){JSON.stringifyWithCircularRefs=stringifyWithCircularRefs}var stringifyFast=function(){const refs=new Map;const parents=[];const path=["this"];function clear(){refs.clear();parents.length=0;path.length=1}function updateParents(key,value){var idx=parents.length-1;if(parents[idx]){var prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value||idx===0){path.push(key);parents.push(value.pushed)}else{while(idx-->=0){prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value){idx+=2;parents.length=idx;path.length=idx;--idx;parents[idx]=value;path[idx]=key;break}}idx++}}}}}function checkValues(key,value){let val;if(value!=null){if(typeof value==="object"){let c=value.constructor.name;if(key&&c==="Object"){updateParents(key,value)}let other=refs.get(value);if(other){return"[Circular Reference]"+other}else{refs.set(value,path.join("."))}if(c==="Array"){if(value.length>20){val=value.slice(value.length-20)}else val=value}else if(c.includes("Set")){val=Array.from(value)}else if(c!=="Object"&&c!=="Number"&&c!=="String"&&c!=="Boolean"){val="instanceof_"+c}else if(c==="Object"){let obj={};for(const prop in value){if(value[prop]==null){obj[prop]=value[prop]}else if(Array.isArray(value[prop])){if(value[prop].length>20)obj[prop]=value[prop].slice(value[prop].length-20);else obj[prop]=value[prop]}else if(value[prop].constructor.name==="Object"){obj[prop]={};for(const p in value[prop]){if(Array.isArray(value[prop][p])){if(value[prop][p].length>20)obj[prop][p]=value[prop][p].slice(value[prop][p].length-20);else obj[prop][p]=value[prop][p]}else{if(value[prop][p]!=null){let con=value[prop][p].constructor.name;if(con.includes("Set")){obj[prop][p]=Array.from(value[prop][p])}else if(con!=="Number"&&con!=="String"&&con!=="Boolean"){obj[prop][p]="instanceof_"+con}else{obj[prop][p]=value[prop][p]}}else{obj[prop][p]=value[prop][p]}}}}else{let con=value[prop].constructor.name;if(con.includes("Set")){obj[prop]=Array.from(value[prop])}else if(con!=="Number"&&con!=="String"&&con!=="Boolean"){obj[prop]="instanceof_"+con}else{obj[prop]=value[prop]}}}val=obj}else{val=value}}else{val=value}}return val}return function stringifyFast22(obj,space){parents.push(obj);let res=JSON.stringify(obj,checkValues,space);clear();return res}}();if(JSON.stringifyFast===void 0){JSON.stringifyFast=stringifyFast}function methodstrings(node){if(typeof node.__methods==="object"){for(const key in node.__methods){let fstr=node.__methods[key];let fn=typeof fstr==="function"?fstr:parseFunctionFromText(fstr);if(key==="__operator"){node.__setOperator(fn)}else{node[key]=fn.bind(node)}}}}var Service=class extends Graph{constructor(options){super({...options,loaders:options?.loaders?Object.assign({...loaders},options.loaders):{...loaders}});this.name=`service${Math.floor(Math.random()*1e15)}`;this.addServices=services=>{for(const s in services){if(typeof services[s]==="function")services[s]=new services[s];if(services[s]?.__node?.loaders)Object.assign(this.__node.loaders,services[s].__node.loaders);if(services[s]?.__node?.nodes){services[s].__node.nodes.forEach((n,tag)=>{if(!this.get(tag)){this.set(tag,n)}else this.set(s+"."+tag,n)});this.__node.nodes.forEach((n,k)=>{if(!services[s].__node.nodes.get(k))services[s].__node.nodes.set(k,n)});let set=this.set;this.set=(tag,node)=>{services[s].set(tag,node);return set(tag,node)};let del=this.delete;this.delete=tag=>{services[s].delete(tag);return del(tag)}}else if(typeof services[s]==="object"){this.load(services[s])}}};this.handleMethod=(route,method,args)=>{let m=method.toLowerCase();let src=this.__node.nodes.get(route);if(!src){src=this.__node.roots[route]}if(src?.[m]){if(typeof src[m]!=="function"){if(args)src[m]=args;return src[m]}else return src[m](args)}else return this.handleServiceMessage({route,args,method})};this.transmit=(...args)=>{if(typeof args[0]==="object"){if(args[0].method){return this.handleMethod(args[0].route,args[0].method,args[0].args)}else if(args[0].route){return this.handleServiceMessage(args[0])}else if(args[0].node){return this.handleGraphNodeCall(args[0].node,args[0].args)}else if(this.__node.keepState){if(args[0].route)this.setState({[args[0].route]:args[0].args});if(args[0].node)this.setState({[args[0].node]:args[0].args})}return args}else return args};this.receive=(...args)=>{if(args[0]){if(typeof args[0]==="string"){let substr=args[0].substring(0,8);if(substr.includes("{")||substr.includes("[")){if(substr.includes("\\\\"))args[0]=args[0].replace(/\\\\/g,"");if(args[0][0]===\'"\'){args[0]=args[0].substring(1,args[0].length-1)};args[0]=JSON.parse(args[0])}}}if(typeof args[0]==="object"){if(args[0].method){return this.handleMethod(args[0].route,args[0].method,args[0].args)}else if(args[0].route){return this.handleServiceMessage(args[0])}else if(args[0].node){return this.handleGraphNodeCall(args[0].node,args[0].args)}else if(this.__node.keepState){if(args[0].route)this.setState({[args[0].route]:args[0].args});if(args[0].node)this.setState({[args[0].node]:args[0].args})}return args}else return args};this.pipe=(source,destination,endpoint,method,callback)=>{if(source instanceof GraphNode){if(callback)return this.subscribe(source,res=>{let mod=callback(res);if(mod!==void 0)this.transmit({route:destination,args:mod,method});else this.transmit({route:destination,args:res,method},endpoint)});else return this.subscribe(source,res=>{this.transmit({route:destination,args:res,method},endpoint)})}else if(typeof source==="string")return this.subscribe(source,res=>{this.transmit({route:destination,args:res,method},endpoint)})};this.pipeOnce=(source,destination,endpoint,method,callback)=>{if(source instanceof GraphNode){if(callback)return source.__node.state.subscribeEventOnce(source.__node.unique,res=>{let mod=callback(res);if(mod!==void 0)this.transmit({route:destination,args:mod,method});else this.transmit({route:destination,args:res,method},endpoint)});else return this.__node.state.subscribeEventOnce(source.__node.unique,res=>{this.transmit({route:destination,args:res,method},endpoint)})}else if(typeof source==="string")return this.__node.state.subscribeEventOnce(this.__node.nodes.get(source).__node.unique,res=>{this.transmit({route:destination,args:res,method},endpoint)})};this.terminate=(...args)=>{};this.isTypedArray=isTypedArray;this.recursivelyAssign=recursivelyAssign2;this.spliceTypedArray=spliceTypedArray;this.ping=()=>{console.log("pinged!");return"pong"};this.echo=(...args)=>{this.transmit(...args);return args};if(options?.services)this.addServices(options.services);this.load(this)}handleServiceMessage(message){let call;if(typeof message==="object"){if(message.route)call=message.route;else if(message.node)call=message.node}if(call){if(Array.isArray(message.args))return this.run(call,...message.args);else return this.run(call,message.args)}else return message}handleGraphNodeCall(route,args){if(!route)return args;if(args?.args){this.handleServiceMessage(args)}else if(Array.isArray(args))return this.run(route,...args);else return this.run(route,args)}};function isTypedArray(x){return ArrayBuffer.isView(x)&&Object.prototype.toString.call(x)!=="[object DataView]"}var recursivelyAssign2=(target,obj)=>{for(const key in obj){if(typeof obj[key]==="object"&&!Array.isArray(obj[key])){if(typeof target[key]==="object"&&!Array.isArray(target[key]))recursivelyAssign2(target[key],obj[key]);else target[key]=recursivelyAssign2({},obj[key])}else target[key]=obj[key]}return target};function spliceTypedArray(arr,start,end){let s=arr.subarray(0,start);let e;if(end){e=arr.subarray(end+1)}let ta;if(s.length>0||e?.length>0)ta=new arr.constructor(s.length+e.length);if(ta){if(s.length>0)ta.set(s);if(e&&e.length>0)ta.set(e,s.length)}return ta}var unsafeRoutes={setRoute:function(fn,fnName){if(typeof fn==="string")fn=parseFunctionFromText(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;if(this.__node.graph.get(fnName)){this.__node.graph.get(fnName).__setOperator(fn)}else{let node=this.__node.graph.add({__node:{tag:fnName},__operator:fn})}return true}return false},setNode:function(fn,fnName){if(typeof fn==="string")fn=parseFunctionFromText(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;if(this.__node.graph.get(fnName)){this.__node.graph.get(fnName).__setOperator(fn)}else this.__node.graph.add({__node:{tag:fnName},__operator:fn});return true}return false},setMethod:function(route,fn,fnName){if(typeof fn==="string")fn=parseFunctionFromText(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;if(this.__node.graph.get(route)){this.__node.graph.get(route)[fnName]=fn}else this.__node.graph.add({__node:{tag:fnName,[fnName]:fn}});return true}return false},assignRoute:function(route,source){if(this.__node.graph.get(route)&&typeof source==="object"){Object.assign(this.__node.graph.get(route),source)}},transferClass:(classObj,className)=>{if(typeof classObj==="object"){let str2=classObj.toString();let message={route:"receiveClass",args:[str2,className]};return message}return false},receiveClass:function(stringified,className){if(typeof stringified==="string"){if(stringified.indexOf("class")===0){let cls=(0,eval)("("+stringified+")");let name=className;if(!name)name=cls.name;this.__node.graph[name]=cls;return true}}return false},setGlobal:(key,value)=>{globalThis[key]=value;return true},assignGlobalObject:(target,source)=>{if(!globalThis[target])return false;if(typeof source==="object")Object.assign(globalThis[target],source);return true},setValue:function(key,value){this.__node.graph[key]=value;return true},assignObject:function(target,source){if(!this.__node.graph[target])return false;if(typeof source==="object")Object.assign(this.__node.graph[target],source);return true},setGlobalFunction:(fn,fnName)=>{if(typeof fn==="string")fn=parseFunctionFromText(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;globalThis[fnName]=fn;return true}return false},assignFunctionToGlobalObject:function(globalObjectName,fn,fnName){if(!globalThis[globalObjectName])return false;if(typeof fn==="string")fn=parseFunctionFromText(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;this.__node.graph[globalObjectName][fnName]=fn;return true}return false},setFunction:function(fn,fnName){if(typeof fn==="string")fn=parseFunctionFromText(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;this.__node.graph[fnName]=fn;return true}return false},assignFunctionToObject:function(objectName,fn,fnName){if(!this.__node.graph[objectName])return false;if(typeof fn==="string")fn=parseFunctionFromText(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;this.__node.graph[objectName][fnName]=fn;return true}return false}};var sjcl={cipher:{},hash:{},keyexchange:{},mode:{},misc:{},codec:{},exception:{corrupt:function(a){this.toString=function(){return"CORRUPT: "+this.message};this.message=a},invalid:function(a){this.toString=function(){return"INVALID: "+this.message};this.message=a},bug:function(a){this.toString=function(){return"BUG: "+this.message};this.message=a},notReady:function(a){this.toString=function(){return"NOT READY: "+this.message};this.message=a}}};sjcl.cipher.aes=function(a){this.s[0][0][0]||this.O();var b,c,d,e,f=this.s[0][4],g=this.s[1];b=a.length;var h=1;if(4!==b&&6!==b&&8!==b)throw new sjcl.exception.invalid("invalid aes key size");this.b=[d=a.slice(0),e=[]];for(a=b;a<4*b+28;a++){c=d[a-1];if(0===a%b||8===b&&4===a%b)c=f[c>>>24]<<24^f[c>>16&255]<<16^f[c>>8&255]<<8^f[c&255],0===a%b&&(c=c<<8^c>>>24^h<<24,h=h<<1^283*(h>>7));d[a]=d[a-b]^c}for(b=0;a;b++,a--)c=d[b&3?a:a-4],e[b]=4>=a||4>b?c:g[0][f[c>>>24]]^g[1][f[c>>16&255]]^g[2][f[c>>8&255]]^g[3][f[c&255]]};sjcl.cipher.aes.prototype={encrypt:function(a){return t(this,a,0)},decrypt:function(a){return t(this,a,1)},s:[[[],[],[],[],[]],[[],[],[],[],[]]],O:function(){var a=this.s[0],b=this.s[1],c=a[4],d=b[4],e,f,g,h=[],k=[],l,n,m,p;for(e=0;256>e;e++)k[(h[e]=e<<1^283*(e>>7))^e]=e;for(f=g=0;!c[f];f^=l||1,g=k[g]||1)for(m=g^g<<1^g<<2^g<<3^g<<4,m=m>>8^m&255^99,c[f]=m,d[m]=f,n=h[e=h[l=h[f]]],p=16843009*n^65537*e^257*l^16843008*f,n=257*h[m]^16843008*m,e=0;4>e;e++)a[e][f]=n=n<<24^n>>>8,b[e][m]=p=p<<24^p>>>8;for(e=0;5>e;e++)a[e]=a[e].slice(0),b[e]=b[e].slice(0)}};function t(a,b,c){if(4!==b.length)throw new sjcl.exception.invalid("invalid aes block size");var d=a.b[c],e=b[0]^d[0],f=b[c?3:1]^d[1],g=b[2]^d[2];b=b[c?1:3]^d[3];var h,k,l,n=d.length/4-2,m,p=4,r=[0,0,0,0];h=a.s[c];a=h[0];var q=h[1],v=h[2],w=h[3],x=h[4];for(m=0;m<n;m++)h=a[e>>>24]^q[f>>16&255]^v[g>>8&255]^w[b&255]^d[p],k=a[f>>>24]^q[g>>16&255]^v[b>>8&255]^w[e&255]^d[p+1],l=a[g>>>24]^q[b>>16&255]^v[e>>8&255]^w[f&255]^d[p+2],b=a[b>>>24]^q[e>>16&255]^v[f>>8&255]^w[g&255]^d[p+3],p+=4,e=h,f=k,g=l;for(m=0;4>m;m++)r[c?3&-m:m]=x[e>>>24]<<24^x[f>>16&255]<<16^x[g>>8&255]<<8^x[b&255]^d[p++],h=e,e=f,f=g,g=b,b=h;return r}sjcl.bitArray={bitSlice:function(a,b,c){a=sjcl.bitArray.$(a.slice(b/32),32-(b&31)).slice(1);return void 0===c?a:sjcl.bitArray.clamp(a,c-b)},extract:function(a,b,c){var d=Math.floor(-b-c&31);return((b+c-1^b)&-32?a[b/32|0]<<32-d^a[b/32+1|0]>>>d:a[b/32|0]>>>d)&(1<<c)-1},concat:function(a,b){if(0===a.length||0===b.length)return a.concat(b);var c=a[a.length-1],d=sjcl.bitArray.getPartial(c);return 32===d?a.concat(b):sjcl.bitArray.$(b,d,c|0,a.slice(0,a.length-1))},bitLength:function(a){var b=a.length;return 0===b?0:32*(b-1)+sjcl.bitArray.getPartial(a[b-1])},clamp:function(a,b){if(32*a.length<b)return a;a=a.slice(0,Math.ceil(b/32));var c=a.length;b=b&31;0<c&&b&&(a[c-1]=sjcl.bitArray.partial(b,a[c-1]&2147483648>>b-1,1));return a},partial:function(a,b,c){return 32===a?b:(c?b|0:b<<32-a)+1099511627776*a},getPartial:function(a){return Math.round(a/1099511627776)||32},equal:function(a,b){if(sjcl.bitArray.bitLength(a)!==sjcl.bitArray.bitLength(b))return false;var c=0,d;for(d=0;d<a.length;d++)c|=a[d]^b[d];return 0===c},$:function(a,b,c,d){var e;e=0;for(void 0===d&&(d=[]);32<=b;b-=32)d.push(c),c=0;if(0===b)return d.concat(a);for(e=0;e<a.length;e++)d.push(c|a[e]>>>b),c=a[e]<<32-b;e=a.length?a[a.length-1]:0;a=sjcl.bitArray.getPartial(e);d.push(sjcl.bitArray.partial(b+a&31,32<b+a?c:d.pop(),1));return d},i:function(a,b){return[a[0]^b[0],a[1]^b[1],a[2]^b[2],a[3]^b[3]]},byteswapM:function(a){var b,c;for(b=0;b<a.length;++b)c=a[b],a[b]=c>>>24|c>>>8&65280|(c&65280)<<8|c<<24;return a}};sjcl.codec.utf8String={fromBits:function(a){var b="",c=sjcl.bitArray.bitLength(a),d,e;for(d=0;d<c/8;d++)0===(d&3)&&(e=a[d/4]),b+=String.fromCharCode(e>>>8>>>8>>>8),e<<=8;return decodeURIComponent(escape(b))},toBits:function(a){a=unescape(encodeURIComponent(a));var b=[],c,d=0;for(c=0;c<a.length;c++)d=d<<8|a.charCodeAt(c),3===(c&3)&&(b.push(d),d=0);c&3&&b.push(sjcl.bitArray.partial(8*(c&3),d));return b}};sjcl.codec.hex={fromBits:function(a){var b="",c;for(c=0;c<a.length;c++)b+=((a[c]|0)+0xf00000000000).toString(16).substr(4);return b.substr(0,sjcl.bitArray.bitLength(a)/4)},toBits:function(a){var b,c=[],d;a=a.replace(/\\s|0x/g,"");d=a.length;a=a+"00000000";for(b=0;b<a.length;b+=8)c.push(parseInt(a.substr(b,8),16)^0);return sjcl.bitArray.clamp(c,4*d)}};sjcl.codec.base32={B:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",X:"0123456789ABCDEFGHIJKLMNOPQRSTUV",BITS:32,BASE:5,REMAINING:27,fromBits:function(a,b,c){var d=sjcl.codec.base32.BASE,e=sjcl.codec.base32.REMAINING,f="",g=0,h=sjcl.codec.base32.B,k=0,l=sjcl.bitArray.bitLength(a);c&&(h=sjcl.codec.base32.X);for(c=0;f.length*d<l;)f+=h.charAt((k^a[c]>>>g)>>>e),g<d?(k=a[c]<<d-g,g+=e,c++):(k<<=d,g-=d);for(;f.length&7&&!b;)f+="=";return f},toBits:function(a,b){a=a.replace(/\\s|=/g,"").toUpperCase();var c=sjcl.codec.base32.BITS,d=sjcl.codec.base32.BASE,e=sjcl.codec.base32.REMAINING,f=[],g,h=0,k=sjcl.codec.base32.B,l=0,n,m="base32";b&&(k=sjcl.codec.base32.X,m="base32hex");for(g=0;g<a.length;g++){n=k.indexOf(a.charAt(g));if(0>n){if(!b)try{return sjcl.codec.base32hex.toBits(a)}catch(p){}throw new sjcl.exception.invalid("this isn\'t "+m+"!")}h>e?(h-=e,f.push(l^n>>>h),l=n<<c-h):(h+=d,l^=n<<c-h)}h&56&&f.push(sjcl.bitArray.partial(h&56,l,1));return f}};sjcl.codec.base32hex={fromBits:function(a,b){return sjcl.codec.base32.fromBits(a,b,1)},toBits:function(a){return sjcl.codec.base32.toBits(a,1)}};sjcl.codec.base64={B:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",fromBits:function(a,b,c){var d="",e=0,f=sjcl.codec.base64.B,g=0,h=sjcl.bitArray.bitLength(a);c&&(f=f.substr(0,62)+"-_");for(c=0;6*d.length<h;)d+=f.charAt((g^a[c]>>>e)>>>26),6>e?(g=a[c]<<6-e,e+=26,c++):(g<<=6,e-=6);for(;d.length&3&&!b;)d+="=";return d},toBits:function(a,b){a=a.replace(/\\s|=/g,"");var c=[],d,e=0,f=sjcl.codec.base64.B,g=0,h;b&&(f=f.substr(0,62)+"-_");for(d=0;d<a.length;d++){h=f.indexOf(a.charAt(d));if(0>h)throw new sjcl.exception.invalid("this isn\'t base64!");26<e?(e-=26,c.push(g^h>>>e),g=h<<32-e):(e+=6,g^=h<<32-e)}e&56&&c.push(sjcl.bitArray.partial(e&56,g,1));return c}};sjcl.codec.base64url={fromBits:function(a){return sjcl.codec.base64.fromBits(a,1,1)},toBits:function(a){return sjcl.codec.base64.toBits(a,1)}};sjcl.hash.sha256=function(a){this.b[0]||this.O();a?(this.F=a.F.slice(0),this.A=a.A.slice(0),this.l=a.l):this.reset()};sjcl.hash.sha256.hash=function(a){return new sjcl.hash.sha256().update(a).finalize()};sjcl.hash.sha256.prototype={blockSize:512,reset:function(){this.F=this.Y.slice(0);this.A=[];this.l=0;return this},update:function(a){"string"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));var b,c=this.A=sjcl.bitArray.concat(this.A,a);b=this.l;a=this.l=b+sjcl.bitArray.bitLength(a);if(9007199254740991<a)throw new sjcl.exception.invalid("Cannot hash more than 2^53 - 1 bits");if("undefined"!==typeof Uint32Array){var d=new Uint32Array(c),e=0;for(b=512+b-(512+b&511);b<=a;b+=512)u(this,d.subarray(16*e,16*(e+1))),e+=1;c.splice(0,16*e)}else for(b=512+b-(512+b&511);b<=a;b+=512)u(this,c.splice(0,16));return this},finalize:function(){var a,b=this.A,c=this.F,b=sjcl.bitArray.concat(b,[sjcl.bitArray.partial(1,1)]);for(a=b.length+2;a&15;a++)b.push(0);b.push(Math.floor(this.l/4294967296));for(b.push(this.l|0);b.length;)u(this,b.splice(0,16));this.reset();return c},Y:[],b:[],O:function(){function a(a2){return 4294967296*(a2-Math.floor(a2))|0}for(var b=0,c=2,d,e;64>b;c++){e=true;for(d=2;d*d<=c;d++)if(0===c%d){e=false;break}e&&(8>b&&(this.Y[b]=a(Math.pow(c,.5))),this.b[b]=a(Math.pow(c,1/3)),b++)}}};function u(a,b){var c,d,e,f=a.F,g=a.b,h=f[0],k=f[1],l=f[2],n=f[3],m=f[4],p=f[5],r=f[6],q=f[7];for(c=0;64>c;c++)16>c?d=b[c]:(d=b[c+1&15],e=b[c+14&15],d=b[c&15]=(d>>>7^d>>>18^d>>>3^d<<25^d<<14)+(e>>>17^e>>>19^e>>>10^e<<15^e<<13)+b[c&15]+b[c+9&15]|0),d=d+q+(m>>>6^m>>>11^m>>>25^m<<26^m<<21^m<<7)+(r^m&(p^r))+g[c],q=r,r=p,p=m,m=n+d|0,n=l,l=k,k=h,h=d+(k&l^n&(k^l))+(k>>>2^k>>>13^k>>>22^k<<30^k<<19^k<<10)|0;f[0]=f[0]+h|0;f[1]=f[1]+k|0;f[2]=f[2]+l|0;f[3]=f[3]+n|0;f[4]=f[4]+m|0;f[5]=f[5]+p|0;f[6]=f[6]+r|0;f[7]=f[7]+q|0}sjcl.mode.ccm={name:"ccm",G:[],listenProgress:function(a){sjcl.mode.ccm.G.push(a)},unListenProgress:function(a){a=sjcl.mode.ccm.G.indexOf(a);-1<a&&sjcl.mode.ccm.G.splice(a,1)},fa:function(a){var b=sjcl.mode.ccm.G.slice(),c;for(c=0;c<b.length;c+=1)b[c](a)},encrypt:function(a,b,c,d,e){var f,g=b.slice(0),h=sjcl.bitArray,k=h.bitLength(c)/8,l=h.bitLength(g)/8;e=e||64;d=d||[];if(7>k)throw new sjcl.exception.invalid("ccm: iv must be at least 7 bytes");for(f=2;4>f&&l>>>8*f;f++);f<15-k&&(f=15-k);c=h.clamp(c,8*(15-f));b=sjcl.mode.ccm.V(a,b,c,d,e,f);g=sjcl.mode.ccm.C(a,g,c,b,e,f);return h.concat(g.data,g.tag)},decrypt:function(a,b,c,d,e){e=e||64;d=d||[];var f=sjcl.bitArray,g=f.bitLength(c)/8,h=f.bitLength(b),k=f.clamp(b,h-e),l=f.bitSlice(b,h-e),h=(h-e)/8;if(7>g)throw new sjcl.exception.invalid("ccm: iv must be at least 7 bytes");for(b=2;4>b&&h>>>8*b;b++);b<15-g&&(b=15-g);c=f.clamp(c,8*(15-b));k=sjcl.mode.ccm.C(a,k,c,l,e,b);a=sjcl.mode.ccm.V(a,k.data,c,d,e,b);if(!f.equal(k.tag,a))throw new sjcl.exception.corrupt("ccm: tag doesn\'t match");return k.data},na:function(a,b,c,d,e,f){var g=[],h=sjcl.bitArray,k=h.i;d=[h.partial(8,(b.length?64:0)|d-2<<2|f-1)];d=h.concat(d,c);d[3]|=e;d=a.encrypt(d);if(b.length)for(c=h.bitLength(b)/8,65279>=c?g=[h.partial(16,c)]:4294967295>=c&&(g=h.concat([h.partial(16,65534)],[c])),g=h.concat(g,b),b=0;b<g.length;b+=4)d=a.encrypt(k(d,g.slice(b,b+4).concat([0,0,0])));return d},V:function(a,b,c,d,e,f){var g=sjcl.bitArray,h=g.i;e/=8;if(e%2||4>e||16<e)throw new sjcl.exception.invalid("ccm: invalid tag length");if(4294967295<d.length||4294967295<b.length)throw new sjcl.exception.bug("ccm: can\'t deal with 4GiB or more data");c=sjcl.mode.ccm.na(a,d,c,e,g.bitLength(b)/8,f);for(d=0;d<b.length;d+=4)c=a.encrypt(h(c,b.slice(d,d+4).concat([0,0,0])));return g.clamp(c,8*e)},C:function(a,b,c,d,e,f){var g,h=sjcl.bitArray;g=h.i;var k=b.length,l=h.bitLength(b),n=k/50,m=n;c=h.concat([h.partial(8,f-1)],c).concat([0,0,0]).slice(0,4);d=h.bitSlice(g(d,a.encrypt(c)),0,e);if(!k)return{tag:d,data:[]};for(g=0;g<k;g+=4)g>n&&(sjcl.mode.ccm.fa(g/k),n+=m),c[3]++,e=a.encrypt(c),b[g]^=e[0],b[g+1]^=e[1],b[g+2]^=e[2],b[g+3]^=e[3];return{tag:d,data:h.clamp(b,l)}}};sjcl.mode.ocb2={name:"ocb2",encrypt:function(a,b,c,d,e,f){if(128!==sjcl.bitArray.bitLength(c))throw new sjcl.exception.invalid("ocb iv must be 128 bits");var g,h=sjcl.mode.ocb2.S,k=sjcl.bitArray,l=k.i,n=[0,0,0,0];c=h(a.encrypt(c));var m,p=[];d=d||[];e=e||64;for(g=0;g+4<b.length;g+=4)m=b.slice(g,g+4),n=l(n,m),p=p.concat(l(c,a.encrypt(l(c,m)))),c=h(c);m=b.slice(g);b=k.bitLength(m);g=a.encrypt(l(c,[0,0,0,b]));m=k.clamp(l(m.concat([0,0,0]),g),b);n=l(n,l(m.concat([0,0,0]),g));n=a.encrypt(l(n,l(c,h(c))));d.length&&(n=l(n,f?d:sjcl.mode.ocb2.pmac(a,d)));return p.concat(k.concat(m,k.clamp(n,e)))},decrypt:function(a,b,c,d,e,f){if(128!==sjcl.bitArray.bitLength(c))throw new sjcl.exception.invalid("ocb iv must be 128 bits");e=e||64;var g=sjcl.mode.ocb2.S,h=sjcl.bitArray,k=h.i,l=[0,0,0,0],n=g(a.encrypt(c)),m,p,r=sjcl.bitArray.bitLength(b)-e,q=[];d=d||[];for(c=0;c+4<r/32;c+=4)m=k(n,a.decrypt(k(n,b.slice(c,c+4)))),l=k(l,m),q=q.concat(m),n=g(n);p=r-32*c;m=a.encrypt(k(n,[0,0,0,p]));m=k(m,h.clamp(b.slice(c),p).concat([0,0,0]));l=k(l,m);l=a.encrypt(k(l,k(n,g(n))));d.length&&(l=k(l,f?d:sjcl.mode.ocb2.pmac(a,d)));if(!h.equal(h.clamp(l,e),h.bitSlice(b,r)))throw new sjcl.exception.corrupt("ocb: tag doesn\'t match");return q.concat(h.clamp(m,p))},pmac:function(a,b){var c,d=sjcl.mode.ocb2.S,e=sjcl.bitArray,f=e.i,g=[0,0,0,0],h=a.encrypt([0,0,0,0]),h=f(h,d(d(h)));for(c=0;c+4<b.length;c+=4)h=d(h),g=f(g,a.encrypt(f(h,b.slice(c,c+4))));c=b.slice(c);128>e.bitLength(c)&&(h=f(h,d(h)),c=e.concat(c,[-2147483648,0,0,0]));g=f(g,c);return a.encrypt(f(d(f(h,d(h))),g))},S:function(a){return[a[0]<<1^a[1]>>>31,a[1]<<1^a[2]>>>31,a[2]<<1^a[3]>>>31,a[3]<<1^135*(a[0]>>>31)]}};sjcl.mode.gcm={name:"gcm",encrypt:function(a,b,c,d,e){var f=b.slice(0);b=sjcl.bitArray;d=d||[];a=sjcl.mode.gcm.C(true,a,f,d,c,e||128);return b.concat(a.data,a.tag)},decrypt:function(a,b,c,d,e){var f=b.slice(0),g=sjcl.bitArray,h=g.bitLength(f);e=e||128;d=d||[];e<=h?(b=g.bitSlice(f,h-e),f=g.bitSlice(f,0,h-e)):(b=f,f=[]);a=sjcl.mode.gcm.C(false,a,f,d,c,e);if(!g.equal(a.tag,b))throw new sjcl.exception.corrupt("gcm: tag doesn\'t match");return a.data},ka:function(a,b){var c,d,e,f,g,h=sjcl.bitArray.i;e=[0,0,0,0];f=b.slice(0);for(c=0;128>c;c++){(d=0!==(a[Math.floor(c/32)]&1<<31-c%32))&&(e=h(e,f));g=0!==(f[3]&1);for(d=3;0<d;d--)f[d]=f[d]>>>1|(f[d-1]&1)<<31;f[0]>>>=1;g&&(f[0]^=-520093696)}return e},j:function(a,b,c){var d,e=c.length;b=b.slice(0);for(d=0;d<e;d+=4)b[0]^=4294967295&c[d],b[1]^=4294967295&c[d+1],b[2]^=4294967295&c[d+2],b[3]^=4294967295&c[d+3],b=sjcl.mode.gcm.ka(b,a);return b},C:function(a,b,c,d,e,f){var g,h,k,l,n,m,p,r,q=sjcl.bitArray;m=c.length;p=q.bitLength(c);r=q.bitLength(d);h=q.bitLength(e);g=b.encrypt([0,0,0,0]);96===h?(e=e.slice(0),e=q.concat(e,[1])):(e=sjcl.mode.gcm.j(g,[0,0,0,0],e),e=sjcl.mode.gcm.j(g,e,[0,0,Math.floor(h/4294967296),h&4294967295]));h=sjcl.mode.gcm.j(g,[0,0,0,0],d);n=e.slice(0);d=h.slice(0);a||(d=sjcl.mode.gcm.j(g,h,c));for(l=0;l<m;l+=4)n[3]++,k=b.encrypt(n),c[l]^=k[0],c[l+1]^=k[1],c[l+2]^=k[2],c[l+3]^=k[3];c=q.clamp(c,p);a&&(d=sjcl.mode.gcm.j(g,h,c));a=[Math.floor(r/4294967296),r&4294967295,Math.floor(p/4294967296),p&4294967295];d=sjcl.mode.gcm.j(g,d,a);k=b.encrypt(e);d[0]^=k[0];d[1]^=k[1];d[2]^=k[2];d[3]^=k[3];return{tag:q.bitSlice(d,0,f),data:c}}};sjcl.misc.hmac=function(a,b){this.W=b=b||sjcl.hash.sha256;var c=[[],[]],d,e=b.prototype.blockSize/32;this.w=[new b,new b];a.length>e&&(a=b.hash(a));for(d=0;d<e;d++)c[0][d]=a[d]^909522486,c[1][d]=a[d]^1549556828;this.w[0].update(c[0]);this.w[1].update(c[1]);this.R=new b(this.w[0])};sjcl.misc.hmac.prototype.encrypt=sjcl.misc.hmac.prototype.mac=function(a){if(this.aa)throw new sjcl.exception.invalid("encrypt on already updated hmac called!");this.update(a);return this.digest(a)};sjcl.misc.hmac.prototype.reset=function(){this.R=new this.W(this.w[0]);this.aa=false};sjcl.misc.hmac.prototype.update=function(a){this.aa=true;this.R.update(a)};sjcl.misc.hmac.prototype.digest=function(){var a=this.R.finalize(),a=new this.W(this.w[1]).update(a).finalize();this.reset();return a};sjcl.misc.pbkdf2=function(a,b,c,d,e){c=c||1e4;if(0>d||0>c)throw new sjcl.exception.invalid("invalid params to pbkdf2");"string"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));"string"===typeof b&&(b=sjcl.codec.utf8String.toBits(b));e=e||sjcl.misc.hmac;a=new e(a);var f,g,h,k,l=[],n=sjcl.bitArray;for(k=1;32*l.length<(d||1);k++){e=f=a.encrypt(n.concat(b,[k]));for(g=1;g<c;g++)for(f=a.encrypt(f),h=0;h<f.length;h++)e[h]^=f[h];l=l.concat(e)}d&&(l=n.clamp(l,d));return l};sjcl.prng=function(a){this.c=[new sjcl.hash.sha256];this.m=[0];this.P=0;this.H={};this.N=0;this.U={};this.Z=this.f=this.o=this.ha=0;this.b=[0,0,0,0,0,0,0,0];this.h=[0,0,0,0];this.L=void 0;this.M=a;this.D=false;this.K={progress:{},seeded:{}};this.u=this.ga=0;this.I=1;this.J=2;this.ca=65536;this.T=[0,48,64,96,128,192,256,384,512,768,1024];this.da=3e4;this.ba=80};sjcl.prng.prototype={randomWords:function(a,b){var c=[],d;d=this.isReady(b);var e;if(d===this.u)throw new sjcl.exception.notReady("generator isn\'t seeded");if(d&this.J){d=!(d&this.I);e=[];var f=0,g;this.Z=e[0]=new Date().valueOf()+this.da;for(g=0;16>g;g++)e.push(4294967296*Math.random()|0);for(g=0;g<this.c.length&&(e=e.concat(this.c[g].finalize()),f+=this.m[g],this.m[g]=0,d||!(this.P&1<<g));g++);this.P>=1<<this.c.length&&(this.c.push(new sjcl.hash.sha256),this.m.push(0));this.f-=f;f>this.o&&(this.o=f);this.P++;this.b=sjcl.hash.sha256.hash(this.b.concat(e));this.L=new sjcl.cipher.aes(this.b);for(d=0;4>d&&(this.h[d]=this.h[d]+1|0,!this.h[d]);d++);}for(d=0;d<a;d+=4)0===(d+1)%this.ca&&y(this),e=z(this),c.push(e[0],e[1],e[2],e[3]);y(this);return c.slice(0,a)},setDefaultParanoia:function(a,b){if(0===a&&"Setting paranoia=0 will ruin your security; use it only for testing"!==b)throw new sjcl.exception.invalid("Setting paranoia=0 will ruin your security; use it only for testing");this.M=a},addEntropy:function(a,b,c){c=c||"user";var d,e,f=new Date().valueOf(),g=this.H[c],h=this.isReady(),k=0;d=this.U[c];void 0===d&&(d=this.U[c]=this.ha++);void 0===g&&(g=this.H[c]=0);this.H[c]=(this.H[c]+1)%this.c.length;switch(typeof a){case"number":void 0===b&&(b=1);this.c[g].update([d,this.N++,1,b,f,1,a|0]);break;case"object":c=Object.prototype.toString.call(a);if("[object Uint32Array]"===c){e=[];for(c=0;c<a.length;c++)e.push(a[c]);a=e}else for("[object Array]"!==c&&(k=1),c=0;c<a.length&&!k;c++)"number"!==typeof a[c]&&(k=1);if(!k){if(void 0===b)for(c=b=0;c<a.length;c++)for(e=a[c];0<e;)b++,e=e>>>1;this.c[g].update([d,this.N++,2,b,f,a.length].concat(a))}break;case"string":void 0===b&&(b=a.length);this.c[g].update([d,this.N++,3,b,f,a.length]);this.c[g].update(a);break;default:k=1}if(k)throw new sjcl.exception.bug("random: addEntropy only supports number, array of numbers or string");this.m[g]+=b;this.f+=b;h===this.u&&(this.isReady()!==this.u&&A("seeded",Math.max(this.o,this.f)),A("progress",this.getProgress()))},isReady:function(a){a=this.T[void 0!==a?a:this.M];return this.o&&this.o>=a?this.m[0]>this.ba&&new Date().valueOf()>this.Z?this.J|this.I:this.I:this.f>=a?this.J|this.u:this.u},getProgress:function(a){a=this.T[a?a:this.M];return this.o>=a?1:this.f>a?1:this.f/a},startCollectors:function(){if(!this.D){this.a={loadTimeCollector:B(this,this.ma),mouseCollector:B(this,this.oa),keyboardCollector:B(this,this.la),accelerometerCollector:B(this,this.ea),touchCollector:B(this,this.qa)};if(window.addEventListener)window.addEventListener("load",this.a.loadTimeCollector,false),window.addEventListener("mousemove",this.a.mouseCollector,false),window.addEventListener("keypress",this.a.keyboardCollector,false),window.addEventListener("devicemotion",this.a.accelerometerCollector,false),window.addEventListener("touchmove",this.a.touchCollector,false);else if(document.attachEvent)document.attachEvent("onload",this.a.loadTimeCollector),document.attachEvent("onmousemove",this.a.mouseCollector),document.attachEvent("keypress",this.a.keyboardCollector);else throw new sjcl.exception.bug("can\'t attach event");this.D=true}},stopCollectors:function(){this.D&&(window.removeEventListener?(window.removeEventListener("load",this.a.loadTimeCollector,false),window.removeEventListener("mousemove",this.a.mouseCollector,false),window.removeEventListener("keypress",this.a.keyboardCollector,false),window.removeEventListener("devicemotion",this.a.accelerometerCollector,false),window.removeEventListener("touchmove",this.a.touchCollector,false)):document.detachEvent&&(document.detachEvent("onload",this.a.loadTimeCollector),document.detachEvent("onmousemove",this.a.mouseCollector),document.detachEvent("keypress",this.a.keyboardCollector)),this.D=false)},addEventListener:function(a,b){this.K[a][this.ga++]=b},removeEventListener:function(a,b){var c,d,e=this.K[a],f=[];for(d in e)e.hasOwnProperty(d)&&e[d]===b&&f.push(d);for(c=0;c<f.length;c++)d=f[c],delete e[d]},la:function(){C(this,1)},oa:function(a){var b,c;try{b=a.x||a.clientX||a.offsetX||0,c=a.y||a.clientY||a.offsetY||0}catch(d){c=b=0}0!=b&&0!=c&&this.addEntropy([b,c],2,"mouse");C(this,0)},qa:function(a){a=a.touches[0]||a.changedTouches[0];this.addEntropy([a.pageX||a.clientX,a.pageY||a.clientY],1,"touch");C(this,0)},ma:function(){C(this,2)},ea:function(a){a=a.accelerationIncludingGravity.x||a.accelerationIncludingGravity.y||a.accelerationIncludingGravity.z;if(window.orientation){var b=window.orientation;"number"===typeof b&&this.addEntropy(b,1,"accelerometer")}a&&this.addEntropy(a,2,"accelerometer");C(this,0)}};function A(a,b){var c,d=sjcl.random.K[a],e=[];for(c in d)d.hasOwnProperty(c)&&e.push(d[c]);for(c=0;c<e.length;c++)e[c](b)}function C(a,b){"undefined"!==typeof window&&window.performance&&"function"===typeof window.performance.now?a.addEntropy(window.performance.now(),b,"loadtime"):a.addEntropy(new Date().valueOf(),b,"loadtime")}function y(a){a.b=z(a).concat(z(a));a.L=new sjcl.cipher.aes(a.b)}function z(a){for(var b=0;4>b&&(a.h[b]=a.h[b]+1|0,!a.h[b]);b++);return a.L.encrypt(a.h)}function B(a,b){return function(){b.apply(a,arguments)}}sjcl.random=new sjcl.prng(6);a:try{if(G="undefined"!==typeof module&&module.exports){try{H=__require2("crypto")}catch(a){H=null}G=E=H}if(G&&E.randomBytes)D=E.randomBytes(128),D=new Uint32Array(new Uint8Array(D).buffer),sjcl.random.addEntropy(D,1024,"crypto[\'randomBytes\']");else if("undefined"!==typeof window&&"undefined"!==typeof Uint32Array){F=new Uint32Array(32);if(window.crypto&&window.crypto.getRandomValues)window.crypto.getRandomValues(F);else if(window.msCrypto&&window.msCrypto.getRandomValues)window.msCrypto.getRandomValues(F);else break a;sjcl.random.addEntropy(F,1024,"crypto[\'getRandomValues\']")}}catch(a){"undefined"!==typeof window&&window.console&&(console.log("There was an error collecting entropy from the browser:"),console.log(a))}var D;var E;var F;var G;var H;sjcl.json={defaults:{v:1,iter:1e4,ks:128,ts:64,mode:"ccm",adata:"",cipher:"aes"},ja:function(a,b,c,d){c=c||{};d=d||{};var e=sjcl.json,f=e.g({iv:sjcl.random.randomWords(4,0)},e.defaults),g;e.g(f,c);c=f.adata;"string"===typeof f.salt&&(f.salt=sjcl.codec.base64.toBits(f.salt));"string"===typeof f.iv&&(f.iv=sjcl.codec.base64.toBits(f.iv));if(!sjcl.mode[f.mode]||!sjcl.cipher[f.cipher]||"string"===typeof a&&100>=f.iter||64!==f.ts&&96!==f.ts&&128!==f.ts||128!==f.ks&&192!==f.ks&&256!==f.ks||2>f.iv.length||4<f.iv.length)throw new sjcl.exception.invalid("json encrypt: invalid parameters");"string"===typeof a?(g=sjcl.misc.cachedPbkdf2(a,f),a=g.key.slice(0,f.ks/32),f.salt=g.salt):sjcl.ecc&&a instanceof sjcl.ecc.elGamal.publicKey&&(g=a.kem(),f.kemtag=g.tag,a=g.key.slice(0,f.ks/32));"string"===typeof b&&(b=sjcl.codec.utf8String.toBits(b));"string"===typeof c&&(f.adata=c=sjcl.codec.utf8String.toBits(c));g=new sjcl.cipher[f.cipher](a);e.g(d,f);d.key=a;f.ct="ccm"===f.mode&&sjcl.arrayBuffer&&sjcl.arrayBuffer.ccm&&b instanceof ArrayBuffer?sjcl.arrayBuffer.ccm.encrypt(g,b,f.iv,c,f.ts):sjcl.mode[f.mode].encrypt(g,b,f.iv,c,f.ts);return f},encrypt:function(a,b,c,d){var e=sjcl.json,f=e.ja.apply(e,arguments);return e.encode(f)},ia:function(a,b,c,d){c=c||{};d=d||{};var e=sjcl.json;b=e.g(e.g(e.g({},e.defaults),b),c,true);var f,g;f=b.adata;"string"===typeof b.salt&&(b.salt=sjcl.codec.base64.toBits(b.salt));"string"===typeof b.iv&&(b.iv=sjcl.codec.base64.toBits(b.iv));if(!sjcl.mode[b.mode]||!sjcl.cipher[b.cipher]||"string"===typeof a&&100>=b.iter||64!==b.ts&&96!==b.ts&&128!==b.ts||128!==b.ks&&192!==b.ks&&256!==b.ks||!b.iv||2>b.iv.length||4<b.iv.length)throw new sjcl.exception.invalid("json decrypt: invalid parameters");"string"===typeof a?(g=sjcl.misc.cachedPbkdf2(a,b),a=g.key.slice(0,b.ks/32),b.salt=g.salt):sjcl.ecc&&a instanceof sjcl.ecc.elGamal.secretKey&&(a=a.unkem(sjcl.codec.base64.toBits(b.kemtag)).slice(0,b.ks/32));"string"===typeof f&&(f=sjcl.codec.utf8String.toBits(f));g=new sjcl.cipher[b.cipher](a);f="ccm"===b.mode&&sjcl.arrayBuffer&&sjcl.arrayBuffer.ccm&&b.ct instanceof ArrayBuffer?sjcl.arrayBuffer.ccm.decrypt(g,b.ct,b.iv,b.tag,f,b.ts):sjcl.mode[b.mode].decrypt(g,b.ct,b.iv,f,b.ts);e.g(d,b);d.key=a;return 1===c.raw?f:sjcl.codec.utf8String.fromBits(f)},decrypt:function(a,b,c,d){var e=sjcl.json;return e.ia(a,e.decode(b),c,d)},encode:function(a){var b,c="{",d="";for(b in a)if(a.hasOwnProperty(b)){if(!b.match(/^[a-z0-9]+$/i))throw new sjcl.exception.invalid("json encode: invalid property name");c+=d+\'"\'+b+\'":\';d=",";switch(typeof a[b]){case"number":case"boolean":c+=a[b];break;case"string":c+=\'"\'+escape(a[b])+\'"\';break;case"object":c+=\'"\'+sjcl.codec.base64.fromBits(a[b],0)+\'"\';break;default:throw new sjcl.exception.bug("json encode: unsupported type")}}return c+"}"},decode:function(a){a=a.replace(/\\s/g,"");if(!a.match(/^\\{.*\\}$/))throw new sjcl.exception.invalid("json decode: this isn\'t json!");a=a.replace(/^\\{|\\}$/g,"").split(/,/);var b={},c,d;for(c=0;c<a.length;c++){if(!(d=a[c].match(/^\\s*(?:(["\']?)([a-z][a-z0-9]*)\\1)\\s*:\\s*(?:(-?\\d+)|"([a-z0-9+\\/%*_.@=\\-]*)"|(true|false))$/i)))throw new sjcl.exception.invalid("json decode: this isn\'t json!");null!=d[3]?b[d[2]]=parseInt(d[3],10):null!=d[4]?b[d[2]]=d[2].match(/^(ct|adata|salt|iv)$/)?sjcl.codec.base64.toBits(d[4]):unescape(d[4]):null!=d[5]&&(b[d[2]]="true"===d[5])}return b},g:function(a,b,c){void 0===a&&(a={});if(void 0===b)return a;for(var d in b)if(b.hasOwnProperty(d)){if(c&&void 0!==a[d]&&a[d]!==b[d])throw new sjcl.exception.invalid("required parameter overridden");a[d]=b[d]}return a},sa:function(a,b){var c={},d;for(d in a)a.hasOwnProperty(d)&&a[d]!==b[d]&&(c[d]=a[d]);return c},ra:function(a,b){var c={},d;for(d=0;d<b.length;d++)void 0!==a[b[d]]&&(c[b[d]]=a[b[d]]);return c}};sjcl.encrypt=sjcl.json.encrypt;sjcl.decrypt=sjcl.json.decrypt;sjcl.misc.pa={};sjcl.misc.cachedPbkdf2=function(a,b){var c=sjcl.misc.pa,d;b=b||{};d=b.iter||1e3;c=c[a]=c[a]||{};d=c[d]=c[d]||{firstSalt:b.salt&&b.salt.length?b.salt.slice(0):sjcl.random.randomWords(2,0)};c=void 0===b.salt?d.firstSalt:b.salt;d[c]=d[c]||sjcl.misc.pbkdf2(a,c,b.iter);return{key:d[c].slice(0),salt:c.slice(0)}};var _HTTPfrontend=class extends Service{constructor(options,path,fetched){super(options);this.name="http";this.fetchProxied=false;this.listening={};this.GET=(url="http://localhost:8080/ping",type="",mimeType)=>{if(type==="json")mimeType="application/json";return new Promise((resolve,reject)=>{let xhr=_HTTPfrontend.request({method:"GET",url,responseType:type,mimeType,onload:ev=>{let data;if(xhr.responseType===""||xhr.responseType==="text")data=xhr.responseText;else data=xhr.response;if(url instanceof URL)url=url.toString();this.setState({[url]:data});resolve(data)},onabort:er=>{reject(er)}})}).catch(console.error)};this.POST=(message,url="http://localhost:8080/echo",type="",mimeType)=>{if(typeof message==="object"&&(type==="json"||type==="text"||!type)){message=JSON.stringify(message)}if(type==="json")mimeType="application/json";return new Promise((resolve,reject)=>{let xhr=_HTTPfrontend.request({method:"POST",url,data:message,responseType:type,mimeType,onload:ev=>{let data;if(xhr.responseType===""||xhr.responseType==="text")data=xhr.responseText;else data=xhr.response;if(url instanceof URL)url=url.toString();this.setState({[url]:data});resolve(data)},onabort:er=>{reject(er)}})}).catch(console.error)};this.transmit=(message,url)=>{let obj=message;if(typeof obj==="object"){message=JSON.stringify(obj)}if(obj?.method?.toLowerCase()=="get"||message?.toLowerCase()==="get")return this.GET(url);return this.POST(message,url)};this.transponder=(url,message,type="",mimeType)=>{if(typeof message==="object")message=JSON.stringify(message);let method="GET";if(message){method="POST"}if(type==="json")mimeType="application/json";else return new Promise((resolve,reject)=>{let xhr=_HTTPfrontend.request({method,url,data:message,responseType:type,onload:ev=>{let body=xhr.response;if(typeof body==="string"){let substr=body.substring(0,8);if(substr.includes("{")||substr.includes("[")){if(substr.includes("\\\\"))body=body.replace(/\\\\/g,"");if(body[0]===\'"\'){body=body.substring(1,body.length-1)};body=JSON.parse(body)}}if(typeof body?.method==="string"){return resolve(this.handleMethod(body.route,body.method,body.args))}else if(typeof body?.route==="string"){return resolve(this.handleServiceMessage(body))}else if(typeof body?.node==="string"||body.node instanceof GraphNode){return resolve(this.handleGraphNodeCall(body.node,body.args))}else return resolve(body)},onabort:er=>{reject(er)}})}).catch(console.error)};this.listen=(path2="0",fetched2=async(clone,args,response)=>{const result=await clone.text();const returned=this.receive(result);this.setState({[response.url]:returned})})=>{this.listening[path2]={};let listenerId=`${path2}${Math.floor(Math.random()*1e15)}`;this.listening[path2][listenerId]=fetched2;if(!this.fetchProxied){globalThis.fetch=new Proxy(globalThis.fetch,{apply(fetch,that,args){const result=fetch.apply(that,args);result.then(response=>{if(!response.ok)return;if(this.listening["0"]){for(const key in this.listeners){const clone=response.clone();this.listening["0"][key](clone,args,response)}}else{for(const key in this.listening){if(response.url.includes(key)){for(const key2 in this.listening[path2]){const clone=response.clone();this.listening[path2][key2](clone,args,response)}break}}}}).catch(er=>{console.error(er)});return result}});this.fetchProxied=true}return listenerId};this.stopListening=(path2,listener)=>{if(!path2&&path2!==0){for(const key in this.listening)delete this.listening[key]}else{if(!listener)delete this.listening[path2];else delete this.listening[listener]}};this.load(this);this.listen(path,fetched)}};var HTTPfrontend=_HTTPfrontend;HTTPfrontend.request=options=>{const xhr=new XMLHttpRequest;if(options.responseType)xhr.responseType=options.responseType;else options.responseType="json";if(options.mimeType){xhr.overrideMimeType(options.mimeType)}if(options.onload)xhr.addEventListener("load",options.onload,false);if(options.onprogress)xhr.addEventListener("progress",options.onprogress,false);if(options.onabort)xhr.addEventListener("abort",options.onabort,false);if(options.onloadend)xhr.addEventListener("loadend",options.onloadend,false);if(options.onerror)xhr.addEventListener("error",options.onerror,false);xhr.open(options.method,options.url,true,options.user,options.pass);if(!options.onerror)xhr.onerror=function(){xhr.abort()};xhr.send(options.data);return xhr};var import_web_worker=__toESM(require_browser());var WorkerService=class extends Service{constructor(options){super();this.name="worker";this.workers={};this.threadRot=0;this.loadWorkerRoute=(rt,routeKey)=>{if(rt.workerUrl)rt.url=rt.workerUrl;if(rt.workerId)rt.__node.tag=rt.workerId;if(!rt.__node.tag)rt.__node.tag=routeKey;rt._id=rt.__node.tag;let worker;if(this.workers[rt._id])worker=this.workers[rt._id];else if(rt.worker)worker=rt.worker;if(!worker){worker=this.addWorker(rt)}rt.worker=worker;if(!rt.worker.__ondisconnected){let ondelete=rt2=>{rt2.worker?.terminate()};rt.__addOndisconnected(ondelete)}if(rt.transferFunctions){for(const prop in rt.transferFunctions){this.transferFunction(worker,rt.transferFunctions[prop],prop)}}if(rt.transferClasses){for(const prop in rt.transferClasses){this.transferClass(worker,rt.transferClasses[prop],prop)}}if(worker){if(!rt.__operator){rt.__operator=(...args)=>{if(rt.callback){if(!this.__node.nodes.get(rt.__node.tag)?.__children)worker.post(rt.callback,args);else return worker.run(rt.callback,args)}else{if(!this.__node.nodes.get(rt.__node.tag)?.__children)worker.send(args);else return worker.request(args)}}}if(rt.init){worker.run(rt.init,rt.initArgs,rt.initTransfer)}return worker}};this.workerloader={"workers":(node,parent,graph,roots)=>{let rt=node;if(!node.parentRoute&&(parent?.callback&&parent?.worker))node.parentRoute=parent?.callback;if(rt?.worker||rt?.workerId||rt?.workerUrl){let worker=this.loadWorkerRoute(rt,rt.__node.tag);if(worker){if(!rt.parentRoute&&rt.__parent?.callback)rt.parentRoute=rt.__parent.callback;if(rt.__parent&&!rt.portId){if(typeof rt.__parent==="string"){if(rt.__node.tag!==rt.__parent&&worker._id!==rt.__parent)rt.portId=this.establishMessageChannel(worker,rt.__parent)}else if(rt.__node.tag!==rt.__parent?.__node?.tag&&worker._id!==rt.__parent?.tag){rt.portId=this.establishMessageChannel(worker,rt.__parent.worker)}};if(rt.parentRoute){if(!rt.stopped){if(typeof rt.__parent==="string"&&rt.__parent===worker._id){worker.run("subscribe",[rt.parentRoute,void 0,void 0,rt.callback])}else if(rt.__node.tag===rt.__parent?.__node?.tag||worker._id===rt.__parent?.__node?.tag){worker.run("subscribe",[rt.parentRoute,void 0,void 0,rt.callback])}else worker.run("subscribeToWorker",[rt.parentRoute,rt.portId,void 0,rt.callback,void 0,void 0,rt.blocking]).then(sub=>{worker.workerSubs[rt.parentRoute+rt.portId].sub=sub})}if(!(typeof rt.__parent==="string"&&rt.__parent===worker._id)&&!(rt.__node.tag===rt.__parent?.__node?.tag||worker._id===rt.__parent?.__node?.tag))worker.workerSubs[rt.parentRoute+rt.portId]={sub:null,route:rt.parentRoute,portId:rt.portId,callback:rt.callback,blocking:rt.blocking}}else if(rt.__parent){if(typeof rt.__parent==="string"){if(!rt.stopped){if(rt.__parent===worker._id){worker.run("subscribe",[rt.__parent,void 0,rt.callback])}else worker.run("subscribeToWorker",[rt.__parent,rt.portId,void 0,rt.callback,void 0,void 0,rt.blocking]).then(sub=>{worker.workerSubs[rt.__parent+rt.portId].sub=sub})}if(!(typeof rt.__parent==="string"&&rt.__parent===worker._id))worker.workerSubs[rt.__parent+rt.portId]={sub:null,route:worker._id,portId:rt.portId,callback:rt.callback,blocking:rt.blocking}}else if(rt.__parent?.__node?.tag&&rt.__parent?.worker){if(!rt.stopped){if(rt.__node.tag===rt.__parent.__node.tag||worker._id===rt.__parent.__node.tag){worker.run("subscribe",[rt.__parent.__node.tag,void 0,void 0,rt.callback])}else worker.run("subscribeToWorker",[rt.__parent.__node.tag,rt.portId,void 0,rt.callback,void 0,void 0,rt.blocking]).then(sub=>{worker.workerSubs[rt.__parent.__node.tag+rt.portId].sub=sub})}if(!(rt.__node.tag===rt.__parent?.__node?.tag||worker._id===rt.__parent?.__node?.tag))worker.workerSubs[rt.__parent.__node.tag+rt.portId]={sub:null,route:rt.__parent.__node.tag,portId:rt.portId,callback:rt.callback,blocking:rt.blocking}}}}}else if(rt.__parent&&rt.parentRoute){if(typeof rt.__parent==="string"&&roots[rt.__parent]?.worker){roots[rt.__parent].worker.subscribe(rt.parentRoute,rt.__operator,void 0,void 0,void 0,rt.blocking)}else if(rt.__parent?.worker){rt.__parent.worker.subscribe(rt.parentRoute,rt.__operator,void 0,void 0,void 0,rt.blocking)}}return rt}};this.addDefaultMessageListener=()=>{globalThis.onmessage=ev=>{let result=this.receive(ev.data);if(this.__node.keepState)this.setState({[this.name]:result})}};this.postMessage=(message,target,transfer)=>{if(this.workers[target]){this.workers[target].send(message,transfer)}else{globalThis.postMessage(message,target,transfer)}};this.addWorker=options2=>{let worker;if(!options2._id)options2._id=`worker${Math.floor(Math.random()*1e15)}`;if(options2.url)worker=new import_web_worker.default(options2.url);else if(options2.port){worker=options2.port}else if(this.workers[options2._id]){if(this.workers[options2._id].port)worker=this.workers[options2._id].port;else worker=this.workers[options2._id].worker}if(!worker)return;let send=(message,transfer)=>{return this.transmit(message,worker,transfer)};let post=(route,args,transfer,method)=>{let message={route,args};if(method)message.method=method;return this.transmit(message,worker,transfer)};let run=(route,args,transfer,method)=>{return new Promise((res,rej)=>{let callbackId=Math.random();let req={route:"runRequest",args:[{route,args},options2._id,callbackId]};if(method)req.args[0].method=method;let onmessage=ev=>{if(typeof ev.data==="object"){if(ev.data.callbackId===callbackId){worker.removeEventListener("message",onmessage);res(ev.data.args)}}};worker.addEventListener("message",onmessage);this.transmit(req,worker,transfer)})};let request=(message,transfer,method)=>{return new Promise((res,rej)=>{let callbackId=Math.random();let req={route:"runRequest",args:[message,options2._id,callbackId]};if(method)req.method=method;let onmessage=ev=>{if(typeof ev.data==="object"){if(ev.data.callbackId===callbackId){worker.removeEventListener("message",onmessage);res(ev.data.args)}}};worker.addEventListener("message",onmessage);this.transmit(req,worker,transfer)})};let workerSubs={};let subscribe=(route,callback,args,key,subInput,blocking)=>{return this.subscribeToWorker(route,options2._id,callback,args,key,subInput,blocking)};let unsubscribe=(route,sub)=>{return run("unsubscribe",[route,sub])};let start=async(route,portId,callback,blocking)=>{if(route)await run("subscribeToWorker",[route,portId,void 0,callback,blocking]).then(sub=>{if(sub)workerSubs[route+portId]={sub,route,portId,callback,blocking}});else for(const key in workerSubs){if(typeof workerSubs[key].sub!=="number")await run("subscribeToWorker",[workerSubs[key].route,workerSubs[key].portId,void 0,workerSubs[key].callback,void 0,workerSubs[key].blocking]).then(sub=>{workerSubs[key].sub=sub});console.log(JSON.stringify(workerSubs))}return true};let stop=async(route,portId)=>{if(route&&portId&&workerSubs[route+portId]){await run("unsubscribe",[route,workerSubs[route+portId].sub]);workerSubs[route+portId].sub=false}else{for(const key in workerSubs){if(typeof workerSubs[key].sub==="number"){await run("unpipeWorkers",[workerSubs[key].route,workerSubs[key].portId,workerSubs[key].sub]).then(console.log)}workerSubs[key].sub=false}}return true};let terminate=()=>{for(const key in workerSubs){if(typeof workerSubs[key].sub==="number"){run("unpipeWorkers",[workerSubs[key].route,workerSubs[key].portId,workerSubs[key].sub])}workerSubs[key].sub=false}return this.terminate(options2._id)};if(!options2.onmessage)options2.onmessage=ev=>{this.receive(ev.data);this.setState({[options2._id]:ev.data})};if(!options2.onerror){options2.onerror=ev=>{console.error(ev.data)}}worker.onmessage=options2.onmessage;worker.onerror=options2.onerror;this.workers[options2._id]={worker,send,post,run,request,subscribe,unsubscribe,terminate,start,stop,postMessage:worker.postMessage,workerSubs,graph:this,...options2};return this.workers[options2._id]};this.toObjectURL=scriptTemplate=>{let blob=new Blob([scriptTemplate],{type:"text/javascript"});return URL.createObjectURL(blob)};this.transmit=(message,worker,transfer)=>{if(!transfer){transfer=this.getTransferable(message)}if(worker instanceof import_web_worker.default||worker instanceof MessagePort){worker.postMessage(message,transfer)}else if(typeof worker==="string"){if(this.workers[worker]){if(this.workers[worker].port)this.workers[worker].port.postMessage(message,transfer);else if(this.workers[worker].worker)this.workers[worker].worker.postMessage(message,transfer)}}else{let keys=Object.keys(this.workers);this.workers[keys[this.threadRot]].worker.postMessage(message,transfer);this.threadRot++;if(this.threadRot===keys.length)this.threadRot=0}return message};this.terminate=worker=>{let onclose;if(typeof worker==="string"){let obj=this.workers[worker];if(obj){delete this.workers[worker];worker=obj.worker;if(obj.onclose)onclose=obj.onclose}}else if(typeof worker==="object"){if(worker?._id){worker=worker.worker;delete this.workers[worker?._id]}}if(worker instanceof import_web_worker.default){worker.terminate();if(onclose)onclose(worker);return true}if(worker instanceof MessagePort){worker.close();if(onclose)onclose(worker);return true}return false};this.establishMessageChannel=(worker,worker2)=>{let workerId;if(typeof worker==="string"){workerId=worker;if(this.workers[worker]){if(this.workers[worker].port)worker=this.workers[worker].port;else worker2=this.workers[worker].worker}}else if(worker?.worker){worker=worker.worker}if(typeof worker2==="string"){if(this.workers[worker2]){if(this.workers[worker2].port)worker2=this.workers[worker2].port;else worker2=this.workers[worker2].worker}}else if(worker2?.worker){worker2=worker2.worker}if(worker instanceof import_web_worker.default||worker instanceof MessagePort){let channel=new MessageChannel;let portId=`port${Math.floor(Math.random()*1e15)}`;worker.postMessage({route:"addWorker",args:{port:channel.port1,_id:portId}},[channel.port1]);if(worker2 instanceof import_web_worker.default||worker2 instanceof MessagePort){worker2.postMessage({route:"addWorker",args:{port:channel.port2,_id:portId}},[channel.port2])}else if(workerId&&this.workers[workerId]){channel.port2.onmessage=this.workers[workerId].onmessage;this.workers[workerId].port=channel.port2}return portId}return false};this.request=(message,workerId,transfer,method)=>{let worker=this.workers[workerId].worker;return new Promise((res,rej)=>{let callbackId=Math.random();let req={route:"runRequest",args:[message,callbackId]};if(method)req.method=method;let onmessage=ev=>{if(typeof ev.data==="object"){if(ev.data.callbackId===callbackId){worker.removeEventListener("message",onmessage);res(ev.data.args)}}};worker.addEventListener("message",onmessage);this.transmit(req,worker,transfer)})};this.runRequest=(message,worker,callbackId)=>{let res=this.receive(message);if(typeof worker==="string"&&this.workers[worker]){if(this.workers[worker].port)worker=this.workers[worker].port;else worker=this.workers[worker].worker}if(res instanceof Promise){res.then(r=>{if(worker instanceof import_web_worker.default||worker instanceof MessagePort)worker.postMessage({args:r,callbackId});else if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope)globalThis.postMessage({args:r,callbackId})})}else{if(worker instanceof import_web_worker.default||worker instanceof MessagePort)worker.postMessage({args:res,callbackId});else if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope)globalThis.postMessage({args:res,callbackId})}return res};this.subscribeWorker=(route,worker,args,key,subInput,blocking)=>{let callback;if(blocking){let blocked=false;callback=res=>{if(!blocked){blocked=true;if(res instanceof Promise){res.then(r=>{if(worker?.run)worker.run("triggerSubscription",[route,worker._id,r]).then(ret=>{blocked=false})})}else{if(worker?.run)worker.run("triggerSubscription",[route,worker._id,res]).then(ret=>{blocked=false})}}}}else{callback=res=>{if(res instanceof Promise){res.then(r=>{if(worker?.postMessage)worker.postMessage({args:r,callbackId:route});else if(globalThis.postMessage)globalThis.postMessage({args:r,callbackId:route})})}else{if(worker?.postMessage)worker.postMessage({args:res,callbackId:route});else if(globalThis.postMessage)globalThis.postMessage({args:res,callbackId:route})}}}if(!blocking&&worker?.port){worker=worker.port}else if(!blocking&&worker?.worker){worker=worker.worker}else if(typeof worker==="string"&&this.workers[worker]){if(blocking)worker=this.workers[worker];else if(this.workers[worker].port)worker=this.workers[worker].port;else worker=this.workers[worker].worker}return this.subscribe(route,callback,args,key,subInput)};this.subscribeToWorker=(route,workerId,callback,args,key,subInput,blocking)=>{if(typeof workerId==="string"&&this.workers[workerId]){this.__node.state.subscribeEvent(workerId,res=>{if(res?.callbackId===route){if(!callback)this.setState({[workerId]:res.args});else if(typeof callback==="string"){this.run(callback,res.args)}else callback(res.args)}});return this.workers[workerId].run("subscribeWorker",[route,workerId,args,key,subInput,blocking])}};this.triggerSubscription=async(route,workerId,result)=>{if(this.__node.state.triggers[workerId])for(let i=0;i<this.__node.state.triggers[workerId].length;i++){await this.__node.state.triggers[workerId][i].onchange({args:result,callbackId:route})}return true};this.pipeWorkers=(sourceWorker,listenerWorker,sourceRoute,listenerRoute,portId,args,key,subInput,blocking)=>{if(typeof sourceWorker==="string")sourceWorker=this.workers[sourceWorker];if(typeof listenerWorker==="string")listenerWorker=this.workers[listenerWorker];if(!portId){portId=this.establishMessageChannel(sourceWorker.worker,listenerWorker.worker)}return listenerWorker.run("subscribeToWorker",[sourceRoute,portId,listenerRoute,args,key,subInput,blocking])};this.unpipeWorkers=(sourceRoute,sourceWorker,sub)=>{if(typeof sourceWorker==="string")sourceWorker=this.workers[sourceWorker];if(typeof sourceWorker==="object"){return sourceWorker.run("unsubscribe",[sourceRoute,sub])}};this.connections={workers:this.workers};if(options?.services)this.addServices(options.services);this.load(this);this.setLoaders(this.workerloader);if(options)this.init(options);if(typeof WorkerGlobalScope!=="undefined"&&globalThis instanceof WorkerGlobalScope){this.addDefaultMessageListener()}}getTransferable(message){let transfer;if(typeof message==="object"){if(message.args){if(message.args?.constructor?.name==="Object"){for(const key in message.args){if(ArrayBuffer.isView(message.args[key])){if(!transfer)transfer=[message.args[key].buffer];else transfer.push(message.args[key].buffer)}else if(message.args[key]?.constructor?.name==="ArrayBuffer"){if(!transfer)transfer=[message.args[key]];else transfer.push(message.args[key])}}}else if(Array.isArray(message.args)&&message.args.length<11){message.args.forEach(arg=>{if(ArrayBuffer.isView(arg)){transfer=[arg.buffer]}else if(arg?.constructor?.name==="ArrayBuffer")transfer=[arg]})}else if(ArrayBuffer.isView(message.args)){transfer=[message.args.buffer]}else if(message.args?.constructor?.name==="ArrayBuffer"){transfer=[message]}}else if(message?.constructor?.name==="Object"){for(const key in message){if(ArrayBuffer.isView(message[key])){if(!transfer)transfer=[message[key].buffer];else transfer.push(message[key].buffer)}else if(message[key]?.constructor?.name==="ArrayBuffer"){if(!transfer)transfer=[message[key]];else transfer.push(message[key])}}}else if(Array.isArray(message)&&message.length<11){message.forEach(arg=>{if(ArrayBuffer.isView(arg)){transfer=[arg.buffer]}else if(arg.constructor?.name==="ArrayBuffer")transfer=[arg]})}else if(ArrayBuffer.isView(message)){transfer=[message.buffer]}else if(message.constructor?.name==="ArrayBuffer"){transfer=[message]}}return transfer}transferFunction(worker,fn,fnName){if(!fnName)fnName=fn.name;return worker.request({route:"setRoute",args:[fn.toString(),fnName]})}transferClass(worker,cls,className){if(!className)className=cls.name;return worker.request({route:"receiveClass",args:[cls.toString(),className]})}receiveNode(properties){if(properties.__methods){if(!this.__node.graph.loaders.methodstrings){this.__node.graph.__node.loaders.methodstrings=methodstrings}}let node=this.__node.graph.add(properties);return node.__node.tag}transferNode(properties,worker,name){if(!properties.__node){properties.__node={}}properties.__node.tag=name;for(const key in properties){if(typeof properties[key]==="function"){if(!properties.__methods)properties.__methods={};properties.__methods[key]=properties[key].toString()}}if(worker.run)return worker.run("receiveNode",[recursivelyStringifyFunctions(properties)]);else if(worker.postMessage){worker.postMessage({route:"receiveNode",args:recursivelyStringifyFunctions(properties)},void 0);return new Promise(r=>r(name))}}};var mouseEventHandler=makeSendPropertiesHandler(["ctrlKey","metaKey","shiftKey","button","pointerType","clientX","clientY","pageX","pageY"]);var wheelEventHandlerImpl=makeSendPropertiesHandler(["deltaX","deltaY"]);var keydownEventHandler=makeSendPropertiesHandler(["ctrlKey","metaKey","shiftKey","keyCode"]);function wheelEventHandler(event,sendFn){event.preventDefault();wheelEventHandlerImpl(event,sendFn)}function preventDefaultHandler(event){event.preventDefault()}function copyProperties(src,properties,dst){for(const name of properties){dst[name]=src[name]}}function makeSendPropertiesHandler(properties){return function sendProperties(event,sendFn){const data={type:event.type};copyProperties(event,properties,data);sendFn(data)}}function touchEventHandler(event,sendFn){const touches=[];const data={type:event.type,touches};for(let i=0;i<event.touches.length;++i){const touch=event.touches[i];touches.push({pageX:touch.pageX,pageY:touch.pageY})}sendFn(data)}var orbitKeys={"37":true,"38":true,"39":true,"40":true};function filteredKeydownEventHandler(event,sendFn){const{keyCode}=event;if(orbitKeys[keyCode]){event.preventDefault();keydownEventHandler(event,sendFn)}}var eventHandlers={contextmenu:preventDefaultHandler,mousedown:mouseEventHandler,mousemove:mouseEventHandler,mouseup:mouseEventHandler,pointerdown:mouseEventHandler,pointermove:mouseEventHandler,pointerup:mouseEventHandler,touchstart:touchEventHandler,touchmove:touchEventHandler,touchend:touchEventHandler,wheel:wheelEventHandler,keydown:filteredKeydownEventHandler};function initProxyElement(element,worker,id){if(!id)id="proxy"+Math.floor(Math.random()*1e15);const sendEvent=data=>{if(!worker){handleProxyEvent(data,id)}else worker.postMessage({route:"handleProxyEvent",args:[data,id]})};let entries=Object.entries(eventHandlers);for(const[eventName,handler]of entries){element.addEventListener(eventName,function(event){handler(event,sendEvent)})}const sendSize=()=>{const rect=element.getBoundingClientRect();sendEvent({type:"resize",left:rect.left,top:rect.top,width:element.clientWidth,height:element.clientHeight})};sendSize();globalThis.addEventListener("resize",sendSize);return id}var EventDispatcher=class{addEventListener(type,listener){if(this.__listeners===void 0)this.__listeners={};const listeners=this.__listeners;if(listeners[type]===void 0){listeners[type]=[]}if(listeners[type].indexOf(listener)===-1){listeners[type].push(listener)}}hasEventListener(type,listener){if(this.__listeners===void 0)return false;const listeners=this.__listeners;return listeners[type]!==void 0&&listeners[type].indexOf(listener)!==-1}removeEventListener(type,listener){if(this.__listeners===void 0)return;const listeners=this.__listeners;const listenerArray=listeners[type];if(listenerArray!==void 0){const index=listenerArray.indexOf(listener);if(index!==-1){listenerArray.splice(index,1)}}}dispatchEvent(event,target){if(this.__listeners===void 0)return;const listeners=this.__listeners;const listenerArray=listeners[event.type];if(listenerArray!==void 0){if(!target)event.target=this;else event.target=target;const array=listenerArray.slice(0);for(let i=0,l=array.length;i<l;i++){array[i].call(this,event)}event.target=null}}};function noop(){}var ElementProxyReceiver=class extends EventDispatcher{constructor(){super();this.__listeners={};this.style={};this.setPointerCapture=()=>{};this.releasePointerCapture=()=>{};this.getBoundingClientRect=()=>{return{left:this.left,top:this.top,width:this.width,height:this.height,right:this.left+this.width,bottom:this.top+this.height}};this.handleEvent=data=>{if(data.type==="resize"){this.left=data.left;this.top=data.top;this.width=data.width;this.height=data.height;if(typeof this.proxied==="object"){this.proxied.style.width=this.width+"px";this.proxied.style.height=this.height+"px";this.proxied.clientWidth=this.width;this.proxied.clientHeight=this.height}}data.preventDefault=noop;data.stopPropagation=noop;this.dispatchEvent(data,this.proxied)};this.style={}}get clientWidth(){return this.width}get clientHeight(){return this.height}focus(){}};var ProxyManager=class{constructor(){this.targets={};this.makeProxy=(id,addTo=void 0)=>{if(!id)id=`proxyReceiver${Math.floor(Math.random()*1e15)}`;let proxy;if(this.targets[id])proxy=this.targets[id];else{proxy=new ElementProxyReceiver;this.targets[id]=proxy}if(typeof addTo==="object"){addTo.proxy=proxy;proxy.proxied=addTo;if(typeof WorkerGlobalScope!=="undefined")addTo.style=proxy.style;if(proxy.width){addTo.style.width=proxy.width+"px";addTo.clientWidth=proxy.width}if(proxy.height){addTo.style.height=proxy.height+"px";addTo.clientHeight=proxy.height}addTo.setPointerCapture=proxy.setPointerCapture.bind(proxy);addTo.releasePointerCapture=proxy.releasePointerCapture.bind(proxy);addTo.getBoundingClientRect=proxy.getBoundingClientRect.bind(proxy);addTo.addEventListener=proxy.addEventListener.bind(proxy);addTo.removeEventListener=proxy.removeEventListener.bind(proxy);addTo.handleEvent=proxy.handleEvent.bind(proxy);addTo.dispatchEvent=proxy.dispatchEvent.bind(proxy);addTo.focus=proxy.focus.bind(proxy)}};this.getProxy=id=>{return this.targets[id]};this.handleEvent=(data,id)=>{if(!this.targets[id])this.makeProxy(id);if(this.targets[id]){this.targets[id].handleEvent(data);return true}return void 0};if(!globalThis.document)globalThis.document={}}};function makeProxy(id,elm){if(this?.__node?.graph){if(!this.__node.graph.ProxyManager)this.__node.graph.ProxyManager=new ProxyManager;this.__node.graph.ProxyManager.makeProxy(id,elm)}else{if(!globalThis.ProxyManager)globalThis.ProxyManager=new ProxyManager;globalThis.ProxyManager.makeProxy(id,elm)}return id}function handleProxyEvent(data,id){if(this?.__node?.graph){if(!this.__node.graph.ProxyManager)this.__node.graph.ProxyManager=new ProxyManager;if(this.__node.graph.ProxyManager.handleEvent(data,id))return data}else{if(!globalThis.ProxyManager)globalThis.ProxyManager=new ProxyManager;if(globalThis.ProxyManager.handleEvent(data,id))return data}}var proxyElementWorkerRoutes={initProxyElement,makeProxy,handleProxyEvent};function Renderer(options){if(options.worker){let worker=options.worker;let route=options.route;if(worker instanceof Blob||typeof worker==="string"){worker=new Worker(worker)}delete options.worker;delete options.route;return transferCanvas(worker,options,route)}else{initProxyElement(options.canvas,void 0,options._id);return setupCanvas(options)}}function transferCanvas(worker,options,route){if(!options)return void 0;if(!options._id)options._id=`canvas${Math.floor(Math.random()*1e15)}`;let offscreen=options.canvas.transferControlToOffscreen();if(!options.width)options.width=options.canvas.clientWidth;if(!options.height)options.height=options.canvas.clientHeight;let message={route:route?route:"setupCanvas",args:{...options,canvas:offscreen}};if(this?.__node?.graph)this.__node.graph.run("initProxyElement",options.canvas,worker,options._id);else initProxyElement(options.canvas,worker,options._id);if(options.draw){if(typeof options.draw==="function")message.args.draw=options.draw.toString();else message.args.draw=options.draw}if(options.update){if(typeof options.update==="function")message.args.update=options.update.toString();else message.args.update=options.update}if(options.init){if(typeof options.init==="function")message.args.init=options.init.toString();else message.args.init=options.init}if(options.clear){if(typeof options.clear==="function")message.args.clear=options.clear.toString();else message.args.clear=options.clear}let transfer=[offscreen];if(options.transfer){transfer.push(...options.transfer);delete options.transfer}worker.postMessage(message,transfer);const canvascontrols={_id:options._id,width:options.width,height:options.height,worker,draw:props=>{worker.postMessage({route:"drawFrame",args:[props,options._id]})},update:props=>{worker.postMessage({route:"updateCanvas",args:[props,options._id]})},clear:()=>{worker.postMessage({route:"clearCanvas",args:options._id})},init:()=>{worker.postMessage({route:"initCanvas",args:options._id})},stop:()=>{worker.postMessage({route:"stopAnim",args:options._id})},start:()=>{worker.postMessage({route:"startAnim",args:options._id})},set:newDrawProps=>{worker.postMessage({route:"setDraw",args:[newDrawProps,options._id]})},terminate:()=>{worker.terminate()}};return canvascontrols}function setDraw(settings,_id){let canvasopts;if(this?.__node?.graph){if(_id)canvasopts=this.__node.graph.CANVASES?.[settings._id];else if(settings._id)canvasopts=this.__node.graph.CANVASES?.[settings._id];else canvasopts=this.__node.graph.CANVASES?.[Object.keys(this.__node.graph.CANVASES)[0]]}else{if(_id)canvasopts=globalThis.CANVASES?.[settings._id];else if(settings._id)canvasopts=globalThis.CANVASES?.[settings._id];else canvasopts=globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]]}if(canvasopts){if(settings.canvas){canvasopts.canvas=settings.canvas;if(this?.__node?.graph)this.__node.graph.run("makeProxy",canvasopts._id,canvasopts.canvas);else proxyElementWorkerRoutes.makeProxy(canvasopts._id,canvasopts.canvas)}if(typeof settings.context==="string")canvasopts.context=canvasopts.canvas.getContext(settings.context);else if(settings.context)canvasopts.context=settings.context;if(settings.width)canvasopts.canvas.width=settings.width;if(settings.height)canvasopts.canvas.height=settings.height;if(typeof settings.draw==="string")settings.draw=parseFunctionFromText3(settings.draw);if(typeof settings.draw==="function"){canvasopts.draw=settings.draw}if(typeof settings.update==="string")settings.update=parseFunctionFromText3(settings.update);if(typeof settings.update==="function"){canvasopts.update=settings.update}if(typeof settings.init==="string")settings.init=parseFunctionFromText3(settings.init);if(typeof settings.init==="function"){canvasopts.init=settings.init}if(typeof settings.clear==="string")settings.clear=parseFunctionFromText3(settings.clear);if(typeof settings.clear==="function"){canvasopts.clear=settings.clear}return settings._id}return void 0}function setupCanvas(options){if(this?.__node?.graph){if(!this.__node.graph.CANVASES)this.__node.graph.CANVASES={}}else if(!globalThis.CANVASES)globalThis.CANVASES={};let canvasOptions=options;options._id?canvasOptions._id=options._id:canvasOptions._id=`canvas${Math.floor(Math.random()*1e15)}`;typeof options.context==="string"?canvasOptions.context=options.canvas.getContext(options.context):canvasOptions.context=options.context;"animating"in options?canvasOptions.animating=options.animating:canvasOptions.animating=true;if(this?.__node?.graph?.CANVASES[canvasOptions._id]){this.__node.graph.run("setDraw",canvasOptions)}else if(globalThis.CANVASES?.[canvasOptions._id]){setDraw(canvasOptions)}else{if(this?.__node?.graph)canvasOptions.graph=this.__node.graph;if(this?.__node?.graph)this.__node.graph.CANVASES[canvasOptions._id]=canvasOptions;else globalThis.CANVASES[canvasOptions._id]=canvasOptions;if(this?.__node?.graph)this.__node.graph.run("makeProxy",canvasOptions._id,canvasOptions.canvas);else proxyElementWorkerRoutes.makeProxy(canvasOptions._id,canvasOptions.canvas);if(options.width)canvasOptions.canvas.width=options.width;if(options.height)canvasOptions.canvas.height=options.height;if(typeof canvasOptions.draw==="string"){canvasOptions.draw=parseFunctionFromText3(canvasOptions.draw)}else if(typeof canvasOptions.draw==="function"){canvasOptions.draw=canvasOptions.draw}if(typeof canvasOptions.update==="string"){canvasOptions.update=parseFunctionFromText3(canvasOptions.update)}else if(typeof canvasOptions.update==="function"){canvasOptions.update=canvasOptions.update}if(typeof canvasOptions.init==="string"){canvasOptions.init=parseFunctionFromText3(canvasOptions.init)}else if(typeof canvasOptions.init==="function"){canvasOptions.init=canvasOptions.init}if(typeof canvasOptions.clear==="string"){canvasOptions.clear=parseFunctionFromText3(canvasOptions.clear)}else if(typeof canvasOptions.clear==="function"){canvasOptions.clear=canvasOptions.clear}if(typeof canvasOptions.init==="function")canvasOptions.init(canvasOptions,canvasOptions.canvas,canvasOptions.context);canvasOptions.stop=()=>{stopAnim(canvasOptions._id)};canvasOptions.start=draw=>{startAnim(canvasOptions._id,draw)};canvasOptions.set=settings=>{setDraw(settings,canvasOptions._id)};if(typeof canvasOptions.draw==="function"&&canvasOptions.animating){let draw=(s,canvas,context)=>{if(s.animating){s.draw(s,canvas,context);requestAnimationFrame(()=>{draw(s,canvas,context)})}};draw(canvasOptions,canvasOptions.canvas,canvasOptions.context)}}if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope)return canvasOptions._id;else{const canvascontrols={_id:options._id,width:options.width,height:options.height,draw:props=>{drawFrame(props,options._id)},update:props=>{updateCanvas(props,options._id)},clear:()=>{clearCanvas(options._id)},init:()=>{initCanvas(options._id)},stop:()=>{stopAnim(options._id)},start:()=>{startAnim(options._id)},set:newDrawProps=>{setDraw(newDrawProps,options._id)},terminate:()=>{stopAnim(options._id)}};return canvascontrols}}function drawFrame(props,_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts){if(props)Object.assign(canvasopts,props);if(canvasopts.draw){canvasopts.draw(canvasopts,canvasopts.canvas,canvasopts.context);return _id}}return void 0}function clearCanvas(_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts?.clear){canvasopts.clear(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function initCanvas(_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts?.init){canvasopts.init(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function updateCanvas(input,_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts?.update){canvasopts.update(canvasopts,canvasopts.canvas,canvasopts.context,input);return _id}return void 0}function setProps(props,_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts){Object.assign(canvasopts,props);if(props.width)canvasopts.canvas.width=props.width;if(props.height)canvasopts.canvas.height=props.height;return _id}return void 0}function startAnim(_id,draw){let canvasopts=getCanvas.call(this,_id);canvasopts.animating=true;if(canvasopts&&draw){if(typeof draw==="string")draw=parseFunctionFromText3(draw);if(typeof draw==="function"){canvasopts.draw=draw}return _id}if(typeof canvasopts?.draw==="function"){let draw2=(s,canvas,context)=>{if(s.animating){s.draw(s,canvas,context);requestAnimationFrame(()=>{draw2(s,canvas,context)})}};if(typeof canvasopts.clear==="function")canvasopts.clear(canvasopts,canvasopts.canvas,canvasopts.context);if(typeof canvasopts.init==="function")canvasopts.init(canvasopts,canvasopts.canvas,canvasopts.context);draw2(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function stopAnim(_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts){canvasopts.animating=false;if(typeof canvasopts.clear==="function")canvasopts.clear(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function getCanvas(_id){let canvasopts;if(this?.__node?.graph){if(!_id)canvasopts=this.__node.graph.CANVASES?.[Object.keys(this.__node.graph.CANVASES)[0]];else canvasopts=this.__node.graph.CANVASES?.[_id]}else{if(!_id)canvasopts=globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]];else canvasopts=globalThis.CANVASES?.[_id]}return canvasopts}var workerCanvasRoutes={...proxyElementWorkerRoutes,Renderer,transferCanvas,setupCanvas,setDraw,drawFrame,clearCanvas,initCanvas,updateCanvas,setProps,startAnim,stopAnim};function parseFunctionFromText3(method=""){let getFunctionBody=methodString=>{return methodString.replace(/^\\W*(function[^{]+\\{([\\s\\S]*)\\}|[^=]+=>[^{]*\\{([\\s\\S]*)\\}|[^=]+=>(.+))/i,"$2$3$4")};let getFunctionHead=methodString=>{let startindex=methodString.indexOf("=>")+1;if(startindex<=0){startindex=methodString.indexOf("){")}if(startindex<=0){startindex=methodString.indexOf(") {")}return methodString.slice(0,methodString.indexOf("{",startindex)+1)};let newFuncHead=getFunctionHead(method);let newFuncBody=getFunctionBody(method);let newFunc;if(newFuncHead.includes("function")){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody)}else{if(newFuncHead.substring(0,6)===newFuncBody.substring(0,6)){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody.substring(newFuncBody.indexOf("{")+1,newFuncBody.length-1))}else{try{newFunc=(0,eval)(newFuncHead+newFuncBody+"}")}catch{}}}return newFunc}var algorithms={};var loadAlgorithms=settings=>{return Object.assign(algorithms,settings)};function createSubprocess(options,inputs){let ctx={_id:options._id?options._id:`algorithm${Math.floor(Math.random()*1e15)}`,ondata:options.ondata,run:data=>{return ctx.ondata(ctx,data)}};if(options.structs)recursivelyAssign3(ctx,JSON.parse(JSON.stringify(options.structs)));if(inputs)recursivelyAssign3(ctx,JSON.parse(JSON.stringify(inputs)));if(options.oncreate){ctx.oncreate=options.oncreate}if(ctx.oncreate){ctx.oncreate(ctx)}return ctx}var recursivelyAssign3=(target,obj)=>{for(const key in obj){if(typeof obj[key]==="object"&&!Array.isArray(obj[key])){if(typeof target[key]==="object"&&!Array.isArray(target[key]))recursivelyAssign3(target[key],obj[key]);else target[key]=recursivelyAssign3({},obj[key])}else target[key]=obj[key]}return target};var subprocessRoutes={...unsafeRoutes,loadAlgorithms,"initSubprocesses":async function initSubprocesses(subprocesses,service){if(!service)service=this.__node.graph;if(!service)return void 0;for(const p in subprocesses){let s=subprocesses[p];if(!s.worker&&s.url)s.worker=service.addWorker({url:s.url});if(!s.worker)continue;let w=s.worker;let wpId;wpId=service.establishMessageChannel(w.worker,s.source?.worker);if(!s.source)s.source=service;if(typeof s.subprocess==="object"){const p2=s.subprocess;if(!p2.name)continue;if(typeof p2.oncreate==="function"){p2.oncreate=p2.oncreate.toString()}if(typeof p2.ondata==="function"){p2.ondata=p2.ondata.toString()}s.worker.post("addSubprocessTemplate",[p2.name,p2.structs,p2.oncreate,p2.ondata,p2.props]);s.subprocess=p2.name}if(s.init){let r=await w.run(s.init,s.initArgs);s.otherArgs=r}if(s.otherArgs){w.run("setValue",["otherArgsProxy",Array.isArray(s.otherArgs)?s.otherArgs:[s.otherArgs]])}if(s.pipeTo){w.run("setValue",["routeProxy",s.route]);w.run("setValue",["pipeRoute",s.pipeTo.route]);if(s.url&&!s.pipeTo.worker){let w2=service.addWorker({url:s.url});s.pipeTo.portId=service.establishMessageChannel(w.worker,w2.worker);s.pipeTo.worker=w2}if(s.pipeTo.init){s.pipeTo.otherArgs=await s.pipeTo.worker.run(s.pipeTo.init,s.pipeTo.initArgs)}w.run("setValue",["pipePort",s.pipeTo.portId]);if(s.pipeTo.otherArgs)w.run("setValue",["otherPipeArgs",s.pipeTo.otherArgs]);service.transferFunction(w,function pipeResults(data){let inp=data;if(this.__node.graph.otherArgsProxy)inp=[data,...this.__node.graph.otherArgsProxy];let r=this.__node.graph.run(this.__node.graph.routeProxy,inp);if(!s.blocking)return new Promise(res=>{if(r instanceof Promise){r.then(rr=>{if(rr!==void 0){let args=rr;if(this.__node.graph.otherPipeArgs)args=[rr,...this.__node.graph.otherPipeArgs];if(this.workers[this.__node.graph.pipePort]){s.blocking=true;this.workers[this.__node.graph.pipePort].run(this.__node.graph.pipeRoute,args).then(result=>{s.blocking=false;res(result)})}}})}else if(r!==void 0){let args=r;if(this.__node.graph.otherPipeArgs)args=[r,...this.__node.graph.otherPipeArgs];if(this.workers[this.__node.graph.pipePort]){s.blocking=true;this.workers[this.__node.graph.pipePort].run(this.__node.graph.pipeRoute,args).then(result=>{s.blocking=false;res(result)})}}});return void 0},s.route+"_pipeResults");s.route=s.route+"_pipeResults"}else{w.run("setValue",["routeProxy",s.route]);service.transferFunction(w,function routeProxy(data){let r;if(this.__node.graph.otherArgsProxy)r=this.__node.graph.nodes.get(this.__node.graph.routeProxy).__operator(data,...this.__node.graph.otherArgsProxy);else r=this.__node.graph.nodes.get(this.__node.graph.routeProxy).__operator(data);if(this.__node.graph.state.triggers[this.__node.graph.routeProxy]){if(r instanceof Promise){r.then(rr=>{this.setState({[this.__node.graph.routeProxy]:rr})})}else this.setState({[this.__node.graph.routeProxy]:r})}return r},s.route+"_routeProxy");s.route=s.route+"_routeProxy";if(!s.stopped)w.run("subscribeToWorker",[s.subscribeRoute,wpId,s.route]).then(sub=>{s.sub=sub})}s.stop=async()=>{if(s.source&&typeof s.sub==="number"){s.source.unsubscribe(s.subscribeRoute,s.sub);return true}return void 0};s.start=async()=>{if(typeof s.sub!=="number")return w.run("subscribeToWorker",[s.subscribeRoute,wpId,s.route,s.blocking]).then(sub=>{s.sub=sub})};s.setArgs=async args=>{if(Array.isArray(args))await w.run("setValue",["otherArgsProxy",args]);else if(typeof args==="object"){for(const key in args){await w.run("setValue",[key,args[key]])}}return true};s.terminate=()=>{w.terminate();if(s.source?.worker&&typeof s.sub==="number"){s.source.post("unsubscribe",s.sub)}if(s.pipeTo?.worker){s.pipeTo.worker.terminate()}};if(s.callback)w.subscribe(s.route,res=>{if(typeof s.callback==="string")this.__node.graph.run(s.callback,res);else s.callback(res)})}return subprocesses},"addSubprocessTemplate":function subprocesstempalte(name,structs,oncreate,ondata,props){if(typeof oncreate==="string")oncreate=parseFunctionFromText(oncreate);if(typeof ondata==="string")ondata=parseFunctionFromText(ondata);if(typeof ondata==="function"){algorithms[name]={ondata,oncreate:typeof oncreate==="function"?oncreate:null,structs};if(typeof props==="object")Object.assign(algorithms[name],props);return true}},"updateSubprocess":function updatesubprocess(structs,_id){if(!this.__node.graph.ALGORITHMS)this.__node.graph.ALGORITHMS={};if(!_id)_id=Object.keys(this.__node.graph.ALGORITHMS)[0];if(!_id)return;Object.assign(this.__node.graph.ALGORITHMS[_id],structs)},"createSubprocess":function creatsubprocess(options,inputs){if(!this.__node.graph.ALGORITHMS)this.__node.graph.ALGORITHMS={};if(typeof options==="string"){options=algorithms[options]}if(typeof options==="object"){if(typeof options.ondata==="string")options.ondata=parseFunctionFromText(options.ondata);let ctx;if(typeof options?.ondata==="function")ctx=createSubprocess(options,inputs);if(ctx)this.__node.graph.ALGORITHMS[ctx._id]=ctx;if(ctx)return ctx._id}return false},"runSubprocess":function runsubprocess(data,_id){if(!this.__node.graph.ALGORITHMS)this.__node.graph.ALGORITHMS={};if(!_id)_id=Object.keys(this.__node.graph.ALGORITHMS)[0];if(!_id)return;let res=this.__node.graph.ALGORITHMS[_id].run(data);if(res!==void 0){if(Array.isArray(res)){let pass=[];res.forEach(r=>{if(r!==void 0){pass.push(r);this.__node.graph.setState({[_id]:r})}});if(pass.length>0){return pass}}else{this.__node.graph.setState({[_id]:res});return res}}}};var _ArrayManip=class{constructor(){this.recursivelyAssign=(target,obj)=>{for(const key in obj){if(typeof obj[key]==="object"){if(typeof target[key]==="object")this.recursivelyAssign(target[key],obj[key]);else target[key]=this.recursivelyAssign({},obj[key])}else target[key]=obj[key]}return target}}static autoscale(array,lineIdx=0,nLines=1,centerZero=false,ymin,ymax,clamp){if(array?.length===0)return array;let max=ymax?ymax:Math.max(...array);let min=ymin?ymin:Math.min(...array);let _lines=1/nLines;let scalar=1;if(centerZero){let absmax=Math.max(Math.abs(min),Math.abs(max));if(absmax!==0)scalar=_lines/absmax;return array.map(y2=>{if(clamp){if(y2<min)y2=min;if(y2>max)y2=max}return y2*scalar+(_lines*(lineIdx+1)*2-1-_lines)})}else{if(max===min){if(max!==0){scalar=_lines/max}else if(min!==0){scalar=_lines/Math.abs(min)}}else scalar=_lines/(max-min);return array.map(y2=>{if(clamp){if(y2<min)y2=min;if(y2>max)y2=max}return 2*((y2-min)*scalar-1/(2*nLines))+(_lines*(lineIdx+1)*2-1-_lines)})}}static genTimestamps(ct,sps9){let now=Date.now();let toInterp=[now-ct*1e3/sps9,now];return _ArrayManip.upsample(toInterp,ct)}static absmax(array){return Math.max(Math.abs(Math.min(...array)),Math.max(...array))}static downsample(array,fitCount,scalar=1){if(array.length>fitCount){let output=new Array(fitCount);let incr=array.length/fitCount;let lastIdx=array.length-1;let last=0;let counter=0;for(let i=incr;i<array.length;i+=incr){let rounded=Math.round(i);if(rounded>lastIdx)rounded=lastIdx;for(let j=last;j<rounded;j++){output[counter]+=array[j]}output[counter]/=(rounded-last)*scalar;counter++;last=rounded}return output}else return array}static upsample(array,fitCount,scalar=1){var linearInterpolate=function(before2,after2,atPoint2){return(before2+(after2-before2)*atPoint2)*scalar};var newData=new Array(fitCount);var springFactor=(array.length-1)/(fitCount-1);newData[0]=array[0];for(var i=1;i<fitCount-1;i++){var tmp=i*springFactor;var before=Math.floor(tmp);var after=Math.ceil(tmp);var atPoint=tmp-before;newData[i]=linearInterpolate(array[before],array[after],atPoint)}newData[fitCount-1]=array[array.length-1];return newData}static interpolate(array,fitCount,scalar=1){if(array.length>fitCount){return _ArrayManip.downsample(array,fitCount,scalar)}else if(array.length<fitCount){return _ArrayManip.upsample(array,fitCount,scalar)}return array}static HSLToRGB(h,s,l,scalar=255){s/=100;l/=100;let c=(1-Math.abs(2*l-1))*s,x=c*(1-Math.abs(h/60%2-1)),m=l-c/2,r=0,g=0,b=0;if(0<=h&&h<60){r=c;g=x;b=0}else if(60<=h&&h<120){r=x;g=c;b=0}else if(120<=h&&h<180){r=0;g=c;b=x}else if(180<=h&&h<240){r=0;g=x;b=c}else if(240<=h&&h<300){r=x;g=0;b=c}else if(300<=h&&h<360){r=c;g=0;b=x}r=(r+m)*scalar;g=(g+m)*scalar;b=(b+m)*scalar;return[r,g,b]}static circularBuffer(arr,newEntries){if(newEntries.length<arr.length){let slice=arr.slice(newEntries.length);let len=arr.length;arr.splice(0,len,...slice,...newEntries)}else if(newEntries.length>arr.length){let len=arr.length;arr.splice(0,len,newEntries.slice(len-newEntries.length))}else{arr.splice(0,arr.length,...newEntries)}return arr}static reformatData(data,key){if(Array.isArray(data)){if(Array.isArray(data[0])){let d={};data.forEach((arr,i)=>{d[i]=arr});data=d;if(isNaN(data[0][0]))return void 0}else if(key){data={[key]:data};if(isNaN(data[key][0]))return void 0}else{data={0:data};if(isNaN(data[0][0]))return void 0}}else if(typeof data==="object"){for(const key2 in data){if(typeof data[key2]==="number")data[key2]=[data[key2]];else if(data[key2]?.values){if(typeof data[key2].values==="number")data[key2].values=[data[key2].values]}if(isNaN(data[key2][0]))return void 0}}else if(typeof data==="string"){let split;if(data.includes("\\r\\n")){let lines=data.split("\\r\\n");data={};lines.forEach((l,j)=>{if(l.includes("	")){split=l.split("	")}else if(l.includes(",")){split=l.split(",")}else if(l.includes("|")){split=l.split("|")}if(Array.isArray(split)){split.forEach((val,i)=>{if(val.includes(":")){let[key2,v]=val.split(":");let fl=parseFloat(v);if(fl)data[key2]=[fl];else return void 0}else{let fl=parseFloat(val);if(fl)data[i]=[fl];else return void 0}})}})}else if(data.includes("	")){split=data.split("	")}else if(data.includes(",")){split=data.split(",")}else if(data.includes("|")){split=data.split("|")}data={};if(Array.isArray(split)){split.forEach((val,i)=>{if(val.includes(":")){let[key2,v]=val.split(":");let fl=parseFloat(v);if(fl)data[key2]=[fl];else return void 0}else{let fl=parseFloat(val);if(fl)data[i]=[fl];else return void 0}})}}else if(typeof data==="number"){if(key)data={[key]:[data]};else data={0:[data]}}return data}static padTime(data,lastValue,time,targetFit){let slopeIncr=(data[0]-lastValue)/time/targetFit;let padded=[...new Array(targetFit-data.length).map((_,i)=>lastValue+slopeIncr*(i+1)),...data];return padded}static interpolateForTime(data,time,targetSPS){return _ArrayManip.interpolate(data,Math.ceil(targetSPS*time))}isTypedArray(x){return ArrayBuffer.isView(x)&&Object.prototype.toString.call(x)!=="[object DataView]"}spliceTypedArray(arr,start,end){let s=arr.subarray(0,start);let e;if(end){e=arr.subarray(end+1)}let n;if(s.length>0||e?.length>0)n=new arr.constructor(s.length+e.length);if(s.length>0)n.set(s);if(e&&e.length>0)n.set(e,s.length);return n}};var ArrayManip=_ArrayManip;ArrayManip.bufferValues=(objects,property,keys,buffer)=>{if(!Array.isArray(keys)&&typeof keys==="object")keys=Object.keys(keys);if(!buffer){let object_keys=Object.keys(objects);if(keys)buffer=new Float32Array(object_keys.length*keys.length);else{if(typeof objects[object_keys[0]][property]==="object"){keys=Object.keys(objects[object_keys[0]][property]);buffer=new Float32Array(object_keys.length*keys.length)}else buffer=new Float32Array(object_keys.length)}}let i=0;for(const key in objects){if(objects[key][property]){if(keys){for(let j=0;j<keys.length;j++){buffer[i]=objects[key][property][keys[j]];i++}}else{buffer[i]=objects[key][property];i++}}}return buffer};var rechk=/^([<>])?(([1-9]\\d*)?([xcbB?hHiIfdsp]))*$/;var refmt=/([1-9]\\d*)?([xcbB?hHiIfdsp])/g;var str=(v,o,c)=>String.fromCharCode(...new Uint8Array(v.buffer,v.byteOffset+o,c));var rts=(v,o,c,s)=>new Uint8Array(v.buffer,v.byteOffset+o,c).set(s.split("").map(str2=>str2.charCodeAt(0)));var pst=(v,o,c)=>str(v,o+1,Math.min(v.getUint8(o),c-1));var tsp=(v,o,c,s)=>{v.setUint8(o,s.length);rts(v,o+1,c-1,s)};var lut=le=>({x:c=>[1,c,0],c:c=>[c,1,o=>({u:v=>str(v,o,1),p:(v,c2)=>rts(v,o,1,c2)})],"?":c=>[c,1,o=>({u:v=>Boolean(v.getUint8(o)),p:(v,B2)=>v.setUint8(o,B2)})],b:c=>[c,1,o=>({u:v=>v.getInt8(o),p:(v,b)=>v.setInt8(o,b)})],B:c=>[c,1,o=>({u:v=>v.getUint8(o),p:(v,B2)=>v.setUint8(o,B2)})],h:c=>[c,2,o=>({u:v=>v.getInt16(o,le),p:(v,h)=>v.setInt16(o,h,le)})],H:c=>[c,2,o=>({u:v=>v.getUint16(o,le),p:(v,H2)=>v.setUint16(o,H2,le)})],i:c=>[c,4,o=>({u:v=>v.getInt32(o,le),p:(v,i)=>v.setInt32(o,i,le)})],I:c=>[c,4,o=>({u:v=>v.getUint32(o,le),p:(v,I)=>v.setUint32(o,I,le)})],f:c=>[c,4,o=>({u:v=>v.getFloat32(o,le),p:(v,f)=>v.setFloat32(o,f,le)})],d:c=>[c,8,o=>({u:v=>v.getFloat64(o,le),p:(v,d)=>v.setFloat64(o,d,le)})],s:c=>[1,c,o=>({u:v=>str(v,o,c),p:(v,s)=>rts(v,o,c,s.slice(0,c))})],p:c=>[1,c,o=>({u:v=>pst(v,o,c),p:(v,s)=>tsp(v,o,c,s.slice(0,c-1))})]});var errbuf=new RangeError("Structure larger than remaining buffer");var errval=new RangeError("Not enough values for structure");var _ByteParser=class extends ArrayManip{static toDataView(value){if(!(value instanceof DataView)){if(typeof value==="string"&&parseInt(value))value=parseInt(value);if(typeof value==="string"){let enc=new TextEncoder;let hascodes={};for(const code in _ByteParser.codes){while(value.indexOf(code)>-1){let idx=value.indexOf(code);value=value.replace(code,"");hascodes[idx]=code}}let encoded=Array.from(enc.encode(value));for(const key in hascodes){encoded.splice(parseInt(key),0,_ByteParser.codes[hascodes[key]])}value=new DataView(new Uint8Array(encoded).buffer)}else if(typeof value==="number"){let tmp=value;if(value<256){value=new DataView(new ArrayBuffer(1));value.setUint8(0,tmp)}else if(value<65536){value=new DataView(new ArrayBuffer(2));value.setInt16(0,tmp)}else{value=new DataView(new ArrayBuffer(4));value.setUint32(0,tmp)}}else if(value instanceof ArrayBuffer||typeof SharedArrayBuffer!=="undefined"&&value instanceof SharedArrayBuffer){value=new DataView(value)}else if(Array.isArray(value)){value=new DataView(Uint8Array.from(value).buffer)}else if(typeof value==="object"){value=new TextEncoder().encode(JSON.stringify(value))}}return value}static searchBuffer(buffer,searchString,limit){var needle=searchString;var haystack=buffer;var search=_ByteParser.boyerMoore(needle);var skip=search.byteLength;var indices=[];for(var i=search(haystack);i!==-1;i=search(haystack,i+skip)){indices.push(i);if(limit){if(indices.length>=limit)break}}return indices}static bytesToInt16(x0,x1){let int16=(255&x0)<<8|255&x1;if((int16&32768)>0){int16|=4294901760}else{int16&=65535}return int16}static bytesToUInt16(x0,x1){return x0*256+x1}static Uint16ToBytes(y2){return[y2&255,y2>>8&255]}static bytesToInt24(x0,x1,x2){let int24=(255&x0)<<16|(255&x1)<<8|255&x2;if((int24&8388608)>0){int24|=4278190080}else{int24&=16777215}return int24}static bytesToUInt24(x0,x1,x2){return x0*65536+x1*256+x2}static Uint24ToBytes(y2){return[y2&255,y2>>8&255,y2>>16&255]}static bytesToInt32(x0,x1,x2,x3){let int32=(255&x0)<<24|(255&x1)<<16|(255&x2)<<8|255&x3;if((int32&2147483648)>0){int32|=0}else{int32&=4294967295}return int32}static bytesToUInt32(x0,x1,x2,x3){return x0*16777216+x1*65536+x2*256+x3}static Uint32ToBytes(y2){return[y2&255,y2>>8&255,y2>>16&255,y2>>24&255]}static get2sCompliment(val,nbits3){if(val>4294967296)return null;return val<<32-nbits3>>32-nbits3}static getSignedInt(...args){let pos=0;function getInt(size){var value=0;var first=true;while(size--){if(first){let byte=args[pos++];value+=byte&127;if(byte&128){value-=128}first=false}else{value*=256;value+=args[pos++]}}return value}return getInt(args.length)}static asUint8Array(input){if(input instanceof Uint8Array){return input}else if(typeof input==="string"){var arr=new Uint8Array(input.length);for(var i=0;i<input.length;i++){var c=input.charCodeAt(i);if(c>127){throw new TypeError("Only ASCII patterns are supported")}arr[i]=c}return arr}else{return new Uint8Array(input)}}static boyerMoore(patternBuffer){var pattern=_ByteParser.asUint8Array(patternBuffer);var M=pattern.length;if(M===0){throw new TypeError("patternBuffer must be at least 1 byte long")}var R=256;var rightmost_positions=new Int32Array(R);for(var c=0;c<R;c++){rightmost_positions[c]=-1}for(var j=0;j<M;j++){rightmost_positions[pattern[j]]=j}var boyerMooreSearch=(txtBuffer,start,end)=>{var txt=_ByteParser.asUint8Array(txtBuffer);if(start===void 0)start=0;if(end===void 0)end=txt.length;var pat=pattern;var right=rightmost_positions;var lastIndex=end-pat.length;var lastPatIndex=pat.length-1;var skip;for(var i=start;i<=lastIndex;i+=skip){skip=0;for(var j2=lastPatIndex;j2>=0;j2--){var c2=txt[i+j2];if(pat[j2]!==c2){skip=Math.max(1,j2-right[c2]);break}}if(skip===0){return i}}return-1};boyerMooreSearch.byteLength=pattern.byteLength;return boyerMooreSearch}static struct(format){let fns=[],size=0,m=rechk.exec(format);if(!m){throw new RangeError("Invalid format string")}const t2=lut("<"===m[1]),lu=(n,c)=>t2[c](n?parseInt(n,10):1);while(m=refmt.exec(format)){((r,s,f)=>{for(let i=0;i<r;++i,size+=s){if(f){fns.push(f(size))}}})(...lu(...m.slice(1)))}const unpack_from=(arrb,offs)=>{if(arrb.byteLength<(offs|0)+size){throw errbuf}let v=new DataView(arrb,offs|0);return fns.map(f=>f.u(v))};const pack_into=(arrb,offs,...values)=>{if(values.length<fns.length){throw errval}if(arrb.byteLength<offs+size){throw errbuf}const v=new DataView(arrb,offs);new Uint8Array(arrb,offs,size).fill(0);fns.forEach((f,i)=>f.p(v,values[i]))};const pack=(...values)=>{let b=new ArrayBuffer(size);pack_into(b,0,...values);return b};const unpack=arrb=>unpack_from(arrb,0);function*iter_unpack(arrb){for(let offs=0;offs+size<=arrb.byteLength;offs+=size){yield unpack_from(arrb,offs)}}return Object.freeze({unpack,pack,unpack_from,pack_into,iter_unpack,format,size})}};var ByteParser=_ByteParser;ByteParser.codes={"\\\\n":10,"\\\\r":13,"\\\\t":9,"\\\\s":32,"\\\\b":8,"\\\\f":12,"\\\\":92};var WebSerial=class extends ByteParser{constructor(){super(...arguments);this.streams={};this.createStream=options=>{let stream={_id:options._id?options._id:`stream${Math.floor(Math.random()*1e15)}`,info:options.port.getInfo(),running:false,...options};if(options.port?.readable){if(options.transforms){stream.reader=WebSerial.setStreamTransforms(options.port.readable,options.transforms).getReader()}else{stream.reader=options.port.readable.getReader()}}this.streams[stream._id]=stream;return stream}}getPorts(){return navigator.serial.getPorts()}requestPort(usbVendorId,usbProductId){let options={};if(usbVendorId){options.usbVendorId=usbVendorId}if(usbProductId){options.usbProductId=usbProductId}if(options.usbVendorId)return navigator.serial.requestPort({filters:[options]});else return navigator.serial.requestPort()}openPort(port,options){if(options)options=Object.assign({},options);if(options?.ondisconnect){port.ondisconnect=options.ondisconnect;delete options.ondisconnect}return port.open(options).then(()=>{if(options?.onconnect)options.onconnect(port)})}async readWithTimeout(port,timeout){const reader=port.readable.getReader();const timer=setTimeout(()=>{reader.releaseLock()},timeout);const result=await reader.read();clearTimeout(timer);reader.releaseLock();return result}async writePort(port,message){const writer=port.writable.getWriter();await writer.write(WebSerial.toDataView(message));writer.releaseLock();return true}getSignals(port){return port.getSignals()}setSignals(port,signals){return port.setSignals(signals)}readStream(stream){if(stream.reader&&!stream.running){let reader=stream.reader;if(stream.buffering){if(typeof stream.buffering!=="object")stream.buffering={};if(!stream.buffering.buffer){stream.buffering.buffer=[]}if(!stream.buffering.searchBytes)stream.buffering.searchBytes=new Uint8Array([13,10])}let readLoop=()=>{if(stream.port.readable&&stream.running){reader.read().then(result=>{if(result.done)reader.releaseLock();else{if(stream.buffering){stream.buffering.buffer.push(...result.value);const needle=stream.buffering.searchBytes;const haystack=stream.buffering.buffer;const search=WebSerial.boyerMoore(needle);const skip=search.byteLength;let nextIndex=-1;let used=stream.buffering.lockIdx??0;for(var i=search(haystack);i!==-1;i=search(haystack,i+skip)){if(!stream.buffering.locked&&!("lockIdx"in stream.buffering))used=stream.buffering.lockIdx=i;else{nextIndex=i;if(nextIndex>=0){const len=nextIndex-used;if(!stream.buffering.locked){const line=stream.buffering.buffer.splice(stream.buffering.lockIdx,len);const data=new Uint8Array(line.slice(stream.buffering.searchBytes.length));stream.ondata(data);stream.buffering.locked=true}else if(len>0){const line=stream.buffering.buffer.splice(stream.buffering.lockIdx,len);const data=new Uint8Array(line.slice(stream.buffering.searchBytes.length));stream.ondata(new Uint8Array(data))}used=nextIndex}}}}else stream.ondata(result.value);setTimeout(()=>{readLoop()},stream.frequency)}}).catch(er=>{console.error(stream._id," Read error:",er);if(er.message.includes("overrun")||er.message.includes("framing")){delete stream.reader;this.reconnect(stream)}})}else if(!stream.running&&stream.port.readable){try{reader.releaseLock()}catch(er){console.error(er)}}};stream.running=true;readLoop();return stream}return void 0}writeStream(stream,message){if(typeof stream==="string")stream=this.streams[stream];if(stream.port.writable){let writer=stream.port.writable.getWriter();writer.write(WebSerial.toDataView(message));writer.releaseLock();return true}return void 0}closeStream(stream,onclose){if(typeof stream==="string")stream=this.streams[stream];stream.running=false;return new Promise((res,rej)=>{if(stream.settings.beforedisconnect){stream.settings.beforedisconnect(this,stream.port)}setTimeout(async()=>{if(stream.port.readable&&stream.reader){try{stream.reader.releaseLock()}catch(er){console.error(er)}if(stream.transforms)try{await stream.reader.cancel()}catch(err){console.error(err)}}try{await stream.port.close().then(()=>{if(onclose)onclose(this.streams[stream._id])});delete this.streams[stream._id];res(true)}catch(er){rej(er)}},300)})}reconnect(stream,options){if(typeof stream==="string")stream=this.streams[stream];return new Promise((res,rej)=>{if(typeof stream!=="object"){rej(void 0);return}let info=stream.port.getInfo();this.closeStream(stream._id).then(closed=>{setTimeout(()=>{this.getPorts().then(ports=>{for(let i=0;i<ports.length;i++){if(ports[i].getInfo().usbVendorId===info.usbVendorId&&ports[i].getInfo().usbProductId===info.usbProductId){if(!options)options=stream;else options._id=stream._id;delete options.port;this.openPort(ports[i],options.settings).then(()=>{const stream2=this.createStream({...options,port:ports[i]});this.readStream(stream2);res(stream2)}).catch(rej)}}}).catch(rej)},100)})})}static setStreamTransforms(stream,transforms){let transform=[];Object.keys(transforms).forEach(t2=>{let opt=transforms[t2];if(opt instanceof TransformStream){transform.push(opt)}else{if(!opt.start)opt.start=function start(){};if(!opt.flush)opt.flush=function flush(){};let transformer=new TransformStream({start:opt.start,transform:opt.transform,flush:opt.flush},opt.writableStrategy,opt.readableStrategy);transform.push(transformer)}});let str2=stream;transform.forEach(transform2=>{str2=str2.pipeThrough(transform2)});return str2}};function ads131m08codec(data){let arr;if(data.getInt8)arr=new Uint8Array(data.buffer);else if(!data.buffer)arr=new Uint8Array(data);else arr=data;let output={0:new Array(9),1:new Array(9),2:new Array(9),3:new Array(9),4:new Array(9),5:new Array(9),6:new Array(9),7:new Array(9),timestamp:Date.now()};for(let i=0;i<9;i++){let j=i*25;output[0][i]=ByteParser.bytesToInt24(arr[j],arr[j+1],arr[j+2]);output[1][i]=ByteParser.bytesToInt24(arr[j+3],arr[j+4],arr[j+5]);output[2][i]=ByteParser.bytesToInt24(arr[j+6],arr[j+7],arr[j+8]);output[3][i]=ByteParser.bytesToInt24(arr[j+9],arr[j+10],arr[j+11]);output[4][i]=ByteParser.bytesToInt24(arr[j+12],arr[j+13],arr[j+14]);output[5][i]=ByteParser.bytesToInt24(arr[j+15],arr[j+16],arr[j+17]);output[6][i]=ByteParser.bytesToInt24(arr[j+18],arr[j+19],arr[j+20]);output[7][i]=ByteParser.bytesToInt24(arr[j+21],arr[j+22],arr[j+23])}return output}var decoder=new TextDecoder;function ads131m08_arduinocodec(data){const parsed=decoder.decode(data);let split;if(parsed.includes("|"))split=parsed.split("|");else if(split.includes(","))split=parsed.split(",");else split=parsed.split("	");return{"0":parseInt(split[0]),"1":parseInt(split[1]),"2":parseInt(split[2]),"3":parseInt(split[3]),"4":parseInt(split[4]),"5":parseInt(split[5]),"6":parseInt(split[6]),"7":parseInt(split[7]),timestamp:Date.now()}}var sps=250;var defaultChartSetting={nSec:10,sps,units:"mV"};var ads131m08ChartSettings={lines:{"0":JSON.parse(JSON.stringify(defaultChartSetting)),"1":JSON.parse(JSON.stringify(defaultChartSetting)),"2":JSON.parse(JSON.stringify(defaultChartSetting)),"3":JSON.parse(JSON.stringify(defaultChartSetting)),"4":JSON.parse(JSON.stringify(defaultChartSetting)),"5":JSON.parse(JSON.stringify(defaultChartSetting)),"6":JSON.parse(JSON.stringify(defaultChartSetting)),"7":JSON.parse(JSON.stringify(defaultChartSetting))}};var gain=32;var nbits=24;var vref=1.2;var defaultsetting={sps,useDCBlock:false,useBandpass:false,bandpassLower:3,bandpassUpper:45,useScaling:true,scalar:.96*1e3*vref/(gain*(Math.pow(2,nbits)-1))};var ads131m08FilterSettings={"0":JSON.parse(JSON.stringify(defaultsetting)),"1":JSON.parse(JSON.stringify(defaultsetting)),"2":JSON.parse(JSON.stringify(defaultsetting)),"3":JSON.parse(JSON.stringify(defaultsetting)),"4":JSON.parse(JSON.stringify(defaultsetting)),"5":JSON.parse(JSON.stringify(defaultsetting)),"6":JSON.parse(JSON.stringify(defaultsetting)),"7":JSON.parse(JSON.stringify(defaultsetting))};var accScale=.002/Math.pow(2,4);var getAcc=(arr,output,channels=8)=>{const accIdx=channels*3+1;const sum=(a,b)=>a+b;const accSum=arr.slice(accIdx).reduce(sum,0);if(accSum!==0){output.ax=accScale*ByteParser.bytesToInt16(arr[accIdx],arr[accIdx+1]);output.ay=accScale*ByteParser.bytesToInt16(arr[accIdx+2],arr[accIdx+3]);output.az=accScale*ByteParser.bytesToInt16(arr[accIdx+4],arr[accIdx+5])}};function cytoncodec(data){let arr;if(!data.buffer)arr=new Uint8Array(data);else arr=data;let output={};for(let i=0;i<8;i++){let idx=1+3*i;output[i]=ByteParser.bytesToInt24(arr[idx],arr[idx+1],arr[idx+2])}getAcc(arr,output);output.timestamp=Date.now();return output}function daisycytoncodec(data){let arr;if(data.getInt8)arr=new Uint8Array(data.buffer);else if(!data.buffer)arr=new Uint8Array(data);else arr=data;let output={};for(let i=0;i<8;i++){let idx=1+3*i;if(arr[0]%2===0)output[i+7]=ByteParser.bytesToInt24(arr[idx],arr[idx+1],arr[idx+2]);else output[i]=ByteParser.bytesToInt24(arr[idx],arr[idx+1],arr[idx+2])}getAcc(arr,output);return output}var sps2=250;var cytonSerialSettings={baudRate:115200,codec:cytoncodec,write:"b",beforedisconnect:(client,port)=>{client.writePort(port,"s")},buffering:{searchBytes:new Uint8Array([192,160])},sps:sps2};var daisycytonSerialSettings={baudRate:115200,codec:daisycytoncodec,write:"b",beforedisconnect:(client,port)=>{client.writePort(port,"s")},buffering:{searchBytes:new Uint8Array([192,160])},sps:sps2};var defaultChartSetting2={nSec:10,sps:sps2,units:"mV"};var defaultChartSetting22={nSec:10,sps:sps2};var cytonChartSettings={lines:{"0":JSON.parse(JSON.stringify(defaultChartSetting2)),"1":JSON.parse(JSON.stringify(defaultChartSetting2)),"2":JSON.parse(JSON.stringify(defaultChartSetting2)),"3":JSON.parse(JSON.stringify(defaultChartSetting2)),"4":JSON.parse(JSON.stringify(defaultChartSetting2)),"5":JSON.parse(JSON.stringify(defaultChartSetting2)),"6":JSON.parse(JSON.stringify(defaultChartSetting2)),"7":JSON.parse(JSON.stringify(defaultChartSetting2)),"ax":JSON.parse(JSON.stringify(defaultChartSetting22)),"ay":JSON.parse(JSON.stringify(defaultChartSetting22)),"az":JSON.parse(JSON.stringify(defaultChartSetting22))},generateNewLines:true};var defaultsetting2={sps:sps2,useDCBlock:true,useBandpass:true,bandpassLower:3,bandpassUpper:45,useScaling:true,scalar:1e3*4.5/(24*(Math.pow(2,23)-1))};var cytonFilterSettings={"0":JSON.parse(JSON.stringify(defaultsetting2)),"1":JSON.parse(JSON.stringify(defaultsetting2)),"2":JSON.parse(JSON.stringify(defaultsetting2)),"3":JSON.parse(JSON.stringify(defaultsetting2)),"4":JSON.parse(JSON.stringify(defaultsetting2)),"5":JSON.parse(JSON.stringify(defaultsetting2)),"6":JSON.parse(JSON.stringify(defaultsetting2)),"7":JSON.parse(JSON.stringify(defaultsetting2)),"8":JSON.parse(JSON.stringify(defaultsetting2)),"9":JSON.parse(JSON.stringify(defaultsetting2)),"10":JSON.parse(JSON.stringify(defaultsetting2)),"11":JSON.parse(JSON.stringify(defaultsetting2)),"12":JSON.parse(JSON.stringify(defaultsetting2)),"13":JSON.parse(JSON.stringify(defaultsetting2)),"14":JSON.parse(JSON.stringify(defaultsetting2)),"15":JSON.parse(JSON.stringify(defaultsetting2))};function freeeeg128codec(data){let arr;if(data.getInt8)arr=new Uint8Array(data.buffer);else if(!data.buffer)arr=new Uint8Array(data);else arr=data;let output={};for(let i=0;i<128;i++){let idx=i*3+1;output[i]=ByteParser.bytesToInt24(arr[idx],arr[idx+1],arr[idx+2])}let accIdx=385;output["ax"]=ByteParser.bytesToInt16(arr[accIdx],arr[accIdx+1]);output["ay"]=ByteParser.bytesToInt16(arr[accIdx+2],arr[accIdx+3]);output["az"]=ByteParser.bytesToInt16(arr[accIdx+4],arr[accIdx+5]);output["gx"]=ByteParser.bytesToInt16(arr[accIdx+6],arr[accIdx+7]);output["gy"]=ByteParser.bytesToInt16(arr[accIdx+8],arr[accIdx+9]);output["gz"]=ByteParser.bytesToInt16(arr[accIdx+10],arr[accIdx+11]);output.timestamp=Date.now();return output}var sps3=250;var freeeeg128SerialSettings={baudRate:921600,bufferSize:2e3,frequency:1.9,codec:freeeeg128codec,sps:sps3,buffering:{searchBytes:new Uint8Array([192,160])}};var freeeeg128ChartSettings={lines:{"ax":{nSec:10,sps:sps3},"ay":{nSec:10,sps:sps3},"az":{nSec:10,sps:sps3},"gx":{nSec:10,sps:sps3},"gy":{nSec:10,sps:sps3},"gz":{nSec:10,sps:sps3}}};var freeeeg128FilterSettings={};for(let i=0;i<128;i++){freeeeg128ChartSettings.lines[i]={sps:sps3,nSec:10,units:"mV"};freeeeg128FilterSettings[i]={sps:250,useDCBlock:true,useBandpass:true,bandpassLower:3,bandpassUpper:45,scalar:1e3*2.5/(32*(Math.pow(2,24)-1))}}function freeeeg32codec(data){let arr;if(data.getInt8)arr=new Uint8Array(data.buffer);else if(!data.buffer)arr=new Uint8Array(data);else arr=data;let output={};for(let i=0;i<32;i++){let idx=i*3+1;output[i]=ByteParser.bytesToInt24(arr[idx],arr[idx+1],arr[idx+2])}let accIdx=97;output["ax"]=ByteParser.bytesToInt16(arr[accIdx],arr[accIdx+1]);output["ay"]=ByteParser.bytesToInt16(arr[accIdx+2],arr[accIdx+3]);output["az"]=ByteParser.bytesToInt16(arr[accIdx+4],arr[accIdx+5]);output["gx"]=ByteParser.bytesToInt16(arr[accIdx+6],arr[accIdx+7]);output["gy"]=ByteParser.bytesToInt16(arr[accIdx+8],arr[accIdx+9]);output["gz"]=ByteParser.bytesToInt16(arr[accIdx+10],arr[accIdx+11]);output.timestamp=Date.now();return output}var sps4=512;var freeeeg32SerialSettings={baudRate:921600,bufferSize:2e3,frequency:1.9,codec:freeeeg32codec,sps:sps4,buffering:{searchBytes:new Uint8Array([192,160])}};var freeeeg32_optical_SerialSettings={baudRate:1e6,bufferSize:2e3,frequency:1.9,codec:freeeeg32codec,sps:sps4,buffering:{searchBytes:new Uint8Array([192,160])}};var defaultChartSetting3={nSec:10,sps:sps4};var freeeeg32ChartSettings={lines:{"ax":JSON.parse(JSON.stringify(defaultChartSetting3)),"ay":JSON.parse(JSON.stringify(defaultChartSetting3)),"az":JSON.parse(JSON.stringify(defaultChartSetting3)),"gx":JSON.parse(JSON.stringify(defaultChartSetting3)),"gy":JSON.parse(JSON.stringify(defaultChartSetting3)),"gz":JSON.parse(JSON.stringify(defaultChartSetting3))}};var freeeeg32FilterSettings={};for(let i=0;i<32;i++){freeeeg32ChartSettings.lines[i]={sps:sps4,nSec:10,units:"mV"};freeeeg32FilterSettings[i]={sps:sps4,useDCBlock:true,useBandpass:true,bandpassLower:3,bandpassUpper:45,useScaling:true,scalar:1e3*2.5/(8*(Math.pow(2,24)-1))}}var textdecoder=new TextDecoder;function hegduinocodec(value){let output={timestamp:0,red:0,infrared:0,heg:0,ambient:0,temperature:0};let txt=textdecoder.decode(value);let line=txt.split("|");if(line.length===3){output.timestamp=Date.now();output.red=parseInt(line[0]);output.infrared=parseInt(line[1]);output.heg=parseFloat(line[2])}else if(line.length>=2){output.timestamp=Date.now();output.red=parseInt(line[1]);output.infrared=parseInt(line[2]);output.heg=parseFloat(line[3]);if(line[4])output.ambient=parseFloat(line[4]);if(line[5])output.temperature=parseFloat(line[5]);return output}else return txt}var sps5=40;var hegduinoSerialSettings={baudRate:115200,write:"t\\n",codec:hegduinocodec,sps:sps5};var hegduinoV1SerialSettings=Object.assign({},hegduinoSerialSettings);hegduinoV1SerialSettings.sps=19;var hegduinoBLESettings={sps:sps5,services:{["6E400001-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]:{"6e400002-b5a3-f393-e0a9-e50e24dcca9e":{write:"t"},"6e400003-b5a3-f393-e0a9-e50e24dcca9e":{notify:true,notifyCallback:void 0,codec:hegduinocodec,sps:sps5}},["6E400004-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]:{["6E400005-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]:{read:true},["6E400006-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]:{write:void 0,notify:true,notifyCallback:void 0},["6E400007-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]:{read:true}}},androidWebBLE:"o"};var hegduinoV1BLESettings=Object.assign({},hegduinoSerialSettings);hegduinoV1BLESettings.sps=19;function max3010xcodec(data){let arr;if(data.getInt8)arr=new Uint8Array(data.buffer);else if(!data.buffer)arr=new Uint8Array(data);else arr=data;let pktCt=32;const output={"red":new Array(pktCt),"ir":new Array(pktCt),"max_dietemp":ByteParser.get2sCompliment(arr[193],8)+.0625*arr[194],"timestamp":Date.now()};let i=0;while(i<pktCt){let idx=i*6;if(i%2===0){output["ir"][i]=(arr[idx+1]<<16|arr[idx+2]<<8|arr[idx+3])&524287;output["ir"][i+1]=(arr[idx+4]<<16|arr[idx+5]<<8|arr[idx+6])&524287}else{output["red"][i-1]=(arr[idx+1]<<16|arr[idx+2]<<8|arr[idx+3])&524287;output["red"][i]=(arr[idx+4]<<16|arr[idx+5]<<8|arr[idx+6])&524287}i++}return output}function mpu6050codec(data){let arr;if(data.getInt8)arr=new Uint8Array(data.buffer);else if(!data.buffer)arr=new Uint8Array(data);else arr=data;let output={"ax":new Array(20),"ay":new Array(20),"az":new Array(20),"gx":new Array(20),"gy":new Array(20),"gz":new Array(20),"mpu_dietemp":(ByteParser.bytesToInt16(arr[241],arr[242])+521)/340+35,timestamp:Date.now()};for(let i=0;i<20;i++){let idx=i*12;output.ax[i]=ByteParser.bytesToInt16(arr[idx+1],arr[idx+2]);output.ay[i]=ByteParser.bytesToInt16(arr[idx+3],arr[idx+4]);output.az[i]=ByteParser.bytesToInt16(arr[idx+5],arr[idx+6]);output.gx[i]=ByteParser.bytesToInt16(arr[idx+7],arr[idx+8]);output.gy[i]=ByteParser.bytesToInt16(arr[idx+9],arr[idx+10]);output.gz[i]=ByteParser.bytesToInt16(arr[idx+11],arr[idx+12])}return output}function cognixionONE_EEG_codec(data){let arr;if(data.getInt8)arr=new Uint8Array(data.buffer);else if(!data.buffer)arr=new Uint8Array(data);else arr=data;let output={0:new Array,1:new Array,2:new Array,3:new Array,4:new Array,5:new Array,6:new Array,7:new Array,timestamp:Date.now()};for(let i=0;i<7;i++){let j=i*26+1;if(!arr[j+23])break;output[0][i]=ByteParser.bytesToUInt24(arr[j],arr[j+1],arr[j+2]);output[1][i]=ByteParser.bytesToUInt24(arr[j+3],arr[j+4],arr[j+5]);output[2][i]=ByteParser.bytesToUInt24(arr[j+6],arr[j+7],arr[j+8]);output[3][i]=ByteParser.bytesToUInt24(arr[j+9],arr[j+10],arr[j+11]);output[4][i]=ByteParser.bytesToUInt24(arr[j+12],arr[j+13],arr[j+14]);output[5][i]=ByteParser.bytesToUInt24(arr[j+15],arr[j+16],arr[j+17]);output[6][i]=ByteParser.bytesToUInt24(arr[j+18],arr[j+19],arr[j+20]);output[7][i]=ByteParser.bytesToUInt24(arr[j+21],arr[j+22],arr[j+23])}return output}var sps6=250;var cognixionONEBLESettings={services:{["82046698-6313-4BB1-9645-6BA28BF86DF5".toLowerCase()]:{["8204669A-6313-4BB1-9645-6BA28BF86DF5".toLowerCase()]:{notify:true,notifyCallback:void 0,codec:cognixionONE_EEG_codec,sps:sps6}},["82E12914-9AFA-4648-BD1B-8E2B3DC6DAAF".toLowerCase()]:{["82E12915-9AFA-4648-BD1B-8E2B3DC6DAAF".toLowerCase()]:{write:void 0},["82E12916-9AFA-4648-BD1B-8E2B3DC6DAAF".toLowerCase()]:{read:true}}},sps:sps6};var defaultChartSetting4={nSec:10,sps:sps6,units:"mV"};var cognixionONEChartSettings={lines:{"0":JSON.parse(JSON.stringify(defaultChartSetting4)),"1":JSON.parse(JSON.stringify(defaultChartSetting4)),"2":JSON.parse(JSON.stringify(defaultChartSetting4)),"3":JSON.parse(JSON.stringify(defaultChartSetting4)),"4":JSON.parse(JSON.stringify(defaultChartSetting4)),"5":JSON.parse(JSON.stringify(defaultChartSetting4)),"6":JSON.parse(JSON.stringify(defaultChartSetting4)),"7":JSON.parse(JSON.stringify(defaultChartSetting4))}};var PeanutCodes={2:{type:"POOR_SIGNAL",format:"<B",byteLength:1},144:{type:"heg",format:"<i",byteLength:4},145:{type:"filteredHEG",format:"<i",byteLength:4},147:{type:"rawdata4",format:"<iiii",byteLength:4*4},148:{type:"rawdata6",format:"<iiiiii",byteLength:4*6},160:{type:"sampleNumber",format:"<i",byteLength:4},176:{type:"debug0",format:"<i",byteLength:4},177:{type:"debug1",format:"<i",byteLength:4},178:{type:"debug2",format:"<i",byteLength:4},179:{type:"debug3",format:"<i",byteLength:4},180:{type:"debug4",format:"<iiiiii",byteLength:4*6},181:{type:"debug4",format:"<iiiiii",byteLength:4*6},182:{type:"rawdata27",format:"<B"+"i".repeat(26),byteLength:1+4*26}};function peanutcodec(data){let result={};let i=0;while(i<data.length){if(PeanutCodes[data[i]]&&i+1+PeanutCodes[data[i]].byteLength<=data.length){let slice=data.slice(i+1,i+1+PeanutCodes[data[i]].byteLength).buffer;let unpacked=ByteParser.struct(PeanutCodes[data[i]].format).unpack(slice);let code=PeanutCodes[data[i]].type;if(code==="unfilteredHEG"||code==="heg")unpacked=unpacked[0]/256;else if(code==="POOR_SIGNAL"||code==="sampleNumber"||code==="debug0"||code==="debug1"||code==="debug2"||code==="debug3")unpacked=unpacked[0];if(!result[PeanutCodes[data[i]].type]){if(Array.isArray(unpacked))result[PeanutCodes[data[i]].type]=unpacked;else result[PeanutCodes[data[i]].type]=[unpacked]}else{if(Array.isArray(unpacked))result[PeanutCodes[data[i]].type].push(...unpacked);else result[PeanutCodes[data[i]].type].push(unpacked)}i+=PeanutCodes[data[i]].byteLength+1}else i++}result.timestamp=Date.now();return result}var peanutSerialSettings={baudRate:38400,bufferSize:400,write:"protocol 3\\n",buffering:{searchBytes:new Uint8Array([170,170])},codec:peanutcodec,sps:10.101};var sealevel_hpa=1013.25;var bme280codec=data=>{let arr;if(data.getInt8)arr=new Uint8Array(data.buffer);else if(!data.buffer)arr=new Uint8Array(data);else arr=data;let output={timestamp:Date.now(),temp:[],pressure:[],altitude:[]};let mode=0;if(arr[0].length===74)mode=1;if(!mode){for(let j=0;j<3;j++){let i=j*16+2;let tint=ByteParser.bytesToInt32(arr[3+i],arr[2+i],arr[1+i],arr[0+i]);let tfrac=ByteParser.bytesToInt32(arr[7+i],arr[6+i],arr[5+i],arr[4+i]);output.temp.push(tint+tfrac/Math.pow(10,Math.ceil(Math.log10(tfrac))));let pint=10*ByteParser.bytesToInt32(arr[11+i],arr[10+i],arr[9+i],arr[8+i]);let pfrac=ByteParser.bytesToInt32(arr[15+i],arr[14+i],arr[13+i],arr[12+i]);output.pressure.push(pint+pfrac/Math.pow(10,Math.ceil(Math.log10(pfrac))));output.altitude.push(altitude(output.pressure[j],output.temp[j]))}}else{output.humidity=[];for(let j=0;j<3;j++){let i=j*24+2;let tint=ByteParser.bytesToInt32(arr[3+i],arr[2+i],arr[1+i],arr[0+i]);let tfrac=ByteParser.bytesToInt32(arr[7+i],arr[6+i],arr[5+i],arr[4+i]);output.temp.push(tint+tfrac/Math.pow(10,Math.ceil(Math.log10(tfrac))));let pint=10*ByteParser.bytesToInt32(arr[11+i],arr[10+i],arr[9+i],arr[8+i]);let pfrac=ByteParser.bytesToInt32(arr[15+i],arr[14+i],arr[13+i],arr[12+i]);output.pressure.push(pint+pfrac/Math.pow(10,Math.ceil(Math.log10(pfrac))));let hint=ByteParser.bytesToInt32(arr[19+i],arr[18+i],arr[17+i],arr[16+i]);let hfrac=ByteParser.bytesToInt32(arr[23+i],arr[22+i],arr[21+i],arr[20+i]);output.humidity.push(hint+hfrac/Math.pow(10,Math.ceil(Math.log10(hfrac))));output.altitude.push(altitude(output.pressure[j],output.temp[j]))}}return output};function altitude(pressure,temperature){return 44330*(1-Math.pow(pressure/sealevel_hpa,.1903))}function nrf5x_usbcodec(data){let arr;if(data.getInt8)arr=new Uint8Array(data.buffer);else if(!data.buffer)arr=new Uint8Array(data);else arr=data;const output={};if(arr[0]===2){Object.assign(output,ads131m08codec(arr.subarray(2)))}else if(arr[0]===3){let result=ads131m08codec(arr.subarray(2));Object.keys(result).forEach((key,i)=>{output[i+8]=result[key]})}else if(arr[0]===4){Object.assign(output,mpu6050codec(arr.subarray(2)))}else if(arr[0]===5){Object.assign(output,max3010xcodec(arr.subarray(2)))}else if(arr[0]===6){Object.assign(output,bme280codec(arr.subarray(2)))}else{Object.assign(output,ads131m08codec(arr))}return output}var nrf5xSerialSettings={baudRate:115200,buffering:{searchBytes:new Uint8Array([240,240])},codec:nrf5x_usbcodec,sps:250};var nrf5xBLESettings={sps:250,services:{"0000cafe-b0ba-8bad-f00d-deadbeef0000":{"0001cafe-b0ba-8bad-f00d-deadbeef0000":{write:void 0},"0002cafe-b0ba-8bad-f00d-deadbeef0000":{notify:true,notifyCallback:void 0,codec:ads131m08codec,sps:250},"0003cafe-b0ba-8bad-f00d-deadbeef0000":{notify:true,notifyCallback:void 0,codec:max3010xcodec,sps:100},"0004cafe-b0ba-8bad-f00d-deadbeef0000":{notify:true,notifyCallback:void 0,codec:mpu6050codec,sps:100},"0005cafe-b0ba-8bad-f00d-deadbeef0000":{notify:true,notifyCallback:void 0,codec:ads131m08codec,sps:250},"0006cafe-b0ba-8bad-f00d-deadbeef0000":{notify:true,notifyCallback:void 0,codec:bme280codec,sps:3.33}}}};var defaultChartSetting5={nSec:10,sps:250,units:"mV"};var nrf5x_usbChartSettings={lines:{"0":JSON.parse(JSON.stringify(defaultChartSetting5)),"1":JSON.parse(JSON.stringify(defaultChartSetting5)),"2":JSON.parse(JSON.stringify(defaultChartSetting5)),"3":JSON.parse(JSON.stringify(defaultChartSetting5)),"4":JSON.parse(JSON.stringify(defaultChartSetting5)),"5":JSON.parse(JSON.stringify(defaultChartSetting5)),"6":JSON.parse(JSON.stringify(defaultChartSetting5)),"7":JSON.parse(JSON.stringify(defaultChartSetting5))},generateNewLines:true,cleanGeneration:false};var gain2=32;var nbits2=24;var vref2=1.2;var defaultsetting3={sps:250,useDCBlock:false,useBandpass:false,bandpassLower:3,bandpassUpper:45,useScaling:true,scalar:.96*1e3*vref2/(gain2*(Math.pow(2,nbits2)-1))};var nrf5x_usbFilterSettings={"0":JSON.parse(JSON.stringify(defaultsetting3)),"1":JSON.parse(JSON.stringify(defaultsetting3)),"2":JSON.parse(JSON.stringify(defaultsetting3)),"3":JSON.parse(JSON.stringify(defaultsetting3)),"4":JSON.parse(JSON.stringify(defaultsetting3)),"5":JSON.parse(JSON.stringify(defaultsetting3)),"6":JSON.parse(JSON.stringify(defaultsetting3)),"7":JSON.parse(JSON.stringify(defaultsetting3)),"8":JSON.parse(JSON.stringify(defaultsetting3)),"9":JSON.parse(JSON.stringify(defaultsetting3)),"10":JSON.parse(JSON.stringify(defaultsetting3)),"11":JSON.parse(JSON.stringify(defaultsetting3)),"12":JSON.parse(JSON.stringify(defaultsetting3)),"13":JSON.parse(JSON.stringify(defaultsetting3)),"14":JSON.parse(JSON.stringify(defaultsetting3)),"15":JSON.parse(JSON.stringify(defaultsetting3))};var textdecoder2=new TextDecoder;function statechangercodec(value){let output={timestamp:0,left_red:0,left_infrared:0,left_heg:0,center_red:0,center_infrared:0,center_heg:0,right_red:0,right_infrared:0,right_heg:0};let txt=textdecoder2.decode(value);let line=txt.split("|");if(line.length>=5){output.timestamp=Date.now();output.left_red=parseInt(line[1]);output.left_infrared=parseInt(line[2]);output.left_heg=parseFloat(line[3]);output.center_red=parseInt(line[4]);output.center_infrared=parseInt(line[5]);output.center_heg=parseFloat(line[6]);output.right_red=parseInt(line[7]);output.right_infrared=parseInt(line[8]);output.right_heg=parseFloat(line[9]);return output}else return txt}var statechangerSerialSettings={baudRate:115200,codec:statechangercodec};var statechangerBLESettings={services:{["6E400001-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]:{"6e400002-b5a3-f393-e0a9-e50e24dcca9e":{write:"t"},"6e400003-b5a3-f393-e0a9-e50e24dcca9e":{notify:true,notifyCallback:void 0,codec:statechangercodec}},["6E400004-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]:{["6E400005-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]:{read:true},["6E400006-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]:{write:void 0,notify:true,notifyCallback:void 0},["6E400007-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]:{read:true}}},androidWebBLE:"o"};function blueberrycodec(value){let output={red:value.getInt32(2),ir:value.getInt32(6),ir2:value.getInt32(10),timestamp:Date.now()};output.heg=output.red/(.5*(output.ir+output.ir2));return output}var sps7=40;var blueberryBLESettings={namePrefix:"blueberry",services:{"0f0e0d0c-0b0a-0908-0706-050403020100":{"1f1e1d1c-1b1a-1918-1716-151413121110":{write:void 0},"3f3e3d3c-3b3a-3938-3736-353433323130":{notify:true,notifyCallback:void 0,codec:blueberrycodec,sps:sps7}}},sps:sps7};function blueberryshortcodec(value){let output={sred:value.getInt32(2),sir:value.getInt32(6),sir2:value.getInt32(10),timestamp:Date.now()};output.sheg=output.sred/(.5*(output.sir+output.sir2));return output}function blueberrylongcodec(value){let output={red:value.getInt32(2),ir:value.getInt32(6),ir2:value.getInt32(10),timestamp:Date.now()};output.heg=output.sred/(.5*(output.ir+output.ir2));return output}var sps8=40;var blueberry2BLESettings={namePrefix:"blueberry",services:{"0f0e0d0c-0b0a-0908-0706-050403020100":{"1f1e1d1c-1b1a-1918-1716-151413121110":{write:void 0},"4f4e4d4c-4b6a-6968-6766-656463426160":{notify:true,notifyCallback:void 0,codec:blueberrylongcodec,sps:sps8},"4f4e4d4c-4b5a-5958-5756-555453425150":{notify:true,notifyCallback:void 0,codec:blueberryshortcodec,sps:sps8}}},sps:sps8};var defaultsetting1={sps:250,useDCBlock:true,useBandpass:true,bandpassLower:3,bandpassUpper:45};var ganglionFilterSettings={"0":JSON.parse(JSON.stringify(defaultsetting1)),"1":JSON.parse(JSON.stringify(defaultsetting1)),"2":JSON.parse(JSON.stringify(defaultsetting1)),"3":JSON.parse(JSON.stringify(defaultsetting1))};var defaultChartSetting6={nSec:10,sps:250,units:"mV"};var ganglionChartSettings={lines:{"0":JSON.parse(JSON.stringify(defaultChartSetting6)),"1":JSON.parse(JSON.stringify(defaultChartSetting6)),"2":JSON.parse(JSON.stringify(defaultChartSetting6)),"3":JSON.parse(JSON.stringify(defaultChartSetting6)),"ax":{nSec:10,sps:250,units:"mg"},"ay":{nSec:10,sps:250,units:"mg"},"az":{nSec:10,sps:250,units:"mg"}},generateNewLines:true};var defaultsetting4={sps:250,useDCBlock:true,useBandpass:true,bandpassLower:3,bandpassUpper:45};var museFilterSettings={"0":JSON.parse(JSON.stringify(defaultsetting4)),"1":JSON.parse(JSON.stringify(defaultsetting4)),"2":JSON.parse(JSON.stringify(defaultsetting4)),"3":JSON.parse(JSON.stringify(defaultsetting4)),"4":JSON.parse(JSON.stringify(defaultsetting4))};function hrcodec(data){return{hr:data.getInt8(1),timestamp:Date.now()}}var heartRateBLESettings={services:{"heart_rate":{"heart_rate_measurement":{notify:true,notifyCallback:void 0,codec:hrcodec}}}};var simulatorSettings={sps:250,simulate:{"0":{sps:250,freq:1,amplitude:1,offset:0},"1":{sps:250,freq:10,amplitude:1,offset:0},"2":{sps:250,freq:100,amplitude:.5,offset:.5},"3":{sps:250,freq:25,amplitude:1,offset:0}},connect:(settings={})=>{return new Promise(async(res,rej)=>{let _id=`simulated${Math.floor(Math.random()*1e15)}`;let info={_id,settings:Object.assign(Object.assign({},simulatorSettings),settings)};info.settings.looping=true;let loopTime=50;let lastTime=Date.now();let loop2=()=>{if(info.settings.looping){let newData={};let now=Date.now();let frame=now-lastTime;for(const key in info.settings.simulate){let newPoints=Math.floor(info.settings.simulate[key].sps*frame/1e3);newData[key]=new Array(newPoints).fill(0);newData[key]=newData[key].map((v,i)=>{return Math.sin(2*Math.PI*info.settings.simulate[key].freq*.001*(lastTime+frame*(i+1)/newPoints))*info.settings.simulate[key].amplitude+info.settings.simulate[key].offset})}lastTime=now;newData.timestamp=lastTime;info.settings.ondata(newData);setTimeout(()=>{loop2()},loopTime)}};loop2();if(info.settings.onconnect)info.settings.onconnect(info);res(info)})},codec:reading=>{return reading},disconnect:info=>{console.log(info);info.settings.looping=false;info.settings.ondisconnect(info)},onconnect:info=>{console.log("simulator connected!",info)},ondisconnect:info=>{console.log("simulator disconnected!",info)},ondata:data=>{}};var Devices={BLE:{"nrf5x":nrf5xBLESettings,"hegduino":hegduinoBLESettings,"hegduinoV1":hegduinoV1BLESettings,"cognixionONE":cognixionONEBLESettings,"statechanger":statechangerBLESettings,"blueberry":blueberryBLESettings,"blueberry2":blueberry2BLESettings,"heart_rate":heartRateBLESettings},USB:{"nrf5x":nrf5xSerialSettings,"freeEEG32":freeeeg32SerialSettings,"freeEEG32_optical":freeeeg32_optical_SerialSettings,"freeEEG128":freeeeg128SerialSettings,"hegduino":hegduinoSerialSettings,"hegduinoV1":hegduinoV1SerialSettings,"cyton":cytonSerialSettings,"cyton_daisy":daisycytonSerialSettings,"peanut":peanutSerialSettings,"statechanger":statechangerSerialSettings,"cognixionONE":cytonSerialSettings},BLE_OTHER:{},USB_OTHER:{},OTHER:{"simulator":simulatorSettings}};var textdecoder3=new TextDecoder;var decoders={"raw":data=>{if(data?.buffer)return Array.from(new Uint8Array(data));else return data},"utf8":data=>{return textdecoder3.decode(data)},"console-f12":data=>{if(data?.buffer)data=Array.from(new Uint8Array(data));console.log(data);return data},"debug":(data,debugmessage)=>{if(data?.buffer)data=Array.from(new Uint8Array(data));console.log(debugmessage,data);return data},"ads131m08":ads131m08codec,"arduino_ads131m08":ads131m08_arduinocodec,"max3010x":max3010xcodec,"mpu6050":mpu6050codec,"bme280":bme280codec,"freeeeg32":freeeeg32codec,"freeeeg128":freeeeg128codec,"cyton":cytoncodec,"cognixionONE_BLE":cognixionONE_EEG_codec,"hegduino":hegduinocodec,"nrf5x":nrf5x_usbcodec,"peanut":peanutcodec,"statechanger":statechangercodec,"blueberry":blueberrycodec,"heart_rate":hrcodec};var BiquadChannelFilterer=class{constructor(options={sps:512,useSMA4:false,useNotch50:true,useNotch60:true,useLowpass:false,lowpassHz:100,useBandpass:false,bandpassLower:3,bandpassUpper:45,useDCBlock:true,DCBresonance:.995,trimOutliers:false,outlierTolerance:.2,useScaling:false,scalar:1}){this.idx=0;this.sps=options.sps;this.bandpassLower=options.bandpassLower?options.bandpassLower:3;this.bandpassUpper=options.bandpassUpper?options.bandpassUpper:45;this.useSMA4=options.useSMA4;this.last4=[];this.useNotch50=options.useNotch50;this.useNotch60=options.useNotch60;this.useLowpass=options.useLowpass;this.lowpassHz=options.lowpassHz?options.lowpassHz:100;this.useBandpass=options.useBandpass;this.useDCBlock=options.useDCBlock;this.DCBresonance=options.DCBresonance?options.DCBresonance:.995;this.useScaling=options.useScaling;this.scalar=options.scalar;this.trimOutliers=options.trimOutliers;this.outlierTolerance=options.outlierTolerance;let sps9=this.sps;this.notch50=[makeNotchFilter(50,sps9,2),makeNotchFilter(100,sps9,2)];this.notch60=[makeNotchFilter(60,sps9,2),makeNotchFilter(120,sps9,2)];this.lp1=[new Biquad("lowpass",this.lowpassHz,sps9),new Biquad("lowpass",this.lowpassHz,sps9),new Biquad("lowpass",this.lowpassHz,sps9),new Biquad("lowpass",this.lowpassHz,sps9)];this.bp1=[makeBandpassFilter(this.bandpassLower,this.bandpassUpper,sps9,1),makeBandpassFilter(this.bandpassLower,this.bandpassUpper,sps9,1),makeBandpassFilter(this.bandpassLower,this.bandpassUpper,sps9,1),makeBandpassFilter(this.bandpassLower,this.bandpassUpper,sps9,1)];this.dcb=new DCBlocker(options.DCBresonance?options.DCBresonance:.995)}reset(sps9=this.sps){this.notch50=[makeNotchFilter(50,sps9,2),makeNotchFilter(100,sps9,2)];this.notch60=[makeNotchFilter(60,sps9,2),makeNotchFilter(120,sps9,2)];this.lp1=[new Biquad("lowpass",this.lowpassHz,sps9),new Biquad("lowpass",this.lowpassHz,sps9),new Biquad("lowpass",this.lowpassHz,sps9),new Biquad("lowpass",this.lowpassHz,sps9)];this.bp1=[makeBandpassFilter(this.bandpassLower,this.bandpassUpper,sps9,1),makeBandpassFilter(this.bandpassLower,this.bandpassUpper,sps9,1),makeBandpassFilter(this.bandpassLower,this.bandpassUpper,sps9,1),makeBandpassFilter(this.bandpassLower,this.bandpassUpper,sps9,1)];this.dcb=new DCBlocker(this.DCBresonance)}setBandpass(bandpassLower=this.bandpassLower,bandpassUpper=this.bandpassUpper,sps9=this.sps){this.bandpassLower=bandpassLower;this.bandpassUpper=bandpassUpper;this.bp1=[makeBandpassFilter(bandpassLower,bandpassUpper,sps9),makeBandpassFilter(bandpassLower,bandpassUpper,sps9),makeBandpassFilter(bandpassLower,bandpassUpper,sps9),makeBandpassFilter(bandpassLower,bandpassUpper,sps9)]}apply(latestData=0){let out=latestData;if(this.useScaling===true){out*=this.scalar}if(this.filtered&&this.trimOutliers&&this.outlierTolerance){if(Math.abs(out-this.filtered)>this.outlierTolerance){out=this.filtered}}if(this.useDCBlock===true){out=this.dcb.applyFilter(out)}if(this.useSMA4===true){if(this.last4.length<4){this.last4.push(out)}else{out=this.last4.reduce((accumulator,currentValue)=>accumulator+currentValue)/this.last4.length;this.last4.shift();this.last4.push(out)}}if(this.useNotch50===true){this.notch50.forEach((f,i)=>{out=f.applyFilter(out)})}if(this.useNotch60===true){this.notch60.forEach((f,i)=>{out=f.applyFilter(out)})}if(this.useLowpass===true){this.lp1.forEach((f,i)=>{out=f.applyFilter(out)})}if(this.useBandpass===true){this.bp1.forEach((f,i)=>{out=f.applyFilter(out)})}this.filtered=out;this.idx++;return out}};var Biquad=class{constructor(type,freq,sps9,Q=1/Math.sqrt(2),dbGain=0){this.a0=0;this.a1=0;this.a2=0;this.b0=0;this.b1=0;this.b2=0;this.x1=0;this.x2=0;this.y1=0;this.y2=0;let types=["lowpass","highpass","bandpass","notch","peak","lowshelf","highshelf"];if(types.indexOf(type)<0){console.error("Valid types: \'lowpass\',\'highpass\',\'bandpass\',\'notch\',\'peak\',\'lowshelf\',\'highshelf\'");return}this.type=type;this.freq=freq;this.sps=sps9;this.Q=Q;this.dbGain=dbGain;let A2=Math.pow(10,dbGain/40);let omega=2*Math.PI*freq/sps9;let sn=Math.sin(omega);let cs=Math.cos(omega);let alpha=sn/(2*Q);let beta=Math.sqrt(A2+A2);this[type](A2,sn,cs,alpha,beta);this.b0/=this.a0;this.b1/=this.a0;this.b2/=this.a0;this.a1/=this.a0;this.a2/=this.a0}lowpass(A2,sn,cs,alpha,beta){this.b0=(1-cs)*.5;this.b1=1-cs;this.b2=(1-cs)*.5;this.a0=1+alpha;this.a1=-2*cs;this.a2=1-alpha}highpass(A2,sn,cs,alpha,beta){this.b0=(1+cs)*.5;this.b1=-(1+cs);this.b2=(1+cs)*.5;this.a0=1+alpha;this.a1=-2*cs;this.a2=1-alpha}bandpass(A2,sn,cs,alpha,beta){this.b0=alpha;this.b1=0;this.b2=-alpha;this.a0=1+alpha;this.a1=-2*cs;this.a2=1-alpha}notch(A2,sn,cs,alpha,beta){this.b0=1;this.b1=-2*cs;this.b2=1;this.a0=1+alpha;this.a1=-2*cs;this.a2=1-alpha}peak(A2,sn,cs,alpha,beta){this.b0=1+alpha*A2;this.b1=-2*cs;this.b2=1-alpha*A2;this.a0=1+alpha/A2;this.a1=-2*cs;this.a2=1-alpha/A2}lowshelf(A2,sn,cs,alpha,beta){this.b0=A2*(A2+1-(A2-1)*cs+beta*sn);this.b1=2*A2*(A2-1-(A2+1)*cs);this.b2=A2*(A2+1-(A2-1)*cs-beta*sn);this.a0=A2+1+(A2+1)*cs+beta*sn;this.a1=2*(A2-1+(A2+1)*cs);this.a2=A2+1+(A2-1)*cs-beta*sn}highshelf(A2,sn,cs,alpha,beta){this.b0=A2*(A2+1+(A2-1)*cs+beta*sn);this.b1=2*A2*(A2-1+(A2+1)*cs);this.b2=A2*(A2+1-(A2-1)*cs-beta*sn);this.a0=A2+1-(A2+1)*cs-beta*sn;this.a1=2*(A2-1-(A2+1)*cs);this.a2=A2+1-(A2-1)*cs-beta*sn}applyFilter(signal_step){let y2=this.b0*signal_step+this.b1*this.x1+this.b2*this.x2-this.a1*this.y1-this.a2*this.y2;this.x2=this.x1;this.x1=signal_step;this.y2=this.y1;this.y1=y2;return y2}zResult(freq){try{let phi=Math.pow(Math.sin(Math.PI*freq*2/(2*this.sps)),2);let result=(Math.pow(this.b0+this.b1+this.b2,2)-4*(this.b0*this.b1+4*this.b0*this.b2+this.b1*this.b2)*phi+16*this.b0*this.b2*phi*phi)/(Math.pow(1+this.a1+this.a2,2)-4*(this.a1+4*this.a2+this.a1*this.a2)*phi+16*this.a2*phi*phi);return result}catch(err){return-200}}static calcCenterFrequency(freqStart,freqEnd){return(freqStart+freqEnd)/2}static calcBandwidth(freqStart,freqEnd){return freqEnd-this.calcCenterFrequency(freqStart,freqEnd)}static calcBandpassQ(frequency,bandwidth,resonance=Math.pow(10,Math.floor(Math.log10(frequency)))){let Q=resonance*Math.sqrt((frequency-bandwidth)*(frequency+bandwidth))/(2*bandwidth);return Q}static calcNotchQ(frequency,bandwidth,resonance=Math.pow(10,Math.floor(Math.log10(frequency)))){let Q=resonance*frequency*bandwidth/Math.sqrt((frequency-bandwidth)*(frequency+bandwidth));return Q}};var DCBlocker=class{constructor(r=.995){this.r=r;this.y1=this.y2=this.x1=this.x2=0}applyFilter(signal_step){this.x2=this.x1;this.x1=signal_step;let y2=this.x1-this.x2+this.r*this.y1;this.y2=this.y1;this.y1=y2;return y2}};var makeNotchFilter=(frequency,sps9,bandwidth)=>{return new Biquad("notch",frequency,sps9,Biquad.calcNotchQ(frequency,bandwidth),0)};var makeBandpassFilter=(freqStart,freqEnd,sps9,resonance=Math.pow(10,Math.floor(Math.log10(Biquad.calcCenterFrequency(freqStart,freqEnd)))))=>{return new Biquad("bandpass",Biquad.calcCenterFrequency(freqStart,freqEnd),sps9,Biquad.calcBandpassQ(Biquad.calcCenterFrequency(freqStart,freqEnd),Biquad.calcBandwidth(freqStart,freqEnd),resonance),0)};function parseFunctionFromText2(method=""){let getFunctionBody=methodString=>{return methodString.replace(/^\\W*(function[^{]+\\{([\\s\\S]*)\\}|[^=]+=>[^{]*\\{([\\s\\S]*)\\}|[^=]+=>(.+))/i,"$2$3$4")};let getFunctionHead=methodString=>{let startindex=methodString.indexOf("=>")+1;if(startindex<=0){startindex=methodString.indexOf("){")}if(startindex<=0){startindex=methodString.indexOf(") {")}return methodString.slice(0,methodString.indexOf("{",startindex)+1)};let newFuncHead=getFunctionHead(method);let newFuncBody=getFunctionBody(method);let newFunc;if(newFuncHead.includes("function")){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody)}else{if(newFuncHead.substring(0,6)===newFuncBody.substring(0,6)){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody.substring(newFuncBody.indexOf("{")+1,newFuncBody.length-1))}else{try{newFunc=(0,eval)(newFuncHead+newFuncBody+"}")}catch{}}}return newFunc}var stringifyWithCircularRefs2=function(){const refs=new Map;const parents=[];const path=["this"];function clear(){refs.clear();parents.length=0;path.length=1}function updateParents(key,value){var idx=parents.length-1;var prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value||idx===0){path.push(key);parents.push(value.pushed)}else{while(idx-->=0){prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value){idx+=2;parents.length=idx;path.length=idx;--idx;parents[idx]=value;path[idx]=key;break}}idx--}}}}function checkCircular(key,value){if(value!=null){if(typeof value==="object"){if(key){updateParents(key,value)}let other=refs.get(value);if(other){return"[Circular Reference]"+other}else{refs.set(value,path.join("."))}}}return value}return function stringifyWithCircularRefs3(obj,space){try{parents.push(obj);return JSON.stringify(obj,checkCircular,space)}finally{clear()}}}();if(JSON.stringifyWithCircularRefs===void 0){JSON.stringifyWithCircularRefs=stringifyWithCircularRefs2}var stringifyFast2=function(){const refs=new Map;const parents=[];const path=["this"];function clear(){refs.clear();parents.length=0;path.length=1}function updateParents(key,value){var idx=parents.length-1;if(parents[idx]){var prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value||idx===0){path.push(key);parents.push(value.pushed)}else{while(idx-->=0){prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value){idx+=2;parents.length=idx;path.length=idx;--idx;parents[idx]=value;path[idx]=key;break}}idx++}}}}}function checkValues(key,value){let val;if(value!=null){if(typeof value==="object"){let c=value.constructor.name;if(key&&c==="Object"){updateParents(key,value)}let other=refs.get(value);if(other){return"[Circular Reference]"+other}else{refs.set(value,path.join("."))}if(c==="Array"){if(value.length>20){val=value.slice(value.length-20)}else val=value}else if(c.includes("Set")){val=Array.from(value)}else if(c!=="Object"&&c!=="Number"&&c!=="String"&&c!=="Boolean"){val="instanceof_"+c}else if(c==="Object"){let obj={};for(const prop in value){if(value[prop]==null){obj[prop]=value[prop]}else if(Array.isArray(value[prop])){if(value[prop].length>20)obj[prop]=value[prop].slice(value[prop].length-20);else obj[prop]=value[prop]}else if(value[prop].constructor.name==="Object"){obj[prop]={};for(const p in value[prop]){if(Array.isArray(value[prop][p])){if(value[prop][p].length>20)obj[prop][p]=value[prop][p].slice(value[prop][p].length-20);else obj[prop][p]=value[prop][p]}else{if(value[prop][p]!=null){let con=value[prop][p].constructor.name;if(con.includes("Set")){obj[prop][p]=Array.from(value[prop][p])}else if(con!=="Number"&&con!=="String"&&con!=="Boolean"){obj[prop][p]="instanceof_"+con}else{obj[prop][p]=value[prop][p]}}else{obj[prop][p]=value[prop][p]}}}}else{let con=value[prop].constructor.name;if(con.includes("Set")){obj[prop]=Array.from(value[prop])}else if(con!=="Number"&&con!=="String"&&con!=="Boolean"){obj[prop]="instanceof_"+con}else{obj[prop]=value[prop]}}}val=obj}else{val=value}}else{val=value}}return val}return function stringifyFast3(obj,space){parents.push(obj);let res=JSON.stringify(obj,checkValues,space);clear();return res}}();if(JSON.stringifyFast===void 0){JSON.stringifyFast=stringifyFast2}function loadStreamWorkerGlobals(){globalThis.WebSerial=WebSerial;globalThis.decoders=decoders;globalThis.decoder="raw";globalThis.ByteParser=ByteParser;globalThis.Devices=Devices;globalThis.filtering=true;globalThis.filters={};globalThis.BiquadChannelFilterer=BiquadChannelFilterer;globalThis.ArrayManip=ArrayManip}if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope){loadStreamWorkerGlobals()}var streamWorkerRoutes={"receiveDecoder":function receiveDecoder(decoder2,decoderName){globalThis.decoders[decoderName]=(0,eval)("("+decoder2+")")},"receiveCodec":function receiveDeviceCodec(decoder2,deviceType,device,service,characteristic){let codec=parseFunctionFromText2(decoder2);if(codec){if(deviceType==="BLE"&&service&&characteristic){if(globalThis.Devices[deviceType][device]){if(globalThis.Devices[deviceType][device][service]){if(globalThis.Devices[deviceType][device][characteristic]){globalThis.Devices[deviceType][device][characteristic].codec=codec}else{globalThis.Devices[deviceType][device][characteristic]={codec}}}else{globalThis.Devices[deviceType][device]={[characteristic]:{codec}}}}}else if(globalThis.Devices[deviceType][device]?.codec){if(globalThis.Devices[deviceType][device])globalThis.Devices[deviceType][device].codec=codec;else{globalThis.Devices[deviceType][device]={codec}}}}},"decode":function decode(data){return globalThis.decoder(data)},"decodeAndParse":function decodeAndParse(data){let decoded=this.__node.graph.run("decode",data);if(decoded){let parsed=globalThis.ArrayManip.reformatData(decoded);if(parsed){if(globalThis.filtering){for(const prop in parsed){if(globalThis.filters[prop]){let filter=globalThis.filters[prop];if(Array.isArray(parsed[prop])){parsed[prop]=parsed[prop].map(v=>filter.apply(v))}else if(parsed[prop]?.values){parsed[prop].values=parsed[prop].values.map(v=>filter.apply(v))}}}}return parsed}}return decoded},"setActiveDecoder":function setActiveDecoder(deviceType,device,service,characteristic){if(globalThis.Devices[deviceType][device]?.codec)globalThis.decoder=globalThis.Devices[deviceType][device]?.codec;else if(deviceType==="BLE"&&service&&characteristic&&globalThis.Devices[deviceType][device]?.[service]?.[characteristic]?.codec)globalThis.decoder=globalThis.Devices[deviceType][device][service][characteristic].codec;return true},"decodeDevice":function decodeDevice(data,deviceType,device,service,characteristic){if(globalThis.Devices[deviceType][device]?.codec)return globalThis.Devices[deviceType][device].codec(data);else if(deviceType==="BLE"&&service&&characteristic&&globalThis.Devices[deviceType][device]?.[service]?.[characteristic]?.codec)return globalThis.Devices[deviceType][device][service][characteristic].codec(data)},"decodeAndParseDevice":function decodeAndParseDevice(data,deviceType,deviceName,service,characteristic){let decoded;if(deviceType==="BLE"&&service&&characteristic&&globalThis.Devices[deviceType][deviceName]?.services[service]?.[characteristic]?.codec)decoded=globalThis.Devices[deviceType][deviceName].services[service][characteristic].codec(data);else if(globalThis.Devices[deviceType][deviceName]?.codec)decoded=globalThis.Devices[deviceType][deviceName].codec(data);else decoded=data;if(decoded){let parsed=globalThis.ArrayManip.reformatData(decoded);if(parsed){if(globalThis.filtering){for(const prop in parsed){if(globalThis.filters[prop]){let filter=globalThis.filters[prop];if(Array.isArray(parsed[prop])){parsed[prop]=parsed[prop].map(v=>filter.apply(v))}else if(parsed[prop]?.values){parsed[prop].values=parsed[prop].values.map(v=>filter.apply(v))}else if(typeof parsed[prop]==="number"){parsed[prop]=filter.apply(parsed[prop])}}}}return parsed}}return decoded},"toggleAnim":function toggleAnim(){globalThis.runningAnim=!globalThis.runningAnim;return globalThis.runningAnim},"setFilters":function setFilters(filters,clearFilters=false){if(!globalThis.filters||clearFilters)globalThis.filters={};for(const key in filters){globalThis.filters[key]=new BiquadChannelFilterer(filters[key])}return true},"getFilterSettings":function getFilterSettings(){if(globalThis.filters){let filters={};for(const key in globalThis.filters){filters[key]={sps:globalThis.filters[key].sps,useScaling:globalThis.filters[key].useScaling,scalar:globalThis.filters[key].scalar,useNotch50:globalThis.filters[key].useNotch50,useNotch60:globalThis.filters[key].useNotch60,useDCBlock:globalThis.filters[key].useDCBlock,useLowpass:globalThis.filters[key].useLowpass,lowpassHz:globalThis.filters[key].lowpassHz,useBandpass:globalThis.filters[key].useBandpass,bandpassLower:globalThis.filters[key].bandpassLower,bandpassUpper:globalThis.filters[key].bandpassUpper}}return filters}return void 0},"setupSerial":function setupSerial(){globalThis.Serial=new globalThis.WebSerial;globalThis.decoder="raw";console.log("worker: Setting up Serial",globalThis.Serial);return true},"openPort":function openPort(settings){const WorkerService2=this.__node.graph;if(!globalThis.Serial)WorkerService2.run("setupSerial");return new Promise((res,rej)=>{globalThis.Serial.getPorts().then(ports=>{const Serial=globalThis.Serial;let port=ports.find(port2=>{return port2.getInfo().usbVendorId===settings.usbVendorId&&port2.getInfo().usbProductId===settings.usbProductId});if(port){let options=Object.assign({},settings);if(typeof settings.pipeTo==="object"&&settings.pipeTo.extraArgs&&globalThis.Devices?.[settings.pipeTo.extraArgs[0]]?.[settings.pipeTo.extraArgs[1]]){options.onconnect=globalThis.Devices[settings.pipeTo.extraArgs[0]][settings.pipeTo.extraArgs[1]].onconnect;options.ondisconnect=globalThis.Devices[settings.pipeTo.extraArgs[0]][settings.pipeTo.extraArgs[1]].ondisconnect;options.beforedisconnect=globalThis.Devices[settings.pipeTo.extraArgs[0]][settings.pipeTo.extraArgs[1]].beforedisconnect}Serial.openPort(port,options).then(()=>{const stream=Serial.createStream({port,settings:options,frequency:settings.frequency?settings.frequency:10,buffering:settings.buffering,ondata:value=>{if(stream.settings.pipeTo){if(typeof stream.settings.pipeTo==="string")WorkerService2.transmit(value,stream.settings.pipeTo,[value.buffer]);else if(stream.settings.pipeTo?.route){let args=value;if(stream.settings.pipeTo.extraArgs)args=[value,...stream.settings.pipeTo.extraArgs];WorkerService2.transmit({route:stream.settings.pipeTo.route,args},stream.settings.pipeTo._id,[value.buffer])}}else{WorkerService2.transmit(value,void 0,[value.buffer])}}});Serial.readStream(stream);port.ondisconnect=()=>{postMessage(`${stream._id} disconnected`)};res({_id:stream._id,settings,info:stream.info})}).catch(()=>{postMessage(`disconnected`)});;}else{rej(false)}})})},"closeStream":function closeStream(streamId){return new Promise((res,rej)=>{const Serial=globalThis.Serial;let ondisconnect;if(Serial.streams[streamId].port?.ondisconnect)ondisconnect=Serial.streams[streamId].port.ondisconnect;Serial.closeStream(Serial.streams[streamId]).then(resolved=>{if(ondisconnect)ondisconnect(void 0);res(resolved)}).catch(rej)})},"writeStream":function writeStream(streamId,message){globalThis.Serial.writeStream(globalThis.Serial.streams[streamId],message);return true},"updateStreamSettings":function updateStreamSettings(streamId,settings){if(globalThis.Serial?.streams[streamId]){for(const key in settings){if(typeof settings[key]==="object"){Object.assign(globalThis.Serial.streams[streamId].settings[key],settings[key])}else globalThis.Serial.streams[streamId][key]=settings[key]}}}};if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope){const worker=new WorkerService({roots:{...workerCanvasRoutes,...subprocessRoutes,...streamWorkerRoutes}})}var stream_worker_default=self;})();\n')], { type: "text/javascript" }));
  var stream_worker_default = url;
  var _ArrayManip = class {
    constructor() {
      this.recursivelyAssign = (target, obj) => {
        for (const key in obj) {
          if (typeof obj[key] === "object") {
            if (typeof target[key] === "object")
              this.recursivelyAssign(target[key], obj[key]);
            else
              target[key] = this.recursivelyAssign({}, obj[key]);
          } else
            target[key] = obj[key];
        }
        return target;
      };
    }
    static autoscale(array, lineIdx = 0, nLines = 1, centerZero = false, ymin, ymax, clamp) {
      if (array?.length === 0)
        return array;
      let max = ymax ? ymax : Math.max(...array);
      let min = ymin ? ymin : Math.min(...array);
      let _lines = 1 / nLines;
      let scalar = 1;
      if (centerZero) {
        let absmax = Math.max(Math.abs(min), Math.abs(max));
        if (absmax !== 0)
          scalar = _lines / absmax;
        return array.map((y22) => {
          if (clamp) {
            if (y22 < min)
              y22 = min;
            if (y22 > max)
              y22 = max;
          }
          return y22 * scalar + (_lines * (lineIdx + 1) * 2 - 1 - _lines);
        });
      } else {
        if (max === min) {
          if (max !== 0) {
            scalar = _lines / max;
          } else if (min !== 0) {
            scalar = _lines / Math.abs(min);
          }
        } else
          scalar = _lines / (max - min);
        return array.map((y22) => {
          if (clamp) {
            if (y22 < min)
              y22 = min;
            if (y22 > max)
              y22 = max;
          }
          return 2 * ((y22 - min) * scalar - 1 / (2 * nLines)) + (_lines * (lineIdx + 1) * 2 - 1 - _lines);
        });
      }
    }
    static genTimestamps(ct, sps102) {
      let now = Date.now();
      let toInterp = [now - ct * 1e3 / sps102, now];
      return _ArrayManip.upsample(toInterp, ct);
    }
    static absmax(array) {
      return Math.max(Math.abs(Math.min(...array)), Math.max(...array));
    }
    static downsample(array, fitCount, scalar = 1) {
      if (array.length > fitCount) {
        let output = new Array(fitCount);
        let incr = array.length / fitCount;
        let lastIdx = array.length - 1;
        let last = 0;
        let counter = 0;
        for (let i = incr; i < array.length; i += incr) {
          let rounded = Math.round(i);
          if (rounded > lastIdx)
            rounded = lastIdx;
          for (let j = last; j < rounded; j++) {
            output[counter] += array[j];
          }
          output[counter] /= (rounded - last) * scalar;
          counter++;
          last = rounded;
        }
        return output;
      } else
        return array;
    }
    static upsample(array, fitCount, scalar = 1) {
      var linearInterpolate = function(before2, after2, atPoint2) {
        return (before2 + (after2 - before2) * atPoint2) * scalar;
      };
      var newData = new Array(fitCount);
      var springFactor = (array.length - 1) / (fitCount - 1);
      newData[0] = array[0];
      for (var i = 1; i < fitCount - 1; i++) {
        var tmp = i * springFactor;
        var before = Math.floor(tmp);
        var after = Math.ceil(tmp);
        var atPoint = tmp - before;
        newData[i] = linearInterpolate(array[before], array[after], atPoint);
      }
      newData[fitCount - 1] = array[array.length - 1];
      return newData;
    }
    static interpolate(array, fitCount, scalar = 1) {
      if (array.length > fitCount) {
        return _ArrayManip.downsample(array, fitCount, scalar);
      } else if (array.length < fitCount) {
        return _ArrayManip.upsample(array, fitCount, scalar);
      }
      return array;
    }
    static HSLToRGB(h, s, l, scalar = 255) {
      s /= 100;
      l /= 100;
      let c = (1 - Math.abs(2 * l - 1)) * s, x3 = c * (1 - Math.abs(h / 60 % 2 - 1)), m = l - c / 2, r = 0, g = 0, b2 = 0;
      if (0 <= h && h < 60) {
        r = c;
        g = x3;
        b2 = 0;
      } else if (60 <= h && h < 120) {
        r = x3;
        g = c;
        b2 = 0;
      } else if (120 <= h && h < 180) {
        r = 0;
        g = c;
        b2 = x3;
      } else if (180 <= h && h < 240) {
        r = 0;
        g = x3;
        b2 = c;
      } else if (240 <= h && h < 300) {
        r = x3;
        g = 0;
        b2 = c;
      } else if (300 <= h && h < 360) {
        r = c;
        g = 0;
        b2 = x3;
      }
      r = (r + m) * scalar;
      g = (g + m) * scalar;
      b2 = (b2 + m) * scalar;
      return [r, g, b2];
    }
    static circularBuffer(arr, newEntries) {
      if (newEntries.length < arr.length) {
        let slice = arr.slice(newEntries.length);
        let len = arr.length;
        arr.splice(0, len, ...slice, ...newEntries);
      } else if (newEntries.length > arr.length) {
        let len = arr.length;
        arr.splice(0, len, newEntries.slice(len - newEntries.length));
      } else {
        arr.splice(0, arr.length, ...newEntries);
      }
      return arr;
    }
    static reformatData(data, key) {
      if (Array.isArray(data)) {
        if (Array.isArray(data[0])) {
          let d2 = {};
          data.forEach((arr, i) => {
            d2[i] = arr;
          });
          data = d2;
          if (isNaN(data[0][0]))
            return void 0;
        } else if (key) {
          data = { [key]: data };
          if (isNaN(data[key][0]))
            return void 0;
        } else {
          data = { 0: data };
          if (isNaN(data[0][0]))
            return void 0;
        }
      } else if (typeof data === "object") {
        for (const key2 in data) {
          if (typeof data[key2] === "number")
            data[key2] = [data[key2]];
          else if (data[key2]?.values) {
            if (typeof data[key2].values === "number")
              data[key2].values = [data[key2].values];
          }
          if (isNaN(data[key2][0]))
            return void 0;
        }
      } else if (typeof data === "string") {
        let split;
        if (data.includes("\r\n")) {
          let lines = data.split("\r\n");
          data = {};
          lines.forEach((l, j) => {
            if (l.includes("	")) {
              split = l.split("	");
            } else if (l.includes(",")) {
              split = l.split(",");
            } else if (l.includes("|")) {
              split = l.split("|");
            }
            if (Array.isArray(split)) {
              split.forEach((val, i) => {
                if (val.includes(":")) {
                  let [key2, v2] = val.split(":");
                  let fl = parseFloat(v2);
                  if (fl)
                    data[key2] = [fl];
                  else
                    return void 0;
                } else {
                  let fl = parseFloat(val);
                  if (fl)
                    data[i] = [fl];
                  else
                    return void 0;
                }
              });
            }
          });
        } else if (data.includes("	")) {
          split = data.split("	");
        } else if (data.includes(",")) {
          split = data.split(",");
        } else if (data.includes("|")) {
          split = data.split("|");
        }
        data = {};
        if (Array.isArray(split)) {
          split.forEach((val, i) => {
            if (val.includes(":")) {
              let [key2, v2] = val.split(":");
              let fl = parseFloat(v2);
              if (fl)
                data[key2] = [fl];
              else
                return void 0;
            } else {
              let fl = parseFloat(val);
              if (fl)
                data[i] = [fl];
              else
                return void 0;
            }
          });
        }
      } else if (typeof data === "number") {
        if (key)
          data = { [key]: [data] };
        else
          data = { 0: [data] };
      }
      return data;
    }
    static padTime(data, lastValue, time, targetFit) {
      let slopeIncr = (data[0] - lastValue) / time / targetFit;
      let padded = [...new Array(targetFit - data.length).map((_2, i) => lastValue + slopeIncr * (i + 1)), ...data];
      return padded;
    }
    static interpolateForTime(data, time, targetSPS) {
      return _ArrayManip.interpolate(data, Math.ceil(targetSPS * time));
    }
    isTypedArray(x3) {
      return ArrayBuffer.isView(x3) && Object.prototype.toString.call(x3) !== "[object DataView]";
    }
    spliceTypedArray(arr, start, end) {
      let s = arr.subarray(0, start);
      let e;
      if (end) {
        e = arr.subarray(end + 1);
      }
      let n;
      if (s.length > 0 || e?.length > 0)
        n = new arr.constructor(s.length + e.length);
      if (s.length > 0)
        n.set(s);
      if (e && e.length > 0)
        n.set(e, s.length);
      return n;
    }
  };
  var ArrayManip = _ArrayManip;
  ArrayManip.bufferValues = (objects, property, keys, buffer) => {
    if (!Array.isArray(keys) && typeof keys === "object")
      keys = Object.keys(keys);
    if (!buffer) {
      let object_keys = Object.keys(objects);
      if (keys)
        buffer = new Float32Array(object_keys.length * keys.length);
      else {
        if (typeof objects[object_keys[0]][property] === "object") {
          keys = Object.keys(objects[object_keys[0]][property]);
          buffer = new Float32Array(object_keys.length * keys.length);
        } else
          buffer = new Float32Array(object_keys.length);
      }
    }
    let i = 0;
    for (const key in objects) {
      if (objects[key][property]) {
        if (keys) {
          for (let j = 0; j < keys.length; j++) {
            buffer[i] = objects[key][property][keys[j]];
            i++;
          }
        } else {
          buffer[i] = objects[key][property];
          i++;
        }
      }
    }
    return buffer;
  };
  var rechk = /^([<>])?(([1-9]\d*)?([xcbB?hHiIfdsp]))*$/;
  var refmt = /([1-9]\d*)?([xcbB?hHiIfdsp])/g;
  var str = (v2, o, c) => String.fromCharCode(...new Uint8Array(v2.buffer, v2.byteOffset + o, c));
  var rts = (v2, o, c, s) => new Uint8Array(v2.buffer, v2.byteOffset + o, c).set(s.split("").map((str22) => str22.charCodeAt(0)));
  var pst = (v2, o, c) => str(v2, o + 1, Math.min(v2.getUint8(o), c - 1));
  var tsp = (v2, o, c, s) => {
    v2.setUint8(o, s.length);
    rts(v2, o + 1, c - 1, s);
  };
  var lut = (le) => ({ x: (c) => [1, c, 0], c: (c) => [c, 1, (o) => ({ u: (v2) => str(v2, o, 1), p: (v2, c2) => rts(v2, o, 1, c2) })], "?": (c) => [c, 1, (o) => ({ u: (v2) => Boolean(v2.getUint8(o)), p: (v2, B22) => v2.setUint8(o, B22) })], b: (c) => [c, 1, (o) => ({ u: (v2) => v2.getInt8(o), p: (v2, b2) => v2.setInt8(o, b2) })], B: (c) => [c, 1, (o) => ({ u: (v2) => v2.getUint8(o), p: (v2, B22) => v2.setUint8(o, B22) })], h: (c) => [c, 2, (o) => ({ u: (v2) => v2.getInt16(o, le), p: (v2, h) => v2.setInt16(o, h, le) })], H: (c) => [c, 2, (o) => ({ u: (v2) => v2.getUint16(o, le), p: (v2, H22) => v2.setUint16(o, H22, le) })], i: (c) => [c, 4, (o) => ({ u: (v2) => v2.getInt32(o, le), p: (v2, i) => v2.setInt32(o, i, le) })], I: (c) => [c, 4, (o) => ({ u: (v2) => v2.getUint32(o, le), p: (v2, I) => v2.setUint32(o, I, le) })], f: (c) => [c, 4, (o) => ({ u: (v2) => v2.getFloat32(o, le), p: (v2, f) => v2.setFloat32(o, f, le) })], d: (c) => [c, 8, (o) => ({ u: (v2) => v2.getFloat64(o, le), p: (v2, d2) => v2.setFloat64(o, d2, le) })], s: (c) => [1, c, (o) => ({ u: (v2) => str(v2, o, c), p: (v2, s) => rts(v2, o, c, s.slice(0, c)) })], p: (c) => [1, c, (o) => ({ u: (v2) => pst(v2, o, c), p: (v2, s) => tsp(v2, o, c, s.slice(0, c - 1)) })] });
  var errbuf = new RangeError("Structure larger than remaining buffer");
  var errval = new RangeError("Not enough values for structure");
  var _ByteParser = class extends ArrayManip {
    static toDataView(value) {
      if (!(value instanceof DataView)) {
        if (typeof value === "string" && parseInt(value))
          value = parseInt(value);
        if (typeof value === "string") {
          let enc = new TextEncoder();
          let hascodes = {};
          for (const code in _ByteParser.codes) {
            while (value.indexOf(code) > -1) {
              let idx = value.indexOf(code);
              value = value.replace(code, "");
              hascodes[idx] = code;
            }
          }
          let encoded = Array.from(enc.encode(value));
          for (const key in hascodes) {
            encoded.splice(parseInt(key), 0, _ByteParser.codes[hascodes[key]]);
          }
          value = new DataView(new Uint8Array(encoded).buffer);
        } else if (typeof value === "number") {
          let tmp = value;
          if (value < 256) {
            value = new DataView(new ArrayBuffer(1));
            value.setUint8(0, tmp);
          } else if (value < 65536) {
            value = new DataView(new ArrayBuffer(2));
            value.setInt16(0, tmp);
          } else {
            value = new DataView(new ArrayBuffer(4));
            value.setUint32(0, tmp);
          }
        } else if (value instanceof ArrayBuffer || typeof SharedArrayBuffer !== "undefined" && value instanceof SharedArrayBuffer) {
          value = new DataView(value);
        } else if (Array.isArray(value)) {
          value = new DataView(Uint8Array.from(value).buffer);
        } else if (typeof value === "object") {
          value = new TextEncoder().encode(JSON.stringify(value));
        }
      }
      return value;
    }
    static searchBuffer(buffer, searchString, limit) {
      var needle = searchString;
      var haystack = buffer;
      var search = _ByteParser.boyerMoore(needle);
      var skip = search.byteLength;
      var indices = [];
      for (var i = search(haystack); i !== -1; i = search(haystack, i + skip)) {
        indices.push(i);
        if (limit) {
          if (indices.length >= limit)
            break;
        }
      }
      return indices;
    }
    static bytesToInt16(x0, x1) {
      let int16 = (255 & x0) << 8 | 255 & x1;
      if ((int16 & 32768) > 0) {
        int16 |= 4294901760;
      } else {
        int16 &= 65535;
      }
      return int16;
    }
    static bytesToUInt16(x0, x1) {
      return x0 * 256 + x1;
    }
    static Uint16ToBytes(y22) {
      return [y22 & 255, y22 >> 8 & 255];
    }
    static bytesToInt24(x0, x1, x22) {
      let int24 = (255 & x0) << 16 | (255 & x1) << 8 | 255 & x22;
      if ((int24 & 8388608) > 0) {
        int24 |= 4278190080;
      } else {
        int24 &= 16777215;
      }
      return int24;
    }
    static bytesToUInt24(x0, x1, x22) {
      return x0 * 65536 + x1 * 256 + x22;
    }
    static Uint24ToBytes(y22) {
      return [y22 & 255, y22 >> 8 & 255, y22 >> 16 & 255];
    }
    static bytesToInt32(x0, x1, x22, x3) {
      let int32 = (255 & x0) << 24 | (255 & x1) << 16 | (255 & x22) << 8 | 255 & x3;
      if ((int32 & 2147483648) > 0) {
        int32 |= 0;
      } else {
        int32 &= 4294967295;
      }
      return int32;
    }
    static bytesToUInt32(x0, x1, x22, x3) {
      return x0 * 16777216 + x1 * 65536 + x22 * 256 + x3;
    }
    static Uint32ToBytes(y22) {
      return [y22 & 255, y22 >> 8 & 255, y22 >> 16 & 255, y22 >> 24 & 255];
    }
    static get2sCompliment(val, nbits32) {
      if (val > 4294967296)
        return null;
      return val << 32 - nbits32 >> 32 - nbits32;
    }
    static getSignedInt(...args) {
      let pos = 0;
      function getInt(size) {
        var value = 0;
        var first = true;
        while (size--) {
          if (first) {
            let byte = args[pos++];
            value += byte & 127;
            if (byte & 128) {
              value -= 128;
            }
            first = false;
          } else {
            value *= 256;
            value += args[pos++];
          }
        }
        return value;
      }
      return getInt(args.length);
    }
    static asUint8Array(input) {
      if (input instanceof Uint8Array) {
        return input;
      } else if (typeof input === "string") {
        var arr = new Uint8Array(input.length);
        for (var i = 0; i < input.length; i++) {
          var c = input.charCodeAt(i);
          if (c > 127) {
            throw new TypeError("Only ASCII patterns are supported");
          }
          arr[i] = c;
        }
        return arr;
      } else {
        return new Uint8Array(input);
      }
    }
    static boyerMoore(patternBuffer) {
      var pattern = _ByteParser.asUint8Array(patternBuffer);
      var M2 = pattern.length;
      if (M2 === 0) {
        throw new TypeError("patternBuffer must be at least 1 byte long");
      }
      var R2 = 256;
      var rightmost_positions = new Int32Array(R2);
      for (var c = 0; c < R2; c++) {
        rightmost_positions[c] = -1;
      }
      for (var j = 0; j < M2; j++) {
        rightmost_positions[pattern[j]] = j;
      }
      var boyerMooreSearch = (txtBuffer, start, end) => {
        var txt = _ByteParser.asUint8Array(txtBuffer);
        if (start === void 0)
          start = 0;
        if (end === void 0)
          end = txt.length;
        var pat = pattern;
        var right = rightmost_positions;
        var lastIndex = end - pat.length;
        var lastPatIndex = pat.length - 1;
        var skip;
        for (var i = start; i <= lastIndex; i += skip) {
          skip = 0;
          for (var j2 = lastPatIndex; j2 >= 0; j2--) {
            var c2 = txt[i + j2];
            if (pat[j2] !== c2) {
              skip = Math.max(1, j2 - right[c2]);
              break;
            }
          }
          if (skip === 0) {
            return i;
          }
        }
        return -1;
      };
      boyerMooreSearch.byteLength = pattern.byteLength;
      return boyerMooreSearch;
    }
    static struct(format) {
      let fns = [], size = 0, m = rechk.exec(format);
      if (!m) {
        throw new RangeError("Invalid format string");
      }
      const t22 = lut("<" === m[1]), lu = (n, c) => t22[c](n ? parseInt(n, 10) : 1);
      while (m = refmt.exec(format)) {
        ((r, s, f) => {
          for (let i = 0; i < r; ++i, size += s) {
            if (f) {
              fns.push(f(size));
            }
          }
        })(...lu(...m.slice(1)));
      }
      const unpack_from = (arrb, offs) => {
        if (arrb.byteLength < (offs | 0) + size) {
          throw errbuf;
        }
        let v2 = new DataView(arrb, offs | 0);
        return fns.map((f) => f.u(v2));
      };
      const pack_into = (arrb, offs, ...values) => {
        if (values.length < fns.length) {
          throw errval;
        }
        if (arrb.byteLength < offs + size) {
          throw errbuf;
        }
        const v2 = new DataView(arrb, offs);
        new Uint8Array(arrb, offs, size).fill(0);
        fns.forEach((f, i) => f.p(v2, values[i]));
      };
      const pack = (...values) => {
        let b2 = new ArrayBuffer(size);
        pack_into(b2, 0, ...values);
        return b2;
      };
      const unpack = (arrb) => unpack_from(arrb, 0);
      function* iter_unpack(arrb) {
        for (let offs = 0; offs + size <= arrb.byteLength; offs += size) {
          yield unpack_from(arrb, offs);
        }
      }
      return Object.freeze({ unpack, pack, unpack_from, pack_into, iter_unpack, format, size });
    }
  };
  var ByteParser = _ByteParser;
  ByteParser.codes = { "\\n": 10, "\\r": 13, "\\t": 9, "\\s": 32, "\\b": 8, "\\f": 12, "\\": 92 };
  var ScanMode;
  (function(ScanMode2) {
    ScanMode2[ScanMode2["SCAN_MODE_LOW_POWER"] = 0] = "SCAN_MODE_LOW_POWER";
    ScanMode2[ScanMode2["SCAN_MODE_BALANCED"] = 1] = "SCAN_MODE_BALANCED";
    ScanMode2[ScanMode2["SCAN_MODE_LOW_LATENCY"] = 2] = "SCAN_MODE_LOW_LATENCY";
  })(ScanMode || (ScanMode = {}));
  init_dist();
  init_conversion();
  init_dist();
  var BluetoothLe = registerPlugin("BluetoothLe", { web: () => Promise.resolve().then(() => (init_web(), web_exports)).then((m) => new m.BluetoothLeWeb()) });
  var import_throat = __toESM2(require_throat());
  function getQueue(enabled) {
    if (enabled) {
      return (0, import_throat.default)(1);
    } else {
      return (fn) => fn();
    }
  }
  function validateUUID(uuid) {
    if (typeof uuid !== "string") {
      throw new Error(`Invalid UUID type ${typeof uuid}. Expected string.`);
    }
    uuid = uuid.toLowerCase();
    const is128BitUuid = uuid.search(/^[0-9a-f]{8}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{12}$/) >= 0;
    if (!is128BitUuid) {
      throw new Error(`Invalid UUID format ${uuid}. Expected 128 bit string (e.g. "0000180d-0000-1000-8000-00805f9b34fb").`);
    }
    return uuid;
  }
  var BleClientClass = class {
    constructor() {
      this.scanListener = null;
      this.eventListeners = /* @__PURE__ */ new Map();
      this.queue = getQueue(true);
    }
    enableQueue() {
      this.queue = getQueue(true);
    }
    disableQueue() {
      this.queue = getQueue(false);
    }
    async initialize(options) {
      await this.queue(async () => {
        await BluetoothLe.initialize(options);
      });
    }
    async getEnabled() {
      return this.isEnabled();
    }
    async isEnabled() {
      const enabled = await this.queue(async () => {
        const result = await BluetoothLe.isEnabled();
        return result.value;
      });
      return enabled;
    }
    async enable() {
      await this.queue(async () => {
        await BluetoothLe.enable();
      });
    }
    async disable() {
      await this.queue(async () => {
        await BluetoothLe.disable();
      });
    }
    async startEnabledNotifications(callback) {
      await this.queue(async () => {
        var _a;
        const key = `onEnabledChanged`;
        await ((_a = this.eventListeners.get(key)) === null || _a === void 0 ? void 0 : _a.remove());
        const listener = await BluetoothLe.addListener(key, (result) => {
          callback(result.value);
        });
        this.eventListeners.set(key, listener);
        await BluetoothLe.startEnabledNotifications();
      });
    }
    async stopEnabledNotifications() {
      await this.queue(async () => {
        var _a;
        const key = `onEnabledChanged`;
        await ((_a = this.eventListeners.get(key)) === null || _a === void 0 ? void 0 : _a.remove());
        this.eventListeners.delete(key);
        await BluetoothLe.stopEnabledNotifications();
      });
    }
    async isLocationEnabled() {
      const enabled = await this.queue(async () => {
        const result = await BluetoothLe.isLocationEnabled();
        return result.value;
      });
      return enabled;
    }
    async openLocationSettings() {
      await this.queue(async () => {
        await BluetoothLe.openLocationSettings();
      });
    }
    async openBluetoothSettings() {
      await this.queue(async () => {
        await BluetoothLe.openBluetoothSettings();
      });
    }
    async openAppSettings() {
      await this.queue(async () => {
        await BluetoothLe.openAppSettings();
      });
    }
    async setDisplayStrings(displayStrings) {
      await this.queue(async () => {
        await BluetoothLe.setDisplayStrings(displayStrings);
      });
    }
    async requestDevice(options) {
      const result = await this.queue(async () => {
        const device = await BluetoothLe.requestDevice(options);
        return device;
      });
      return result;
    }
    async requestLEScan(options, callback) {
      await this.queue(async () => {
        var _a;
        await ((_a = this.scanListener) === null || _a === void 0 ? void 0 : _a.remove());
        this.scanListener = await BluetoothLe.addListener("onScanResult", (resultInternal) => {
          const result = Object.assign(Object.assign({}, resultInternal), { manufacturerData: this.convertObject(resultInternal.manufacturerData), serviceData: this.convertObject(resultInternal.serviceData), rawAdvertisement: resultInternal.rawAdvertisement ? this.convertValue(resultInternal.rawAdvertisement) : void 0 });
          callback(result);
        });
        await BluetoothLe.requestLEScan(options);
      });
    }
    async stopLEScan() {
      await this.queue(async () => {
        var _a;
        await ((_a = this.scanListener) === null || _a === void 0 ? void 0 : _a.remove());
        this.scanListener = null;
        await BluetoothLe.stopLEScan();
      });
    }
    async getDevices(deviceIds) {
      return this.queue(async () => {
        const result = await BluetoothLe.getDevices({ deviceIds });
        return result.devices;
      });
    }
    async getConnectedDevices(services) {
      return this.queue(async () => {
        const result = await BluetoothLe.getConnectedDevices({ services });
        return result.devices;
      });
    }
    async connect(deviceId, onDisconnect, options) {
      await this.queue(async () => {
        var _a;
        if (onDisconnect) {
          const key = `disconnected|${deviceId}`;
          await ((_a = this.eventListeners.get(key)) === null || _a === void 0 ? void 0 : _a.remove());
          const listener = await BluetoothLe.addListener(key, () => {
            onDisconnect(deviceId);
          });
          this.eventListeners.set(key, listener);
        }
        await BluetoothLe.connect(Object.assign({ deviceId }, options));
      });
    }
    async createBond(deviceId) {
      await this.queue(async () => {
        await BluetoothLe.createBond({ deviceId });
      });
    }
    async isBonded(deviceId) {
      const isBonded = await this.queue(async () => {
        const result = await BluetoothLe.isBonded({ deviceId });
        return result.value;
      });
      return isBonded;
    }
    async disconnect(deviceId) {
      await this.queue(async () => {
        await BluetoothLe.disconnect({ deviceId });
      });
    }
    async getServices(deviceId) {
      const services = await this.queue(async () => {
        const result = await BluetoothLe.getServices({ deviceId });
        return result.services;
      });
      return services;
    }
    async readRssi(deviceId) {
      const value = await this.queue(async () => {
        const result = await BluetoothLe.readRssi({ deviceId });
        return parseFloat(result.value);
      });
      return value;
    }
    async read(deviceId, service, characteristic, options) {
      service = validateUUID(service);
      characteristic = validateUUID(characteristic);
      const value = await this.queue(async () => {
        const result = await BluetoothLe.read(Object.assign({ deviceId, service, characteristic }, options));
        return this.convertValue(result.value);
      });
      return value;
    }
    async write(deviceId, service, characteristic, value, options) {
      service = validateUUID(service);
      characteristic = validateUUID(characteristic);
      return this.queue(async () => {
        if (!(value === null || value === void 0 ? void 0 : value.buffer)) {
          throw new Error("Invalid data.");
        }
        let writeValue = value;
        if (Capacitor.getPlatform() !== "web") {
          writeValue = dataViewToHexString(value);
        }
        await BluetoothLe.write(Object.assign({ deviceId, service, characteristic, value: writeValue }, options));
      });
    }
    async writeWithoutResponse(deviceId, service, characteristic, value, options) {
      service = validateUUID(service);
      characteristic = validateUUID(characteristic);
      await this.queue(async () => {
        if (!(value === null || value === void 0 ? void 0 : value.buffer)) {
          throw new Error("Invalid data.");
        }
        let writeValue = value;
        if (Capacitor.getPlatform() !== "web") {
          writeValue = dataViewToHexString(value);
        }
        await BluetoothLe.writeWithoutResponse(Object.assign({ deviceId, service, characteristic, value: writeValue }, options));
      });
    }
    async readDescriptor(deviceId, service, characteristic, descriptor, options) {
      service = validateUUID(service);
      characteristic = validateUUID(characteristic);
      descriptor = validateUUID(descriptor);
      const value = await this.queue(async () => {
        const result = await BluetoothLe.readDescriptor(Object.assign({ deviceId, service, characteristic, descriptor }, options));
        return this.convertValue(result.value);
      });
      return value;
    }
    async writeDescriptor(deviceId, service, characteristic, descriptor, value, options) {
      service = validateUUID(service);
      characteristic = validateUUID(characteristic);
      descriptor = validateUUID(descriptor);
      return this.queue(async () => {
        if (!(value === null || value === void 0 ? void 0 : value.buffer)) {
          throw new Error("Invalid data.");
        }
        let writeValue = value;
        if (Capacitor.getPlatform() !== "web") {
          writeValue = dataViewToHexString(value);
        }
        await BluetoothLe.writeDescriptor(Object.assign({ deviceId, service, characteristic, descriptor, value: writeValue }, options));
      });
    }
    async startNotifications(deviceId, service, characteristic, callback) {
      service = validateUUID(service);
      characteristic = validateUUID(characteristic);
      await this.queue(async () => {
        var _a;
        const key = `notification|${deviceId}|${service}|${characteristic}`;
        await ((_a = this.eventListeners.get(key)) === null || _a === void 0 ? void 0 : _a.remove());
        const listener = await BluetoothLe.addListener(key, (event) => {
          callback(this.convertValue(event === null || event === void 0 ? void 0 : event.value));
        });
        this.eventListeners.set(key, listener);
        await BluetoothLe.startNotifications({ deviceId, service, characteristic });
      });
    }
    async stopNotifications(deviceId, service, characteristic) {
      service = validateUUID(service);
      characteristic = validateUUID(characteristic);
      await this.queue(async () => {
        var _a;
        const key = `notification|${deviceId}|${service}|${characteristic}`;
        await ((_a = this.eventListeners.get(key)) === null || _a === void 0 ? void 0 : _a.remove());
        this.eventListeners.delete(key);
        await BluetoothLe.stopNotifications({ deviceId, service, characteristic });
      });
    }
    convertValue(value) {
      if (typeof value === "string") {
        return hexStringToDataView(value);
      } else if (value === void 0) {
        return new DataView(new ArrayBuffer(0));
      }
      return value;
    }
    convertObject(obj) {
      if (obj === void 0) {
        return void 0;
      }
      const result = {};
      for (const key of Object.keys(obj)) {
        result[key] = this.convertValue(obj[key]);
      }
      return result;
    }
  };
  var BleClient = new BleClientClass();
  init_conversion();
  var BLEClient = class extends ByteParser {
    constructor(options, location) {
      super();
      this.client = BleClient;
      this.devices = {};
      this.location = false;
      this.initialized = false;
      this.setupDevice = (device, options2) => {
        return new Promise(async (res, rej) => {
          this.devices[device.deviceId] = { device, deviceId: device.deviceId, ...options2 };
          this.client.connect(device.deviceId, (deviceId) => {
            if (this.devices[device.deviceId]?.ondisconnect)
              this.devices[device.deviceId].ondisconnect(deviceId);
          }, options2?.connectOptions).then(async () => {
            let services = await this.getServices(device.deviceId);
            for (const service in options2?.services) {
              let svc = services.find((o) => {
                if (o.uuid === service)
                  return true;
              });
              if (svc)
                for (const characteristic in options2.services[service]) {
                  if (!svc.characteristics.find((o) => {
                    if (o.uuid === characteristic)
                      return true;
                  }))
                    continue;
                  let opt = options2.services[service][characteristic];
                  if (opt.write) {
                    await this.write(device, service, characteristic, opt.write, opt.writeCallback, opt.writeOptions);
                  }
                  if (opt.read) {
                    await this.read(device, service, characteristic, opt.readCallback, opt.readOptions);
                  }
                  if (opt.notify && opt.notifyCallback) {
                    await this.subscribe(device, service, characteristic, opt.notifyCallback);
                    opt.notifying = true;
                  }
                }
            }
          }).catch(rej);
          res(this.devices[device.deviceId]);
        });
      };
      this.triangulate = (device, duration = 1500, sampleRate = 60) => {
        return new Promise((res, rej) => {
          if ("Accelerometer" in globalThis) {
            if (typeof globalThis.Accelerometer === "function") {
              let acl = new globalThis.Accelerometer({ frequency: sampleRate });
              let start = performance.now();
              let now = start;
              let result = { samples: [], vector: {} };
              let onread = () => {
                if (now - start < duration) {
                  this.readRssi(device).then((rssi) => {
                    let x3 = acl.x;
                    let y22 = acl.y;
                    let z22 = acl.z;
                    now = performance.now();
                    result.samples.push({ x: x3, y: y22, z: z22, rssi, timestamp: now });
                  });
                } else {
                  let vector = { x: 0, y: 0, z: 0, rssiAvg: 0 };
                  result.samples.forEach((s) => {
                  });
                  acl.removeEventListener("reading", onread);
                }
              };
              acl.addEventListener("reading", onread);
            }
          } else
            rej(new Error("No Accelerometer API detected"));
        });
      };
      if (location)
        this.location = location;
      if (options) {
        this.setup(options);
      }
    }
    setup(options, location = this.location) {
      let services = [];
      if (options) {
        for (const serviceuuid in options.services) {
          services.push(serviceuuid);
        }
      }
      let opts = {};
      if (!location)
        opts.androidNeverForLocation = false;
      return new Promise(async (res, rej) => {
        if (!this.initialized) {
          await this.client.initialize(opts);
          this.initialized = true;
        }
        if (options?.deviceId) {
          res(await this.reconnect(options.deviceId));
        } else {
          if (options) {
            let deviceRequest = { filters: [{ services }] };
            if (!this.isMobile())
              deviceRequest.optionalServices = services;
            if (options?.namePrefix)
              deviceRequest.filters[0].namePrefix = options.namePrefix;
            if (options?.name)
              deviceRequest.filters[0].name = options.name;
            this.client.requestDevice(deviceRequest).then((device) => {
              res(this.setupDevice(device, options));
            }).catch(rej);
          } else {
            this.client.requestDevice().then((device) => {
              res(this.setupDevice(device, options));
            }).catch(rej);
          }
        }
      });
    }
    initialize(options) {
      return new Promise((res, rej) => {
        this.client.initialize(options).then(() => {
          res(true);
        }).catch(rej);
      });
    }
    requestDevice(request, options) {
      return new Promise((res, rej) => {
        this.client.requestDevice(request).then((device) => {
          this.devices[device.deviceId] = { device, deviceId: device.deviceId, ...options };
          res(device);
        }).catch(rej);
      });
    }
    getServices(deviceId) {
      return this.client.getServices(deviceId);
    }
    connect(device, options) {
      return new Promise((res, rej) => {
        this.client.connect(device.deviceId, (deviceId) => {
          if (options?.ondisconnect)
            options.ondisconnect(deviceId);
        }, options?.connectOptions).then((connected) => {
          res(device);
        }).catch(rej);
      });
    }
    reconnect(deviceId, options) {
      return new Promise((res, rej) => {
        let android = this.isAndroid();
        let mobile = this.isMobile();
        console.log(deviceId);
        let opts = options;
        if (this.devices[deviceId])
          opts = Object.assign(Object.assign({}, this.devices[deviceId]), opts);
        if (opts?.deviceId)
          delete opts.deviceId;
        if (!mobile && !navigator.bluetooth?.getDevices) {
          this.setup(opts).then((device) => {
            res(device);
          });
        }
        if (android) {
          this.client.getDevices([deviceId]).then((devices) => {
            this.setupDevice(devices[0], opts).then((device) => {
              res(device);
            });
          }).catch(rej);
        }
      });
    }
    disconnect(device) {
      if (typeof device === "object") {
        if (device?.deviceId) {
          device = device.deviceId;
        }
        ;
      }
      if (typeof device === "string") {
        let info = this.devices[device];
        if (info.beforedisconnect)
          info.beforedisconnect(this, info);
        delete this.devices[device];
        return this.client.disconnect(device);
      }
    }
    write(device, service, characteristic, value, callback, options) {
      if (typeof device === "object")
        device = device.deviceId;
      if (callback) {
        return this.client.write(device, service, characteristic, BLEClient.toDataView(value)).then(callback);
      } else
        return this.client.writeWithoutResponse(device, service, characteristic, BLEClient.toDataView(value), options);
    }
    read(device, service, characteristic, ondata2, options) {
      if (typeof device === "object")
        device = device.deviceId;
      if (ondata2)
        return this.client.read(device, service, characteristic, options).then(ondata2);
      else
        return this.client.read(device, service, characteristic, options);
    }
    subscribe(device, service, characteristic, ondata2) {
      if (typeof device === "object")
        device = device.deviceId;
      return this.client.startNotifications(device, service, characteristic, ondata2);
    }
    unsubscribe(device, service, characteristic) {
      if (typeof device === "object")
        device = device.deviceId;
      return this.client.stopNotifications(device, service, characteristic);
    }
    scan(options, callback) {
      return this.client.requestLEScan(options, callback);
    }
    stopScanning() {
      return this.client.stopLEScan();
    }
    readDescriptor(device, service, characteristic, descriptor, options) {
      return this.client.readDescriptor(device.deviceId, service, characteristic, descriptor, options);
    }
    writeDescriptor(device, service, characteristic, descriptor, value, options) {
      return this.client.writeDescriptor(device.deviceId, service, characteristic, descriptor, BLEClient.toDataView(value), options);
    }
    readRssi(device) {
      return this.client.readRssi(device.deviceId);
    }
    isMobile() {
      let check = false;
      (function(a) {
        if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4)))
          check = true;
      })(navigator.userAgent || navigator.vendor || window.opera);
      return check;
    }
    isAndroid() {
      const device = navigator.userAgent.toLowerCase();
      return device.indexOf("android") > -1;
    }
    async distance(device, txPower, x3, exp, c) {
      let rssi = await this.readRssi(device);
      if (rssi == 0)
        return void 0;
      let ratio = rssi / txPower;
      if (ratio < 1) {
        return Math.pow(ratio, 10);
      } else {
        return x3 * Math.pow(ratio, exp) + c;
      }
    }
    async distanceFromPhone(device, txPower, model) {
      let x3, exp, c;
      if (model) {
        if (model === "nexus5") {
          x3 = 0.42093;
          exp = 6.9476;
          c = 0.54992;
        } else if (model === "motoX") {
          x3 = 0.9401940951;
          exp = 6.170094565;
          c = 0;
        } else if (model === "iphone5") {
          x3 = 0.89976;
          exp = 7.7095;
          c = 0.111;
        }
      }
      return await this.distance(device, txPower, x3, exp, c);
    }
  };
  var WebSerial = class extends ByteParser {
    constructor() {
      super(...arguments);
      this.streams = {};
      this.createStream = (options) => {
        let stream = { _id: options._id ? options._id : `stream${Math.floor(Math.random() * 1e15)}`, info: options.port.getInfo(), running: false, ...options };
        if (options.port?.readable) {
          if (options.transforms) {
            stream.reader = WebSerial.setStreamTransforms(options.port.readable, options.transforms).getReader();
          } else {
            stream.reader = options.port.readable.getReader();
          }
        }
        this.streams[stream._id] = stream;
        return stream;
      };
    }
    getPorts() {
      return navigator.serial.getPorts();
    }
    requestPort(usbVendorId, usbProductId) {
      let options = {};
      if (usbVendorId) {
        options.usbVendorId = usbVendorId;
      }
      if (usbProductId) {
        options.usbProductId = usbProductId;
      }
      if (options.usbVendorId)
        return navigator.serial.requestPort({ filters: [options] });
      else
        return navigator.serial.requestPort();
    }
    openPort(port, options) {
      if (options)
        options = Object.assign({}, options);
      if (options?.ondisconnect) {
        port.ondisconnect = options.ondisconnect;
        delete options.ondisconnect;
      }
      return port.open(options).then(() => {
        if (options?.onconnect)
          options.onconnect(port);
      });
    }
    async readWithTimeout(port, timeout) {
      const reader = port.readable.getReader();
      const timer = setTimeout(() => {
        reader.releaseLock();
      }, timeout);
      const result = await reader.read();
      clearTimeout(timer);
      reader.releaseLock();
      return result;
    }
    async writePort(port, message4) {
      const writer = port.writable.getWriter();
      await writer.write(WebSerial.toDataView(message4));
      writer.releaseLock();
      return true;
    }
    getSignals(port) {
      return port.getSignals();
    }
    setSignals(port, signals) {
      return port.setSignals(signals);
    }
    readStream(stream) {
      if (stream.reader && !stream.running) {
        let reader = stream.reader;
        if (stream.buffering) {
          if (typeof stream.buffering !== "object")
            stream.buffering = {};
          if (!stream.buffering.buffer) {
            stream.buffering.buffer = [];
          }
          if (!stream.buffering.searchBytes)
            stream.buffering.searchBytes = new Uint8Array([13, 10]);
        }
        let readLoop = () => {
          if (stream.port.readable && stream.running) {
            reader.read().then((result) => {
              if (result.done)
                reader.releaseLock();
              else {
                if (stream.buffering) {
                  stream.buffering.buffer.push(...result.value);
                  const needle = stream.buffering.searchBytes;
                  const haystack = stream.buffering.buffer;
                  const search = WebSerial.boyerMoore(needle);
                  const skip = search.byteLength;
                  let nextIndex = -1;
                  let used = stream.buffering.lockIdx ?? 0;
                  for (var i = search(haystack); i !== -1; i = search(haystack, i + skip)) {
                    if (!stream.buffering.locked && !("lockIdx" in stream.buffering))
                      used = stream.buffering.lockIdx = i;
                    else {
                      nextIndex = i;
                      if (nextIndex >= 0) {
                        const len = nextIndex - used;
                        if (!stream.buffering.locked) {
                          const line = stream.buffering.buffer.splice(stream.buffering.lockIdx, len);
                          const data = new Uint8Array(line.slice(stream.buffering.searchBytes.length));
                          stream.ondata(data);
                          stream.buffering.locked = true;
                        } else if (len > 0) {
                          const line = stream.buffering.buffer.splice(stream.buffering.lockIdx, len);
                          const data = new Uint8Array(line.slice(stream.buffering.searchBytes.length));
                          stream.ondata(new Uint8Array(data));
                        }
                        used = nextIndex;
                      }
                    }
                  }
                } else
                  stream.ondata(result.value);
                setTimeout(() => {
                  readLoop();
                }, stream.frequency);
              }
            }).catch((er) => {
              console.error(stream._id, " Read error:", er);
              if (er.message.includes("overrun") || er.message.includes("framing")) {
                delete stream.reader;
                this.reconnect(stream);
              }
            });
          } else if (!stream.running && stream.port.readable) {
            try {
              reader.releaseLock();
            } catch (er) {
              console.error(er);
            }
          }
        };
        stream.running = true;
        readLoop();
        return stream;
      }
      return void 0;
    }
    writeStream(stream, message4) {
      if (typeof stream === "string")
        stream = this.streams[stream];
      if (stream.port.writable) {
        let writer = stream.port.writable.getWriter();
        writer.write(WebSerial.toDataView(message4));
        writer.releaseLock();
        return true;
      }
      return void 0;
    }
    closeStream(stream, onclose) {
      if (typeof stream === "string")
        stream = this.streams[stream];
      stream.running = false;
      return new Promise((res, rej) => {
        if (stream.settings.beforedisconnect) {
          stream.settings.beforedisconnect(this, stream.port);
        }
        setTimeout(async () => {
          if (stream.port.readable && stream.reader) {
            try {
              stream.reader.releaseLock();
            } catch (er) {
              console.error(er);
            }
            if (stream.transforms)
              try {
                await stream.reader.cancel();
              } catch (err) {
                console.error(err);
              }
          }
          try {
            await stream.port.close().then(() => {
              if (onclose)
                onclose(this.streams[stream._id]);
            });
            delete this.streams[stream._id];
            res(true);
          } catch (er) {
            rej(er);
          }
        }, 300);
      });
    }
    reconnect(stream, options) {
      if (typeof stream === "string")
        stream = this.streams[stream];
      return new Promise((res, rej) => {
        if (typeof stream !== "object") {
          rej(void 0);
          return;
        }
        let info = stream.port.getInfo();
        this.closeStream(stream._id).then((closed) => {
          setTimeout(() => {
            this.getPorts().then((ports) => {
              for (let i = 0; i < ports.length; i++) {
                if (ports[i].getInfo().usbVendorId === info.usbVendorId && ports[i].getInfo().usbProductId === info.usbProductId) {
                  if (!options)
                    options = stream;
                  else
                    options._id = stream._id;
                  delete options.port;
                  this.openPort(ports[i], options.settings).then(() => {
                    const stream2 = this.createStream({ ...options, port: ports[i] });
                    this.readStream(stream2);
                    res(stream2);
                  }).catch(rej);
                }
              }
            }).catch(rej);
          }, 100);
        });
      });
    }
    static setStreamTransforms(stream, transforms) {
      let transform = [];
      Object.keys(transforms).forEach((t22) => {
        let opt = transforms[t22];
        if (opt instanceof TransformStream) {
          transform.push(opt);
        } else {
          if (!opt.start)
            opt.start = function start() {
            };
          if (!opt.flush)
            opt.flush = function flush() {
            };
          let transformer = new TransformStream({ start: opt.start, transform: opt.transform, flush: opt.flush }, opt.writableStrategy, opt.readableStrategy);
          transform.push(transformer);
        }
      });
      let str22 = stream;
      transform.forEach((transform2) => {
        str22 = str22.pipeThrough(transform2);
      });
      return str22;
    }
  };
  function ads131m08codec(data) {
    let arr;
    if (data.getInt8)
      arr = new Uint8Array(data.buffer);
    else if (!data.buffer)
      arr = new Uint8Array(data);
    else
      arr = data;
    let output = { 0: new Array(9), 1: new Array(9), 2: new Array(9), 3: new Array(9), 4: new Array(9), 5: new Array(9), 6: new Array(9), 7: new Array(9), timestamp: Date.now() };
    for (let i = 0; i < 9; i++) {
      let j = i * 25;
      output[0][i] = ByteParser.bytesToInt24(arr[j], arr[j + 1], arr[j + 2]);
      output[1][i] = ByteParser.bytesToInt24(arr[j + 3], arr[j + 4], arr[j + 5]);
      output[2][i] = ByteParser.bytesToInt24(arr[j + 6], arr[j + 7], arr[j + 8]);
      output[3][i] = ByteParser.bytesToInt24(arr[j + 9], arr[j + 10], arr[j + 11]);
      output[4][i] = ByteParser.bytesToInt24(arr[j + 12], arr[j + 13], arr[j + 14]);
      output[5][i] = ByteParser.bytesToInt24(arr[j + 15], arr[j + 16], arr[j + 17]);
      output[6][i] = ByteParser.bytesToInt24(arr[j + 18], arr[j + 19], arr[j + 20]);
      output[7][i] = ByteParser.bytesToInt24(arr[j + 21], arr[j + 22], arr[j + 23]);
    }
    return output;
  }
  var decoder = new TextDecoder();
  var sps = 250;
  var defaultChartSetting = { nSec: 10, sps, units: "mV" };
  var ads131m08ChartSettings = { lines: { "0": JSON.parse(JSON.stringify(defaultChartSetting)), "1": JSON.parse(JSON.stringify(defaultChartSetting)), "2": JSON.parse(JSON.stringify(defaultChartSetting)), "3": JSON.parse(JSON.stringify(defaultChartSetting)), "4": JSON.parse(JSON.stringify(defaultChartSetting)), "5": JSON.parse(JSON.stringify(defaultChartSetting)), "6": JSON.parse(JSON.stringify(defaultChartSetting)), "7": JSON.parse(JSON.stringify(defaultChartSetting)) } };
  var gain = 32;
  var nbits = 24;
  var vref = 1.2;
  var defaultsetting = { sps, useDCBlock: false, useBandpass: false, bandpassLower: 3, bandpassUpper: 45, useScaling: true, scalar: 0.96 * 1e3 * vref / (gain * (Math.pow(2, nbits) - 1)) };
  var ads131m08FilterSettings = { "0": JSON.parse(JSON.stringify(defaultsetting)), "1": JSON.parse(JSON.stringify(defaultsetting)), "2": JSON.parse(JSON.stringify(defaultsetting)), "3": JSON.parse(JSON.stringify(defaultsetting)), "4": JSON.parse(JSON.stringify(defaultsetting)), "5": JSON.parse(JSON.stringify(defaultsetting)), "6": JSON.parse(JSON.stringify(defaultsetting)), "7": JSON.parse(JSON.stringify(defaultsetting)) };
  var accScale = 2e-3 / Math.pow(2, 4);
  var getAcc = (arr, output, channels = 8) => {
    const accIdx = channels * 3 + 1;
    const sum = (a, b2) => a + b2;
    const accSum = arr.slice(accIdx).reduce(sum, 0);
    if (accSum !== 0) {
      output.ax = accScale * ByteParser.bytesToInt16(arr[accIdx], arr[accIdx + 1]);
      output.ay = accScale * ByteParser.bytesToInt16(arr[accIdx + 2], arr[accIdx + 3]);
      output.az = accScale * ByteParser.bytesToInt16(arr[accIdx + 4], arr[accIdx + 5]);
    }
  };
  function cytoncodec(data) {
    let arr;
    if (!data.buffer)
      arr = new Uint8Array(data);
    else
      arr = data;
    let output = {};
    for (let i = 0; i < 8; i++) {
      let idx = 1 + 3 * i;
      output[i] = ByteParser.bytesToInt24(arr[idx], arr[idx + 1], arr[idx + 2]);
    }
    getAcc(arr, output);
    output.timestamp = Date.now();
    return output;
  }
  function daisycytoncodec(data) {
    let arr;
    if (data.getInt8)
      arr = new Uint8Array(data.buffer);
    else if (!data.buffer)
      arr = new Uint8Array(data);
    else
      arr = data;
    let output = {};
    for (let i = 0; i < 8; i++) {
      let idx = 1 + 3 * i;
      if (arr[0] % 2 === 0)
        output[i + 7] = ByteParser.bytesToInt24(arr[idx], arr[idx + 1], arr[idx + 2]);
      else
        output[i] = ByteParser.bytesToInt24(arr[idx], arr[idx + 1], arr[idx + 2]);
    }
    getAcc(arr, output);
    return output;
  }
  var sps2 = 250;
  var cytonSerialSettings = { baudRate: 115200, codec: cytoncodec, write: "b", beforedisconnect: (client, port) => {
    client.writePort(port, "s");
  }, buffering: { searchBytes: new Uint8Array([192, 160]) }, sps: sps2 };
  var daisycytonSerialSettings = { baudRate: 115200, codec: daisycytoncodec, write: "b", beforedisconnect: (client, port) => {
    client.writePort(port, "s");
  }, buffering: { searchBytes: new Uint8Array([192, 160]) }, sps: sps2 };
  var defaultChartSetting2 = { nSec: 10, sps: sps2, units: "mV" };
  var defaultChartSetting22 = { nSec: 10, sps: sps2 };
  var cytonChartSettings = { lines: { "0": JSON.parse(JSON.stringify(defaultChartSetting2)), "1": JSON.parse(JSON.stringify(defaultChartSetting2)), "2": JSON.parse(JSON.stringify(defaultChartSetting2)), "3": JSON.parse(JSON.stringify(defaultChartSetting2)), "4": JSON.parse(JSON.stringify(defaultChartSetting2)), "5": JSON.parse(JSON.stringify(defaultChartSetting2)), "6": JSON.parse(JSON.stringify(defaultChartSetting2)), "7": JSON.parse(JSON.stringify(defaultChartSetting2)), "ax": JSON.parse(JSON.stringify(defaultChartSetting22)), "ay": JSON.parse(JSON.stringify(defaultChartSetting22)), "az": JSON.parse(JSON.stringify(defaultChartSetting22)) }, generateNewLines: true };
  var defaultsetting2 = { sps: sps2, useDCBlock: true, useBandpass: true, bandpassLower: 3, bandpassUpper: 45, useScaling: true, scalar: 1e3 * 4.5 / (24 * (Math.pow(2, 23) - 1)) };
  var cytonFilterSettings = { "0": JSON.parse(JSON.stringify(defaultsetting2)), "1": JSON.parse(JSON.stringify(defaultsetting2)), "2": JSON.parse(JSON.stringify(defaultsetting2)), "3": JSON.parse(JSON.stringify(defaultsetting2)), "4": JSON.parse(JSON.stringify(defaultsetting2)), "5": JSON.parse(JSON.stringify(defaultsetting2)), "6": JSON.parse(JSON.stringify(defaultsetting2)), "7": JSON.parse(JSON.stringify(defaultsetting2)), "8": JSON.parse(JSON.stringify(defaultsetting2)), "9": JSON.parse(JSON.stringify(defaultsetting2)), "10": JSON.parse(JSON.stringify(defaultsetting2)), "11": JSON.parse(JSON.stringify(defaultsetting2)), "12": JSON.parse(JSON.stringify(defaultsetting2)), "13": JSON.parse(JSON.stringify(defaultsetting2)), "14": JSON.parse(JSON.stringify(defaultsetting2)), "15": JSON.parse(JSON.stringify(defaultsetting2)) };
  function freeeeg128codec(data) {
    let arr;
    if (data.getInt8)
      arr = new Uint8Array(data.buffer);
    else if (!data.buffer)
      arr = new Uint8Array(data);
    else
      arr = data;
    let output = {};
    for (let i = 0; i < 128; i++) {
      let idx = i * 3 + 1;
      output[i] = ByteParser.bytesToInt24(arr[idx], arr[idx + 1], arr[idx + 2]);
    }
    let accIdx = 385;
    output["ax"] = ByteParser.bytesToInt16(arr[accIdx], arr[accIdx + 1]);
    output["ay"] = ByteParser.bytesToInt16(arr[accIdx + 2], arr[accIdx + 3]);
    output["az"] = ByteParser.bytesToInt16(arr[accIdx + 4], arr[accIdx + 5]);
    output["gx"] = ByteParser.bytesToInt16(arr[accIdx + 6], arr[accIdx + 7]);
    output["gy"] = ByteParser.bytesToInt16(arr[accIdx + 8], arr[accIdx + 9]);
    output["gz"] = ByteParser.bytesToInt16(arr[accIdx + 10], arr[accIdx + 11]);
    output.timestamp = Date.now();
    return output;
  }
  var sps3 = 250;
  var freeeeg128SerialSettings = { baudRate: 921600, bufferSize: 2e3, frequency: 1.9, codec: freeeeg128codec, sps: sps3, buffering: { searchBytes: new Uint8Array([192, 160]) } };
  var freeeeg128ChartSettings = { lines: { "ax": { nSec: 10, sps: sps3 }, "ay": { nSec: 10, sps: sps3 }, "az": { nSec: 10, sps: sps3 }, "gx": { nSec: 10, sps: sps3 }, "gy": { nSec: 10, sps: sps3 }, "gz": { nSec: 10, sps: sps3 } } };
  var freeeeg128FilterSettings = {};
  for (let i = 0; i < 128; i++) {
    freeeeg128ChartSettings.lines[i] = { sps: sps3, nSec: 10, units: "mV" };
    freeeeg128FilterSettings[i] = { sps: 250, useDCBlock: true, useBandpass: true, bandpassLower: 3, bandpassUpper: 45, scalar: 1e3 * 2.5 / (32 * (Math.pow(2, 24) - 1)) };
  }
  function freeeeg32codec(data) {
    let arr;
    if (data.getInt8)
      arr = new Uint8Array(data.buffer);
    else if (!data.buffer)
      arr = new Uint8Array(data);
    else
      arr = data;
    let output = {};
    for (let i = 0; i < 32; i++) {
      let idx = i * 3 + 1;
      output[i] = ByteParser.bytesToInt24(arr[idx], arr[idx + 1], arr[idx + 2]);
    }
    let accIdx = 97;
    output["ax"] = ByteParser.bytesToInt16(arr[accIdx], arr[accIdx + 1]);
    output["ay"] = ByteParser.bytesToInt16(arr[accIdx + 2], arr[accIdx + 3]);
    output["az"] = ByteParser.bytesToInt16(arr[accIdx + 4], arr[accIdx + 5]);
    output["gx"] = ByteParser.bytesToInt16(arr[accIdx + 6], arr[accIdx + 7]);
    output["gy"] = ByteParser.bytesToInt16(arr[accIdx + 8], arr[accIdx + 9]);
    output["gz"] = ByteParser.bytesToInt16(arr[accIdx + 10], arr[accIdx + 11]);
    output.timestamp = Date.now();
    return output;
  }
  var sps4 = 512;
  var freeeeg32SerialSettings = { baudRate: 921600, bufferSize: 2e3, frequency: 1.9, codec: freeeeg32codec, sps: sps4, buffering: { searchBytes: new Uint8Array([192, 160]) } };
  var freeeeg32_optical_SerialSettings = { baudRate: 1e6, bufferSize: 2e3, frequency: 1.9, codec: freeeeg32codec, sps: sps4, buffering: { searchBytes: new Uint8Array([192, 160]) } };
  var defaultChartSetting3 = { nSec: 10, sps: sps4 };
  var freeeeg32ChartSettings = { lines: { "ax": JSON.parse(JSON.stringify(defaultChartSetting3)), "ay": JSON.parse(JSON.stringify(defaultChartSetting3)), "az": JSON.parse(JSON.stringify(defaultChartSetting3)), "gx": JSON.parse(JSON.stringify(defaultChartSetting3)), "gy": JSON.parse(JSON.stringify(defaultChartSetting3)), "gz": JSON.parse(JSON.stringify(defaultChartSetting3)) } };
  var freeeeg32FilterSettings = {};
  for (let i = 0; i < 32; i++) {
    freeeeg32ChartSettings.lines[i] = { sps: sps4, nSec: 10, units: "mV" };
    freeeeg32FilterSettings[i] = { sps: sps4, useDCBlock: true, useBandpass: true, bandpassLower: 3, bandpassUpper: 45, useScaling: true, scalar: 1e3 * 2.5 / (8 * (Math.pow(2, 24) - 1)) };
  }
  var textdecoder = new TextDecoder();
  function hegduinocodec(value) {
    let output = { timestamp: 0, red: 0, infrared: 0, heg: 0, ambient: 0, temperature: 0 };
    let txt = textdecoder.decode(value);
    let line = txt.split("|");
    if (line.length === 3) {
      output.timestamp = Date.now();
      output.red = parseInt(line[0]);
      output.infrared = parseInt(line[1]);
      output.heg = parseFloat(line[2]);
    } else if (line.length >= 2) {
      output.timestamp = Date.now();
      output.red = parseInt(line[1]);
      output.infrared = parseInt(line[2]);
      output.heg = parseFloat(line[3]);
      if (line[4])
        output.ambient = parseFloat(line[4]);
      if (line[5])
        output.temperature = parseFloat(line[5]);
      return output;
    } else
      return txt;
  }
  var sps5 = 40;
  var hegduinoSerialSettings = { baudRate: 115200, write: "t\n", codec: hegduinocodec, sps: sps5 };
  var hegduinoV1SerialSettings = Object.assign({}, hegduinoSerialSettings);
  hegduinoV1SerialSettings.sps = 19;
  var hegduinoBLESettings = { sps: sps5, services: { ["6E400001-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]: { "6e400002-b5a3-f393-e0a9-e50e24dcca9e": { write: "t" }, "6e400003-b5a3-f393-e0a9-e50e24dcca9e": { notify: true, notifyCallback: void 0, codec: hegduinocodec, sps: sps5 } }, ["6E400004-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]: { ["6E400005-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]: { read: true }, ["6E400006-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]: { write: void 0, notify: true, notifyCallback: void 0 }, ["6E400007-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]: { read: true } } }, androidWebBLE: "o" };
  var hegduinoV1BLESettings = Object.assign({}, hegduinoSerialSettings);
  hegduinoV1BLESettings.sps = 19;
  function max3010xcodec(data) {
    let arr;
    if (data.getInt8)
      arr = new Uint8Array(data.buffer);
    else if (!data.buffer)
      arr = new Uint8Array(data);
    else
      arr = data;
    let pktCt = 32;
    const output = { "red": new Array(pktCt), "ir": new Array(pktCt), "max_dietemp": ByteParser.get2sCompliment(arr[193], 8) + 0.0625 * arr[194], "timestamp": Date.now() };
    let i = 0;
    while (i < pktCt) {
      let idx = i * 6;
      if (i % 2 === 0) {
        output["ir"][i] = (arr[idx + 1] << 16 | arr[idx + 2] << 8 | arr[idx + 3]) & 524287;
        output["ir"][i + 1] = (arr[idx + 4] << 16 | arr[idx + 5] << 8 | arr[idx + 6]) & 524287;
      } else {
        output["red"][i - 1] = (arr[idx + 1] << 16 | arr[idx + 2] << 8 | arr[idx + 3]) & 524287;
        output["red"][i] = (arr[idx + 4] << 16 | arr[idx + 5] << 8 | arr[idx + 6]) & 524287;
      }
      i++;
    }
    return output;
  }
  function mpu6050codec(data) {
    let arr;
    if (data.getInt8)
      arr = new Uint8Array(data.buffer);
    else if (!data.buffer)
      arr = new Uint8Array(data);
    else
      arr = data;
    let output = { "ax": new Array(20), "ay": new Array(20), "az": new Array(20), "gx": new Array(20), "gy": new Array(20), "gz": new Array(20), "mpu_dietemp": (ByteParser.bytesToInt16(arr[241], arr[242]) + 521) / 340 + 35, timestamp: Date.now() };
    for (let i = 0; i < 20; i++) {
      let idx = i * 12;
      output.ax[i] = ByteParser.bytesToInt16(arr[idx + 1], arr[idx + 2]);
      output.ay[i] = ByteParser.bytesToInt16(arr[idx + 3], arr[idx + 4]);
      output.az[i] = ByteParser.bytesToInt16(arr[idx + 5], arr[idx + 6]);
      output.gx[i] = ByteParser.bytesToInt16(arr[idx + 7], arr[idx + 8]);
      output.gy[i] = ByteParser.bytesToInt16(arr[idx + 9], arr[idx + 10]);
      output.gz[i] = ByteParser.bytesToInt16(arr[idx + 11], arr[idx + 12]);
    }
    return output;
  }
  function cognixionONE_EEG_codec(data) {
    let arr;
    if (data.getInt8)
      arr = new Uint8Array(data.buffer);
    else if (!data.buffer)
      arr = new Uint8Array(data);
    else
      arr = data;
    let output = { 0: new Array(), 1: new Array(), 2: new Array(), 3: new Array(), 4: new Array(), 5: new Array(), 6: new Array(), 7: new Array(), timestamp: Date.now() };
    for (let i = 0; i < 7; i++) {
      let j = i * 26 + 1;
      if (!arr[j + 23])
        break;
      output[0][i] = ByteParser.bytesToUInt24(arr[j], arr[j + 1], arr[j + 2]);
      output[1][i] = ByteParser.bytesToUInt24(arr[j + 3], arr[j + 4], arr[j + 5]);
      output[2][i] = ByteParser.bytesToUInt24(arr[j + 6], arr[j + 7], arr[j + 8]);
      output[3][i] = ByteParser.bytesToUInt24(arr[j + 9], arr[j + 10], arr[j + 11]);
      output[4][i] = ByteParser.bytesToUInt24(arr[j + 12], arr[j + 13], arr[j + 14]);
      output[5][i] = ByteParser.bytesToUInt24(arr[j + 15], arr[j + 16], arr[j + 17]);
      output[6][i] = ByteParser.bytesToUInt24(arr[j + 18], arr[j + 19], arr[j + 20]);
      output[7][i] = ByteParser.bytesToUInt24(arr[j + 21], arr[j + 22], arr[j + 23]);
    }
    return output;
  }
  var sps7 = 250;
  var cognixionONEBLESettings = { services: { ["82046698-6313-4BB1-9645-6BA28BF86DF5".toLowerCase()]: { ["8204669A-6313-4BB1-9645-6BA28BF86DF5".toLowerCase()]: { notify: true, notifyCallback: void 0, codec: cognixionONE_EEG_codec, sps: sps7 } }, ["82E12914-9AFA-4648-BD1B-8E2B3DC6DAAF".toLowerCase()]: { ["82E12915-9AFA-4648-BD1B-8E2B3DC6DAAF".toLowerCase()]: { write: void 0 }, ["82E12916-9AFA-4648-BD1B-8E2B3DC6DAAF".toLowerCase()]: { read: true } } }, sps: sps7 };
  var defaultChartSetting4 = { nSec: 10, sps: sps7, units: "mV" };
  var cognixionONEChartSettings = { lines: { "0": JSON.parse(JSON.stringify(defaultChartSetting4)), "1": JSON.parse(JSON.stringify(defaultChartSetting4)), "2": JSON.parse(JSON.stringify(defaultChartSetting4)), "3": JSON.parse(JSON.stringify(defaultChartSetting4)), "4": JSON.parse(JSON.stringify(defaultChartSetting4)), "5": JSON.parse(JSON.stringify(defaultChartSetting4)), "6": JSON.parse(JSON.stringify(defaultChartSetting4)), "7": JSON.parse(JSON.stringify(defaultChartSetting4)) } };
  var PeanutCodes = { 2: { type: "POOR_SIGNAL", format: "<B", byteLength: 1 }, 144: { type: "heg", format: "<i", byteLength: 4 }, 145: { type: "filteredHEG", format: "<i", byteLength: 4 }, 147: { type: "rawdata4", format: "<iiii", byteLength: 4 * 4 }, 148: { type: "rawdata6", format: "<iiiiii", byteLength: 4 * 6 }, 160: { type: "sampleNumber", format: "<i", byteLength: 4 }, 176: { type: "debug0", format: "<i", byteLength: 4 }, 177: { type: "debug1", format: "<i", byteLength: 4 }, 178: { type: "debug2", format: "<i", byteLength: 4 }, 179: { type: "debug3", format: "<i", byteLength: 4 }, 180: { type: "debug4", format: "<iiiiii", byteLength: 4 * 6 }, 181: { type: "debug4", format: "<iiiiii", byteLength: 4 * 6 }, 182: { type: "rawdata27", format: "<B" + "i".repeat(26), byteLength: 1 + 4 * 26 } };
  function peanutcodec(data) {
    let result = {};
    let i = 0;
    while (i < data.length) {
      if (PeanutCodes[data[i]] && i + 1 + PeanutCodes[data[i]].byteLength <= data.length) {
        let slice = data.slice(i + 1, i + 1 + PeanutCodes[data[i]].byteLength).buffer;
        let unpacked = ByteParser.struct(PeanutCodes[data[i]].format).unpack(slice);
        let code = PeanutCodes[data[i]].type;
        if (code === "unfilteredHEG" || code === "heg")
          unpacked = unpacked[0] / 256;
        else if (code === "POOR_SIGNAL" || code === "sampleNumber" || code === "debug0" || code === "debug1" || code === "debug2" || code === "debug3")
          unpacked = unpacked[0];
        if (!result[PeanutCodes[data[i]].type]) {
          if (Array.isArray(unpacked))
            result[PeanutCodes[data[i]].type] = unpacked;
          else
            result[PeanutCodes[data[i]].type] = [unpacked];
        } else {
          if (Array.isArray(unpacked))
            result[PeanutCodes[data[i]].type].push(...unpacked);
          else
            result[PeanutCodes[data[i]].type].push(unpacked);
        }
        i += PeanutCodes[data[i]].byteLength + 1;
      } else
        i++;
    }
    result.timestamp = Date.now();
    return result;
  }
  var peanutSerialSettings = { baudRate: 38400, bufferSize: 400, write: "protocol 3\n", buffering: { searchBytes: new Uint8Array([170, 170]) }, codec: peanutcodec, sps: 10.101 };
  var sealevel_hpa = 1013.25;
  var bme280codec = (data) => {
    let arr;
    if (data.getInt8)
      arr = new Uint8Array(data.buffer);
    else if (!data.buffer)
      arr = new Uint8Array(data);
    else
      arr = data;
    let output = { timestamp: Date.now(), temp: [], pressure: [], altitude: [] };
    let mode = 0;
    if (arr[0].length === 74)
      mode = 1;
    if (!mode) {
      for (let j = 0; j < 3; j++) {
        let i = j * 16 + 2;
        let tint = ByteParser.bytesToInt32(arr[3 + i], arr[2 + i], arr[1 + i], arr[0 + i]);
        let tfrac = ByteParser.bytesToInt32(arr[7 + i], arr[6 + i], arr[5 + i], arr[4 + i]);
        output.temp.push(tint + tfrac / Math.pow(10, Math.ceil(Math.log10(tfrac))));
        let pint = 10 * ByteParser.bytesToInt32(arr[11 + i], arr[10 + i], arr[9 + i], arr[8 + i]);
        let pfrac = ByteParser.bytesToInt32(arr[15 + i], arr[14 + i], arr[13 + i], arr[12 + i]);
        output.pressure.push(pint + pfrac / Math.pow(10, Math.ceil(Math.log10(pfrac))));
        output.altitude.push(altitude(output.pressure[j], output.temp[j]));
      }
    } else {
      output.humidity = [];
      for (let j = 0; j < 3; j++) {
        let i = j * 24 + 2;
        let tint = ByteParser.bytesToInt32(arr[3 + i], arr[2 + i], arr[1 + i], arr[0 + i]);
        let tfrac = ByteParser.bytesToInt32(arr[7 + i], arr[6 + i], arr[5 + i], arr[4 + i]);
        output.temp.push(tint + tfrac / Math.pow(10, Math.ceil(Math.log10(tfrac))));
        let pint = 10 * ByteParser.bytesToInt32(arr[11 + i], arr[10 + i], arr[9 + i], arr[8 + i]);
        let pfrac = ByteParser.bytesToInt32(arr[15 + i], arr[14 + i], arr[13 + i], arr[12 + i]);
        output.pressure.push(pint + pfrac / Math.pow(10, Math.ceil(Math.log10(pfrac))));
        let hint = ByteParser.bytesToInt32(arr[19 + i], arr[18 + i], arr[17 + i], arr[16 + i]);
        let hfrac = ByteParser.bytesToInt32(arr[23 + i], arr[22 + i], arr[21 + i], arr[20 + i]);
        output.humidity.push(hint + hfrac / Math.pow(10, Math.ceil(Math.log10(hfrac))));
        output.altitude.push(altitude(output.pressure[j], output.temp[j]));
      }
    }
    return output;
  };
  function altitude(pressure, temperature) {
    return 44330 * (1 - Math.pow(pressure / sealevel_hpa, 0.1903));
  }
  function nrf5x_usbcodec(data) {
    let arr;
    if (data.getInt8)
      arr = new Uint8Array(data.buffer);
    else if (!data.buffer)
      arr = new Uint8Array(data);
    else
      arr = data;
    const output = {};
    if (arr[0] === 2) {
      Object.assign(output, ads131m08codec(arr.subarray(2)));
    } else if (arr[0] === 3) {
      let result = ads131m08codec(arr.subarray(2));
      Object.keys(result).forEach((key, i) => {
        output[i + 8] = result[key];
      });
    } else if (arr[0] === 4) {
      Object.assign(output, mpu6050codec(arr.subarray(2)));
    } else if (arr[0] === 5) {
      Object.assign(output, max3010xcodec(arr.subarray(2)));
    } else if (arr[0] === 6) {
      Object.assign(output, bme280codec(arr.subarray(2)));
    } else {
      Object.assign(output, ads131m08codec(arr));
    }
    return output;
  }
  var nrf5xSerialSettings = { baudRate: 115200, buffering: { searchBytes: new Uint8Array([240, 240]) }, codec: nrf5x_usbcodec, sps: 250 };
  var nrf5xBLESettings = { sps: 250, services: { "0000cafe-b0ba-8bad-f00d-deadbeef0000": { "0001cafe-b0ba-8bad-f00d-deadbeef0000": { write: void 0 }, "0002cafe-b0ba-8bad-f00d-deadbeef0000": { notify: true, notifyCallback: void 0, codec: ads131m08codec, sps: 250 }, "0003cafe-b0ba-8bad-f00d-deadbeef0000": { notify: true, notifyCallback: void 0, codec: max3010xcodec, sps: 100 }, "0004cafe-b0ba-8bad-f00d-deadbeef0000": { notify: true, notifyCallback: void 0, codec: mpu6050codec, sps: 100 }, "0005cafe-b0ba-8bad-f00d-deadbeef0000": { notify: true, notifyCallback: void 0, codec: ads131m08codec, sps: 250 }, "0006cafe-b0ba-8bad-f00d-deadbeef0000": { notify: true, notifyCallback: void 0, codec: bme280codec, sps: 3.33 } } } };
  var defaultChartSetting5 = { nSec: 10, sps: 250, units: "mV" };
  var nrf5x_usbChartSettings = { lines: { "0": JSON.parse(JSON.stringify(defaultChartSetting5)), "1": JSON.parse(JSON.stringify(defaultChartSetting5)), "2": JSON.parse(JSON.stringify(defaultChartSetting5)), "3": JSON.parse(JSON.stringify(defaultChartSetting5)), "4": JSON.parse(JSON.stringify(defaultChartSetting5)), "5": JSON.parse(JSON.stringify(defaultChartSetting5)), "6": JSON.parse(JSON.stringify(defaultChartSetting5)), "7": JSON.parse(JSON.stringify(defaultChartSetting5)) }, generateNewLines: true, cleanGeneration: false };
  var gain2 = 32;
  var nbits2 = 24;
  var vref2 = 1.2;
  var defaultsetting3 = { sps: 250, useDCBlock: false, useBandpass: false, bandpassLower: 3, bandpassUpper: 45, useScaling: true, scalar: 0.96 * 1e3 * vref2 / (gain2 * (Math.pow(2, nbits2) - 1)) };
  var nrf5x_usbFilterSettings = { "0": JSON.parse(JSON.stringify(defaultsetting3)), "1": JSON.parse(JSON.stringify(defaultsetting3)), "2": JSON.parse(JSON.stringify(defaultsetting3)), "3": JSON.parse(JSON.stringify(defaultsetting3)), "4": JSON.parse(JSON.stringify(defaultsetting3)), "5": JSON.parse(JSON.stringify(defaultsetting3)), "6": JSON.parse(JSON.stringify(defaultsetting3)), "7": JSON.parse(JSON.stringify(defaultsetting3)), "8": JSON.parse(JSON.stringify(defaultsetting3)), "9": JSON.parse(JSON.stringify(defaultsetting3)), "10": JSON.parse(JSON.stringify(defaultsetting3)), "11": JSON.parse(JSON.stringify(defaultsetting3)), "12": JSON.parse(JSON.stringify(defaultsetting3)), "13": JSON.parse(JSON.stringify(defaultsetting3)), "14": JSON.parse(JSON.stringify(defaultsetting3)), "15": JSON.parse(JSON.stringify(defaultsetting3)) };
  var textdecoder2 = new TextDecoder();
  function statechangercodec(value) {
    let output = { timestamp: 0, left_red: 0, left_infrared: 0, left_heg: 0, center_red: 0, center_infrared: 0, center_heg: 0, right_red: 0, right_infrared: 0, right_heg: 0 };
    let txt = textdecoder2.decode(value);
    let line = txt.split("|");
    if (line.length >= 5) {
      output.timestamp = Date.now();
      output.left_red = parseInt(line[1]);
      output.left_infrared = parseInt(line[2]);
      output.left_heg = parseFloat(line[3]);
      output.center_red = parseInt(line[4]);
      output.center_infrared = parseInt(line[5]);
      output.center_heg = parseFloat(line[6]);
      output.right_red = parseInt(line[7]);
      output.right_infrared = parseInt(line[8]);
      output.right_heg = parseFloat(line[9]);
      return output;
    } else
      return txt;
  }
  var statechangerSerialSettings = { baudRate: 115200, codec: statechangercodec };
  var statechangerBLESettings = { services: { ["6E400001-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]: { "6e400002-b5a3-f393-e0a9-e50e24dcca9e": { write: "t" }, "6e400003-b5a3-f393-e0a9-e50e24dcca9e": { notify: true, notifyCallback: void 0, codec: statechangercodec } }, ["6E400004-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]: { ["6E400005-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]: { read: true }, ["6E400006-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]: { write: void 0, notify: true, notifyCallback: void 0 }, ["6E400007-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]: { read: true } } }, androidWebBLE: "o" };
  function blueberrycodec(value) {
    let output = { red: value.getInt32(2), ir: value.getInt32(6), ir2: value.getInt32(10), timestamp: Date.now() };
    output.heg = output.red / (0.5 * (output.ir + output.ir2));
    return output;
  }
  var sps8 = 40;
  var blueberryBLESettings = { namePrefix: "blueberry", services: { "0f0e0d0c-0b0a-0908-0706-050403020100": { "1f1e1d1c-1b1a-1918-1716-151413121110": { write: void 0 }, "3f3e3d3c-3b3a-3938-3736-353433323130": { notify: true, notifyCallback: void 0, codec: blueberrycodec, sps: sps8 } } }, sps: sps8 };
  function blueberryshortcodec(value) {
    let output = { sred: value.getInt32(2), sir: value.getInt32(6), sir2: value.getInt32(10), timestamp: Date.now() };
    output.sheg = output.sred / (0.5 * (output.sir + output.sir2));
    return output;
  }
  function blueberrylongcodec(value) {
    let output = { red: value.getInt32(2), ir: value.getInt32(6), ir2: value.getInt32(10), timestamp: Date.now() };
    output.heg = output.sred / (0.5 * (output.ir + output.ir2));
    return output;
  }
  var sps9 = 40;
  var blueberry2BLESettings = { namePrefix: "blueberry", services: { "0f0e0d0c-0b0a-0908-0706-050403020100": { "1f1e1d1c-1b1a-1918-1716-151413121110": { write: void 0 }, "4f4e4d4c-4b6a-6968-6766-656463426160": { notify: true, notifyCallback: void 0, codec: blueberrylongcodec, sps: sps9 }, "4f4e4d4c-4b5a-5958-5756-555453425150": { notify: true, notifyCallback: void 0, codec: blueberryshortcodec, sps: sps9 } } }, sps: sps9 };
  var defaultsetting1 = { sps: 250, useDCBlock: true, useBandpass: true, bandpassLower: 3, bandpassUpper: 45 };
  var ganglionFilterSettings = { "0": JSON.parse(JSON.stringify(defaultsetting1)), "1": JSON.parse(JSON.stringify(defaultsetting1)), "2": JSON.parse(JSON.stringify(defaultsetting1)), "3": JSON.parse(JSON.stringify(defaultsetting1)) };
  var defaultChartSetting6 = { nSec: 10, sps: 250, units: "mV" };
  var ganglionChartSettings = { lines: { "0": JSON.parse(JSON.stringify(defaultChartSetting6)), "1": JSON.parse(JSON.stringify(defaultChartSetting6)), "2": JSON.parse(JSON.stringify(defaultChartSetting6)), "3": JSON.parse(JSON.stringify(defaultChartSetting6)), "ax": { nSec: 10, sps: 250, units: "mg" }, "ay": { nSec: 10, sps: 250, units: "mg" }, "az": { nSec: 10, sps: 250, units: "mg" } }, generateNewLines: true };
  var defaultsetting4 = { sps: 250, useDCBlock: true, useBandpass: true, bandpassLower: 3, bandpassUpper: 45 };
  var museFilterSettings = { "0": JSON.parse(JSON.stringify(defaultsetting4)), "1": JSON.parse(JSON.stringify(defaultsetting4)), "2": JSON.parse(JSON.stringify(defaultsetting4)), "3": JSON.parse(JSON.stringify(defaultsetting4)), "4": JSON.parse(JSON.stringify(defaultsetting4)) };
  function hrcodec(data) {
    return { hr: data.getInt8(1), timestamp: Date.now() };
  }
  var heartRateBLESettings = { services: { "heart_rate": { "heart_rate_measurement": { notify: true, notifyCallback: void 0, codec: hrcodec } } } };
  var simulatorSettings = { sps: 250, simulate: { "0": { sps: 250, freq: 1, amplitude: 1, offset: 0 }, "1": { sps: 250, freq: 10, amplitude: 1, offset: 0 }, "2": { sps: 250, freq: 100, amplitude: 0.5, offset: 0.5 }, "3": { sps: 250, freq: 25, amplitude: 1, offset: 0 } }, connect: (settings = {}) => {
    return new Promise(async (res, rej) => {
      let _id = `simulated${Math.floor(Math.random() * 1e15)}`;
      let info = { _id, settings: Object.assign(Object.assign({}, simulatorSettings), settings) };
      info.settings.looping = true;
      let loopTime = 50;
      let lastTime = Date.now();
      let loop22 = () => {
        if (info.settings.looping) {
          let newData = {};
          let now = Date.now();
          let frame = now - lastTime;
          for (const key in info.settings.simulate) {
            let newPoints = Math.floor(info.settings.simulate[key].sps * frame / 1e3);
            newData[key] = new Array(newPoints).fill(0);
            newData[key] = newData[key].map((v2, i) => {
              return Math.sin(2 * Math.PI * info.settings.simulate[key].freq * 1e-3 * (lastTime + frame * (i + 1) / newPoints)) * info.settings.simulate[key].amplitude + info.settings.simulate[key].offset;
            });
          }
          lastTime = now;
          newData.timestamp = lastTime;
          info.settings.ondata(newData);
          setTimeout(() => {
            loop22();
          }, loopTime);
        }
      };
      loop22();
      if (info.settings.onconnect)
        info.settings.onconnect(info);
      res(info);
    });
  }, codec: (reading) => {
    return reading;
  }, disconnect: (info) => {
    console.log(info);
    info.settings.looping = false;
    info.settings.ondisconnect(info);
  }, onconnect: (info) => {
    console.log("simulator connected!", info);
  }, ondisconnect: (info) => {
    console.log("simulator disconnected!", info);
  }, ondata: (data) => {
  } };
  var Devices = { BLE: { "nrf5x": nrf5xBLESettings, "hegduino": hegduinoBLESettings, "hegduinoV1": hegduinoV1BLESettings, "cognixionONE": cognixionONEBLESettings, "statechanger": statechangerBLESettings, "blueberry": blueberryBLESettings, "blueberry2": blueberry2BLESettings, "heart_rate": heartRateBLESettings }, USB: { "nrf5x": nrf5xSerialSettings, "freeEEG32": freeeeg32SerialSettings, "freeEEG32_optical": freeeeg32_optical_SerialSettings, "freeEEG128": freeeeg128SerialSettings, "hegduino": hegduinoSerialSettings, "hegduinoV1": hegduinoV1SerialSettings, "cyton": cytonSerialSettings, "cyton_daisy": daisycytonSerialSettings, "peanut": peanutSerialSettings, "statechanger": statechangerSerialSettings, "cognixionONE": cytonSerialSettings }, BLE_OTHER: {}, USB_OTHER: {}, OTHER: { "simulator": simulatorSettings } };
  var textdecoder3 = new TextDecoder();
  var BLE = new BLEClient();
  var workers = new WorkerService({ roots: { ...workerCanvasRoutes, ...subprocessRoutes } });
  function initDevice(deviceType, deviceName, options) {
    if (!options.devices)
      options.devices = Devices;
    const settings = options.devices[deviceType][deviceName];
    if (!settings)
      return void 0;
    if (!options.workerUrl)
      options.workerUrl = stream_worker_default;
    if (!options.service)
      options.service = workers;
    let streamworker = options.service.addWorker({ url: options.workerUrl });
    if (options.roots) {
      for (const key in options.roots) {
        let __parent = { callback: "decodeAndParseDevice", worker: streamworker };
        options.roots[key].__parent = options.roots[key].__parent ? Object.assign(options.roots[key].__parent, __parent) : __parent;
      }
      options.service.load(options.roots);
    }
    if (deviceType.includes("OTHER")) {
      return new Promise(async (res, rej) => {
        settings.ondata = (data) => {
          streamworker.run("decodeAndParseDevice", [data, deviceType, deviceName]).then((result) => {
            if (typeof options.ondecoded === "function")
              options.ondecoded(result);
          });
        };
        settings.ondisconnect = () => {
          options.service.terminate(streamworker._id);
          if (options.roots) {
            for (const key in options.roots) {
              options.service.remove(key);
            }
          }
        };
        let init = await settings.connect(settings);
        let info = { workers: { streamworker }, disconnect: () => {
          settings.disconnect(init);
          if (options.ondisconnect)
            options.ondisconnect(info);
          if (options.roots) {
            for (const key in options.roots) {
              options.service.remove(key);
            }
          }
        }, device: init, options, read: (command) => {
          if (settings.read)
            return new Promise((res2, rej2) => {
              res2(settings.read(settings, command));
            });
        }, write: (command) => {
          if (settings.write)
            return new Promise((res2, rej2) => {
              res2(settings.write(settings, command));
            });
        }, roots: options.roots };
        if (options.onconnect)
          options.onconnect(info);
        res(info);
      }).catch((er) => {
        console.error(er);
        options.service.terminate(streamworker._id);
        if (options.roots) {
          for (const key in options.roots) {
            options.service.remove(key);
          }
        }
      });
    } else if (deviceType === "BLE") {
      for (const primaryUUID in settings.services) {
        for (const characteristic in settings.services[primaryUUID]) {
          if (typeof options.ondecoded === "function") {
            if (settings.services?.[primaryUUID]?.[characteristic]?.notify) {
              settings.services[primaryUUID][characteristic].notifyCallback = (data) => {
                streamworker.run("decodeAndParseDevice", [data, deviceType, deviceName, primaryUUID, characteristic], [data.buffer]).then(options.ondecoded);
              };
              break;
            }
          } else if (typeof options.ondecoded === "object") {
            if (options.ondecoded[characteristic]) {
              if (settings.services?.[primaryUUID]?.[characteristic]?.notify) {
                settings.services[primaryUUID][characteristic].notifyCallback = (data) => {
                  streamworker.run("decodeAndParseDevice", [data, deviceType, deviceName, primaryUUID, characteristic], [data.buffer]).then(options.ondecoded[characteristic]);
                };
              }
              if (settings.services?.[primaryUUID]?.[characteristic]?.read) {
                settings.services[characteristic].readCallback = (data) => {
                  streamworker.run("decodeAndParseDevice", [data, deviceType, deviceName, primaryUUID, characteristic], [data.buffer]).then(options.ondecoded[characteristic]);
                };
              }
            }
          }
        }
      }
      return new Promise((res, rej) => {
        BLE.setup(settings).then((result) => {
          let info = { workers: { streamworker }, options, device: result, disconnect: async () => {
            await BLE.disconnect(result.deviceId);
            if (options.ondisconnect)
              options.ondisconnect(info);
            streamworker.terminate();
            if (options.roots) {
              for (const key in options.roots) {
                options.service.remove(key);
              }
            }
          }, read: (command) => {
            return BLE.read(result.device, command.service, command.characteristic, command.ondata, command.timeout);
          }, write: (command) => {
            return BLE.write(result.device, command.service, command.characteristic, command.data, command.callback, command.timeout);
          }, roots: options.roots };
          if (options.onconnect)
            options.onconnect(info);
          res(info);
        }).catch((er) => {
          console.error(er);
          streamworker.terminate();
          if (options.roots) {
            for (const key in options.roots) {
              options.service.remove(key);
            }
          }
          rej(er);
        });
      });
    } else if (deviceType === "USB") {
      let serialworker = options.service.addWorker({ url: options.workerUrl });
      serialworker.worker.addEventListener("message", (ev2) => {
        if (typeof ev2.data === "string") {
          if (ev2.data.includes("disconnected")) {
            options.service.terminate(serialworker._id);
            options.service.terminate(streamworker._id);
            if (options.roots) {
              for (const key in options.roots) {
                options.service.remove(key);
              }
            }
          }
        }
      });
      serialworker.post("setupSerial");
      let portId = options.service.establishMessageChannel(streamworker.worker, serialworker.worker);
      const WS = new WebSerial();
      return new Promise((res, rej) => {
        WS.requestPort(settings.usbVendorId, settings.usbProductId).then((port) => {
          let info = port.getInfo();
          serialworker.run("openPort", { baudRate: settings.baudRate, usbVendorId: info.usbVendorId, usbProductId: info.usbProductId, bufferSize: settings.bufferSize, buffering: settings.buffering ? settings.buffering : void 0, frequency: settings.frequency ? settings.frequency : void 0, pipeTo: { route: "decodeAndParseDevice", _id: portId, extraArgs: [deviceType, deviceName] } }).then((result) => {
            if (settings.write)
              serialworker.post("writeStream", [result._id, settings.write]);
            if (typeof options.ondecoded === "function")
              streamworker.subscribe("decodeAndParseDevice", options.ondecoded);
            let info2 = { workers: { streamworker, serialworker }, device: result, options, disconnect: () => {
              serialworker.post("closeStream", result._id);
              if (options.ondisconnect)
                options.ondisconnect(info2);
            }, read: () => {
              return new Promise((res2, rej2) => {
                let sub;
                sub = streamworker.subscribe("decodeAndParseDevice", (result2) => {
                  serialworker.unsubscribe("decodeAndParseDevice", sub);
                  res2(result2);
                });
              });
            }, write: (command) => {
              return serialworker.run("writeStream", [result._id, command]);
            }, roots: options.roots };
            if (options.onconnect)
              options.onconnect(info2);
            res(info2);
          });
        }).catch((er) => {
          console.error(er);
          options.service.terminate(serialworker._id);
          options.service.terminate(streamworker._id);
          if (options.roots) {
            for (const key in options.roots) {
              options.service.remove(key);
            }
          }
          rej(er);
        });
      });
    } else
      return void 0;
  }

  // node_modules/graphscript/dist/index.esm.js
  var __create3 = Object.create;
  var __defProp3 = Object.defineProperty;
  var __getOwnPropDesc3 = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames3 = Object.getOwnPropertyNames;
  var __getProtoOf3 = Object.getPrototypeOf;
  var __hasOwnProp3 = Object.prototype.hasOwnProperty;
  var __require3 = ((x3) => typeof __require !== "undefined" ? __require : typeof Proxy !== "undefined" ? new Proxy(x3, { get: (a, b2) => (typeof __require !== "undefined" ? __require : a)[b2] }) : x3)(function(x3) {
    if (typeof __require !== "undefined")
      return __require.apply(this, arguments);
    throw new Error('Dynamic require of "' + x3 + '" is not supported');
  });
  var __commonJS3 = (cb, mod) => function __require23() {
    return mod || (0, cb[__getOwnPropNames3(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __copyProps3 = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames3(from))
        if (!__hasOwnProp3.call(to, key) && key !== except)
          __defProp3(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc3(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM3 = (mod, isNodeMode, target) => (target = mod != null ? __create3(__getProtoOf3(mod)) : {}, __copyProps3(isNodeMode || !mod || !mod.__esModule ? __defProp3(target, "default", { value: mod, enumerable: true }) : target, mod));
  var require_browser2 = __commonJS3({ "node_modules/web-worker/cjs/browser.js"(exports, module2) {
    module2.exports = Worker;
  } });
  var EventHandler2 = class {
    constructor(data) {
      this.pushToState = {};
      this.data = {};
      this.triggers = {};
      this.setState = (updateObj) => {
        Object.assign(this.data, updateObj);
        let props2 = Object.getOwnPropertyNames(updateObj);
        for (const prop of props2) {
          this.triggerEvent(prop, this.data[prop]);
        }
        return this.data;
      };
      this.setValue = (key, value) => {
        this.data[key] = value;
        this.triggerEvent(key, value);
      };
      this.triggerEvent = (key, value) => {
        if (this.triggers[key]) {
          let fn = (obj) => obj.onchange(value);
          this.triggers[key].forEach(fn);
        }
      };
      this.subscribeEvent = (key, onchange, refObject, refKey) => {
        if (key) {
          if (refObject && refKey && !this.triggers[key]) {
            Object.defineProperty(this.data, key, { get: () => {
              return refObject[refKey];
            }, set: (value) => {
              refObject[refKey] = value;
            }, enumerable: true, configurable: true });
          }
          if (!this.triggers[key]) {
            this.triggers[key] = [];
          }
          let l = this.triggers[key].length;
          this.triggers[key].push({ sub: l, onchange });
          return this.triggers[key].length - 1;
        } else
          return void 0;
      };
      this.unsubscribeEvent = (key, sub) => {
        let triggers = this.triggers[key];
        if (triggers) {
          if (!sub) {
            delete this.triggers[key];
            delete this.data[key];
          } else {
            let sub2 = void 0;
            let obj = triggers.find((o, i) => {
              if (o.sub === sub2) {
                sub2 = i;
                return true;
              }
            });
            if (obj)
              triggers.splice(sub2, 1);
            if (Object.keys(triggers).length === 0) {
              delete this.triggers[key];
              delete this.data[key];
            }
            if (this.onRemoved)
              this.onRemoved(obj);
            return true;
          }
        }
      };
      this.subscribeEventOnce = (key, onchange) => {
        let sub;
        let changed = (value) => {
          onchange(value);
          this.unsubscribeEvent(key, sub);
        };
        sub = this.subscribeEvent(key, changed);
      };
      this.getEvent = (key, sub) => {
        for (const s in this.triggers[key]) {
          if (this.triggers[key][s].sub === sub)
            return this.triggers[key][s];
        }
      };
      this.getSnapshot = () => {
        const snapshot = {};
        for (const key in this.data) {
          snapshot[key] = this.data[key];
        }
      };
      if (typeof data === "object")
        this.data = data;
    }
  };
  var state2 = new EventHandler2();
  var GraphNode2 = class {
    constructor(properties, parent, graph) {
      this.__node = { tag: `node${Math.floor(Math.random() * 1e15)}`, unique: `${Math.floor(Math.random() * 1e15)}`, state: state2 };
      this.__setProperties = (properties2, parent2, graph2) => {
        let enforceProperties = () => {
          let orig = properties2;
          if (typeof properties2 === "function") {
            if (isNativeClass2(properties2)) {
              properties2 = new properties2();
            } else
              properties2 = { __operator: properties2, __node: { forward: true, tag: properties2.name } };
          } else if (typeof properties2 === "string") {
            if (graph2?.get(properties2)) {
              properties2 = graph2.get(properties2);
            }
          }
          if (!properties2.__node.initial)
            properties2.__node.initial = orig;
        };
        enforceProperties();
        if (typeof properties2 === "object") {
          let assignState = () => {
            if (properties2.__node?.state)
              this.__node.state = properties2.__node.state;
          };
          let setProps22 = () => {
            if (properties2.__props) {
              if (typeof properties2.__props === "function")
                properties2.__props = new properties2.__props();
              if (typeof properties2.__props === "object") {
                this.__proxyObject(properties2.__props);
              }
            }
          };
          let setTag = () => {
            if (!properties2.__node.tag) {
              if (properties2.__operator?.name)
                properties2.__node.tag = properties2.__operator.name;
              else
                properties2.__node.tag = `node${Math.floor(Math.random() * 1e15)}`;
            }
          };
          let setNode = () => {
            if (typeof properties2.__node === "string") {
              if (graph2?.get(properties2.__node.tag)) {
                properties2 = graph2.get(properties2.__node.tag);
              } else
                properties2.__node = {};
            } else if (!properties2.__node)
              properties2.__node = {};
            if (graph2) {
              properties2.__node.graph = graph2;
            }
            if (properties2 instanceof Graph2)
              properties2.__node.source = properties2;
          };
          let setParent = () => {
            if (!properties2.__parent && parent2)
              properties2.__parent = parent2;
            if (parent2?.__node && !(parent2 instanceof Graph2 || properties2 instanceof Graph2))
              properties2.__node.tag = parent2.__node.tag + "." + properties2.__node.tag;
            if (parent2 instanceof Graph2 && properties2 instanceof Graph2) {
              if (properties2.__node.loaders)
                Object.assign(parent2.__node.loaders ? parent2.__node.loaders : {}, properties2.__node.loaders);
              if (parent2.__node.mapGraphs) {
                properties2.__node.nodes.forEach((n) => {
                  parent2.set(properties2.__node.tag + "." + n.__node.tag, n);
                });
                let ondelete = () => {
                  properties2.__node.nodes.forEach((n) => {
                    parent2.__node.nodes.delete(properties2.__node.tag + "." + n.__node.tag);
                  });
                };
                this.__addOndisconnected(ondelete);
              }
            }
          };
          let setOp = () => {
            if (typeof properties2.default === "function" && !properties2.__operator) {
              properties2.__operator = properties2.default;
            }
            if (properties2.__operator) {
              if (typeof properties2.__operator === "string") {
                if (graph2) {
                  let n = graph2.get(properties2.__operator);
                  if (n)
                    properties2.__operator = n.__operator;
                  if (!properties2.__node.tag && properties2.__operator.name)
                    properties2.__node.tag = properties2.__operator.name;
                }
              }
              if (typeof properties2.__operator === "function")
                properties2.__operator = this.__setOperator(properties2.__operator);
              if (properties2.default)
                properties2.default = properties2.__operator;
            }
          };
          let assignProps = () => {
            properties2.__node = Object.assign(this.__node, properties2.__node);
            let keys = Object.getOwnPropertyNames(properties2);
            for (const key of keys) {
              this[key] = properties2[key];
            }
          };
          let bindCallbacks = () => {
            if (this.__onconnected) {
              if (typeof this.__onconnected === "function") {
                this.__onconnected = this.__onconnected.bind(this);
              } else if (Array.isArray(this.__onconnected)) {
                this.__onconnected = this.__onconnected.map((f) => {
                  return f.bind(this);
                });
              }
              if (typeof this.__ondisconnected === "function") {
                this.__ondisconnected = this.__ondisconnected.bind(this);
              } else if (Array.isArray(this.__ondisconnected)) {
                this.__ondisconnected = this.__ondisconnected.map((f) => {
                  return f.bind(this);
                });
              }
            }
          };
          assignState();
          setTag();
          setProps22();
          setNode();
          setParent();
          assignProps();
          bindCallbacks();
          setOp();
        }
      };
      this.__subscribe = (callback, key, subInput, bound, target) => {
        const subscribeToFunction = (k, setTarget = (callback2, target2) => callback2, triggerCallback = callback) => {
          let sub = this.__node.state.subscribeEvent(k, triggerCallback, this, key);
          let trigger = this.__node.state.getEvent(k, sub);
          trigger.source = this.__node.tag;
          if (key)
            trigger.key = key;
          trigger.target = setTarget(callback);
          if (bound)
            trigger.bound = bound;
          return sub;
        };
        const subscribeToGraph = (callback2) => {
          let fn = this.__node.graph.get(callback2);
          if (!fn && callback2.includes(".")) {
            let n = this.__node.graph.get(callback2.substring(0, callback2.lastIndexOf(".")));
            let key2 = callback2.substring(callback2.lastIndexOf(".") + 1);
            if (n && typeof n[key2] === "function")
              callback2 = (...args) => {
                return n[key2](...args);
              };
          }
        };
        if (key) {
          if (!this.__node.localState || !this.__node.localState[key]) {
            this.__addLocalState(this, key);
          }
          if (typeof callback === "string") {
            if (target) {
              if (this.__node.graph?.get(target)) {
                let n = this.__node.graph?.get(target);
                if (typeof n[callback] === "function") {
                  let fn = n[callback];
                  callback = (...inp) => {
                    fn(...inp);
                  };
                } else {
                  let k2 = callback;
                  let setter = (inp) => {
                    n[k2] = inp;
                  };
                  callback = setter;
                }
              }
            } else if (typeof this[callback] === "function") {
              let fn = this[callback];
              callback = (...inp) => {
                fn(...inp);
              };
            } else if (this.__node.graph?.get(callback))
              subscribeToGraph(callback);
            if (typeof callback !== "function")
              return void 0;
          }
          let sub;
          let k = subInput ? this.__node.unique + "." + key + "input" : this.__node.unique + "." + key;
          if (typeof callback === "function")
            sub = subscribeToFunction(k);
          else if (callback?.__node)
            sub = subscribeToFunction(k, (callback2, target2) => target2 ? target2 : callback2.__node.unique, (...inp) => {
              if (callback.__operator)
                callback.__operator(...inp);
            });
          return sub;
        } else {
          if (typeof callback === "string") {
            if (this.__node.graph.get(callback))
              callback = this.__node.graph.get(callback);
            if (typeof callback !== "object")
              return void 0;
          }
          let sub;
          let k = subInput ? this.__node.unique + "input" : this.__node.unique;
          if (typeof callback === "function")
            sub = subscribeToFunction(k);
          else if (callback?.__node)
            sub = subscribeToFunction(k, (callback2, target2) => target2 ? target2 : callback2.__node.unique, (...inp) => {
              if (callback.__operator)
                callback.__operator(...inp);
            });
          return sub;
        }
      };
      this.__unsubscribe = (sub, key, unsubInput) => {
        if (key)
          return this.__node.state.unsubscribeEvent(unsubInput ? this.__node.unique + "." + key + "input" : this.__node.unique + "." + key, sub);
        else
          return this.__node.state.unsubscribeEvent(unsubInput ? this.__node.unique + "input" : this.__node.unique, sub);
      };
      this.__setOperator = (fn) => {
        fn = fn.bind(this);
        if (this.__args && this.__node.graph) {
          fn = wrapArgs2(fn, this.__args, this.__node.graph);
        }
        let inpstr = `${this.__node.unique}input`;
        this.__operator = (...args) => {
          if (this.__node.state.triggers[inpstr])
            this.__node.state.setValue(inpstr, args);
          let result = fn(...args);
          if (this.__node.state.triggers[this.__node.unique]) {
            if (typeof result?.then === "function") {
              result.then((res) => {
                if (res !== void 0)
                  this.__node.state.setValue(this.__node.unique, res);
              }).catch(console.error);
            } else if (result !== void 0)
              this.__node.state.setValue(this.__node.unique, result);
          }
          return result;
        };
        if (this.__parent instanceof GraphNode2 && !this.__subscribedToParent) {
          if (this.__parent.__operator) {
            let sub = this.__parent.__subscribe(this);
            let ondelete = () => {
              this.__parent?.__unsubscribe(sub);
              delete this.__subscribedToParent;
            };
            this.__addOndisconnected(ondelete);
            this.__subscribedToParent = true;
          }
        }
        return this.__operator;
      };
      this.__addLocalState = (props2, key) => {
        if (!props2)
          return;
        if (!this.__node.localState) {
          this.__node.localState = {};
        }
        const localState = this.__node.localState;
        const initState = (props22, k) => {
          let str4 = this.__node.unique + "." + k;
          let inpstr = `${str4}input`;
          if (typeof props22[k] === "function" && k !== "__operator") {
            let fn = props22[k].bind(this);
            props22[k] = (...args) => {
              if (this.__node.state.triggers[inpstr])
                this.__node.state.setValue(inpstr, args);
              let result = fn(...args);
              if (this.__node.state.triggers[str4]) {
                if (typeof result?.then === "function") {
                  result.then((res) => {
                    this.__node.state.triggerEvent(str4, res);
                  }).catch(console.error);
                } else
                  this.__node.state.triggerEvent(str4, result);
              }
              return result;
            };
          } else {
            let get, set;
            if (this.__props?.[k]) {
              get = () => {
                return this.__props[k];
              };
              set = (v2) => {
                this.__props[k] = v2;
                if (this.__node.state.triggers[str4])
                  this.__node.state.triggerEvent(str4, v2);
              };
            } else {
              localState[k] = props22[k];
              get = () => {
                return localState[k];
              };
              set = (v2) => {
                localState[k] = v2;
                if (this.__node.state.triggers[str4])
                  this.__node.state.triggerEvent(str4, v2);
              };
            }
            const descriptor = { get, set, enumerable: true, configurable: true };
            Object.defineProperty(props22, k, descriptor);
            if (typeof this.__node.initial === "object") {
              let dec = Object.getOwnPropertyDescriptor(this.__node.initial, k);
              if (dec === void 0 || dec?.configurable) {
                Object.defineProperty(this.__node.initial, k, descriptor);
              }
            }
          }
        };
        if (key)
          initState(props2, key);
        else {
          for (let k in props2) {
            initState(props2, k);
          }
        }
      };
      this.__proxyObject = (obj) => {
        const allProps = getAllProperties2(obj);
        for (const k of allProps) {
          if (typeof obj[k] === "function") {
            this[k] = (...args) => {
              return obj[k](...args);
            };
          } else {
            const descriptor = { get: () => {
              return obj[k];
            }, set: (value) => {
              obj[k] = value;
            }, enumerable: true, configurable: true };
            Object.defineProperty(this, k, descriptor);
          }
        }
      };
      this.__setProperties(properties, parent, graph);
    }
    __addOnconnected(callback) {
      callback = callback.bind(this);
      if (Array.isArray(this.__onconnected)) {
        this.__onconnected.push(callback);
      } else if (typeof this.__onconnected === "function") {
        this.__onconnected = [callback, this.__onconnected];
      } else
        this.__onconnected = callback;
    }
    __addOndisconnected(callback) {
      callback = callback.bind(this);
      if (Array.isArray(this.__ondisconnected)) {
        this.__ondisconnected.push(callback);
      } else if (typeof this.__ondisconnected === "function") {
        this.__ondisconnected = [callback, this.__ondisconnected];
      } else
        this.__ondisconnected = callback;
    }
    __callConnected(node = this) {
      if (typeof this.__onconnected === "function") {
        this.__onconnected(this);
      } else if (Array.isArray(this.__onconnected)) {
        let fn = (o) => {
          o(this);
        };
        this.__onconnected.forEach(fn);
      }
    }
    __callDisconnected(node = this) {
      if (typeof this.__ondisconnected === "function")
        this.__ondisconnected(this);
      else if (Array.isArray(this.__ondisconnected)) {
        let fn = (o) => {
          o(this);
        };
        this.__ondisconnected.forEach(fn);
      }
    }
  };
  var Graph2 = class {
    constructor(options) {
      this.__node = { tag: `graph${Math.floor(Math.random() * 1e15)}`, unique: `${Math.random()}`, nodes: /* @__PURE__ */ new Map(), state: state2, roots: {} };
      this.init = (options2) => {
        if (options2) {
          let cpy = Object.assign({}, options2);
          delete cpy.roots;
          recursivelyAssign4(this.__node, cpy);
          if (options2.roots)
            this.load(options2.roots);
        }
      };
      this.load = (roots) => {
        function recursivelyAssignChildren(target, obj, inChildren = true, top = true) {
          if (top) {
            if (target)
              Object.assign(target, obj);
            else
              target = Object.assign({}, obj);
            recursivelyAssignChildren(target, obj, true, false);
          }
          if (obj.__children && !inChildren) {
            if (obj.__children?.constructor.name === "Object") {
              if (target.__children?.constructor.name === "Object")
                recursivelyAssignChildren(target.__children, obj.__children, true, false);
              else
                target.__children = recursivelyAssignChildren({}, obj.__children, true, false);
            } else {
              target.__children = obj.__children;
            }
          } else if (inChildren) {
            for (const key in obj) {
              target[key] = Object.assign({}, obj[key]);
              if (obj[key].__children) {
                recursivelyAssignChildren({}, obj[key].__children, false, false);
              }
            }
          }
          return target;
        }
        this.__node.roots = recursivelyAssignChildren(this.__node.roots ? this.__node.roots : {}, roots);
        let cpy = Object.assign({}, roots);
        if (cpy.__node)
          delete cpy.__node;
        let listeners = this.recursiveSet(cpy, this, void 0, roots);
        if (roots.__node) {
          if (!roots.__node.tag)
            roots.__node._tag = `roots${Math.floor(Math.random() * 1e15)}`;
          else if (!this.get(roots.__node.tag)) {
            let node = new GraphNode2(roots, this, this);
            this.set(node.__node.tag, node);
            this.runLoaders(node, this, roots, roots.__node.tag);
            if (node.__listeners) {
              listeners[node.__node.tag] = node.__listeners;
            }
          }
        } else if (roots.__listeners) {
          this.setListeners(roots.__listeners);
        }
        this.setListeners(listeners);
        return cpy;
      };
      this.setLoaders = (loaders22, replace) => {
        if (replace)
          this.__node.loaders = loaders22;
        else
          Object.assign(this.__node.loaders, loaders22);
        return this.__node.loaders;
      };
      this.runLoaders = (node, parent, properties, key) => {
        for (const l in this.__node.loaders) {
          if (typeof this.__node.loaders[l] === "object") {
            if (this.__node.loaders[l].init)
              this.__node.loaders[l](node, parent, this, this.__node.roots, properties, key);
            if (this.__node.loaders[l].connected)
              node.__addOnconnected(this.__node.loaders[l].connect);
            if (this.__node.loaders[l].disconnected)
              node.__addOndisconnected(this.__node.loaders[l].disconnect);
          } else if (typeof this.__node.loaders[l] === "function")
            this.__node.loaders[l](node, parent, this, this.__node.roots, properties, key);
        }
      };
      this.add = (properties, parent) => {
        let listeners = {};
        if (typeof parent === "string")
          parent = this.get(parent);
        let instanced;
        if (typeof properties === "function") {
          if (isNativeClass2(properties)) {
            if (properties.prototype instanceof GraphNode2) {
              properties = properties.prototype.constructor(properties, parent, this);
              instanced = true;
            } else
              properties = new properties();
          } else
            properties = { __operator: properties };
        } else if (typeof properties === "string") {
          properties = this.__node.roots[properties];
        }
        if (!properties)
          return;
        if (!instanced) {
          let keys = Object.getOwnPropertyNames(properties);
          let cpy = {};
          for (const key of keys) {
            cpy[key] = properties[key];
          }
          properties = cpy;
        }
        if (!properties.__node)
          properties.__node = {};
        properties.__node.initial = properties;
        if (typeof properties === "object" && (!properties?.__node?.tag || !this.get(properties.__node.tag))) {
          let node;
          if (instanced)
            node = properties;
          else
            node = new GraphNode2(properties, parent, this);
          this.set(node.__node.tag, node);
          this.runLoaders(node, parent, properties, node.__node.tag);
          this.__node.roots[node.__node.tag] = properties;
          if (node.__children) {
            node.__children = Object.assign({}, node.__children);
            this.recursiveSet(node.__children, node, listeners, node.__children);
          }
          if (node.__listeners) {
            listeners[node.__node.tag] = Object.assign({}, node.__listeners);
            for (const key in node.__listeners) {
              let listener = node.__listeners[key];
              if (node[key]) {
                delete listeners[node.__node.tag][key];
                listeners[node.__node.tag][node.__node.tag + "." + key] = listener;
              }
              if (typeof listener === "string") {
                if (node.__children?.[listener]) {
                  listeners[node.__node.tag][key] = node.__node.tag + "." + listener;
                } else if (parent instanceof GraphNode2 && (parent.__node.tag === listener || parent.__node.tag.includes(".") && parent.__node.tag.split(".").pop() === listener)) {
                  listeners[node.__node.tag][key] = parent.__node.tag;
                }
              }
            }
          }
          this.setListeners(listeners);
          node.__callConnected();
          return node;
        }
        return;
      };
      this.recursiveSet = (t22, parent, listeners = {}, origin) => {
        let keys = Object.getOwnPropertyNames(origin);
        for (const key of keys) {
          if (key.includes("__"))
            continue;
          let p = origin[key];
          if (Array.isArray(p))
            continue;
          let instanced;
          if (typeof p === "function") {
            if (isNativeClass2(p)) {
              p = new p();
              if (p instanceof GraphNode2) {
                p = p.prototype.constructor(p, parent, this);
                instanced = true;
              }
            } else
              p = { __operator: p };
          } else if (typeof p === "string") {
            if (this.__node.nodes.get(p))
              p = this.__node.nodes.get(p);
            else
              p = this.__node.roots[p];
          } else if (typeof p === "boolean") {
            if (this.__node.nodes.get(key))
              p = this.__node.nodes.get(key);
            else
              p = this.__node.roots[key];
          }
          if (typeof p === "object") {
            if (!instanced && !(p instanceof GraphNode2)) {
              let keys2 = Object.getOwnPropertyNames(p);
              let cpy = {};
              for (const key2 of keys2) {
                cpy[key2] = p[key2];
              }
              p = cpy;
            }
            if (!p.__node)
              p.__node = {};
            if (!p.__node.tag)
              p.__node.tag = key;
            if (!p.__node.initial)
              p.__node.initial = t22[key];
            if (this.get(p.__node.tag) && !(!(parent instanceof Graph2) && parent?.__node) || parent?.__node && this.get(parent.__node.tag + "." + p.__node.tag))
              continue;
            let node;
            let newnode = false;
            if (instanced || p instanceof GraphNode2) {
              node = p;
            } else {
              node = new GraphNode2(p, parent, this);
              newnode = true;
            }
            if (!newnode && p instanceof GraphNode2 && !instanced && parent instanceof GraphNode2) {
              let sub = this.subscribe(parent.__node.tag, node.__node.tag);
              let ondelete = (node2) => {
                this.unsubscribe(parent.__node.tag, sub);
              };
              node.__addOndisconnected(ondelete);
            } else {
              this.set(node.__node.tag, node);
              this.runLoaders(node, parent, t22[key], key);
              t22[key] = node;
              this.__node.roots[node.__node.tag] = p;
              if (node.__children) {
                node.__children = Object.assign({}, node.__children);
                this.recursiveSet(node.__children, node, listeners, node.__children);
              }
              if (node.__listeners) {
                listeners[node.__node.tag] = Object.assign({}, node.__listeners);
                for (const key2 in node.__listeners) {
                  let listener = node.__listeners[key2];
                  let k = key2;
                  if (node[key2]) {
                    delete listeners[node.__node.tag][key2];
                    k = node.__node.tag + "." + key2;
                    listeners[node.__node.tag][k] = listener;
                  }
                  if (typeof listener === "string") {
                    if (node.__children?.[listener]) {
                      listeners[node.__node.tag][k] = node.__node.tag + "." + listener;
                    } else if (parent instanceof GraphNode2 && (parent.__node.tag === listener || parent.__node.tag.includes(".") && parent.__node.tag.split(".").pop() === listener)) {
                      listeners[node.__node.tag][k] = parent.__node.tag;
                    }
                  }
                }
              }
              node.__callConnected();
            }
          }
        }
        return listeners;
      };
      this.remove = (node, clearListeners = true) => {
        this.unsubscribe(node);
        if (typeof node === "string")
          node = this.get(node);
        if (node instanceof GraphNode2) {
          this.delete(node.__node.tag);
          delete this.__node.roots[node.__node.tag];
          if (clearListeners) {
            this.clearListeners(node);
          }
          node.__callDisconnected();
          const recursiveRemove = (t22) => {
            for (const key in t22) {
              this.unsubscribe(t22[key]);
              this.delete(t22[key].__node.tag);
              delete this.__node.roots[t22[key].__node.tag];
              this.delete(key);
              delete this.__node.roots[key];
              t22[key].__node.tag = t22[key].__node.tag.substring(t22[key].__node.tag.lastIndexOf(".") + 1);
              if (clearListeners) {
                this.clearListeners(t22[key]);
              }
              console.log(key, t22[key].__listeners);
              t22[key].__callDisconnected();
              if (t22[key].__children) {
                recursiveRemove(t22[key].__children);
              }
            }
          };
          if (node.__children) {
            recursiveRemove(node.__children);
          }
        }
        if (node?.__node.tag && node?.__parent) {
          delete node?.__parent;
          node.__node.tag = node.__node.tag.substring(node.__node.tag.indexOf(".") + 1);
        }
        return node;
      };
      this.run = (node, ...args) => {
        if (typeof node === "string") {
          let nd = this.get(node);
          if (!nd && node.includes(".")) {
            nd = this.get(node.substring(0, node.lastIndexOf(".")));
            if (typeof nd?.[node.substring(node.lastIndexOf(".") + 1)] === "function")
              return nd[node.substring(node.lastIndexOf(".") + 1)](...args);
          } else if (nd?.__operator)
            return nd.__operator(...args);
        }
        if (node?.__operator) {
          return node?.__operator(...args);
        }
      };
      this.setListeners = (listeners) => {
        for (const key in listeners) {
          let node = this.get(key);
          if (typeof listeners[key] === "object") {
            for (const k in listeners[key]) {
              let n = this.get(k);
              let sub;
              if (typeof listeners[key][k] !== "object")
                listeners[key][k] = { __callback: listeners[key][k] };
              else if (!listeners[key][k].__callback) {
                for (const kk in listeners[key][k]) {
                  if (typeof listeners[key][k][kk] !== "object") {
                    listeners[key][k][kk] = { __callback: listeners[key][k][kk] };
                    if (listeners[key][k][kk].__callback === true || typeof listeners[key][k][kk].__callback === "undefined")
                      listeners[key][k][kk].__callback = node.__operator;
                  }
                  let nn = this.get(kk);
                  if (nn) {
                    if (!nn) {
                      let tag = k.substring(0, k.lastIndexOf("."));
                      nn = this.get(tag);
                      if (n) {
                        sub = this.subscribe(nn, listeners[key][k][kk].__callback, listeners[key][k][kk].__args, k.substring(k.lastIndexOf(".") + 1), listeners[key][k][kk].inputState, key, k);
                        if (typeof node.__listeners[k][kk] !== "object")
                          node.__listeners[k][kk] = { __callback: listeners[key][k][kk].__callback, inputState: listeners[key][k][kk]?.inputState };
                        node.__listeners[k][kk].sub = sub;
                      }
                    } else {
                      sub = this.subscribe(nn, listeners[key][k][kk].__callback, listeners[key][k].__args, void 0, listeners[key][k].inputState, key, k);
                      if (typeof node.__listeners[k][kk] !== "object")
                        node.__listeners[k][kk] = { __callback: listeners[key][k][kk].__callback, inputState: listeners[key][k][kk]?.inputState };
                      node.__listeners[k][kk].sub = sub;
                    }
                  }
                }
              }
              if ("__callback" in listeners[key][k]) {
                if (listeners[key][k].__callback === true || typeof listeners[key][k].__callback === "undefined")
                  listeners[key][k].__callback = node.__operator;
                if (typeof listeners[key][k].__callback === "function")
                  listeners[key][k].__callback = listeners[key][k].__callback.bind(node);
                if (typeof node.__listeners !== "object")
                  node.__listeners = {};
                if (!n) {
                  let tag = k.substring(0, k.lastIndexOf("."));
                  n = this.get(tag);
                  if (n) {
                    sub = this.subscribe(n, listeners[key][k].__callback, listeners[key][k].__args, k.substring(k.lastIndexOf(".") + 1), listeners[key][k].inputState, key, k);
                    if (typeof node.__listeners[k] !== "object")
                      node.__listeners[k] = { __callback: listeners[key][k].__callback, inputState: listeners[key][k]?.inputState };
                    node.__listeners[k].sub = sub;
                  }
                } else {
                  sub = this.subscribe(n, listeners[key][k].__callback, listeners[key][k].__args, void 0, listeners[key][k].inputState, key, k);
                  if (typeof node.__listeners[k] !== "object")
                    node.__listeners[k] = { __callback: listeners[key][k].__callback, inputState: listeners[key][k]?.inputState };
                  node.__listeners[k].sub = sub;
                }
              }
            }
          }
        }
      };
      this.clearListeners = (node, listener) => {
        if (typeof node === "string")
          node = this.get(node);
        if (node?.__listeners) {
          for (const key in node.__listeners) {
            if (listener && key !== listener)
              continue;
            if (typeof node.__listeners[key]?.sub !== "number")
              continue;
            let n = this.get(key);
            if (!n) {
              n = this.get(key.substring(0, key.lastIndexOf(".")));
              if (n) {
                if (typeof node.__listeners[key] === "object" && !node.__listeners[key]?.__callback) {
                  for (const k in node.__listeners[key]) {
                    if (typeof node.__listeners[key][k]?.sub === "number") {
                      this.unsubscribe(n, node.__listeners[key][k].sub, key.substring(key.lastIndexOf(".") + 1), node.__listeners[key][k].inputState);
                      node.__listeners[key][k].sub = void 0;
                    }
                  }
                } else if (typeof node.__listeners[key]?.sub === "number") {
                  this.unsubscribe(n, node.__listeners[key].sub, key.substring(key.lastIndexOf(".") + 1), node.__listeners[key].inputState);
                  node.__listeners[key].sub = void 0;
                }
              }
            } else {
              if (typeof !node.__listeners[key]?.__callback === "number") {
                for (const k in node.__listeners[key]) {
                  if (node.__listeners[key][k]?.sub) {
                    this.unsubscribe(n, node.__listeners[key][k].sub, void 0, node.__listeners[key][k].inputState);
                    node.__listeners[key][k].sub = void 0;
                  }
                }
              } else if (typeof node.__listeners[key]?.sub === "number") {
                this.unsubscribe(n, node.__listeners[key].sub, void 0, node.__listeners[key].inputState);
                node.__listeners[key].sub = void 0;
              }
            }
          }
        }
      };
      this.get = (tag) => {
        return this.__node.nodes.get(tag);
      };
      this.set = (tag, node) => {
        return this.__node.nodes.set(tag, node);
      };
      this.delete = (tag) => {
        return this.__node.nodes.delete(tag);
      };
      this.getProps = (node, getInitial) => {
        if (typeof node === "string")
          node = this.get(node);
        if (node instanceof GraphNode2) {
          let cpy;
          if (getInitial)
            cpy = Object.assign({}, this.__node.roots[node.__node.tag]);
          else {
            cpy = Object.assign({}, node);
            for (const key in cpy) {
              if (key.includes("__"))
                delete cpy[key];
            }
          }
        }
      };
      this.subscribe = (nodeEvent, onEvent, args, key, subInput, target, bound) => {
        let nd = nodeEvent;
        if (typeof nodeEvent === "string") {
          nd = this.get(nodeEvent);
          if (!nd && nodeEvent.includes(".")) {
            nd = this.get(nodeEvent.substring(0, nodeEvent.lastIndexOf(".")));
            key = nodeEvent.substring(nodeEvent.lastIndexOf(".") + 1);
          }
        }
        let sub;
        if (target instanceof GraphNode2)
          target = target.__node.tag;
        if (typeof onEvent === "string") {
          let key2 = onEvent;
          let setOnEventFromString = (onEvent2) => {
            if (this.get(onEvent2)?.__operator) {
              let node = this.get(onEvent2);
              onEvent2 = function(...inp) {
                return node.__operator(...inp);
              };
            } else if (onEvent2.includes(".")) {
              let n = this.get(onEvent2.substring(0, onEvent2.lastIndexOf(".")));
              let key3 = onEvent2.substring(onEvent2.lastIndexOf(".") + 1);
              if (typeof n[key3] === "function") {
                if (n[key3] instanceof GraphNode2)
                  onEvent2 = n[key3];
                else
                  onEvent2 = function(...inp) {
                    return n[key3](...inp);
                  };
              } else {
                onEvent2 = function(inp) {
                  n[key3] = inp;
                  return n[key3];
                };
              }
            }
            return onEvent2;
          };
          if (target) {
            let node = this.get(target);
            if (typeof node?.[onEvent] === "function") {
              onEvent = function(...inp) {
                return node[key2](...inp);
              };
            } else if (node[key2]) {
              if (node[key2] instanceof GraphNode2)
                onEvent = node[key2];
              else
                onEvent = function(inp) {
                  node[key2] = inp;
                  return node[key2];
                };
            } else {
              onEvent = setOnEventFromString(onEvent);
            }
          } else {
            onEvent = setOnEventFromString(onEvent);
          }
        }
        if ((typeof onEvent === "function" || onEvent instanceof GraphNode2) && args) {
          if (onEvent instanceof GraphNode2 && onEvent.__operator)
            onEvent = function(inp) {
              return onEvent.__operator(inp);
            };
          onEvent = wrapArgs2(onEvent, args, this);
        }
        if (nd instanceof GraphNode2) {
          sub = nd.__subscribe(onEvent, key, subInput, target, bound);
          let ondelete = () => {
            nd.__unsubscribe(sub, key, subInput);
          };
          nd.__addOndisconnected(ondelete);
        } else if (typeof nodeEvent === "string") {
          if (this.get(nodeEvent)) {
            if (onEvent instanceof GraphNode2 && onEvent.__operator) {
              sub = this.get(nodeEvent).__subscribe(onEvent.__operator, key, subInput, target, bound);
              let ondelete = () => {
                this.get(nodeEvent).__unsubscribe(sub);
              };
              onEvent.__addOndisconnected(ondelete);
            } else if (typeof onEvent === "function" || typeof onEvent === "string") {
              sub = this.get(nodeEvent).__subscribe(onEvent, key, subInput, target, bound);
              this.__node.state.getEvent(this.get(nodeEvent).__node.unique, sub).source = nodeEvent;
            }
          } else {
            if (typeof onEvent === "string")
              onEvent = this.__node.nodes.get(onEvent).__operator;
            if (typeof onEvent === "function")
              sub = this.__node.state.subscribeEvent(nodeEvent, onEvent);
          }
        }
        return sub;
      };
      this.unsubscribe = (node, sub, key, subInput) => {
        if (node instanceof GraphNode2) {
          return node.__unsubscribe(sub, key, subInput);
        } else
          return this.get(node)?.__unsubscribe(sub, key, subInput);
      };
      this.setState = (update) => {
        this.__node.state.setState(update);
      };
      this.init(options);
    }
  };
  function recursivelyAssign4(target, obj) {
    for (const key in obj) {
      if (obj[key]?.constructor.name === "Object" && !Array.isArray(obj[key])) {
        if (target[key]?.constructor.name === "Object" && !Array.isArray(target[key]))
          recursivelyAssign4(target[key], obj[key]);
        else
          target[key] = recursivelyAssign4({}, obj[key]);
      } else {
        target[key] = obj[key];
      }
    }
    return target;
  }
  function getAllProperties2(obj) {
    var allProps = [], curr = obj;
    do {
      var props2 = Object.getOwnPropertyNames(curr);
      let fn = function(prop) {
        if (allProps.indexOf(prop) === -1)
          allProps.push(prop);
      };
      props2.forEach(fn);
    } while (curr = Object.getPrototypeOf(curr));
    return allProps;
  }
  function isNativeClass2(thing) {
    return typeof thing === "function" && thing.hasOwnProperty("prototype") && !thing.hasOwnProperty("arguments");
  }
  var wrapArgs2 = (callback, argOrder, graph) => {
    let args = [];
    let getCallbackFromString = (a) => {
      if (graph.get(a)?.__operator) {
        let node = graph.get(a);
        return (...inp) => {
          node.__operator(...inp);
        };
      } else if (a.includes(".")) {
        let split = a.split(".");
        let popped = split.pop();
        let joined = split.join(".");
        let node = graph.get(joined);
        if (typeof graph.get(joined)?.[popped] === "function") {
          return (...inp) => {
            return node[popped](...inp);
          };
        } else
          return () => {
            return node[popped];
          };
      } else if (graph.get(a)) {
        let node = graph.get(a);
        return () => {
          return node;
        };
      } else {
        let arg = a;
        return () => {
          return arg;
        };
      }
    };
    let forArg = (a, i) => {
      if (a === "__output") {
        args[i] = (inp) => {
          return inp;
        };
      } else if (typeof a === "string") {
        args[i] = getCallbackFromString(a);
      } else if (typeof a === "function") {
        let fn2 = a;
        args[i] = (...inp) => {
          return fn2(...inp);
        };
      } else if (typeof a === "object" && a.__input) {
        let recursivelyCreateCallback = function(c) {
          let input = c.__input;
          if (typeof c.__input === "string") {
            input = getCallbackFromString(c.__input);
          }
          if (c.__args) {
            input = wrapArgs2(input, c.__args, graph);
          }
          if (c.__output) {
            let output = c.__output;
            if (typeof c.__output === "string") {
              output = getCallbackFromString(output);
            } else if (typeof a.__output === "object") {
              output = recursivelyCreateCallback(output);
            }
            if (typeof output === "function") {
              let fn2 = input;
              input = (...inp) => {
                return output(fn2(...inp));
              };
            }
          }
          return input;
        };
        args[i] = recursivelyCreateCallback(a);
      } else {
        let arg = a;
        args[i] = () => {
          return arg;
        };
      }
    };
    argOrder.forEach(forArg);
    if (typeof callback === "string")
      callback = getCallbackFromString(callback);
    let fn = callback;
    callback = function(...inp) {
      let mapArg = (arg) => {
        return arg(...inp);
      };
      return fn(...args.map(mapArg));
    };
    return callback;
  };
  var backprop2 = (node, parent, graph) => {
    if (node.__node.backward && parent instanceof GraphNode2) {
      graph.setListeners({ [parent.__node.tag]: { [node.__node.tag]: parent } });
    }
  };
  var loop2 = (node, parent, graph) => {
    if (node.__operator && !node.__node.looperSet) {
      if (typeof node.__node.delay === "number") {
        let fn = node.__operator;
        node.__setOperator((...args) => {
          return new Promise((res, rej) => {
            setTimeout(async () => {
              res(await fn(...args));
            }, node.__node.delay);
          });
        });
      } else if (node.__node.frame === true) {
        let fn = node.__operator;
        node.__setOperator((...args) => {
          return new Promise((res, rej) => {
            requestAnimationFrame(async () => {
              res(await fn(...args));
            });
          });
        });
      }
      if (typeof node.__node.repeat === "number" || typeof node.__node.recursive === "number") {
        let fn = node.__operator;
        node.__setOperator(async (...args) => {
          let i = node.__node.repeat ? node.__node.repeat : node.__node.recursive;
          let result;
          let repeater = async (tick, ...inp) => {
            while (tick > 0) {
              if (node.__node.delay || node.__node.frame) {
                fn(...inp).then(async (res) => {
                  if (node.__node.recursive) {
                    await repeater(tick, res);
                  } else
                    await repeater(tick, ...inp);
                });
                break;
              } else
                result = await fn(...args);
              tick--;
            }
          };
          await repeater(i, ...args);
          return result;
        });
      }
      if (node.__node.loop && typeof node.__node.loop === "number") {
        node.__node.looperSet = true;
        let fn = node.__operator;
        node.__setOperator((...args) => {
          if (!("looping" in node.__node))
            node.__node.looping = true;
          if (node.__node.looping) {
            fn(...args);
            setTimeout(() => {
              node.__operator(...args);
            }, node.__node.loop);
          }
        });
        if (node.__node.looping)
          node.__operator();
        let ondelete = (node2) => {
          if (node2.__node.looping)
            node2.__node.looping = false;
        };
        node.__addOndisconnected(ondelete);
      }
    }
  };
  var animate2 = (node, parent, graph) => {
    if (node.__node.animate === true || node.__animation) {
      let fn = node.__operator;
      node.__setOperator((...args) => {
        if (!("animating" in node.__node))
          node.__node.animating = true;
        if (node.__node.animating) {
          if (typeof node.__animation === "function")
            node.__animation(...args);
          else
            fn(...args);
          requestAnimationFrame(() => {
            node.__operator(...args);
          });
        }
      });
      if (node.__node.animating || (!("animating" in node.__node) || node.__node.animating) && node.__animation)
        setTimeout(() => {
          requestAnimationFrame(node.__operator);
        }, 10);
      let ondelete = (node2) => {
        if (node2.__node.animating)
          node2.__node.animating = false;
      };
      node.__addOndisconnected(ondelete);
    }
  };
  var branching2 = (node, parent, graph) => {
    if (typeof node.__branch === "object" && node.__operator && !node.__branchApplied) {
      let fn = node.__operator;
      node.__branchApplied = true;
      node.__operator = (...args) => {
        let result = fn(...args);
        for (const key in node.__branch) {
          let triggered = () => {
            if (typeof node.__branch[key].then === "function") {
              node.__branch[key].then(result);
            } else if (node.__branch[key].then instanceof GraphNode2 && node.__branch[key].then.__operator) {
              node.__branch[key].then.__operator(result);
            } else
              result = node.__branch[key].then;
          };
          if (typeof node.__branch[key].if === "function") {
            if (node.__branch[key].if(result) == true) {
              triggered();
            }
          } else if (node.__branch[key].if === result) {
            triggered();
          }
        }
        return result;
      };
    }
    if (node.__listeners) {
      for (const key in node.__listeners) {
        if (typeof node.__listeners[key] === "object") {
          if (node.__listeners[key].branch && !node.__listeners[key].branchApplied) {
            let fn = node.__listeners[key].callback;
            node.__listeners[key].branchApplied = true;
            node.__listeners.callback = (ret) => {
              let triggered = () => {
                if (typeof node.__listeners[key].branch.then === "function") {
                  ret = node.__listeners[key].branch.then(ret);
                } else if (node.__listeners[key].branch.then instanceof GraphNode2 && node.__listeners[key].branch.then.__operator) {
                  ret = node.__listeners[key].branch.then.__operator(ret);
                } else
                  ret = node.__listeners[key].branch.then;
              };
              if (typeof node.__listeners[key].branch.if === "function") {
                if (node.__listeners[key].branch.if(ret)) {
                  triggered();
                }
              } else if (node.__listeners[key].branch.if === ret) {
                triggered();
              }
              return fn(ret);
            };
          }
        }
      }
    }
  };
  var triggerListenerOncreate2 = (node, parent, graph) => {
    if (node.__listeners) {
      for (const key in node.__listeners) {
        if (typeof node.__listeners[key] === "object") {
          if (node.__listeners[key].oncreate) {
            node.__listeners[key].callback(node.__listeners[key].oncreate);
          }
        }
      }
    }
  };
  var bindListener2 = (node, parent, graph) => {
    if (node.__listeners) {
      for (const key in node.__listeners) {
        if (typeof node.__listeners[key] === "object") {
          if (typeof node.__listeners[key].binding === "object") {
            node.__listeners.callback = node.__listeners.callback.bind(node.__listeners[key].binding);
          }
        }
      }
    }
  };
  var transformListenerResult2 = (node, parent, graph) => {
    if (node.__listeners) {
      for (const key in node.__listeners) {
        if (typeof node.__listeners[key] === "object") {
          if (typeof node.__listeners[key].transform === "function" && !node.__listeners[key].transformApplied) {
            let fn = node.__listeners[key].callback;
            node.__listeners[key].transformApplied = true;
            node.__listeners.callback = (ret) => {
              ret = node.__listeners[key].transform(ret);
              return fn(ret);
            };
          }
        }
      }
    }
  };
  var substitute__operator2 = (node, parent, graph) => {
    if (node.post && !node.__operator) {
      node.__setOperator(node.post);
    } else if (!node.__operator && typeof node.get == "function") {
      node.__setOperator(node.get);
    }
    if (!node.get && node.__operator) {
      node.get = node.__operator;
    }
    if (node.aliases) {
      node.aliases.forEach((a) => {
        graph.set(a, node);
        let ondelete = (node2) => {
          graph.__node.nodes.delete(a);
        };
        node.__addOndisconnected(ondelete);
      });
    }
    if (typeof graph.__node.roots?.[node.__node.tag] === "object" && node.get)
      graph.__node.roots[node.__node.tag].get = node.get;
  };
  var loaders2 = { backprop: backprop2, loop: loop2, animate: animate2, branching: branching2, triggerListenerOncreate: triggerListenerOncreate2, bindListener: bindListener2, transformListenerResult: transformListenerResult2, substitute__operator: substitute__operator2 };
  function parseFunctionFromText2(method = "") {
    let getFunctionBody = (methodString) => {
      return methodString.replace(/^\W*(function[^{]+\{([\s\S]*)\}|[^=]+=>[^{]*\{([\s\S]*)\}|[^=]+=>(.+))/i, "$2$3$4");
    };
    let getFunctionHead = (methodString) => {
      let startindex = methodString.indexOf("=>") + 1;
      if (startindex <= 0) {
        startindex = methodString.indexOf("){");
      }
      if (startindex <= 0) {
        startindex = methodString.indexOf(") {");
      }
      return methodString.slice(0, methodString.indexOf("{", startindex) + 1);
    };
    let newFuncHead = getFunctionHead(method);
    let newFuncBody = getFunctionBody(method);
    let newFunc;
    if (newFuncHead.includes("function")) {
      let varName = newFuncHead.split("(")[1].split(")")[0];
      newFunc = new Function(varName, newFuncBody);
    } else {
      if (newFuncHead.substring(0, 6) === newFuncBody.substring(0, 6)) {
        let varName = newFuncHead.split("(")[1].split(")")[0];
        newFunc = new Function(varName, newFuncBody.substring(newFuncBody.indexOf("{") + 1, newFuncBody.length - 1));
      } else {
        try {
          newFunc = (0, eval)(newFuncHead + newFuncBody + "}");
        } catch {
        }
      }
    }
    return newFunc;
  }
  var stringifyWithCircularRefs2 = function() {
    const refs = /* @__PURE__ */ new Map();
    const parents = [];
    const path = ["this"];
    function clear() {
      refs.clear();
      parents.length = 0;
      path.length = 1;
    }
    function updateParents(key, value) {
      var idx = parents.length - 1;
      var prev = parents[idx];
      if (typeof prev === "object") {
        if (prev[key] === value || idx === 0) {
          path.push(key);
          parents.push(value.pushed);
        } else {
          while (idx-- >= 0) {
            prev = parents[idx];
            if (typeof prev === "object") {
              if (prev[key] === value) {
                idx += 2;
                parents.length = idx;
                path.length = idx;
                --idx;
                parents[idx] = value;
                path[idx] = key;
                break;
              }
            }
            idx--;
          }
        }
      }
    }
    function checkCircular(key, value) {
      if (value != null) {
        if (typeof value === "object") {
          if (key) {
            updateParents(key, value);
          }
          let other = refs.get(value);
          if (other) {
            return "[Circular Reference]" + other;
          } else {
            refs.set(value, path.join("."));
          }
        }
      }
      return value;
    }
    return function stringifyWithCircularRefs22(obj, space) {
      try {
        parents.push(obj);
        return JSON.stringify(obj, checkCircular, space);
      } finally {
        clear();
      }
    };
  }();
  if (JSON.stringifyWithCircularRefs === void 0) {
    JSON.stringifyWithCircularRefs = stringifyWithCircularRefs2;
  }
  var stringifyFast2 = function() {
    const refs = /* @__PURE__ */ new Map();
    const parents = [];
    const path = ["this"];
    function clear() {
      refs.clear();
      parents.length = 0;
      path.length = 1;
    }
    function updateParents(key, value) {
      var idx = parents.length - 1;
      if (parents[idx]) {
        var prev = parents[idx];
        if (typeof prev === "object") {
          if (prev[key] === value || idx === 0) {
            path.push(key);
            parents.push(value.pushed);
          } else {
            while (idx-- >= 0) {
              prev = parents[idx];
              if (typeof prev === "object") {
                if (prev[key] === value) {
                  idx += 2;
                  parents.length = idx;
                  path.length = idx;
                  --idx;
                  parents[idx] = value;
                  path[idx] = key;
                  break;
                }
              }
              idx++;
            }
          }
        }
      }
    }
    function checkValues(key, value) {
      let val;
      if (value != null) {
        if (typeof value === "object") {
          let c = value.constructor.name;
          if (key && c === "Object") {
            updateParents(key, value);
          }
          let other = refs.get(value);
          if (other) {
            return "[Circular Reference]" + other;
          } else {
            refs.set(value, path.join("."));
          }
          if (c === "Array") {
            if (value.length > 20) {
              val = value.slice(value.length - 20);
            } else
              val = value;
          } else if (c.includes("Set")) {
            val = Array.from(value);
          } else if (c !== "Object" && c !== "Number" && c !== "String" && c !== "Boolean") {
            val = "instanceof_" + c;
          } else if (c === "Object") {
            let obj = {};
            for (const prop in value) {
              if (value[prop] == null) {
                obj[prop] = value[prop];
              } else if (Array.isArray(value[prop])) {
                if (value[prop].length > 20)
                  obj[prop] = value[prop].slice(value[prop].length - 20);
                else
                  obj[prop] = value[prop];
              } else if (value[prop].constructor.name === "Object") {
                obj[prop] = {};
                for (const p in value[prop]) {
                  if (Array.isArray(value[prop][p])) {
                    if (value[prop][p].length > 20)
                      obj[prop][p] = value[prop][p].slice(value[prop][p].length - 20);
                    else
                      obj[prop][p] = value[prop][p];
                  } else {
                    if (value[prop][p] != null) {
                      let con = value[prop][p].constructor.name;
                      if (con.includes("Set")) {
                        obj[prop][p] = Array.from(value[prop][p]);
                      } else if (con !== "Number" && con !== "String" && con !== "Boolean") {
                        obj[prop][p] = "instanceof_" + con;
                      } else {
                        obj[prop][p] = value[prop][p];
                      }
                    } else {
                      obj[prop][p] = value[prop][p];
                    }
                  }
                }
              } else {
                let con = value[prop].constructor.name;
                if (con.includes("Set")) {
                  obj[prop] = Array.from(value[prop]);
                } else if (con !== "Number" && con !== "String" && con !== "Boolean") {
                  obj[prop] = "instanceof_" + con;
                } else {
                  obj[prop] = value[prop];
                }
              }
            }
            val = obj;
          } else {
            val = value;
          }
        } else {
          val = value;
        }
      }
      return val;
    }
    return function stringifyFast22(obj, space) {
      parents.push(obj);
      let res = JSON.stringify(obj, checkValues, space);
      clear();
      return res;
    };
  }();
  if (JSON.stringifyFast === void 0) {
    JSON.stringifyFast = stringifyFast2;
  }
  var Service2 = class extends Graph2 {
    constructor(options) {
      super({ ...options, loaders: options?.loaders ? Object.assign({ ...loaders2 }, options.loaders) : { ...loaders2 } });
      this.name = `service${Math.floor(Math.random() * 1e15)}`;
      this.addServices = (services) => {
        for (const s in services) {
          if (typeof services[s] === "function")
            services[s] = new services[s]();
          if (services[s]?.__node?.loaders)
            Object.assign(this.__node.loaders, services[s].__node.loaders);
          if (services[s]?.__node?.nodes) {
            services[s].__node.nodes.forEach((n, tag) => {
              if (!this.get(tag)) {
                this.set(tag, n);
              } else
                this.set(s + "." + tag, n);
            });
            this.__node.nodes.forEach((n, k) => {
              if (!services[s].__node.nodes.get(k))
                services[s].__node.nodes.set(k, n);
            });
            let set = this.set;
            this.set = (tag, node) => {
              services[s].set(tag, node);
              return set(tag, node);
            };
            let del = this.delete;
            this.delete = (tag) => {
              services[s].delete(tag);
              return del(tag);
            };
          } else if (typeof services[s] === "object") {
            this.load(services[s]);
          }
        }
      };
      this.handleMethod = (route, method, args) => {
        let m = method.toLowerCase();
        let src = this.__node.nodes.get(route);
        if (!src) {
          src = this.__node.roots[route];
        }
        if (src?.[m]) {
          if (typeof src[m] !== "function") {
            if (args)
              src[m] = args;
            return src[m];
          } else
            return src[m](args);
        } else
          return this.handleServiceMessage({ route, args, method });
      };
      this.transmit = (...args) => {
        if (typeof args[0] === "object") {
          if (args[0].method) {
            return this.handleMethod(args[0].route, args[0].method, args[0].args);
          } else if (args[0].route) {
            return this.handleServiceMessage(args[0]);
          } else if (args[0].node) {
            return this.handleGraphNodeCall(args[0].node, args[0].args);
          } else if (this.__node.keepState) {
            if (args[0].route)
              this.setState({ [args[0].route]: args[0].args });
            if (args[0].node)
              this.setState({ [args[0].node]: args[0].args });
          }
          return args;
        } else
          return args;
      };
      this.receive = (...args) => {
        if (args[0]) {
          if (typeof args[0] === "string") {
            let substr = args[0].substring(0, 8);
            if (substr.includes("{") || substr.includes("[")) {
              if (substr.includes("\\"))
                args[0] = args[0].replace(/\\/g, "");
              if (args[0][0] === '"') {
                args[0] = args[0].substring(1, args[0].length - 1);
              }
              ;
              args[0] = JSON.parse(args[0]);
            }
          }
        }
        if (typeof args[0] === "object") {
          if (args[0].method) {
            return this.handleMethod(args[0].route, args[0].method, args[0].args);
          } else if (args[0].route) {
            return this.handleServiceMessage(args[0]);
          } else if (args[0].node) {
            return this.handleGraphNodeCall(args[0].node, args[0].args);
          } else if (this.__node.keepState) {
            if (args[0].route)
              this.setState({ [args[0].route]: args[0].args });
            if (args[0].node)
              this.setState({ [args[0].node]: args[0].args });
          }
          return args;
        } else
          return args;
      };
      this.pipe = (source, destination, endpoint, method, callback) => {
        if (source instanceof GraphNode2) {
          if (callback)
            return this.subscribe(source, (res) => {
              let mod = callback(res);
              if (mod !== void 0)
                this.transmit({ route: destination, args: mod, method });
              else
                this.transmit({ route: destination, args: res, method }, endpoint);
            });
          else
            return this.subscribe(source, (res) => {
              this.transmit({ route: destination, args: res, method }, endpoint);
            });
        } else if (typeof source === "string")
          return this.subscribe(source, (res) => {
            this.transmit({ route: destination, args: res, method }, endpoint);
          });
      };
      this.pipeOnce = (source, destination, endpoint, method, callback) => {
        if (source instanceof GraphNode2) {
          if (callback)
            return source.__node.state.subscribeEventOnce(source.__node.unique, (res) => {
              let mod = callback(res);
              if (mod !== void 0)
                this.transmit({ route: destination, args: mod, method });
              else
                this.transmit({ route: destination, args: res, method }, endpoint);
            });
          else
            return this.__node.state.subscribeEventOnce(source.__node.unique, (res) => {
              this.transmit({ route: destination, args: res, method }, endpoint);
            });
        } else if (typeof source === "string")
          return this.__node.state.subscribeEventOnce(this.__node.nodes.get(source).__node.unique, (res) => {
            this.transmit({ route: destination, args: res, method }, endpoint);
          });
      };
      this.terminate = (...args) => {
      };
      this.isTypedArray = isTypedArray2;
      this.recursivelyAssign = recursivelyAssign22;
      this.spliceTypedArray = spliceTypedArray2;
      this.ping = () => {
        console.log("pinged!");
        return "pong";
      };
      this.echo = (...args) => {
        this.transmit(...args);
        return args;
      };
      if (options?.services)
        this.addServices(options.services);
      this.load(this);
    }
    handleServiceMessage(message4) {
      let call;
      if (typeof message4 === "object") {
        if (message4.route)
          call = message4.route;
        else if (message4.node)
          call = message4.node;
      }
      if (call) {
        if (Array.isArray(message4.args))
          return this.run(call, ...message4.args);
        else
          return this.run(call, message4.args);
      } else
        return message4;
    }
    handleGraphNodeCall(route, args) {
      if (!route)
        return args;
      if (args?.args) {
        this.handleServiceMessage(args);
      } else if (Array.isArray(args))
        return this.run(route, ...args);
      else
        return this.run(route, args);
    }
  };
  function isTypedArray2(x3) {
    return ArrayBuffer.isView(x3) && Object.prototype.toString.call(x3) !== "[object DataView]";
  }
  var recursivelyAssign22 = (target, obj) => {
    for (const key in obj) {
      if (typeof obj[key] === "object" && !Array.isArray(obj[key])) {
        if (typeof target[key] === "object" && !Array.isArray(target[key]))
          recursivelyAssign22(target[key], obj[key]);
        else
          target[key] = recursivelyAssign22({}, obj[key]);
      } else
        target[key] = obj[key];
    }
    return target;
  };
  function spliceTypedArray2(arr, start, end) {
    let s = arr.subarray(0, start);
    let e;
    if (end) {
      e = arr.subarray(end + 1);
    }
    let ta;
    if (s.length > 0 || e?.length > 0)
      ta = new arr.constructor(s.length + e.length);
    if (ta) {
      if (s.length > 0)
        ta.set(s);
      if (e && e.length > 0)
        ta.set(e, s.length);
    }
    return ta;
  }
  var unsafeRoutes2 = { setRoute: function(fn, fnName) {
    if (typeof fn === "string")
      fn = parseFunctionFromText2(fn);
    if (typeof fn === "function") {
      if (!fnName)
        fnName = fn.name;
      if (this.__node.graph.get(fnName)) {
        this.__node.graph.get(fnName).__setOperator(fn);
      } else {
        let node = this.__node.graph.add({ __node: { tag: fnName }, __operator: fn });
      }
      return true;
    }
    return false;
  }, setNode: function(fn, fnName) {
    if (typeof fn === "string")
      fn = parseFunctionFromText2(fn);
    if (typeof fn === "function") {
      if (!fnName)
        fnName = fn.name;
      if (this.__node.graph.get(fnName)) {
        this.__node.graph.get(fnName).__setOperator(fn);
      } else
        this.__node.graph.add({ __node: { tag: fnName }, __operator: fn });
      return true;
    }
    return false;
  }, setMethod: function(route, fn, fnName) {
    if (typeof fn === "string")
      fn = parseFunctionFromText2(fn);
    if (typeof fn === "function") {
      if (!fnName)
        fnName = fn.name;
      if (this.__node.graph.get(route)) {
        this.__node.graph.get(route)[fnName] = fn;
      } else
        this.__node.graph.add({ __node: { tag: fnName, [fnName]: fn } });
      return true;
    }
    return false;
  }, assignRoute: function(route, source) {
    if (this.__node.graph.get(route) && typeof source === "object") {
      Object.assign(this.__node.graph.get(route), source);
    }
  }, transferClass: (classObj, className) => {
    if (typeof classObj === "object") {
      let str4 = classObj.toString();
      let message4 = { route: "receiveClass", args: [str4, className] };
      return message4;
    }
    return false;
  }, receiveClass: function(stringified, className) {
    if (typeof stringified === "string") {
      if (stringified.indexOf("class") === 0) {
        let cls = (0, eval)("(" + stringified + ")");
        let name3 = className;
        if (!name3)
          name3 = cls.name;
        this.__node.graph[name3] = cls;
        return true;
      }
    }
    return false;
  }, setGlobal: (key, value) => {
    globalThis[key] = value;
    return true;
  }, assignGlobalObject: (target, source) => {
    if (!globalThis[target])
      return false;
    if (typeof source === "object")
      Object.assign(globalThis[target], source);
    return true;
  }, setValue: function(key, value) {
    this.__node.graph[key] = value;
    return true;
  }, assignObject: function(target, source) {
    if (!this.__node.graph[target])
      return false;
    if (typeof source === "object")
      Object.assign(this.__node.graph[target], source);
    return true;
  }, setGlobalFunction: (fn, fnName) => {
    if (typeof fn === "string")
      fn = parseFunctionFromText2(fn);
    if (typeof fn === "function") {
      if (!fnName)
        fnName = fn.name;
      globalThis[fnName] = fn;
      return true;
    }
    return false;
  }, assignFunctionToGlobalObject: function(globalObjectName, fn, fnName) {
    if (!globalThis[globalObjectName])
      return false;
    if (typeof fn === "string")
      fn = parseFunctionFromText2(fn);
    if (typeof fn === "function") {
      if (!fnName)
        fnName = fn.name;
      this.__node.graph[globalObjectName][fnName] = fn;
      return true;
    }
    return false;
  }, setFunction: function(fn, fnName) {
    if (typeof fn === "string")
      fn = parseFunctionFromText2(fn);
    if (typeof fn === "function") {
      if (!fnName)
        fnName = fn.name;
      this.__node.graph[fnName] = fn;
      return true;
    }
    return false;
  }, assignFunctionToObject: function(objectName, fn, fnName) {
    if (!this.__node.graph[objectName])
      return false;
    if (typeof fn === "string")
      fn = parseFunctionFromText2(fn);
    if (typeof fn === "function") {
      if (!fnName)
        fnName = fn.name;
      this.__node.graph[objectName][fnName] = fn;
      return true;
    }
    return false;
  } };
  var htmlloader = (node, parent, graph, roots, properties, key) => {
    if (node.__onresize) {
      let onresize = node.__onresize;
      node.__onresize = (ev2) => {
        onresize.call(node, ev2, node.__props);
      };
    }
    if (node.__onremove) {
      let ondelete = node.__onremove;
      node.__onremove = (element) => {
        ondelete.call(node, element);
      };
    }
    if (node.__onrender) {
      let onrender = node.__onrender;
      node.__onrender = (element) => {
        onrender.call(node, element);
      };
    }
    if (node.tagName || node.__element) {
      if (node.tagName)
        node.__props = document.createElement(node.tagName);
      else if (node.__element) {
        if (node.__element instanceof HTMLElement)
          node.__props = node.__element;
        else
          node.__props = document.createElement(node.__element);
      }
      if (!(node.__props instanceof HTMLElement))
        return;
    }
    if (node.__props instanceof HTMLElement) {
      node.__proxyObject(node.__props);
      if (node.__onresize)
        window.addEventListener("resize", node.__onresize);
    }
    if (node.__props instanceof HTMLElement) {
      let keys = Object.getOwnPropertyNames(properties);
      for (const k of keys) {
        if (k === "style" && typeof properties[k] === "object") {
          Object.assign(node.__props.style, properties[k]);
        } else
          node.__props[k] = properties[k];
      }
      if (node.__attributes) {
        for (const k in node.__attributes) {
          if (k === "style" && typeof node.__attributes[k] === "object") {
            Object.assign(node.__props.style, node.__attributes[k]);
          }
          node.__props[k] = node.__attributes[k];
        }
      }
    }
    if (node.__props instanceof HTMLElement) {
      node.__props.id = key;
      node.__props.node = node;
      node.__addOnconnected((n) => {
        if (!(node.__props instanceof HTMLBodyElement || node.__props instanceof HTMLHeadElement) && n.__props.parentNode)
          n.__props.remove();
        if (properties.parentNode) {
          if (typeof properties.parentNode === "string" && document.getElementById(properties.parentNode))
            document.getElementById(properties.parentNode)?.appendChild(n.__props);
          else if (properties.parentNode instanceof HTMLElement)
            properties.parentNode.appendChild(n.__props);
        } else if (parent.__props instanceof HTMLElement) {
          parent.__props.appendChild(node.__props);
        } else if (typeof graph.parentNode === "string" && document.getElementById(properties.parentNode)) {
          document.getElementById(properties.parentNode)?.appendChild(graph.__props);
        } else if (graph.parentNode instanceof HTMLElement) {
          graph.parentNode.appendChild(node.__props);
        } else if (!(node.__props instanceof HTMLBodyElement || node.__props instanceof HTMLHeadElement))
          document.body.appendChild(node.__props);
        if (node.__onrender)
          setTimeout(() => {
            node.__onrender(node.__props);
          }, 0.01);
      });
      node.__addOndisconnected((n) => {
        n.__props.remove();
        if (typeof n.__onremove === "function") {
          n.__onremove(n.__props);
        }
        if (n.__onresize) {
          window.removeEventListener("resize", n.__onresize);
        }
      });
    }
  };
  var sjcl2 = { cipher: {}, hash: {}, keyexchange: {}, mode: {}, misc: {}, codec: {}, exception: { corrupt: function(a) {
    this.toString = function() {
      return "CORRUPT: " + this.message;
    };
    this.message = a;
  }, invalid: function(a) {
    this.toString = function() {
      return "INVALID: " + this.message;
    };
    this.message = a;
  }, bug: function(a) {
    this.toString = function() {
      return "BUG: " + this.message;
    };
    this.message = a;
  }, notReady: function(a) {
    this.toString = function() {
      return "NOT READY: " + this.message;
    };
    this.message = a;
  } } };
  sjcl2.cipher.aes = function(a) {
    this.s[0][0][0] || this.O();
    var b2, c, d2, e, f = this.s[0][4], g = this.s[1];
    b2 = a.length;
    var h = 1;
    if (4 !== b2 && 6 !== b2 && 8 !== b2)
      throw new sjcl2.exception.invalid("invalid aes key size");
    this.b = [d2 = a.slice(0), e = []];
    for (a = b2; a < 4 * b2 + 28; a++) {
      c = d2[a - 1];
      if (0 === a % b2 || 8 === b2 && 4 === a % b2)
        c = f[c >>> 24] << 24 ^ f[c >> 16 & 255] << 16 ^ f[c >> 8 & 255] << 8 ^ f[c & 255], 0 === a % b2 && (c = c << 8 ^ c >>> 24 ^ h << 24, h = h << 1 ^ 283 * (h >> 7));
      d2[a] = d2[a - b2] ^ c;
    }
    for (b2 = 0; a; b2++, a--)
      c = d2[b2 & 3 ? a : a - 4], e[b2] = 4 >= a || 4 > b2 ? c : g[0][f[c >>> 24]] ^ g[1][f[c >> 16 & 255]] ^ g[2][f[c >> 8 & 255]] ^ g[3][f[c & 255]];
  };
  sjcl2.cipher.aes.prototype = { encrypt: function(a) {
    return t2(this, a, 0);
  }, decrypt: function(a) {
    return t2(this, a, 1);
  }, s: [[[], [], [], [], []], [[], [], [], [], []]], O: function() {
    var a = this.s[0], b2 = this.s[1], c = a[4], d2 = b2[4], e, f, g, h = [], k = [], l, n, m, p;
    for (e = 0; 256 > e; e++)
      k[(h[e] = e << 1 ^ 283 * (e >> 7)) ^ e] = e;
    for (f = g = 0; !c[f]; f ^= l || 1, g = k[g] || 1)
      for (m = g ^ g << 1 ^ g << 2 ^ g << 3 ^ g << 4, m = m >> 8 ^ m & 255 ^ 99, c[f] = m, d2[m] = f, n = h[e = h[l = h[f]]], p = 16843009 * n ^ 65537 * e ^ 257 * l ^ 16843008 * f, n = 257 * h[m] ^ 16843008 * m, e = 0; 4 > e; e++)
        a[e][f] = n = n << 24 ^ n >>> 8, b2[e][m] = p = p << 24 ^ p >>> 8;
    for (e = 0; 5 > e; e++)
      a[e] = a[e].slice(0), b2[e] = b2[e].slice(0);
  } };
  function t2(a, b2, c) {
    if (4 !== b2.length)
      throw new sjcl2.exception.invalid("invalid aes block size");
    var d2 = a.b[c], e = b2[0] ^ d2[0], f = b2[c ? 3 : 1] ^ d2[1], g = b2[2] ^ d2[2];
    b2 = b2[c ? 1 : 3] ^ d2[3];
    var h, k, l, n = d2.length / 4 - 2, m, p = 4, r = [0, 0, 0, 0];
    h = a.s[c];
    a = h[0];
    var q = h[1], v2 = h[2], w2 = h[3], x3 = h[4];
    for (m = 0; m < n; m++)
      h = a[e >>> 24] ^ q[f >> 16 & 255] ^ v2[g >> 8 & 255] ^ w2[b2 & 255] ^ d2[p], k = a[f >>> 24] ^ q[g >> 16 & 255] ^ v2[b2 >> 8 & 255] ^ w2[e & 255] ^ d2[p + 1], l = a[g >>> 24] ^ q[b2 >> 16 & 255] ^ v2[e >> 8 & 255] ^ w2[f & 255] ^ d2[p + 2], b2 = a[b2 >>> 24] ^ q[e >> 16 & 255] ^ v2[f >> 8 & 255] ^ w2[g & 255] ^ d2[p + 3], p += 4, e = h, f = k, g = l;
    for (m = 0; 4 > m; m++)
      r[c ? 3 & -m : m] = x3[e >>> 24] << 24 ^ x3[f >> 16 & 255] << 16 ^ x3[g >> 8 & 255] << 8 ^ x3[b2 & 255] ^ d2[p++], h = e, e = f, f = g, g = b2, b2 = h;
    return r;
  }
  sjcl2.bitArray = { bitSlice: function(a, b2, c) {
    a = sjcl2.bitArray.$(a.slice(b2 / 32), 32 - (b2 & 31)).slice(1);
    return void 0 === c ? a : sjcl2.bitArray.clamp(a, c - b2);
  }, extract: function(a, b2, c) {
    var d2 = Math.floor(-b2 - c & 31);
    return ((b2 + c - 1 ^ b2) & -32 ? a[b2 / 32 | 0] << 32 - d2 ^ a[b2 / 32 + 1 | 0] >>> d2 : a[b2 / 32 | 0] >>> d2) & (1 << c) - 1;
  }, concat: function(a, b2) {
    if (0 === a.length || 0 === b2.length)
      return a.concat(b2);
    var c = a[a.length - 1], d2 = sjcl2.bitArray.getPartial(c);
    return 32 === d2 ? a.concat(b2) : sjcl2.bitArray.$(b2, d2, c | 0, a.slice(0, a.length - 1));
  }, bitLength: function(a) {
    var b2 = a.length;
    return 0 === b2 ? 0 : 32 * (b2 - 1) + sjcl2.bitArray.getPartial(a[b2 - 1]);
  }, clamp: function(a, b2) {
    if (32 * a.length < b2)
      return a;
    a = a.slice(0, Math.ceil(b2 / 32));
    var c = a.length;
    b2 = b2 & 31;
    0 < c && b2 && (a[c - 1] = sjcl2.bitArray.partial(b2, a[c - 1] & 2147483648 >> b2 - 1, 1));
    return a;
  }, partial: function(a, b2, c) {
    return 32 === a ? b2 : (c ? b2 | 0 : b2 << 32 - a) + 1099511627776 * a;
  }, getPartial: function(a) {
    return Math.round(a / 1099511627776) || 32;
  }, equal: function(a, b2) {
    if (sjcl2.bitArray.bitLength(a) !== sjcl2.bitArray.bitLength(b2))
      return false;
    var c = 0, d2;
    for (d2 = 0; d2 < a.length; d2++)
      c |= a[d2] ^ b2[d2];
    return 0 === c;
  }, $: function(a, b2, c, d2) {
    var e;
    e = 0;
    for (void 0 === d2 && (d2 = []); 32 <= b2; b2 -= 32)
      d2.push(c), c = 0;
    if (0 === b2)
      return d2.concat(a);
    for (e = 0; e < a.length; e++)
      d2.push(c | a[e] >>> b2), c = a[e] << 32 - b2;
    e = a.length ? a[a.length - 1] : 0;
    a = sjcl2.bitArray.getPartial(e);
    d2.push(sjcl2.bitArray.partial(b2 + a & 31, 32 < b2 + a ? c : d2.pop(), 1));
    return d2;
  }, i: function(a, b2) {
    return [a[0] ^ b2[0], a[1] ^ b2[1], a[2] ^ b2[2], a[3] ^ b2[3]];
  }, byteswapM: function(a) {
    var b2, c;
    for (b2 = 0; b2 < a.length; ++b2)
      c = a[b2], a[b2] = c >>> 24 | c >>> 8 & 65280 | (c & 65280) << 8 | c << 24;
    return a;
  } };
  sjcl2.codec.utf8String = { fromBits: function(a) {
    var b2 = "", c = sjcl2.bitArray.bitLength(a), d2, e;
    for (d2 = 0; d2 < c / 8; d2++)
      0 === (d2 & 3) && (e = a[d2 / 4]), b2 += String.fromCharCode(e >>> 8 >>> 8 >>> 8), e <<= 8;
    return decodeURIComponent(escape(b2));
  }, toBits: function(a) {
    a = unescape(encodeURIComponent(a));
    var b2 = [], c, d2 = 0;
    for (c = 0; c < a.length; c++)
      d2 = d2 << 8 | a.charCodeAt(c), 3 === (c & 3) && (b2.push(d2), d2 = 0);
    c & 3 && b2.push(sjcl2.bitArray.partial(8 * (c & 3), d2));
    return b2;
  } };
  sjcl2.codec.hex = { fromBits: function(a) {
    var b2 = "", c;
    for (c = 0; c < a.length; c++)
      b2 += ((a[c] | 0) + 263882790666240).toString(16).substr(4);
    return b2.substr(0, sjcl2.bitArray.bitLength(a) / 4);
  }, toBits: function(a) {
    var b2, c = [], d2;
    a = a.replace(/\s|0x/g, "");
    d2 = a.length;
    a = a + "00000000";
    for (b2 = 0; b2 < a.length; b2 += 8)
      c.push(parseInt(a.substr(b2, 8), 16) ^ 0);
    return sjcl2.bitArray.clamp(c, 4 * d2);
  } };
  sjcl2.codec.base32 = { B: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", X: "0123456789ABCDEFGHIJKLMNOPQRSTUV", BITS: 32, BASE: 5, REMAINING: 27, fromBits: function(a, b2, c) {
    var d2 = sjcl2.codec.base32.BASE, e = sjcl2.codec.base32.REMAINING, f = "", g = 0, h = sjcl2.codec.base32.B, k = 0, l = sjcl2.bitArray.bitLength(a);
    c && (h = sjcl2.codec.base32.X);
    for (c = 0; f.length * d2 < l; )
      f += h.charAt((k ^ a[c] >>> g) >>> e), g < d2 ? (k = a[c] << d2 - g, g += e, c++) : (k <<= d2, g -= d2);
    for (; f.length & 7 && !b2; )
      f += "=";
    return f;
  }, toBits: function(a, b2) {
    a = a.replace(/\s|=/g, "").toUpperCase();
    var c = sjcl2.codec.base32.BITS, d2 = sjcl2.codec.base32.BASE, e = sjcl2.codec.base32.REMAINING, f = [], g, h = 0, k = sjcl2.codec.base32.B, l = 0, n, m = "base32";
    b2 && (k = sjcl2.codec.base32.X, m = "base32hex");
    for (g = 0; g < a.length; g++) {
      n = k.indexOf(a.charAt(g));
      if (0 > n) {
        if (!b2)
          try {
            return sjcl2.codec.base32hex.toBits(a);
          } catch (p) {
          }
        throw new sjcl2.exception.invalid("this isn't " + m + "!");
      }
      h > e ? (h -= e, f.push(l ^ n >>> h), l = n << c - h) : (h += d2, l ^= n << c - h);
    }
    h & 56 && f.push(sjcl2.bitArray.partial(h & 56, l, 1));
    return f;
  } };
  sjcl2.codec.base32hex = { fromBits: function(a, b2) {
    return sjcl2.codec.base32.fromBits(a, b2, 1);
  }, toBits: function(a) {
    return sjcl2.codec.base32.toBits(a, 1);
  } };
  sjcl2.codec.base64 = { B: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", fromBits: function(a, b2, c) {
    var d2 = "", e = 0, f = sjcl2.codec.base64.B, g = 0, h = sjcl2.bitArray.bitLength(a);
    c && (f = f.substr(0, 62) + "-_");
    for (c = 0; 6 * d2.length < h; )
      d2 += f.charAt((g ^ a[c] >>> e) >>> 26), 6 > e ? (g = a[c] << 6 - e, e += 26, c++) : (g <<= 6, e -= 6);
    for (; d2.length & 3 && !b2; )
      d2 += "=";
    return d2;
  }, toBits: function(a, b2) {
    a = a.replace(/\s|=/g, "");
    var c = [], d2, e = 0, f = sjcl2.codec.base64.B, g = 0, h;
    b2 && (f = f.substr(0, 62) + "-_");
    for (d2 = 0; d2 < a.length; d2++) {
      h = f.indexOf(a.charAt(d2));
      if (0 > h)
        throw new sjcl2.exception.invalid("this isn't base64!");
      26 < e ? (e -= 26, c.push(g ^ h >>> e), g = h << 32 - e) : (e += 6, g ^= h << 32 - e);
    }
    e & 56 && c.push(sjcl2.bitArray.partial(e & 56, g, 1));
    return c;
  } };
  sjcl2.codec.base64url = { fromBits: function(a) {
    return sjcl2.codec.base64.fromBits(a, 1, 1);
  }, toBits: function(a) {
    return sjcl2.codec.base64.toBits(a, 1);
  } };
  sjcl2.hash.sha256 = function(a) {
    this.b[0] || this.O();
    a ? (this.F = a.F.slice(0), this.A = a.A.slice(0), this.l = a.l) : this.reset();
  };
  sjcl2.hash.sha256.hash = function(a) {
    return new sjcl2.hash.sha256().update(a).finalize();
  };
  sjcl2.hash.sha256.prototype = { blockSize: 512, reset: function() {
    this.F = this.Y.slice(0);
    this.A = [];
    this.l = 0;
    return this;
  }, update: function(a) {
    "string" === typeof a && (a = sjcl2.codec.utf8String.toBits(a));
    var b2, c = this.A = sjcl2.bitArray.concat(this.A, a);
    b2 = this.l;
    a = this.l = b2 + sjcl2.bitArray.bitLength(a);
    if (9007199254740991 < a)
      throw new sjcl2.exception.invalid("Cannot hash more than 2^53 - 1 bits");
    if ("undefined" !== typeof Uint32Array) {
      var d2 = new Uint32Array(c), e = 0;
      for (b2 = 512 + b2 - (512 + b2 & 511); b2 <= a; b2 += 512)
        u2(this, d2.subarray(16 * e, 16 * (e + 1))), e += 1;
      c.splice(0, 16 * e);
    } else
      for (b2 = 512 + b2 - (512 + b2 & 511); b2 <= a; b2 += 512)
        u2(this, c.splice(0, 16));
    return this;
  }, finalize: function() {
    var a, b2 = this.A, c = this.F, b2 = sjcl2.bitArray.concat(b2, [sjcl2.bitArray.partial(1, 1)]);
    for (a = b2.length + 2; a & 15; a++)
      b2.push(0);
    b2.push(Math.floor(this.l / 4294967296));
    for (b2.push(this.l | 0); b2.length; )
      u2(this, b2.splice(0, 16));
    this.reset();
    return c;
  }, Y: [], b: [], O: function() {
    function a(a2) {
      return 4294967296 * (a2 - Math.floor(a2)) | 0;
    }
    for (var b2 = 0, c = 2, d2, e; 64 > b2; c++) {
      e = true;
      for (d2 = 2; d2 * d2 <= c; d2++)
        if (0 === c % d2) {
          e = false;
          break;
        }
      e && (8 > b2 && (this.Y[b2] = a(Math.pow(c, 0.5))), this.b[b2] = a(Math.pow(c, 1 / 3)), b2++);
    }
  } };
  function u2(a, b2) {
    var c, d2, e, f = a.F, g = a.b, h = f[0], k = f[1], l = f[2], n = f[3], m = f[4], p = f[5], r = f[6], q = f[7];
    for (c = 0; 64 > c; c++)
      16 > c ? d2 = b2[c] : (d2 = b2[c + 1 & 15], e = b2[c + 14 & 15], d2 = b2[c & 15] = (d2 >>> 7 ^ d2 >>> 18 ^ d2 >>> 3 ^ d2 << 25 ^ d2 << 14) + (e >>> 17 ^ e >>> 19 ^ e >>> 10 ^ e << 15 ^ e << 13) + b2[c & 15] + b2[c + 9 & 15] | 0), d2 = d2 + q + (m >>> 6 ^ m >>> 11 ^ m >>> 25 ^ m << 26 ^ m << 21 ^ m << 7) + (r ^ m & (p ^ r)) + g[c], q = r, r = p, p = m, m = n + d2 | 0, n = l, l = k, k = h, h = d2 + (k & l ^ n & (k ^ l)) + (k >>> 2 ^ k >>> 13 ^ k >>> 22 ^ k << 30 ^ k << 19 ^ k << 10) | 0;
    f[0] = f[0] + h | 0;
    f[1] = f[1] + k | 0;
    f[2] = f[2] + l | 0;
    f[3] = f[3] + n | 0;
    f[4] = f[4] + m | 0;
    f[5] = f[5] + p | 0;
    f[6] = f[6] + r | 0;
    f[7] = f[7] + q | 0;
  }
  sjcl2.mode.ccm = { name: "ccm", G: [], listenProgress: function(a) {
    sjcl2.mode.ccm.G.push(a);
  }, unListenProgress: function(a) {
    a = sjcl2.mode.ccm.G.indexOf(a);
    -1 < a && sjcl2.mode.ccm.G.splice(a, 1);
  }, fa: function(a) {
    var b2 = sjcl2.mode.ccm.G.slice(), c;
    for (c = 0; c < b2.length; c += 1)
      b2[c](a);
  }, encrypt: function(a, b2, c, d2, e) {
    var f, g = b2.slice(0), h = sjcl2.bitArray, k = h.bitLength(c) / 8, l = h.bitLength(g) / 8;
    e = e || 64;
    d2 = d2 || [];
    if (7 > k)
      throw new sjcl2.exception.invalid("ccm: iv must be at least 7 bytes");
    for (f = 2; 4 > f && l >>> 8 * f; f++)
      ;
    f < 15 - k && (f = 15 - k);
    c = h.clamp(c, 8 * (15 - f));
    b2 = sjcl2.mode.ccm.V(a, b2, c, d2, e, f);
    g = sjcl2.mode.ccm.C(a, g, c, b2, e, f);
    return h.concat(g.data, g.tag);
  }, decrypt: function(a, b2, c, d2, e) {
    e = e || 64;
    d2 = d2 || [];
    var f = sjcl2.bitArray, g = f.bitLength(c) / 8, h = f.bitLength(b2), k = f.clamp(b2, h - e), l = f.bitSlice(b2, h - e), h = (h - e) / 8;
    if (7 > g)
      throw new sjcl2.exception.invalid("ccm: iv must be at least 7 bytes");
    for (b2 = 2; 4 > b2 && h >>> 8 * b2; b2++)
      ;
    b2 < 15 - g && (b2 = 15 - g);
    c = f.clamp(c, 8 * (15 - b2));
    k = sjcl2.mode.ccm.C(a, k, c, l, e, b2);
    a = sjcl2.mode.ccm.V(a, k.data, c, d2, e, b2);
    if (!f.equal(k.tag, a))
      throw new sjcl2.exception.corrupt("ccm: tag doesn't match");
    return k.data;
  }, na: function(a, b2, c, d2, e, f) {
    var g = [], h = sjcl2.bitArray, k = h.i;
    d2 = [h.partial(8, (b2.length ? 64 : 0) | d2 - 2 << 2 | f - 1)];
    d2 = h.concat(d2, c);
    d2[3] |= e;
    d2 = a.encrypt(d2);
    if (b2.length)
      for (c = h.bitLength(b2) / 8, 65279 >= c ? g = [h.partial(16, c)] : 4294967295 >= c && (g = h.concat([h.partial(16, 65534)], [c])), g = h.concat(g, b2), b2 = 0; b2 < g.length; b2 += 4)
        d2 = a.encrypt(k(d2, g.slice(b2, b2 + 4).concat([0, 0, 0])));
    return d2;
  }, V: function(a, b2, c, d2, e, f) {
    var g = sjcl2.bitArray, h = g.i;
    e /= 8;
    if (e % 2 || 4 > e || 16 < e)
      throw new sjcl2.exception.invalid("ccm: invalid tag length");
    if (4294967295 < d2.length || 4294967295 < b2.length)
      throw new sjcl2.exception.bug("ccm: can't deal with 4GiB or more data");
    c = sjcl2.mode.ccm.na(a, d2, c, e, g.bitLength(b2) / 8, f);
    for (d2 = 0; d2 < b2.length; d2 += 4)
      c = a.encrypt(h(c, b2.slice(d2, d2 + 4).concat([0, 0, 0])));
    return g.clamp(c, 8 * e);
  }, C: function(a, b2, c, d2, e, f) {
    var g, h = sjcl2.bitArray;
    g = h.i;
    var k = b2.length, l = h.bitLength(b2), n = k / 50, m = n;
    c = h.concat([h.partial(8, f - 1)], c).concat([0, 0, 0]).slice(0, 4);
    d2 = h.bitSlice(g(d2, a.encrypt(c)), 0, e);
    if (!k)
      return { tag: d2, data: [] };
    for (g = 0; g < k; g += 4)
      g > n && (sjcl2.mode.ccm.fa(g / k), n += m), c[3]++, e = a.encrypt(c), b2[g] ^= e[0], b2[g + 1] ^= e[1], b2[g + 2] ^= e[2], b2[g + 3] ^= e[3];
    return { tag: d2, data: h.clamp(b2, l) };
  } };
  sjcl2.mode.ocb2 = { name: "ocb2", encrypt: function(a, b2, c, d2, e, f) {
    if (128 !== sjcl2.bitArray.bitLength(c))
      throw new sjcl2.exception.invalid("ocb iv must be 128 bits");
    var g, h = sjcl2.mode.ocb2.S, k = sjcl2.bitArray, l = k.i, n = [0, 0, 0, 0];
    c = h(a.encrypt(c));
    var m, p = [];
    d2 = d2 || [];
    e = e || 64;
    for (g = 0; g + 4 < b2.length; g += 4)
      m = b2.slice(g, g + 4), n = l(n, m), p = p.concat(l(c, a.encrypt(l(c, m)))), c = h(c);
    m = b2.slice(g);
    b2 = k.bitLength(m);
    g = a.encrypt(l(c, [0, 0, 0, b2]));
    m = k.clamp(l(m.concat([0, 0, 0]), g), b2);
    n = l(n, l(m.concat([0, 0, 0]), g));
    n = a.encrypt(l(n, l(c, h(c))));
    d2.length && (n = l(n, f ? d2 : sjcl2.mode.ocb2.pmac(a, d2)));
    return p.concat(k.concat(m, k.clamp(n, e)));
  }, decrypt: function(a, b2, c, d2, e, f) {
    if (128 !== sjcl2.bitArray.bitLength(c))
      throw new sjcl2.exception.invalid("ocb iv must be 128 bits");
    e = e || 64;
    var g = sjcl2.mode.ocb2.S, h = sjcl2.bitArray, k = h.i, l = [0, 0, 0, 0], n = g(a.encrypt(c)), m, p, r = sjcl2.bitArray.bitLength(b2) - e, q = [];
    d2 = d2 || [];
    for (c = 0; c + 4 < r / 32; c += 4)
      m = k(n, a.decrypt(k(n, b2.slice(c, c + 4)))), l = k(l, m), q = q.concat(m), n = g(n);
    p = r - 32 * c;
    m = a.encrypt(k(n, [0, 0, 0, p]));
    m = k(m, h.clamp(b2.slice(c), p).concat([0, 0, 0]));
    l = k(l, m);
    l = a.encrypt(k(l, k(n, g(n))));
    d2.length && (l = k(l, f ? d2 : sjcl2.mode.ocb2.pmac(a, d2)));
    if (!h.equal(h.clamp(l, e), h.bitSlice(b2, r)))
      throw new sjcl2.exception.corrupt("ocb: tag doesn't match");
    return q.concat(h.clamp(m, p));
  }, pmac: function(a, b2) {
    var c, d2 = sjcl2.mode.ocb2.S, e = sjcl2.bitArray, f = e.i, g = [0, 0, 0, 0], h = a.encrypt([0, 0, 0, 0]), h = f(h, d2(d2(h)));
    for (c = 0; c + 4 < b2.length; c += 4)
      h = d2(h), g = f(g, a.encrypt(f(h, b2.slice(c, c + 4))));
    c = b2.slice(c);
    128 > e.bitLength(c) && (h = f(h, d2(h)), c = e.concat(c, [-2147483648, 0, 0, 0]));
    g = f(g, c);
    return a.encrypt(f(d2(f(h, d2(h))), g));
  }, S: function(a) {
    return [a[0] << 1 ^ a[1] >>> 31, a[1] << 1 ^ a[2] >>> 31, a[2] << 1 ^ a[3] >>> 31, a[3] << 1 ^ 135 * (a[0] >>> 31)];
  } };
  sjcl2.mode.gcm = { name: "gcm", encrypt: function(a, b2, c, d2, e) {
    var f = b2.slice(0);
    b2 = sjcl2.bitArray;
    d2 = d2 || [];
    a = sjcl2.mode.gcm.C(true, a, f, d2, c, e || 128);
    return b2.concat(a.data, a.tag);
  }, decrypt: function(a, b2, c, d2, e) {
    var f = b2.slice(0), g = sjcl2.bitArray, h = g.bitLength(f);
    e = e || 128;
    d2 = d2 || [];
    e <= h ? (b2 = g.bitSlice(f, h - e), f = g.bitSlice(f, 0, h - e)) : (b2 = f, f = []);
    a = sjcl2.mode.gcm.C(false, a, f, d2, c, e);
    if (!g.equal(a.tag, b2))
      throw new sjcl2.exception.corrupt("gcm: tag doesn't match");
    return a.data;
  }, ka: function(a, b2) {
    var c, d2, e, f, g, h = sjcl2.bitArray.i;
    e = [0, 0, 0, 0];
    f = b2.slice(0);
    for (c = 0; 128 > c; c++) {
      (d2 = 0 !== (a[Math.floor(c / 32)] & 1 << 31 - c % 32)) && (e = h(e, f));
      g = 0 !== (f[3] & 1);
      for (d2 = 3; 0 < d2; d2--)
        f[d2] = f[d2] >>> 1 | (f[d2 - 1] & 1) << 31;
      f[0] >>>= 1;
      g && (f[0] ^= -520093696);
    }
    return e;
  }, j: function(a, b2, c) {
    var d2, e = c.length;
    b2 = b2.slice(0);
    for (d2 = 0; d2 < e; d2 += 4)
      b2[0] ^= 4294967295 & c[d2], b2[1] ^= 4294967295 & c[d2 + 1], b2[2] ^= 4294967295 & c[d2 + 2], b2[3] ^= 4294967295 & c[d2 + 3], b2 = sjcl2.mode.gcm.ka(b2, a);
    return b2;
  }, C: function(a, b2, c, d2, e, f) {
    var g, h, k, l, n, m, p, r, q = sjcl2.bitArray;
    m = c.length;
    p = q.bitLength(c);
    r = q.bitLength(d2);
    h = q.bitLength(e);
    g = b2.encrypt([0, 0, 0, 0]);
    96 === h ? (e = e.slice(0), e = q.concat(e, [1])) : (e = sjcl2.mode.gcm.j(g, [0, 0, 0, 0], e), e = sjcl2.mode.gcm.j(g, e, [0, 0, Math.floor(h / 4294967296), h & 4294967295]));
    h = sjcl2.mode.gcm.j(g, [0, 0, 0, 0], d2);
    n = e.slice(0);
    d2 = h.slice(0);
    a || (d2 = sjcl2.mode.gcm.j(g, h, c));
    for (l = 0; l < m; l += 4)
      n[3]++, k = b2.encrypt(n), c[l] ^= k[0], c[l + 1] ^= k[1], c[l + 2] ^= k[2], c[l + 3] ^= k[3];
    c = q.clamp(c, p);
    a && (d2 = sjcl2.mode.gcm.j(g, h, c));
    a = [Math.floor(r / 4294967296), r & 4294967295, Math.floor(p / 4294967296), p & 4294967295];
    d2 = sjcl2.mode.gcm.j(g, d2, a);
    k = b2.encrypt(e);
    d2[0] ^= k[0];
    d2[1] ^= k[1];
    d2[2] ^= k[2];
    d2[3] ^= k[3];
    return { tag: q.bitSlice(d2, 0, f), data: c };
  } };
  sjcl2.misc.hmac = function(a, b2) {
    this.W = b2 = b2 || sjcl2.hash.sha256;
    var c = [[], []], d2, e = b2.prototype.blockSize / 32;
    this.w = [new b2(), new b2()];
    a.length > e && (a = b2.hash(a));
    for (d2 = 0; d2 < e; d2++)
      c[0][d2] = a[d2] ^ 909522486, c[1][d2] = a[d2] ^ 1549556828;
    this.w[0].update(c[0]);
    this.w[1].update(c[1]);
    this.R = new b2(this.w[0]);
  };
  sjcl2.misc.hmac.prototype.encrypt = sjcl2.misc.hmac.prototype.mac = function(a) {
    if (this.aa)
      throw new sjcl2.exception.invalid("encrypt on already updated hmac called!");
    this.update(a);
    return this.digest(a);
  };
  sjcl2.misc.hmac.prototype.reset = function() {
    this.R = new this.W(this.w[0]);
    this.aa = false;
  };
  sjcl2.misc.hmac.prototype.update = function(a) {
    this.aa = true;
    this.R.update(a);
  };
  sjcl2.misc.hmac.prototype.digest = function() {
    var a = this.R.finalize(), a = new this.W(this.w[1]).update(a).finalize();
    this.reset();
    return a;
  };
  sjcl2.misc.pbkdf2 = function(a, b2, c, d2, e) {
    c = c || 1e4;
    if (0 > d2 || 0 > c)
      throw new sjcl2.exception.invalid("invalid params to pbkdf2");
    "string" === typeof a && (a = sjcl2.codec.utf8String.toBits(a));
    "string" === typeof b2 && (b2 = sjcl2.codec.utf8String.toBits(b2));
    e = e || sjcl2.misc.hmac;
    a = new e(a);
    var f, g, h, k, l = [], n = sjcl2.bitArray;
    for (k = 1; 32 * l.length < (d2 || 1); k++) {
      e = f = a.encrypt(n.concat(b2, [k]));
      for (g = 1; g < c; g++)
        for (f = a.encrypt(f), h = 0; h < f.length; h++)
          e[h] ^= f[h];
      l = l.concat(e);
    }
    d2 && (l = n.clamp(l, d2));
    return l;
  };
  sjcl2.prng = function(a) {
    this.c = [new sjcl2.hash.sha256()];
    this.m = [0];
    this.P = 0;
    this.H = {};
    this.N = 0;
    this.U = {};
    this.Z = this.f = this.o = this.ha = 0;
    this.b = [0, 0, 0, 0, 0, 0, 0, 0];
    this.h = [0, 0, 0, 0];
    this.L = void 0;
    this.M = a;
    this.D = false;
    this.K = { progress: {}, seeded: {} };
    this.u = this.ga = 0;
    this.I = 1;
    this.J = 2;
    this.ca = 65536;
    this.T = [0, 48, 64, 96, 128, 192, 256, 384, 512, 768, 1024];
    this.da = 3e4;
    this.ba = 80;
  };
  sjcl2.prng.prototype = { randomWords: function(a, b2) {
    var c = [], d2;
    d2 = this.isReady(b2);
    var e;
    if (d2 === this.u)
      throw new sjcl2.exception.notReady("generator isn't seeded");
    if (d2 & this.J) {
      d2 = !(d2 & this.I);
      e = [];
      var f = 0, g;
      this.Z = e[0] = new Date().valueOf() + this.da;
      for (g = 0; 16 > g; g++)
        e.push(4294967296 * Math.random() | 0);
      for (g = 0; g < this.c.length && (e = e.concat(this.c[g].finalize()), f += this.m[g], this.m[g] = 0, d2 || !(this.P & 1 << g)); g++)
        ;
      this.P >= 1 << this.c.length && (this.c.push(new sjcl2.hash.sha256()), this.m.push(0));
      this.f -= f;
      f > this.o && (this.o = f);
      this.P++;
      this.b = sjcl2.hash.sha256.hash(this.b.concat(e));
      this.L = new sjcl2.cipher.aes(this.b);
      for (d2 = 0; 4 > d2 && (this.h[d2] = this.h[d2] + 1 | 0, !this.h[d2]); d2++)
        ;
    }
    for (d2 = 0; d2 < a; d2 += 4)
      0 === (d2 + 1) % this.ca && y2(this), e = z2(this), c.push(e[0], e[1], e[2], e[3]);
    y2(this);
    return c.slice(0, a);
  }, setDefaultParanoia: function(a, b2) {
    if (0 === a && "Setting paranoia=0 will ruin your security; use it only for testing" !== b2)
      throw new sjcl2.exception.invalid("Setting paranoia=0 will ruin your security; use it only for testing");
    this.M = a;
  }, addEntropy: function(a, b2, c) {
    c = c || "user";
    var d2, e, f = new Date().valueOf(), g = this.H[c], h = this.isReady(), k = 0;
    d2 = this.U[c];
    void 0 === d2 && (d2 = this.U[c] = this.ha++);
    void 0 === g && (g = this.H[c] = 0);
    this.H[c] = (this.H[c] + 1) % this.c.length;
    switch (typeof a) {
      case "number":
        void 0 === b2 && (b2 = 1);
        this.c[g].update([d2, this.N++, 1, b2, f, 1, a | 0]);
        break;
      case "object":
        c = Object.prototype.toString.call(a);
        if ("[object Uint32Array]" === c) {
          e = [];
          for (c = 0; c < a.length; c++)
            e.push(a[c]);
          a = e;
        } else
          for ("[object Array]" !== c && (k = 1), c = 0; c < a.length && !k; c++)
            "number" !== typeof a[c] && (k = 1);
        if (!k) {
          if (void 0 === b2)
            for (c = b2 = 0; c < a.length; c++)
              for (e = a[c]; 0 < e; )
                b2++, e = e >>> 1;
          this.c[g].update([d2, this.N++, 2, b2, f, a.length].concat(a));
        }
        break;
      case "string":
        void 0 === b2 && (b2 = a.length);
        this.c[g].update([d2, this.N++, 3, b2, f, a.length]);
        this.c[g].update(a);
        break;
      default:
        k = 1;
    }
    if (k)
      throw new sjcl2.exception.bug("random: addEntropy only supports number, array of numbers or string");
    this.m[g] += b2;
    this.f += b2;
    h === this.u && (this.isReady() !== this.u && A2("seeded", Math.max(this.o, this.f)), A2("progress", this.getProgress()));
  }, isReady: function(a) {
    a = this.T[void 0 !== a ? a : this.M];
    return this.o && this.o >= a ? this.m[0] > this.ba && new Date().valueOf() > this.Z ? this.J | this.I : this.I : this.f >= a ? this.J | this.u : this.u;
  }, getProgress: function(a) {
    a = this.T[a ? a : this.M];
    return this.o >= a ? 1 : this.f > a ? 1 : this.f / a;
  }, startCollectors: function() {
    if (!this.D) {
      this.a = { loadTimeCollector: B2(this, this.ma), mouseCollector: B2(this, this.oa), keyboardCollector: B2(this, this.la), accelerometerCollector: B2(this, this.ea), touchCollector: B2(this, this.qa) };
      if (window.addEventListener)
        window.addEventListener("load", this.a.loadTimeCollector, false), window.addEventListener("mousemove", this.a.mouseCollector, false), window.addEventListener("keypress", this.a.keyboardCollector, false), window.addEventListener("devicemotion", this.a.accelerometerCollector, false), window.addEventListener("touchmove", this.a.touchCollector, false);
      else if (document.attachEvent)
        document.attachEvent("onload", this.a.loadTimeCollector), document.attachEvent("onmousemove", this.a.mouseCollector), document.attachEvent("keypress", this.a.keyboardCollector);
      else
        throw new sjcl2.exception.bug("can't attach event");
      this.D = true;
    }
  }, stopCollectors: function() {
    this.D && (window.removeEventListener ? (window.removeEventListener("load", this.a.loadTimeCollector, false), window.removeEventListener("mousemove", this.a.mouseCollector, false), window.removeEventListener("keypress", this.a.keyboardCollector, false), window.removeEventListener("devicemotion", this.a.accelerometerCollector, false), window.removeEventListener("touchmove", this.a.touchCollector, false)) : document.detachEvent && (document.detachEvent("onload", this.a.loadTimeCollector), document.detachEvent("onmousemove", this.a.mouseCollector), document.detachEvent("keypress", this.a.keyboardCollector)), this.D = false);
  }, addEventListener: function(a, b2) {
    this.K[a][this.ga++] = b2;
  }, removeEventListener: function(a, b2) {
    var c, d2, e = this.K[a], f = [];
    for (d2 in e)
      e.hasOwnProperty(d2) && e[d2] === b2 && f.push(d2);
    for (c = 0; c < f.length; c++)
      d2 = f[c], delete e[d2];
  }, la: function() {
    C2(this, 1);
  }, oa: function(a) {
    var b2, c;
    try {
      b2 = a.x || a.clientX || a.offsetX || 0, c = a.y || a.clientY || a.offsetY || 0;
    } catch (d2) {
      c = b2 = 0;
    }
    0 != b2 && 0 != c && this.addEntropy([b2, c], 2, "mouse");
    C2(this, 0);
  }, qa: function(a) {
    a = a.touches[0] || a.changedTouches[0];
    this.addEntropy([a.pageX || a.clientX, a.pageY || a.clientY], 1, "touch");
    C2(this, 0);
  }, ma: function() {
    C2(this, 2);
  }, ea: function(a) {
    a = a.accelerationIncludingGravity.x || a.accelerationIncludingGravity.y || a.accelerationIncludingGravity.z;
    if (window.orientation) {
      var b2 = window.orientation;
      "number" === typeof b2 && this.addEntropy(b2, 1, "accelerometer");
    }
    a && this.addEntropy(a, 2, "accelerometer");
    C2(this, 0);
  } };
  function A2(a, b2) {
    var c, d2 = sjcl2.random.K[a], e = [];
    for (c in d2)
      d2.hasOwnProperty(c) && e.push(d2[c]);
    for (c = 0; c < e.length; c++)
      e[c](b2);
  }
  function C2(a, b2) {
    "undefined" !== typeof window && window.performance && "function" === typeof window.performance.now ? a.addEntropy(window.performance.now(), b2, "loadtime") : a.addEntropy(new Date().valueOf(), b2, "loadtime");
  }
  function y2(a) {
    a.b = z2(a).concat(z2(a));
    a.L = new sjcl2.cipher.aes(a.b);
  }
  function z2(a) {
    for (var b2 = 0; 4 > b2 && (a.h[b2] = a.h[b2] + 1 | 0, !a.h[b2]); b2++)
      ;
    return a.L.encrypt(a.h);
  }
  function B2(a, b2) {
    return function() {
      b2.apply(a, arguments);
    };
  }
  sjcl2.random = new sjcl2.prng(6);
  a:
    try {
      if (G2 = "undefined" !== typeof module && module.exports) {
        try {
          H2 = __require3("crypto");
        } catch (a) {
          H2 = null;
        }
        G2 = E2 = H2;
      }
      if (G2 && E2.randomBytes)
        D2 = E2.randomBytes(128), D2 = new Uint32Array(new Uint8Array(D2).buffer), sjcl2.random.addEntropy(D2, 1024, "crypto['randomBytes']");
      else if ("undefined" !== typeof window && "undefined" !== typeof Uint32Array) {
        F2 = new Uint32Array(32);
        if (window.crypto && window.crypto.getRandomValues)
          window.crypto.getRandomValues(F2);
        else if (window.msCrypto && window.msCrypto.getRandomValues)
          window.msCrypto.getRandomValues(F2);
        else
          break a;
        sjcl2.random.addEntropy(F2, 1024, "crypto['getRandomValues']");
      }
    } catch (a) {
      "undefined" !== typeof window && window.console && (console.log("There was an error collecting entropy from the browser:"), console.log(a));
    }
  var D2;
  var E2;
  var F2;
  var G2;
  var H2;
  sjcl2.json = { defaults: { v: 1, iter: 1e4, ks: 128, ts: 64, mode: "ccm", adata: "", cipher: "aes" }, ja: function(a, b2, c, d2) {
    c = c || {};
    d2 = d2 || {};
    var e = sjcl2.json, f = e.g({ iv: sjcl2.random.randomWords(4, 0) }, e.defaults), g;
    e.g(f, c);
    c = f.adata;
    "string" === typeof f.salt && (f.salt = sjcl2.codec.base64.toBits(f.salt));
    "string" === typeof f.iv && (f.iv = sjcl2.codec.base64.toBits(f.iv));
    if (!sjcl2.mode[f.mode] || !sjcl2.cipher[f.cipher] || "string" === typeof a && 100 >= f.iter || 64 !== f.ts && 96 !== f.ts && 128 !== f.ts || 128 !== f.ks && 192 !== f.ks && 256 !== f.ks || 2 > f.iv.length || 4 < f.iv.length)
      throw new sjcl2.exception.invalid("json encrypt: invalid parameters");
    "string" === typeof a ? (g = sjcl2.misc.cachedPbkdf2(a, f), a = g.key.slice(0, f.ks / 32), f.salt = g.salt) : sjcl2.ecc && a instanceof sjcl2.ecc.elGamal.publicKey && (g = a.kem(), f.kemtag = g.tag, a = g.key.slice(0, f.ks / 32));
    "string" === typeof b2 && (b2 = sjcl2.codec.utf8String.toBits(b2));
    "string" === typeof c && (f.adata = c = sjcl2.codec.utf8String.toBits(c));
    g = new sjcl2.cipher[f.cipher](a);
    e.g(d2, f);
    d2.key = a;
    f.ct = "ccm" === f.mode && sjcl2.arrayBuffer && sjcl2.arrayBuffer.ccm && b2 instanceof ArrayBuffer ? sjcl2.arrayBuffer.ccm.encrypt(g, b2, f.iv, c, f.ts) : sjcl2.mode[f.mode].encrypt(g, b2, f.iv, c, f.ts);
    return f;
  }, encrypt: function(a, b2, c, d2) {
    var e = sjcl2.json, f = e.ja.apply(e, arguments);
    return e.encode(f);
  }, ia: function(a, b2, c, d2) {
    c = c || {};
    d2 = d2 || {};
    var e = sjcl2.json;
    b2 = e.g(e.g(e.g({}, e.defaults), b2), c, true);
    var f, g;
    f = b2.adata;
    "string" === typeof b2.salt && (b2.salt = sjcl2.codec.base64.toBits(b2.salt));
    "string" === typeof b2.iv && (b2.iv = sjcl2.codec.base64.toBits(b2.iv));
    if (!sjcl2.mode[b2.mode] || !sjcl2.cipher[b2.cipher] || "string" === typeof a && 100 >= b2.iter || 64 !== b2.ts && 96 !== b2.ts && 128 !== b2.ts || 128 !== b2.ks && 192 !== b2.ks && 256 !== b2.ks || !b2.iv || 2 > b2.iv.length || 4 < b2.iv.length)
      throw new sjcl2.exception.invalid("json decrypt: invalid parameters");
    "string" === typeof a ? (g = sjcl2.misc.cachedPbkdf2(a, b2), a = g.key.slice(0, b2.ks / 32), b2.salt = g.salt) : sjcl2.ecc && a instanceof sjcl2.ecc.elGamal.secretKey && (a = a.unkem(sjcl2.codec.base64.toBits(b2.kemtag)).slice(0, b2.ks / 32));
    "string" === typeof f && (f = sjcl2.codec.utf8String.toBits(f));
    g = new sjcl2.cipher[b2.cipher](a);
    f = "ccm" === b2.mode && sjcl2.arrayBuffer && sjcl2.arrayBuffer.ccm && b2.ct instanceof ArrayBuffer ? sjcl2.arrayBuffer.ccm.decrypt(g, b2.ct, b2.iv, b2.tag, f, b2.ts) : sjcl2.mode[b2.mode].decrypt(g, b2.ct, b2.iv, f, b2.ts);
    e.g(d2, b2);
    d2.key = a;
    return 1 === c.raw ? f : sjcl2.codec.utf8String.fromBits(f);
  }, decrypt: function(a, b2, c, d2) {
    var e = sjcl2.json;
    return e.ia(a, e.decode(b2), c, d2);
  }, encode: function(a) {
    var b2, c = "{", d2 = "";
    for (b2 in a)
      if (a.hasOwnProperty(b2)) {
        if (!b2.match(/^[a-z0-9]+$/i))
          throw new sjcl2.exception.invalid("json encode: invalid property name");
        c += d2 + '"' + b2 + '":';
        d2 = ",";
        switch (typeof a[b2]) {
          case "number":
          case "boolean":
            c += a[b2];
            break;
          case "string":
            c += '"' + escape(a[b2]) + '"';
            break;
          case "object":
            c += '"' + sjcl2.codec.base64.fromBits(a[b2], 0) + '"';
            break;
          default:
            throw new sjcl2.exception.bug("json encode: unsupported type");
        }
      }
    return c + "}";
  }, decode: function(a) {
    a = a.replace(/\s/g, "");
    if (!a.match(/^\{.*\}$/))
      throw new sjcl2.exception.invalid("json decode: this isn't json!");
    a = a.replace(/^\{|\}$/g, "").split(/,/);
    var b2 = {}, c, d2;
    for (c = 0; c < a.length; c++) {
      if (!(d2 = a[c].match(/^\s*(?:(["']?)([a-z][a-z0-9]*)\1)\s*:\s*(?:(-?\d+)|"([a-z0-9+\/%*_.@=\-]*)"|(true|false))$/i)))
        throw new sjcl2.exception.invalid("json decode: this isn't json!");
      null != d2[3] ? b2[d2[2]] = parseInt(d2[3], 10) : null != d2[4] ? b2[d2[2]] = d2[2].match(/^(ct|adata|salt|iv)$/) ? sjcl2.codec.base64.toBits(d2[4]) : unescape(d2[4]) : null != d2[5] && (b2[d2[2]] = "true" === d2[5]);
    }
    return b2;
  }, g: function(a, b2, c) {
    void 0 === a && (a = {});
    if (void 0 === b2)
      return a;
    for (var d2 in b2)
      if (b2.hasOwnProperty(d2)) {
        if (c && void 0 !== a[d2] && a[d2] !== b2[d2])
          throw new sjcl2.exception.invalid("required parameter overridden");
        a[d2] = b2[d2];
      }
    return a;
  }, sa: function(a, b2) {
    var c = {}, d2;
    for (d2 in a)
      a.hasOwnProperty(d2) && a[d2] !== b2[d2] && (c[d2] = a[d2]);
    return c;
  }, ra: function(a, b2) {
    var c = {}, d2;
    for (d2 = 0; d2 < b2.length; d2++)
      void 0 !== a[b2[d2]] && (c[b2[d2]] = a[b2[d2]]);
    return c;
  } };
  sjcl2.encrypt = sjcl2.json.encrypt;
  sjcl2.decrypt = sjcl2.json.decrypt;
  sjcl2.misc.pa = {};
  sjcl2.misc.cachedPbkdf2 = function(a, b2) {
    var c = sjcl2.misc.pa, d2;
    b2 = b2 || {};
    d2 = b2.iter || 1e3;
    c = c[a] = c[a] || {};
    d2 = c[d2] = c[d2] || { firstSalt: b2.salt && b2.salt.length ? b2.salt.slice(0) : sjcl2.random.randomWords(2, 0) };
    c = void 0 === b2.salt ? d2.firstSalt : b2.salt;
    d2[c] = d2[c] || sjcl2.misc.pbkdf2(a, c, b2.iter);
    return { key: d2[c].slice(0), salt: c.slice(0) };
  };
  var _HTTPfrontend2 = class extends Service2 {
    constructor(options, path, fetched) {
      super(options);
      this.name = "http";
      this.fetchProxied = false;
      this.listening = {};
      this.GET = (url5 = "http://localhost:8080/ping", type = "", mimeType) => {
        if (type === "json")
          mimeType = "application/json";
        return new Promise((resolve, reject) => {
          let xhr = _HTTPfrontend2.request({ method: "GET", url: url5, responseType: type, mimeType, onload: (ev2) => {
            let data;
            if (xhr.responseType === "" || xhr.responseType === "text")
              data = xhr.responseText;
            else
              data = xhr.response;
            if (url5 instanceof URL)
              url5 = url5.toString();
            this.setState({ [url5]: data });
            resolve(data);
          }, onabort: (er) => {
            reject(er);
          } });
        }).catch(console.error);
      };
      this.POST = (message4, url5 = "http://localhost:8080/echo", type = "", mimeType) => {
        if (typeof message4 === "object" && (type === "json" || type === "text" || !type)) {
          message4 = JSON.stringify(message4);
        }
        if (type === "json")
          mimeType = "application/json";
        return new Promise((resolve, reject) => {
          let xhr = _HTTPfrontend2.request({ method: "POST", url: url5, data: message4, responseType: type, mimeType, onload: (ev2) => {
            let data;
            if (xhr.responseType === "" || xhr.responseType === "text")
              data = xhr.responseText;
            else
              data = xhr.response;
            if (url5 instanceof URL)
              url5 = url5.toString();
            this.setState({ [url5]: data });
            resolve(data);
          }, onabort: (er) => {
            reject(er);
          } });
        }).catch(console.error);
      };
      this.transmit = (message4, url5) => {
        let obj = message4;
        if (typeof obj === "object") {
          message4 = JSON.stringify(obj);
        }
        if (obj?.method?.toLowerCase() == "get" || message4?.toLowerCase() === "get")
          return this.GET(url5);
        return this.POST(message4, url5);
      };
      this.transponder = (url5, message4, type = "", mimeType) => {
        if (typeof message4 === "object")
          message4 = JSON.stringify(message4);
        let method = "GET";
        if (message4) {
          method = "POST";
        }
        if (type === "json")
          mimeType = "application/json";
        else
          return new Promise((resolve, reject) => {
            let xhr = _HTTPfrontend2.request({ method, url: url5, data: message4, responseType: type, onload: (ev2) => {
              let body = xhr.response;
              if (typeof body === "string") {
                let substr = body.substring(0, 8);
                if (substr.includes("{") || substr.includes("[")) {
                  if (substr.includes("\\"))
                    body = body.replace(/\\/g, "");
                  if (body[0] === '"') {
                    body = body.substring(1, body.length - 1);
                  }
                  ;
                  body = JSON.parse(body);
                }
              }
              if (typeof body?.method === "string") {
                return resolve(this.handleMethod(body.route, body.method, body.args));
              } else if (typeof body?.route === "string") {
                return resolve(this.handleServiceMessage(body));
              } else if (typeof body?.node === "string" || body.node instanceof GraphNode2) {
                return resolve(this.handleGraphNodeCall(body.node, body.args));
              } else
                return resolve(body);
            }, onabort: (er) => {
              reject(er);
            } });
          }).catch(console.error);
      };
      this.listen = (path2 = "0", fetched2 = async (clone, args, response) => {
        const result = await clone.text();
        const returned = this.receive(result);
        this.setState({ [response.url]: returned });
      }) => {
        this.listening[path2] = {};
        let listenerId = `${path2}${Math.floor(Math.random() * 1e15)}`;
        this.listening[path2][listenerId] = fetched2;
        if (!this.fetchProxied) {
          globalThis.fetch = new Proxy(globalThis.fetch, { apply(fetch, that, args) {
            const result = fetch.apply(that, args);
            result.then((response) => {
              if (!response.ok)
                return;
              if (this.listening["0"]) {
                for (const key in this.listeners) {
                  const clone = response.clone();
                  this.listening["0"][key](clone, args, response);
                }
              } else {
                for (const key in this.listening) {
                  if (response.url.includes(key)) {
                    for (const key2 in this.listening[path2]) {
                      const clone = response.clone();
                      this.listening[path2][key2](clone, args, response);
                    }
                    break;
                  }
                }
              }
            }).catch((er) => {
              console.error(er);
            });
            return result;
          } });
          this.fetchProxied = true;
        }
        return listenerId;
      };
      this.stopListening = (path2, listener) => {
        if (!path2 && path2 !== 0) {
          for (const key in this.listening)
            delete this.listening[key];
        } else {
          if (!listener)
            delete this.listening[path2];
          else
            delete this.listening[listener];
        }
      };
      this.load(this);
      this.listen(path, fetched);
    }
  };
  var HTTPfrontend2 = _HTTPfrontend2;
  HTTPfrontend2.request = (options) => {
    const xhr = new XMLHttpRequest();
    if (options.responseType)
      xhr.responseType = options.responseType;
    else
      options.responseType = "json";
    if (options.mimeType) {
      xhr.overrideMimeType(options.mimeType);
    }
    if (options.onload)
      xhr.addEventListener("load", options.onload, false);
    if (options.onprogress)
      xhr.addEventListener("progress", options.onprogress, false);
    if (options.onabort)
      xhr.addEventListener("abort", options.onabort, false);
    if (options.onloadend)
      xhr.addEventListener("loadend", options.onloadend, false);
    if (options.onerror)
      xhr.addEventListener("error", options.onerror, false);
    xhr.open(options.method, options.url, true, options.user, options.pass);
    if (!options.onerror)
      xhr.onerror = function() {
        xhr.abort();
      };
    xhr.send(options.data);
    return xhr;
  };
  var import_web_worker2 = __toESM3(require_browser2());
  var mouseEventHandler2 = makeSendPropertiesHandler2(["ctrlKey", "metaKey", "shiftKey", "button", "pointerType", "clientX", "clientY", "pageX", "pageY"]);
  var wheelEventHandlerImpl2 = makeSendPropertiesHandler2(["deltaX", "deltaY"]);
  var keydownEventHandler2 = makeSendPropertiesHandler2(["ctrlKey", "metaKey", "shiftKey", "keyCode"]);
  function wheelEventHandler2(event, sendFn) {
    event.preventDefault();
    wheelEventHandlerImpl2(event, sendFn);
  }
  function preventDefaultHandler2(event) {
    event.preventDefault();
  }
  function copyProperties2(src, properties, dst) {
    for (const name3 of properties) {
      dst[name3] = src[name3];
    }
  }
  function makeSendPropertiesHandler2(properties) {
    return function sendProperties(event, sendFn) {
      const data = { type: event.type };
      copyProperties2(event, properties, data);
      sendFn(data);
    };
  }
  function touchEventHandler2(event, sendFn) {
    const touches = [];
    const data = { type: event.type, touches };
    for (let i = 0; i < event.touches.length; ++i) {
      const touch = event.touches[i];
      touches.push({ pageX: touch.pageX, pageY: touch.pageY });
    }
    sendFn(data);
  }
  var orbitKeys2 = { "37": true, "38": true, "39": true, "40": true };
  function filteredKeydownEventHandler2(event, sendFn) {
    const { keyCode } = event;
    if (orbitKeys2[keyCode]) {
      event.preventDefault();
      keydownEventHandler2(event, sendFn);
    }
  }
  var eventHandlers2 = { contextmenu: preventDefaultHandler2, mousedown: mouseEventHandler2, mousemove: mouseEventHandler2, mouseup: mouseEventHandler2, pointerdown: mouseEventHandler2, pointermove: mouseEventHandler2, pointerup: mouseEventHandler2, touchstart: touchEventHandler2, touchmove: touchEventHandler2, touchend: touchEventHandler2, wheel: wheelEventHandler2, keydown: filteredKeydownEventHandler2 };
  function initProxyElement2(element, worker, id) {
    if (!id)
      id = "proxy" + Math.floor(Math.random() * 1e15);
    const sendEvent = (data) => {
      if (!worker) {
        handleProxyEvent2(data, id);
      } else
        worker.postMessage({ route: "handleProxyEvent", args: [data, id] });
    };
    let entries = Object.entries(eventHandlers2);
    for (const [eventName, handler] of entries) {
      element.addEventListener(eventName, function(event) {
        handler(event, sendEvent);
      });
    }
    const sendSize = () => {
      const rect = element.getBoundingClientRect();
      sendEvent({ type: "resize", left: rect.left, top: rect.top, width: element.clientWidth, height: element.clientHeight });
    };
    sendSize();
    globalThis.addEventListener("resize", sendSize);
    return id;
  }
  var EventDispatcher2 = class {
    addEventListener(type, listener) {
      if (this.__listeners === void 0)
        this.__listeners = {};
      const listeners = this.__listeners;
      if (listeners[type] === void 0) {
        listeners[type] = [];
      }
      if (listeners[type].indexOf(listener) === -1) {
        listeners[type].push(listener);
      }
    }
    hasEventListener(type, listener) {
      if (this.__listeners === void 0)
        return false;
      const listeners = this.__listeners;
      return listeners[type] !== void 0 && listeners[type].indexOf(listener) !== -1;
    }
    removeEventListener(type, listener) {
      if (this.__listeners === void 0)
        return;
      const listeners = this.__listeners;
      const listenerArray = listeners[type];
      if (listenerArray !== void 0) {
        const index = listenerArray.indexOf(listener);
        if (index !== -1) {
          listenerArray.splice(index, 1);
        }
      }
    }
    dispatchEvent(event, target) {
      if (this.__listeners === void 0)
        return;
      const listeners = this.__listeners;
      const listenerArray = listeners[event.type];
      if (listenerArray !== void 0) {
        if (!target)
          event.target = this;
        else
          event.target = target;
        const array = listenerArray.slice(0);
        for (let i = 0, l = array.length; i < l; i++) {
          array[i].call(this, event);
        }
        event.target = null;
      }
    }
  };
  function noop2() {
  }
  var ElementProxyReceiver2 = class extends EventDispatcher2 {
    constructor() {
      super();
      this.__listeners = {};
      this.style = {};
      this.setPointerCapture = () => {
      };
      this.releasePointerCapture = () => {
      };
      this.getBoundingClientRect = () => {
        return { left: this.left, top: this.top, width: this.width, height: this.height, right: this.left + this.width, bottom: this.top + this.height };
      };
      this.handleEvent = (data) => {
        if (data.type === "resize") {
          this.left = data.left;
          this.top = data.top;
          this.width = data.width;
          this.height = data.height;
          if (typeof this.proxied === "object") {
            this.proxied.style.width = this.width + "px";
            this.proxied.style.height = this.height + "px";
            this.proxied.clientWidth = this.width;
            this.proxied.clientHeight = this.height;
          }
        }
        data.preventDefault = noop2;
        data.stopPropagation = noop2;
        this.dispatchEvent(data, this.proxied);
      };
      this.style = {};
    }
    get clientWidth() {
      return this.width;
    }
    get clientHeight() {
      return this.height;
    }
    focus() {
    }
  };
  var ProxyManager2 = class {
    constructor() {
      this.targets = {};
      this.makeProxy = (id, addTo = void 0) => {
        if (!id)
          id = `proxyReceiver${Math.floor(Math.random() * 1e15)}`;
        let proxy;
        if (this.targets[id])
          proxy = this.targets[id];
        else {
          proxy = new ElementProxyReceiver2();
          this.targets[id] = proxy;
        }
        if (typeof addTo === "object") {
          addTo.proxy = proxy;
          proxy.proxied = addTo;
          if (typeof WorkerGlobalScope !== "undefined")
            addTo.style = proxy.style;
          if (proxy.width) {
            addTo.style.width = proxy.width + "px";
            addTo.clientWidth = proxy.width;
          }
          if (proxy.height) {
            addTo.style.height = proxy.height + "px";
            addTo.clientHeight = proxy.height;
          }
          addTo.setPointerCapture = proxy.setPointerCapture.bind(proxy);
          addTo.releasePointerCapture = proxy.releasePointerCapture.bind(proxy);
          addTo.getBoundingClientRect = proxy.getBoundingClientRect.bind(proxy);
          addTo.addEventListener = proxy.addEventListener.bind(proxy);
          addTo.removeEventListener = proxy.removeEventListener.bind(proxy);
          addTo.handleEvent = proxy.handleEvent.bind(proxy);
          addTo.dispatchEvent = proxy.dispatchEvent.bind(proxy);
          addTo.focus = proxy.focus.bind(proxy);
        }
      };
      this.getProxy = (id) => {
        return this.targets[id];
      };
      this.handleEvent = (data, id) => {
        if (!this.targets[id])
          this.makeProxy(id);
        if (this.targets[id]) {
          this.targets[id].handleEvent(data);
          return true;
        }
        return void 0;
      };
      if (!globalThis.document)
        globalThis.document = {};
    }
  };
  function makeProxy2(id, elm) {
    if (this?.__node?.graph) {
      if (!this.__node.graph.ProxyManager)
        this.__node.graph.ProxyManager = new ProxyManager2();
      this.__node.graph.ProxyManager.makeProxy(id, elm);
    } else {
      if (!globalThis.ProxyManager)
        globalThis.ProxyManager = new ProxyManager2();
      globalThis.ProxyManager.makeProxy(id, elm);
    }
    return id;
  }
  function handleProxyEvent2(data, id) {
    if (this?.__node?.graph) {
      if (!this.__node.graph.ProxyManager)
        this.__node.graph.ProxyManager = new ProxyManager2();
      if (this.__node.graph.ProxyManager.handleEvent(data, id))
        return data;
    } else {
      if (!globalThis.ProxyManager)
        globalThis.ProxyManager = new ProxyManager2();
      if (globalThis.ProxyManager.handleEvent(data, id))
        return data;
    }
  }
  var proxyElementWorkerRoutes2 = { initProxyElement: initProxyElement2, makeProxy: makeProxy2, handleProxyEvent: handleProxyEvent2 };
  function Renderer2(options) {
    if (options.worker) {
      let worker = options.worker;
      let route = options.route;
      if (worker instanceof Blob || typeof worker === "string") {
        worker = new Worker(worker);
      }
      delete options.worker;
      delete options.route;
      return transferCanvas2(worker, options, route);
    } else {
      initProxyElement2(options.canvas, void 0, options._id);
      return setupCanvas2(options);
    }
  }
  function transferCanvas2(worker, options, route) {
    if (!options)
      return void 0;
    if (!options._id)
      options._id = `canvas${Math.floor(Math.random() * 1e15)}`;
    let offscreen = options.canvas.transferControlToOffscreen();
    if (!options.width)
      options.width = options.canvas.clientWidth;
    if (!options.height)
      options.height = options.canvas.clientHeight;
    let message4 = { route: route ? route : "setupCanvas", args: { ...options, canvas: offscreen } };
    if (this?.__node?.graph)
      this.__node.graph.run("initProxyElement", options.canvas, worker, options._id);
    else
      initProxyElement2(options.canvas, worker, options._id);
    if (options.draw) {
      if (typeof options.draw === "function")
        message4.args.draw = options.draw.toString();
      else
        message4.args.draw = options.draw;
    }
    if (options.update) {
      if (typeof options.update === "function")
        message4.args.update = options.update.toString();
      else
        message4.args.update = options.update;
    }
    if (options.init) {
      if (typeof options.init === "function")
        message4.args.init = options.init.toString();
      else
        message4.args.init = options.init;
    }
    if (options.clear) {
      if (typeof options.clear === "function")
        message4.args.clear = options.clear.toString();
      else
        message4.args.clear = options.clear;
    }
    let transfer = [offscreen];
    if (options.transfer) {
      transfer.push(...options.transfer);
      delete options.transfer;
    }
    worker.postMessage(message4, transfer);
    const canvascontrols = { _id: options._id, width: options.width, height: options.height, worker, draw: (props2) => {
      worker.postMessage({ route: "drawFrame", args: [props2, options._id] });
    }, update: (props2) => {
      worker.postMessage({ route: "updateCanvas", args: [props2, options._id] });
    }, clear: () => {
      worker.postMessage({ route: "clearCanvas", args: options._id });
    }, init: () => {
      worker.postMessage({ route: "initCanvas", args: options._id });
    }, stop: () => {
      worker.postMessage({ route: "stopAnim", args: options._id });
    }, start: () => {
      worker.postMessage({ route: "startAnim", args: options._id });
    }, set: (newDrawProps) => {
      worker.postMessage({ route: "setDraw", args: [newDrawProps, options._id] });
    }, terminate: () => {
      worker.terminate();
    } };
    return canvascontrols;
  }
  function setDraw2(settings, _id) {
    let canvasopts;
    if (this?.__node?.graph) {
      if (_id)
        canvasopts = this.__node.graph.CANVASES?.[settings._id];
      else if (settings._id)
        canvasopts = this.__node.graph.CANVASES?.[settings._id];
      else
        canvasopts = this.__node.graph.CANVASES?.[Object.keys(this.__node.graph.CANVASES)[0]];
    } else {
      if (_id)
        canvasopts = globalThis.CANVASES?.[settings._id];
      else if (settings._id)
        canvasopts = globalThis.CANVASES?.[settings._id];
      else
        canvasopts = globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]];
    }
    if (canvasopts) {
      if (settings.canvas) {
        canvasopts.canvas = settings.canvas;
        if (this?.__node?.graph)
          this.__node.graph.run("makeProxy", canvasopts._id, canvasopts.canvas);
        else
          proxyElementWorkerRoutes2.makeProxy(canvasopts._id, canvasopts.canvas);
      }
      if (typeof settings.context === "string")
        canvasopts.context = canvasopts.canvas.getContext(settings.context);
      else if (settings.context)
        canvasopts.context = settings.context;
      if (settings.width)
        canvasopts.canvas.width = settings.width;
      if (settings.height)
        canvasopts.canvas.height = settings.height;
      if (typeof settings.draw === "string")
        settings.draw = parseFunctionFromText32(settings.draw);
      if (typeof settings.draw === "function") {
        canvasopts.draw = settings.draw;
      }
      if (typeof settings.update === "string")
        settings.update = parseFunctionFromText32(settings.update);
      if (typeof settings.update === "function") {
        canvasopts.update = settings.update;
      }
      if (typeof settings.init === "string")
        settings.init = parseFunctionFromText32(settings.init);
      if (typeof settings.init === "function") {
        canvasopts.init = settings.init;
      }
      if (typeof settings.clear === "string")
        settings.clear = parseFunctionFromText32(settings.clear);
      if (typeof settings.clear === "function") {
        canvasopts.clear = settings.clear;
      }
      return settings._id;
    }
    return void 0;
  }
  function setupCanvas2(options) {
    if (this?.__node?.graph) {
      if (!this.__node.graph.CANVASES)
        this.__node.graph.CANVASES = {};
    } else if (!globalThis.CANVASES)
      globalThis.CANVASES = {};
    let canvasOptions = options;
    options._id ? canvasOptions._id = options._id : canvasOptions._id = `canvas${Math.floor(Math.random() * 1e15)}`;
    typeof options.context === "string" ? canvasOptions.context = options.canvas.getContext(options.context) : canvasOptions.context = options.context;
    "animating" in options ? canvasOptions.animating = options.animating : canvasOptions.animating = true;
    if (this?.__node?.graph?.CANVASES[canvasOptions._id]) {
      this.__node.graph.run("setDraw", canvasOptions);
    } else if (globalThis.CANVASES?.[canvasOptions._id]) {
      setDraw2(canvasOptions);
    } else {
      if (this?.__node?.graph)
        canvasOptions.graph = this.__node.graph;
      if (this?.__node?.graph)
        this.__node.graph.CANVASES[canvasOptions._id] = canvasOptions;
      else
        globalThis.CANVASES[canvasOptions._id] = canvasOptions;
      if (this?.__node?.graph)
        this.__node.graph.run("makeProxy", canvasOptions._id, canvasOptions.canvas);
      else
        proxyElementWorkerRoutes2.makeProxy(canvasOptions._id, canvasOptions.canvas);
      if (options.width)
        canvasOptions.canvas.width = options.width;
      if (options.height)
        canvasOptions.canvas.height = options.height;
      if (typeof canvasOptions.draw === "string") {
        canvasOptions.draw = parseFunctionFromText32(canvasOptions.draw);
      } else if (typeof canvasOptions.draw === "function") {
        canvasOptions.draw = canvasOptions.draw;
      }
      if (typeof canvasOptions.update === "string") {
        canvasOptions.update = parseFunctionFromText32(canvasOptions.update);
      } else if (typeof canvasOptions.update === "function") {
        canvasOptions.update = canvasOptions.update;
      }
      if (typeof canvasOptions.init === "string") {
        canvasOptions.init = parseFunctionFromText32(canvasOptions.init);
      } else if (typeof canvasOptions.init === "function") {
        canvasOptions.init = canvasOptions.init;
      }
      if (typeof canvasOptions.clear === "string") {
        canvasOptions.clear = parseFunctionFromText32(canvasOptions.clear);
      } else if (typeof canvasOptions.clear === "function") {
        canvasOptions.clear = canvasOptions.clear;
      }
      if (typeof canvasOptions.init === "function")
        canvasOptions.init(canvasOptions, canvasOptions.canvas, canvasOptions.context);
      canvasOptions.stop = () => {
        stopAnim2(canvasOptions._id);
      };
      canvasOptions.start = (draw) => {
        startAnim2(canvasOptions._id, draw);
      };
      canvasOptions.set = (settings) => {
        setDraw2(settings, canvasOptions._id);
      };
      if (typeof canvasOptions.draw === "function" && canvasOptions.animating) {
        let draw = (s, canvas, context) => {
          if (s.animating) {
            s.draw(s, canvas, context);
            requestAnimationFrame(() => {
              draw(s, canvas, context);
            });
          }
        };
        draw(canvasOptions, canvasOptions.canvas, canvasOptions.context);
      }
    }
    if (typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope)
      return canvasOptions._id;
    else {
      const canvascontrols = { _id: options._id, width: options.width, height: options.height, draw: (props2) => {
        drawFrame2(props2, options._id);
      }, update: (props2) => {
        updateCanvas2(props2, options._id);
      }, clear: () => {
        clearCanvas2(options._id);
      }, init: () => {
        initCanvas2(options._id);
      }, stop: () => {
        stopAnim2(options._id);
      }, start: () => {
        startAnim2(options._id);
      }, set: (newDrawProps) => {
        setDraw2(newDrawProps, options._id);
      }, terminate: () => {
        stopAnim2(options._id);
      } };
      return canvascontrols;
    }
  }
  function drawFrame2(props2, _id) {
    let canvasopts = getCanvas2.call(this, _id);
    if (canvasopts) {
      if (props2)
        Object.assign(canvasopts, props2);
      if (canvasopts.draw) {
        canvasopts.draw(canvasopts, canvasopts.canvas, canvasopts.context);
        return _id;
      }
    }
    return void 0;
  }
  function clearCanvas2(_id) {
    let canvasopts = getCanvas2.call(this, _id);
    if (canvasopts?.clear) {
      canvasopts.clear(canvasopts, canvasopts.canvas, canvasopts.context);
      return _id;
    }
    return void 0;
  }
  function initCanvas2(_id) {
    let canvasopts = getCanvas2.call(this, _id);
    if (canvasopts?.init) {
      canvasopts.init(canvasopts, canvasopts.canvas, canvasopts.context);
      return _id;
    }
    return void 0;
  }
  function updateCanvas2(input, _id) {
    let canvasopts = getCanvas2.call(this, _id);
    if (canvasopts?.update) {
      canvasopts.update(canvasopts, canvasopts.canvas, canvasopts.context, input);
      return _id;
    }
    return void 0;
  }
  function setProps2(props2, _id) {
    let canvasopts = getCanvas2.call(this, _id);
    if (canvasopts) {
      Object.assign(canvasopts, props2);
      if (props2.width)
        canvasopts.canvas.width = props2.width;
      if (props2.height)
        canvasopts.canvas.height = props2.height;
      return _id;
    }
    return void 0;
  }
  function startAnim2(_id, draw) {
    let canvasopts = getCanvas2.call(this, _id);
    canvasopts.animating = true;
    if (canvasopts && draw) {
      if (typeof draw === "string")
        draw = parseFunctionFromText32(draw);
      if (typeof draw === "function") {
        canvasopts.draw = draw;
      }
      return _id;
    }
    if (typeof canvasopts?.draw === "function") {
      let draw2 = (s, canvas, context) => {
        if (s.animating) {
          s.draw(s, canvas, context);
          requestAnimationFrame(() => {
            draw2(s, canvas, context);
          });
        }
      };
      if (typeof canvasopts.clear === "function")
        canvasopts.clear(canvasopts, canvasopts.canvas, canvasopts.context);
      if (typeof canvasopts.init === "function")
        canvasopts.init(canvasopts, canvasopts.canvas, canvasopts.context);
      draw2(canvasopts, canvasopts.canvas, canvasopts.context);
      return _id;
    }
    return void 0;
  }
  function stopAnim2(_id) {
    let canvasopts = getCanvas2.call(this, _id);
    if (canvasopts) {
      canvasopts.animating = false;
      if (typeof canvasopts.clear === "function")
        canvasopts.clear(canvasopts, canvasopts.canvas, canvasopts.context);
      return _id;
    }
    return void 0;
  }
  function getCanvas2(_id) {
    let canvasopts;
    if (this?.__node?.graph) {
      if (!_id)
        canvasopts = this.__node.graph.CANVASES?.[Object.keys(this.__node.graph.CANVASES)[0]];
      else
        canvasopts = this.__node.graph.CANVASES?.[_id];
    } else {
      if (!_id)
        canvasopts = globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]];
      else
        canvasopts = globalThis.CANVASES?.[_id];
    }
    return canvasopts;
  }
  var workerCanvasRoutes2 = { ...proxyElementWorkerRoutes2, Renderer: Renderer2, transferCanvas: transferCanvas2, setupCanvas: setupCanvas2, setDraw: setDraw2, drawFrame: drawFrame2, clearCanvas: clearCanvas2, initCanvas: initCanvas2, updateCanvas: updateCanvas2, setProps: setProps2, startAnim: startAnim2, stopAnim: stopAnim2 };
  function parseFunctionFromText32(method = "") {
    let getFunctionBody = (methodString) => {
      return methodString.replace(/^\W*(function[^{]+\{([\s\S]*)\}|[^=]+=>[^{]*\{([\s\S]*)\}|[^=]+=>(.+))/i, "$2$3$4");
    };
    let getFunctionHead = (methodString) => {
      let startindex = methodString.indexOf("=>") + 1;
      if (startindex <= 0) {
        startindex = methodString.indexOf("){");
      }
      if (startindex <= 0) {
        startindex = methodString.indexOf(") {");
      }
      return methodString.slice(0, methodString.indexOf("{", startindex) + 1);
    };
    let newFuncHead = getFunctionHead(method);
    let newFuncBody = getFunctionBody(method);
    let newFunc;
    if (newFuncHead.includes("function")) {
      let varName = newFuncHead.split("(")[1].split(")")[0];
      newFunc = new Function(varName, newFuncBody);
    } else {
      if (newFuncHead.substring(0, 6) === newFuncBody.substring(0, 6)) {
        let varName = newFuncHead.split("(")[1].split(")")[0];
        newFunc = new Function(varName, newFuncBody.substring(newFuncBody.indexOf("{") + 1, newFuncBody.length - 1));
      } else {
        try {
          newFunc = (0, eval)(newFuncHead + newFuncBody + "}");
        } catch {
        }
      }
    }
    return newFunc;
  }
  var algorithms2 = {};
  var loadAlgorithms2 = (settings) => {
    return Object.assign(algorithms2, settings);
  };
  function createSubprocess2(options, inputs) {
    let ctx = { _id: options._id ? options._id : `algorithm${Math.floor(Math.random() * 1e15)}`, ondata: options.ondata, run: (data) => {
      return ctx.ondata(ctx, data);
    } };
    if (options.structs)
      recursivelyAssign32(ctx, JSON.parse(JSON.stringify(options.structs)));
    if (inputs)
      recursivelyAssign32(ctx, JSON.parse(JSON.stringify(inputs)));
    if (options.oncreate) {
      ctx.oncreate = options.oncreate;
    }
    if (ctx.oncreate) {
      ctx.oncreate(ctx);
    }
    return ctx;
  }
  var recursivelyAssign32 = (target, obj) => {
    for (const key in obj) {
      if (typeof obj[key] === "object" && !Array.isArray(obj[key])) {
        if (typeof target[key] === "object" && !Array.isArray(target[key]))
          recursivelyAssign32(target[key], obj[key]);
        else
          target[key] = recursivelyAssign32({}, obj[key]);
      } else
        target[key] = obj[key];
    }
    return target;
  };
  var subprocessRoutes2 = { ...unsafeRoutes2, loadAlgorithms: loadAlgorithms2, "initSubprocesses": async function initSubprocesses2(subprocesses, service) {
    if (!service)
      service = this.__node.graph;
    if (!service)
      return void 0;
    for (const p in subprocesses) {
      let s = subprocesses[p];
      if (!s.worker && s.url)
        s.worker = service.addWorker({ url: s.url });
      if (!s.worker)
        continue;
      let w2 = s.worker;
      let wpId;
      wpId = service.establishMessageChannel(w2.worker, s.source?.worker);
      if (!s.source)
        s.source = service;
      if (typeof s.subprocess === "object") {
        const p2 = s.subprocess;
        if (!p2.name)
          continue;
        if (typeof p2.oncreate === "function") {
          p2.oncreate = p2.oncreate.toString();
        }
        if (typeof p2.ondata === "function") {
          p2.ondata = p2.ondata.toString();
        }
        s.worker.post("addSubprocessTemplate", [p2.name, p2.structs, p2.oncreate, p2.ondata, p2.props]);
        s.subprocess = p2.name;
      }
      if (s.init) {
        let r = await w2.run(s.init, s.initArgs);
        s.otherArgs = r;
      }
      if (s.otherArgs) {
        w2.run("setValue", ["otherArgsProxy", Array.isArray(s.otherArgs) ? s.otherArgs : [s.otherArgs]]);
      }
      if (s.pipeTo) {
        w2.run("setValue", ["routeProxy", s.route]);
        w2.run("setValue", ["pipeRoute", s.pipeTo.route]);
        if (s.url && !s.pipeTo.worker) {
          let w22 = service.addWorker({ url: s.url });
          s.pipeTo.portId = service.establishMessageChannel(w2.worker, w22.worker);
          s.pipeTo.worker = w22;
        }
        if (s.pipeTo.init) {
          s.pipeTo.otherArgs = await s.pipeTo.worker.run(s.pipeTo.init, s.pipeTo.initArgs);
        }
        w2.run("setValue", ["pipePort", s.pipeTo.portId]);
        if (s.pipeTo.otherArgs)
          w2.run("setValue", ["otherPipeArgs", s.pipeTo.otherArgs]);
        service.transferFunction(w2, function pipeResults(data) {
          let inp = data;
          if (this.__node.graph.otherArgsProxy)
            inp = [data, ...this.__node.graph.otherArgsProxy];
          let r = this.__node.graph.run(this.__node.graph.routeProxy, inp);
          if (!s.blocking)
            return new Promise((res) => {
              if (r instanceof Promise) {
                r.then((rr) => {
                  if (rr !== void 0) {
                    let args = rr;
                    if (this.__node.graph.otherPipeArgs)
                      args = [rr, ...this.__node.graph.otherPipeArgs];
                    if (this.workers[this.__node.graph.pipePort]) {
                      s.blocking = true;
                      this.workers[this.__node.graph.pipePort].run(this.__node.graph.pipeRoute, args).then((result) => {
                        s.blocking = false;
                        res(result);
                      });
                    }
                  }
                });
              } else if (r !== void 0) {
                let args = r;
                if (this.__node.graph.otherPipeArgs)
                  args = [r, ...this.__node.graph.otherPipeArgs];
                if (this.workers[this.__node.graph.pipePort]) {
                  s.blocking = true;
                  this.workers[this.__node.graph.pipePort].run(this.__node.graph.pipeRoute, args).then((result) => {
                    s.blocking = false;
                    res(result);
                  });
                }
              }
            });
          return void 0;
        }, s.route + "_pipeResults");
        s.route = s.route + "_pipeResults";
      } else {
        w2.run("setValue", ["routeProxy", s.route]);
        service.transferFunction(w2, function routeProxy(data) {
          let r;
          if (this.__node.graph.otherArgsProxy)
            r = this.__node.graph.nodes.get(this.__node.graph.routeProxy).__operator(data, ...this.__node.graph.otherArgsProxy);
          else
            r = this.__node.graph.nodes.get(this.__node.graph.routeProxy).__operator(data);
          if (this.__node.graph.state.triggers[this.__node.graph.routeProxy]) {
            if (r instanceof Promise) {
              r.then((rr) => {
                this.setState({ [this.__node.graph.routeProxy]: rr });
              });
            } else
              this.setState({ [this.__node.graph.routeProxy]: r });
          }
          return r;
        }, s.route + "_routeProxy");
        s.route = s.route + "_routeProxy";
        if (!s.stopped)
          w2.run("subscribeToWorker", [s.subscribeRoute, wpId, s.route]).then((sub) => {
            s.sub = sub;
          });
      }
      s.stop = async () => {
        if (s.source && typeof s.sub === "number") {
          s.source.unsubscribe(s.subscribeRoute, s.sub);
          return true;
        }
        return void 0;
      };
      s.start = async () => {
        if (typeof s.sub !== "number")
          return w2.run("subscribeToWorker", [s.subscribeRoute, wpId, s.route, s.blocking]).then((sub) => {
            s.sub = sub;
          });
      };
      s.setArgs = async (args) => {
        if (Array.isArray(args))
          await w2.run("setValue", ["otherArgsProxy", args]);
        else if (typeof args === "object") {
          for (const key in args) {
            await w2.run("setValue", [key, args[key]]);
          }
        }
        return true;
      };
      s.terminate = () => {
        w2.terminate();
        if (s.source?.worker && typeof s.sub === "number") {
          s.source.post("unsubscribe", s.sub);
        }
        if (s.pipeTo?.worker) {
          s.pipeTo.worker.terminate();
        }
      };
      if (s.callback)
        w2.subscribe(s.route, (res) => {
          if (typeof s.callback === "string")
            this.__node.graph.run(s.callback, res);
          else
            s.callback(res);
        });
    }
    return subprocesses;
  }, "addSubprocessTemplate": function subprocesstempalte2(name3, structs2, oncreate2, ondata2, props2) {
    if (typeof oncreate2 === "string")
      oncreate2 = parseFunctionFromText2(oncreate2);
    if (typeof ondata2 === "string")
      ondata2 = parseFunctionFromText2(ondata2);
    if (typeof ondata2 === "function") {
      algorithms2[name3] = { ondata: ondata2, oncreate: typeof oncreate2 === "function" ? oncreate2 : null, structs: structs2 };
      if (typeof props2 === "object")
        Object.assign(algorithms2[name3], props2);
      return true;
    }
  }, "updateSubprocess": function updatesubprocess2(structs2, _id) {
    if (!this.__node.graph.ALGORITHMS)
      this.__node.graph.ALGORITHMS = {};
    if (!_id)
      _id = Object.keys(this.__node.graph.ALGORITHMS)[0];
    if (!_id)
      return;
    Object.assign(this.__node.graph.ALGORITHMS[_id], structs2);
  }, "createSubprocess": function creatsubprocess2(options, inputs) {
    if (!this.__node.graph.ALGORITHMS)
      this.__node.graph.ALGORITHMS = {};
    if (typeof options === "string") {
      options = algorithms2[options];
    }
    if (typeof options === "object") {
      if (typeof options.ondata === "string")
        options.ondata = parseFunctionFromText2(options.ondata);
      let ctx;
      if (typeof options?.ondata === "function")
        ctx = createSubprocess2(options, inputs);
      if (ctx)
        this.__node.graph.ALGORITHMS[ctx._id] = ctx;
      if (ctx)
        return ctx._id;
    }
    return false;
  }, "runSubprocess": function runsubprocess2(data, _id) {
    if (!this.__node.graph.ALGORITHMS)
      this.__node.graph.ALGORITHMS = {};
    if (!_id)
      _id = Object.keys(this.__node.graph.ALGORITHMS)[0];
    if (!_id)
      return;
    let res = this.__node.graph.ALGORITHMS[_id].run(data);
    if (res !== void 0) {
      if (Array.isArray(res)) {
        let pass = [];
        res.forEach((r) => {
          if (r !== void 0) {
            pass.push(r);
            this.__node.graph.setState({ [_id]: r });
          }
        });
        if (pass.length > 0) {
          return pass;
        }
      } else {
        this.__node.graph.setState({ [_id]: res });
        return res;
      }
    }
  } };

  // alerts/Alert.ts
  var import_howler = __toESM(require_howler(), 1);
  var Alert = class {
    constructor(settings) {
      this.errored = false;
      this.buffer = [];
      this.history = [];
      this.set(settings);
    }
    set(settings) {
      if (settings) {
        if (!settings.preprocess)
          settings.preprocess = mean;
        this.settings = settings;
      } else
        console.log("No configuration object provided to Alert.set()");
      this.errored = false;
    }
    add(value) {
      const bufferLen = this.settings.bufferLength;
      if (!Array.isArray(value))
        value = [value];
      if (bufferLen) {
        this.buffer.push(...value);
        const diff = this.buffer.length - bufferLen;
        if (diff > 0)
          this.buffer = this.buffer.slice(diff);
      }
      this.latest = value;
    }
    check(value) {
      if (value)
        this.add(value);
      const bufferLen = this.settings.bufferLength;
      if (!bufferLen || bufferLen === this.settings.bufferLength) {
        const value2 = !bufferLen ? this.settings.preprocess(this.latest) : this.settings.preprocess(this.buffer);
        if (this.settings) {
          const toThrow = this.settings.condition(value2);
          if (toThrow)
            return this.throw(value2);
        } else {
          if (!this.errored) {
            this.errored = true;
            console.log("Invalid configuration object has been set for Alert");
          }
        }
      }
    }
    throw(value) {
      const message4 = typeof this.settings.message === "string" ? this.settings.message : this.settings.message(value);
      let sound;
      if (value !== void 0) {
        sound = new import_howler.Howl({ src: "./alerts/sounds/alarm.wav" });
        sound.play();
      }
      let elm = document.getElementById("alerts");
      elm.innerHTML = message4;
      elm.style.opacity = "1";
      const reaction = () => elm.style.opacity = "0";
      const position = this.history.length;
      this.history.push(reaction);
      setTimeout(() => {
        if (this.history.length === position + 1) {
          reaction();
          if (sound)
            sound.stop();
        }
      }, 3e3);
      return true;
    }
  };
  var Alert_default = Alert;
  function mean(arr) {
    return arr.reduce((a, b2) => a + b2, 0) / arr.length;
  }

  // algorithms/Algorithm.ts
  var Algorithm = class {
    constructor(settings) {
      this.errored = false;
      this.apply = (data) => this.settings.operator(data);
      this.set(settings);
    }
    set(settings) {
      if (settings) {
        this.settings = settings;
      } else
        console.log("No configuration object provided to Algorithm.set()");
      this.errored = false;
    }
  };
  var Algorithm_default = Algorithm;

  // components/Module.ts
  var _subscriptions, _ui;
  var Module = class {
    constructor(settings) {
      this.name = "Module";
      __privateAdd(this, _subscriptions, []);
      __privateAdd(this, _ui, void 0);
      this.__element = "div";
      this.__children = {};
      this.__listeners = {};
      this.__operator = (data) => {
        if (this.algorithm)
          data = this.algorithm.apply(data);
        if (this.alert)
          this.alert.check(data);
        return data;
      };
      this.set(settings);
    }
    get subscriptions() {
      return __privateGet(this, _subscriptions);
    }
    set subscriptions(value) {
      __privateSet(this, _subscriptions, value);
      const listeners = {};
      value.forEach((str4) => listeners[str4] = true);
      this.__listeners = listeners;
    }
    get ui() {
      return __privateGet(this, _ui);
    }
    set ui(value) {
      this.__children.ui = value;
      if (!value.style)
        value.style = {};
      if (!value.style.position)
        value.style.position = "relative";
    }
    set(settings) {
      if (settings) {
        if (settings.name)
          this.name = settings.name;
        let alert = settings.alert;
        if (alert && !(alert instanceof Alert_default))
          alert = new Alert_default(alert);
        this.alert = alert;
        let algorithm = settings.algorithm;
        if (algorithm && !(algorithm instanceof Algorithm_default))
          algorithm = new Algorithm_default(algorithm);
        this.algorithm = algorithm;
        if (settings.ui)
          this.ui = settings.ui;
        if (settings.subscriptions)
          this.subscriptions = settings.subscriptions;
      } else
        console.log("No configuration object provided to Module.set()");
    }
  };
  _subscriptions = new WeakMap();
  _ui = new WeakMap();

  // modules/arbitrary.ts
  var arbitrary_exports4 = {};
  __export(arbitrary_exports4, {
    alert: () => arbitrary_exports,
    algorithm: () => arbitrary_exports2,
    name: () => name2,
    subscriptions: () => subscriptions,
    ui: () => ui
  });

  // alerts/arbitrary.ts
  var arbitrary_exports = {};
  __export(arbitrary_exports, {
    condition: () => condition,
    message: () => message
  });
  var refractoryPeriod = 1e3;
  var canTrigger = true;
  var message = `<h2>Arbitrary Alert</h2><p>This alert has been thrown</p>`;
  var condition = (value) => {
    if (canTrigger) {
      const triggered = 1 - value < 0.05;
      if (triggered) {
        canTrigger = false;
        setTimeout(() => canTrigger = true, refractoryPeriod);
      }
      return triggered;
    } else
      return false;
  };

  // algorithms/arbitrary.ts
  var arbitrary_exports2 = {};
  __export(arbitrary_exports2, {
    operator: () => operator
  });
  var operator = (info) => info.value;

  // globals.ts
  var state3 = {
    ppg: {},
    emg: {},
    imu: {},
    env: {},
    emg2: {},
    arbitrary: {},
    recording: false,
    test: 0
  };

  // node_modules/device-decoder/src/stream.big.worker.ts
  var url2 = URL.createObjectURL(new Blob([String('(()=>{var __require=(x4=>typeof require!=="undefined"?require:typeof Proxy!=="undefined"?new Proxy(x4,{get:(a,b2)=>(typeof require!=="undefined"?require:a)[b2]}):x4)(function(x4){if(typeof require!=="undefined")return require.apply(this,arguments);throw new Error(\'Dynamic require of "\'+x4+\'" is not supported\')});var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __require2=(x4=>typeof __require!=="undefined"?__require:typeof Proxy!=="undefined"?new Proxy(x4,{get:(a,b2)=>(typeof __require!=="undefined"?__require:a)[b2]}):x4)(function(x4){if(typeof __require!=="undefined")return __require.apply(this,arguments);throw new Error(\'Dynamic require of "\'+x4+\'" is not supported\')});var __commonJS=(cb,mod)=>function __require23(){return mod||(0,cb[__getOwnPropNames(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports};var __copyProps=(to2,from,except,desc)=>{if(from&&typeof from==="object"||typeof from==="function"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to2,key)&&key!==except)__defProp(to2,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to2};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:true}):target,mod));var require_browser=__commonJS({"node_modules/web-worker/cjs/browser.js"(exports,module2){module2.exports=Worker}});var EventHandler=class{constructor(data){this.pushToState={};this.data={};this.triggers={};this.setState=updateObj=>{Object.assign(this.data,updateObj);let props=Object.getOwnPropertyNames(updateObj);for(const prop of props){this.triggerEvent(prop,this.data[prop])}return this.data};this.setValue=(key,value2)=>{this.data[key]=value2;this.triggerEvent(key,value2)};this.triggerEvent=(key,value2)=>{if(this.triggers[key]){let fn2=obj=>obj.onchange(value2);this.triggers[key].forEach(fn2)}};this.subscribeEvent=(key,onchange,refObject,refKey)=>{if(key){if(refObject&&refKey&&!this.triggers[key]){Object.defineProperty(this.data,key,{get:()=>{return refObject[refKey]},set:value2=>{refObject[refKey]=value2},enumerable:true,configurable:true})}if(!this.triggers[key]){this.triggers[key]=[]}let l=this.triggers[key].length;this.triggers[key].push({sub:l,onchange});return this.triggers[key].length-1}else return void 0};this.unsubscribeEvent=(key,sub2)=>{let triggers=this.triggers[key];if(triggers){if(!sub2){delete this.triggers[key];delete this.data[key]}else{let sub22=void 0;let obj=triggers.find((o2,i)=>{if(o2.sub===sub22){sub22=i;return true}});if(obj)triggers.splice(sub22,1);if(Object.keys(triggers).length===0){delete this.triggers[key];delete this.data[key]}if(this.onRemoved)this.onRemoved(obj);return true}}};this.subscribeEventOnce=(key,onchange)=>{let sub2;let changed=value2=>{onchange(value2);this.unsubscribeEvent(key,sub2)};sub2=this.subscribeEvent(key,changed)};this.getEvent=(key,sub2)=>{for(const s in this.triggers[key]){if(this.triggers[key][s].sub===sub2)return this.triggers[key][s]}};this.getSnapshot=()=>{const snapshot={};for(const key in this.data){snapshot[key]=this.data[key]}};if(typeof data==="object")this.data=data}};var state=new EventHandler;var GraphNode=class{constructor(properties,parent,graph){this.__node={tag:`node${Math.floor(Math.random()*1e15)}`,unique:`${Math.floor(Math.random()*1e15)}`,state};this.__setProperties=(properties2,parent2,graph2)=>{let enforceProperties=()=>{let orig=properties2;if(typeof properties2==="function"){if(isNativeClass(properties2)){properties2=new properties2}else properties2={__operator:properties2,__node:{forward:true,tag:properties2.name}}}else if(typeof properties2==="string"){if(graph2?.get(properties2)){properties2=graph2.get(properties2)}}if(!properties2.__node.initial)properties2.__node.initial=orig};enforceProperties();if(typeof properties2==="object"){let assignState=()=>{if(properties2.__node?.state)this.__node.state=properties2.__node.state};let setProps2=()=>{if(properties2.__props){if(typeof properties2.__props==="function")properties2.__props=new properties2.__props;if(typeof properties2.__props==="object"){this.__proxyObject(properties2.__props)}}};let setTag=()=>{if(!properties2.__node.tag){if(properties2.__operator?.name)properties2.__node.tag=properties2.__operator.name;else properties2.__node.tag=`node${Math.floor(Math.random()*1e15)}`}};let setNode=()=>{if(typeof properties2.__node==="string"){if(graph2?.get(properties2.__node.tag)){properties2=graph2.get(properties2.__node.tag)}else properties2.__node={}}else if(!properties2.__node)properties2.__node={};if(graph2){properties2.__node.graph=graph2}if(properties2 instanceof Graph)properties2.__node.source=properties2};let setParent=()=>{if(!properties2.__parent&&parent2)properties2.__parent=parent2;if(parent2?.__node&&!(parent2 instanceof Graph||properties2 instanceof Graph))properties2.__node.tag=parent2.__node.tag+"."+properties2.__node.tag;if(parent2 instanceof Graph&&properties2 instanceof Graph){if(properties2.__node.loaders)Object.assign(parent2.__node.loaders?parent2.__node.loaders:{},properties2.__node.loaders);if(parent2.__node.mapGraphs){properties2.__node.nodes.forEach(n=>{parent2.set(properties2.__node.tag+"."+n.__node.tag,n)});let ondelete=()=>{properties2.__node.nodes.forEach(n=>{parent2.__node.nodes.delete(properties2.__node.tag+"."+n.__node.tag)})};this.__addOndisconnected(ondelete)}}};let setOp=()=>{if(typeof properties2.default==="function"&&!properties2.__operator){properties2.__operator=properties2.default}if(properties2.__operator){if(typeof properties2.__operator==="string"){if(graph2){let n=graph2.get(properties2.__operator);if(n)properties2.__operator=n.__operator;if(!properties2.__node.tag&&properties2.__operator.name)properties2.__node.tag=properties2.__operator.name}}if(typeof properties2.__operator==="function")properties2.__operator=this.__setOperator(properties2.__operator);if(properties2.default)properties2.default=properties2.__operator}};let assignProps=()=>{properties2.__node=Object.assign(this.__node,properties2.__node);let keys=Object.getOwnPropertyNames(properties2);for(const key of keys){this[key]=properties2[key]}};let bindCallbacks=()=>{if(this.__onconnected){if(typeof this.__onconnected==="function"){this.__onconnected=this.__onconnected.bind(this)}else if(Array.isArray(this.__onconnected)){this.__onconnected=this.__onconnected.map(f=>{return f.bind(this)})}if(typeof this.__ondisconnected==="function"){this.__ondisconnected=this.__ondisconnected.bind(this)}else if(Array.isArray(this.__ondisconnected)){this.__ondisconnected=this.__ondisconnected.map(f=>{return f.bind(this)})}}};assignState();setTag();setProps2();setNode();setParent();assignProps();bindCallbacks();setOp()}};this.__subscribe=(callback,key,subInput,bound,target)=>{const subscribeToFunction=(k2,setTarget=(callback2,target2)=>callback2,triggerCallback=callback)=>{let sub2=this.__node.state.subscribeEvent(k2,triggerCallback,this,key);let trigger=this.__node.state.getEvent(k2,sub2);trigger.source=this.__node.tag;if(key)trigger.key=key;trigger.target=setTarget(callback);if(bound)trigger.bound=bound;return sub2};const subscribeToGraph=callback2=>{let fn2=this.__node.graph.get(callback2);if(!fn2&&callback2.includes(".")){let n=this.__node.graph.get(callback2.substring(0,callback2.lastIndexOf(".")));let key2=callback2.substring(callback2.lastIndexOf(".")+1);if(n&&typeof n[key2]==="function")callback2=(...args)=>{return n[key2](...args)}}};if(key){if(!this.__node.localState||!this.__node.localState[key]){this.__addLocalState(this,key)}if(typeof callback==="string"){if(target){if(this.__node.graph?.get(target)){let n=this.__node.graph?.get(target);if(typeof n[callback]==="function"){let fn2=n[callback];callback=(...inp)=>{fn2(...inp)}}else{let k22=callback;let setter=inp=>{n[k22]=inp};callback=setter}}}else if(typeof this[callback]==="function"){let fn2=this[callback];callback=(...inp)=>{fn2(...inp)}}else if(this.__node.graph?.get(callback))subscribeToGraph(callback);if(typeof callback!=="function")return void 0}let sub2;let k2=subInput?this.__node.unique+"."+key+"input":this.__node.unique+"."+key;if(typeof callback==="function")sub2=subscribeToFunction(k2);else if(callback?.__node)sub2=subscribeToFunction(k2,(callback2,target2)=>target2?target2:callback2.__node.unique,(...inp)=>{if(callback.__operator)callback.__operator(...inp)});return sub2}else{if(typeof callback==="string"){if(this.__node.graph.get(callback))callback=this.__node.graph.get(callback);if(typeof callback!=="object")return void 0}let sub2;let k2=subInput?this.__node.unique+"input":this.__node.unique;if(typeof callback==="function")sub2=subscribeToFunction(k2);else if(callback?.__node)sub2=subscribeToFunction(k2,(callback2,target2)=>target2?target2:callback2.__node.unique,(...inp)=>{if(callback.__operator)callback.__operator(...inp)});return sub2}};this.__unsubscribe=(sub2,key,unsubInput)=>{if(key)return this.__node.state.unsubscribeEvent(unsubInput?this.__node.unique+"."+key+"input":this.__node.unique+"."+key,sub2);else return this.__node.state.unsubscribeEvent(unsubInput?this.__node.unique+"input":this.__node.unique,sub2)};this.__setOperator=fn2=>{fn2=fn2.bind(this);if(this.__args&&this.__node.graph){fn2=wrapArgs(fn2,this.__args,this.__node.graph)}let inpstr=`${this.__node.unique}input`;this.__operator=(...args)=>{if(this.__node.state.triggers[inpstr])this.__node.state.setValue(inpstr,args);let result=fn2(...args);if(this.__node.state.triggers[this.__node.unique]){if(typeof result?.then==="function"){result.then(res=>{if(res!==void 0)this.__node.state.setValue(this.__node.unique,res)}).catch(console.error)}else if(result!==void 0)this.__node.state.setValue(this.__node.unique,result)}return result};if(this.__parent instanceof GraphNode&&!this.__subscribedToParent){if(this.__parent.__operator){let sub2=this.__parent.__subscribe(this);let ondelete=()=>{this.__parent?.__unsubscribe(sub2);delete this.__subscribedToParent};this.__addOndisconnected(ondelete);this.__subscribedToParent=true}}return this.__operator};this.__addLocalState=(props,key)=>{if(!props)return;if(!this.__node.localState){this.__node.localState={}}const localState=this.__node.localState;const initState=(props2,k2)=>{let str3=this.__node.unique+"."+k2;let inpstr=`${str3}input`;if(typeof props2[k2]==="function"&&k2!=="__operator"){let fn2=props2[k2].bind(this);props2[k2]=(...args)=>{if(this.__node.state.triggers[inpstr])this.__node.state.setValue(inpstr,args);let result=fn2(...args);if(this.__node.state.triggers[str3]){if(typeof result?.then==="function"){result.then(res=>{this.__node.state.triggerEvent(str3,res)}).catch(console.error)}else this.__node.state.triggerEvent(str3,result)}return result}}else{let get,set;if(this.__props?.[k2]){get=()=>{return this.__props[k2]};set=v3=>{this.__props[k2]=v3;if(this.__node.state.triggers[str3])this.__node.state.triggerEvent(str3,v3)}}else{localState[k2]=props2[k2];get=()=>{return localState[k2]};set=v3=>{localState[k2]=v3;if(this.__node.state.triggers[str3])this.__node.state.triggerEvent(str3,v3)}}const descriptor={get,set,enumerable:true,configurable:true};Object.defineProperty(props2,k2,descriptor);if(typeof this.__node.initial==="object"){let dec=Object.getOwnPropertyDescriptor(this.__node.initial,k2);if(dec===void 0||dec?.configurable){Object.defineProperty(this.__node.initial,k2,descriptor)}}}};if(key)initState(props,key);else{for(let k2 in props){initState(props,k2)}}};this.__proxyObject=obj=>{const allProps=getAllProperties(obj);for(const k2 of allProps){if(typeof obj[k2]==="function"){this[k2]=(...args)=>{return obj[k2](...args)}}else{const descriptor={get:()=>{return obj[k2]},set:value2=>{obj[k2]=value2},enumerable:true,configurable:true};Object.defineProperty(this,k2,descriptor)}}};this.__setProperties(properties,parent,graph)}__addOnconnected(callback){callback=callback.bind(this);if(Array.isArray(this.__onconnected)){this.__onconnected.push(callback)}else if(typeof this.__onconnected==="function"){this.__onconnected=[callback,this.__onconnected]}else this.__onconnected=callback}__addOndisconnected(callback){callback=callback.bind(this);if(Array.isArray(this.__ondisconnected)){this.__ondisconnected.push(callback)}else if(typeof this.__ondisconnected==="function"){this.__ondisconnected=[callback,this.__ondisconnected]}else this.__ondisconnected=callback}__callConnected(node=this){if(typeof this.__onconnected==="function"){this.__onconnected(this)}else if(Array.isArray(this.__onconnected)){let fn2=o2=>{o2(this)};this.__onconnected.forEach(fn2)}}__callDisconnected(node=this){if(typeof this.__ondisconnected==="function")this.__ondisconnected(this);else if(Array.isArray(this.__ondisconnected)){let fn2=o2=>{o2(this)};this.__ondisconnected.forEach(fn2)}}};var Graph=class{constructor(options){this.__node={tag:`graph${Math.floor(Math.random()*1e15)}`,unique:`${Math.random()}`,nodes:new Map,state,roots:{}};this.init=options2=>{if(options2){let cpy=Object.assign({},options2);delete cpy.roots;recursivelyAssign(this.__node,cpy);if(options2.roots)this.load(options2.roots)}};this.load=roots=>{function recursivelyAssignChildren(target,obj,inChildren=true,top=true){if(top){if(target)Object.assign(target,obj);else target=Object.assign({},obj);recursivelyAssignChildren(target,obj,true,false)}if(obj.__children&&!inChildren){if(obj.__children?.constructor.name==="Object"){if(target.__children?.constructor.name==="Object")recursivelyAssignChildren(target.__children,obj.__children,true,false);else target.__children=recursivelyAssignChildren({},obj.__children,true,false)}else{target.__children=obj.__children}}else if(inChildren){for(const key in obj){target[key]=Object.assign({},obj[key]);if(obj[key].__children){recursivelyAssignChildren({},obj[key].__children,false,false)}}}return target}this.__node.roots=recursivelyAssignChildren(this.__node.roots?this.__node.roots:{},roots);let cpy=Object.assign({},roots);if(cpy.__node)delete cpy.__node;let listeners=this.recursiveSet(cpy,this,void 0,roots);if(roots.__node){if(!roots.__node.tag)roots.__node._tag=`roots${Math.floor(Math.random()*1e15)}`;else if(!this.get(roots.__node.tag)){let node=new GraphNode(roots,this,this);this.set(node.__node.tag,node);this.runLoaders(node,this,roots,roots.__node.tag);if(node.__listeners){listeners[node.__node.tag]=node.__listeners}}}else if(roots.__listeners){this.setListeners(roots.__listeners)}this.setListeners(listeners);return cpy};this.setLoaders=(loaders22,replace)=>{if(replace)this.__node.loaders=loaders22;else Object.assign(this.__node.loaders,loaders22);return this.__node.loaders};this.runLoaders=(node,parent,properties,key)=>{for(const l in this.__node.loaders){if(typeof this.__node.loaders[l]==="object"){if(this.__node.loaders[l].init)this.__node.loaders[l](node,parent,this,this.__node.roots,properties,key);if(this.__node.loaders[l].connected)node.__addOnconnected(this.__node.loaders[l].connect);if(this.__node.loaders[l].disconnected)node.__addOndisconnected(this.__node.loaders[l].disconnect)}else if(typeof this.__node.loaders[l]==="function")this.__node.loaders[l](node,parent,this,this.__node.roots,properties,key)}};this.add=(properties,parent)=>{let listeners={};if(typeof parent==="string")parent=this.get(parent);let instanced;if(typeof properties==="function"){if(isNativeClass(properties)){if(properties.prototype instanceof GraphNode){properties=properties.prototype.constructor(properties,parent,this);instanced=true}else properties=new properties}else properties={__operator:properties}}else if(typeof properties==="string"){properties=this.__node.roots[properties]}if(!properties)return;if(!instanced){let keys=Object.getOwnPropertyNames(properties);let cpy={};for(const key of keys){cpy[key]=properties[key]}properties=cpy}if(!properties.__node)properties.__node={};properties.__node.initial=properties;if(typeof properties==="object"&&(!properties?.__node?.tag||!this.get(properties.__node.tag))){let node;if(instanced)node=properties;else node=new GraphNode(properties,parent,this);this.set(node.__node.tag,node);this.runLoaders(node,parent,properties,node.__node.tag);this.__node.roots[node.__node.tag]=properties;if(node.__children){node.__children=Object.assign({},node.__children);this.recursiveSet(node.__children,node,listeners,node.__children)}if(node.__listeners){listeners[node.__node.tag]=Object.assign({},node.__listeners);for(const key in node.__listeners){let listener=node.__listeners[key];if(node[key]){delete listeners[node.__node.tag][key];listeners[node.__node.tag][node.__node.tag+"."+key]=listener}if(typeof listener==="string"){if(node.__children?.[listener]){listeners[node.__node.tag][key]=node.__node.tag+"."+listener}else if(parent instanceof GraphNode&&(parent.__node.tag===listener||parent.__node.tag.includes(".")&&parent.__node.tag.split(".").pop()===listener)){listeners[node.__node.tag][key]=parent.__node.tag}}}}this.setListeners(listeners);node.__callConnected();return node}return};this.recursiveSet=(t2,parent,listeners={},origin)=>{let keys=Object.getOwnPropertyNames(origin);for(const key of keys){if(key.includes("__"))continue;let p=origin[key];if(Array.isArray(p))continue;let instanced;if(typeof p==="function"){if(isNativeClass(p)){p=new p;if(p instanceof GraphNode){p=p.prototype.constructor(p,parent,this);instanced=true}}else p={__operator:p}}else if(typeof p==="string"){if(this.__node.nodes.get(p))p=this.__node.nodes.get(p);else p=this.__node.roots[p]}else if(typeof p==="boolean"){if(this.__node.nodes.get(key))p=this.__node.nodes.get(key);else p=this.__node.roots[key]}if(typeof p==="object"){if(!instanced&&!(p instanceof GraphNode)){let keys2=Object.getOwnPropertyNames(p);let cpy={};for(const key2 of keys2){cpy[key2]=p[key2]}p=cpy}if(!p.__node)p.__node={};if(!p.__node.tag)p.__node.tag=key;if(!p.__node.initial)p.__node.initial=t2[key];if(this.get(p.__node.tag)&&!(!(parent instanceof Graph)&&parent?.__node)||parent?.__node&&this.get(parent.__node.tag+"."+p.__node.tag))continue;let node;let newnode=false;if(instanced||p instanceof GraphNode){node=p}else{node=new GraphNode(p,parent,this);newnode=true}if(!newnode&&p instanceof GraphNode&&!instanced&&parent instanceof GraphNode){let sub2=this.subscribe(parent.__node.tag,node.__node.tag);let ondelete=node2=>{this.unsubscribe(parent.__node.tag,sub2)};node.__addOndisconnected(ondelete)}else{this.set(node.__node.tag,node);this.runLoaders(node,parent,t2[key],key);t2[key]=node;this.__node.roots[node.__node.tag]=p;if(node.__children){node.__children=Object.assign({},node.__children);this.recursiveSet(node.__children,node,listeners,node.__children)}if(node.__listeners){listeners[node.__node.tag]=Object.assign({},node.__listeners);for(const key2 in node.__listeners){let listener=node.__listeners[key2];let k2=key2;if(node[key2]){delete listeners[node.__node.tag][key2];k2=node.__node.tag+"."+key2;listeners[node.__node.tag][k2]=listener}if(typeof listener==="string"){if(node.__children?.[listener]){listeners[node.__node.tag][k2]=node.__node.tag+"."+listener}else if(parent instanceof GraphNode&&(parent.__node.tag===listener||parent.__node.tag.includes(".")&&parent.__node.tag.split(".").pop()===listener)){listeners[node.__node.tag][k2]=parent.__node.tag}}}}node.__callConnected()}}}return listeners};this.remove=(node,clearListeners=true)=>{this.unsubscribe(node);if(typeof node==="string")node=this.get(node);if(node instanceof GraphNode){this.delete(node.__node.tag);delete this.__node.roots[node.__node.tag];if(clearListeners){this.clearListeners(node)}node.__callDisconnected();const recursiveRemove=t2=>{for(const key in t2){this.unsubscribe(t2[key]);this.delete(t2[key].__node.tag);delete this.__node.roots[t2[key].__node.tag];this.delete(key);delete this.__node.roots[key];t2[key].__node.tag=t2[key].__node.tag.substring(t2[key].__node.tag.lastIndexOf(".")+1);if(clearListeners){this.clearListeners(t2[key])}console.log(key,t2[key].__listeners);t2[key].__callDisconnected();if(t2[key].__children){recursiveRemove(t2[key].__children)}}};if(node.__children){recursiveRemove(node.__children)}}if(node?.__node.tag&&node?.__parent){delete node?.__parent;node.__node.tag=node.__node.tag.substring(node.__node.tag.indexOf(".")+1)}return node};this.run=(node,...args)=>{if(typeof node==="string"){let nd=this.get(node);if(!nd&&node.includes(".")){nd=this.get(node.substring(0,node.lastIndexOf(".")));if(typeof nd?.[node.substring(node.lastIndexOf(".")+1)]==="function")return nd[node.substring(node.lastIndexOf(".")+1)](...args)}else if(nd?.__operator)return nd.__operator(...args)}if(node?.__operator){return node?.__operator(...args)}};this.setListeners=listeners=>{for(const key in listeners){let node=this.get(key);if(typeof listeners[key]==="object"){for(const k2 in listeners[key]){let n=this.get(k2);let sub2;if(typeof listeners[key][k2]!=="object")listeners[key][k2]={__callback:listeners[key][k2]};else if(!listeners[key][k2].__callback){for(const kk in listeners[key][k2]){if(typeof listeners[key][k2][kk]!=="object"){listeners[key][k2][kk]={__callback:listeners[key][k2][kk]};if(listeners[key][k2][kk].__callback===true||typeof listeners[key][k2][kk].__callback==="undefined")listeners[key][k2][kk].__callback=node.__operator}let nn2=this.get(kk);if(nn2){if(!nn2){let tag=k2.substring(0,k2.lastIndexOf("."));nn2=this.get(tag);if(n){sub2=this.subscribe(nn2,listeners[key][k2][kk].__callback,listeners[key][k2][kk].__args,k2.substring(k2.lastIndexOf(".")+1),listeners[key][k2][kk].inputState,key,k2);if(typeof node.__listeners[k2][kk]!=="object")node.__listeners[k2][kk]={__callback:listeners[key][k2][kk].__callback,inputState:listeners[key][k2][kk]?.inputState};node.__listeners[k2][kk].sub=sub2}}else{sub2=this.subscribe(nn2,listeners[key][k2][kk].__callback,listeners[key][k2].__args,void 0,listeners[key][k2].inputState,key,k2);if(typeof node.__listeners[k2][kk]!=="object")node.__listeners[k2][kk]={__callback:listeners[key][k2][kk].__callback,inputState:listeners[key][k2][kk]?.inputState};node.__listeners[k2][kk].sub=sub2}}}}if("__callback"in listeners[key][k2]){if(listeners[key][k2].__callback===true||typeof listeners[key][k2].__callback==="undefined")listeners[key][k2].__callback=node.__operator;if(typeof listeners[key][k2].__callback==="function")listeners[key][k2].__callback=listeners[key][k2].__callback.bind(node);if(typeof node.__listeners!=="object")node.__listeners={};if(!n){let tag=k2.substring(0,k2.lastIndexOf("."));n=this.get(tag);if(n){sub2=this.subscribe(n,listeners[key][k2].__callback,listeners[key][k2].__args,k2.substring(k2.lastIndexOf(".")+1),listeners[key][k2].inputState,key,k2);if(typeof node.__listeners[k2]!=="object")node.__listeners[k2]={__callback:listeners[key][k2].__callback,inputState:listeners[key][k2]?.inputState};node.__listeners[k2].sub=sub2}}else{sub2=this.subscribe(n,listeners[key][k2].__callback,listeners[key][k2].__args,void 0,listeners[key][k2].inputState,key,k2);if(typeof node.__listeners[k2]!=="object")node.__listeners[k2]={__callback:listeners[key][k2].__callback,inputState:listeners[key][k2]?.inputState};node.__listeners[k2].sub=sub2}}}}}};this.clearListeners=(node,listener)=>{if(typeof node==="string")node=this.get(node);if(node?.__listeners){for(const key in node.__listeners){if(listener&&key!==listener)continue;if(typeof node.__listeners[key]?.sub!=="number")continue;let n=this.get(key);if(!n){n=this.get(key.substring(0,key.lastIndexOf(".")));if(n){if(typeof node.__listeners[key]==="object"&&!node.__listeners[key]?.__callback){for(const k2 in node.__listeners[key]){if(typeof node.__listeners[key][k2]?.sub==="number"){this.unsubscribe(n,node.__listeners[key][k2].sub,key.substring(key.lastIndexOf(".")+1),node.__listeners[key][k2].inputState);node.__listeners[key][k2].sub=void 0}}}else if(typeof node.__listeners[key]?.sub==="number"){this.unsubscribe(n,node.__listeners[key].sub,key.substring(key.lastIndexOf(".")+1),node.__listeners[key].inputState);node.__listeners[key].sub=void 0}}}else{if(typeof!node.__listeners[key]?.__callback==="number"){for(const k2 in node.__listeners[key]){if(node.__listeners[key][k2]?.sub){this.unsubscribe(n,node.__listeners[key][k2].sub,void 0,node.__listeners[key][k2].inputState);node.__listeners[key][k2].sub=void 0}}}else if(typeof node.__listeners[key]?.sub==="number"){this.unsubscribe(n,node.__listeners[key].sub,void 0,node.__listeners[key].inputState);node.__listeners[key].sub=void 0}}}}};this.get=tag=>{return this.__node.nodes.get(tag)};this.set=(tag,node)=>{return this.__node.nodes.set(tag,node)};this.delete=tag=>{return this.__node.nodes.delete(tag)};this.getProps=(node,getInitial)=>{if(typeof node==="string")node=this.get(node);if(node instanceof GraphNode){let cpy;if(getInitial)cpy=Object.assign({},this.__node.roots[node.__node.tag]);else{cpy=Object.assign({},node);for(const key in cpy){if(key.includes("__"))delete cpy[key]}}}};this.subscribe=(nodeEvent,onEvent,args,key,subInput,target,bound)=>{let nd=nodeEvent;if(typeof nodeEvent==="string"){nd=this.get(nodeEvent);if(!nd&&nodeEvent.includes(".")){nd=this.get(nodeEvent.substring(0,nodeEvent.lastIndexOf(".")));key=nodeEvent.substring(nodeEvent.lastIndexOf(".")+1)}}let sub2;if(target instanceof GraphNode)target=target.__node.tag;if(typeof onEvent==="string"){let key2=onEvent;let setOnEventFromString=onEvent2=>{if(this.get(onEvent2)?.__operator){let node=this.get(onEvent2);onEvent2=function(...inp){return node.__operator(...inp)}}else if(onEvent2.includes(".")){let n=this.get(onEvent2.substring(0,onEvent2.lastIndexOf(".")));let key3=onEvent2.substring(onEvent2.lastIndexOf(".")+1);if(typeof n[key3]==="function"){if(n[key3]instanceof GraphNode)onEvent2=n[key3];else onEvent2=function(...inp){return n[key3](...inp)}}else{onEvent2=function(inp){n[key3]=inp;return n[key3]}}}return onEvent2};if(target){let node=this.get(target);if(typeof node?.[onEvent]==="function"){onEvent=function(...inp){return node[key2](...inp)}}else if(node[key2]){if(node[key2]instanceof GraphNode)onEvent=node[key2];else onEvent=function(inp){node[key2]=inp;return node[key2]}}else{onEvent=setOnEventFromString(onEvent)}}else{onEvent=setOnEventFromString(onEvent)}}if((typeof onEvent==="function"||onEvent instanceof GraphNode)&&args){if(onEvent instanceof GraphNode&&onEvent.__operator)onEvent=function(inp){return onEvent.__operator(inp)};onEvent=wrapArgs(onEvent,args,this)}if(nd instanceof GraphNode){sub2=nd.__subscribe(onEvent,key,subInput,target,bound);let ondelete=()=>{nd.__unsubscribe(sub2,key,subInput)};nd.__addOndisconnected(ondelete)}else if(typeof nodeEvent==="string"){if(this.get(nodeEvent)){if(onEvent instanceof GraphNode&&onEvent.__operator){sub2=this.get(nodeEvent).__subscribe(onEvent.__operator,key,subInput,target,bound);let ondelete=()=>{this.get(nodeEvent).__unsubscribe(sub2)};onEvent.__addOndisconnected(ondelete)}else if(typeof onEvent==="function"||typeof onEvent==="string"){sub2=this.get(nodeEvent).__subscribe(onEvent,key,subInput,target,bound);this.__node.state.getEvent(this.get(nodeEvent).__node.unique,sub2).source=nodeEvent}}else{if(typeof onEvent==="string")onEvent=this.__node.nodes.get(onEvent).__operator;if(typeof onEvent==="function")sub2=this.__node.state.subscribeEvent(nodeEvent,onEvent)}}return sub2};this.unsubscribe=(node,sub2,key,subInput)=>{if(node instanceof GraphNode){return node.__unsubscribe(sub2,key,subInput)}else return this.get(node)?.__unsubscribe(sub2,key,subInput)};this.setState=update=>{this.__node.state.setState(update)};this.init(options)}};function recursivelyAssign(target,obj){for(const key in obj){if(obj[key]?.constructor.name==="Object"&&!Array.isArray(obj[key])){if(target[key]?.constructor.name==="Object"&&!Array.isArray(target[key]))recursivelyAssign(target[key],obj[key]);else target[key]=recursivelyAssign({},obj[key])}else{target[key]=obj[key]}}return target}function getAllProperties(obj){var allProps=[],curr=obj;do{var props=Object.getOwnPropertyNames(curr);let fn2=function(prop){if(allProps.indexOf(prop)===-1)allProps.push(prop)};props.forEach(fn2)}while(curr=Object.getPrototypeOf(curr));return allProps}function isNativeClass(thing){return typeof thing==="function"&&thing.hasOwnProperty("prototype")&&!thing.hasOwnProperty("arguments")}var wrapArgs=(callback,argOrder,graph)=>{let args=[];let getCallbackFromString=a=>{if(graph.get(a)?.__operator){let node=graph.get(a);return(...inp)=>{node.__operator(...inp)}}else if(a.includes(".")){let split=a.split(".");let popped=split.pop();let joined=split.join(".");let node=graph.get(joined);if(typeof graph.get(joined)?.[popped]==="function"){return(...inp)=>{return node[popped](...inp)}}else return()=>{return node[popped]}}else if(graph.get(a)){let node=graph.get(a);return()=>{return node}}else{let arg=a;return()=>{return arg}}};let forArg=(a,i)=>{if(a==="__output"){args[i]=inp=>{return inp}}else if(typeof a==="string"){args[i]=getCallbackFromString(a)}else if(typeof a==="function"){let fn22=a;args[i]=(...inp)=>{return fn22(...inp)}}else if(typeof a==="object"&&a.__input){let recursivelyCreateCallback=function(c2){let input=c2.__input;if(typeof c2.__input==="string"){input=getCallbackFromString(c2.__input)}if(c2.__args){input=wrapArgs(input,c2.__args,graph)}if(c2.__output){let output=c2.__output;if(typeof c2.__output==="string"){output=getCallbackFromString(output)}else if(typeof a.__output==="object"){output=recursivelyCreateCallback(output)}if(typeof output==="function"){let fn22=input;input=(...inp)=>{return output(fn22(...inp))}}}return input};args[i]=recursivelyCreateCallback(a)}else{let arg=a;args[i]=()=>{return arg}}};argOrder.forEach(forArg);if(typeof callback==="string")callback=getCallbackFromString(callback);let fn2=callback;callback=function(...inp){let mapArg=arg=>{return arg(...inp)};return fn2(...args.map(mapArg))};return callback};var backprop=(node,parent,graph)=>{if(node.__node.backward&&parent instanceof GraphNode){graph.setListeners({[parent.__node.tag]:{[node.__node.tag]:parent}})}};var loop=(node,parent,graph)=>{if(node.__operator&&!node.__node.looperSet){if(typeof node.__node.delay==="number"){let fn2=node.__operator;node.__setOperator((...args)=>{return new Promise((res,rej)=>{setTimeout(async()=>{res(await fn2(...args))},node.__node.delay)})})}else if(node.__node.frame===true){let fn2=node.__operator;node.__setOperator((...args)=>{return new Promise((res,rej)=>{requestAnimationFrame(async()=>{res(await fn2(...args))})})})}if(typeof node.__node.repeat==="number"||typeof node.__node.recursive==="number"){let fn2=node.__operator;node.__setOperator(async(...args)=>{let i=node.__node.repeat?node.__node.repeat:node.__node.recursive;let result;let repeater=async(tick,...inp)=>{while(tick>0){if(node.__node.delay||node.__node.frame){fn2(...inp).then(async res=>{if(node.__node.recursive){await repeater(tick,res)}else await repeater(tick,...inp)});break}else result=await fn2(...args);tick--}};await repeater(i,...args);return result})}if(node.__node.loop&&typeof node.__node.loop==="number"){node.__node.looperSet=true;let fn2=node.__operator;node.__setOperator((...args)=>{if(!("looping"in node.__node))node.__node.looping=true;if(node.__node.looping){fn2(...args);setTimeout(()=>{node.__operator(...args)},node.__node.loop)}});if(node.__node.looping)node.__operator();let ondelete=node2=>{if(node2.__node.looping)node2.__node.looping=false};node.__addOndisconnected(ondelete)}}};var animate=(node,parent,graph)=>{if(node.__node.animate===true||node.__animation){let fn2=node.__operator;node.__setOperator((...args)=>{if(!("animating"in node.__node))node.__node.animating=true;if(node.__node.animating){if(typeof node.__animation==="function")node.__animation(...args);else fn2(...args);requestAnimationFrame(()=>{node.__operator(...args)})}});if(node.__node.animating||(!("animating"in node.__node)||node.__node.animating)&&node.__animation)setTimeout(()=>{requestAnimationFrame(node.__operator)},10);let ondelete=node2=>{if(node2.__node.animating)node2.__node.animating=false};node.__addOndisconnected(ondelete)}};var branching=(node,parent,graph)=>{if(typeof node.__branch==="object"&&node.__operator&&!node.__branchApplied){let fn2=node.__operator;node.__branchApplied=true;node.__operator=(...args)=>{let result=fn2(...args);for(const key in node.__branch){let triggered=()=>{if(typeof node.__branch[key].then==="function"){node.__branch[key].then(result)}else if(node.__branch[key].then instanceof GraphNode&&node.__branch[key].then.__operator){node.__branch[key].then.__operator(result)}else result=node.__branch[key].then};if(typeof node.__branch[key].if==="function"){if(node.__branch[key].if(result)==true){triggered()}}else if(node.__branch[key].if===result){triggered()}}return result}}if(node.__listeners){for(const key in node.__listeners){if(typeof node.__listeners[key]==="object"){if(node.__listeners[key].branch&&!node.__listeners[key].branchApplied){let fn2=node.__listeners[key].callback;node.__listeners[key].branchApplied=true;node.__listeners.callback=ret=>{let triggered=()=>{if(typeof node.__listeners[key].branch.then==="function"){ret=node.__listeners[key].branch.then(ret)}else if(node.__listeners[key].branch.then instanceof GraphNode&&node.__listeners[key].branch.then.__operator){ret=node.__listeners[key].branch.then.__operator(ret)}else ret=node.__listeners[key].branch.then};if(typeof node.__listeners[key].branch.if==="function"){if(node.__listeners[key].branch.if(ret)){triggered()}}else if(node.__listeners[key].branch.if===ret){triggered()}return fn2(ret)}}}}}};var triggerListenerOncreate=(node,parent,graph)=>{if(node.__listeners){for(const key in node.__listeners){if(typeof node.__listeners[key]==="object"){if(node.__listeners[key].oncreate){node.__listeners[key].callback(node.__listeners[key].oncreate)}}}}};var bindListener=(node,parent,graph)=>{if(node.__listeners){for(const key in node.__listeners){if(typeof node.__listeners[key]==="object"){if(typeof node.__listeners[key].binding==="object"){node.__listeners.callback=node.__listeners.callback.bind(node.__listeners[key].binding)}}}}};var transformListenerResult=(node,parent,graph)=>{if(node.__listeners){for(const key in node.__listeners){if(typeof node.__listeners[key]==="object"){if(typeof node.__listeners[key].transform==="function"&&!node.__listeners[key].transformApplied){let fn2=node.__listeners[key].callback;node.__listeners[key].transformApplied=true;node.__listeners.callback=ret=>{ret=node.__listeners[key].transform(ret);return fn2(ret)}}}}}};var substitute__operator=(node,parent,graph)=>{if(node.post&&!node.__operator){node.__setOperator(node.post)}else if(!node.__operator&&typeof node.get=="function"){node.__setOperator(node.get)}if(!node.get&&node.__operator){node.get=node.__operator}if(node.aliases){node.aliases.forEach(a=>{graph.set(a,node);let ondelete=node2=>{graph.__node.nodes.delete(a)};node.__addOndisconnected(ondelete)})}if(typeof graph.__node.roots?.[node.__node.tag]==="object"&&node.get)graph.__node.roots[node.__node.tag].get=node.get};var loaders={backprop,loop,animate,branching,triggerListenerOncreate,bindListener,transformListenerResult,substitute__operator};var recursivelyStringifyFunctions=obj=>{let cpy={};for(const key in obj){if(typeof obj[key]==="object"){cpy[key]=recursivelyStringifyFunctions(obj[key])}else if(typeof obj[key]==="function"){cpy[key]=obj[key].toString()}}return cpy};function parseFunctionFromText(method=""){let getFunctionBody=methodString=>{return methodString.replace(/^\\W*(function[^{]+\\{([\\s\\S]*)\\}|[^=]+=>[^{]*\\{([\\s\\S]*)\\}|[^=]+=>(.+))/i,"$2$3$4")};let getFunctionHead=methodString=>{let startindex=methodString.indexOf("=>")+1;if(startindex<=0){startindex=methodString.indexOf("){")}if(startindex<=0){startindex=methodString.indexOf(") {")}return methodString.slice(0,methodString.indexOf("{",startindex)+1)};let newFuncHead=getFunctionHead(method);let newFuncBody=getFunctionBody(method);let newFunc;if(newFuncHead.includes("function")){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody)}else{if(newFuncHead.substring(0,6)===newFuncBody.substring(0,6)){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody.substring(newFuncBody.indexOf("{")+1,newFuncBody.length-1))}else{try{newFunc=(0,eval)(newFuncHead+newFuncBody+"}")}catch{}}}return newFunc}var stringifyWithCircularRefs=function(){const refs=new Map;const parents=[];const path=["this"];function clear(){refs.clear();parents.length=0;path.length=1}function updateParents(key,value2){var idx=parents.length-1;var prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value2||idx===0){path.push(key);parents.push(value2.pushed)}else{while(idx-->=0){prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value2){idx+=2;parents.length=idx;path.length=idx;--idx;parents[idx]=value2;path[idx]=key;break}}idx--}}}}function checkCircular(key,value2){if(value2!=null){if(typeof value2==="object"){if(key){updateParents(key,value2)}let other=refs.get(value2);if(other){return"[Circular Reference]"+other}else{refs.set(value2,path.join("."))}}}return value2}return function stringifyWithCircularRefs22(obj,space){try{parents.push(obj);return JSON.stringify(obj,checkCircular,space)}finally{clear()}}}();if(JSON.stringifyWithCircularRefs===void 0){JSON.stringifyWithCircularRefs=stringifyWithCircularRefs}var stringifyFast=function(){const refs=new Map;const parents=[];const path=["this"];function clear(){refs.clear();parents.length=0;path.length=1}function updateParents(key,value2){var idx=parents.length-1;if(parents[idx]){var prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value2||idx===0){path.push(key);parents.push(value2.pushed)}else{while(idx-->=0){prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value2){idx+=2;parents.length=idx;path.length=idx;--idx;parents[idx]=value2;path[idx]=key;break}}idx++}}}}}function checkValues(key,value2){let val;if(value2!=null){if(typeof value2==="object"){let c2=value2.constructor.name;if(key&&c2==="Object"){updateParents(key,value2)}let other=refs.get(value2);if(other){return"[Circular Reference]"+other}else{refs.set(value2,path.join("."))}if(c2==="Array"){if(value2.length>20){val=value2.slice(value2.length-20)}else val=value2}else if(c2.includes("Set")){val=Array.from(value2)}else if(c2!=="Object"&&c2!=="Number"&&c2!=="String"&&c2!=="Boolean"){val="instanceof_"+c2}else if(c2==="Object"){let obj={};for(const prop in value2){if(value2[prop]==null){obj[prop]=value2[prop]}else if(Array.isArray(value2[prop])){if(value2[prop].length>20)obj[prop]=value2[prop].slice(value2[prop].length-20);else obj[prop]=value2[prop]}else if(value2[prop].constructor.name==="Object"){obj[prop]={};for(const p in value2[prop]){if(Array.isArray(value2[prop][p])){if(value2[prop][p].length>20)obj[prop][p]=value2[prop][p].slice(value2[prop][p].length-20);else obj[prop][p]=value2[prop][p]}else{if(value2[prop][p]!=null){let con=value2[prop][p].constructor.name;if(con.includes("Set")){obj[prop][p]=Array.from(value2[prop][p])}else if(con!=="Number"&&con!=="String"&&con!=="Boolean"){obj[prop][p]="instanceof_"+con}else{obj[prop][p]=value2[prop][p]}}else{obj[prop][p]=value2[prop][p]}}}}else{let con=value2[prop].constructor.name;if(con.includes("Set")){obj[prop]=Array.from(value2[prop])}else if(con!=="Number"&&con!=="String"&&con!=="Boolean"){obj[prop]="instanceof_"+con}else{obj[prop]=value2[prop]}}}val=obj}else{val=value2}}else{val=value2}}return val}return function stringifyFast22(obj,space){parents.push(obj);let res=JSON.stringify(obj,checkValues,space);clear();return res}}();if(JSON.stringifyFast===void 0){JSON.stringifyFast=stringifyFast}function methodstrings(node){if(typeof node.__methods==="object"){for(const key in node.__methods){let fstr=node.__methods[key];let fn2=typeof fstr==="function"?fstr:parseFunctionFromText(fstr);if(key==="__operator"){node.__setOperator(fn2)}else{node[key]=fn2.bind(node)}}}}var Service=class extends Graph{constructor(options){super({...options,loaders:options?.loaders?Object.assign({...loaders},options.loaders):{...loaders}});this.name=`service${Math.floor(Math.random()*1e15)}`;this.addServices=services=>{for(const s in services){if(typeof services[s]==="function")services[s]=new services[s];if(services[s]?.__node?.loaders)Object.assign(this.__node.loaders,services[s].__node.loaders);if(services[s]?.__node?.nodes){services[s].__node.nodes.forEach((n,tag)=>{if(!this.get(tag)){this.set(tag,n)}else this.set(s+"."+tag,n)});this.__node.nodes.forEach((n,k2)=>{if(!services[s].__node.nodes.get(k2))services[s].__node.nodes.set(k2,n)});let set=this.set;this.set=(tag,node)=>{services[s].set(tag,node);return set(tag,node)};let del=this.delete;this.delete=tag=>{services[s].delete(tag);return del(tag)}}else if(typeof services[s]==="object"){this.load(services[s])}}};this.handleMethod=(route,method,args)=>{let m=method.toLowerCase();let src=this.__node.nodes.get(route);if(!src){src=this.__node.roots[route]}if(src?.[m]){if(typeof src[m]!=="function"){if(args)src[m]=args;return src[m]}else return src[m](args)}else return this.handleServiceMessage({route,args,method})};this.transmit=(...args)=>{if(typeof args[0]==="object"){if(args[0].method){return this.handleMethod(args[0].route,args[0].method,args[0].args)}else if(args[0].route){return this.handleServiceMessage(args[0])}else if(args[0].node){return this.handleGraphNodeCall(args[0].node,args[0].args)}else if(this.__node.keepState){if(args[0].route)this.setState({[args[0].route]:args[0].args});if(args[0].node)this.setState({[args[0].node]:args[0].args})}return args}else return args};this.receive=(...args)=>{if(args[0]){if(typeof args[0]==="string"){let substr=args[0].substring(0,8);if(substr.includes("{")||substr.includes("[")){if(substr.includes("\\\\"))args[0]=args[0].replace(/\\\\/g,"");if(args[0][0]===\'"\'){args[0]=args[0].substring(1,args[0].length-1)};args[0]=JSON.parse(args[0])}}}if(typeof args[0]==="object"){if(args[0].method){return this.handleMethod(args[0].route,args[0].method,args[0].args)}else if(args[0].route){return this.handleServiceMessage(args[0])}else if(args[0].node){return this.handleGraphNodeCall(args[0].node,args[0].args)}else if(this.__node.keepState){if(args[0].route)this.setState({[args[0].route]:args[0].args});if(args[0].node)this.setState({[args[0].node]:args[0].args})}return args}else return args};this.pipe=(source,destination,endpoint,method,callback)=>{if(source instanceof GraphNode){if(callback)return this.subscribe(source,res=>{let mod=callback(res);if(mod!==void 0)this.transmit({route:destination,args:mod,method});else this.transmit({route:destination,args:res,method},endpoint)});else return this.subscribe(source,res=>{this.transmit({route:destination,args:res,method},endpoint)})}else if(typeof source==="string")return this.subscribe(source,res=>{this.transmit({route:destination,args:res,method},endpoint)})};this.pipeOnce=(source,destination,endpoint,method,callback)=>{if(source instanceof GraphNode){if(callback)return source.__node.state.subscribeEventOnce(source.__node.unique,res=>{let mod=callback(res);if(mod!==void 0)this.transmit({route:destination,args:mod,method});else this.transmit({route:destination,args:res,method},endpoint)});else return this.__node.state.subscribeEventOnce(source.__node.unique,res=>{this.transmit({route:destination,args:res,method},endpoint)})}else if(typeof source==="string")return this.__node.state.subscribeEventOnce(this.__node.nodes.get(source).__node.unique,res=>{this.transmit({route:destination,args:res,method},endpoint)})};this.terminate=(...args)=>{};this.isTypedArray=isTypedArray;this.recursivelyAssign=recursivelyAssign2;this.spliceTypedArray=spliceTypedArray;this.ping=()=>{console.log("pinged!");return"pong"};this.echo=(...args)=>{this.transmit(...args);return args};if(options?.services)this.addServices(options.services);this.load(this)}handleServiceMessage(message){let call;if(typeof message==="object"){if(message.route)call=message.route;else if(message.node)call=message.node}if(call){if(Array.isArray(message.args))return this.run(call,...message.args);else return this.run(call,message.args)}else return message}handleGraphNodeCall(route,args){if(!route)return args;if(args?.args){this.handleServiceMessage(args)}else if(Array.isArray(args))return this.run(route,...args);else return this.run(route,args)}};function isTypedArray(x4){return ArrayBuffer.isView(x4)&&Object.prototype.toString.call(x4)!=="[object DataView]"}var recursivelyAssign2=(target,obj)=>{for(const key in obj){if(typeof obj[key]==="object"&&!Array.isArray(obj[key])){if(typeof target[key]==="object"&&!Array.isArray(target[key]))recursivelyAssign2(target[key],obj[key]);else target[key]=recursivelyAssign2({},obj[key])}else target[key]=obj[key]}return target};function spliceTypedArray(arr,start,end){let s=arr.subarray(0,start);let e;if(end){e=arr.subarray(end+1)}let ta2;if(s.length>0||e?.length>0)ta2=new arr.constructor(s.length+e.length);if(ta2){if(s.length>0)ta2.set(s);if(e&&e.length>0)ta2.set(e,s.length)}return ta2}var unsafeRoutes={setRoute:function(fn2,fnName){if(typeof fn2==="string")fn2=parseFunctionFromText(fn2);if(typeof fn2==="function"){if(!fnName)fnName=fn2.name;if(this.__node.graph.get(fnName)){this.__node.graph.get(fnName).__setOperator(fn2)}else{let node=this.__node.graph.add({__node:{tag:fnName},__operator:fn2})}return true}return false},setNode:function(fn2,fnName){if(typeof fn2==="string")fn2=parseFunctionFromText(fn2);if(typeof fn2==="function"){if(!fnName)fnName=fn2.name;if(this.__node.graph.get(fnName)){this.__node.graph.get(fnName).__setOperator(fn2)}else this.__node.graph.add({__node:{tag:fnName},__operator:fn2});return true}return false},setMethod:function(route,fn2,fnName){if(typeof fn2==="string")fn2=parseFunctionFromText(fn2);if(typeof fn2==="function"){if(!fnName)fnName=fn2.name;if(this.__node.graph.get(route)){this.__node.graph.get(route)[fnName]=fn2}else this.__node.graph.add({__node:{tag:fnName,[fnName]:fn2}});return true}return false},assignRoute:function(route,source){if(this.__node.graph.get(route)&&typeof source==="object"){Object.assign(this.__node.graph.get(route),source)}},transferClass:(classObj,className)=>{if(typeof classObj==="object"){let str3=classObj.toString();let message={route:"receiveClass",args:[str3,className]};return message}return false},receiveClass:function(stringified,className){if(typeof stringified==="string"){if(stringified.indexOf("class")===0){let cls=(0,eval)("("+stringified+")");let name2=className;if(!name2)name2=cls.name;this.__node.graph[name2]=cls;return true}}return false},setGlobal:(key,value2)=>{globalThis[key]=value2;return true},assignGlobalObject:(target,source)=>{if(!globalThis[target])return false;if(typeof source==="object")Object.assign(globalThis[target],source);return true},setValue:function(key,value2){this.__node.graph[key]=value2;return true},assignObject:function(target,source){if(!this.__node.graph[target])return false;if(typeof source==="object")Object.assign(this.__node.graph[target],source);return true},setGlobalFunction:(fn2,fnName)=>{if(typeof fn2==="string")fn2=parseFunctionFromText(fn2);if(typeof fn2==="function"){if(!fnName)fnName=fn2.name;globalThis[fnName]=fn2;return true}return false},assignFunctionToGlobalObject:function(globalObjectName,fn2,fnName){if(!globalThis[globalObjectName])return false;if(typeof fn2==="string")fn2=parseFunctionFromText(fn2);if(typeof fn2==="function"){if(!fnName)fnName=fn2.name;this.__node.graph[globalObjectName][fnName]=fn2;return true}return false},setFunction:function(fn2,fnName){if(typeof fn2==="string")fn2=parseFunctionFromText(fn2);if(typeof fn2==="function"){if(!fnName)fnName=fn2.name;this.__node.graph[fnName]=fn2;return true}return false},assignFunctionToObject:function(objectName,fn2,fnName){if(!this.__node.graph[objectName])return false;if(typeof fn2==="string")fn2=parseFunctionFromText(fn2);if(typeof fn2==="function"){if(!fnName)fnName=fn2.name;this.__node.graph[objectName][fnName]=fn2;return true}return false}};var sjcl={cipher:{},hash:{},keyexchange:{},mode:{},misc:{},codec:{},exception:{corrupt:function(a){this.toString=function(){return"CORRUPT: "+this.message};this.message=a},invalid:function(a){this.toString=function(){return"INVALID: "+this.message};this.message=a},bug:function(a){this.toString=function(){return"BUG: "+this.message};this.message=a},notReady:function(a){this.toString=function(){return"NOT READY: "+this.message};this.message=a}}};sjcl.cipher.aes=function(a){this.s[0][0][0]||this.O();var b2,c2,d4,e,f=this.s[0][4],g3=this.s[1];b2=a.length;var h=1;if(4!==b2&&6!==b2&&8!==b2)throw new sjcl.exception.invalid("invalid aes key size");this.b=[d4=a.slice(0),e=[]];for(a=b2;a<4*b2+28;a++){c2=d4[a-1];if(0===a%b2||8===b2&&4===a%b2)c2=f[c2>>>24]<<24^f[c2>>16&255]<<16^f[c2>>8&255]<<8^f[c2&255],0===a%b2&&(c2=c2<<8^c2>>>24^h<<24,h=h<<1^283*(h>>7));d4[a]=d4[a-b2]^c2}for(b2=0;a;b2++,a--)c2=d4[b2&3?a:a-4],e[b2]=4>=a||4>b2?c2:g3[0][f[c2>>>24]]^g3[1][f[c2>>16&255]]^g3[2][f[c2>>8&255]]^g3[3][f[c2&255]]};sjcl.cipher.aes.prototype={encrypt:function(a){return t(this,a,0)},decrypt:function(a){return t(this,a,1)},s:[[[],[],[],[],[]],[[],[],[],[],[]]],O:function(){var a=this.s[0],b2=this.s[1],c2=a[4],d4=b2[4],e,f,g3,h=[],k2=[],l,n,m,p;for(e=0;256>e;e++)k2[(h[e]=e<<1^283*(e>>7))^e]=e;for(f=g3=0;!c2[f];f^=l||1,g3=k2[g3]||1)for(m=g3^g3<<1^g3<<2^g3<<3^g3<<4,m=m>>8^m&255^99,c2[f]=m,d4[m]=f,n=h[e=h[l=h[f]]],p=16843009*n^65537*e^257*l^16843008*f,n=257*h[m]^16843008*m,e=0;4>e;e++)a[e][f]=n=n<<24^n>>>8,b2[e][m]=p=p<<24^p>>>8;for(e=0;5>e;e++)a[e]=a[e].slice(0),b2[e]=b2[e].slice(0)}};function t(a,b2,c2){if(4!==b2.length)throw new sjcl.exception.invalid("invalid aes block size");var d4=a.b[c2],e=b2[0]^d4[0],f=b2[c2?3:1]^d4[1],g3=b2[2]^d4[2];b2=b2[c2?1:3]^d4[3];var h,k2,l,n=d4.length/4-2,m,p=4,r=[0,0,0,0];h=a.s[c2];a=h[0];var q2=h[1],v3=h[2],w4=h[3],x4=h[4];for(m=0;m<n;m++)h=a[e>>>24]^q2[f>>16&255]^v3[g3>>8&255]^w4[b2&255]^d4[p],k2=a[f>>>24]^q2[g3>>16&255]^v3[b2>>8&255]^w4[e&255]^d4[p+1],l=a[g3>>>24]^q2[b2>>16&255]^v3[e>>8&255]^w4[f&255]^d4[p+2],b2=a[b2>>>24]^q2[e>>16&255]^v3[f>>8&255]^w4[g3&255]^d4[p+3],p+=4,e=h,f=k2,g3=l;for(m=0;4>m;m++)r[c2?3&-m:m]=x4[e>>>24]<<24^x4[f>>16&255]<<16^x4[g3>>8&255]<<8^x4[b2&255]^d4[p++],h=e,e=f,f=g3,g3=b2,b2=h;return r}sjcl.bitArray={bitSlice:function(a,b2,c2){a=sjcl.bitArray.$(a.slice(b2/32),32-(b2&31)).slice(1);return void 0===c2?a:sjcl.bitArray.clamp(a,c2-b2)},extract:function(a,b2,c2){var d4=Math.floor(-b2-c2&31);return((b2+c2-1^b2)&-32?a[b2/32|0]<<32-d4^a[b2/32+1|0]>>>d4:a[b2/32|0]>>>d4)&(1<<c2)-1},concat:function(a,b2){if(0===a.length||0===b2.length)return a.concat(b2);var c2=a[a.length-1],d4=sjcl.bitArray.getPartial(c2);return 32===d4?a.concat(b2):sjcl.bitArray.$(b2,d4,c2|0,a.slice(0,a.length-1))},bitLength:function(a){var b2=a.length;return 0===b2?0:32*(b2-1)+sjcl.bitArray.getPartial(a[b2-1])},clamp:function(a,b2){if(32*a.length<b2)return a;a=a.slice(0,Math.ceil(b2/32));var c2=a.length;b2=b2&31;0<c2&&b2&&(a[c2-1]=sjcl.bitArray.partial(b2,a[c2-1]&2147483648>>b2-1,1));return a},partial:function(a,b2,c2){return 32===a?b2:(c2?b2|0:b2<<32-a)+1099511627776*a},getPartial:function(a){return Math.round(a/1099511627776)||32},equal:function(a,b2){if(sjcl.bitArray.bitLength(a)!==sjcl.bitArray.bitLength(b2))return false;var c2=0,d4;for(d4=0;d4<a.length;d4++)c2|=a[d4]^b2[d4];return 0===c2},$:function(a,b2,c2,d4){var e;e=0;for(void 0===d4&&(d4=[]);32<=b2;b2-=32)d4.push(c2),c2=0;if(0===b2)return d4.concat(a);for(e=0;e<a.length;e++)d4.push(c2|a[e]>>>b2),c2=a[e]<<32-b2;e=a.length?a[a.length-1]:0;a=sjcl.bitArray.getPartial(e);d4.push(sjcl.bitArray.partial(b2+a&31,32<b2+a?c2:d4.pop(),1));return d4},i:function(a,b2){return[a[0]^b2[0],a[1]^b2[1],a[2]^b2[2],a[3]^b2[3]]},byteswapM:function(a){var b2,c2;for(b2=0;b2<a.length;++b2)c2=a[b2],a[b2]=c2>>>24|c2>>>8&65280|(c2&65280)<<8|c2<<24;return a}};sjcl.codec.utf8String={fromBits:function(a){var b2="",c2=sjcl.bitArray.bitLength(a),d4,e;for(d4=0;d4<c2/8;d4++)0===(d4&3)&&(e=a[d4/4]),b2+=String.fromCharCode(e>>>8>>>8>>>8),e<<=8;return decodeURIComponent(escape(b2))},toBits:function(a){a=unescape(encodeURIComponent(a));var b2=[],c2,d4=0;for(c2=0;c2<a.length;c2++)d4=d4<<8|a.charCodeAt(c2),3===(c2&3)&&(b2.push(d4),d4=0);c2&3&&b2.push(sjcl.bitArray.partial(8*(c2&3),d4));return b2}};sjcl.codec.hex={fromBits:function(a){var b2="",c2;for(c2=0;c2<a.length;c2++)b2+=((a[c2]|0)+0xf00000000000).toString(16).substr(4);return b2.substr(0,sjcl.bitArray.bitLength(a)/4)},toBits:function(a){var b2,c2=[],d4;a=a.replace(/\\s|0x/g,"");d4=a.length;a=a+"00000000";for(b2=0;b2<a.length;b2+=8)c2.push(parseInt(a.substr(b2,8),16)^0);return sjcl.bitArray.clamp(c2,4*d4)}};sjcl.codec.base32={B:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",X:"0123456789ABCDEFGHIJKLMNOPQRSTUV",BITS:32,BASE:5,REMAINING:27,fromBits:function(a,b2,c2){var d4=sjcl.codec.base32.BASE,e=sjcl.codec.base32.REMAINING,f="",g3=0,h=sjcl.codec.base32.B,k2=0,l=sjcl.bitArray.bitLength(a);c2&&(h=sjcl.codec.base32.X);for(c2=0;f.length*d4<l;)f+=h.charAt((k2^a[c2]>>>g3)>>>e),g3<d4?(k2=a[c2]<<d4-g3,g3+=e,c2++):(k2<<=d4,g3-=d4);for(;f.length&7&&!b2;)f+="=";return f},toBits:function(a,b2){a=a.replace(/\\s|=/g,"").toUpperCase();var c2=sjcl.codec.base32.BITS,d4=sjcl.codec.base32.BASE,e=sjcl.codec.base32.REMAINING,f=[],g3,h=0,k2=sjcl.codec.base32.B,l=0,n,m="base32";b2&&(k2=sjcl.codec.base32.X,m="base32hex");for(g3=0;g3<a.length;g3++){n=k2.indexOf(a.charAt(g3));if(0>n){if(!b2)try{return sjcl.codec.base32hex.toBits(a)}catch(p){}throw new sjcl.exception.invalid("this isn\'t "+m+"!")}h>e?(h-=e,f.push(l^n>>>h),l=n<<c2-h):(h+=d4,l^=n<<c2-h)}h&56&&f.push(sjcl.bitArray.partial(h&56,l,1));return f}};sjcl.codec.base32hex={fromBits:function(a,b2){return sjcl.codec.base32.fromBits(a,b2,1)},toBits:function(a){return sjcl.codec.base32.toBits(a,1)}};sjcl.codec.base64={B:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",fromBits:function(a,b2,c2){var d4="",e=0,f=sjcl.codec.base64.B,g3=0,h=sjcl.bitArray.bitLength(a);c2&&(f=f.substr(0,62)+"-_");for(c2=0;6*d4.length<h;)d4+=f.charAt((g3^a[c2]>>>e)>>>26),6>e?(g3=a[c2]<<6-e,e+=26,c2++):(g3<<=6,e-=6);for(;d4.length&3&&!b2;)d4+="=";return d4},toBits:function(a,b2){a=a.replace(/\\s|=/g,"");var c2=[],d4,e=0,f=sjcl.codec.base64.B,g3=0,h;b2&&(f=f.substr(0,62)+"-_");for(d4=0;d4<a.length;d4++){h=f.indexOf(a.charAt(d4));if(0>h)throw new sjcl.exception.invalid("this isn\'t base64!");26<e?(e-=26,c2.push(g3^h>>>e),g3=h<<32-e):(e+=6,g3^=h<<32-e)}e&56&&c2.push(sjcl.bitArray.partial(e&56,g3,1));return c2}};sjcl.codec.base64url={fromBits:function(a){return sjcl.codec.base64.fromBits(a,1,1)},toBits:function(a){return sjcl.codec.base64.toBits(a,1)}};sjcl.hash.sha256=function(a){this.b[0]||this.O();a?(this.F=a.F.slice(0),this.A=a.A.slice(0),this.l=a.l):this.reset()};sjcl.hash.sha256.hash=function(a){return new sjcl.hash.sha256().update(a).finalize()};sjcl.hash.sha256.prototype={blockSize:512,reset:function(){this.F=this.Y.slice(0);this.A=[];this.l=0;return this},update:function(a){"string"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));var b2,c2=this.A=sjcl.bitArray.concat(this.A,a);b2=this.l;a=this.l=b2+sjcl.bitArray.bitLength(a);if(9007199254740991<a)throw new sjcl.exception.invalid("Cannot hash more than 2^53 - 1 bits");if("undefined"!==typeof Uint32Array){var d4=new Uint32Array(c2),e=0;for(b2=512+b2-(512+b2&511);b2<=a;b2+=512)u(this,d4.subarray(16*e,16*(e+1))),e+=1;c2.splice(0,16*e)}else for(b2=512+b2-(512+b2&511);b2<=a;b2+=512)u(this,c2.splice(0,16));return this},finalize:function(){var a,b2=this.A,c2=this.F,b2=sjcl.bitArray.concat(b2,[sjcl.bitArray.partial(1,1)]);for(a=b2.length+2;a&15;a++)b2.push(0);b2.push(Math.floor(this.l/4294967296));for(b2.push(this.l|0);b2.length;)u(this,b2.splice(0,16));this.reset();return c2},Y:[],b:[],O:function(){function a(a2){return 4294967296*(a2-Math.floor(a2))|0}for(var b2=0,c2=2,d4,e;64>b2;c2++){e=true;for(d4=2;d4*d4<=c2;d4++)if(0===c2%d4){e=false;break}e&&(8>b2&&(this.Y[b2]=a(Math.pow(c2,.5))),this.b[b2]=a(Math.pow(c2,1/3)),b2++)}}};function u(a,b2){var c2,d4,e,f=a.F,g3=a.b,h=f[0],k2=f[1],l=f[2],n=f[3],m=f[4],p=f[5],r=f[6],q2=f[7];for(c2=0;64>c2;c2++)16>c2?d4=b2[c2]:(d4=b2[c2+1&15],e=b2[c2+14&15],d4=b2[c2&15]=(d4>>>7^d4>>>18^d4>>>3^d4<<25^d4<<14)+(e>>>17^e>>>19^e>>>10^e<<15^e<<13)+b2[c2&15]+b2[c2+9&15]|0),d4=d4+q2+(m>>>6^m>>>11^m>>>25^m<<26^m<<21^m<<7)+(r^m&(p^r))+g3[c2],q2=r,r=p,p=m,m=n+d4|0,n=l,l=k2,k2=h,h=d4+(k2&l^n&(k2^l))+(k2>>>2^k2>>>13^k2>>>22^k2<<30^k2<<19^k2<<10)|0;f[0]=f[0]+h|0;f[1]=f[1]+k2|0;f[2]=f[2]+l|0;f[3]=f[3]+n|0;f[4]=f[4]+m|0;f[5]=f[5]+p|0;f[6]=f[6]+r|0;f[7]=f[7]+q2|0}sjcl.mode.ccm={name:"ccm",G:[],listenProgress:function(a){sjcl.mode.ccm.G.push(a)},unListenProgress:function(a){a=sjcl.mode.ccm.G.indexOf(a);-1<a&&sjcl.mode.ccm.G.splice(a,1)},fa:function(a){var b2=sjcl.mode.ccm.G.slice(),c2;for(c2=0;c2<b2.length;c2+=1)b2[c2](a)},encrypt:function(a,b2,c2,d4,e){var f,g3=b2.slice(0),h=sjcl.bitArray,k2=h.bitLength(c2)/8,l=h.bitLength(g3)/8;e=e||64;d4=d4||[];if(7>k2)throw new sjcl.exception.invalid("ccm: iv must be at least 7 bytes");for(f=2;4>f&&l>>>8*f;f++);f<15-k2&&(f=15-k2);c2=h.clamp(c2,8*(15-f));b2=sjcl.mode.ccm.V(a,b2,c2,d4,e,f);g3=sjcl.mode.ccm.C(a,g3,c2,b2,e,f);return h.concat(g3.data,g3.tag)},decrypt:function(a,b2,c2,d4,e){e=e||64;d4=d4||[];var f=sjcl.bitArray,g3=f.bitLength(c2)/8,h=f.bitLength(b2),k2=f.clamp(b2,h-e),l=f.bitSlice(b2,h-e),h=(h-e)/8;if(7>g3)throw new sjcl.exception.invalid("ccm: iv must be at least 7 bytes");for(b2=2;4>b2&&h>>>8*b2;b2++);b2<15-g3&&(b2=15-g3);c2=f.clamp(c2,8*(15-b2));k2=sjcl.mode.ccm.C(a,k2,c2,l,e,b2);a=sjcl.mode.ccm.V(a,k2.data,c2,d4,e,b2);if(!f.equal(k2.tag,a))throw new sjcl.exception.corrupt("ccm: tag doesn\'t match");return k2.data},na:function(a,b2,c2,d4,e,f){var g3=[],h=sjcl.bitArray,k2=h.i;d4=[h.partial(8,(b2.length?64:0)|d4-2<<2|f-1)];d4=h.concat(d4,c2);d4[3]|=e;d4=a.encrypt(d4);if(b2.length)for(c2=h.bitLength(b2)/8,65279>=c2?g3=[h.partial(16,c2)]:4294967295>=c2&&(g3=h.concat([h.partial(16,65534)],[c2])),g3=h.concat(g3,b2),b2=0;b2<g3.length;b2+=4)d4=a.encrypt(k2(d4,g3.slice(b2,b2+4).concat([0,0,0])));return d4},V:function(a,b2,c2,d4,e,f){var g3=sjcl.bitArray,h=g3.i;e/=8;if(e%2||4>e||16<e)throw new sjcl.exception.invalid("ccm: invalid tag length");if(4294967295<d4.length||4294967295<b2.length)throw new sjcl.exception.bug("ccm: can\'t deal with 4GiB or more data");c2=sjcl.mode.ccm.na(a,d4,c2,e,g3.bitLength(b2)/8,f);for(d4=0;d4<b2.length;d4+=4)c2=a.encrypt(h(c2,b2.slice(d4,d4+4).concat([0,0,0])));return g3.clamp(c2,8*e)},C:function(a,b2,c2,d4,e,f){var g3,h=sjcl.bitArray;g3=h.i;var k2=b2.length,l=h.bitLength(b2),n=k2/50,m=n;c2=h.concat([h.partial(8,f-1)],c2).concat([0,0,0]).slice(0,4);d4=h.bitSlice(g3(d4,a.encrypt(c2)),0,e);if(!k2)return{tag:d4,data:[]};for(g3=0;g3<k2;g3+=4)g3>n&&(sjcl.mode.ccm.fa(g3/k2),n+=m),c2[3]++,e=a.encrypt(c2),b2[g3]^=e[0],b2[g3+1]^=e[1],b2[g3+2]^=e[2],b2[g3+3]^=e[3];return{tag:d4,data:h.clamp(b2,l)}}};sjcl.mode.ocb2={name:"ocb2",encrypt:function(a,b2,c2,d4,e,f){if(128!==sjcl.bitArray.bitLength(c2))throw new sjcl.exception.invalid("ocb iv must be 128 bits");var g3,h=sjcl.mode.ocb2.S,k2=sjcl.bitArray,l=k2.i,n=[0,0,0,0];c2=h(a.encrypt(c2));var m,p=[];d4=d4||[];e=e||64;for(g3=0;g3+4<b2.length;g3+=4)m=b2.slice(g3,g3+4),n=l(n,m),p=p.concat(l(c2,a.encrypt(l(c2,m)))),c2=h(c2);m=b2.slice(g3);b2=k2.bitLength(m);g3=a.encrypt(l(c2,[0,0,0,b2]));m=k2.clamp(l(m.concat([0,0,0]),g3),b2);n=l(n,l(m.concat([0,0,0]),g3));n=a.encrypt(l(n,l(c2,h(c2))));d4.length&&(n=l(n,f?d4:sjcl.mode.ocb2.pmac(a,d4)));return p.concat(k2.concat(m,k2.clamp(n,e)))},decrypt:function(a,b2,c2,d4,e,f){if(128!==sjcl.bitArray.bitLength(c2))throw new sjcl.exception.invalid("ocb iv must be 128 bits");e=e||64;var g3=sjcl.mode.ocb2.S,h=sjcl.bitArray,k2=h.i,l=[0,0,0,0],n=g3(a.encrypt(c2)),m,p,r=sjcl.bitArray.bitLength(b2)-e,q2=[];d4=d4||[];for(c2=0;c2+4<r/32;c2+=4)m=k2(n,a.decrypt(k2(n,b2.slice(c2,c2+4)))),l=k2(l,m),q2=q2.concat(m),n=g3(n);p=r-32*c2;m=a.encrypt(k2(n,[0,0,0,p]));m=k2(m,h.clamp(b2.slice(c2),p).concat([0,0,0]));l=k2(l,m);l=a.encrypt(k2(l,k2(n,g3(n))));d4.length&&(l=k2(l,f?d4:sjcl.mode.ocb2.pmac(a,d4)));if(!h.equal(h.clamp(l,e),h.bitSlice(b2,r)))throw new sjcl.exception.corrupt("ocb: tag doesn\'t match");return q2.concat(h.clamp(m,p))},pmac:function(a,b2){var c2,d4=sjcl.mode.ocb2.S,e=sjcl.bitArray,f=e.i,g3=[0,0,0,0],h=a.encrypt([0,0,0,0]),h=f(h,d4(d4(h)));for(c2=0;c2+4<b2.length;c2+=4)h=d4(h),g3=f(g3,a.encrypt(f(h,b2.slice(c2,c2+4))));c2=b2.slice(c2);128>e.bitLength(c2)&&(h=f(h,d4(h)),c2=e.concat(c2,[-2147483648,0,0,0]));g3=f(g3,c2);return a.encrypt(f(d4(f(h,d4(h))),g3))},S:function(a){return[a[0]<<1^a[1]>>>31,a[1]<<1^a[2]>>>31,a[2]<<1^a[3]>>>31,a[3]<<1^135*(a[0]>>>31)]}};sjcl.mode.gcm={name:"gcm",encrypt:function(a,b2,c2,d4,e){var f=b2.slice(0);b2=sjcl.bitArray;d4=d4||[];a=sjcl.mode.gcm.C(true,a,f,d4,c2,e||128);return b2.concat(a.data,a.tag)},decrypt:function(a,b2,c2,d4,e){var f=b2.slice(0),g3=sjcl.bitArray,h=g3.bitLength(f);e=e||128;d4=d4||[];e<=h?(b2=g3.bitSlice(f,h-e),f=g3.bitSlice(f,0,h-e)):(b2=f,f=[]);a=sjcl.mode.gcm.C(false,a,f,d4,c2,e);if(!g3.equal(a.tag,b2))throw new sjcl.exception.corrupt("gcm: tag doesn\'t match");return a.data},ka:function(a,b2){var c2,d4,e,f,g3,h=sjcl.bitArray.i;e=[0,0,0,0];f=b2.slice(0);for(c2=0;128>c2;c2++){(d4=0!==(a[Math.floor(c2/32)]&1<<31-c2%32))&&(e=h(e,f));g3=0!==(f[3]&1);for(d4=3;0<d4;d4--)f[d4]=f[d4]>>>1|(f[d4-1]&1)<<31;f[0]>>>=1;g3&&(f[0]^=-520093696)}return e},j:function(a,b2,c2){var d4,e=c2.length;b2=b2.slice(0);for(d4=0;d4<e;d4+=4)b2[0]^=4294967295&c2[d4],b2[1]^=4294967295&c2[d4+1],b2[2]^=4294967295&c2[d4+2],b2[3]^=4294967295&c2[d4+3],b2=sjcl.mode.gcm.ka(b2,a);return b2},C:function(a,b2,c2,d4,e,f){var g3,h,k2,l,n,m,p,r,q2=sjcl.bitArray;m=c2.length;p=q2.bitLength(c2);r=q2.bitLength(d4);h=q2.bitLength(e);g3=b2.encrypt([0,0,0,0]);96===h?(e=e.slice(0),e=q2.concat(e,[1])):(e=sjcl.mode.gcm.j(g3,[0,0,0,0],e),e=sjcl.mode.gcm.j(g3,e,[0,0,Math.floor(h/4294967296),h&4294967295]));h=sjcl.mode.gcm.j(g3,[0,0,0,0],d4);n=e.slice(0);d4=h.slice(0);a||(d4=sjcl.mode.gcm.j(g3,h,c2));for(l=0;l<m;l+=4)n[3]++,k2=b2.encrypt(n),c2[l]^=k2[0],c2[l+1]^=k2[1],c2[l+2]^=k2[2],c2[l+3]^=k2[3];c2=q2.clamp(c2,p);a&&(d4=sjcl.mode.gcm.j(g3,h,c2));a=[Math.floor(r/4294967296),r&4294967295,Math.floor(p/4294967296),p&4294967295];d4=sjcl.mode.gcm.j(g3,d4,a);k2=b2.encrypt(e);d4[0]^=k2[0];d4[1]^=k2[1];d4[2]^=k2[2];d4[3]^=k2[3];return{tag:q2.bitSlice(d4,0,f),data:c2}}};sjcl.misc.hmac=function(a,b2){this.W=b2=b2||sjcl.hash.sha256;var c2=[[],[]],d4,e=b2.prototype.blockSize/32;this.w=[new b2,new b2];a.length>e&&(a=b2.hash(a));for(d4=0;d4<e;d4++)c2[0][d4]=a[d4]^909522486,c2[1][d4]=a[d4]^1549556828;this.w[0].update(c2[0]);this.w[1].update(c2[1]);this.R=new b2(this.w[0])};sjcl.misc.hmac.prototype.encrypt=sjcl.misc.hmac.prototype.mac=function(a){if(this.aa)throw new sjcl.exception.invalid("encrypt on already updated hmac called!");this.update(a);return this.digest(a)};sjcl.misc.hmac.prototype.reset=function(){this.R=new this.W(this.w[0]);this.aa=false};sjcl.misc.hmac.prototype.update=function(a){this.aa=true;this.R.update(a)};sjcl.misc.hmac.prototype.digest=function(){var a=this.R.finalize(),a=new this.W(this.w[1]).update(a).finalize();this.reset();return a};sjcl.misc.pbkdf2=function(a,b2,c2,d4,e){c2=c2||1e4;if(0>d4||0>c2)throw new sjcl.exception.invalid("invalid params to pbkdf2");"string"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));"string"===typeof b2&&(b2=sjcl.codec.utf8String.toBits(b2));e=e||sjcl.misc.hmac;a=new e(a);var f,g3,h,k2,l=[],n=sjcl.bitArray;for(k2=1;32*l.length<(d4||1);k2++){e=f=a.encrypt(n.concat(b2,[k2]));for(g3=1;g3<c2;g3++)for(f=a.encrypt(f),h=0;h<f.length;h++)e[h]^=f[h];l=l.concat(e)}d4&&(l=n.clamp(l,d4));return l};sjcl.prng=function(a){this.c=[new sjcl.hash.sha256];this.m=[0];this.P=0;this.H={};this.N=0;this.U={};this.Z=this.f=this.o=this.ha=0;this.b=[0,0,0,0,0,0,0,0];this.h=[0,0,0,0];this.L=void 0;this.M=a;this.D=false;this.K={progress:{},seeded:{}};this.u=this.ga=0;this.I=1;this.J=2;this.ca=65536;this.T=[0,48,64,96,128,192,256,384,512,768,1024];this.da=3e4;this.ba=80};sjcl.prng.prototype={randomWords:function(a,b2){var c2=[],d4;d4=this.isReady(b2);var e;if(d4===this.u)throw new sjcl.exception.notReady("generator isn\'t seeded");if(d4&this.J){d4=!(d4&this.I);e=[];var f=0,g3;this.Z=e[0]=new Date().valueOf()+this.da;for(g3=0;16>g3;g3++)e.push(4294967296*Math.random()|0);for(g3=0;g3<this.c.length&&(e=e.concat(this.c[g3].finalize()),f+=this.m[g3],this.m[g3]=0,d4||!(this.P&1<<g3));g3++);this.P>=1<<this.c.length&&(this.c.push(new sjcl.hash.sha256),this.m.push(0));this.f-=f;f>this.o&&(this.o=f);this.P++;this.b=sjcl.hash.sha256.hash(this.b.concat(e));this.L=new sjcl.cipher.aes(this.b);for(d4=0;4>d4&&(this.h[d4]=this.h[d4]+1|0,!this.h[d4]);d4++);}for(d4=0;d4<a;d4+=4)0===(d4+1)%this.ca&&y(this),e=z(this),c2.push(e[0],e[1],e[2],e[3]);y(this);return c2.slice(0,a)},setDefaultParanoia:function(a,b2){if(0===a&&"Setting paranoia=0 will ruin your security; use it only for testing"!==b2)throw new sjcl.exception.invalid("Setting paranoia=0 will ruin your security; use it only for testing");this.M=a},addEntropy:function(a,b2,c2){c2=c2||"user";var d4,e,f=new Date().valueOf(),g3=this.H[c2],h=this.isReady(),k2=0;d4=this.U[c2];void 0===d4&&(d4=this.U[c2]=this.ha++);void 0===g3&&(g3=this.H[c2]=0);this.H[c2]=(this.H[c2]+1)%this.c.length;switch(typeof a){case"number":void 0===b2&&(b2=1);this.c[g3].update([d4,this.N++,1,b2,f,1,a|0]);break;case"object":c2=Object.prototype.toString.call(a);if("[object Uint32Array]"===c2){e=[];for(c2=0;c2<a.length;c2++)e.push(a[c2]);a=e}else for("[object Array]"!==c2&&(k2=1),c2=0;c2<a.length&&!k2;c2++)"number"!==typeof a[c2]&&(k2=1);if(!k2){if(void 0===b2)for(c2=b2=0;c2<a.length;c2++)for(e=a[c2];0<e;)b2++,e=e>>>1;this.c[g3].update([d4,this.N++,2,b2,f,a.length].concat(a))}break;case"string":void 0===b2&&(b2=a.length);this.c[g3].update([d4,this.N++,3,b2,f,a.length]);this.c[g3].update(a);break;default:k2=1}if(k2)throw new sjcl.exception.bug("random: addEntropy only supports number, array of numbers or string");this.m[g3]+=b2;this.f+=b2;h===this.u&&(this.isReady()!==this.u&&A("seeded",Math.max(this.o,this.f)),A("progress",this.getProgress()))},isReady:function(a){a=this.T[void 0!==a?a:this.M];return this.o&&this.o>=a?this.m[0]>this.ba&&new Date().valueOf()>this.Z?this.J|this.I:this.I:this.f>=a?this.J|this.u:this.u},getProgress:function(a){a=this.T[a?a:this.M];return this.o>=a?1:this.f>a?1:this.f/a},startCollectors:function(){if(!this.D){this.a={loadTimeCollector:B(this,this.ma),mouseCollector:B(this,this.oa),keyboardCollector:B(this,this.la),accelerometerCollector:B(this,this.ea),touchCollector:B(this,this.qa)};if(window.addEventListener)window.addEventListener("load",this.a.loadTimeCollector,false),window.addEventListener("mousemove",this.a.mouseCollector,false),window.addEventListener("keypress",this.a.keyboardCollector,false),window.addEventListener("devicemotion",this.a.accelerometerCollector,false),window.addEventListener("touchmove",this.a.touchCollector,false);else if(document.attachEvent)document.attachEvent("onload",this.a.loadTimeCollector),document.attachEvent("onmousemove",this.a.mouseCollector),document.attachEvent("keypress",this.a.keyboardCollector);else throw new sjcl.exception.bug("can\'t attach event");this.D=true}},stopCollectors:function(){this.D&&(window.removeEventListener?(window.removeEventListener("load",this.a.loadTimeCollector,false),window.removeEventListener("mousemove",this.a.mouseCollector,false),window.removeEventListener("keypress",this.a.keyboardCollector,false),window.removeEventListener("devicemotion",this.a.accelerometerCollector,false),window.removeEventListener("touchmove",this.a.touchCollector,false)):document.detachEvent&&(document.detachEvent("onload",this.a.loadTimeCollector),document.detachEvent("onmousemove",this.a.mouseCollector),document.detachEvent("keypress",this.a.keyboardCollector)),this.D=false)},addEventListener:function(a,b2){this.K[a][this.ga++]=b2},removeEventListener:function(a,b2){var c2,d4,e=this.K[a],f=[];for(d4 in e)e.hasOwnProperty(d4)&&e[d4]===b2&&f.push(d4);for(c2=0;c2<f.length;c2++)d4=f[c2],delete e[d4]},la:function(){C(this,1)},oa:function(a){var b2,c2;try{b2=a.x||a.clientX||a.offsetX||0,c2=a.y||a.clientY||a.offsetY||0}catch(d4){c2=b2=0}0!=b2&&0!=c2&&this.addEntropy([b2,c2],2,"mouse");C(this,0)},qa:function(a){a=a.touches[0]||a.changedTouches[0];this.addEntropy([a.pageX||a.clientX,a.pageY||a.clientY],1,"touch");C(this,0)},ma:function(){C(this,2)},ea:function(a){a=a.accelerationIncludingGravity.x||a.accelerationIncludingGravity.y||a.accelerationIncludingGravity.z;if(window.orientation){var b2=window.orientation;"number"===typeof b2&&this.addEntropy(b2,1,"accelerometer")}a&&this.addEntropy(a,2,"accelerometer");C(this,0)}};function A(a,b2){var c2,d4=sjcl.random.K[a],e=[];for(c2 in d4)d4.hasOwnProperty(c2)&&e.push(d4[c2]);for(c2=0;c2<e.length;c2++)e[c2](b2)}function C(a,b2){"undefined"!==typeof window&&window.performance&&"function"===typeof window.performance.now?a.addEntropy(window.performance.now(),b2,"loadtime"):a.addEntropy(new Date().valueOf(),b2,"loadtime")}function y(a){a.b=z(a).concat(z(a));a.L=new sjcl.cipher.aes(a.b)}function z(a){for(var b2=0;4>b2&&(a.h[b2]=a.h[b2]+1|0,!a.h[b2]);b2++);return a.L.encrypt(a.h)}function B(a,b2){return function(){b2.apply(a,arguments)}}sjcl.random=new sjcl.prng(6);a:try{if(G="undefined"!==typeof module&&module.exports){try{H=__require2("crypto")}catch(a){H=null}G=E=H}if(G&&E.randomBytes)D=E.randomBytes(128),D=new Uint32Array(new Uint8Array(D).buffer),sjcl.random.addEntropy(D,1024,"crypto[\'randomBytes\']");else if("undefined"!==typeof window&&"undefined"!==typeof Uint32Array){F=new Uint32Array(32);if(window.crypto&&window.crypto.getRandomValues)window.crypto.getRandomValues(F);else if(window.msCrypto&&window.msCrypto.getRandomValues)window.msCrypto.getRandomValues(F);else break a;sjcl.random.addEntropy(F,1024,"crypto[\'getRandomValues\']")}}catch(a){"undefined"!==typeof window&&window.console&&(console.log("There was an error collecting entropy from the browser:"),console.log(a))}var D;var E;var F;var G;var H;sjcl.json={defaults:{v:1,iter:1e4,ks:128,ts:64,mode:"ccm",adata:"",cipher:"aes"},ja:function(a,b2,c2,d4){c2=c2||{};d4=d4||{};var e=sjcl.json,f=e.g({iv:sjcl.random.randomWords(4,0)},e.defaults),g3;e.g(f,c2);c2=f.adata;"string"===typeof f.salt&&(f.salt=sjcl.codec.base64.toBits(f.salt));"string"===typeof f.iv&&(f.iv=sjcl.codec.base64.toBits(f.iv));if(!sjcl.mode[f.mode]||!sjcl.cipher[f.cipher]||"string"===typeof a&&100>=f.iter||64!==f.ts&&96!==f.ts&&128!==f.ts||128!==f.ks&&192!==f.ks&&256!==f.ks||2>f.iv.length||4<f.iv.length)throw new sjcl.exception.invalid("json encrypt: invalid parameters");"string"===typeof a?(g3=sjcl.misc.cachedPbkdf2(a,f),a=g3.key.slice(0,f.ks/32),f.salt=g3.salt):sjcl.ecc&&a instanceof sjcl.ecc.elGamal.publicKey&&(g3=a.kem(),f.kemtag=g3.tag,a=g3.key.slice(0,f.ks/32));"string"===typeof b2&&(b2=sjcl.codec.utf8String.toBits(b2));"string"===typeof c2&&(f.adata=c2=sjcl.codec.utf8String.toBits(c2));g3=new sjcl.cipher[f.cipher](a);e.g(d4,f);d4.key=a;f.ct="ccm"===f.mode&&sjcl.arrayBuffer&&sjcl.arrayBuffer.ccm&&b2 instanceof ArrayBuffer?sjcl.arrayBuffer.ccm.encrypt(g3,b2,f.iv,c2,f.ts):sjcl.mode[f.mode].encrypt(g3,b2,f.iv,c2,f.ts);return f},encrypt:function(a,b2,c2,d4){var e=sjcl.json,f=e.ja.apply(e,arguments);return e.encode(f)},ia:function(a,b2,c2,d4){c2=c2||{};d4=d4||{};var e=sjcl.json;b2=e.g(e.g(e.g({},e.defaults),b2),c2,true);var f,g3;f=b2.adata;"string"===typeof b2.salt&&(b2.salt=sjcl.codec.base64.toBits(b2.salt));"string"===typeof b2.iv&&(b2.iv=sjcl.codec.base64.toBits(b2.iv));if(!sjcl.mode[b2.mode]||!sjcl.cipher[b2.cipher]||"string"===typeof a&&100>=b2.iter||64!==b2.ts&&96!==b2.ts&&128!==b2.ts||128!==b2.ks&&192!==b2.ks&&256!==b2.ks||!b2.iv||2>b2.iv.length||4<b2.iv.length)throw new sjcl.exception.invalid("json decrypt: invalid parameters");"string"===typeof a?(g3=sjcl.misc.cachedPbkdf2(a,b2),a=g3.key.slice(0,b2.ks/32),b2.salt=g3.salt):sjcl.ecc&&a instanceof sjcl.ecc.elGamal.secretKey&&(a=a.unkem(sjcl.codec.base64.toBits(b2.kemtag)).slice(0,b2.ks/32));"string"===typeof f&&(f=sjcl.codec.utf8String.toBits(f));g3=new sjcl.cipher[b2.cipher](a);f="ccm"===b2.mode&&sjcl.arrayBuffer&&sjcl.arrayBuffer.ccm&&b2.ct instanceof ArrayBuffer?sjcl.arrayBuffer.ccm.decrypt(g3,b2.ct,b2.iv,b2.tag,f,b2.ts):sjcl.mode[b2.mode].decrypt(g3,b2.ct,b2.iv,f,b2.ts);e.g(d4,b2);d4.key=a;return 1===c2.raw?f:sjcl.codec.utf8String.fromBits(f)},decrypt:function(a,b2,c2,d4){var e=sjcl.json;return e.ia(a,e.decode(b2),c2,d4)},encode:function(a){var b2,c2="{",d4="";for(b2 in a)if(a.hasOwnProperty(b2)){if(!b2.match(/^[a-z0-9]+$/i))throw new sjcl.exception.invalid("json encode: invalid property name");c2+=d4+\'"\'+b2+\'":\';d4=",";switch(typeof a[b2]){case"number":case"boolean":c2+=a[b2];break;case"string":c2+=\'"\'+escape(a[b2])+\'"\';break;case"object":c2+=\'"\'+sjcl.codec.base64.fromBits(a[b2],0)+\'"\';break;default:throw new sjcl.exception.bug("json encode: unsupported type")}}return c2+"}"},decode:function(a){a=a.replace(/\\s/g,"");if(!a.match(/^\\{.*\\}$/))throw new sjcl.exception.invalid("json decode: this isn\'t json!");a=a.replace(/^\\{|\\}$/g,"").split(/,/);var b2={},c2,d4;for(c2=0;c2<a.length;c2++){if(!(d4=a[c2].match(/^\\s*(?:(["\']?)([a-z][a-z0-9]*)\\1)\\s*:\\s*(?:(-?\\d+)|"([a-z0-9+\\/%*_.@=\\-]*)"|(true|false))$/i)))throw new sjcl.exception.invalid("json decode: this isn\'t json!");null!=d4[3]?b2[d4[2]]=parseInt(d4[3],10):null!=d4[4]?b2[d4[2]]=d4[2].match(/^(ct|adata|salt|iv)$/)?sjcl.codec.base64.toBits(d4[4]):unescape(d4[4]):null!=d4[5]&&(b2[d4[2]]="true"===d4[5])}return b2},g:function(a,b2,c2){void 0===a&&(a={});if(void 0===b2)return a;for(var d4 in b2)if(b2.hasOwnProperty(d4)){if(c2&&void 0!==a[d4]&&a[d4]!==b2[d4])throw new sjcl.exception.invalid("required parameter overridden");a[d4]=b2[d4]}return a},sa:function(a,b2){var c2={},d4;for(d4 in a)a.hasOwnProperty(d4)&&a[d4]!==b2[d4]&&(c2[d4]=a[d4]);return c2},ra:function(a,b2){var c2={},d4;for(d4=0;d4<b2.length;d4++)void 0!==a[b2[d4]]&&(c2[b2[d4]]=a[b2[d4]]);return c2}};sjcl.encrypt=sjcl.json.encrypt;sjcl.decrypt=sjcl.json.decrypt;sjcl.misc.pa={};sjcl.misc.cachedPbkdf2=function(a,b2){var c2=sjcl.misc.pa,d4;b2=b2||{};d4=b2.iter||1e3;c2=c2[a]=c2[a]||{};d4=c2[d4]=c2[d4]||{firstSalt:b2.salt&&b2.salt.length?b2.salt.slice(0):sjcl.random.randomWords(2,0)};c2=void 0===b2.salt?d4.firstSalt:b2.salt;d4[c2]=d4[c2]||sjcl.misc.pbkdf2(a,c2,b2.iter);return{key:d4[c2].slice(0),salt:c2.slice(0)}};var _HTTPfrontend=class extends Service{constructor(options,path,fetched){super(options);this.name="http";this.fetchProxied=false;this.listening={};this.GET=(url2="http://localhost:8080/ping",type="",mimeType)=>{if(type==="json")mimeType="application/json";return new Promise((resolve,reject)=>{let xhr=_HTTPfrontend.request({method:"GET",url:url2,responseType:type,mimeType,onload:ev2=>{let data;if(xhr.responseType===""||xhr.responseType==="text")data=xhr.responseText;else data=xhr.response;if(url2 instanceof URL)url2=url2.toString();this.setState({[url2]:data});resolve(data)},onabort:er2=>{reject(er2)}})}).catch(console.error)};this.POST=(message,url2="http://localhost:8080/echo",type="",mimeType)=>{if(typeof message==="object"&&(type==="json"||type==="text"||!type)){message=JSON.stringify(message)}if(type==="json")mimeType="application/json";return new Promise((resolve,reject)=>{let xhr=_HTTPfrontend.request({method:"POST",url:url2,data:message,responseType:type,mimeType,onload:ev2=>{let data;if(xhr.responseType===""||xhr.responseType==="text")data=xhr.responseText;else data=xhr.response;if(url2 instanceof URL)url2=url2.toString();this.setState({[url2]:data});resolve(data)},onabort:er2=>{reject(er2)}})}).catch(console.error)};this.transmit=(message,url2)=>{let obj=message;if(typeof obj==="object"){message=JSON.stringify(obj)}if(obj?.method?.toLowerCase()=="get"||message?.toLowerCase()==="get")return this.GET(url2);return this.POST(message,url2)};this.transponder=(url2,message,type="",mimeType)=>{if(typeof message==="object")message=JSON.stringify(message);let method="GET";if(message){method="POST"}if(type==="json")mimeType="application/json";else return new Promise((resolve,reject)=>{let xhr=_HTTPfrontend.request({method,url:url2,data:message,responseType:type,onload:ev2=>{let body=xhr.response;if(typeof body==="string"){let substr=body.substring(0,8);if(substr.includes("{")||substr.includes("[")){if(substr.includes("\\\\"))body=body.replace(/\\\\/g,"");if(body[0]===\'"\'){body=body.substring(1,body.length-1)};body=JSON.parse(body)}}if(typeof body?.method==="string"){return resolve(this.handleMethod(body.route,body.method,body.args))}else if(typeof body?.route==="string"){return resolve(this.handleServiceMessage(body))}else if(typeof body?.node==="string"||body.node instanceof GraphNode){return resolve(this.handleGraphNodeCall(body.node,body.args))}else return resolve(body)},onabort:er2=>{reject(er2)}})}).catch(console.error)};this.listen=(path2="0",fetched2=async(clone,args,response)=>{const result=await clone.text();const returned=this.receive(result);this.setState({[response.url]:returned})})=>{this.listening[path2]={};let listenerId=`${path2}${Math.floor(Math.random()*1e15)}`;this.listening[path2][listenerId]=fetched2;if(!this.fetchProxied){globalThis.fetch=new Proxy(globalThis.fetch,{apply(fetch,that,args){const result=fetch.apply(that,args);result.then(response=>{if(!response.ok)return;if(this.listening["0"]){for(const key in this.listeners){const clone=response.clone();this.listening["0"][key](clone,args,response)}}else{for(const key in this.listening){if(response.url.includes(key)){for(const key2 in this.listening[path2]){const clone=response.clone();this.listening[path2][key2](clone,args,response)}break}}}}).catch(er2=>{console.error(er2)});return result}});this.fetchProxied=true}return listenerId};this.stopListening=(path2,listener)=>{if(!path2&&path2!==0){for(const key in this.listening)delete this.listening[key]}else{if(!listener)delete this.listening[path2];else delete this.listening[listener]}};this.load(this);this.listen(path,fetched)}};var HTTPfrontend=_HTTPfrontend;HTTPfrontend.request=options=>{const xhr=new XMLHttpRequest;if(options.responseType)xhr.responseType=options.responseType;else options.responseType="json";if(options.mimeType){xhr.overrideMimeType(options.mimeType)}if(options.onload)xhr.addEventListener("load",options.onload,false);if(options.onprogress)xhr.addEventListener("progress",options.onprogress,false);if(options.onabort)xhr.addEventListener("abort",options.onabort,false);if(options.onloadend)xhr.addEventListener("loadend",options.onloadend,false);if(options.onerror)xhr.addEventListener("error",options.onerror,false);xhr.open(options.method,options.url,true,options.user,options.pass);if(!options.onerror)xhr.onerror=function(){xhr.abort()};xhr.send(options.data);return xhr};var import_web_worker=__toESM(require_browser());var WorkerService=class extends Service{constructor(options){super();this.name="worker";this.workers={};this.threadRot=0;this.loadWorkerRoute=(rt2,routeKey)=>{if(rt2.workerUrl)rt2.url=rt2.workerUrl;if(rt2.workerId)rt2.__node.tag=rt2.workerId;if(!rt2.__node.tag)rt2.__node.tag=routeKey;rt2._id=rt2.__node.tag;let worker;if(this.workers[rt2._id])worker=this.workers[rt2._id];else if(rt2.worker)worker=rt2.worker;if(!worker){worker=this.addWorker(rt2)}rt2.worker=worker;if(!rt2.worker.__ondisconnected){let ondelete=rt22=>{rt22.worker?.terminate()};rt2.__addOndisconnected(ondelete)}if(rt2.transferFunctions){for(const prop in rt2.transferFunctions){this.transferFunction(worker,rt2.transferFunctions[prop],prop)}}if(rt2.transferClasses){for(const prop in rt2.transferClasses){this.transferClass(worker,rt2.transferClasses[prop],prop)}}if(worker){if(!rt2.__operator){rt2.__operator=(...args)=>{if(rt2.callback){if(!this.__node.nodes.get(rt2.__node.tag)?.__children)worker.post(rt2.callback,args);else return worker.run(rt2.callback,args)}else{if(!this.__node.nodes.get(rt2.__node.tag)?.__children)worker.send(args);else return worker.request(args)}}}if(rt2.init){worker.run(rt2.init,rt2.initArgs,rt2.initTransfer)}return worker}};this.workerloader={"workers":(node,parent,graph,roots)=>{let rt2=node;if(!node.parentRoute&&(parent?.callback&&parent?.worker))node.parentRoute=parent?.callback;if(rt2?.worker||rt2?.workerId||rt2?.workerUrl){let worker=this.loadWorkerRoute(rt2,rt2.__node.tag);if(worker){if(!rt2.parentRoute&&rt2.__parent?.callback)rt2.parentRoute=rt2.__parent.callback;if(rt2.__parent&&!rt2.portId){if(typeof rt2.__parent==="string"){if(rt2.__node.tag!==rt2.__parent&&worker._id!==rt2.__parent)rt2.portId=this.establishMessageChannel(worker,rt2.__parent)}else if(rt2.__node.tag!==rt2.__parent?.__node?.tag&&worker._id!==rt2.__parent?.tag){rt2.portId=this.establishMessageChannel(worker,rt2.__parent.worker)}};if(rt2.parentRoute){if(!rt2.stopped){if(typeof rt2.__parent==="string"&&rt2.__parent===worker._id){worker.run("subscribe",[rt2.parentRoute,void 0,void 0,rt2.callback])}else if(rt2.__node.tag===rt2.__parent?.__node?.tag||worker._id===rt2.__parent?.__node?.tag){worker.run("subscribe",[rt2.parentRoute,void 0,void 0,rt2.callback])}else worker.run("subscribeToWorker",[rt2.parentRoute,rt2.portId,void 0,rt2.callback,void 0,void 0,rt2.blocking]).then(sub2=>{worker.workerSubs[rt2.parentRoute+rt2.portId].sub=sub2})}if(!(typeof rt2.__parent==="string"&&rt2.__parent===worker._id)&&!(rt2.__node.tag===rt2.__parent?.__node?.tag||worker._id===rt2.__parent?.__node?.tag))worker.workerSubs[rt2.parentRoute+rt2.portId]={sub:null,route:rt2.parentRoute,portId:rt2.portId,callback:rt2.callback,blocking:rt2.blocking}}else if(rt2.__parent){if(typeof rt2.__parent==="string"){if(!rt2.stopped){if(rt2.__parent===worker._id){worker.run("subscribe",[rt2.__parent,void 0,rt2.callback])}else worker.run("subscribeToWorker",[rt2.__parent,rt2.portId,void 0,rt2.callback,void 0,void 0,rt2.blocking]).then(sub2=>{worker.workerSubs[rt2.__parent+rt2.portId].sub=sub2})}if(!(typeof rt2.__parent==="string"&&rt2.__parent===worker._id))worker.workerSubs[rt2.__parent+rt2.portId]={sub:null,route:worker._id,portId:rt2.portId,callback:rt2.callback,blocking:rt2.blocking}}else if(rt2.__parent?.__node?.tag&&rt2.__parent?.worker){if(!rt2.stopped){if(rt2.__node.tag===rt2.__parent.__node.tag||worker._id===rt2.__parent.__node.tag){worker.run("subscribe",[rt2.__parent.__node.tag,void 0,void 0,rt2.callback])}else worker.run("subscribeToWorker",[rt2.__parent.__node.tag,rt2.portId,void 0,rt2.callback,void 0,void 0,rt2.blocking]).then(sub2=>{worker.workerSubs[rt2.__parent.__node.tag+rt2.portId].sub=sub2})}if(!(rt2.__node.tag===rt2.__parent?.__node?.tag||worker._id===rt2.__parent?.__node?.tag))worker.workerSubs[rt2.__parent.__node.tag+rt2.portId]={sub:null,route:rt2.__parent.__node.tag,portId:rt2.portId,callback:rt2.callback,blocking:rt2.blocking}}}}}else if(rt2.__parent&&rt2.parentRoute){if(typeof rt2.__parent==="string"&&roots[rt2.__parent]?.worker){roots[rt2.__parent].worker.subscribe(rt2.parentRoute,rt2.__operator,void 0,void 0,void 0,rt2.blocking)}else if(rt2.__parent?.worker){rt2.__parent.worker.subscribe(rt2.parentRoute,rt2.__operator,void 0,void 0,void 0,rt2.blocking)}}return rt2}};this.addDefaultMessageListener=()=>{globalThis.onmessage=ev2=>{let result=this.receive(ev2.data);if(this.__node.keepState)this.setState({[this.name]:result})}};this.postMessage=(message,target,transfer)=>{if(this.workers[target]){this.workers[target].send(message,transfer)}else{globalThis.postMessage(message,target,transfer)}};this.addWorker=options2=>{let worker;if(!options2._id)options2._id=`worker${Math.floor(Math.random()*1e15)}`;if(options2.url)worker=new import_web_worker.default(options2.url);else if(options2.port){worker=options2.port}else if(this.workers[options2._id]){if(this.workers[options2._id].port)worker=this.workers[options2._id].port;else worker=this.workers[options2._id].worker}if(!worker)return;let send=(message,transfer)=>{return this.transmit(message,worker,transfer)};let post=(route,args,transfer,method)=>{let message={route,args};if(method)message.method=method;return this.transmit(message,worker,transfer)};let run=(route,args,transfer,method)=>{return new Promise((res,rej)=>{let callbackId=Math.random();let req={route:"runRequest",args:[{route,args},options2._id,callbackId]};if(method)req.args[0].method=method;let onmessage=ev2=>{if(typeof ev2.data==="object"){if(ev2.data.callbackId===callbackId){worker.removeEventListener("message",onmessage);res(ev2.data.args)}}};worker.addEventListener("message",onmessage);this.transmit(req,worker,transfer)})};let request=(message,transfer,method)=>{return new Promise((res,rej)=>{let callbackId=Math.random();let req={route:"runRequest",args:[message,options2._id,callbackId]};if(method)req.method=method;let onmessage=ev2=>{if(typeof ev2.data==="object"){if(ev2.data.callbackId===callbackId){worker.removeEventListener("message",onmessage);res(ev2.data.args)}}};worker.addEventListener("message",onmessage);this.transmit(req,worker,transfer)})};let workerSubs={};let subscribe=(route,callback,args,key,subInput,blocking)=>{return this.subscribeToWorker(route,options2._id,callback,args,key,subInput,blocking)};let unsubscribe=(route,sub2)=>{return run("unsubscribe",[route,sub2])};let start=async(route,portId,callback,blocking)=>{if(route)await run("subscribeToWorker",[route,portId,void 0,callback,blocking]).then(sub2=>{if(sub2)workerSubs[route+portId]={sub:sub2,route,portId,callback,blocking}});else for(const key in workerSubs){if(typeof workerSubs[key].sub!=="number")await run("subscribeToWorker",[workerSubs[key].route,workerSubs[key].portId,void 0,workerSubs[key].callback,void 0,workerSubs[key].blocking]).then(sub2=>{workerSubs[key].sub=sub2});console.log(JSON.stringify(workerSubs))}return true};let stop=async(route,portId)=>{if(route&&portId&&workerSubs[route+portId]){await run("unsubscribe",[route,workerSubs[route+portId].sub]);workerSubs[route+portId].sub=false}else{for(const key in workerSubs){if(typeof workerSubs[key].sub==="number"){await run("unpipeWorkers",[workerSubs[key].route,workerSubs[key].portId,workerSubs[key].sub]).then(console.log)}workerSubs[key].sub=false}}return true};let terminate=()=>{for(const key in workerSubs){if(typeof workerSubs[key].sub==="number"){run("unpipeWorkers",[workerSubs[key].route,workerSubs[key].portId,workerSubs[key].sub])}workerSubs[key].sub=false}return this.terminate(options2._id)};if(!options2.onmessage)options2.onmessage=ev2=>{this.receive(ev2.data);this.setState({[options2._id]:ev2.data})};if(!options2.onerror){options2.onerror=ev2=>{console.error(ev2.data)}}worker.onmessage=options2.onmessage;worker.onerror=options2.onerror;this.workers[options2._id]={worker,send,post,run,request,subscribe,unsubscribe,terminate,start,stop,postMessage:worker.postMessage,workerSubs,graph:this,...options2};return this.workers[options2._id]};this.toObjectURL=scriptTemplate=>{let blob=new Blob([scriptTemplate],{type:"text/javascript"});return URL.createObjectURL(blob)};this.transmit=(message,worker,transfer)=>{if(!transfer){transfer=this.getTransferable(message)}if(worker instanceof import_web_worker.default||worker instanceof MessagePort){worker.postMessage(message,transfer)}else if(typeof worker==="string"){if(this.workers[worker]){if(this.workers[worker].port)this.workers[worker].port.postMessage(message,transfer);else if(this.workers[worker].worker)this.workers[worker].worker.postMessage(message,transfer)}}else{let keys=Object.keys(this.workers);this.workers[keys[this.threadRot]].worker.postMessage(message,transfer);this.threadRot++;if(this.threadRot===keys.length)this.threadRot=0}return message};this.terminate=worker=>{let onclose;if(typeof worker==="string"){let obj=this.workers[worker];if(obj){delete this.workers[worker];worker=obj.worker;if(obj.onclose)onclose=obj.onclose}}else if(typeof worker==="object"){if(worker?._id){worker=worker.worker;delete this.workers[worker?._id]}}if(worker instanceof import_web_worker.default){worker.terminate();if(onclose)onclose(worker);return true}if(worker instanceof MessagePort){worker.close();if(onclose)onclose(worker);return true}return false};this.establishMessageChannel=(worker,worker2)=>{let workerId;if(typeof worker==="string"){workerId=worker;if(this.workers[worker]){if(this.workers[worker].port)worker=this.workers[worker].port;else worker2=this.workers[worker].worker}}else if(worker?.worker){worker=worker.worker}if(typeof worker2==="string"){if(this.workers[worker2]){if(this.workers[worker2].port)worker2=this.workers[worker2].port;else worker2=this.workers[worker2].worker}}else if(worker2?.worker){worker2=worker2.worker}if(worker instanceof import_web_worker.default||worker instanceof MessagePort){let channel=new MessageChannel;let portId=`port${Math.floor(Math.random()*1e15)}`;worker.postMessage({route:"addWorker",args:{port:channel.port1,_id:portId}},[channel.port1]);if(worker2 instanceof import_web_worker.default||worker2 instanceof MessagePort){worker2.postMessage({route:"addWorker",args:{port:channel.port2,_id:portId}},[channel.port2])}else if(workerId&&this.workers[workerId]){channel.port2.onmessage=this.workers[workerId].onmessage;this.workers[workerId].port=channel.port2}return portId}return false};this.request=(message,workerId,transfer,method)=>{let worker=this.workers[workerId].worker;return new Promise((res,rej)=>{let callbackId=Math.random();let req={route:"runRequest",args:[message,callbackId]};if(method)req.method=method;let onmessage=ev2=>{if(typeof ev2.data==="object"){if(ev2.data.callbackId===callbackId){worker.removeEventListener("message",onmessage);res(ev2.data.args)}}};worker.addEventListener("message",onmessage);this.transmit(req,worker,transfer)})};this.runRequest=(message,worker,callbackId)=>{let res=this.receive(message);if(typeof worker==="string"&&this.workers[worker]){if(this.workers[worker].port)worker=this.workers[worker].port;else worker=this.workers[worker].worker}if(res instanceof Promise){res.then(r=>{if(worker instanceof import_web_worker.default||worker instanceof MessagePort)worker.postMessage({args:r,callbackId});else if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope)globalThis.postMessage({args:r,callbackId})})}else{if(worker instanceof import_web_worker.default||worker instanceof MessagePort)worker.postMessage({args:res,callbackId});else if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope)globalThis.postMessage({args:res,callbackId})}return res};this.subscribeWorker=(route,worker,args,key,subInput,blocking)=>{let callback;if(blocking){let blocked=false;callback=res=>{if(!blocked){blocked=true;if(res instanceof Promise){res.then(r=>{if(worker?.run)worker.run("triggerSubscription",[route,worker._id,r]).then(ret=>{blocked=false})})}else{if(worker?.run)worker.run("triggerSubscription",[route,worker._id,res]).then(ret=>{blocked=false})}}}}else{callback=res=>{if(res instanceof Promise){res.then(r=>{if(worker?.postMessage)worker.postMessage({args:r,callbackId:route});else if(globalThis.postMessage)globalThis.postMessage({args:r,callbackId:route})})}else{if(worker?.postMessage)worker.postMessage({args:res,callbackId:route});else if(globalThis.postMessage)globalThis.postMessage({args:res,callbackId:route})}}}if(!blocking&&worker?.port){worker=worker.port}else if(!blocking&&worker?.worker){worker=worker.worker}else if(typeof worker==="string"&&this.workers[worker]){if(blocking)worker=this.workers[worker];else if(this.workers[worker].port)worker=this.workers[worker].port;else worker=this.workers[worker].worker}return this.subscribe(route,callback,args,key,subInput)};this.subscribeToWorker=(route,workerId,callback,args,key,subInput,blocking)=>{if(typeof workerId==="string"&&this.workers[workerId]){this.__node.state.subscribeEvent(workerId,res=>{if(res?.callbackId===route){if(!callback)this.setState({[workerId]:res.args});else if(typeof callback==="string"){this.run(callback,res.args)}else callback(res.args)}});return this.workers[workerId].run("subscribeWorker",[route,workerId,args,key,subInput,blocking])}};this.triggerSubscription=async(route,workerId,result)=>{if(this.__node.state.triggers[workerId])for(let i=0;i<this.__node.state.triggers[workerId].length;i++){await this.__node.state.triggers[workerId][i].onchange({args:result,callbackId:route})}return true};this.pipeWorkers=(sourceWorker,listenerWorker,sourceRoute,listenerRoute,portId,args,key,subInput,blocking)=>{if(typeof sourceWorker==="string")sourceWorker=this.workers[sourceWorker];if(typeof listenerWorker==="string")listenerWorker=this.workers[listenerWorker];if(!portId){portId=this.establishMessageChannel(sourceWorker.worker,listenerWorker.worker)}return listenerWorker.run("subscribeToWorker",[sourceRoute,portId,listenerRoute,args,key,subInput,blocking])};this.unpipeWorkers=(sourceRoute,sourceWorker,sub2)=>{if(typeof sourceWorker==="string")sourceWorker=this.workers[sourceWorker];if(typeof sourceWorker==="object"){return sourceWorker.run("unsubscribe",[sourceRoute,sub2])}};this.connections={workers:this.workers};if(options?.services)this.addServices(options.services);this.load(this);this.setLoaders(this.workerloader);if(options)this.init(options);if(typeof WorkerGlobalScope!=="undefined"&&globalThis instanceof WorkerGlobalScope){this.addDefaultMessageListener()}}getTransferable(message){let transfer;if(typeof message==="object"){if(message.args){if(message.args?.constructor?.name==="Object"){for(const key in message.args){if(ArrayBuffer.isView(message.args[key])){if(!transfer)transfer=[message.args[key].buffer];else transfer.push(message.args[key].buffer)}else if(message.args[key]?.constructor?.name==="ArrayBuffer"){if(!transfer)transfer=[message.args[key]];else transfer.push(message.args[key])}}}else if(Array.isArray(message.args)&&message.args.length<11){message.args.forEach(arg=>{if(ArrayBuffer.isView(arg)){transfer=[arg.buffer]}else if(arg?.constructor?.name==="ArrayBuffer")transfer=[arg]})}else if(ArrayBuffer.isView(message.args)){transfer=[message.args.buffer]}else if(message.args?.constructor?.name==="ArrayBuffer"){transfer=[message]}}else if(message?.constructor?.name==="Object"){for(const key in message){if(ArrayBuffer.isView(message[key])){if(!transfer)transfer=[message[key].buffer];else transfer.push(message[key].buffer)}else if(message[key]?.constructor?.name==="ArrayBuffer"){if(!transfer)transfer=[message[key]];else transfer.push(message[key])}}}else if(Array.isArray(message)&&message.length<11){message.forEach(arg=>{if(ArrayBuffer.isView(arg)){transfer=[arg.buffer]}else if(arg.constructor?.name==="ArrayBuffer")transfer=[arg]})}else if(ArrayBuffer.isView(message)){transfer=[message.buffer]}else if(message.constructor?.name==="ArrayBuffer"){transfer=[message]}}return transfer}transferFunction(worker,fn2,fnName){if(!fnName)fnName=fn2.name;return worker.request({route:"setRoute",args:[fn2.toString(),fnName]})}transferClass(worker,cls,className){if(!className)className=cls.name;return worker.request({route:"receiveClass",args:[cls.toString(),className]})}receiveNode(properties){if(properties.__methods){if(!this.__node.graph.loaders.methodstrings){this.__node.graph.__node.loaders.methodstrings=methodstrings}}let node=this.__node.graph.add(properties);return node.__node.tag}transferNode(properties,worker,name2){if(!properties.__node){properties.__node={}}properties.__node.tag=name2;for(const key in properties){if(typeof properties[key]==="function"){if(!properties.__methods)properties.__methods={};properties.__methods[key]=properties[key].toString()}}if(worker.run)return worker.run("receiveNode",[recursivelyStringifyFunctions(properties)]);else if(worker.postMessage){worker.postMessage({route:"receiveNode",args:recursivelyStringifyFunctions(properties)},void 0);return new Promise(r=>r(name2))}}};var mouseEventHandler=makeSendPropertiesHandler(["ctrlKey","metaKey","shiftKey","button","pointerType","clientX","clientY","pageX","pageY"]);var wheelEventHandlerImpl=makeSendPropertiesHandler(["deltaX","deltaY"]);var keydownEventHandler=makeSendPropertiesHandler(["ctrlKey","metaKey","shiftKey","keyCode"]);function wheelEventHandler(event,sendFn){event.preventDefault();wheelEventHandlerImpl(event,sendFn)}function preventDefaultHandler(event){event.preventDefault()}function copyProperties(src,properties,dst){for(const name2 of properties){dst[name2]=src[name2]}}function makeSendPropertiesHandler(properties){return function sendProperties(event,sendFn){const data={type:event.type};copyProperties(event,properties,data);sendFn(data)}}function touchEventHandler(event,sendFn){const touches=[];const data={type:event.type,touches};for(let i=0;i<event.touches.length;++i){const touch=event.touches[i];touches.push({pageX:touch.pageX,pageY:touch.pageY})}sendFn(data)}var orbitKeys={"37":true,"38":true,"39":true,"40":true};function filteredKeydownEventHandler(event,sendFn){const{keyCode}=event;if(orbitKeys[keyCode]){event.preventDefault();keydownEventHandler(event,sendFn)}}var eventHandlers={contextmenu:preventDefaultHandler,mousedown:mouseEventHandler,mousemove:mouseEventHandler,mouseup:mouseEventHandler,pointerdown:mouseEventHandler,pointermove:mouseEventHandler,pointerup:mouseEventHandler,touchstart:touchEventHandler,touchmove:touchEventHandler,touchend:touchEventHandler,wheel:wheelEventHandler,keydown:filteredKeydownEventHandler};function initProxyElement(element,worker,id){if(!id)id="proxy"+Math.floor(Math.random()*1e15);const sendEvent=data=>{if(!worker){handleProxyEvent(data,id)}else worker.postMessage({route:"handleProxyEvent",args:[data,id]})};let entries=Object.entries(eventHandlers);for(const[eventName,handler]of entries){element.addEventListener(eventName,function(event){handler(event,sendEvent)})}const sendSize=()=>{const rect=element.getBoundingClientRect();sendEvent({type:"resize",left:rect.left,top:rect.top,width:element.clientWidth,height:element.clientHeight})};sendSize();globalThis.addEventListener("resize",sendSize);return id}var EventDispatcher=class{addEventListener(type,listener){if(this.__listeners===void 0)this.__listeners={};const listeners=this.__listeners;if(listeners[type]===void 0){listeners[type]=[]}if(listeners[type].indexOf(listener)===-1){listeners[type].push(listener)}}hasEventListener(type,listener){if(this.__listeners===void 0)return false;const listeners=this.__listeners;return listeners[type]!==void 0&&listeners[type].indexOf(listener)!==-1}removeEventListener(type,listener){if(this.__listeners===void 0)return;const listeners=this.__listeners;const listenerArray=listeners[type];if(listenerArray!==void 0){const index=listenerArray.indexOf(listener);if(index!==-1){listenerArray.splice(index,1)}}}dispatchEvent(event,target){if(this.__listeners===void 0)return;const listeners=this.__listeners;const listenerArray=listeners[event.type];if(listenerArray!==void 0){if(!target)event.target=this;else event.target=target;const array=listenerArray.slice(0);for(let i=0,l=array.length;i<l;i++){array[i].call(this,event)}event.target=null}}};function noop(){}var ElementProxyReceiver=class extends EventDispatcher{constructor(){super();this.__listeners={};this.style={};this.setPointerCapture=()=>{};this.releasePointerCapture=()=>{};this.getBoundingClientRect=()=>{return{left:this.left,top:this.top,width:this.width,height:this.height,right:this.left+this.width,bottom:this.top+this.height}};this.handleEvent=data=>{if(data.type==="resize"){this.left=data.left;this.top=data.top;this.width=data.width;this.height=data.height;if(typeof this.proxied==="object"){this.proxied.style.width=this.width+"px";this.proxied.style.height=this.height+"px";this.proxied.clientWidth=this.width;this.proxied.clientHeight=this.height}}data.preventDefault=noop;data.stopPropagation=noop;this.dispatchEvent(data,this.proxied)};this.style={}}get clientWidth(){return this.width}get clientHeight(){return this.height}focus(){}};var ProxyManager=class{constructor(){this.targets={};this.makeProxy=(id,addTo=void 0)=>{if(!id)id=`proxyReceiver${Math.floor(Math.random()*1e15)}`;let proxy;if(this.targets[id])proxy=this.targets[id];else{proxy=new ElementProxyReceiver;this.targets[id]=proxy}if(typeof addTo==="object"){addTo.proxy=proxy;proxy.proxied=addTo;if(typeof WorkerGlobalScope!=="undefined")addTo.style=proxy.style;if(proxy.width){addTo.style.width=proxy.width+"px";addTo.clientWidth=proxy.width}if(proxy.height){addTo.style.height=proxy.height+"px";addTo.clientHeight=proxy.height}addTo.setPointerCapture=proxy.setPointerCapture.bind(proxy);addTo.releasePointerCapture=proxy.releasePointerCapture.bind(proxy);addTo.getBoundingClientRect=proxy.getBoundingClientRect.bind(proxy);addTo.addEventListener=proxy.addEventListener.bind(proxy);addTo.removeEventListener=proxy.removeEventListener.bind(proxy);addTo.handleEvent=proxy.handleEvent.bind(proxy);addTo.dispatchEvent=proxy.dispatchEvent.bind(proxy);addTo.focus=proxy.focus.bind(proxy)}};this.getProxy=id=>{return this.targets[id]};this.handleEvent=(data,id)=>{if(!this.targets[id])this.makeProxy(id);if(this.targets[id]){this.targets[id].handleEvent(data);return true}return void 0};if(!globalThis.document)globalThis.document={}}};function makeProxy(id,elm){if(this?.__node?.graph){if(!this.__node.graph.ProxyManager)this.__node.graph.ProxyManager=new ProxyManager;this.__node.graph.ProxyManager.makeProxy(id,elm)}else{if(!globalThis.ProxyManager)globalThis.ProxyManager=new ProxyManager;globalThis.ProxyManager.makeProxy(id,elm)}return id}function handleProxyEvent(data,id){if(this?.__node?.graph){if(!this.__node.graph.ProxyManager)this.__node.graph.ProxyManager=new ProxyManager;if(this.__node.graph.ProxyManager.handleEvent(data,id))return data}else{if(!globalThis.ProxyManager)globalThis.ProxyManager=new ProxyManager;if(globalThis.ProxyManager.handleEvent(data,id))return data}}var proxyElementWorkerRoutes={initProxyElement,makeProxy,handleProxyEvent};function Renderer(options){if(options.worker){let worker=options.worker;let route=options.route;if(worker instanceof Blob||typeof worker==="string"){worker=new Worker(worker)}delete options.worker;delete options.route;return transferCanvas(worker,options,route)}else{initProxyElement(options.canvas,void 0,options._id);return setupCanvas(options)}}function transferCanvas(worker,options,route){if(!options)return void 0;if(!options._id)options._id=`canvas${Math.floor(Math.random()*1e15)}`;let offscreen=options.canvas.transferControlToOffscreen();if(!options.width)options.width=options.canvas.clientWidth;if(!options.height)options.height=options.canvas.clientHeight;let message={route:route?route:"setupCanvas",args:{...options,canvas:offscreen}};if(this?.__node?.graph)this.__node.graph.run("initProxyElement",options.canvas,worker,options._id);else initProxyElement(options.canvas,worker,options._id);if(options.draw){if(typeof options.draw==="function")message.args.draw=options.draw.toString();else message.args.draw=options.draw}if(options.update){if(typeof options.update==="function")message.args.update=options.update.toString();else message.args.update=options.update}if(options.init){if(typeof options.init==="function")message.args.init=options.init.toString();else message.args.init=options.init}if(options.clear){if(typeof options.clear==="function")message.args.clear=options.clear.toString();else message.args.clear=options.clear}let transfer=[offscreen];if(options.transfer){transfer.push(...options.transfer);delete options.transfer}worker.postMessage(message,transfer);const canvascontrols={_id:options._id,width:options.width,height:options.height,worker,draw:props=>{worker.postMessage({route:"drawFrame",args:[props,options._id]})},update:props=>{worker.postMessage({route:"updateCanvas",args:[props,options._id]})},clear:()=>{worker.postMessage({route:"clearCanvas",args:options._id})},init:()=>{worker.postMessage({route:"initCanvas",args:options._id})},stop:()=>{worker.postMessage({route:"stopAnim",args:options._id})},start:()=>{worker.postMessage({route:"startAnim",args:options._id})},set:newDrawProps=>{worker.postMessage({route:"setDraw",args:[newDrawProps,options._id]})},terminate:()=>{worker.terminate()}};return canvascontrols}function setDraw(settings,_id){let canvasopts;if(this?.__node?.graph){if(_id)canvasopts=this.__node.graph.CANVASES?.[settings._id];else if(settings._id)canvasopts=this.__node.graph.CANVASES?.[settings._id];else canvasopts=this.__node.graph.CANVASES?.[Object.keys(this.__node.graph.CANVASES)[0]]}else{if(_id)canvasopts=globalThis.CANVASES?.[settings._id];else if(settings._id)canvasopts=globalThis.CANVASES?.[settings._id];else canvasopts=globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]]}if(canvasopts){if(settings.canvas){canvasopts.canvas=settings.canvas;if(this?.__node?.graph)this.__node.graph.run("makeProxy",canvasopts._id,canvasopts.canvas);else proxyElementWorkerRoutes.makeProxy(canvasopts._id,canvasopts.canvas)}if(typeof settings.context==="string")canvasopts.context=canvasopts.canvas.getContext(settings.context);else if(settings.context)canvasopts.context=settings.context;if(settings.width)canvasopts.canvas.width=settings.width;if(settings.height)canvasopts.canvas.height=settings.height;if(typeof settings.draw==="string")settings.draw=parseFunctionFromText3(settings.draw);if(typeof settings.draw==="function"){canvasopts.draw=settings.draw}if(typeof settings.update==="string")settings.update=parseFunctionFromText3(settings.update);if(typeof settings.update==="function"){canvasopts.update=settings.update}if(typeof settings.init==="string")settings.init=parseFunctionFromText3(settings.init);if(typeof settings.init==="function"){canvasopts.init=settings.init}if(typeof settings.clear==="string")settings.clear=parseFunctionFromText3(settings.clear);if(typeof settings.clear==="function"){canvasopts.clear=settings.clear}return settings._id}return void 0}function setupCanvas(options){if(this?.__node?.graph){if(!this.__node.graph.CANVASES)this.__node.graph.CANVASES={}}else if(!globalThis.CANVASES)globalThis.CANVASES={};let canvasOptions=options;options._id?canvasOptions._id=options._id:canvasOptions._id=`canvas${Math.floor(Math.random()*1e15)}`;typeof options.context==="string"?canvasOptions.context=options.canvas.getContext(options.context):canvasOptions.context=options.context;"animating"in options?canvasOptions.animating=options.animating:canvasOptions.animating=true;if(this?.__node?.graph?.CANVASES[canvasOptions._id]){this.__node.graph.run("setDraw",canvasOptions)}else if(globalThis.CANVASES?.[canvasOptions._id]){setDraw(canvasOptions)}else{if(this?.__node?.graph)canvasOptions.graph=this.__node.graph;if(this?.__node?.graph)this.__node.graph.CANVASES[canvasOptions._id]=canvasOptions;else globalThis.CANVASES[canvasOptions._id]=canvasOptions;if(this?.__node?.graph)this.__node.graph.run("makeProxy",canvasOptions._id,canvasOptions.canvas);else proxyElementWorkerRoutes.makeProxy(canvasOptions._id,canvasOptions.canvas);if(options.width)canvasOptions.canvas.width=options.width;if(options.height)canvasOptions.canvas.height=options.height;if(typeof canvasOptions.draw==="string"){canvasOptions.draw=parseFunctionFromText3(canvasOptions.draw)}else if(typeof canvasOptions.draw==="function"){canvasOptions.draw=canvasOptions.draw}if(typeof canvasOptions.update==="string"){canvasOptions.update=parseFunctionFromText3(canvasOptions.update)}else if(typeof canvasOptions.update==="function"){canvasOptions.update=canvasOptions.update}if(typeof canvasOptions.init==="string"){canvasOptions.init=parseFunctionFromText3(canvasOptions.init)}else if(typeof canvasOptions.init==="function"){canvasOptions.init=canvasOptions.init}if(typeof canvasOptions.clear==="string"){canvasOptions.clear=parseFunctionFromText3(canvasOptions.clear)}else if(typeof canvasOptions.clear==="function"){canvasOptions.clear=canvasOptions.clear}if(typeof canvasOptions.init==="function")canvasOptions.init(canvasOptions,canvasOptions.canvas,canvasOptions.context);canvasOptions.stop=()=>{stopAnim(canvasOptions._id)};canvasOptions.start=draw=>{startAnim(canvasOptions._id,draw)};canvasOptions.set=settings=>{setDraw(settings,canvasOptions._id)};if(typeof canvasOptions.draw==="function"&&canvasOptions.animating){let draw=(s,canvas,context)=>{if(s.animating){s.draw(s,canvas,context);requestAnimationFrame(()=>{draw(s,canvas,context)})}};draw(canvasOptions,canvasOptions.canvas,canvasOptions.context)}}if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope)return canvasOptions._id;else{const canvascontrols={_id:options._id,width:options.width,height:options.height,draw:props=>{drawFrame(props,options._id)},update:props=>{updateCanvas(props,options._id)},clear:()=>{clearCanvas(options._id)},init:()=>{initCanvas(options._id)},stop:()=>{stopAnim(options._id)},start:()=>{startAnim(options._id)},set:newDrawProps=>{setDraw(newDrawProps,options._id)},terminate:()=>{stopAnim(options._id)}};return canvascontrols}}function drawFrame(props,_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts){if(props)Object.assign(canvasopts,props);if(canvasopts.draw){canvasopts.draw(canvasopts,canvasopts.canvas,canvasopts.context);return _id}}return void 0}function clearCanvas(_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts?.clear){canvasopts.clear(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function initCanvas(_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts?.init){canvasopts.init(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function updateCanvas(input,_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts?.update){canvasopts.update(canvasopts,canvasopts.canvas,canvasopts.context,input);return _id}return void 0}function setProps(props,_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts){Object.assign(canvasopts,props);if(props.width)canvasopts.canvas.width=props.width;if(props.height)canvasopts.canvas.height=props.height;return _id}return void 0}function startAnim(_id,draw){let canvasopts=getCanvas.call(this,_id);canvasopts.animating=true;if(canvasopts&&draw){if(typeof draw==="string")draw=parseFunctionFromText3(draw);if(typeof draw==="function"){canvasopts.draw=draw}return _id}if(typeof canvasopts?.draw==="function"){let draw2=(s,canvas,context)=>{if(s.animating){s.draw(s,canvas,context);requestAnimationFrame(()=>{draw2(s,canvas,context)})}};if(typeof canvasopts.clear==="function")canvasopts.clear(canvasopts,canvasopts.canvas,canvasopts.context);if(typeof canvasopts.init==="function")canvasopts.init(canvasopts,canvasopts.canvas,canvasopts.context);draw2(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function stopAnim(_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts){canvasopts.animating=false;if(typeof canvasopts.clear==="function")canvasopts.clear(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function getCanvas(_id){let canvasopts;if(this?.__node?.graph){if(!_id)canvasopts=this.__node.graph.CANVASES?.[Object.keys(this.__node.graph.CANVASES)[0]];else canvasopts=this.__node.graph.CANVASES?.[_id]}else{if(!_id)canvasopts=globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]];else canvasopts=globalThis.CANVASES?.[_id]}return canvasopts}var workerCanvasRoutes={...proxyElementWorkerRoutes,Renderer,transferCanvas,setupCanvas,setDraw,drawFrame,clearCanvas,initCanvas,updateCanvas,setProps,startAnim,stopAnim};function parseFunctionFromText3(method=""){let getFunctionBody=methodString=>{return methodString.replace(/^\\W*(function[^{]+\\{([\\s\\S]*)\\}|[^=]+=>[^{]*\\{([\\s\\S]*)\\}|[^=]+=>(.+))/i,"$2$3$4")};let getFunctionHead=methodString=>{let startindex=methodString.indexOf("=>")+1;if(startindex<=0){startindex=methodString.indexOf("){")}if(startindex<=0){startindex=methodString.indexOf(") {")}return methodString.slice(0,methodString.indexOf("{",startindex)+1)};let newFuncHead=getFunctionHead(method);let newFuncBody=getFunctionBody(method);let newFunc;if(newFuncHead.includes("function")){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody)}else{if(newFuncHead.substring(0,6)===newFuncBody.substring(0,6)){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody.substring(newFuncBody.indexOf("{")+1,newFuncBody.length-1))}else{try{newFunc=(0,eval)(newFuncHead+newFuncBody+"}")}catch{}}}return newFunc}var algorithms={};var loadAlgorithms=settings=>{return Object.assign(algorithms,settings)};function createSubprocess(options,inputs){let ctx={_id:options._id?options._id:`algorithm${Math.floor(Math.random()*1e15)}`,ondata:options.ondata,run:data=>{return ctx.ondata(ctx,data)}};if(options.structs)recursivelyAssign3(ctx,JSON.parse(JSON.stringify(options.structs)));if(inputs)recursivelyAssign3(ctx,JSON.parse(JSON.stringify(inputs)));if(options.oncreate){ctx.oncreate=options.oncreate}if(ctx.oncreate){ctx.oncreate(ctx)}return ctx}var recursivelyAssign3=(target,obj)=>{for(const key in obj){if(typeof obj[key]==="object"&&!Array.isArray(obj[key])){if(typeof target[key]==="object"&&!Array.isArray(target[key]))recursivelyAssign3(target[key],obj[key]);else target[key]=recursivelyAssign3({},obj[key])}else target[key]=obj[key]}return target};var subprocessRoutes={...unsafeRoutes,loadAlgorithms,"initSubprocesses":async function initSubprocesses(subprocesses,service){if(!service)service=this.__node.graph;if(!service)return void 0;for(const p in subprocesses){let s=subprocesses[p];if(!s.worker&&s.url)s.worker=service.addWorker({url:s.url});if(!s.worker)continue;let w4=s.worker;let wpId;wpId=service.establishMessageChannel(w4.worker,s.source?.worker);if(!s.source)s.source=service;if(typeof s.subprocess==="object"){const p2=s.subprocess;if(!p2.name)continue;if(typeof p2.oncreate==="function"){p2.oncreate=p2.oncreate.toString()}if(typeof p2.ondata==="function"){p2.ondata=p2.ondata.toString()}s.worker.post("addSubprocessTemplate",[p2.name,p2.structs,p2.oncreate,p2.ondata,p2.props]);s.subprocess=p2.name}if(s.init){let r=await w4.run(s.init,s.initArgs);s.otherArgs=r}if(s.otherArgs){w4.run("setValue",["otherArgsProxy",Array.isArray(s.otherArgs)?s.otherArgs:[s.otherArgs]])}if(s.pipeTo){w4.run("setValue",["routeProxy",s.route]);w4.run("setValue",["pipeRoute",s.pipeTo.route]);if(s.url&&!s.pipeTo.worker){let w22=service.addWorker({url:s.url});s.pipeTo.portId=service.establishMessageChannel(w4.worker,w22.worker);s.pipeTo.worker=w22}if(s.pipeTo.init){s.pipeTo.otherArgs=await s.pipeTo.worker.run(s.pipeTo.init,s.pipeTo.initArgs)}w4.run("setValue",["pipePort",s.pipeTo.portId]);if(s.pipeTo.otherArgs)w4.run("setValue",["otherPipeArgs",s.pipeTo.otherArgs]);service.transferFunction(w4,function pipeResults(data){let inp=data;if(this.__node.graph.otherArgsProxy)inp=[data,...this.__node.graph.otherArgsProxy];let r=this.__node.graph.run(this.__node.graph.routeProxy,inp);if(!s.blocking)return new Promise(res=>{if(r instanceof Promise){r.then(rr2=>{if(rr2!==void 0){let args=rr2;if(this.__node.graph.otherPipeArgs)args=[rr2,...this.__node.graph.otherPipeArgs];if(this.workers[this.__node.graph.pipePort]){s.blocking=true;this.workers[this.__node.graph.pipePort].run(this.__node.graph.pipeRoute,args).then(result=>{s.blocking=false;res(result)})}}})}else if(r!==void 0){let args=r;if(this.__node.graph.otherPipeArgs)args=[r,...this.__node.graph.otherPipeArgs];if(this.workers[this.__node.graph.pipePort]){s.blocking=true;this.workers[this.__node.graph.pipePort].run(this.__node.graph.pipeRoute,args).then(result=>{s.blocking=false;res(result)})}}});return void 0},s.route+"_pipeResults");s.route=s.route+"_pipeResults"}else{w4.run("setValue",["routeProxy",s.route]);service.transferFunction(w4,function routeProxy(data){let r;if(this.__node.graph.otherArgsProxy)r=this.__node.graph.nodes.get(this.__node.graph.routeProxy).__operator(data,...this.__node.graph.otherArgsProxy);else r=this.__node.graph.nodes.get(this.__node.graph.routeProxy).__operator(data);if(this.__node.graph.state.triggers[this.__node.graph.routeProxy]){if(r instanceof Promise){r.then(rr2=>{this.setState({[this.__node.graph.routeProxy]:rr2})})}else this.setState({[this.__node.graph.routeProxy]:r})}return r},s.route+"_routeProxy");s.route=s.route+"_routeProxy";if(!s.stopped)w4.run("subscribeToWorker",[s.subscribeRoute,wpId,s.route]).then(sub2=>{s.sub=sub2})}s.stop=async()=>{if(s.source&&typeof s.sub==="number"){s.source.unsubscribe(s.subscribeRoute,s.sub);return true}return void 0};s.start=async()=>{if(typeof s.sub!=="number")return w4.run("subscribeToWorker",[s.subscribeRoute,wpId,s.route,s.blocking]).then(sub2=>{s.sub=sub2})};s.setArgs=async args=>{if(Array.isArray(args))await w4.run("setValue",["otherArgsProxy",args]);else if(typeof args==="object"){for(const key in args){await w4.run("setValue",[key,args[key]])}}return true};s.terminate=()=>{w4.terminate();if(s.source?.worker&&typeof s.sub==="number"){s.source.post("unsubscribe",s.sub)}if(s.pipeTo?.worker){s.pipeTo.worker.terminate()}};if(s.callback)w4.subscribe(s.route,res=>{if(typeof s.callback==="string")this.__node.graph.run(s.callback,res);else s.callback(res)})}return subprocesses},"addSubprocessTemplate":function subprocesstempalte(name2,structs,oncreate,ondata,props){if(typeof oncreate==="string")oncreate=parseFunctionFromText(oncreate);if(typeof ondata==="string")ondata=parseFunctionFromText(ondata);if(typeof ondata==="function"){algorithms[name2]={ondata,oncreate:typeof oncreate==="function"?oncreate:null,structs};if(typeof props==="object")Object.assign(algorithms[name2],props);return true}},"updateSubprocess":function updatesubprocess(structs,_id){if(!this.__node.graph.ALGORITHMS)this.__node.graph.ALGORITHMS={};if(!_id)_id=Object.keys(this.__node.graph.ALGORITHMS)[0];if(!_id)return;Object.assign(this.__node.graph.ALGORITHMS[_id],structs)},"createSubprocess":function creatsubprocess(options,inputs){if(!this.__node.graph.ALGORITHMS)this.__node.graph.ALGORITHMS={};if(typeof options==="string"){options=algorithms[options]}if(typeof options==="object"){if(typeof options.ondata==="string")options.ondata=parseFunctionFromText(options.ondata);let ctx;if(typeof options?.ondata==="function")ctx=createSubprocess(options,inputs);if(ctx)this.__node.graph.ALGORITHMS[ctx._id]=ctx;if(ctx)return ctx._id}return false},"runSubprocess":function runsubprocess(data,_id){if(!this.__node.graph.ALGORITHMS)this.__node.graph.ALGORITHMS={};if(!_id)_id=Object.keys(this.__node.graph.ALGORITHMS)[0];if(!_id)return;let res=this.__node.graph.ALGORITHMS[_id].run(data);if(res!==void 0){if(Array.isArray(res)){let pass=[];res.forEach(r=>{if(r!==void 0){pass.push(r);this.__node.graph.setState({[_id]:r})}});if(pass.length>0){return pass}}else{this.__node.graph.setState({[_id]:res});return res}}}};var _ArrayManip=class{constructor(){this.recursivelyAssign=(target,obj)=>{for(const key in obj){if(typeof obj[key]==="object"){if(typeof target[key]==="object")this.recursivelyAssign(target[key],obj[key]);else target[key]=this.recursivelyAssign({},obj[key])}else target[key]=obj[key]}return target}}static autoscale(array,lineIdx=0,nLines=1,centerZero=false,ymin,ymax,clamp){if(array?.length===0)return array;let max=ymax?ymax:Math.max(...array);let min=ymin?ymin:Math.min(...array);let _lines=1/nLines;let scalar=1;if(centerZero){let absmax=Math.max(Math.abs(min),Math.abs(max));if(absmax!==0)scalar=_lines/absmax;return array.map(y5=>{if(clamp){if(y5<min)y5=min;if(y5>max)y5=max}return y5*scalar+(_lines*(lineIdx+1)*2-1-_lines)})}else{if(max===min){if(max!==0){scalar=_lines/max}else if(min!==0){scalar=_lines/Math.abs(min)}}else scalar=_lines/(max-min);return array.map(y5=>{if(clamp){if(y5<min)y5=min;if(y5>max)y5=max}return 2*((y5-min)*scalar-1/(2*nLines))+(_lines*(lineIdx+1)*2-1-_lines)})}}static genTimestamps(ct3,sps11){let now=Date.now();let toInterp=[now-ct3*1e3/sps11,now];return _ArrayManip.upsample(toInterp,ct3)}static absmax(array){return Math.max(Math.abs(Math.min(...array)),Math.max(...array))}static downsample(array,fitCount,scalar=1){if(array.length>fitCount){let output=new Array(fitCount);let incr=array.length/fitCount;let lastIdx=array.length-1;let last=0;let counter=0;for(let i=incr;i<array.length;i+=incr){let rounded=Math.round(i);if(rounded>lastIdx)rounded=lastIdx;for(let j3=last;j3<rounded;j3++){output[counter]+=array[j3]}output[counter]/=(rounded-last)*scalar;counter++;last=rounded}return output}else return array}static upsample(array,fitCount,scalar=1){var linearInterpolate=function(before2,after2,atPoint2){return(before2+(after2-before2)*atPoint2)*scalar};var newData=new Array(fitCount);var springFactor=(array.length-1)/(fitCount-1);newData[0]=array[0];for(var i=1;i<fitCount-1;i++){var tmp=i*springFactor;var before=Math.floor(tmp);var after=Math.ceil(tmp);var atPoint=tmp-before;newData[i]=linearInterpolate(array[before],array[after],atPoint)}newData[fitCount-1]=array[array.length-1];return newData}static interpolate(array,fitCount,scalar=1){if(array.length>fitCount){return _ArrayManip.downsample(array,fitCount,scalar)}else if(array.length<fitCount){return _ArrayManip.upsample(array,fitCount,scalar)}return array}static HSLToRGB(h,s,l,scalar=255){s/=100;l/=100;let c2=(1-Math.abs(2*l-1))*s,x4=c2*(1-Math.abs(h/60%2-1)),m=l-c2/2,r=0,g3=0,b2=0;if(0<=h&&h<60){r=c2;g3=x4;b2=0}else if(60<=h&&h<120){r=x4;g3=c2;b2=0}else if(120<=h&&h<180){r=0;g3=c2;b2=x4}else if(180<=h&&h<240){r=0;g3=x4;b2=c2}else if(240<=h&&h<300){r=x4;g3=0;b2=c2}else if(300<=h&&h<360){r=c2;g3=0;b2=x4}r=(r+m)*scalar;g3=(g3+m)*scalar;b2=(b2+m)*scalar;return[r,g3,b2]}static circularBuffer(arr,newEntries){if(newEntries.length<arr.length){let slice=arr.slice(newEntries.length);let len=arr.length;arr.splice(0,len,...slice,...newEntries)}else if(newEntries.length>arr.length){let len=arr.length;arr.splice(0,len,newEntries.slice(len-newEntries.length))}else{arr.splice(0,arr.length,...newEntries)}return arr}static reformatData(data,key){if(Array.isArray(data)){if(Array.isArray(data[0])){let d4={};data.forEach((arr,i)=>{d4[i]=arr});data=d4;if(isNaN(data[0][0]))return void 0}else if(key){data={[key]:data};if(isNaN(data[key][0]))return void 0}else{data={0:data};if(isNaN(data[0][0]))return void 0}}else if(typeof data==="object"){for(const key2 in data){if(typeof data[key2]==="number")data[key2]=[data[key2]];else if(data[key2]?.values){if(typeof data[key2].values==="number")data[key2].values=[data[key2].values]}if(isNaN(data[key2][0]))return void 0}}else if(typeof data==="string"){let split;if(data.includes("\\r\\n")){let lines=data.split("\\r\\n");data={};lines.forEach((l,j3)=>{if(l.includes("	")){split=l.split("	")}else if(l.includes(",")){split=l.split(",")}else if(l.includes("|")){split=l.split("|")}if(Array.isArray(split)){split.forEach((val,i)=>{if(val.includes(":")){let[key2,v3]=val.split(":");let fl2=parseFloat(v3);if(fl2)data[key2]=[fl2];else return void 0}else{let fl2=parseFloat(val);if(fl2)data[i]=[fl2];else return void 0}})}})}else if(data.includes("	")){split=data.split("	")}else if(data.includes(",")){split=data.split(",")}else if(data.includes("|")){split=data.split("|")}data={};if(Array.isArray(split)){split.forEach((val,i)=>{if(val.includes(":")){let[key2,v3]=val.split(":");let fl2=parseFloat(v3);if(fl2)data[key2]=[fl2];else return void 0}else{let fl2=parseFloat(val);if(fl2)data[i]=[fl2];else return void 0}})}}else if(typeof data==="number"){if(key)data={[key]:[data]};else data={0:[data]}}return data}static padTime(data,lastValue,time,targetFit){let slopeIncr=(data[0]-lastValue)/time/targetFit;let padded=[...new Array(targetFit-data.length).map((_4,i)=>lastValue+slopeIncr*(i+1)),...data];return padded}static interpolateForTime(data,time,targetSPS){return _ArrayManip.interpolate(data,Math.ceil(targetSPS*time))}isTypedArray(x4){return ArrayBuffer.isView(x4)&&Object.prototype.toString.call(x4)!=="[object DataView]"}spliceTypedArray(arr,start,end){let s=arr.subarray(0,start);let e;if(end){e=arr.subarray(end+1)}let n;if(s.length>0||e?.length>0)n=new arr.constructor(s.length+e.length);if(s.length>0)n.set(s);if(e&&e.length>0)n.set(e,s.length);return n}};var ArrayManip=_ArrayManip;ArrayManip.bufferValues=(objects,property,keys,buffer)=>{if(!Array.isArray(keys)&&typeof keys==="object")keys=Object.keys(keys);if(!buffer){let object_keys=Object.keys(objects);if(keys)buffer=new Float32Array(object_keys.length*keys.length);else{if(typeof objects[object_keys[0]][property]==="object"){keys=Object.keys(objects[object_keys[0]][property]);buffer=new Float32Array(object_keys.length*keys.length)}else buffer=new Float32Array(object_keys.length)}}let i=0;for(const key in objects){if(objects[key][property]){if(keys){for(let j3=0;j3<keys.length;j3++){buffer[i]=objects[key][property][keys[j3]];i++}}else{buffer[i]=objects[key][property];i++}}}return buffer};var rechk=/^([<>])?(([1-9]\\d*)?([xcbB?hHiIfdsp]))*$/;var refmt=/([1-9]\\d*)?([xcbB?hHiIfdsp])/g;var str=(v3,o2,c2)=>String.fromCharCode(...new Uint8Array(v3.buffer,v3.byteOffset+o2,c2));var rts=(v3,o2,c2,s)=>new Uint8Array(v3.buffer,v3.byteOffset+o2,c2).set(s.split("").map(str3=>str3.charCodeAt(0)));var pst=(v3,o2,c2)=>str(v3,o2+1,Math.min(v3.getUint8(o2),c2-1));var tsp=(v3,o2,c2,s)=>{v3.setUint8(o2,s.length);rts(v3,o2+1,c2-1,s)};var lut=le3=>({x:c2=>[1,c2,0],c:c2=>[c2,1,o2=>({u:v3=>str(v3,o2,1),p:(v3,c3)=>rts(v3,o2,1,c3)})],"?":c2=>[c2,1,o2=>({u:v3=>Boolean(v3.getUint8(o2)),p:(v3,B2)=>v3.setUint8(o2,B2)})],b:c2=>[c2,1,o2=>({u:v3=>v3.getInt8(o2),p:(v3,b2)=>v3.setInt8(o2,b2)})],B:c2=>[c2,1,o2=>({u:v3=>v3.getUint8(o2),p:(v3,B2)=>v3.setUint8(o2,B2)})],h:c2=>[c2,2,o2=>({u:v3=>v3.getInt16(o2,le3),p:(v3,h)=>v3.setInt16(o2,h,le3)})],H:c2=>[c2,2,o2=>({u:v3=>v3.getUint16(o2,le3),p:(v3,H3)=>v3.setUint16(o2,H3,le3)})],i:c2=>[c2,4,o2=>({u:v3=>v3.getInt32(o2,le3),p:(v3,i)=>v3.setInt32(o2,i,le3)})],I:c2=>[c2,4,o2=>({u:v3=>v3.getUint32(o2,le3),p:(v3,I2)=>v3.setUint32(o2,I2,le3)})],f:c2=>[c2,4,o2=>({u:v3=>v3.getFloat32(o2,le3),p:(v3,f)=>v3.setFloat32(o2,f,le3)})],d:c2=>[c2,8,o2=>({u:v3=>v3.getFloat64(o2,le3),p:(v3,d4)=>v3.setFloat64(o2,d4,le3)})],s:c2=>[1,c2,o2=>({u:v3=>str(v3,o2,c2),p:(v3,s)=>rts(v3,o2,c2,s.slice(0,c2))})],p:c2=>[1,c2,o2=>({u:v3=>pst(v3,o2,c2),p:(v3,s)=>tsp(v3,o2,c2,s.slice(0,c2-1))})]});var errbuf=new RangeError("Structure larger than remaining buffer");var errval=new RangeError("Not enough values for structure");var _ByteParser=class extends ArrayManip{static toDataView(value2){if(!(value2 instanceof DataView)){if(typeof value2==="string"&&parseInt(value2))value2=parseInt(value2);if(typeof value2==="string"){let enc=new TextEncoder;let hascodes={};for(const code in _ByteParser.codes){while(value2.indexOf(code)>-1){let idx=value2.indexOf(code);value2=value2.replace(code,"");hascodes[idx]=code}}let encoded=Array.from(enc.encode(value2));for(const key in hascodes){encoded.splice(parseInt(key),0,_ByteParser.codes[hascodes[key]])}value2=new DataView(new Uint8Array(encoded).buffer)}else if(typeof value2==="number"){let tmp=value2;if(value2<256){value2=new DataView(new ArrayBuffer(1));value2.setUint8(0,tmp)}else if(value2<65536){value2=new DataView(new ArrayBuffer(2));value2.setInt16(0,tmp)}else{value2=new DataView(new ArrayBuffer(4));value2.setUint32(0,tmp)}}else if(value2 instanceof ArrayBuffer||typeof SharedArrayBuffer!=="undefined"&&value2 instanceof SharedArrayBuffer){value2=new DataView(value2)}else if(Array.isArray(value2)){value2=new DataView(Uint8Array.from(value2).buffer)}else if(typeof value2==="object"){value2=new TextEncoder().encode(JSON.stringify(value2))}}return value2}static searchBuffer(buffer,searchString,limit){var needle=searchString;var haystack=buffer;var search=_ByteParser.boyerMoore(needle);var skip=search.byteLength;var indices=[];for(var i=search(haystack);i!==-1;i=search(haystack,i+skip)){indices.push(i);if(limit){if(indices.length>=limit)break}}return indices}static bytesToInt16(x0,x1){let int16=(255&x0)<<8|255&x1;if((int16&32768)>0){int16|=4294901760}else{int16&=65535}return int16}static bytesToUInt16(x0,x1){return x0*256+x1}static Uint16ToBytes(y5){return[y5&255,y5>>8&255]}static bytesToInt24(x0,x1,x22){let int24=(255&x0)<<16|(255&x1)<<8|255&x22;if((int24&8388608)>0){int24|=4278190080}else{int24&=16777215}return int24}static bytesToUInt24(x0,x1,x22){return x0*65536+x1*256+x22}static Uint24ToBytes(y5){return[y5&255,y5>>8&255,y5>>16&255]}static bytesToInt32(x0,x1,x22,x32){let int32=(255&x0)<<24|(255&x1)<<16|(255&x22)<<8|255&x32;if((int32&2147483648)>0){int32|=0}else{int32&=4294967295}return int32}static bytesToUInt32(x0,x1,x22,x32){return x0*16777216+x1*65536+x22*256+x32}static Uint32ToBytes(y5){return[y5&255,y5>>8&255,y5>>16&255,y5>>24&255]}static get2sCompliment(val,nbits3){if(val>4294967296)return null;return val<<32-nbits3>>32-nbits3}static getSignedInt(...args){let pos=0;function getInt(size){var value2=0;var first=true;while(size--){if(first){let byte=args[pos++];value2+=byte&127;if(byte&128){value2-=128}first=false}else{value2*=256;value2+=args[pos++]}}return value2}return getInt(args.length)}static asUint8Array(input){if(input instanceof Uint8Array){return input}else if(typeof input==="string"){var arr=new Uint8Array(input.length);for(var i=0;i<input.length;i++){var c2=input.charCodeAt(i);if(c2>127){throw new TypeError("Only ASCII patterns are supported")}arr[i]=c2}return arr}else{return new Uint8Array(input)}}static boyerMoore(patternBuffer){var pattern=_ByteParser.asUint8Array(patternBuffer);var M3=pattern.length;if(M3===0){throw new TypeError("patternBuffer must be at least 1 byte long")}var R3=256;var rightmost_positions=new Int32Array(R3);for(var c2=0;c2<R3;c2++){rightmost_positions[c2]=-1}for(var j3=0;j3<M3;j3++){rightmost_positions[pattern[j3]]=j3}var boyerMooreSearch=(txtBuffer,start,end)=>{var txt=_ByteParser.asUint8Array(txtBuffer);if(start===void 0)start=0;if(end===void 0)end=txt.length;var pat=pattern;var right=rightmost_positions;var lastIndex=end-pat.length;var lastPatIndex=pat.length-1;var skip;for(var i=start;i<=lastIndex;i+=skip){skip=0;for(var j4=lastPatIndex;j4>=0;j4--){var c3=txt[i+j4];if(pat[j4]!==c3){skip=Math.max(1,j4-right[c3]);break}}if(skip===0){return i}}return-1};boyerMooreSearch.byteLength=pattern.byteLength;return boyerMooreSearch}static struct(format){let fns=[],size=0,m=rechk.exec(format);if(!m){throw new RangeError("Invalid format string")}const t2=lut("<"===m[1]),lu=(n,c2)=>t2[c2](n?parseInt(n,10):1);while(m=refmt.exec(format)){((r,s,f)=>{for(let i=0;i<r;++i,size+=s){if(f){fns.push(f(size))}}})(...lu(...m.slice(1)))}const unpack_from=(arrb,offs)=>{if(arrb.byteLength<(offs|0)+size){throw errbuf}let v3=new DataView(arrb,offs|0);return fns.map(f=>f.u(v3))};const pack_into=(arrb,offs,...values)=>{if(values.length<fns.length){throw errval}if(arrb.byteLength<offs+size){throw errbuf}const v3=new DataView(arrb,offs);new Uint8Array(arrb,offs,size).fill(0);fns.forEach((f,i)=>f.p(v3,values[i]))};const pack=(...values)=>{let b2=new ArrayBuffer(size);pack_into(b2,0,...values);return b2};const unpack=arrb=>unpack_from(arrb,0);function*iter_unpack(arrb){for(let offs=0;offs+size<=arrb.byteLength;offs+=size){yield unpack_from(arrb,offs)}}return Object.freeze({unpack,pack,unpack_from,pack_into,iter_unpack,format,size})}};var ByteParser=_ByteParser;ByteParser.codes={"\\\\n":10,"\\\\r":13,"\\\\t":9,"\\\\s":32,"\\\\b":8,"\\\\f":12,"\\\\":92};var WebSerial=class extends ByteParser{constructor(){super(...arguments);this.streams={};this.createStream=options=>{let stream={_id:options._id?options._id:`stream${Math.floor(Math.random()*1e15)}`,info:options.port.getInfo(),running:false,...options};if(options.port?.readable){if(options.transforms){stream.reader=WebSerial.setStreamTransforms(options.port.readable,options.transforms).getReader()}else{stream.reader=options.port.readable.getReader()}}this.streams[stream._id]=stream;return stream}}getPorts(){return navigator.serial.getPorts()}requestPort(usbVendorId,usbProductId){let options={};if(usbVendorId){options.usbVendorId=usbVendorId}if(usbProductId){options.usbProductId=usbProductId}if(options.usbVendorId)return navigator.serial.requestPort({filters:[options]});else return navigator.serial.requestPort()}openPort(port,options){if(options)options=Object.assign({},options);if(options?.ondisconnect){port.ondisconnect=options.ondisconnect;delete options.ondisconnect}return port.open(options).then(()=>{if(options?.onconnect)options.onconnect(port)})}async readWithTimeout(port,timeout){const reader=port.readable.getReader();const timer=setTimeout(()=>{reader.releaseLock()},timeout);const result=await reader.read();clearTimeout(timer);reader.releaseLock();return result}async writePort(port,message){const writer=port.writable.getWriter();await writer.write(WebSerial.toDataView(message));writer.releaseLock();return true}getSignals(port){return port.getSignals()}setSignals(port,signals){return port.setSignals(signals)}readStream(stream){if(stream.reader&&!stream.running){let reader=stream.reader;if(stream.buffering){if(typeof stream.buffering!=="object")stream.buffering={};if(!stream.buffering.buffer){stream.buffering.buffer=[]}if(!stream.buffering.searchBytes)stream.buffering.searchBytes=new Uint8Array([13,10])}let readLoop=()=>{if(stream.port.readable&&stream.running){reader.read().then(result=>{if(result.done)reader.releaseLock();else{if(stream.buffering){stream.buffering.buffer.push(...result.value);const needle=stream.buffering.searchBytes;const haystack=stream.buffering.buffer;const search=WebSerial.boyerMoore(needle);const skip=search.byteLength;let nextIndex=-1;let used=stream.buffering.lockIdx??0;for(var i=search(haystack);i!==-1;i=search(haystack,i+skip)){if(!stream.buffering.locked&&!("lockIdx"in stream.buffering))used=stream.buffering.lockIdx=i;else{nextIndex=i;if(nextIndex>=0){const len=nextIndex-used;if(!stream.buffering.locked){const line=stream.buffering.buffer.splice(stream.buffering.lockIdx,len);const data=new Uint8Array(line.slice(stream.buffering.searchBytes.length));stream.ondata(data);stream.buffering.locked=true}else if(len>0){const line=stream.buffering.buffer.splice(stream.buffering.lockIdx,len);const data=new Uint8Array(line.slice(stream.buffering.searchBytes.length));stream.ondata(new Uint8Array(data))}used=nextIndex}}}}else stream.ondata(result.value);setTimeout(()=>{readLoop()},stream.frequency)}}).catch(er2=>{console.error(stream._id," Read error:",er2);if(er2.message.includes("overrun")||er2.message.includes("framing")){delete stream.reader;this.reconnect(stream)}})}else if(!stream.running&&stream.port.readable){try{reader.releaseLock()}catch(er2){console.error(er2)}}};stream.running=true;readLoop();return stream}return void 0}writeStream(stream,message){if(typeof stream==="string")stream=this.streams[stream];if(stream.port.writable){let writer=stream.port.writable.getWriter();writer.write(WebSerial.toDataView(message));writer.releaseLock();return true}return void 0}closeStream(stream,onclose){if(typeof stream==="string")stream=this.streams[stream];stream.running=false;return new Promise((res,rej)=>{if(stream.settings.beforedisconnect){stream.settings.beforedisconnect(this,stream.port)}setTimeout(async()=>{if(stream.port.readable&&stream.reader){try{stream.reader.releaseLock()}catch(er2){console.error(er2)}if(stream.transforms)try{await stream.reader.cancel()}catch(err){console.error(err)}}try{await stream.port.close().then(()=>{if(onclose)onclose(this.streams[stream._id])});delete this.streams[stream._id];res(true)}catch(er2){rej(er2)}},300)})}reconnect(stream,options){if(typeof stream==="string")stream=this.streams[stream];return new Promise((res,rej)=>{if(typeof stream!=="object"){rej(void 0);return}let info=stream.port.getInfo();this.closeStream(stream._id).then(closed=>{setTimeout(()=>{this.getPorts().then(ports=>{for(let i=0;i<ports.length;i++){if(ports[i].getInfo().usbVendorId===info.usbVendorId&&ports[i].getInfo().usbProductId===info.usbProductId){if(!options)options=stream;else options._id=stream._id;delete options.port;this.openPort(ports[i],options.settings).then(()=>{const stream2=this.createStream({...options,port:ports[i]});this.readStream(stream2);res(stream2)}).catch(rej)}}}).catch(rej)},100)})})}static setStreamTransforms(stream,transforms){let transform=[];Object.keys(transforms).forEach(t2=>{let opt=transforms[t2];if(opt instanceof TransformStream){transform.push(opt)}else{if(!opt.start)opt.start=function start(){};if(!opt.flush)opt.flush=function flush(){};let transformer=new TransformStream({start:opt.start,transform:opt.transform,flush:opt.flush},opt.writableStrategy,opt.readableStrategy);transform.push(transformer)}});let str3=stream;transform.forEach(transform2=>{str3=str3.pipeThrough(transform2)});return str3}};function ads131m08codec(data){let arr;if(data.getInt8)arr=new Uint8Array(data.buffer);else if(!data.buffer)arr=new Uint8Array(data);else arr=data;let output={0:new Array(9),1:new Array(9),2:new Array(9),3:new Array(9),4:new Array(9),5:new Array(9),6:new Array(9),7:new Array(9),timestamp:Date.now()};for(let i=0;i<9;i++){let j3=i*25;output[0][i]=ByteParser.bytesToInt24(arr[j3],arr[j3+1],arr[j3+2]);output[1][i]=ByteParser.bytesToInt24(arr[j3+3],arr[j3+4],arr[j3+5]);output[2][i]=ByteParser.bytesToInt24(arr[j3+6],arr[j3+7],arr[j3+8]);output[3][i]=ByteParser.bytesToInt24(arr[j3+9],arr[j3+10],arr[j3+11]);output[4][i]=ByteParser.bytesToInt24(arr[j3+12],arr[j3+13],arr[j3+14]);output[5][i]=ByteParser.bytesToInt24(arr[j3+15],arr[j3+16],arr[j3+17]);output[6][i]=ByteParser.bytesToInt24(arr[j3+18],arr[j3+19],arr[j3+20]);output[7][i]=ByteParser.bytesToInt24(arr[j3+21],arr[j3+22],arr[j3+23])}return output}var decoder=new TextDecoder;function ads131m08_arduinocodec(data){const parsed=decoder.decode(data);let split;if(parsed.includes("|"))split=parsed.split("|");else if(split.includes(","))split=parsed.split(",");else split=parsed.split("	");return{"0":parseInt(split[0]),"1":parseInt(split[1]),"2":parseInt(split[2]),"3":parseInt(split[3]),"4":parseInt(split[4]),"5":parseInt(split[5]),"6":parseInt(split[6]),"7":parseInt(split[7]),timestamp:Date.now()}}var sps=250;var defaultChartSetting={nSec:10,sps,units:"mV"};var ads131m08ChartSettings={lines:{"0":JSON.parse(JSON.stringify(defaultChartSetting)),"1":JSON.parse(JSON.stringify(defaultChartSetting)),"2":JSON.parse(JSON.stringify(defaultChartSetting)),"3":JSON.parse(JSON.stringify(defaultChartSetting)),"4":JSON.parse(JSON.stringify(defaultChartSetting)),"5":JSON.parse(JSON.stringify(defaultChartSetting)),"6":JSON.parse(JSON.stringify(defaultChartSetting)),"7":JSON.parse(JSON.stringify(defaultChartSetting))}};var gain=32;var nbits=24;var vref=1.2;var defaultsetting={sps,useDCBlock:false,useBandpass:false,bandpassLower:3,bandpassUpper:45,useScaling:true,scalar:.96*1e3*vref/(gain*(Math.pow(2,nbits)-1))};var ads131m08FilterSettings={"0":JSON.parse(JSON.stringify(defaultsetting)),"1":JSON.parse(JSON.stringify(defaultsetting)),"2":JSON.parse(JSON.stringify(defaultsetting)),"3":JSON.parse(JSON.stringify(defaultsetting)),"4":JSON.parse(JSON.stringify(defaultsetting)),"5":JSON.parse(JSON.stringify(defaultsetting)),"6":JSON.parse(JSON.stringify(defaultsetting)),"7":JSON.parse(JSON.stringify(defaultsetting))};var accScale=.002/Math.pow(2,4);var getAcc=(arr,output,channels=8)=>{const accIdx=channels*3+1;const sum=(a,b2)=>a+b2;const accSum=arr.slice(accIdx).reduce(sum,0);if(accSum!==0){output.ax=accScale*ByteParser.bytesToInt16(arr[accIdx],arr[accIdx+1]);output.ay=accScale*ByteParser.bytesToInt16(arr[accIdx+2],arr[accIdx+3]);output.az=accScale*ByteParser.bytesToInt16(arr[accIdx+4],arr[accIdx+5])}};function cytoncodec(data){let arr;if(!data.buffer)arr=new Uint8Array(data);else arr=data;let output={};for(let i=0;i<8;i++){let idx=1+3*i;output[i]=ByteParser.bytesToInt24(arr[idx],arr[idx+1],arr[idx+2])}getAcc(arr,output);output.timestamp=Date.now();return output}function daisycytoncodec(data){let arr;if(data.getInt8)arr=new Uint8Array(data.buffer);else if(!data.buffer)arr=new Uint8Array(data);else arr=data;let output={};for(let i=0;i<8;i++){let idx=1+3*i;if(arr[0]%2===0)output[i+7]=ByteParser.bytesToInt24(arr[idx],arr[idx+1],arr[idx+2]);else output[i]=ByteParser.bytesToInt24(arr[idx],arr[idx+1],arr[idx+2])}getAcc(arr,output);return output}var sps2=250;var cytonSerialSettings={baudRate:115200,codec:cytoncodec,write:"b",beforedisconnect:(client,port)=>{client.writePort(port,"s")},buffering:{searchBytes:new Uint8Array([192,160])},sps:sps2};var daisycytonSerialSettings={baudRate:115200,codec:daisycytoncodec,write:"b",beforedisconnect:(client,port)=>{client.writePort(port,"s")},buffering:{searchBytes:new Uint8Array([192,160])},sps:sps2};var defaultChartSetting2={nSec:10,sps:sps2,units:"mV"};var defaultChartSetting22={nSec:10,sps:sps2};var cytonChartSettings={lines:{"0":JSON.parse(JSON.stringify(defaultChartSetting2)),"1":JSON.parse(JSON.stringify(defaultChartSetting2)),"2":JSON.parse(JSON.stringify(defaultChartSetting2)),"3":JSON.parse(JSON.stringify(defaultChartSetting2)),"4":JSON.parse(JSON.stringify(defaultChartSetting2)),"5":JSON.parse(JSON.stringify(defaultChartSetting2)),"6":JSON.parse(JSON.stringify(defaultChartSetting2)),"7":JSON.parse(JSON.stringify(defaultChartSetting2)),"ax":JSON.parse(JSON.stringify(defaultChartSetting22)),"ay":JSON.parse(JSON.stringify(defaultChartSetting22)),"az":JSON.parse(JSON.stringify(defaultChartSetting22))},generateNewLines:true};var defaultsetting2={sps:sps2,useDCBlock:true,useBandpass:true,bandpassLower:3,bandpassUpper:45,useScaling:true,scalar:1e3*4.5/(24*(Math.pow(2,23)-1))};var cytonFilterSettings={"0":JSON.parse(JSON.stringify(defaultsetting2)),"1":JSON.parse(JSON.stringify(defaultsetting2)),"2":JSON.parse(JSON.stringify(defaultsetting2)),"3":JSON.parse(JSON.stringify(defaultsetting2)),"4":JSON.parse(JSON.stringify(defaultsetting2)),"5":JSON.parse(JSON.stringify(defaultsetting2)),"6":JSON.parse(JSON.stringify(defaultsetting2)),"7":JSON.parse(JSON.stringify(defaultsetting2)),"8":JSON.parse(JSON.stringify(defaultsetting2)),"9":JSON.parse(JSON.stringify(defaultsetting2)),"10":JSON.parse(JSON.stringify(defaultsetting2)),"11":JSON.parse(JSON.stringify(defaultsetting2)),"12":JSON.parse(JSON.stringify(defaultsetting2)),"13":JSON.parse(JSON.stringify(defaultsetting2)),"14":JSON.parse(JSON.stringify(defaultsetting2)),"15":JSON.parse(JSON.stringify(defaultsetting2))};function freeeeg128codec(data){let arr;if(data.getInt8)arr=new Uint8Array(data.buffer);else if(!data.buffer)arr=new Uint8Array(data);else arr=data;let output={};for(let i=0;i<128;i++){let idx=i*3+1;output[i]=ByteParser.bytesToInt24(arr[idx],arr[idx+1],arr[idx+2])}let accIdx=385;output["ax"]=ByteParser.bytesToInt16(arr[accIdx],arr[accIdx+1]);output["ay"]=ByteParser.bytesToInt16(arr[accIdx+2],arr[accIdx+3]);output["az"]=ByteParser.bytesToInt16(arr[accIdx+4],arr[accIdx+5]);output["gx"]=ByteParser.bytesToInt16(arr[accIdx+6],arr[accIdx+7]);output["gy"]=ByteParser.bytesToInt16(arr[accIdx+8],arr[accIdx+9]);output["gz"]=ByteParser.bytesToInt16(arr[accIdx+10],arr[accIdx+11]);output.timestamp=Date.now();return output}var sps3=250;var freeeeg128SerialSettings={baudRate:921600,bufferSize:2e3,frequency:1.9,codec:freeeeg128codec,sps:sps3,buffering:{searchBytes:new Uint8Array([192,160])}};var freeeeg128ChartSettings={lines:{"ax":{nSec:10,sps:sps3},"ay":{nSec:10,sps:sps3},"az":{nSec:10,sps:sps3},"gx":{nSec:10,sps:sps3},"gy":{nSec:10,sps:sps3},"gz":{nSec:10,sps:sps3}}};var freeeeg128FilterSettings={};for(let i=0;i<128;i++){freeeeg128ChartSettings.lines[i]={sps:sps3,nSec:10,units:"mV"};freeeeg128FilterSettings[i]={sps:250,useDCBlock:true,useBandpass:true,bandpassLower:3,bandpassUpper:45,scalar:1e3*2.5/(32*(Math.pow(2,24)-1))}}function freeeeg32codec(data){let arr;if(data.getInt8)arr=new Uint8Array(data.buffer);else if(!data.buffer)arr=new Uint8Array(data);else arr=data;let output={};for(let i=0;i<32;i++){let idx=i*3+1;output[i]=ByteParser.bytesToInt24(arr[idx],arr[idx+1],arr[idx+2])}let accIdx=97;output["ax"]=ByteParser.bytesToInt16(arr[accIdx],arr[accIdx+1]);output["ay"]=ByteParser.bytesToInt16(arr[accIdx+2],arr[accIdx+3]);output["az"]=ByteParser.bytesToInt16(arr[accIdx+4],arr[accIdx+5]);output["gx"]=ByteParser.bytesToInt16(arr[accIdx+6],arr[accIdx+7]);output["gy"]=ByteParser.bytesToInt16(arr[accIdx+8],arr[accIdx+9]);output["gz"]=ByteParser.bytesToInt16(arr[accIdx+10],arr[accIdx+11]);output.timestamp=Date.now();return output}var sps4=512;var freeeeg32SerialSettings={baudRate:921600,bufferSize:2e3,frequency:1.9,codec:freeeeg32codec,sps:sps4,buffering:{searchBytes:new Uint8Array([192,160])}};var freeeeg32_optical_SerialSettings={baudRate:1e6,bufferSize:2e3,frequency:1.9,codec:freeeeg32codec,sps:sps4,buffering:{searchBytes:new Uint8Array([192,160])}};var defaultChartSetting3={nSec:10,sps:sps4};var freeeeg32ChartSettings={lines:{"ax":JSON.parse(JSON.stringify(defaultChartSetting3)),"ay":JSON.parse(JSON.stringify(defaultChartSetting3)),"az":JSON.parse(JSON.stringify(defaultChartSetting3)),"gx":JSON.parse(JSON.stringify(defaultChartSetting3)),"gy":JSON.parse(JSON.stringify(defaultChartSetting3)),"gz":JSON.parse(JSON.stringify(defaultChartSetting3))}};var freeeeg32FilterSettings={};for(let i=0;i<32;i++){freeeeg32ChartSettings.lines[i]={sps:sps4,nSec:10,units:"mV"};freeeeg32FilterSettings[i]={sps:sps4,useDCBlock:true,useBandpass:true,bandpassLower:3,bandpassUpper:45,useScaling:true,scalar:1e3*2.5/(8*(Math.pow(2,24)-1))}}var textdecoder=new TextDecoder;function hegduinocodec(value2){let output={timestamp:0,red:0,infrared:0,heg:0,ambient:0,temperature:0};let txt=textdecoder.decode(value2);let line=txt.split("|");if(line.length===3){output.timestamp=Date.now();output.red=parseInt(line[0]);output.infrared=parseInt(line[1]);output.heg=parseFloat(line[2])}else if(line.length>=2){output.timestamp=Date.now();output.red=parseInt(line[1]);output.infrared=parseInt(line[2]);output.heg=parseFloat(line[3]);if(line[4])output.ambient=parseFloat(line[4]);if(line[5])output.temperature=parseFloat(line[5]);return output}else return txt}var sps5=40;var hegduinoSerialSettings={baudRate:115200,write:"t\\n",codec:hegduinocodec,sps:sps5};var hegduinoV1SerialSettings=Object.assign({},hegduinoSerialSettings);hegduinoV1SerialSettings.sps=19;var hegduinoBLESettings={sps:sps5,services:{["6E400001-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]:{"6e400002-b5a3-f393-e0a9-e50e24dcca9e":{write:"t"},"6e400003-b5a3-f393-e0a9-e50e24dcca9e":{notify:true,notifyCallback:void 0,codec:hegduinocodec,sps:sps5}},["6E400004-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]:{["6E400005-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]:{read:true},["6E400006-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]:{write:void 0,notify:true,notifyCallback:void 0},["6E400007-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]:{read:true}}},androidWebBLE:"o"};var hegduinoV1BLESettings=Object.assign({},hegduinoSerialSettings);hegduinoV1BLESettings.sps=19;function max3010xcodec(data){let arr;if(data.getInt8)arr=new Uint8Array(data.buffer);else if(!data.buffer)arr=new Uint8Array(data);else arr=data;let pktCt=32;const output={"red":new Array(pktCt),"ir":new Array(pktCt),"max_dietemp":ByteParser.get2sCompliment(arr[193],8)+.0625*arr[194],"timestamp":Date.now()};let i=0;while(i<pktCt){let idx=i*6;if(i%2===0){output["ir"][i]=(arr[idx+1]<<16|arr[idx+2]<<8|arr[idx+3])&524287;output["ir"][i+1]=(arr[idx+4]<<16|arr[idx+5]<<8|arr[idx+6])&524287}else{output["red"][i-1]=(arr[idx+1]<<16|arr[idx+2]<<8|arr[idx+3])&524287;output["red"][i]=(arr[idx+4]<<16|arr[idx+5]<<8|arr[idx+6])&524287}i++}return output}function mpu6050codec(data){let arr;if(data.getInt8)arr=new Uint8Array(data.buffer);else if(!data.buffer)arr=new Uint8Array(data);else arr=data;let output={"ax":new Array(20),"ay":new Array(20),"az":new Array(20),"gx":new Array(20),"gy":new Array(20),"gz":new Array(20),"mpu_dietemp":(ByteParser.bytesToInt16(arr[241],arr[242])+521)/340+35,timestamp:Date.now()};for(let i=0;i<20;i++){let idx=i*12;output.ax[i]=ByteParser.bytesToInt16(arr[idx+1],arr[idx+2]);output.ay[i]=ByteParser.bytesToInt16(arr[idx+3],arr[idx+4]);output.az[i]=ByteParser.bytesToInt16(arr[idx+5],arr[idx+6]);output.gx[i]=ByteParser.bytesToInt16(arr[idx+7],arr[idx+8]);output.gy[i]=ByteParser.bytesToInt16(arr[idx+9],arr[idx+10]);output.gz[i]=ByteParser.bytesToInt16(arr[idx+11],arr[idx+12])}return output}function cognixionONE_EEG_codec(data){let arr;if(data.getInt8)arr=new Uint8Array(data.buffer);else if(!data.buffer)arr=new Uint8Array(data);else arr=data;let output={0:new Array,1:new Array,2:new Array,3:new Array,4:new Array,5:new Array,6:new Array,7:new Array,timestamp:Date.now()};for(let i=0;i<7;i++){let j3=i*26+1;if(!arr[j3+23])break;output[0][i]=ByteParser.bytesToUInt24(arr[j3],arr[j3+1],arr[j3+2]);output[1][i]=ByteParser.bytesToUInt24(arr[j3+3],arr[j3+4],arr[j3+5]);output[2][i]=ByteParser.bytesToUInt24(arr[j3+6],arr[j3+7],arr[j3+8]);output[3][i]=ByteParser.bytesToUInt24(arr[j3+9],arr[j3+10],arr[j3+11]);output[4][i]=ByteParser.bytesToUInt24(arr[j3+12],arr[j3+13],arr[j3+14]);output[5][i]=ByteParser.bytesToUInt24(arr[j3+15],arr[j3+16],arr[j3+17]);output[6][i]=ByteParser.bytesToUInt24(arr[j3+18],arr[j3+19],arr[j3+20]);output[7][i]=ByteParser.bytesToUInt24(arr[j3+21],arr[j3+22],arr[j3+23])}return output}var sps6=250;var cognixionONEBLESettings={services:{["82046698-6313-4BB1-9645-6BA28BF86DF5".toLowerCase()]:{["8204669A-6313-4BB1-9645-6BA28BF86DF5".toLowerCase()]:{notify:true,notifyCallback:void 0,codec:cognixionONE_EEG_codec,sps:sps6}},["82E12914-9AFA-4648-BD1B-8E2B3DC6DAAF".toLowerCase()]:{["82E12915-9AFA-4648-BD1B-8E2B3DC6DAAF".toLowerCase()]:{write:void 0},["82E12916-9AFA-4648-BD1B-8E2B3DC6DAAF".toLowerCase()]:{read:true}}},sps:sps6};var defaultChartSetting4={nSec:10,sps:sps6,units:"mV"};var cognixionONEChartSettings={lines:{"0":JSON.parse(JSON.stringify(defaultChartSetting4)),"1":JSON.parse(JSON.stringify(defaultChartSetting4)),"2":JSON.parse(JSON.stringify(defaultChartSetting4)),"3":JSON.parse(JSON.stringify(defaultChartSetting4)),"4":JSON.parse(JSON.stringify(defaultChartSetting4)),"5":JSON.parse(JSON.stringify(defaultChartSetting4)),"6":JSON.parse(JSON.stringify(defaultChartSetting4)),"7":JSON.parse(JSON.stringify(defaultChartSetting4))}};var PeanutCodes={2:{type:"POOR_SIGNAL",format:"<B",byteLength:1},144:{type:"heg",format:"<i",byteLength:4},145:{type:"filteredHEG",format:"<i",byteLength:4},147:{type:"rawdata4",format:"<iiii",byteLength:4*4},148:{type:"rawdata6",format:"<iiiiii",byteLength:4*6},160:{type:"sampleNumber",format:"<i",byteLength:4},176:{type:"debug0",format:"<i",byteLength:4},177:{type:"debug1",format:"<i",byteLength:4},178:{type:"debug2",format:"<i",byteLength:4},179:{type:"debug3",format:"<i",byteLength:4},180:{type:"debug4",format:"<iiiiii",byteLength:4*6},181:{type:"debug4",format:"<iiiiii",byteLength:4*6},182:{type:"rawdata27",format:"<B"+"i".repeat(26),byteLength:1+4*26}};function peanutcodec(data){let result={};let i=0;while(i<data.length){if(PeanutCodes[data[i]]&&i+1+PeanutCodes[data[i]].byteLength<=data.length){let slice=data.slice(i+1,i+1+PeanutCodes[data[i]].byteLength).buffer;let unpacked=ByteParser.struct(PeanutCodes[data[i]].format).unpack(slice);let code=PeanutCodes[data[i]].type;if(code==="unfilteredHEG"||code==="heg")unpacked=unpacked[0]/256;else if(code==="POOR_SIGNAL"||code==="sampleNumber"||code==="debug0"||code==="debug1"||code==="debug2"||code==="debug3")unpacked=unpacked[0];if(!result[PeanutCodes[data[i]].type]){if(Array.isArray(unpacked))result[PeanutCodes[data[i]].type]=unpacked;else result[PeanutCodes[data[i]].type]=[unpacked]}else{if(Array.isArray(unpacked))result[PeanutCodes[data[i]].type].push(...unpacked);else result[PeanutCodes[data[i]].type].push(unpacked)}i+=PeanutCodes[data[i]].byteLength+1}else i++}result.timestamp=Date.now();return result}var peanutSerialSettings={baudRate:38400,bufferSize:400,write:"protocol 3\\n",buffering:{searchBytes:new Uint8Array([170,170])},codec:peanutcodec,sps:10.101};var sealevel_hpa=1013.25;var bme280codec=data=>{let arr;if(data.getInt8)arr=new Uint8Array(data.buffer);else if(!data.buffer)arr=new Uint8Array(data);else arr=data;let output={timestamp:Date.now(),temp:[],pressure:[],altitude:[]};let mode=0;if(arr[0].length===74)mode=1;if(!mode){for(let j3=0;j3<3;j3++){let i=j3*16+2;let tint=ByteParser.bytesToInt32(arr[3+i],arr[2+i],arr[1+i],arr[0+i]);let tfrac=ByteParser.bytesToInt32(arr[7+i],arr[6+i],arr[5+i],arr[4+i]);output.temp.push(tint+tfrac/Math.pow(10,Math.ceil(Math.log10(tfrac))));let pint=10*ByteParser.bytesToInt32(arr[11+i],arr[10+i],arr[9+i],arr[8+i]);let pfrac=ByteParser.bytesToInt32(arr[15+i],arr[14+i],arr[13+i],arr[12+i]);output.pressure.push(pint+pfrac/Math.pow(10,Math.ceil(Math.log10(pfrac))));output.altitude.push(altitude(output.pressure[j3],output.temp[j3]))}}else{output.humidity=[];for(let j3=0;j3<3;j3++){let i=j3*24+2;let tint=ByteParser.bytesToInt32(arr[3+i],arr[2+i],arr[1+i],arr[0+i]);let tfrac=ByteParser.bytesToInt32(arr[7+i],arr[6+i],arr[5+i],arr[4+i]);output.temp.push(tint+tfrac/Math.pow(10,Math.ceil(Math.log10(tfrac))));let pint=10*ByteParser.bytesToInt32(arr[11+i],arr[10+i],arr[9+i],arr[8+i]);let pfrac=ByteParser.bytesToInt32(arr[15+i],arr[14+i],arr[13+i],arr[12+i]);output.pressure.push(pint+pfrac/Math.pow(10,Math.ceil(Math.log10(pfrac))));let hint=ByteParser.bytesToInt32(arr[19+i],arr[18+i],arr[17+i],arr[16+i]);let hfrac=ByteParser.bytesToInt32(arr[23+i],arr[22+i],arr[21+i],arr[20+i]);output.humidity.push(hint+hfrac/Math.pow(10,Math.ceil(Math.log10(hfrac))));output.altitude.push(altitude(output.pressure[j3],output.temp[j3]))}}return output};function altitude(pressure,temperature){return 44330*(1-Math.pow(pressure/sealevel_hpa,.1903))}function nrf5x_usbcodec(data){let arr;if(data.getInt8)arr=new Uint8Array(data.buffer);else if(!data.buffer)arr=new Uint8Array(data);else arr=data;const output={};if(arr[0]===2){Object.assign(output,ads131m08codec(arr.subarray(2)))}else if(arr[0]===3){let result=ads131m08codec(arr.subarray(2));Object.keys(result).forEach((key,i)=>{output[i+8]=result[key]})}else if(arr[0]===4){Object.assign(output,mpu6050codec(arr.subarray(2)))}else if(arr[0]===5){Object.assign(output,max3010xcodec(arr.subarray(2)))}else if(arr[0]===6){Object.assign(output,bme280codec(arr.subarray(2)))}else{Object.assign(output,ads131m08codec(arr))}return output}var nrf5xSerialSettings={baudRate:115200,buffering:{searchBytes:new Uint8Array([240,240])},codec:nrf5x_usbcodec,sps:250};var nrf5xBLESettings={sps:250,services:{"0000cafe-b0ba-8bad-f00d-deadbeef0000":{"0001cafe-b0ba-8bad-f00d-deadbeef0000":{write:void 0},"0002cafe-b0ba-8bad-f00d-deadbeef0000":{notify:true,notifyCallback:void 0,codec:ads131m08codec,sps:250},"0003cafe-b0ba-8bad-f00d-deadbeef0000":{notify:true,notifyCallback:void 0,codec:max3010xcodec,sps:100},"0004cafe-b0ba-8bad-f00d-deadbeef0000":{notify:true,notifyCallback:void 0,codec:mpu6050codec,sps:100},"0005cafe-b0ba-8bad-f00d-deadbeef0000":{notify:true,notifyCallback:void 0,codec:ads131m08codec,sps:250},"0006cafe-b0ba-8bad-f00d-deadbeef0000":{notify:true,notifyCallback:void 0,codec:bme280codec,sps:3.33}}}};var defaultChartSetting5={nSec:10,sps:250,units:"mV"};var nrf5x_usbChartSettings={lines:{"0":JSON.parse(JSON.stringify(defaultChartSetting5)),"1":JSON.parse(JSON.stringify(defaultChartSetting5)),"2":JSON.parse(JSON.stringify(defaultChartSetting5)),"3":JSON.parse(JSON.stringify(defaultChartSetting5)),"4":JSON.parse(JSON.stringify(defaultChartSetting5)),"5":JSON.parse(JSON.stringify(defaultChartSetting5)),"6":JSON.parse(JSON.stringify(defaultChartSetting5)),"7":JSON.parse(JSON.stringify(defaultChartSetting5))},generateNewLines:true,cleanGeneration:false};var gain2=32;var nbits2=24;var vref2=1.2;var defaultsetting3={sps:250,useDCBlock:false,useBandpass:false,bandpassLower:3,bandpassUpper:45,useScaling:true,scalar:.96*1e3*vref2/(gain2*(Math.pow(2,nbits2)-1))};var nrf5x_usbFilterSettings={"0":JSON.parse(JSON.stringify(defaultsetting3)),"1":JSON.parse(JSON.stringify(defaultsetting3)),"2":JSON.parse(JSON.stringify(defaultsetting3)),"3":JSON.parse(JSON.stringify(defaultsetting3)),"4":JSON.parse(JSON.stringify(defaultsetting3)),"5":JSON.parse(JSON.stringify(defaultsetting3)),"6":JSON.parse(JSON.stringify(defaultsetting3)),"7":JSON.parse(JSON.stringify(defaultsetting3)),"8":JSON.parse(JSON.stringify(defaultsetting3)),"9":JSON.parse(JSON.stringify(defaultsetting3)),"10":JSON.parse(JSON.stringify(defaultsetting3)),"11":JSON.parse(JSON.stringify(defaultsetting3)),"12":JSON.parse(JSON.stringify(defaultsetting3)),"13":JSON.parse(JSON.stringify(defaultsetting3)),"14":JSON.parse(JSON.stringify(defaultsetting3)),"15":JSON.parse(JSON.stringify(defaultsetting3))};var textdecoder2=new TextDecoder;function statechangercodec(value2){let output={timestamp:0,left_red:0,left_infrared:0,left_heg:0,center_red:0,center_infrared:0,center_heg:0,right_red:0,right_infrared:0,right_heg:0};let txt=textdecoder2.decode(value2);let line=txt.split("|");if(line.length>=5){output.timestamp=Date.now();output.left_red=parseInt(line[1]);output.left_infrared=parseInt(line[2]);output.left_heg=parseFloat(line[3]);output.center_red=parseInt(line[4]);output.center_infrared=parseInt(line[5]);output.center_heg=parseFloat(line[6]);output.right_red=parseInt(line[7]);output.right_infrared=parseInt(line[8]);output.right_heg=parseFloat(line[9]);return output}else return txt}var statechangerSerialSettings={baudRate:115200,codec:statechangercodec};var statechangerBLESettings={services:{["6E400001-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]:{"6e400002-b5a3-f393-e0a9-e50e24dcca9e":{write:"t"},"6e400003-b5a3-f393-e0a9-e50e24dcca9e":{notify:true,notifyCallback:void 0,codec:statechangercodec}},["6E400004-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]:{["6E400005-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]:{read:true},["6E400006-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]:{write:void 0,notify:true,notifyCallback:void 0},["6E400007-B5A3-F393-E0A9-E50E24DCCA9E".toLowerCase()]:{read:true}}},androidWebBLE:"o"};function blueberrycodec(value2){let output={red:value2.getInt32(2),ir:value2.getInt32(6),ir2:value2.getInt32(10),timestamp:Date.now()};output.heg=output.red/(.5*(output.ir+output.ir2));return output}var sps7=40;var blueberryBLESettings={namePrefix:"blueberry",services:{"0f0e0d0c-0b0a-0908-0706-050403020100":{"1f1e1d1c-1b1a-1918-1716-151413121110":{write:void 0},"3f3e3d3c-3b3a-3938-3736-353433323130":{notify:true,notifyCallback:void 0,codec:blueberrycodec,sps:sps7}}},sps:sps7};function blueberryshortcodec(value2){let output={sred:value2.getInt32(2),sir:value2.getInt32(6),sir2:value2.getInt32(10),timestamp:Date.now()};output.sheg=output.sred/(.5*(output.sir+output.sir2));return output}function blueberrylongcodec(value2){let output={red:value2.getInt32(2),ir:value2.getInt32(6),ir2:value2.getInt32(10),timestamp:Date.now()};output.heg=output.sred/(.5*(output.ir+output.ir2));return output}var sps8=40;var blueberry2BLESettings={namePrefix:"blueberry",services:{"0f0e0d0c-0b0a-0908-0706-050403020100":{"1f1e1d1c-1b1a-1918-1716-151413121110":{write:void 0},"4f4e4d4c-4b6a-6968-6766-656463426160":{notify:true,notifyCallback:void 0,codec:blueberrylongcodec,sps:sps8},"4f4e4d4c-4b5a-5958-5756-555453425150":{notify:true,notifyCallback:void 0,codec:blueberryshortcodec,sps:sps8}}},sps:sps8};var defaultsetting1={sps:250,useDCBlock:true,useBandpass:true,bandpassLower:3,bandpassUpper:45};var ganglionFilterSettings={"0":JSON.parse(JSON.stringify(defaultsetting1)),"1":JSON.parse(JSON.stringify(defaultsetting1)),"2":JSON.parse(JSON.stringify(defaultsetting1)),"3":JSON.parse(JSON.stringify(defaultsetting1))};var defaultChartSetting6={nSec:10,sps:250,units:"mV"};var ganglionChartSettings={lines:{"0":JSON.parse(JSON.stringify(defaultChartSetting6)),"1":JSON.parse(JSON.stringify(defaultChartSetting6)),"2":JSON.parse(JSON.stringify(defaultChartSetting6)),"3":JSON.parse(JSON.stringify(defaultChartSetting6)),"ax":{nSec:10,sps:250,units:"mg"},"ay":{nSec:10,sps:250,units:"mg"},"az":{nSec:10,sps:250,units:"mg"}},generateNewLines:true};var defaultsetting4={sps:250,useDCBlock:true,useBandpass:true,bandpassLower:3,bandpassUpper:45};var museFilterSettings={"0":JSON.parse(JSON.stringify(defaultsetting4)),"1":JSON.parse(JSON.stringify(defaultsetting4)),"2":JSON.parse(JSON.stringify(defaultsetting4)),"3":JSON.parse(JSON.stringify(defaultsetting4)),"4":JSON.parse(JSON.stringify(defaultsetting4))};function hrcodec(data){return{hr:data.getInt8(1),timestamp:Date.now()}}var heartRateBLESettings={services:{"heart_rate":{"heart_rate_measurement":{notify:true,notifyCallback:void 0,codec:hrcodec}}}};var simulatorSettings={sps:250,simulate:{"0":{sps:250,freq:1,amplitude:1,offset:0},"1":{sps:250,freq:10,amplitude:1,offset:0},"2":{sps:250,freq:100,amplitude:.5,offset:.5},"3":{sps:250,freq:25,amplitude:1,offset:0}},connect:(settings={})=>{return new Promise(async(res,rej)=>{let _id=`simulated${Math.floor(Math.random()*1e15)}`;let info={_id,settings:Object.assign(Object.assign({},simulatorSettings),settings)};info.settings.looping=true;let loopTime=50;let lastTime=Date.now();let loop3=()=>{if(info.settings.looping){let newData={};let now=Date.now();let frame=now-lastTime;for(const key in info.settings.simulate){let newPoints=Math.floor(info.settings.simulate[key].sps*frame/1e3);newData[key]=new Array(newPoints).fill(0);newData[key]=newData[key].map((v3,i)=>{return Math.sin(2*Math.PI*info.settings.simulate[key].freq*.001*(lastTime+frame*(i+1)/newPoints))*info.settings.simulate[key].amplitude+info.settings.simulate[key].offset})}lastTime=now;newData.timestamp=lastTime;info.settings.ondata(newData);setTimeout(()=>{loop3()},loopTime)}};loop3();if(info.settings.onconnect)info.settings.onconnect(info);res(info)})},codec:reading=>{return reading},disconnect:info=>{console.log(info);info.settings.looping=false;info.settings.ondisconnect(info)},onconnect:info=>{console.log("simulator connected!",info)},ondisconnect:info=>{console.log("simulator disconnected!",info)},ondata:data=>{}};var Devices={BLE:{"nrf5x":nrf5xBLESettings,"hegduino":hegduinoBLESettings,"hegduinoV1":hegduinoV1BLESettings,"cognixionONE":cognixionONEBLESettings,"statechanger":statechangerBLESettings,"blueberry":blueberryBLESettings,"blueberry2":blueberry2BLESettings,"heart_rate":heartRateBLESettings},USB:{"nrf5x":nrf5xSerialSettings,"freeEEG32":freeeeg32SerialSettings,"freeEEG32_optical":freeeeg32_optical_SerialSettings,"freeEEG128":freeeeg128SerialSettings,"hegduino":hegduinoSerialSettings,"hegduinoV1":hegduinoV1SerialSettings,"cyton":cytonSerialSettings,"cyton_daisy":daisycytonSerialSettings,"peanut":peanutSerialSettings,"statechanger":statechangerSerialSettings,"cognixionONE":cytonSerialSettings},BLE_OTHER:{},USB_OTHER:{},OTHER:{"simulator":simulatorSettings}};var textdecoder3=new TextDecoder;var decoders={"raw":data=>{if(data?.buffer)return Array.from(new Uint8Array(data));else return data},"utf8":data=>{return textdecoder3.decode(data)},"console-f12":data=>{if(data?.buffer)data=Array.from(new Uint8Array(data));console.log(data);return data},"debug":(data,debugmessage)=>{if(data?.buffer)data=Array.from(new Uint8Array(data));console.log(debugmessage,data);return data},"ads131m08":ads131m08codec,"arduino_ads131m08":ads131m08_arduinocodec,"max3010x":max3010xcodec,"mpu6050":mpu6050codec,"bme280":bme280codec,"freeeeg32":freeeeg32codec,"freeeeg128":freeeeg128codec,"cyton":cytoncodec,"cognixionONE_BLE":cognixionONE_EEG_codec,"hegduino":hegduinocodec,"nrf5x":nrf5x_usbcodec,"peanut":peanutcodec,"statechanger":statechangercodec,"blueberry":blueberrycodec,"heart_rate":hrcodec};var BiquadChannelFilterer=class{constructor(options={sps:512,useSMA4:false,useNotch50:true,useNotch60:true,useLowpass:false,lowpassHz:100,useBandpass:false,bandpassLower:3,bandpassUpper:45,useDCBlock:true,DCBresonance:.995,trimOutliers:false,outlierTolerance:.2,useScaling:false,scalar:1}){this.idx=0;this.sps=options.sps;this.bandpassLower=options.bandpassLower?options.bandpassLower:3;this.bandpassUpper=options.bandpassUpper?options.bandpassUpper:45;this.useSMA4=options.useSMA4;this.last4=[];this.useNotch50=options.useNotch50;this.useNotch60=options.useNotch60;this.useLowpass=options.useLowpass;this.lowpassHz=options.lowpassHz?options.lowpassHz:100;this.useBandpass=options.useBandpass;this.useDCBlock=options.useDCBlock;this.DCBresonance=options.DCBresonance?options.DCBresonance:.995;this.useScaling=options.useScaling;this.scalar=options.scalar;this.trimOutliers=options.trimOutliers;this.outlierTolerance=options.outlierTolerance;let sps11=this.sps;this.notch50=[makeNotchFilter(50,sps11,2),makeNotchFilter(100,sps11,2)];this.notch60=[makeNotchFilter(60,sps11,2),makeNotchFilter(120,sps11,2)];this.lp1=[new Biquad("lowpass",this.lowpassHz,sps11),new Biquad("lowpass",this.lowpassHz,sps11),new Biquad("lowpass",this.lowpassHz,sps11),new Biquad("lowpass",this.lowpassHz,sps11)];this.bp1=[makeBandpassFilter(this.bandpassLower,this.bandpassUpper,sps11,1),makeBandpassFilter(this.bandpassLower,this.bandpassUpper,sps11,1),makeBandpassFilter(this.bandpassLower,this.bandpassUpper,sps11,1),makeBandpassFilter(this.bandpassLower,this.bandpassUpper,sps11,1)];this.dcb=new DCBlocker(options.DCBresonance?options.DCBresonance:.995)}reset(sps11=this.sps){this.notch50=[makeNotchFilter(50,sps11,2),makeNotchFilter(100,sps11,2)];this.notch60=[makeNotchFilter(60,sps11,2),makeNotchFilter(120,sps11,2)];this.lp1=[new Biquad("lowpass",this.lowpassHz,sps11),new Biquad("lowpass",this.lowpassHz,sps11),new Biquad("lowpass",this.lowpassHz,sps11),new Biquad("lowpass",this.lowpassHz,sps11)];this.bp1=[makeBandpassFilter(this.bandpassLower,this.bandpassUpper,sps11,1),makeBandpassFilter(this.bandpassLower,this.bandpassUpper,sps11,1),makeBandpassFilter(this.bandpassLower,this.bandpassUpper,sps11,1),makeBandpassFilter(this.bandpassLower,this.bandpassUpper,sps11,1)];this.dcb=new DCBlocker(this.DCBresonance)}setBandpass(bandpassLower=this.bandpassLower,bandpassUpper=this.bandpassUpper,sps11=this.sps){this.bandpassLower=bandpassLower;this.bandpassUpper=bandpassUpper;this.bp1=[makeBandpassFilter(bandpassLower,bandpassUpper,sps11),makeBandpassFilter(bandpassLower,bandpassUpper,sps11),makeBandpassFilter(bandpassLower,bandpassUpper,sps11),makeBandpassFilter(bandpassLower,bandpassUpper,sps11)]}apply(latestData=0){let out=latestData;if(this.useScaling===true){out*=this.scalar}if(this.filtered&&this.trimOutliers&&this.outlierTolerance){if(Math.abs(out-this.filtered)>this.outlierTolerance){out=this.filtered}}if(this.useDCBlock===true){out=this.dcb.applyFilter(out)}if(this.useSMA4===true){if(this.last4.length<4){this.last4.push(out)}else{out=this.last4.reduce((accumulator,currentValue)=>accumulator+currentValue)/this.last4.length;this.last4.shift();this.last4.push(out)}}if(this.useNotch50===true){this.notch50.forEach((f,i)=>{out=f.applyFilter(out)})}if(this.useNotch60===true){this.notch60.forEach((f,i)=>{out=f.applyFilter(out)})}if(this.useLowpass===true){this.lp1.forEach((f,i)=>{out=f.applyFilter(out)})}if(this.useBandpass===true){this.bp1.forEach((f,i)=>{out=f.applyFilter(out)})}this.filtered=out;this.idx++;return out}};var Biquad=class{constructor(type,freq,sps11,Q2=1/Math.sqrt(2),dbGain=0){this.a0=0;this.a1=0;this.a2=0;this.b0=0;this.b1=0;this.b2=0;this.x1=0;this.x2=0;this.y1=0;this.y2=0;let types=["lowpass","highpass","bandpass","notch","peak","lowshelf","highshelf"];if(types.indexOf(type)<0){console.error("Valid types: \'lowpass\',\'highpass\',\'bandpass\',\'notch\',\'peak\',\'lowshelf\',\'highshelf\'");return}this.type=type;this.freq=freq;this.sps=sps11;this.Q=Q2;this.dbGain=dbGain;let A5=Math.pow(10,dbGain/40);let omega=2*Math.PI*freq/sps11;let sn3=Math.sin(omega);let cs2=Math.cos(omega);let alpha=sn3/(2*Q2);let beta=Math.sqrt(A5+A5);this[type](A5,sn3,cs2,alpha,beta);this.b0/=this.a0;this.b1/=this.a0;this.b2/=this.a0;this.a1/=this.a0;this.a2/=this.a0}lowpass(A5,sn3,cs2,alpha,beta){this.b0=(1-cs2)*.5;this.b1=1-cs2;this.b2=(1-cs2)*.5;this.a0=1+alpha;this.a1=-2*cs2;this.a2=1-alpha}highpass(A5,sn3,cs2,alpha,beta){this.b0=(1+cs2)*.5;this.b1=-(1+cs2);this.b2=(1+cs2)*.5;this.a0=1+alpha;this.a1=-2*cs2;this.a2=1-alpha}bandpass(A5,sn3,cs2,alpha,beta){this.b0=alpha;this.b1=0;this.b2=-alpha;this.a0=1+alpha;this.a1=-2*cs2;this.a2=1-alpha}notch(A5,sn3,cs2,alpha,beta){this.b0=1;this.b1=-2*cs2;this.b2=1;this.a0=1+alpha;this.a1=-2*cs2;this.a2=1-alpha}peak(A5,sn3,cs2,alpha,beta){this.b0=1+alpha*A5;this.b1=-2*cs2;this.b2=1-alpha*A5;this.a0=1+alpha/A5;this.a1=-2*cs2;this.a2=1-alpha/A5}lowshelf(A5,sn3,cs2,alpha,beta){this.b0=A5*(A5+1-(A5-1)*cs2+beta*sn3);this.b1=2*A5*(A5-1-(A5+1)*cs2);this.b2=A5*(A5+1-(A5-1)*cs2-beta*sn3);this.a0=A5+1+(A5+1)*cs2+beta*sn3;this.a1=2*(A5-1+(A5+1)*cs2);this.a2=A5+1+(A5-1)*cs2-beta*sn3}highshelf(A5,sn3,cs2,alpha,beta){this.b0=A5*(A5+1+(A5-1)*cs2+beta*sn3);this.b1=2*A5*(A5-1+(A5+1)*cs2);this.b2=A5*(A5+1-(A5-1)*cs2-beta*sn3);this.a0=A5+1-(A5+1)*cs2-beta*sn3;this.a1=2*(A5-1-(A5+1)*cs2);this.a2=A5+1-(A5-1)*cs2-beta*sn3}applyFilter(signal_step){let y5=this.b0*signal_step+this.b1*this.x1+this.b2*this.x2-this.a1*this.y1-this.a2*this.y2;this.x2=this.x1;this.x1=signal_step;this.y2=this.y1;this.y1=y5;return y5}zResult(freq){try{let phi=Math.pow(Math.sin(Math.PI*freq*2/(2*this.sps)),2);let result=(Math.pow(this.b0+this.b1+this.b2,2)-4*(this.b0*this.b1+4*this.b0*this.b2+this.b1*this.b2)*phi+16*this.b0*this.b2*phi*phi)/(Math.pow(1+this.a1+this.a2,2)-4*(this.a1+4*this.a2+this.a1*this.a2)*phi+16*this.a2*phi*phi);return result}catch(err){return-200}}static calcCenterFrequency(freqStart,freqEnd){return(freqStart+freqEnd)/2}static calcBandwidth(freqStart,freqEnd){return freqEnd-this.calcCenterFrequency(freqStart,freqEnd)}static calcBandpassQ(frequency,bandwidth,resonance=Math.pow(10,Math.floor(Math.log10(frequency)))){let Q2=resonance*Math.sqrt((frequency-bandwidth)*(frequency+bandwidth))/(2*bandwidth);return Q2}static calcNotchQ(frequency,bandwidth,resonance=Math.pow(10,Math.floor(Math.log10(frequency)))){let Q2=resonance*frequency*bandwidth/Math.sqrt((frequency-bandwidth)*(frequency+bandwidth));return Q2}};var DCBlocker=class{constructor(r=.995){this.r=r;this.y1=this.y2=this.x1=this.x2=0}applyFilter(signal_step){this.x2=this.x1;this.x1=signal_step;let y5=this.x1-this.x2+this.r*this.y1;this.y2=this.y1;this.y1=y5;return y5}};var makeNotchFilter=(frequency,sps11,bandwidth)=>{return new Biquad("notch",frequency,sps11,Biquad.calcNotchQ(frequency,bandwidth),0)};var makeBandpassFilter=(freqStart,freqEnd,sps11,resonance=Math.pow(10,Math.floor(Math.log10(Biquad.calcCenterFrequency(freqStart,freqEnd)))))=>{return new Biquad("bandpass",Biquad.calcCenterFrequency(freqStart,freqEnd),sps11,Biquad.calcBandpassQ(Biquad.calcCenterFrequency(freqStart,freqEnd),Biquad.calcBandwidth(freqStart,freqEnd),resonance),0)};function parseFunctionFromText2(method=""){let getFunctionBody=methodString=>{return methodString.replace(/^\\W*(function[^{]+\\{([\\s\\S]*)\\}|[^=]+=>[^{]*\\{([\\s\\S]*)\\}|[^=]+=>(.+))/i,"$2$3$4")};let getFunctionHead=methodString=>{let startindex=methodString.indexOf("=>")+1;if(startindex<=0){startindex=methodString.indexOf("){")}if(startindex<=0){startindex=methodString.indexOf(") {")}return methodString.slice(0,methodString.indexOf("{",startindex)+1)};let newFuncHead=getFunctionHead(method);let newFuncBody=getFunctionBody(method);let newFunc;if(newFuncHead.includes("function")){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody)}else{if(newFuncHead.substring(0,6)===newFuncBody.substring(0,6)){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody.substring(newFuncBody.indexOf("{")+1,newFuncBody.length-1))}else{try{newFunc=(0,eval)(newFuncHead+newFuncBody+"}")}catch{}}}return newFunc}var stringifyWithCircularRefs2=function(){const refs=new Map;const parents=[];const path=["this"];function clear(){refs.clear();parents.length=0;path.length=1}function updateParents(key,value2){var idx=parents.length-1;var prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value2||idx===0){path.push(key);parents.push(value2.pushed)}else{while(idx-->=0){prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value2){idx+=2;parents.length=idx;path.length=idx;--idx;parents[idx]=value2;path[idx]=key;break}}idx--}}}}function checkCircular(key,value2){if(value2!=null){if(typeof value2==="object"){if(key){updateParents(key,value2)}let other=refs.get(value2);if(other){return"[Circular Reference]"+other}else{refs.set(value2,path.join("."))}}}return value2}return function stringifyWithCircularRefs5(obj,space){try{parents.push(obj);return JSON.stringify(obj,checkCircular,space)}finally{clear()}}}();if(JSON.stringifyWithCircularRefs===void 0){JSON.stringifyWithCircularRefs=stringifyWithCircularRefs2}var stringifyFast2=function(){const refs=new Map;const parents=[];const path=["this"];function clear(){refs.clear();parents.length=0;path.length=1}function updateParents(key,value2){var idx=parents.length-1;if(parents[idx]){var prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value2||idx===0){path.push(key);parents.push(value2.pushed)}else{while(idx-->=0){prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value2){idx+=2;parents.length=idx;path.length=idx;--idx;parents[idx]=value2;path[idx]=key;break}}idx++}}}}}function checkValues(key,value2){let val;if(value2!=null){if(typeof value2==="object"){let c2=value2.constructor.name;if(key&&c2==="Object"){updateParents(key,value2)}let other=refs.get(value2);if(other){return"[Circular Reference]"+other}else{refs.set(value2,path.join("."))}if(c2==="Array"){if(value2.length>20){val=value2.slice(value2.length-20)}else val=value2}else if(c2.includes("Set")){val=Array.from(value2)}else if(c2!=="Object"&&c2!=="Number"&&c2!=="String"&&c2!=="Boolean"){val="instanceof_"+c2}else if(c2==="Object"){let obj={};for(const prop in value2){if(value2[prop]==null){obj[prop]=value2[prop]}else if(Array.isArray(value2[prop])){if(value2[prop].length>20)obj[prop]=value2[prop].slice(value2[prop].length-20);else obj[prop]=value2[prop]}else if(value2[prop].constructor.name==="Object"){obj[prop]={};for(const p in value2[prop]){if(Array.isArray(value2[prop][p])){if(value2[prop][p].length>20)obj[prop][p]=value2[prop][p].slice(value2[prop][p].length-20);else obj[prop][p]=value2[prop][p]}else{if(value2[prop][p]!=null){let con=value2[prop][p].constructor.name;if(con.includes("Set")){obj[prop][p]=Array.from(value2[prop][p])}else if(con!=="Number"&&con!=="String"&&con!=="Boolean"){obj[prop][p]="instanceof_"+con}else{obj[prop][p]=value2[prop][p]}}else{obj[prop][p]=value2[prop][p]}}}}else{let con=value2[prop].constructor.name;if(con.includes("Set")){obj[prop]=Array.from(value2[prop])}else if(con!=="Number"&&con!=="String"&&con!=="Boolean"){obj[prop]="instanceof_"+con}else{obj[prop]=value2[prop]}}}val=obj}else{val=value2}}else{val=value2}}return val}return function stringifyFast5(obj,space){parents.push(obj);let res=JSON.stringify(obj,checkValues,space);clear();return res}}();if(JSON.stringifyFast===void 0){JSON.stringifyFast=stringifyFast2}function loadStreamWorkerGlobals(){globalThis.WebSerial=WebSerial;globalThis.decoders=decoders;globalThis.decoder="raw";globalThis.ByteParser=ByteParser;globalThis.Devices=Devices;globalThis.filtering=true;globalThis.filters={};globalThis.BiquadChannelFilterer=BiquadChannelFilterer;globalThis.ArrayManip=ArrayManip}if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope){loadStreamWorkerGlobals()}var streamWorkerRoutes={"receiveDecoder":function receiveDecoder(decoder2,decoderName){globalThis.decoders[decoderName]=(0,eval)("("+decoder2+")")},"receiveCodec":function receiveDeviceCodec(decoder2,deviceType,device,service,characteristic){let codec=parseFunctionFromText2(decoder2);if(codec){if(deviceType==="BLE"&&service&&characteristic){if(globalThis.Devices[deviceType][device]){if(globalThis.Devices[deviceType][device][service]){if(globalThis.Devices[deviceType][device][characteristic]){globalThis.Devices[deviceType][device][characteristic].codec=codec}else{globalThis.Devices[deviceType][device][characteristic]={codec}}}else{globalThis.Devices[deviceType][device]={[characteristic]:{codec}}}}}else if(globalThis.Devices[deviceType][device]?.codec){if(globalThis.Devices[deviceType][device])globalThis.Devices[deviceType][device].codec=codec;else{globalThis.Devices[deviceType][device]={codec}}}}},"decode":function decode(data){return globalThis.decoder(data)},"decodeAndParse":function decodeAndParse(data){let decoded=this.__node.graph.run("decode",data);if(decoded){let parsed=globalThis.ArrayManip.reformatData(decoded);if(parsed){if(globalThis.filtering){for(const prop in parsed){if(globalThis.filters[prop]){let filter=globalThis.filters[prop];if(Array.isArray(parsed[prop])){parsed[prop]=parsed[prop].map(v3=>filter.apply(v3))}else if(parsed[prop]?.values){parsed[prop].values=parsed[prop].values.map(v3=>filter.apply(v3))}}}}return parsed}}return decoded},"setActiveDecoder":function setActiveDecoder(deviceType,device,service,characteristic){if(globalThis.Devices[deviceType][device]?.codec)globalThis.decoder=globalThis.Devices[deviceType][device]?.codec;else if(deviceType==="BLE"&&service&&characteristic&&globalThis.Devices[deviceType][device]?.[service]?.[characteristic]?.codec)globalThis.decoder=globalThis.Devices[deviceType][device][service][characteristic].codec;return true},"decodeDevice":function decodeDevice(data,deviceType,device,service,characteristic){if(globalThis.Devices[deviceType][device]?.codec)return globalThis.Devices[deviceType][device].codec(data);else if(deviceType==="BLE"&&service&&characteristic&&globalThis.Devices[deviceType][device]?.[service]?.[characteristic]?.codec)return globalThis.Devices[deviceType][device][service][characteristic].codec(data)},"decodeAndParseDevice":function decodeAndParseDevice(data,deviceType,deviceName,service,characteristic){let decoded;if(deviceType==="BLE"&&service&&characteristic&&globalThis.Devices[deviceType][deviceName]?.services[service]?.[characteristic]?.codec)decoded=globalThis.Devices[deviceType][deviceName].services[service][characteristic].codec(data);else if(globalThis.Devices[deviceType][deviceName]?.codec)decoded=globalThis.Devices[deviceType][deviceName].codec(data);else decoded=data;if(decoded){let parsed=globalThis.ArrayManip.reformatData(decoded);if(parsed){if(globalThis.filtering){for(const prop in parsed){if(globalThis.filters[prop]){let filter=globalThis.filters[prop];if(Array.isArray(parsed[prop])){parsed[prop]=parsed[prop].map(v3=>filter.apply(v3))}else if(parsed[prop]?.values){parsed[prop].values=parsed[prop].values.map(v3=>filter.apply(v3))}else if(typeof parsed[prop]==="number"){parsed[prop]=filter.apply(parsed[prop])}}}}return parsed}}return decoded},"toggleAnim":function toggleAnim(){globalThis.runningAnim=!globalThis.runningAnim;return globalThis.runningAnim},"setFilters":function setFilters(filters,clearFilters=false){if(!globalThis.filters||clearFilters)globalThis.filters={};for(const key in filters){globalThis.filters[key]=new BiquadChannelFilterer(filters[key])}return true},"getFilterSettings":function getFilterSettings(){if(globalThis.filters){let filters={};for(const key in globalThis.filters){filters[key]={sps:globalThis.filters[key].sps,useScaling:globalThis.filters[key].useScaling,scalar:globalThis.filters[key].scalar,useNotch50:globalThis.filters[key].useNotch50,useNotch60:globalThis.filters[key].useNotch60,useDCBlock:globalThis.filters[key].useDCBlock,useLowpass:globalThis.filters[key].useLowpass,lowpassHz:globalThis.filters[key].lowpassHz,useBandpass:globalThis.filters[key].useBandpass,bandpassLower:globalThis.filters[key].bandpassLower,bandpassUpper:globalThis.filters[key].bandpassUpper}}return filters}return void 0},"setupSerial":function setupSerial(){globalThis.Serial=new globalThis.WebSerial;globalThis.decoder="raw";console.log("worker: Setting up Serial",globalThis.Serial);return true},"openPort":function openPort(settings){const WorkerService2=this.__node.graph;if(!globalThis.Serial)WorkerService2.run("setupSerial");return new Promise((res,rej)=>{globalThis.Serial.getPorts().then(ports=>{const Serial=globalThis.Serial;let port=ports.find(port2=>{return port2.getInfo().usbVendorId===settings.usbVendorId&&port2.getInfo().usbProductId===settings.usbProductId});if(port){let options=Object.assign({},settings);if(typeof settings.pipeTo==="object"&&settings.pipeTo.extraArgs&&globalThis.Devices?.[settings.pipeTo.extraArgs[0]]?.[settings.pipeTo.extraArgs[1]]){options.onconnect=globalThis.Devices[settings.pipeTo.extraArgs[0]][settings.pipeTo.extraArgs[1]].onconnect;options.ondisconnect=globalThis.Devices[settings.pipeTo.extraArgs[0]][settings.pipeTo.extraArgs[1]].ondisconnect;options.beforedisconnect=globalThis.Devices[settings.pipeTo.extraArgs[0]][settings.pipeTo.extraArgs[1]].beforedisconnect}Serial.openPort(port,options).then(()=>{const stream=Serial.createStream({port,settings:options,frequency:settings.frequency?settings.frequency:10,buffering:settings.buffering,ondata:value2=>{if(stream.settings.pipeTo){if(typeof stream.settings.pipeTo==="string")WorkerService2.transmit(value2,stream.settings.pipeTo,[value2.buffer]);else if(stream.settings.pipeTo?.route){let args=value2;if(stream.settings.pipeTo.extraArgs)args=[value2,...stream.settings.pipeTo.extraArgs];WorkerService2.transmit({route:stream.settings.pipeTo.route,args},stream.settings.pipeTo._id,[value2.buffer])}}else{WorkerService2.transmit(value2,void 0,[value2.buffer])}}});Serial.readStream(stream);port.ondisconnect=()=>{postMessage(`${stream._id} disconnected`)};res({_id:stream._id,settings,info:stream.info})}).catch(()=>{postMessage(`disconnected`)});;}else{rej(false)}})})},"closeStream":function closeStream(streamId){return new Promise((res,rej)=>{const Serial=globalThis.Serial;let ondisconnect;if(Serial.streams[streamId].port?.ondisconnect)ondisconnect=Serial.streams[streamId].port.ondisconnect;Serial.closeStream(Serial.streams[streamId]).then(resolved=>{if(ondisconnect)ondisconnect(void 0);res(resolved)}).catch(rej)})},"writeStream":function writeStream(streamId,message){globalThis.Serial.writeStream(globalThis.Serial.streams[streamId],message);return true},"updateStreamSettings":function updateStreamSettings(streamId,settings){if(globalThis.Serial?.streams[streamId]){for(const key in settings){if(typeof settings[key]==="object"){Object.assign(globalThis.Serial.streams[streamId].settings[key],settings[key])}else globalThis.Serial.streams[streamId][key]=settings[key]}}}};var __create2=Object.create;var __defProp2=Object.defineProperty;var __getOwnPropDesc2=Object.getOwnPropertyDescriptor;var __getOwnPropNames2=Object.getOwnPropertyNames;var __getProtoOf2=Object.getPrototypeOf;var __hasOwnProp2=Object.prototype.hasOwnProperty;var __commonJS2=(cb,mod)=>function __require4(){return mod||(0,cb[__getOwnPropNames2(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports};var __export=(target,all)=>{for(var name2 in all)__defProp2(target,name2,{get:all[name2],enumerable:true})};var __copyProps2=(to2,from,except,desc)=>{if(from&&typeof from==="object"||typeof from==="function"){for(let key of __getOwnPropNames2(from))if(!__hasOwnProp2.call(to2,key)&&key!==except)__defProp2(to2,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc2(from,key))||desc.enumerable})}return to2};var __toESM2=(mod,isNodeMode,target)=>(target=mod!=null?__create2(__getProtoOf2(mod)):{},__copyProps2(isNodeMode||!mod||!mod.__esModule?__defProp2(target,"default",{value:mod,enumerable:true}):target,mod));var require_objectid=__commonJS2({"node_modules/bson-objectid/objectid.js"(exports,module2){var MACHINE_ID=Math.floor(Math.random()*16777215);var index=ObjectID2.index=parseInt(Math.random()*16777215,10);var pid=(typeof process==="undefined"||typeof process.pid!=="number"?Math.floor(Math.random()*1e5):process.pid)%65535;var BufferCtr=(()=>{try{return _Buffer}catch(_22){try{return Buffer}catch(_32){return null}}})();var isBuffer=function(obj){return!!(obj!=null&&obj.constructor&&typeof obj.constructor.isBuffer==="function"&&obj.constructor.isBuffer(obj))};var hexTable=[];for(i=0;i<256;i++){hexTable[i]=(i<=15?"0":"")+i.toString(16)}var i;var checkForHexRegExp=new RegExp("^[0-9a-fA-F]{24}$");var decodeLookup=[];i=0;while(i<10)decodeLookup[48+i]=i++;while(i<16)decodeLookup[65-10+i]=decodeLookup[97-10+i]=i++;function ObjectID2(id){if(!(this instanceof ObjectID2))return new ObjectID2(id);if(id&&(id instanceof ObjectID2||id._bsontype==="ObjectID"))return id;this._bsontype="ObjectID";if(id==null||typeof id==="number"){this.id=this.generate(id);return}var valid=ObjectID2.isValid(id);if(!valid&&id!=null){throw new Error("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters")}else if(valid&&typeof id==="string"&&id.length===24){return ObjectID2.createFromHexString(id)}else if(id!=null&&id.length===12){this.id=id}else if(id!=null&&typeof id.toHexString==="function"){return id}else{throw new Error("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters")}}module2.exports=ObjectID2;ObjectID2.default=ObjectID2;ObjectID2.createFromTime=function(time){time=parseInt(time,10)%4294967295;return new ObjectID2(hex(8,time)+"0000000000000000")};ObjectID2.createFromHexString=function(hexString){if(typeof hexString==="undefined"||hexString!=null&&hexString.length!==24){throw new Error("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters")}var data="";var i2=0;while(i2<24){data+=String.fromCharCode(decodeLookup[hexString.charCodeAt(i2++)]<<4|decodeLookup[hexString.charCodeAt(i2++)])}return new ObjectID2(data)};ObjectID2.isValid=function(id){if(id==null)return false;if(typeof id==="number"){return true}if(typeof id==="string"){return id.length===12||id.length===24&&checkForHexRegExp.test(id)}if(id instanceof ObjectID2){return true}if(isBuffer(id)){return ObjectID2.isValid(id.toString("hex"))}if(typeof id.toHexString==="function"){if(BufferCtr&&(id.id instanceof BufferCtr||typeof id.id==="string")){return id.id.length===12||id.id.length===24&&checkForHexRegExp.test(id.id)}}return false};ObjectID2.prototype={constructor:ObjectID2,toHexString:function(){if(!this.id||!this.id.length){throw new Error("invalid ObjectId, ObjectId.id must be either a string or a Buffer, but is ["+JSON.stringify(this.id)+"]")}if(this.id.length===24){return this.id}if(isBuffer(this.id)){return this.id.toString("hex")}var hexString="";for(var i2=0;i2<this.id.length;i2++){hexString+=hexTable[this.id.charCodeAt(i2)]}return hexString},equals:function(otherId){if(otherId instanceof ObjectID2){return this.toString()===otherId.toString()}else if(typeof otherId==="string"&&ObjectID2.isValid(otherId)&&otherId.length===12&&isBuffer(this.id)){return otherId===this.id.toString("binary")}else if(typeof otherId==="string"&&ObjectID2.isValid(otherId)&&otherId.length===24){return otherId.toLowerCase()===this.toHexString()}else if(typeof otherId==="string"&&ObjectID2.isValid(otherId)&&otherId.length===12){return otherId===this.id}else if(otherId!=null&&(otherId instanceof ObjectID2||otherId.toHexString)){return otherId.toHexString()===this.toHexString()}else{return false}},getTimestamp:function(){var timestamp=new Date;var time;if(isBuffer(this.id)){time=this.id[3]|this.id[2]<<8|this.id[1]<<16|this.id[0]<<24}else{time=this.id.charCodeAt(3)|this.id.charCodeAt(2)<<8|this.id.charCodeAt(1)<<16|this.id.charCodeAt(0)<<24}timestamp.setTime(Math.floor(time)*1e3);return timestamp},generate:function(time){if("number"!==typeof time){time=~~(Date.now()/1e3)}time=parseInt(time,10)%4294967295;var inc=next();return String.fromCharCode(time>>24&255,time>>16&255,time>>8&255,time&255,MACHINE_ID>>16&255,MACHINE_ID>>8&255,MACHINE_ID&255,pid>>8&255,pid&255,inc>>16&255,inc>>8&255,inc&255)}};function next(){return index=(index+1)%16777215}function hex(length,n){n=n.toString(16);return n.length===length?n:"00000000".substring(n.length,length)+n}var inspect=Symbol&&Symbol.for&&Symbol.for("nodejs.util.inspect.custom")||"inspect";ObjectID2.prototype[inspect]=function(){return"ObjectID("+this+")"};ObjectID2.prototype.toJSON=ObjectID2.prototype.toHexString;ObjectID2.prototype.toString=ObjectID2.prototype.toHexString}});var DataStructures_exports={};__export(DataStructures_exports,{AuthorizationStruct:()=>AuthorizationStruct,ChatroomStruct:()=>ChatroomStruct,CoherenceMap:()=>CoherenceMap,CoherenceStruct:()=>CoherenceStruct,CommentStruct:()=>CommentStruct,Data:()=>Data,DataStruct:()=>DataStruct,DateStruct:()=>DateStruct,ECGStruct:()=>ECGStruct,EDAStruct:()=>EDAStruct,EEGCoordinates:()=>EEGCoordinates,EEGStruct:()=>EEGStruct,EMGStruct:()=>EMGStruct,EventStruct:()=>EventStruct,EyeTrackerStruct:()=>EyeTrackerStruct,FNIRSStruct:()=>FNIRSStruct,FrequencyBandsStruct:()=>FrequencyBandsStruct,GroupStruct:()=>GroupStruct,HRVStruct:()=>HRVStruct,IMUStruct:()=>IMUStruct,NotificationStruct:()=>NotificationStruct,PPGStruct:()=>PPGStruct,ProfileStruct:()=>ProfileStruct,ScheduleStruct:()=>ScheduleStruct,Struct:()=>Struct,eegCoordinates:()=>eegCoordinates,setCoordinate:()=>setCoordinate,structRegistry:()=>structRegistry});function Struct(structType="struct",assignProps={},parentUser={_id:""},parentStruct={structType:"struct",_id:""}){function randomId3(tag=""){return`${tag+Math.floor(Math.random()+Math.random()*Math.random()*1e16)}`}let struct={_id:randomId3(structType+"defaultId"),structType,ownerId:parentUser?._id,timestamp:Date.now(),parent:{structType:parentStruct?.structType,_id:parentStruct?._id}};if(!struct.ownerId)delete struct.ownerId;if(!struct?.parent?._id)delete struct.parent;if(Object.keys(assignProps).length>0)Object.assign(struct,assignProps);return struct}var eegCoordinates={FP1:[-21.2,66.9,12.1],FPZ:[1.4,65.1,11.3],FP2:[24.3,66.3,12.5],AF7:[-41.7,52.8,11.3],AF3:[-32.7,48.4,32.8],AFZ:[1.8,54.8,37.9],AF4:[35.1,50.1,31.1],AF8:[43.9,52.7,9.3],F5:[-51.4,26.7,24.7],F3:[-39.7,25.3,44.7],F1:[-22.1,26.8,54.9],FZ:[0,26.8,60.6],F2:[23.6,28.2,55.6],F4:[41.9,27.5,43.9],F6:[52.9,28.7,25.2],F7:[-52.1,28.6,3.8],F8:[53.2,28.4,3.1],FC5:[-59.1,3,26.1],FC3:[-45.5,2.4,51.3],FC1:[-24.7,.3,66.4],FCZ:[1,1,72.8],FC2:[26.1,3.2,66],FC4:[47.5,4.6,49.7],FC6:[60.5,4.9,25.5],FT9:[-53.8,-2.1,-29.1],FT7:[-59.2,3.4,-2.1],FT8:[60.2,4.7,-2.8],FT10:[55,-3.6,-31],T7:[-65.8,-17.8,-2.9],T5:[-61.5,-65.3,1.1],T3:[-70.2,-21.3,-10.7],T4:[71.9,-25.2,-8.2],T6:[59.3,-67.6,3.8],T8:[67.4,-18.5,-3.4],C5:[-63.6,-18.9,25.8],C3:[-49.1,-20.7,53.2],C1:[-25.1,-22.5,70.1],CZ:[.8,-21.9,77.4],C2:[26.7,-20.9,69.5],C4:[50.3,-18.8,53],C6:[65.2,-18,26.4],CP5:[-61.8,-46.2,22.5],CP3:[-46.9,-47.7,49.7],CP1:[-24,-49.1,66.1],CPZ:[.7,-47.9,72.6],CP2:[25.8,-47.1,66],CP4:[49.5,-45.5,50.7],CP6:[62.9,-44.6,24.4],TP9:[-73.6,-46.7,-4],TP7:[-63.6,-44.7,-4],TP8:[64.6,-45.4,-3.7],TP10:[74.6,-47.4,-3.7],P9:[-50.8,-51.3,-37.7],P7:[-55.9,-64.8,0],P5:[-52.7,-67.1,19.9],P3:[-41.4,-67.8,42.4],P1:[-21.6,-71.3,52.6],PZ:[.7,-69.3,56.9],P2:[24.4,-69.9,53.5],P4:[44.2,-65.8,42.7],P6:[54.4,-65.3,20.2],P8:[56.4,-64.4,.1],P10:[51,-53.9,-36.5],PO7:[-44,-81.7,1.6],PO3:[-33.3,-84.3,26.5],POZ:[0,-87.9,33.5],PO4:[35.2,-82.6,26.1],PO8:[43.3,-82,.7],O1:[-25.8,-93.3,7.7],OZ:[.3,-97.1,8.7],O2:[25,-95.2,6.2]};function setCoordinate(channelDict,assignTo={}){if(!eegCoordinates[channelDict.tag]&&channelDict.position){eegCoordinates[channelDict.tag]=[channelDict.position.x,channelDict.position.y,channelDict.position.z]}if(eegCoordinates[channelDict.tag]){let props={channel:"",position:{x:eegCoordinates[channelDict.tag][0],y:eegCoordinates[channelDict.tag][1],z:eegCoordinates[channelDict.tag][2]}};return Object.assign(assignTo,props)}else return Object.assign(assignTo,channelDict)}function EEGCoordinates(channelDicts=[],genCoherenceMap=true){let structs=[];for(let channelDict of channelDicts){let struct=EEGStruct(channelDict);structs.push(struct)}if(genCoherenceMap){structs.push(...CoherenceMap({channelDicts}))}return structs}function FrequencyBandsStruct(additionalBands=[],assignTo={}){let bands={scp:[],delta:[],theta:[],alpha1:[],alpha2:[],beta:[],lowgamma:[],highgamma:[]};additionalBands.forEach(band=>bands[band]=[]);return Object.assign(assignTo,bands)}function EEGStruct(tag="",assignProps={},parentUser={_id:""},parentStruct={structType:"struct",_id:""}){let bands=FrequencyBandsStruct();let props={tag,position:{x:0,y:0,z:0},count:0,times:[],raw:[],filtered:[],fftCount:0,fftTimes:[],ffts:[],slices:JSON.parse(JSON.stringify(bands)),means:JSON.parse(JSON.stringify(bands)),startTime:Date.now()};let struct=Struct("eeg",props,parentUser,parentStruct);if(tag)setCoordinate(props,struct);return Object.assign(struct,assignProps)}function CoherenceStruct(coords={0:EEGStruct("FP1"),1:EEGStruct("FP2")},assignProps={},parentUser={_id:""},parentStruct={structType:"struct",_id:""}){let bands=FrequencyBandsStruct();let props={tag:coords[0]?.tag+"::"+coords[1]?.tag,x0:coords[0]?.position?.x,y0:coords[0]?.position?.y,z0:coords[0]?.position?.z,x1:coords[1]?.position?.x,y1:coords[1]?.position?.y,z1:coords[1]?.position?.z,fftCount:0,fftTimes:[],ffts:[],slices:JSON.parse(JSON.stringify(bands)),means:JSON.parse(JSON.stringify(bands)),startTime:Date.now()};let struct=Struct("coherence",props,parentUser,parentStruct);return Object.assign(struct,assignProps)}function CoherenceMap(opts={channelDicts:[{ch:0,tag:"FP1",analyze:false},{ch:1,tag:"FP2",analyze:false}],taggedOnly:true},_22={},parentUser={_id:""},parentStruct={structType:"struct",_id:""}){var cmap=[];var l=1,k2=0;for(var i=0;i<opts.channelDicts.length*(opts.channelDicts.length+1)/2-opts.channelDicts.length;i++){if(opts.taggedOnly===false||opts.taggedOnly===true&&(opts.channelDicts[k2].tag!==null&&opts.channelDicts[k2+l].tag!==null&&(opts.channelDicts[k2].tag!=="other"&&opts.channelDicts[k2+l].tag!=="other")&&(opts.channelDicts[k2].analyze===true&&opts.channelDicts[k2+l].analyze===true))){var coord0=EEGStruct(opts.channelDicts[k2].tag);var coord1=EEGStruct(opts.channelDicts[k2+l].tag);cmap.push(CoherenceStruct({0:coord0,1:coord1},{},parentUser,parentStruct))}l++;if(l+k2===opts.channelDicts.length){k2++;l=1}}return cmap}function FNIRSStruct(tag="",assignProps={},parentUser={_id:""},parentStruct={structType:"struct",_id:""}){let props={tag,position:{x:0,y:0,z:0},count:0,times:[],red:[],ir:[],ir2:[],ambient:[],ratio:[],temp:[],beat_detect:{beats:[],breaths:[],rir:[],rir2:[],drir_dt:[],localmins:[],localmaxs:[],val_dists:[],peak_dists:[],localmins2:[],localmaxs2:[],val_dists2:[],peak_dists2:[]},startTime:Date.now()};let struct=Struct("fnirs",props,parentUser,parentStruct);if(tag)setCoordinate(props,struct);return Object.assign(struct,assignProps)}function IMUStruct(tag="",assignProps={},parentUser={_id:""},parentStruct={structType:"struct",_id:""}){let props={tag,Ax:[],Ay:[],Az:[],Gx:[],Gy:[],Gz:[],startTime:Date.now()};let struct=Struct("imu",props,parentUser,parentStruct);if(tag)setCoordinate(props,struct);return Object.assign(struct,assignProps)}function EyeTrackerStruct(tag="",assignProps={},parentUser={_id:""},parentStruct={structType:"struct",_id:""}){let props={tag,count:0,times:[],x:[],y:[],smax:[],smay:[],startTime:Date.now()};let struct=Struct("eyetracker",props,parentUser,parentStruct);return Object.assign(struct,assignProps)}function ECGStruct(tag="",assignProps={},parentUser={_id:""},parentStruct={structType:"struct",_id:""}){let props={tag,count:0,times:[],raw:[],filtered:[],bpm:[],hrv:[],startTime:Date.now()};let struct=Struct("ecg",props,parentUser,parentStruct);return Object.assign(struct,assignProps)}function EDAStruct(_22="",__={},___={_id:""},____={structType:"struct",_id:""}){}function PPGStruct(tag="",assignProps={},parentUser={_id:""},parentStruct={structType:"struct",_id:""}){let struct=FNIRSStruct(tag,parentUser,parentStruct,assignProps);struct.structType="ppg";return struct}function HRVStruct(tag="",assignProps={},parentUser={_id:""},parentStruct={structType:"struct",_id:""}){let struct=ECGStruct(tag,parentUser,parentStruct,assignProps);struct.structType="hrv";return struct}function EMGStruct(tag="",assignProps={},parentUser={_id:""},parentStruct={structType:"struct",_id:""}){let struct=EEGStruct(tag,parentUser,parentStruct,assignProps);struct.structType="emg";return struct}function ProfileStruct(tag="",assignProps={},parentUser={_id:""},parentStruct={structType:"struct",_id:""}){let props={tag,name:"",username:"",firstName:"",lastName:"",email:"",phone:"",sex:"",birthday:"",type:"",userRoles:{},socials:{},data:{},id:""};let struct=Struct("profile",props,parentUser,parentStruct);return Object.assign(struct,assignProps)}function AuthorizationStruct(tag="",assignProps={},parentUser={_id:""},parentStruct={structType:"struct",_id:""}){let props={tag,authorizedId:"",authorizedName:"",authorizerId:"",authorizerName:"",authorizations:{},structs:{},excluded:{},groups:{},status:"PENDING",expires:false,associatedAuthId:""};let struct=Struct("authorization",props,parentUser,parentStruct);return Object.assign(struct,assignProps)}function GroupStruct(tag="",assignProps={},parentUser={_id:""},parentStruct={structType:"struct",_id:""}){let props={tag,name:"",details:"",admins:{},peers:{},clients:{},users:{}};let struct=Struct("group",props,parentUser,parentStruct);return Object.assign(struct,assignProps)}function Data(type,data){return{type,data,timestamp:Date.now()}}function DataStruct(tag="",assignProps={},parentUser={_id:""},parentStruct={structType:"struct",_id:""}){let props={tag,title:"",author:"",expires:false,type:"",data:new Array};let struct=Struct("data",props,parentUser,parentStruct);return Object.assign(struct,assignProps)}function EventStruct(tag="",assignProps={},parentUser={_id:""},parentStruct={structType:"struct",_id:""}){let props={tag,event:"",author:"",startTime:"",endTime:"",grade:0,notes:"",attachments:new Array,users:{}};let struct=Struct("event",props,parentUser,parentStruct);return Object.assign(struct,assignProps)}function ChatroomStruct(tag="",assignProps={},parentUser={_id:""},parentStruct={structType:"struct",_id:""}){let props={tag,message:"",topic:"",author:"",attachments:new Array,comments:new Array,replies:new Array,users:{},audioChatActive:false,videoChatActive:false};let struct=Struct("chatroom",props,parentUser,parentStruct);return Object.assign(struct,assignProps)}function CommentStruct(tag="",assignProps={},parentUser={_id:""},parentStruct={structType:"struct",_id:""}){let props={tag,author:"",replyTo:"",message:"",rating:0,replies:new Array,users:{},attachments:new Array};let struct=Struct("comment",props,parentUser,parentStruct);return Object.assign(struct,assignProps)}function NotificationStruct(tag="",assignProps={},parentUser={_id:""},parentStruct={structType:"struct",_id:""}){let props={tag,note:"",parentUserId:""};let struct=Struct("notification",props,parentUser,parentStruct);return Object.assign(struct,assignProps)}function ScheduleStruct(tag="",assignProps={},parentUser={_id:""},parentStruct={structType:"struct",_id:""}){let props={tag,title:"",author:"",attachments:new Array,dates:new Array};let struct=Struct("schedule",props,parentUser,parentStruct);return Object.assign(struct,assignProps)}function DateStruct(tag="",assignProps={},parentUser={_id:""},parentStruct={structType:"struct",_id:""}){let props={tag,timeSet:"",notes:"",recurs:"NEVER",attachments:new Array};let struct=Struct("date",props,parentUser,parentStruct);return Object.assign(struct,assignProps)}var structRegistry={Struct,EEGStruct,FNIRSStruct,CoherenceStruct,CoherenceMap,FrequencyBandsStruct,IMUStruct,EyeTrackerStruct,ECGStruct,EDAStruct,PPGStruct,HRVStruct,EMGStruct,ProfileStruct,AuthorizationStruct,GroupStruct,DataStruct,EventStruct,ChatroomStruct,CommentStruct,NotificationStruct,ScheduleStruct,DateStruct};var EventHandler2=class{constructor(data){this.pushToState={};this.data={};this.triggers={};this.setState=updateObj=>{Object.assign(this.data,updateObj);let props=Object.getOwnPropertyNames(updateObj);for(const prop of props){if(this.triggers[prop]){let fn2=obj=>{obj.onchange(this.data[prop])};this.triggers[prop].forEach(fn2)}}return this.data};this.setValue=(key,value2)=>{this.data[key]=value2;this.triggerEvent(key,value2)};this.triggerEvent=(key,value2)=>{if(this.triggers[key]){let fn2=obj=>{obj.onchange(value2)};this.triggers[key].forEach(fn2)}};this.subscribeEvent=(key,onchange,refObject,refKey)=>{if(key){if(refObject&&refKey&&!this.triggers[key]){Object.defineProperty(this.data,key,{get:()=>{return refObject[refKey]},set:value2=>{refObject[refKey]=value2},enumerable:true,configurable:true})}if(!this.triggers[key]){this.triggers[key]=[]}let l=this.triggers[key].length;this.triggers[key].push({sub:l,onchange});return this.triggers[key].length-1}else return void 0};this.unsubscribeEvent=(key,sub2)=>{let triggers=this.triggers[key];if(triggers){if(!sub2){delete this.triggers[key];delete this.data[key]}else{let sub22=void 0;let obj=triggers.find((o2,i)=>{if(o2.sub===sub22){sub22=i;return true}});if(obj)triggers.splice(sub22,1);if(Object.keys(triggers).length===0){delete this.triggers[key];delete this.data[key]}if(this.onRemoved)this.onRemoved(obj);return true}}};this.subscribeEventOnce=(key,onchange)=>{let sub2;let changed=value2=>{onchange(value2);this.unsubscribeEvent(key,sub2)};sub2=this.subscribeEvent(key,changed)};this.getEvent=(key,sub2)=>{for(const s in this.triggers[key]){if(this.triggers[key][s].sub===sub2)return this.triggers[key][s]}};this.getSnapshot=()=>{const snapshot={};for(const key in this.data){snapshot[key]=this.data[key]}};if(typeof data==="object")this.data=data}};var state2=new EventHandler2;var import_bson_objectid=__toESM2(require_objectid());var Systems={collision:{setupEntities:function(entities){for(const key in entities){const entity=entities[key];if(entity.components){if(!entity.components[this.__node.tag])continue}this.setupEntity(entity)}return entities},setupEntity:function(entity){if(!("collisionEnabled"in entity))entity.collisionEnabled=true;if(!entity.collisionType)entity.collisionType="sphere";if(!entity.collisionRadius)entity.collisionRadius=1;if(!entity.collisionBoundsScale)entity.collisionBoundsScale={x:1,y:1,z:1};if(!entity.colliding)entity.colliding={};if(!entity.position)entity.position={x:0,y:0,z:0};return entity},__node:{tag:"collision"},__operator:function(entities){let keys=this.entityKeys;for(let i=0;i<keys.length;i++){const entity1=entities[keys[i]];if(entity1.components){if(!entity1.components[this.__node.tag]||!entity1.collisionEnabled)continue}if(!entity1.collisionEnabled)continue;for(let j3=0;j3<keys.length;j3++){if(i===j3)continue;const entity2=entities[keys[j3]];if(entity2.components){if(!entity2.components[this.__node.tag])continue}if(!entity2.collisionEnabled)continue;let colliding=Systems.collision.collisionCheck(entity1,entity2);if(colliding!==false){if(!entity1.colliding)entity1.colliding={};if(!entity2.colliding)entity2.colliding={};entity1.colliding[entity2.__node.tag]=colliding;entity2.colliding[entity1.__node.tag]=colliding}}}return entities},collisionCheck:(body1,body2)=>{if(body1.collisionEnabled===false||body2.collisionEnabled===false)return false;const dist=Systems.collision.distance(body1.position,body2.position);if(dist<Math.max(...Object.values(body1.collisionBoundsScale))*body1.collisionRadius+Math.max(...Object.values(body2.collisionBoundsScale))*body2.collisionRadius){let isColliding=false;if(body1.collisionType==="sphere"){if(body2.collisionType==="sphere"){isColliding=Systems.collision.sphereCollisionCheck(body1,body2,dist)}else if(body2.collisionType==="box"){isColliding=Systems.collision.sphereBoxCollisionCheck(body1,body2,dist)}else if(body2.collisionType==="point"){isColliding=Systems.collision.isPointInsideSphere(body2.position,body1,dist)}}else if(body1.collisionType==="box"){if(body2.collisionType==="sphere"){isColliding=Systems.collision.sphereBoxCollisionCheck(body2,body1,dist)}else if(body2.collisionType==="box"){isColliding=Systems.collision.boxCollisionCheck(body1,body2)}else if(body2.collisionType==="point"){isColliding=Systems.collision.isPointInsideBox(body1.position,body1)}}else if(body1.collisionType==="point"){if(body2.collisionType==="sphere"){isColliding=Systems.collision.isPointInsideSphere(body1.position,body2,dist)}else if(body2.collisionType==="box"){isColliding=Systems.collision.isPointInsideBox(body1.position,body2)}}if(isColliding)return dist}return false},sphereCollisionCheck:(body1,body2,dist)=>{if(dist===void 0)dist=Systems.collision.distance(body1.position,body2.position);return dist<body1.collisionRadius+body2.collisionRadius},boxCollisionCheck:(body1,body2)=>{let body1minX=(body1.position.x-body1.collisionRadius)*body1.collisionBoundsScale.x;let body1maxX=(body1.position.x+body1.collisionRadius)*body1.collisionBoundsScale.x;let body1minY=(body1.position.y-body1.collisionRadius)*body1.collisionBoundsScale.y;let body1maxY=(body1.position.y+body1.collisionRadius)*body1.collisionBoundsScale.y;let body1minZ=(body1.position.z-body1.collisionRadius)*body1.collisionBoundsScale.z;let body1maxZ=(body1.position.z+body1.collisionRadius)*body1.collisionBoundsScale.z;let body2minX=(body2.position.x-body2.collisionRadius)*body1.collisionBoundsScale.x;let body2maxX=(body2.position.x+body2.collisionRadius)*body1.collisionBoundsScale.x;let body2minY=(body2.position.y-body2.collisionRadius)*body1.collisionBoundsScale.y;let body2maxY=(body2.position.y+body2.collisionRadius)*body1.collisionBoundsScale.y;let body2minZ=(body2.position.z-body2.collisionRadius)*body1.collisionBoundsScale.z;let body2maxZ=(body2.position.z+body2.collisionRadius)*body1.collisionBoundsScale.z;return(body1maxX<=body2maxX&&body1maxX>=body2minX||body1minX<=body2maxX&&body1minX>=body2minX)&&(body1maxY<=body2maxY&&body1maxY>=body2minY||body1minY<=body2maxY&&body1minY>=body2minY)&&(body1maxZ<=body2maxZ&&body1maxZ>=body2minZ||body1minZ<=body2maxZ&&body1minZ>=body2minZ)},sphereBoxCollisionCheck:(sphere,box,dist)=>{let boxMinX=(box.position.x-box.collisionRadius)*box.collisionBoundsScale.x;let boxMaxX=(box.position.x+box.collisionRadius)*box.collisionBoundsScale.x;let boxMinY=(box.position.y-box.collisionRadius)*box.collisionBoundsScale.y;let boxMaxY=(box.position.y+box.collisionRadius)*box.collisionBoundsScale.y;let boxMinZ=(box.position.z-box.collisionRadius)*box.collisionBoundsScale.z;let boxMaxZ=(box.position.z+box.collisionRadius)*box.collisionBoundsScale.z;let clamp={x:Math.max(boxMinX,Math.min(sphere.position.x,boxMaxX)),y:Math.max(boxMinY,Math.min(sphere.position.y,boxMaxY)),z:Math.max(boxMinZ,Math.min(sphere.position.z,boxMaxZ))};if(dist===void 0)dist=Systems.collision.distance(sphere.position,clamp);return dist>sphere.collisionRadius},isPointInsideSphere:(point,sphere,dist)=>{if(dist===void 0)dist=Systems.collision.distance(point,sphere.position);return dist<sphere.collisionRadius},isPointInsideBox:(point,box)=>{let boxminX=(box.position.x-box.collisionRadius)*box.collisionBoundsScale.x;let boxmaxX=(box.position.x+box.collisionRadius)*box.collisionBoundsScale.x;let boxminY=(box.position.y-box.collisionRadius)*box.collisionBoundsScale.x;let boxmaxY=(box.position.y+box.collisionRadius)*box.collisionBoundsScale.x;let boxminZ=(box.position.z-box.collisionRadius)*box.collisionBoundsScale.x;let boxmaxZ=(box.position.z+box.collisionRadius)*box.collisionBoundsScale.x;return point.x>=boxminX&&point.x<=boxmaxX&&(point.y>=boxminY&&point.y<=boxmaxY)&&(point.z>=boxminZ&&point.z<=boxmaxZ)},closestPointOnLine:(point,lineStart,lineEnd)=>{let a={x:lineEnd.x-lineStart.x,y:lineEnd.y-lineStart.y,z:lineEnd.z-lineStart.z};let b2={x:lineStart.x-point.x,y:lineStart.y-point.y,z:lineStart.z-point.z};let c2={x:lineEnd.x-point.x,y:lineEnd.y-point.y,z:lineEnd.z-point.z};let bdota=Systems.collision.dot(b2,a);if(bdota<=0)return lineStart;let cdota=Systems.collision.dot(c2,a);if(cdota<=0)return lineEnd;let _bdotapluscdota=1/(bdota+cdota);return{x:lineStart.x+(lineEnd.x-lineStart.x)*bdota*_bdotapluscdota,y:lineStart.y+(lineEnd.y-lineStart.y)*bdota*_bdotapluscdota,z:lineStart.z+(lineEnd.z-lineStart.z)*bdota*_bdotapluscdota}},closestPointOnPolygon:(point,t0,t1,t2)=>{let n=Systems.collision.calcNormal(t0,t1,t2);let dist=Systems.collision.dot(point,n)-Systems.collision.dot(t0,n);let projection=Systems.collision.vecadd(point,Systems.collision.vecscale(n,-dist));let v0x=t2[0]-t0[0];let v0y=t2[1]-t0[1];let v0z=t2[2]-t0[2];let v1x=t1[0]-t0[0];let v1y=t1[1]-t0[1];let v1z=t1[2]-t0[2];let v2x=projection[0]-t0[0];let v2y=projection[1]-t0[1];let v2z=projection[2]-t0[2];let dot00=v0x*v0x+v0y*v0y+v0z*v0z;let dot01=v0x*v1x+v0y*v1y+v0z*v1z;let dot02=v0x*v2x+v0y*v2y+v0z*v2z;let dot11=v1x*v1x+v1y*v1y+v1z*v1z;let dot12=v1x*v2x+v1y*v2y+v1z*v2z;let denom=dot00*dot11-dot01*dot01;if(Math.abs(denom)<1e-30){return void 0}let _denom=1/denom;let u2=(dot11*dot02-dot01*dot12)*_denom;let v22=(dot00*dot12-dot01*dot02)*_denom;if(u2>=0&&v22>=0&&u2+v22<1){return projection}else return void 0},calcNormal:(t0,t1,t2,positive=true)=>{var QR=Systems.collision.makeVec(t0,t1);var QS=Systems.collision.makeVec(t0,t2);if(positive===true){return Systems.collision.normalize(Systems.collision.cross3D(QR,QS))}else{return Systems.collision.normalize(Systems.collision.cross3D(QS,QR))}},dot:(v1,v22)=>{let dot=0;for(const key in v1){dot+=v1[key]*v22[key]}return dot},makeVec(p1,p2){return{x:p2.x-p1.x,y:p2.y-p1.y,z:p2.z-p1.z}},vecadd:(v1,v22)=>{let result=Object.assign({},v1);for(const key in result){result[key]+=v22[key]}return result},vecsub:(v1,v22)=>{let result=Object.assign({},v1);for(const key in result){result[key]-=v22[key]}return result},vecmul:(v1,v22)=>{let result=Object.assign({},v1);for(const key in result){result[key]*=v22[key]}return result},vecdiv:(v1,v22)=>{let result=Object.assign({},v1);for(const key in result){result[key]/=v22[key]}return result},vecscale:(v1,scalar)=>{let result=Object.assign({},v1);for(const key in result){result[key]*=scalar}return result},distance:(v1,v22)=>{let distance=0;for(const key in v1){distance+=Math.pow(v1[key]-v22[key],2)}return Math.sqrt(distance)},magnitude:v22=>{let magnitude=0;for(const key in v22){magnitude+=v22[key]*v22[key]}return Math.sqrt(magnitude)},normalize:v22=>{let magnitude=Systems.collision.magnitude(v22);let _mag=magnitude?1/magnitude:0;let vn2=Object.assign({},v22);for(const key in v22){vn2[key]=v22[key]*_mag}return vn2},distance3D(v1,v22){return Math.sqrt((v1.x-v22.x)*(v1.x-v22.x)+(v1.y-v22.y)*(v1.y-v22.y)+(v1.z-v22.z)*(v1.z-v22.z))},cross3D(v1,v22){return{x:v1.y*v22.z-v1.z*v22.y,y:v1.z*v22.x-v1.x*v22.z,z:v1.x*v22.y-v1.y*v22.x}},nearestNeighborSearch(entities,isWithinRadius=1e15){var tree={};;for(const key in entities){let newnode={tag:key,position:void 0,neighbors:[]};newnode.position=entities[key].position;tree[key]=newnode}for(const i in tree){for(const j3 in tree){var dist=Systems.collision.distance3D(tree[i].position,tree[j3].position);if(dist<isWithinRadius){var newNeighbori={tag:j3,position:entities[j3].position,dist};tree[i].neighbors.push(newNeighbori);var newNeighborj={tag:j3,position:entities[i].position,dist};tree[j3].neighbors.push(newNeighborj)}}tree[i].neighbors.sort(function(a,b2){return a.dist-b2.dist})}return tree},generateBoundingVolumeTree(entities,mode="octree",withinRadius=1e15,minEntities=3){let dynamicBoundingVolumeTree={proto:{parent:void 0,children:{},entities:{},collisionType:"box",collisionRadius:1,collisionBoundsScale:{x:1,y:1,z:1},position:{x:0,y:0,z:0}},tree:{}};let maxX,maxY,maxZ;let minX=0,minY=0,minZ=0;let positions={};let minRadius=withinRadius;for(const key in entities){const body=entities[key];let xx=body.position.x+body.collisionRadius*body.collisionBoundsScale.x;let yy=body.position.y+body.collisionRadius*body.collisionBoundsScale.y;let zz=body.position.z+body.collisionRadius*body.collisionBoundsScale.z;if(maxX<xx)maxX=xx;if(minX>xx)minX=xx;if(maxY<yy)maxY=yy;if(minY>yy)minY=yy;if(maxZ<zz)maxZ=zz;if(minZ>zz)minZ=zz;if(minRadius>body.collisionRadius)minRadius=body.collisionRadius;positions[key]=body.position};let head=JSON.parse(JSON.stringify(dynamicBoundingVolumeTree.proto));let boxpos={x:(maxX+minX)*.5,y:(maxY+minY)*.5,z:(maxZ+minZ)*.5};let boxbounds={x:maxX-boxpos.x,y:maxY-boxpos.y,z:maxZ-boxpos.z};head.position=boxpos;head.collisionBoundsScale=boxbounds;head.entities=entities;dynamicBoundingVolumeTree.tree=head;minRadius*=2;if(mode==="octree"){let genOct=function(parentPos,halfbounds){let oct1={x:parentPos.x+halfbounds.x,y:parentPos.y+halfbounds.y,z:parentPos.z+halfbounds.z};let oct2={x:parentPos.x-halfbounds.x,y:parentPos.y+halfbounds.y,z:parentPos.z+halfbounds.z};let oct3={x:parentPos.x+halfbounds.x,y:parentPos.y-halfbounds.y,z:parentPos.z+halfbounds.z};let oct4={x:parentPos.x+halfbounds.x,y:parentPos.y+halfbounds.y,z:parentPos.z-halfbounds.z};let oct5={x:parentPos.x-halfbounds.x,y:parentPos.y-halfbounds.y,z:parentPos.z+halfbounds.z};let oct6={x:parentPos.x-halfbounds.x,y:parentPos.y+halfbounds.y,z:parentPos.z-halfbounds.z};let oct7={x:parentPos.x+halfbounds.x,y:parentPos.y-halfbounds.y,z:parentPos.z-halfbounds.z};let oct8={x:parentPos.x-halfbounds.x,y:parentPos.y-halfbounds.y,z:parentPos.z-halfbounds.z};return[oct1,oct2,oct3,oct4,oct5,oct6,oct7,oct8]},genOctTree=function(head2){let halfbounds={x:head2.collisionBoundsScale.x*.5,y:head2.collisionBoundsScale.y*.5,z:head2.collisionBoundsScale.z*.5};let octPos=genOct(head2.position,halfbounds);let check=Object.assign({},head2.bodies);for(let i=0;i<8;i++){let octquadrant=Object.assign(JSON.parse(JSON.stringify(dynamicBoundingVolumeTree.proto)),{position:octPos[i],collisionBoundsScale:halfbounds});octquadrant.parent=head2;for(const j3 in check){let collided=Systems.collision.collisionCheck(check[j3],octquadrant);if(collided){octquadrant.entities[j3]=check[j3];delete check[j3]}}if(Object.keys(octquadrant.entities).length>minEntities-1){head2.children[i]=octquadrant;octquadrant.parent=head2;if(Object.keys(octquadrant.entities).length>minEntities&&octquadrant.collisionRadius*.5>minRadius){genOctTree(octquadrant)}}}};genOctTree(head);return head}else{let tree=Systems.collision.nearestNeighborSearch(positions,withinRadius);let keys=Object.keys(tree);let tag=keys[Math.floor(Math.random()*keys.length)];let searching=true;let count=0;let genBoundingBoxLevel=(tree2,volumes)=>{let newVolumes={};let foundidxs={};let treekeys=Object.keys(tree2);while(searching&&count<treekeys.length){let node=tree2[tag];let i=0;let j3=0;let ux=positions[node.tag].x-volumes[node.tag].collisionBoundsScale.x,uy=positions[node.tag].y-volumes[node.tag].collisionBoundsScale.y,uz=positions[node.tag].z-volumes[node.tag].collisionBoundsScale.z,mx=positions[node.tag].x+volumes[node.tag].collisionBoundsScale.x,my=positions[node.tag].y+volumes[node.tag].collisionBoundsScale.y,mz=positions[node.tag].z+volumes[node.tag].collisionBoundsScale.z;let newvolume=JSON.parse(JSON.stringify(dynamicBoundingVolumeTree.proto));newvolume.tag=`bound${Math.floor(Math.random()*1e15)}`;newvolume.children[node.tag]=volumes[node.tag];newvolume.bodies[node.tag]=entities[node.tag];volumes[node.tag].parent=newvolume;foundidxs[node.tag]=true;i++;j3++;let nkeys=Object.keys(node.neighbors);while(i<nkeys.length&&j3<3){if(foundidxs[node.neighbors[i].tag]){i++;continue}let uxn=positions[node.neighbors[i].tag].x-volumes[node.neighbors[i].tag].collisionBoundsScale.x,uyn=positions[node.neighbors[i].tag].y-volumes[node.neighbors[i].tag].collisionBoundsScale.y,uzn=positions[node.neighbors[i].tag].z-volumes[node.neighbors[i].tag].collisionBoundsScale.z,mxn=positions[node.neighbors[i].tag].x+volumes[node.neighbors[i].tag].collisionBoundsScale.x,myn=positions[node.neighbors[i].tag].y+volumes[node.neighbors[i].tag].collisionBoundsScale.y,mzn=positions[node.neighbors[i].tag].z+volumes[node.neighbors[i].tag].collisionBoundsScale.z;if(ux>uxn)ux=uxn;if(mx<mxn)mx=mxn;if(uy>uyn)uy=uyn;if(my<myn)my=myn;if(uz>uzn)uz=uzn;if(mz<mzn)mz=mzn;newvolume.children[node.neighbors[i].tag]=volumes[node.neighbors[i].tag];newvolume.entities[node.neighbors[i].tag]=entities[node.neighbors[i].tag];volumes[node.neighbors[i].tag].parent=newvolume;foundidxs[node.neighbors[i].tag]=true;i++;j3++}let pos={x:(mx+ux)*.5,y:(my+uy)*.5,z:(mz+uz)*.5};let bounds={x:mx-pos.x,y:my-pos.y,z:mz-pos.z};newvolume.position=pos;newvolume.collisionBoundsScale=bounds;if(newvolume.bodies.length===1)newvolume=node;newVolumes[newvolume.tag]=newvolume;while(i<node.neighbors.length){if(!foundidxs[node.neighbors[i].tag])break;i++}if(i<node.neighbors.length){tag=node.neighbors[i].tag}else if(Object.keys(foundidxs).length<Object.keys(tree2).length){tag=keys[0]}else searching=false;count++}return newVolumes};let result=genBoundingBoxLevel(tree,entities);while(Object.keys(result).length>2){let nextTree=Systems.collision.nearestNeighborSearch(result,withinRadius);result=genBoundingBoxLevel(nextTree,result)}head.children=result;head.children.forEach(n=>{n.parent=head});return head}}},collider:{lastTime:performance.now(),setupEntities:function(entities){for(const key in entities){const entity=entities[key];if(entity.components){if(!entity.components[this.__node.tag])continue}this.setupEntity(entity)}return entities},setupEntity:function(entity){if(!("collisionEnabled"in entity))Systems.collision.setupEntity(entity);if(!("boundingBox"in entity))entity.boundingBox={bot:0,top:100,left:0,right:100,front:0,back:100};if(!("position"in entity)){Systems.movement.setupEntity(entity)}if(!("restitution"in entity))entity.restitution=1;if(!("useBoundingBox"in entity))entity.useBoundingBox=true;if(!entity.position.x&&!entity.position.y&&!entity.position.z){entity.position.x=Math.random()*entity.boundingBox.right;entity.position.y=Math.random()*entity.boundingBox.back;entity.position.z=Math.random()*entity.boundingBox.top}return entity},__operator:function(entities){let keys=this.entityKeys;for(let i=0;i<keys.length;i++){const entity1=entities[keys[i]];if(entity1.components){if(!entity1.components[this.__node.tag]||!entity1.collisionEnabled)continue}if(entity1.useBoundingBox)this.checkBoundingBox(entity1);if(!entity1.collisionEnabled)continue;if(entity1.colliding){for(const key2 in entity1.colliding){const entity2=entities[key2];if(entity1.colliding[key2]===false){delete entity1.colliding[key2];delete entity2.colliding[entity1.__node.tag];continue}if(!entity2.collisionEnabled)continue;if(entity2.collisionType==="box"){this.resolveBoxCollision(entity1,entity2,entity1.colliding[key2])}else{if(entity1.collisionType==="box"){entity1.fixed=true;this.resolveSphereCollisions(entity1,entity2,entity1.colliding[key2]);entity1.fixed=false}else{this.resolveSphereCollisions(entity1,entity2,entity1.colliding[key2]);delete entity2.colliding[entity1.__node.tag]}}delete entity1.colliding[entity2.__node.tag]}delete entity1.colliding}}return entities},__node:{tag:"collider"},checkBoundingBox:entity=>{const xsize=entity.collisionRadius*entity.collisionBoundsScale.x;const ysize=entity.collisionRadius*entity.collisionBoundsScale.y;const zsize=entity.collisionRadius*entity.collisionBoundsScale.z;if(entity.position.y-ysize<=entity.boundingBox.front){entity.velocity.y*=-entity.restitution;entity.position.y=entity.boundingBox.front+ysize}if(entity.position.y+ysize>=entity.boundingBox.back){entity.velocity.y*=-entity.restitution;entity.position.y=entity.boundingBox.back-ysize}if(entity.position.x-xsize<=entity.boundingBox.left){entity.velocity.x*=-entity.restitution;entity.position.x=entity.boundingBox.left+xsize}if(entity.position.x+xsize>=entity.boundingBox.right){entity.velocity.x*=-entity.restitution;entity.position.x=entity.boundingBox.right-xsize}if(entity.position.z-zsize<=entity.boundingBox.bot){entity.velocity.z*=-entity.restitution;entity.position.z=entity.boundingBox.bot+zsize}if(entity.position.z+zsize>=entity.boundingBox.top){entity.velocity.z*=-entity.restitution;entity.position.z=entity.boundingBox.top-zsize}},resolveBoxCollision:(body1,box,negate)=>{let positionVec=Systems.collision.makeVec(body1.position,box.position);var directionVec=Object.values(positionVec);let closestSide;let closestDist=Infinity;let mul2=-1;if(directionVec[idx]<0)mul2=1;if(negate)mul2=-mul2;for(const key in body1.position){let dist=Math.abs(box.position[key]-body1.position[key]);if(dist<closestDist&&Math.abs(box.position[key]-body1.position[key]+body1.velocity[key]*1e-17)<dist){closestSide=key;closestDist=dist}}var idx=directionVec.indexOf(closestSide);if(idx===0)idx="x";if(idx===1)idx="y";if(idx===2)idx="z";if(idx===3)idx="w";let boxEdgeAxisPosition=box.position[idx]+box.collisionRadius*box.collisionBoundsScale[idx]*mul2;if(negate){let body1Offset=boxEdgeAxisPosition-body1.collisionRadius*body1.collisionBoundsScale[idx]*mul2;body1.position[idx]=body1Offset}else{let body1Offset=boxEdgeAxisPosition+body1.collisionRadius*body1.collisionBoundsScale[idx]*mul2;body1.position[idx]=body1Offset}body1.velocity[idx]=-body1.velocity[idx]*body1.restitution;if(negate)body1.force[idx]=-body1.velocity[idx];var body2AccelMag=Systems.collision.magnitude(box.acceleration);var body2AccelNormal=Systems.collision.normalize(box.acceleration);body1.force[idx]=-body2AccelNormal[idx]*body2AccelMag*box.mass;if(negate)body1.force[idx]=-body1.force[idx]},resolveSphereCollisions:(entity1,entity2,dist)=>{if(dist===void 0)dist=Systems.collision.distance(entity1.position,entity2.position);let vecn=Systems.collision.normalize(Systems.collision.makeVec(entity1.position,entity2.position));let sumMass=entity1.mass+entity2.mass;let ratio=entity1.mass/sumMass;let rmin=1-ratio;if(entity1.fixed===false){entity1.position.x+=vecn.x*rmin*1.01;entity1.position.y+=vecn.y*rmin*1.01;entity1.position.z+=vecn.z*rmin*1.001}else{entity2.position.x-=vecn.x*1.01;entity2.position.y-=vecn.y*1.01;entity2.position.z-=vecn.z*1.01}if(entity2.fixed===false){entity2.position.x+=vecn.x*ratio*1.01;entity2.position.y+=vecn.y*ratio*1.01;entity2.position.z+=vecn.z*ratio*1.01}else{entity1.position.x+=vecn.x*1.01;entity1.position.y+=vecn.y*1.01;entity1.position.z+=vecn.z*1.01}dist=Systems.collision.distance(entity1.position,entity2.position);let vrel={x:entity1.velocity.x-entity2.velocity.x,y:entity1.velocity.y-entity2.velocity.y,z:entity1.velocity.z-entity2.velocity.z};let speed=vrel.x*vecn.x+vrel.y*vecn.y+vrel.z*vecn.z;if(speed>0){let impulse=2*speed/sumMass;if(entity1.fixed===false){entity1.velocity.x-=impulse*vecn.x*entity2.mass*entity1.restitution;entity1.velocity.y-=impulse*vecn.y*entity2.mass*entity1.restitution;entity1.velocity.z-=impulse*vecn.z*entity2.mass*entity1.restitution}if(entity2.fixed===false){entity2.velocity.x+=impulse*vecn.x*entity2.mass*entity2.restitution/entity2.mass;entity2.velocity.y+=impulse*vecn.y*entity2.mass*entity2.restitution/entity2.mass;entity2.velocity.z+=impulse*vecn.z*entity2.mass*entity2.restitution/entity2.mass}}}},nbody:{lastTime:performance.now(),G:6674e-14,setupEntities:function(entities){for(const key in entities){const entity=entities[key];if(entity.components){if(!entity.components[this.__node.tag])continue}this.setupEntity(entity)}return entities},setupEntity:function(entity){if(!("collisionEnabled"in entity))Systems.collider.setupEntity(entity);entity.isAttractor=true;if(!("attractorGroup"in entity))entity.attractorGroup=0;if(!("attractorFrameSearchMax"in entity))entity.attractorFrameSearchMax=10;if(!("attractorGroupRules"in entity))entity.attractorGroupRules={0:{G:this.G,maxDist:void 0}};return entity},__operator:function(entities){let keys=this.entityKeys;for(let i=0;i<keys.length;i++){const entity=entities[keys[i]];if(entity.components){if(!entity.components[this.__node.tag])continue}if(!entity.mass)continue;let nSearched=0;nested:for(let j3=0;j3<keys.length;j3++){let randKey=keys[Math.floor(Math.random()*keys.length)];nSearched++;const entity2=entities[randKey];if(entity2.components){if(!entity2.components[this.__node.tag])continue nested}if(!entity2.mass||!entity2.isAttractor)continue nested;this.attract(entity,entity2,void 0,this.G);if(nSearched>entity.attractorFrameSearchMax)break nested}}return entities},__node:{tag:"nbody"},attract:function(body1,body2,dist,G3=this.G,vecn){if(dist===void 0)dist=Systems.collision.distance3D(body1.position,body2.position);if(vecn===void 0)vecn=Systems.collision.normalize(Systems.collision.makeVec(body1.position,body2.position));let Fg=0;if(dist<.01)dist=.01;if(body1.attractorGroupRules[body2.attractorGroup]){if(typeof body1.attractorGroupRules[body2.attractorGroup]==="object"){if(body1.attractorGroupRules[body2.attractorGroup].maxDist&&body1.attractorGroupRules[body2.attractorGroup].maxDist<dist){}else Fg=body1.attractorGroupRules[body2.attractorGroup].G*body1.mass*body2.mass/(dist*dist)}else Fg=body1.attractorGroupRules[body2.attractorGroup]*body1.mass*body2.mass/(dist*dist)}else Fg=G3*body1.mass*body2.mass/(dist*dist);body1.force.x+=vecn.x*Fg;body1.force.y+=vecn.y*Fg;body1.force.z+=vecn.z*Fg;body2.force.x-=vecn.x*Fg;body2.force.y-=vecn.y*Fg;body2.force.z-=vecn.z*Fg}},boid:{lastTime:performance.now(),defaultAnchor:{x:Math.random(),y:Math.random(),z:Math.random(),mul:.006},setupEntities:function(entities){for(const key in entities){const entity=entities[key];this.setupEntity(entity)}return entities},setupEntity:function(entity){if(!entity.position){Systems.collider.setupEntity(entity)}let adjustedAnchor=Object.assign({},this.defaultAnchor);adjustedAnchor.x*=entity.boundingBox.right;adjustedAnchor.y*=entity.boundingBox.back;adjustedAnchor.z*=entity.boundingBox.top;let boidDefaults={cohesion:1e-5,separation:1e-4,alignment:.006,swirl:adjustedAnchor,attractor:Object.assign(adjustedAnchor,{mul:.002}),useCohesion:true,useSeparation:true,useAlignment:true,useSwirl:true,useAttractor:true,useAttraction:false,groupRadius:200,groupSize:5,searchLimit:5};if(!entity.boid){entity.boid=boidDefaults}else entity.boid=Object.assign(boidDefaults,entity.boid);if(this.entityKeys.length>1e3){entity.boid.groupSize=1;entity.boid.searchLimit=1}return entity},__operator:function(entities){let now=performance.now();let timeStep=now-this.lastTime;this.lastTime=now;let keys=this.entityKeys;let length=keys.length;let _timeStep=1/timeStep;let w22=-1;outer:for(let i=0;i<keys.length;i++){w22++;let p0=entities[keys[i]];const inRange=[];const distances=[];const boidVelocities=[p0.position.x,p0.position.y,p0.position.z,0,0,0,p0.velocity.x,p0.velocity.y,p0.velocity.z,0,0,0,0,0,0,0,0,0];let groupCount=1;let k2=-1;nested:for(let j3=0;j3<keys.length;j3++){k2++;if(distances.length>p0.boid.groupSize||k2>p0.boid.searchLimit){break nested}let randj=keys[Math.floor(Math.random()*length)];if(k2===w22||randj===keys[i]||inRange.indexOf(randj)>-1){continue nested}else{let pr2=entities[randj];let disttemp=Math.sqrt((p0.position.x-pr2.position.x)*(p0.position.x-pr2.position.x)+(p0.position.y-pr2.position.y)*(p0.position.y-pr2.position.y)+(p0.position.z-pr2.position.z)*(p0.position.z-pr2.position.z));if(disttemp>p0.boid.groupRadius){continue nested}else{distances.push(disttemp);inRange.push(randj);let distInv;if(p0.boid.useSeparation||p0.boid.useAlignment){distInv=p0.boid.groupRadius/(disttemp*disttemp);if(distInv>p0.maxSpeed)distInv=p0.maxSpeed;else if(distInv<-p0.maxSpeed)distInv=-p0.maxSpeed}if(p0.boid.useCohesion){boidVelocities[0]+=(pr2.position.x-p0.position.x)*.5*disttemp*_timeStep;boidVelocities[1]+=(pr2.position.y-p0.position.y)*.5*disttemp*_timeStep;boidVelocities[2]+=(pr2.position.z-p0.position.z)*.5*disttemp*_timeStep}if(isNaN(disttemp)||isNaN(boidVelocities[0])||isNaN(pr2.position.x)){console.log(disttemp,i,randj,p0.position,pr2.position,boidVelocities);p0.position.x=NaN;return}if(p0.boid.useSeparation){boidVelocities[3]=boidVelocities[3]+(p0.position.x-pr2.position.x)*distInv;boidVelocities[4]=boidVelocities[4]+(p0.position.y-pr2.position.y)*distInv;boidVelocities[5]=boidVelocities[5]+(p0.position.z-pr2.position.z)*distInv}if(p0.boid.useAttraction&&pr2.boid.useAttraction){Systems.nbody.attract(p0,pr2,disttemp)}if(p0.boid.useAlignment){boidVelocities[6]=boidVelocities[6]+pr2.velocity.x*distInv;boidVelocities[7]=boidVelocities[7]+pr2.velocity.y*distInv;boidVelocities[8]=boidVelocities[8]+pr2.velocity.z*distInv}groupCount++}}}let _groupCount=1/groupCount;if(p0.boid.useCohesion){boidVelocities[0]=p0.boid.cohesion*(boidVelocities[0]*_groupCount);boidVelocities[1]=p0.boid.cohesion*(boidVelocities[1]*_groupCount);boidVelocities[2]=p0.boid.cohesion*(boidVelocities[2]*_groupCount)}else{boidVelocities[0]=0;boidVelocities[1]=0;boidVelocities[2]=0}if(p0.boid.useSeparation){boidVelocities[3]=p0.boid.separation*boidVelocities[3];boidVelocities[4]=p0.boid.separation*boidVelocities[4];boidVelocities[5]=p0.boid.separation*boidVelocities[5]}else{boidVelocities[3]=0;boidVelocities[4]=0;boidVelocities[5]=0}if(p0.boid.useAlignment){boidVelocities[6]=-(p0.boid.alignment*boidVelocities[6]*_groupCount);boidVelocities[7]=p0.boid.alignment*boidVelocities[7]*_groupCount;boidVelocities[8]=p0.boid.alignment*boidVelocities[8]*_groupCount}else{boidVelocities[6]=0;boidVelocities[7]=0;boidVelocities[8]=0}const swirlVec=[0,0,0];if(p0.boid.useSwirl==true){boidVelocities[9]=-(p0.position.y-p0.boid.swirl.y)*p0.boid.swirl.mul;boidVelocities[10]=(p0.position.z-p0.boid.swirl.z)*p0.boid.swirl.mul;boidVelocities[11]=(p0.position.x-p0.boid.swirl.x)*p0.boid.swirl.mul}const attractorVec=[0,0,0];if(p0.boid.useAttractor==true){boidVelocities[12]=(p0.boid.attractor.x-p0.position.x)*p0.boid.attractor.mul;if(p0.position.x>p0.boundingBox.left||p0.position.x<p0.boundingBox.right){boidVelocities[12]*=3}boidVelocities[13]=(p0.boid.attractor.y-p0.position.y)*p0.boid.attractor.mul;if(p0.position.y>p0.boundingBox.top||p0.position.y<p0.boundingBox.bottom){boidVelocities[13]*=3}boidVelocities[14]=(p0.boid.attractor.z-p0.position.z)*p0.boid.attractor.mul;if(p0.position.z>p0.boundingBox.front||p0.position.z<p0.boundingBox.back){boidVelocities[14]*=3}}p0.velocity.x=p0.velocity.x+boidVelocities[0]+boidVelocities[3]+boidVelocities[6]+boidVelocities[9]+boidVelocities[12]+boidVelocities[15],p0.velocity.y=p0.velocity.y+boidVelocities[1]+boidVelocities[4]+boidVelocities[7]+boidVelocities[10]+boidVelocities[13]+boidVelocities[16],p0.velocity.z=p0.velocity.z+boidVelocities[2]+boidVelocities[5]+boidVelocities[8]+boidVelocities[11]+boidVelocities[14]+boidVelocities[17];if(isNaN(p0.velocity.x))console.error(p0,i,groupCount,p0.position,p0.velocity,swirlVec,attractorVec)}return entities},__node:{tag:"boid"}},movement:{__node:{tag:"movement"},lastTime:performance.now(),setupEntities:function(entities){for(const key in entities){const entity=entities[key];if(entity.components){if(!entity.components[this.__node.tag])continue}this.setupEntity(entity)}},setupEntity:function(entity){if(!("mass"in entity))entity.mass=1;if(!("fixed"in entity))entity.fixed=false;if(!entity.force)entity.force={x:0,y:0,z:0};if(!("mass"in entity))entity.mass=1;if(!("gravity"in entity))entity.gravity=-9.81;if(!entity.acceleration)entity.acceleration={x:0,y:0,z:0};if(!entity.velocity)entity.velocity={x:0,y:0,z:0};if(!("maxSpeed"in entity))entity.maxSpeed=10;if(!entity.position)entity.position={x:0,y:0,z:0};return entity},__operator:function(entities){let now=performance.now();let timeStep=(now-this.lastTime)*.001;this.lastTime=now;let keys=this.entityKeys;for(let i=0;i<keys.length;i++){const entity=entities[keys[i]];if(entity.components){if(!entity.components[this.__node.tag])continue}if(entity.fixed)continue;if(entity.mass){if(entity.force.x){entity.acceleration.x+=entity.force.x/entity.mass;entity.force.x=0}if(entity.force.y){entity.acceleration.y+=entity.force.y/entity.mass;entity.force.y=0}if(entity.force.z){entity.acceleration.z+=entity.force.z/entity.mass+entity.gravity;entity.force.z=0}}if(entity.drag){if(entity.acceleration.x)entity.acceleration.x-=entity.acceleration.x*entity.drag*timeStep;if(entity.acceleration.y)entity.acceleration.y-=entity.acceleration.y*entity.drag*timeStep;if(entity.acceleration.z)entity.acceleration.z-=entity.acceleration.z*entity.drag*timeStep}if(entity.acceleration.x)entity.velocity.x+=entity.acceleration.x*timeStep;if(entity.acceleration.y)entity.velocity.y+=entity.acceleration.y*timeStep;if(entity.acceleration.z)entity.velocity.z+=entity.acceleration.z*timeStep;if(entity.maxSpeed>0){let magnitude=Systems.collision.magnitude(entity.velocity);if(magnitude>entity.maxSpeed){let scalar=entity.maxSpeed/magnitude;entity.velocity.x*=scalar;entity.velocity.y*=scalar;entity.velocity.z*=scalar}}if(entity.velocity.x)entity.position.x+=entity.velocity.x*timeStep;if(entity.velocity.y)entity.position.y+=entity.velocity.y*timeStep;if(entity.velocity.z)entity.position.z+=entity.velocity.z*timeStep}return entities}}};var b=class{constructor(e,t2,s,h){this.r=e,this.g=t2,this.b=s,this.a=h}};var x2=class{constructor(){this.scaleX=1,this.scaleY=1,this.offsetX=0,this.offsetY=0,this.loop=false,this._vbuffer=0,this._coord=0,this.visible=true,this.intensity=1,this.xy=new Float32Array([]),this.numPoints=0,this.color=new b(0,0,0,1),this.webglNumPoints=0}};var v=class extends x2{constructor(e,t2){super(),this.currentIndex=0,this.webglNumPoints=t2,this.numPoints=t2,this.color=e,this.xy=new Float32Array(2*this.webglNumPoints)}setX(e,t2){this.xy[e*2]=t2}setY(e,t2){this.xy[e*2+1]=t2}getX(e){return this.xy[e*2]}getY(e){return this.xy[e*2+1]}lineSpaceX(e,t2){for(let s=0;s<this.numPoints;s++)this.setX(s,e+t2*s)}arrangeX(){this.lineSpaceX(-1,2/this.numPoints)}constY(e){for(let t2=0;t2<this.numPoints;t2++)this.setY(t2,e)}shiftAdd(e){let t2=e.length;for(let s=0;s<this.numPoints-t2;s++)this.setY(s,this.getY(s+t2));for(let s=0;s<t2;s++)this.setY(s+this.numPoints-t2,e[s])}addArrayY(e){if(this.currentIndex+e.length<=this.numPoints)for(let t2=0;t2<e.length;t2++)this.setY(this.currentIndex,e[t2]),this.currentIndex++}replaceArrayY(e){if(e.length==this.numPoints)for(let t2=0;t2<this.numPoints;t2++)this.setY(t2,e[t2])}};var Y=(f,e,t2)=>{let s={x:0,y:0};return s.x=f.x+e.x*t2,s.y=f.y+e.y*t2,s};var _=f=>P(-f.y,f.x);var w=(f,e)=>{let t2=T(f,e);return t2=M(t2),t2};var S=(f,e)=>{let t2={x:0,y:0};return t2.x=f.x+e.x,t2.y=f.y+e.y,t2};var R=(f,e)=>f.x*e.x+f.y*e.y;var M=f=>{let e={x:0,y:0},t2=f.x*f.x+f.y*f.y;return t2>0&&(t2=1/Math.sqrt(t2),e.x=f.x*t2,e.y=f.y*t2),e};var P=(f,e)=>{let t2={x:0,y:0};return t2.x=f,t2.y=e,t2};var T=(f,e)=>{let t2={x:0,y:0};return t2.x=f.x-e.x,t2.y=f.y-e.y,t2};var C2=f=>{let e,t2={x:0,y:0},s={x:0,y:0},h=[],r=(n,l)=>{h.push({vec2:n,miterLength:l})},a=n=>({x:f[n*2],y:f[n*2+1]});t2=w(a(1),a(0)),e=_(t2),r(e,1);let o2=f.length/2;for(let n=1;n<o2-1;n++){let l=a(n-1),i=a(n),u2=a(n+1);t2=w(i,l),e=_(t2),s=w(u2,i);let c2=F2(t2,s),g3=N(t2,c2,1);r(c2,g3)}return t2=w(a(o2-1),a(o2-2)),e=_(t2),r(e,1),h};var F2=(f,e)=>{let t2=S(f,e);return t2=M(t2),P(-t2.y,t2.x)};var N=(f,e,t2)=>{let s=P(-f.y,f.x);return t2/R(e,s)};var d=class extends x2{constructor(e,t2,s){super(),this.currentIndex=0,this._thicknessRequested=0,this._actualThickness=0,this.webglNumPoints=t2*2,this.numPoints=t2,this.color=e,this._thicknessRequested=s,this._linePoints=new Float32Array(t2*2),this.xy=new Float32Array(2*this.webglNumPoints)}convertToTriPoints(){let e=this._actualThickness/2,t2=C2(this._linePoints);for(let s=0;s<this.numPoints;s++){let h=this._linePoints[2*s],r=this._linePoints[2*s+1],a={x:h,y:r},o2=Y(a,t2[s].vec2,t2[s].miterLength*e),n=Y(a,t2[s].vec2,-t2[s].miterLength*e);this.xy[s*4]=o2.x,this.xy[s*4+1]=o2.y,this.xy[s*4+2]=n.x,this.xy[s*4+3]=n.y}}setX(e,t2){this._linePoints[e*2]=t2}setY(e,t2){this._linePoints[e*2+1]=t2}lineSpaceX(e,t2){for(let s=0;s<this.numPoints;s++)this.setX(s,e+t2*s)}setThickness(e){this._thicknessRequested=e}getThickness(){return this._thicknessRequested}setActualThickness(e){this._actualThickness=e}};var A2=class{constructor(e,t2){this.debug=false,this.addLine=this.addDataLine,t2==null?this.webgl=e.getContext("webgl",{antialias:true,transparent:false}):(this.webgl=e.getContext("webgl",{antialias:t2.antialias,transparent:t2.transparent,desynchronized:t2.deSync,powerPerformance:t2.powerPerformance,preserveDrawing:t2.preserveDrawing}),this.debug=t2.debug==null?false:t2.debug),this.log("canvas type is: "+e.constructor.name),this.log(`[webgl-plot]:width=${e.width}, height=${e.height}`),this._linesData=[],this._linesAux=[],this._thickLines=[],this._surfaces=[],this.gScaleX=1,this.gScaleY=1,this.gXYratio=1,this.gOffsetX=0,this.gOffsetY=0,this.gLog10X=false,this.gLog10Y=false,this.webgl.clear(this.webgl.COLOR_BUFFER_BIT),this.webgl.viewport(0,0,e.width,e.height),this._progLine=this.webgl.createProgram(),this.initThinLineProgram(),this.webgl.enable(this.webgl.BLEND),this.webgl.blendFunc(this.webgl.SRC_ALPHA,this.webgl.ONE_MINUS_SRC_ALPHA)}get linesData(){return this._linesData}get linesAux(){return this._linesAux}get thickLines(){return this._thickLines}get surfaces(){return this._surfaces}_drawLines(e){let t2=this.webgl;e.forEach(s=>{if(s.visible){t2.useProgram(this._progLine);let h=t2.getUniformLocation(this._progLine,"uscale");t2.uniformMatrix2fv(h,false,new Float32Array([s.scaleX*this.gScaleX*(this.gLog10X?1/Math.log(10):1),0,0,s.scaleY*this.gScaleY*this.gXYratio*(this.gLog10Y?1/Math.log(10):1)]));let r=t2.getUniformLocation(this._progLine,"uoffset");t2.uniform2fv(r,new Float32Array([s.offsetX+this.gOffsetX,s.offsetY+this.gOffsetY]));let a=t2.getUniformLocation(this._progLine,"is_log");t2.uniform2iv(a,new Int32Array([this.gLog10X?1:0,this.gLog10Y?1:0]));let o2=t2.getUniformLocation(this._progLine,"uColor");t2.uniform4fv(o2,[s.color.r,s.color.g,s.color.b,s.color.a]),t2.bufferData(t2.ARRAY_BUFFER,s.xy,t2.STREAM_DRAW),t2.drawArrays(s.loop?t2.LINE_LOOP:t2.LINE_STRIP,0,s.webglNumPoints)}})}_drawSurfaces(e){let t2=this.webgl;e.forEach(s=>{if(s.visible){t2.useProgram(this._progLine);let h=t2.getUniformLocation(this._progLine,"uscale");t2.uniformMatrix2fv(h,false,new Float32Array([s.scaleX*this.gScaleX*(this.gLog10X?1/Math.log(10):1),0,0,s.scaleY*this.gScaleY*this.gXYratio*(this.gLog10Y?1/Math.log(10):1)]));let r=t2.getUniformLocation(this._progLine,"uoffset");t2.uniform2fv(r,new Float32Array([s.offsetX+this.gOffsetX,s.offsetY+this.gOffsetY]));let a=t2.getUniformLocation(this._progLine,"is_log");t2.uniform2iv(a,new Int32Array([this.gLog10X?1:0,this.gLog10Y?1:0]));let o2=t2.getUniformLocation(this._progLine,"uColor");t2.uniform4fv(o2,[s.color.r,s.color.g,s.color.b,s.color.a]),t2.bufferData(t2.ARRAY_BUFFER,s.xy,t2.STREAM_DRAW),t2.drawArrays(t2.TRIANGLE_STRIP,0,s.webglNumPoints)}})}_drawTriangles(e){let t2=this.webgl;t2.bufferData(t2.ARRAY_BUFFER,e.xy,t2.STREAM_DRAW),t2.useProgram(this._progLine);let s=t2.getUniformLocation(this._progLine,"uscale");t2.uniformMatrix2fv(s,false,new Float32Array([e.scaleX*this.gScaleX*(this.gLog10X?1/Math.log(10):1),0,0,e.scaleY*this.gScaleY*this.gXYratio*(this.gLog10Y?1/Math.log(10):1)]));let h=t2.getUniformLocation(this._progLine,"uoffset");t2.uniform2fv(h,new Float32Array([e.offsetX+this.gOffsetX,e.offsetY+this.gOffsetY]));let r=t2.getUniformLocation(this._progLine,"is_log");t2.uniform2iv(r,new Int32Array([0,0]));let a=t2.getUniformLocation(this._progLine,"uColor");t2.uniform4fv(a,[e.color.r,e.color.g,e.color.b,e.color.a]),t2.drawArrays(t2.TRIANGLE_STRIP,0,e.xy.length/2)}_drawThickLines(){this._thickLines.forEach(e=>{if(e.visible){let t2=Math.min(this.gScaleX,this.gScaleY);e.setActualThickness(e.getThickness()/t2),e.convertToTriPoints(),this._drawTriangles(e)}})}update(){this.clear(),this.draw()}draw(){this._drawLines(this.linesData),this._drawLines(this.linesAux),this._drawThickLines(),this._drawSurfaces(this.surfaces)}clear(){this.webgl.clear(this.webgl.COLOR_BUFFER_BIT)}_addLine(e){e._vbuffer=this.webgl.createBuffer(),this.webgl.bindBuffer(this.webgl.ARRAY_BUFFER,e._vbuffer),this.webgl.bufferData(this.webgl.ARRAY_BUFFER,e.xy,this.webgl.STREAM_DRAW),e._coord=this.webgl.getAttribLocation(this._progLine,"coordinates"),this.webgl.vertexAttribPointer(e._coord,2,this.webgl.FLOAT,false,0,0),this.webgl.enableVertexAttribArray(e._coord)}addDataLine(e){this._addLine(e),this.linesData.push(e)}addAuxLine(e){this._addLine(e),this.linesAux.push(e)}addThickLine(e){this._addLine(e),this._thickLines.push(e)}addSurface(e){this._addLine(e),this.surfaces.push(e)}initThinLineProgram(){let e=`\n      attribute vec2 coordinates;\n      uniform mat2 uscale;\n      uniform vec2 uoffset;\n      uniform ivec2 is_log;\n\n      void main(void) {\n         float x = (is_log[0]==1) ? log(coordinates.x) : coordinates.x;\n         float y = (is_log[1]==1) ? log(coordinates.y) : coordinates.y;\n         vec2 line = vec2(x, y);\n         gl_Position = vec4(uscale*line + uoffset, 0.0, 1.0);\n      }`,t2=this.webgl.createShader(this.webgl.VERTEX_SHADER);this.webgl.shaderSource(t2,e),this.webgl.compileShader(t2);let s=`\n         precision mediump float;\n         uniform highp vec4 uColor;\n         void main(void) {\n            gl_FragColor =  uColor;\n         }`,h=this.webgl.createShader(this.webgl.FRAGMENT_SHADER);this.webgl.shaderSource(h,s),this.webgl.compileShader(h),this._progLine=this.webgl.createProgram(),this.webgl.attachShader(this._progLine,t2),this.webgl.attachShader(this._progLine,h),this.webgl.linkProgram(this._progLine)}popDataLine(){this.linesData.pop()}removeAllLines(){this._linesData=[],this._linesAux=[],this._thickLines=[],this._surfaces=[]}removeDataLines(){this._linesData=[]}removeAuxLines(){this._linesAux=[]}viewport(e,t2,s,h){this.webgl.viewport(e,t2,s,h)}log(e){this.debug&&console.log("[webgl-plot]:"+e)}};var y2=class{constructor(){this.plots={}}initPlot(e,t2){if(t2||(t2=new A2(e.canvas,e.webglOptions)),!e._id)e._id=`plot${Math.floor(Math.random()*1e15)}`;else if(this.plots[e._id]){let l=this.plots[e._id].initial;if(e.lines){for(let i in e.lines)if(l.lines[i]&&Array.isArray(e.lines[i])){let u2=e.lines[i];e.lines[i]=l.lines[i]}}e=Object.assign(l,e)}e.overlay&&(typeof e.overlay!="object"&&(e.overlay=document.createElement("canvas"),e.overlay.style.position="absolute",e.overlay.width=e.canvas.width,e.overlay.height=e.canvas.height,e.canvas.appendChild(e.overlay)),e.overlayCtx||(e.overlayCtx=e.overlay.getContext("2d"))),e.width&&(e.canvas.width=e.width,e.canvas.style&&(e.canvas.style.width=e.width+"px"),typeof e.overlay=="object"&&(e.overlay.width=e.width,e.overlay.style&&(e.overlay.style.width=e.width+"px"))),e.height&&(e.canvas.height=e.height,e.canvas.style&&(e.canvas.style.height=e.height+"px"),typeof e.overlay=="object"&&(e.overlay.height=e.height,e.overlay.style&&(e.overlay.style.height=e.height+"px"))),e.lines?.timestamp&&delete e.lines.timestamp,e.lines||(e.lines={});let s={};for(let l in e.lines)s[l]=Object.assign({},s[l]),"viewing"in e.lines[l]||(e.lines[l].viewing=true),s[l].viewing=e.lines[l].viewing,s[l].sps=e.lines[l].sps,s[l].nSec=e.lines[l].nSec,s[l].nPoints=e.lines[l].nPoints,s[l].ymin=e.lines[l].ymin,s[l].ymax=e.lines[l].ymax,s[l].units=e.lines[l].units;let h={plot:t2,settings:e,initial:Object.assign(Object.assign({},e),{lines:s}),anim:()=>{t2.update()}};this.plots[e._id]=h;let r=0,a=0;Object.keys(e.lines).forEach(l=>{e.lines[l]?.viewing!==false&&a++}),e.nLines=a;let o2,n;typeof e.overlay=="object"&&(o2=e.overlay,n=e.overlayCtx,n.clearRect(0,0,e.overlay.width,e.overlay.height),n.font=e.overlayFont?e.overlayFont:"1em Courier",n.fillStyle=e.overlayColor?e.overlayColor:"white");for(let l in e.lines){let i=e.lines[l];if(Array.isArray(i)&&(i={values:i},e.lines[l]=i),"viewing"in i||(i.viewing=true),i.color)Array.isArray(i.color)&&(i.color=new b(...i.color));else{let m=y2.HSLToRGB(360*(r/a)%360,100,50,1);h.initial.lines[l].color=[...m,1],i.color=new b(...m,1)}let u2;if(i.nSec&&i.sps?u2=Math.ceil(i.nSec*i.sps):i.nPoints?u2=i.nPoints:i.points?u2=i.points:e.linePoints?u2=e.linePoints:i.values?u2=i.values.length:u2=1e3,i.points=u2,e.lines[l].viewing===false)continue;if((i.width||e.lineWidth)&&i.width!==0){let m=e.lineWidth;m||(m=i.width),i.width?i.line=new d(i.color,u2,i.width):e.lineWidth&&(i.line=new d(i.color,u2,e.lineWidth)),i.line.lineSpaceX(-1,2/i.line.numPoints)}else i.line=new v(i.color,u2),i.line.arrangeX();i.values?.length===i.points?i.values.length!==u2&&(i.interpolate?i.values.length>u2?i.values=y2.downsample(i.values,u2):i.values.length<u2&&(i.values=y2.upsample(i.values,u2)):i.values.length>i.points?i.values=i.values.slice(i.values.length-i.points):i.values=[...new Array(i.points-i.values.length).fill(0),...i.values]):Array.isArray(i.values)?i.values.length>u2?i.values=i.values.slice(i.values.length-u2):i.values.length<u2&&(i.values=[...new Array(u2-i.values.length).fill(0),...i.values]):i.values=new Array(i.points).fill(0);let c2=i.ymin,g3=i.ymax;if(c2===g3?(g3=i.values.length<=1e5?Math.max(...i.values):1,c2=i.values.length<=1e5?Math.min(...i.values):0):isNaN(g3)&&(g3=i.values.length<=1e5?Math.max(...i.values):1),isNaN(c2)&&(c2=i.values.length<=1e5?Math.min(...i.values):0),c2>g3){let m=c2;g3=c2,c2=m}let p=Math.abs(c2);if(i.absmax=p>g3?p:g3,"autoscale"in i||(i.autoscale=true),i.position||(i.position=e.nLines-r-1),i.autoscale?i.autoscale===2?("clamp"in i||(i.clamp=true),i.scaled=y2.autoscale(i.values,i.position,a,i.centerZero,c2,g3,i.clamp)):(i.scaled=i.values,i.line.scaleY=y2.getYScalar(i.values,a,i.centerZero,c2,g3),i.line.offsetY=y2.getYOffset(i.position,a,c2,i.line.scaleY)):i.scaled=i.values,i.scaled.forEach((m,L)=>i.line.setY(L,m)),i.line instanceof d?t2.addThickLine(i.line):i.line instanceof v&&t2.addDataLine(i.line),"xAxis"in i||(i.xAxis=true),i.xAxis){i.xColor?Array.isArray(i.xColor)&&(i.xColor=new b(...i.xColor)):i.xColor=new b(1,1,1,.3);let m=new v(i.xColor,2),L=i.autoscale?(r+1)*2/a-1-1/a:0;m.constY(L),m.arrangeX(),m.xy[2]=1,i.x=m,t2.addAuxLine(m)}if(a>1&&i.autoscale&&r!==a-1){e.dividerColor?Array.isArray(e.dividerColor)&&(e.dividerColor=new b(...e.dividerColor)):e.dividerColor=new b(1,1,1,1);let m=new v(e.dividerColor,2);m.constY(i.autoscale?(r+1)*2/a-1:1),m.arrangeX(),m.xy[2]=1,i.divider=m,t2.addAuxLine(m)}if(typeof e.overlay=="object"&&(i.useOverlay||!("useOverlay"in i))){let m=e.nLines-i.position-1;n.fillText(l,20,o2.height*(m+.2)/e.nLines),n.fillText(`${Math.floor(g3)===g3?g3:g3?.toFixed(5)} ${i.units?i.units:""}`,o2.width-100,o2.height*(m+.2)/e.nLines),n.fillText(`${Math.floor(c2)===c2?c2:c2?.toFixed(5)} ${i.units?i.units:""}`,o2.width-100,o2.height*(m+.9)/e.nLines)}r++}return requestAnimationFrame(h.anim),this.plots[e._id]}deinitPlot(e){return typeof e=="string"&&(e=this.plots[e]),e.plot.clear(),e.plot.removeAllLines(),true}reinitPlot(e,t2){if(typeof e=="string"){let s=e;e=this.plots[e],t2._id||(t2._id=s)}if(!!e.plot)return e.plot.clear(),e.plot.removeAllLines(),e.settings.overlayCtx&&e.settings.overlayCtx.clearRect(0,0,e.settings.overlay?.width,e.settings.overlay?.height),this.initPlot(t2,e.plot)}getChartSettings(e,t2){let s=this.plots[e];if(s){let h=Object.assign({},s.initial);for(let r in s.initial.lines)typeof s.initial.lines[r]?.ymax!="number"&&(h.lines[r].ymax=s.settings.lines[r]?.ymax),typeof s.initial.lines[r]?.ymin!="number"&&(h.lines[r].ymin=s.settings.lines[r]?.ymin),t2&&(h.lines[r].values=s.settings.lines[r].values);return delete h.canvas,delete h.overlay,delete h.overlayCtx,h}}update(e,t2,s=true){if(typeof e=="string"&&(e=this.plots[e]),!e)return false;if(t2){let h=false,r,a;typeof e.settings.overlay=="object"&&(r=e.settings.overlay,a=e.settings.overlayCtx,a.font=e.settings.overlayFont?e.settings.overlayFont:"1em Courier",a.fillStyle=e.settings.overlayColor?e.settings.overlayColor:"white");for(let o2 in t2)if(e.settings.lines[o2]&&e.settings.lines[o2].line){if(e.settings.lines[o2]?.viewing===false)continue;let n=e.settings.lines[o2];if(Array.isArray(t2[o2])&&n.values.length<1e5?(n.values.length===0&&(n.values.length=n.points?n.points:1e3),t2[o2].length===n.values.length?n.values=t2[o2]:y2.circularBuffer(n.values,t2[o2])):typeof t2[o2]=="number"?(n.values.push(t2[o2]),n.values.shift()):t2[o2]?.values&&(n.values.length===0&&(n.values.length=n.points?n.points:1e3),t2[o2].values.length===n.values.length?n.values=t2[o2].values:y2.circularBuffer(n.values,t2[o2].values)),n.values){n.values.length!==n.points&&(n.interpolate?n.values.length>n.points?n.values=y2.downsample(n.values,n.points):n.scaled.length<n.points&&(n.values=y2.upsample(n.values,n.points)):n.values.length>n.points?n.values.splice(0,n.values.length-n.points):n.values=new Array(n.points).fill(0).splice(n.points-n.values.length,0,n.values));let l=n.ymin,i=n.ymax;if(l===i?(i=n.values.length<=1e5?Math.max(...n.values):1,l=n.values.length<=1e5?Math.min(...n.values):0):isNaN(i)&&(i=n.values.length<=1e5?Math.max(...n.values):1),isNaN(l)&&(l=n.values.length<=1e5?Math.min(...n.values):0),l>i){let c2=l;i=l,l=c2}let u2=Math.abs(l);if(n.absmax=u2>i?u2:i,n.autoscale?n.autoscale===2?n.scaled=y2.autoscale(n.values,n.position,e.settings.nLines,n.centerZero,l,i,n.clamp):(n.scaled=n.values,n.line.scaleY=y2.getYScalar(n.values,e.settings.nLines,n.centerZero,l,i),n.line.offsetY=y2.getYOffset(n.position,e.settings.nLines,l,n.line.scaleY)):n.scaled=n.values,n.scaled.forEach((c2,g3)=>{!n.autoscale&&n.absmax>1?n.line.setY(g3,c2/n.absmax):n.line.setY(g3,c2)}),typeof e.settings.overlay=="object"&&(n.useOverlay||!("useOverlay"in n))){let c2=e.settings.nLines-n.position-1;a.clearRect(0,r.height*c2/e.settings.nLines,r.width,r.height/e.settings.nLines),a.fillText(o2,20,r.height*(c2+.2)/e.settings.nLines),a.fillText(`${Math.floor(i)===i?i:i?.toFixed(5)} ${n.units?n.units:""}`,r.width-100,r.height*(c2+.2)/e.settings.nLines),a.fillText(`${Math.floor(l)===l?l:l?.toFixed(5)} ${n.units?n.units:""}`,r.width-100,r.height*(c2+.9)/e.settings.nLines)}}}else e.settings.generateNewLines&&!o2.includes("timestamp")&&(Array.isArray(t2[o2])&&(t2[o2]={values:t2[o2]}),!t2[o2].nSec&&!t2[o2].nPoints&&!e.settings.linePoints&&(t2[o2].nPoints=1e3),h=true);if(h)return e.settings.cleanGeneration||Object.keys(e.initial.lines).forEach(o2=>{t2[o2]?t2[o2]=Object.assign(e.initial.lines[o2],t2[o2]):t2[o2]=e.initial.lines[o2]}),this.reinitPlot(e,{_id:e.settings._id,lines:t2}),true}return s&&requestAnimationFrame(e.anim),true}updateLine(e,t2,s,h,r,a,o2){return e.numPoints!==t2.length&&(s?e.numPoints>t2.length?t2=y2.downsample(t2,e.numPoints):e.numPoints<t2.length&&(t2=y2.upsample(t2,e.numPoints)):t2.length>e.numPoints?t2=t2.slice(t2.length-e.numPoints):t2=[...new Array(t2.length).fill(0),...t2]),h&&(t2=y2.autoscale(t2,r,a,o2)),t2.forEach((n,l)=>e.setY(l,n)),true}static autoscale(e,t2=0,s=1,h=false,r,a,o2){if(e?.length===0)return e;let n=typeof a=="number"?a:e.length<=1e5?Math.max(...e):1,l=typeof r=="number"?r:e.length<=1e5?Math.min(...e):0,i=1/s,u2=1;if(h){let c2=Math.max(Math.abs(l),Math.abs(n));return c2!==0&&(u2=i/c2),e.map(g3=>(o2&&(g3<l&&(g3=l),g3>n&&(g3=n)),g3*u2+(i*(t2+1)*2-1-i)))}else return n===l?n!==0?u2=i/n:l!==0&&(u2=i/Math.abs(l)):u2=i/(n-l),e.map(c2=>(o2&&(c2<l&&(c2=l),c2>n&&(c2=n)),2*((c2-l)*u2-1/(2*s))+(i*(t2+1)*2-1-i)))}static getYScalar(e,t2=1,s=false,h,r){if(e?.length===0)return e;let a=typeof r=="number"?r:e.length<=1e5?Math.max(...e):1,o2=typeof h=="number"?h:e.length<=1e5?Math.min(...e):0,n=1/t2,l=1;if(s){let i=Math.max(Math.abs(o2),Math.abs(a));return i!==0&&(l=n/i),2*l}else return a===o2?a!==0?l=n/a:o2!==0&&(l=n/Math.abs(o2)):l=n/(a-o2),2*l}static getYOffset(e=0,t2=1,s=0,h=1){let r=1/t2,a=r*(e+1)*2-1-r;return s!==0?a-=s*h+1/t2:a-=h+1/t2,a}static absmax(e){return Math.max(Math.abs(Math.min(...e)),Math.max(...e))}static downsample(e,t2,s=1){if(e.length>t2){let h=new Array(t2),r=e.length/t2,a=e.length-1,o2=0,n=0;for(let l=r;l<e.length;l+=r){let i=Math.round(l);i>a&&(i=a);for(let u2=o2;u2<i;u2++)h[n]+=e[u2];h[n]/=(i-o2)*s,n++,o2=i}return h}else return e}static upsample(e,t2,s=1){var h=function(c2,g3,p){return(c2+(g3-c2)*p)*s},r=new Array(t2),a=(e.length-1)/(t2-1);r[0]=e[0];for(var o2=1;o2<t2-1;o2++){var n=o2*a,l=Math.floor(n),i=Math.ceil(n),u2=n-l;r[o2]=h(e[l],e[i],u2)}return r[t2-1]=e[e.length-1],r}static interpolate(e,t2,s=1){return e.length>t2?y2.downsample(e,t2,s):e.length<t2?y2.upsample(e,t2,s):e}static HSLToRGB(e,t2,s,h=255){t2/=100,s/=100;let r=(1-Math.abs(2*s-1))*t2,a=r*(1-Math.abs(e/60%2-1)),o2=s-r/2,n=0,l=0,i=0;return 0<=e&&e<60?(n=r,l=a,i=0):60<=e&&e<120?(n=a,l=r,i=0):120<=e&&e<180?(n=0,l=r,i=a):180<=e&&e<240?(n=0,l=a,i=r):240<=e&&e<300?(n=a,l=0,i=r):300<=e&&e<360&&(n=r,l=0,i=a),n=(n+o2)*h,l=(l+o2)*h,i=(i+o2)*h,[n,l,i]}static circularBuffer(e,t2){if(t2.length<e.length){let s=e.slice(t2.length),h=e.length;e.splice(0,h,...s,...t2)}else if(t2.length>e.length){let s=e.length;e.splice(0,s,...t2.slice(t2.length-s))}else e.splice(0,e.length,...t2);return e}static formatDataForCharts(e,t2){if(Array.isArray(e)){if(Array.isArray(e[0])){let s={};if(e.forEach((h,r)=>{s[r]=h}),e=s,isNaN(e[0][0]))return}else if(t2){if(e={[t2]:e},isNaN(e[t2][0]))return}else if(e={0:e},isNaN(e[0][0]))return}else if(typeof e=="object"){for(let s in e)if(typeof e[s]=="number"?e[s]=[e[s]]:e[s]?.values&&typeof e[s].values=="number"&&(e[s].values=[e[s].values]),isNaN(e[s][0]))return}else if(typeof e=="string"){let s;if(e.includes(`\\r\n`)){let h=e.split(`\\r\n`);e={},h.forEach((r,a)=>{r.includes("	")?s=r.split("	"):r.includes(",")?s=r.split(","):r.includes("|")&&(s=r.split("|")),s&&s.forEach((o2,n)=>{if(o2.includes(":")){let[l,i]=o2.split(":"),u2=parseFloat(i);isNaN(u2)||(e[l]=[u2])}else{let l=parseFloat(o2);isNaN(l)||(e[n]=[l])}})})}else e.includes("	")?s=e.split("	"):e.includes(",")?s=e.split(","):e.includes("|")&&(s=e.split("|"));e={},s&&s.forEach((h,r)=>{if(h.includes(":")){let[a,o2]=h.split(":"),n=parseFloat(o2);isNaN(n)||(e[a]=[n])}else{let a=parseFloat(h);isNaN(a)||(e[r]=[a])}})}else typeof e=="number"&&(t2?e={[t2]:[e]}:e={0:[e]});return e}static padTime(e,t2,s,h){let r=(e[0]-t2)/s/h;return[...new Array(h-e.length).map((o2,n)=>t2+r*(n+1)),...e]}static interpolateForTime(e,t2,s){return y2.interpolate(e,Math.ceil(s*t2))}};var webglPlotRoutes={setupChart:function setupChart(settings){console.log("initializing chart",settings);if(!this?.__node?.graph?.plotter){this.__node.graph.plotter=new y2;return this.__node.graph.plotter.initPlot(settings).settings._id}else{globalThis.plotter=new y2;return globalThis.plotter.initPlot(settings).settings._id}},updateChartData:function updateChartData(plot,lines,draw=true){if(typeof lines==="object"){if(globalThis.plotter)globalThis.plotter.update(plot,lines,draw);else if(this?.__node?.graph?.plotter)this.__node.graph.plotter.update(plot,lines,draw);return true}return false},clearChart:function clearChart(plot){if(globalThis.plotter)globalThis.plotter.deinitPlot(plot);else if(this?.__node?.graph?.plotter)this.__node.graph.plotter.deinitPlot(plot);return true},resetChart:function resetChart(plot,settings){if(globalThis.plotter)globalThis.plotter.reinitPlot(plot,settings);else if(this?.__node?.graph?.plotter)this.__node.graph.plotter.reinitPlot(plot,settings);return settings._id},getChartSettings:function getChartSettings(plotId){let settings;if(globalThis.plotter)settings=globalThis.plotter.getChartSettings(plotId);else if(this?.__node?.graph?.plotter)settings=this.__node.graph.plotter.getChartSettings(plotId);return settings}};var url=URL.createObjectURL(new Blob([String(\'(()=>{var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __commonJS=(cb,mod)=>function __require(){return mod||(0,cb[__getOwnPropNames(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from==="object"||typeof from==="function"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:true}):target,mod));var require_browser=__commonJS({"../../node_modules/web-worker/cjs/browser.js"(exports,module){module.exports=Worker}});var EventHandler=class{constructor(data){this.pushToState={};this.data={};this.triggers={};this.setState=updateObj=>{Object.assign(this.data,updateObj);let props=Object.getOwnPropertyNames(updateObj);for(const prop of props){if(this.triggers[prop]){let fn=obj=>{obj.onchange(this.data[prop])};this.triggers[prop].forEach(fn)}}return this.data};this.setValue=(key,value)=>{this.data[key]=value;this.triggerEvent(key,value)};this.triggerEvent=(key,value)=>{if(this.triggers[key]){let fn=obj=>{obj.onchange(value)};this.triggers[key].forEach(fn)}};this.subscribeEvent=(key,onchange,refObject,refKey)=>{if(key){if(refObject&&refKey&&!this.triggers[key]){Object.defineProperty(this.data,key,{get:()=>{return refObject[refKey]},set:value=>{refObject[refKey]=value},enumerable:true,configurable:true})}if(!this.triggers[key]){this.triggers[key]=[]}let l=this.triggers[key].length;this.triggers[key].push({sub:l,onchange});return this.triggers[key].length-1}else return void 0};this.unsubscribeEvent=(key,sub)=>{let triggers=this.triggers[key];if(triggers){if(!sub){delete this.triggers[key];delete this.data[key]}else{let sub2=void 0;let obj=triggers.find((o,i)=>{if(o.sub===sub2){sub2=i;return true}});if(obj)triggers.splice(sub2,1);if(Object.keys(triggers).length===0){delete this.triggers[key];delete this.data[key]}if(this.onRemoved)this.onRemoved(obj);return true}}};this.subscribeEventOnce=(key,onchange)=>{let sub;let changed=value=>{onchange(value);this.unsubscribeEvent(key,sub)};sub=this.subscribeEvent(key,changed)};this.getEvent=(key,sub)=>{for(const s in this.triggers[key]){if(this.triggers[key][s].sub===sub)return this.triggers[key][s]}};this.getSnapshot=()=>{const snapshot={};for(const key in this.data){snapshot[key]=this.data[key]}};if(typeof data==="object")this.data=data}};var state=new EventHandler;var GraphNode=class{constructor(properties,parent,graph){this.__node={tag:`node${Math.floor(Math.random()*1e15)}`,unique:`${Math.floor(Math.random()*1e15)}`,state};this.__setProperties=(properties,parent,graph)=>{let enforceProperties=()=>{let orig=properties;if(typeof properties==="function"){if(isNativeClass(properties)){properties=new properties}else properties={__operator:properties,__node:{forward:true,tag:properties.name}}}else if(typeof properties==="string"){if(graph?.get(properties)){properties=graph.get(properties)}}if(!properties.__node.initial)properties.__node.initial=orig};enforceProperties();if(typeof properties==="object"){let assignState=()=>{if(properties.__node?.state)this.__node.state=properties.__node.state};let setProps2=()=>{if(properties.__props){if(typeof properties.__props==="function")properties.__props=new properties.__props;if(typeof properties.__props==="object"){this.__proxyObject(properties.__props)}}};let setTag=()=>{if(!properties.__node.tag){if(properties.__operator?.name)properties.__node.tag=properties.__operator.name;else properties.__node.tag=`node${Math.floor(Math.random()*1e15)}`}};let setNode=()=>{if(typeof properties.__node==="string"){if(graph?.get(properties.__node.tag)){properties=graph.get(properties.__node.tag)}else properties.__node={}}else if(!properties.__node)properties.__node={};if(graph){properties.__node.graph=graph}if(properties instanceof Graph)properties.__node.source=properties};let setParent=()=>{if(!properties.__parent&&parent)properties.__parent=parent;if(parent?.__node&&!(parent instanceof Graph||properties instanceof Graph))properties.__node.tag=parent.__node.tag+"."+properties.__node.tag;if(parent instanceof Graph&&properties instanceof Graph){if(properties.__node.loaders)Object.assign(parent.__node.loaders?parent.__node.loaders:{},properties.__node.loaders);if(parent.__node.mapGraphs){properties.__node.nodes.forEach(n=>{parent.set(properties.__node.tag+"."+n.__node.tag,n)});let ondelete=()=>{properties.__node.nodes.forEach(n=>{parent.__node.nodes.delete(properties.__node.tag+"."+n.__node.tag)})};this.__addOndisconnected(ondelete)}}};let setOp=()=>{if(typeof properties.default==="function"&&!properties.__operator){properties.__operator=properties.default}if(properties.__operator){if(typeof properties.__operator==="string"){if(graph){let n=graph.get(properties.__operator);if(n)properties.__operator=n.__operator;if(!properties.__node.tag&&properties.__operator.name)properties.__node.tag=properties.__operator.name}}if(typeof properties.__operator==="function")properties.__operator=this.__setOperator(properties.__operator);if(properties.default)properties.default=properties.__operator}};let assignProps=()=>{properties.__node=Object.assign(this.__node,properties.__node);let keys=Object.getOwnPropertyNames(properties);for(const key of keys){this[key]=properties[key]}};assignState();setTag();setProps2();setNode();setParent();assignProps();setOp()}};this.__subscribe=(callback,key,subInput,bound,target)=>{const subscribeToFunction=(k,setTarget=(callback2,target2)=>callback2,triggerCallback=callback)=>{let sub=this.__node.state.subscribeEvent(k,triggerCallback,this,key);let trigger=this.__node.state.getEvent(k,sub);trigger.source=this.__node.tag;if(key)trigger.key=key;trigger.target=setTarget(callback);if(bound)trigger.bound=bound;return sub};const subscribeToGraph=callback2=>{let fn=this.__node.graph.get(callback2);if(!fn&&callback2.includes(".")){let n=this.__node.graph.get(callback2.substring(0,callback2.lastIndexOf(".")));let key2=callback2.substring(callback2.lastIndexOf(".")+1);if(n&&typeof n[key2]==="function")callback2=(...args)=>{return n[key2](...args)}}};if(key){if(!this.__node.localState||!this.__node.localState[key]){this.__addLocalState(this,key)}if(typeof callback==="string"){if(target){if(this.__node.graph?.get(target)){let n=this.__node.graph?.get(target);if(typeof n[callback]==="function"){let fn=n[callback];callback=(...inp)=>{fn(...inp)}}else{let k2=callback;let setter=inp=>{n[k2]=inp};callback=setter}}}else if(typeof this[callback]==="function"){let fn=this[callback];callback=(...inp)=>{fn(...inp)}}else if(this.__node.graph?.get(callback))subscribeToGraph(callback);if(typeof callback!=="function")return void 0}let sub;let k=subInput?this.__node.unique+"."+key+"input":this.__node.unique+"."+key;if(typeof callback==="function")sub=subscribeToFunction(k);else if(callback?.__node)sub=subscribeToFunction(k,(callback2,target2)=>target2?target2:callback2.__node.unique,(...inp)=>{if(callback.__operator)callback.__operator(...inp)});return sub}else{if(typeof callback==="string"){if(this.__node.graph.get(callback))callback=this.__node.graph.get(callback);if(typeof callback!=="object")return void 0}let sub;let k=subInput?this.__node.unique+"input":this.__node.unique;if(typeof callback==="function")sub=subscribeToFunction(k);else if(callback?.__node)sub=subscribeToFunction(k,(callback2,target2)=>target2?target2:callback2.__node.unique,(...inp)=>{if(callback.__operator)callback.__operator(...inp)});return sub}};this.__unsubscribe=(sub,key,unsubInput)=>{if(key)return this.__node.state.unsubscribeEvent(unsubInput?this.__node.unique+"."+key+"input":this.__node.unique+"."+key,sub);else return this.__node.state.unsubscribeEvent(unsubInput?this.__node.unique+"input":this.__node.unique,sub)};this.__setOperator=fn=>{fn=fn.bind(this);if(this.__args&&this.__node.graph){fn=wrapArgs(fn,this.__args,this.__node.graph)}let inpstr=`${this.__node.unique}input`;this.__operator=(...args)=>{if(this.__node.state.triggers[inpstr])this.__node.state.setValue(inpstr,args);let result=fn(...args);if(this.__node.state.triggers[this.__node.unique]){if(typeof result?.then==="function"){result.then(res=>{if(res!==void 0)this.__node.state.setValue(this.__node.unique,res)}).catch(console.error)}else if(result!==void 0)this.__node.state.setValue(this.__node.unique,result)}return result};if(this.__parent instanceof GraphNode&&!this.__subscribedToParent){if(this.__parent.__operator){let sub=this.__parent.__subscribe(this);let ondelete=()=>{this.__parent?.__unsubscribe(sub);delete this.__subscribedToParent};this.__addOndisconnected(ondelete);this.__subscribedToParent=true}}return this.__operator};this.__addLocalState=(props,key)=>{if(!props)return;if(!this.__node.localState){this.__node.localState={}}const localState=this.__node.localState;const initState=(props2,k)=>{let str=this.__node.unique+"."+k;let inpstr=`${str}input`;if(typeof props2[k]==="function"&&k!=="__operator"){let fn=props2[k].bind(this);props2[k]=(...args)=>{if(this.__node.state.triggers[inpstr])this.__node.state.setValue(inpstr,args);let result=fn(...args);if(this.__node.state.triggers[str]){if(typeof result?.then==="function"){result.then(res=>{this.__node.state.triggerEvent(str,res)}).catch(console.error)}else this.__node.state.triggerEvent(str,result)}return result}}else{let get,set;if(this.__props?.[k]){get=()=>{return this.__props[k]};set=v=>{this.__props[k]=v;if(this.__node.state.triggers[str])this.__node.state.triggerEvent(str,v)}}else{localState[k]=props2[k];get=()=>{return localState[k]};set=v=>{localState[k]=v;if(this.__node.state.triggers[str])this.__node.state.triggerEvent(str,v)}}const descriptor={get,set,enumerable:true,configurable:true};Object.defineProperty(props2,k,descriptor);if(typeof this.__node.initial==="object"){let dec=Object.getOwnPropertyDescriptor(this.__node.initial,k);if(dec===void 0||dec?.configurable){Object.defineProperty(this.__node.initial,k,descriptor)}}}};if(key)initState(props,key);else{for(let k in props){initState(props,k)}}};this.__proxyObject=obj=>{const allProps=getAllProperties(obj);for(const k of allProps){if(typeof obj[k]==="function"){this[k]=(...args)=>{return obj[k](...args)}}else{const descriptor={get:()=>{return obj[k]},set:value=>{obj[k]=value},enumerable:true,configurable:true};Object.defineProperty(this,k,descriptor)}}};this.__setProperties(properties,parent,graph)}__addOnconnected(callback){if(Array.isArray(this.__onconnected)){this.__onconnected.push(callback)}else if(typeof this.__onconnected==="function"){this.__onconnected=[callback,this.__onconnected]}else this.__onconnected=callback}__addOndisconnected(callback){if(Array.isArray(this.__ondisconnected)){this.__ondisconnected.push(callback)}else if(typeof this.__ondisconnected==="function"){this.__ondisconnected=[callback,this.__ondisconnected]}else this.__ondisconnected=callback}__callConnected(node=this){if(typeof this.__onconnected==="function"){this.__onconnected(this)}else if(Array.isArray(this.__onconnected)){let fn=o=>{o(this)};this.__onconnected.forEach(fn)}}__callDisconnected(node=this){if(typeof this.__ondisconnected==="function")this.__ondisconnected(this);else if(Array.isArray(this.__ondisconnected)){let fn=o=>{o(this)};this.__ondisconnected.forEach(fn)}}};var Graph=class{constructor(options){this.__node={tag:`graph${Math.floor(Math.random()*1e15)}`,unique:`${Math.random()}`,nodes:new Map,state,roots:{}};this.init=options=>{if(options){let cpy=Object.assign({},options);delete cpy.roots;recursivelyAssign(this.__node,cpy);if(options.roots)this.load(options.roots)}};this.load=roots=>{function recursivelyAssignChildren(target,obj,inChildren=true,top=true){if(top){if(target)Object.assign(target,obj);else target=Object.assign({},obj);recursivelyAssignChildren(target,obj,true,false)}if(obj.__children&&!inChildren){if(obj.__children?.constructor.name==="Object"){if(target.__children?.constructor.name==="Object")recursivelyAssignChildren(target.__children,obj.__children,true,false);else target.__children=recursivelyAssignChildren({},obj.__children,true,false)}else{target.__children=obj.__children}}else if(inChildren){for(const key in obj){target[key]=Object.assign({},obj[key]);if(obj[key].__children){recursivelyAssignChildren({},obj[key].__children,false,false)}}}return target}this.__node.roots=recursivelyAssignChildren(this.__node.roots?this.__node.roots:{},roots);let cpy=Object.assign({},roots);if(cpy.__node)delete cpy.__node;let listeners=this.recursiveSet(cpy,this,void 0,roots);if(roots.__node){if(!roots.__node.tag)roots.__node._tag=`roots${Math.floor(Math.random()*1e15)}`;else if(!this.get(roots.__node.tag)){let node=new GraphNode(roots,this,this);this.set(node.__node.tag,node);this.runLoaders(node,this,roots,roots.__node.tag);if(node.__listeners){listeners[node.__node.tag]=node.__listeners}}}else if(roots.__listeners){this.setListeners(roots.__listeners)}this.setListeners(listeners);return cpy};this.setLoaders=(loaders2,replace)=>{if(replace)this.__node.loaders=loaders2;else Object.assign(this.__node.loaders,loaders2);return this.__node.loaders};this.runLoaders=(node,parent,properties,key)=>{for(const l in this.__node.loaders){if(typeof this.__node.loaders[l]==="object"){if(this.__node.loaders[l].init)this.__node.loaders[l](node,parent,this,this.__node.roots,properties,key);if(this.__node.loaders[l].connected)node.__addOnconnected(this.__node.loaders[l].connect);if(this.__node.loaders[l].disconnected)node.__addOndisconnected(this.__node.loaders[l].disconnect)}else if(typeof this.__node.loaders[l]==="function")this.__node.loaders[l](node,parent,this,this.__node.roots,properties,key)}};this.add=(properties,parent)=>{let listeners={};if(typeof parent==="string")parent=this.get(parent);let instanced;if(typeof properties==="function"){if(isNativeClass(properties)){if(properties.prototype instanceof GraphNode){properties=properties.prototype.constructor(properties,parent,this);instanced=true}else properties=new properties}else properties={__operator:properties}}else if(typeof properties==="string"){properties=this.__node.roots[properties]}if(!properties)return;if(!instanced){let keys=Object.getOwnPropertyNames(properties);let cpy={};for(const key of keys){cpy[key]=properties[key]}properties=cpy}if(!properties.__node)properties.__node={};properties.__node.initial=properties;if(typeof properties==="object"&&(!properties?.__node?.tag||!this.get(properties.__node.tag))){let node;if(instanced)node=properties;else node=new GraphNode(properties,parent,this);this.set(node.__node.tag,node);this.runLoaders(node,parent,properties,node.__node.tag);this.__node.roots[node.__node.tag]=properties;if(node.__listeners){listeners[node.__node.tag]=node.__listeners}if(node.__children){node.__children=Object.assign({},node.__children);this.recursiveSet(node.__children,node,listeners,node.__children)}this.setListeners(listeners);node.__callConnected();return node}return};this.recursiveSet=(t,parent,listeners={},origin)=>{let keys=Object.getOwnPropertyNames(origin);for(const key of keys){if(key.includes("__"))continue;let p=origin[key];if(Array.isArray(p))continue;let instanced;if(typeof p==="function"){if(isNativeClass(p)){p=new p;if(p instanceof GraphNode){p=p.prototype.constructor(p,parent,this);instanced=true}}else p={__operator:p}}else if(typeof p==="string"){if(this.__node.nodes.get(p))p=this.__node.nodes.get(p);else p=this.__node.roots[p]}else if(typeof p==="boolean"){if(this.__node.nodes.get(key))p=this.__node.nodes.get(key);else p=this.__node.roots[key]}if(typeof p==="object"){if(!instanced&&!(p instanceof GraphNode)){let keys2=Object.getOwnPropertyNames(p);let cpy={};for(const key2 of keys2){cpy[key2]=p[key2]}p=cpy}if(!p.__node)p.__node={};if(!p.__node.tag)p.__node.tag=key;if(!p.__node.initial)p.__node.initial=t[key];if(this.get(p.__node.tag)&&!(!(parent instanceof Graph)&&parent?.__node)||parent?.__node&&this.get(parent.__node.tag+"."+p.__node.tag))continue;let node;if(instanced||p instanceof GraphNode){node=p}else node=new GraphNode(p,parent,this);if(p instanceof GraphNode&&!instanced&&parent instanceof GraphNode){let sub=this.subscribe(parent.__node.tag,node.__node.tag);let ondelete=node2=>{this.unsubscribe(parent.__node.tag,sub)};node.__addOndisconnected(ondelete)}else{this.set(node.__node.tag,node);this.runLoaders(node,parent,t[key],key);t[key]=node;this.__node.roots[node.__node.tag]=p;if(node.__listeners){listeners[node.__node.tag]=node.__listeners}if(node.__children){node.__children=Object.assign({},node.__children);this.recursiveSet(node.__children,node,listeners,node.__children)}node.__callConnected()}}}return listeners};this.remove=(node,clearListeners=true)=>{this.unsubscribe(node);if(typeof node==="string")node=this.get(node);if(node instanceof GraphNode){this.delete(node.__node.tag);delete this.__node.roots[node.__node.tag];if(clearListeners){this.clearListeners(node)}node.__callDisconnected();const recursiveRemove=t=>{for(const key in t){this.unsubscribe(t[key]);this.delete(t[key].__node.tag);delete this.__node.roots[t[key].__node.tag];this.delete(key);delete this.__node.roots[key];t[key].__node.tag=t[key].__node.tag.substring(t[key].__node.tag.lastIndexOf(".")+1);if(clearListeners){this.clearListeners(t[key])}t[key].__callDisconnected();if(t[key].__children){recursiveRemove(t[key].__children)}}};if(node.__children){recursiveRemove(node.__children)}}if(node?.__node.tag&&node?.__parent){delete node?.__parent;node.__node.tag=node.__node.tag.substring(node.__node.tag.indexOf(".")+1)}return node};this.run=(node,...args)=>{if(typeof node==="string"){let nd=this.get(node);if(!nd&&node.includes(".")){nd=this.get(node.substring(0,node.lastIndexOf(".")));if(typeof nd?.[node.substring(node.lastIndexOf(".")+1)]==="function")return nd[node.substring(node.lastIndexOf(".")+1)](...args)}else if(nd?.__operator)return nd.__operator(...args)}if(node?.__operator){return node?.__operator(...args)}};this.setListeners=listeners=>{for(const key in listeners){let node=this.get(key);if(typeof listeners[key]==="object"){for(const k in listeners[key]){let n=this.get(k);let sub;if(typeof listeners[key][k]!=="object")listeners[key][k]={__callback:listeners[key][k]};else if(!listeners[key][k].__callback){for(const kk in listeners[key][k]){if(typeof listeners[key][k][kk]!=="object"){listeners[key][k][kk]={__callback:listeners[key][k][kk]};if(listeners[key][k][kk].__callback===true||typeof listeners[key][k][kk].__callback==="undefined")listeners[key][k][kk].__callback=node.__operator}let nn=this.get(kk);if(nn){if(!nn){let tag=k.substring(0,k.lastIndexOf("."));nn=this.get(tag);if(n){sub=this.subscribe(nn,listeners[key][k][kk].__callback,listeners[key][k][kk].__args,k.substring(k.lastIndexOf(".")+1),listeners[key][k][kk].inputState,key,k);if(typeof node.__listeners[k][kk]!=="object")node.__listeners[k][kk]={__callback:listeners[key][k][kk].__callback,inputState:listeners[key][k][kk]?.inputState};node.__listeners[k][kk].sub=sub}}else{sub=this.subscribe(nn,listeners[key][k][kk].__callback,listeners[key][k].__args,void 0,listeners[key][k].inputState,key,k);if(typeof node.__listeners[k][kk]!=="object")node.__listeners[k][kk]={__callback:listeners[key][k][kk].__callback,inputState:listeners[key][k][kk]?.inputState};node.__listeners[k][kk].sub=sub}}}}if("__callback"in listeners[key][k]){if(listeners[key][k].__callback===true||typeof listeners[key][k].__callback==="undefined")listeners[key][k].__callback=node.__operator;if(typeof listeners[key][k].__callback==="function")listeners[key][k].__callback=listeners[key][k].__callback.bind(node);if(typeof node.__listeners!=="object")node.__listeners={};if(!n){let tag=k.substring(0,k.lastIndexOf("."));n=this.get(tag);if(n){sub=this.subscribe(n,listeners[key][k].__callback,listeners[key][k].__args,k.substring(k.lastIndexOf(".")+1),listeners[key][k].inputState,key,k);if(typeof node.__listeners[k]!=="object")node.__listeners[k]={__callback:listeners[key][k].__callback,inputState:listeners[key][k]?.inputState};node.__listeners[k].sub=sub}}else{sub=this.subscribe(n,listeners[key][k].__callback,listeners[key][k].__args,void 0,listeners[key][k].inputState,key,k);if(typeof node.__listeners[k]!=="object")node.__listeners[k]={__callback:listeners[key][k].__callback,inputState:listeners[key][k]?.inputState};node.__listeners[k].sub=sub}}}}}};this.clearListeners=(node,listener)=>{if(typeof node==="string")node=this.get(node);if(node?.__listeners){for(const key in node.__listeners){if(listener&&key!==listener)continue;if(typeof node.__listeners[key].sub!=="number")continue;let n=this.get(key);if(!n){n=this.get(key.substring(0,key.lastIndexOf(".")));if(n){if(!node.__listeners[key].__callback){for(const k in node.__listeners[key]){this.unsubscribe(n,node.__listeners[key][k].sub,key.substring(key.lastIndexOf(".")+1),node.__listeners[key][k].inputState)}}else this.unsubscribe(n,node.__listeners[key].sub,key.substring(key.lastIndexOf(".")+1),node.__listeners[key].inputState)}}else{if(!node.__listeners[key].__callback){for(const k in node.__listeners[key]){this.unsubscribe(n,node.__listeners[key][k].sub,void 0,node.__listeners[key][k].inputState)}}else this.unsubscribe(n,node.__listeners[key].sub,void 0,node.__listeners[key].inputState)}delete node.__listeners[key]}}};this.get=tag=>{return this.__node.nodes.get(tag)};this.set=(tag,node)=>{return this.__node.nodes.set(tag,node)};this.delete=tag=>{return this.__node.nodes.delete(tag)};this.getProps=(node,getInitial)=>{if(typeof node==="string")node=this.get(node);if(node instanceof GraphNode){let cpy;if(getInitial)cpy=Object.assign({},this.__node.roots[node.__node.tag]);else{cpy=Object.assign({},node);for(const key in cpy){if(key.includes("__"))delete cpy[key]}}}};this.subscribe=(nodeEvent,onEvent,args,key,subInput,target,bound)=>{let nd=nodeEvent;if(typeof nodeEvent==="string"){nd=this.get(nodeEvent);if(!nd&&nodeEvent.includes(".")){nd=this.get(nodeEvent.substring(0,nodeEvent.lastIndexOf(".")));key=nodeEvent.substring(nodeEvent.lastIndexOf(".")+1)}}let sub;if(target instanceof GraphNode)target=target.__node.tag;if(typeof onEvent==="string"){let key2=onEvent;if(target){let node=this.get(target);if(typeof node?.[onEvent]==="function"){onEvent=function(...inp){return node[key2](...inp)}}else{onEvent=function(inp){node[key2]=inp;return node[key2]}}}else{if(this.get(onEvent)?.__operator){let node=this.get(onEvent);onEvent=function(...inp){return node.__operator(...inp)}}else if(onEvent.includes(".")){let n=this.get(onEvent.substring(0,onEvent.lastIndexOf(".")));let key3=onEvent.substring(onEvent.lastIndexOf(".")+1);if(typeof n[key3]==="function"){onEvent=function(...inp){return n[key3](...inp)}}else{onEvent=function(inp){n[key3]=inp;return n[key3]}}}}}if((typeof onEvent==="function"||onEvent instanceof GraphNode)&&args){if(onEvent instanceof GraphNode&&onEvent.__operator)onEvent=function(inp){return onEvent.__operator(inp)};onEvent=wrapArgs(onEvent,args,this)}if(nd instanceof GraphNode){sub=nd.__subscribe(onEvent,key,subInput,target,bound);let ondelete=()=>{nd.__unsubscribe(sub,key,subInput)};nd.__addOndisconnected(ondelete)}else if(typeof nodeEvent==="string"){if(this.get(nodeEvent)){if(onEvent instanceof GraphNode&&onEvent.__operator){sub=this.get(nodeEvent).__subscribe(onEvent.__operator,key,subInput,target,bound);let ondelete=()=>{this.get(nodeEvent).__unsubscribe(sub)};onEvent.__addOndisconnected(ondelete)}else if(typeof onEvent==="function"||typeof onEvent==="string"){sub=this.get(nodeEvent).__subscribe(onEvent,key,subInput,target,bound);this.__node.state.getEvent(this.get(nodeEvent).__node.unique,sub).source=nodeEvent}}else{if(typeof onEvent==="string")onEvent=this.__node.nodes.get(onEvent).__operator;if(typeof onEvent==="function")sub=this.__node.state.subscribeEvent(nodeEvent,onEvent)}}return sub};this.unsubscribe=(node,sub,key,subInput)=>{if(node instanceof GraphNode){return node.__unsubscribe(sub,key,subInput)}else return this.get(node)?.__unsubscribe(sub,key,subInput)};this.setState=update=>{this.__node.state.setState(update)};this.init(options)}};function recursivelyAssign(target,obj){for(const key in obj){if(obj[key]?.constructor.name==="Object"&&!Array.isArray(obj[key])){if(target[key]?.constructor.name==="Object"&&!Array.isArray(target[key]))recursivelyAssign(target[key],obj[key]);else target[key]=recursivelyAssign({},obj[key])}else{target[key]=obj[key]}}return target}function getAllProperties(obj){var allProps=[],curr=obj;do{var props=Object.getOwnPropertyNames(curr);let fn=function(prop){if(allProps.indexOf(prop)===-1)allProps.push(prop)};props.forEach(fn)}while(curr=Object.getPrototypeOf(curr));return allProps}function isNativeClass(thing){return typeof thing==="function"&&thing.hasOwnProperty("prototype")&&!thing.hasOwnProperty("arguments")}var wrapArgs=(callback,argOrder,graph)=>{let args=[];let getCallbackFromString=a=>{if(graph.get(a)?.__operator){let node=graph.get(a);return(...inp)=>{node.__operator(...inp)}}else if(a.includes(".")){let split=a.split(".");let popped=split.pop();let joined=split.join(".");let node=graph.get(joined);if(typeof graph.get(joined)?.[popped]==="function"){return(...inp)=>{return node[popped](...inp)}}else return()=>{return node[popped]}}else if(graph.get(a)){let node=graph.get(a);return()=>{return node}}else{let arg=a;return()=>{return arg}}};let forArg=(a,i)=>{if(a==="__output"){args[i]=inp=>{return inp}}else if(typeof a==="string"){args[i]=getCallbackFromString(a)}else if(typeof a==="function"){let fn2=a;args[i]=(...inp)=>{return fn2(...inp)}}else if(typeof a==="object"&&a.__input){let recursivelyCreateCallback=function(c){let input=c.__input;if(typeof c.__input==="string"){input=getCallbackFromString(c.__input)}if(c.__args){input=wrapArgs(input,c.__args,graph)}if(c.__output){let output=c.__output;if(typeof c.__output==="string"){output=getCallbackFromString(output)}else if(typeof a.__output==="object"){output=recursivelyCreateCallback(output)}if(typeof output==="function"){let fn2=input;input=(...inp)=>{return output(fn2(...inp))}}}return input};args[i]=recursivelyCreateCallback(a)}else{let arg=a;args[i]=()=>{return arg}}};argOrder.forEach(forArg);if(typeof callback==="string")callback=getCallbackFromString(callback);let fn=callback;callback=function(...inp){let mapArg=arg=>{return arg(...inp)};return fn(...args.map(mapArg))};return callback};var backprop=(node,parent,graph)=>{if(node.__node.backward&&parent instanceof GraphNode){graph.setListeners({[parent.__node.tag]:{[node.__node.tag]:parent}})}};var loop=(node,parent,graph)=>{if(node.__operator&&!node.__node.looperSet){if(typeof node.__node.delay==="number"){let fn=node.__operator;node.__setOperator((...args)=>{return new Promise((res,rej)=>{setTimeout(async()=>{res(await fn(...args))},node.__node.delay)})})}else if(node.__node.frame===true){let fn=node.__operator;node.__setOperator((...args)=>{return new Promise((res,rej)=>{requestAnimationFrame(async()=>{res(await fn(...args))})})})}if(typeof node.__node.repeat==="number"||typeof node.__node.recursive==="number"){let fn=node.__operator;node.__setOperator(async(...args)=>{let i=node.__node.repeat?node.__node.repeat:node.__node.recursive;let result;let repeater=async(tick,...inp)=>{while(tick>0){if(node.__node.delay||node.__node.frame){fn(...inp).then(async res=>{if(node.__node.recursive){await repeater(tick,res)}else await repeater(tick,...inp)});break}else result=await fn(...args);tick--}};await repeater(i,...args);return result})}if(node.__node.loop&&typeof node.__node.loop==="number"){node.__node.looperSet=true;let fn=node.__operator;node.__setOperator((...args)=>{if(!("looping"in node.__node))node.__node.looping=true;if(node.__node.looping){fn(...args);setTimeout(()=>{node.__operator(...args)},node.__node.loop)}});if(node.__node.looping)node.__operator();let ondelete=node2=>{if(node2.__node.looping)node2.__node.looping=false};node.__addOndisconnected(ondelete)}}};var animate=(node,parent,graph)=>{if(node.__node.animate===true||node.__animation){let fn=node.__operator;node.__setOperator((...args)=>{if(!("animating"in node.__node))node.__node.animating=true;if(node.__node.animating){if(typeof node.__animation==="function")node.__animation(...args);else fn(...args);requestAnimationFrame(()=>{node.__operator(...args)})}});if(node.__node.animating||(!("animating"in node.__node)||node.__node.animating)&&node.__animation)setTimeout(()=>{requestAnimationFrame(node.__operator)},10);let ondelete=node2=>{if(node2.__node.animating)node2.__node.animating=false};node.__addOndisconnected(ondelete)}};var branching=(node,parent,graph)=>{if(typeof node.__branch==="object"&&node.__operator&&!node.__branchApplied){let fn=node.__operator;node.__branchApplied=true;node.__operator=(...args)=>{let result=fn(...args);for(const key in node.__branch){let triggered=()=>{if(typeof node.__branch[key].then==="function"){node.__branch[key].then(result)}else if(node.__branch[key].then instanceof GraphNode&&node.__branch[key].then.__operator){node.__branch[key].then.__operator(result)}else result=node.__branch[key].then};if(typeof node.__branch[key].if==="function"){if(node.__branch[key].if(result)==true){triggered()}}else if(node.__branch[key].if===result){triggered()}}return result}}if(node.__listeners){for(const key in node.__listeners){if(typeof node.__listeners[key]==="object"){if(node.__listeners[key].branch&&!node.__listeners[key].branchApplied){let fn=node.__listeners[key].callback;node.__listeners[key].branchApplied=true;node.__listeners.callback=ret=>{let triggered=()=>{if(typeof node.__listeners[key].branch.then==="function"){ret=node.__listeners[key].branch.then(ret)}else if(node.__listeners[key].branch.then instanceof GraphNode&&node.__listeners[key].branch.then.__operator){ret=node.__listeners[key].branch.then.__operator(ret)}else ret=node.__listeners[key].branch.then};if(typeof node.__listeners[key].branch.if==="function"){if(node.__listeners[key].branch.if(ret)){triggered()}}else if(node.__listeners[key].branch.if===ret){triggered()}return fn(ret)}}}}}};var triggerListenerOncreate=(node,parent,graph)=>{if(node.__listeners){for(const key in node.__listeners){if(typeof node.__listeners[key]==="object"){if(node.__listeners[key].oncreate){node.__listeners[key].callback(node.__listeners[key].oncreate)}}}}};var bindListener=(node,parent,graph)=>{if(node.__listeners){for(const key in node.__listeners){if(typeof node.__listeners[key]==="object"){if(typeof node.__listeners[key].binding==="object"){node.__listeners.callback=node.__listeners.callback.bind(node.__listeners[key].binding)}}}}};var transformListenerResult=(node,parent,graph)=>{if(node.__listeners){for(const key in node.__listeners){if(typeof node.__listeners[key]==="object"){if(typeof node.__listeners[key].transform==="function"&&!node.__listeners[key].transformApplied){let fn=node.__listeners[key].callback;node.__listeners[key].transformApplied=true;node.__listeners.callback=ret=>{ret=node.__listeners[key].transform(ret);return fn(ret)}}}}}};var substitute__operator=(node,parent,graph)=>{if(node.post&&!node.__operator){node.__setOperator(node.post)}else if(!node.__operator&&typeof node.get=="function"){node.__setOperator(node.get)}if(!node.get&&node.__operator){node.get=node.__operator}if(node.aliases){node.aliases.forEach(a=>{graph.set(a,node);let ondelete=node2=>{graph.__node.nodes.delete(a)};node.__addOndisconnected(ondelete)})}if(typeof graph.__node.roots?.[node.__node.tag]==="object"&&node.get)graph.__node.roots[node.__node.tag].get=node.get};var loaders={backprop,loop,animate,branching,triggerListenerOncreate,bindListener,transformListenerResult,substitute__operator};var Service=class extends Graph{constructor(options){super({...options,loaders:options?.loaders?Object.assign({...loaders},options.loaders):{...loaders}});this.name=`service${Math.floor(Math.random()*1e15)}`;this.addServices=services=>{for(const s in services){if(typeof services[s]==="function")services[s]=new services[s];if(services[s]?.__node?.loaders)Object.assign(this.__node.loaders,services[s].__node.loaders);if(services[s]?.__node?.nodes){services[s].__node.nodes.forEach((n,tag)=>{if(!this.get(tag)){this.set(tag,n)}else this.set(s+"."+tag,n)});this.__node.nodes.forEach((n,k)=>{if(!services[s].__node.nodes.get(k))services[s].__node.nodes.set(k,n)});let set=this.set;this.set=(tag,node)=>{services[s].set(tag,node);return set(tag,node)};let del=this.delete;this.delete=tag=>{services[s].delete(tag);return del(tag)}}else if(typeof services[s]==="object"){this.load(services[s])}}};this.handleMethod=(route,method,args)=>{let m=method.toLowerCase();let src=this.__node.nodes.get(route);if(!src){src=this.__node.roots[route]}if(src?.[m]){if(typeof src[m]!=="function"){if(args)src[m]=args;return src[m]}else return src[m](args)}else return this.handleServiceMessage({route,args,method})};this.transmit=(...args)=>{if(typeof args[0]==="object"){if(args[0].method){return this.handleMethod(args[0].route,args[0].method,args[0].args)}else if(args[0].route){return this.handleServiceMessage(args[0])}else if(args[0].node){return this.handleGraphNodeCall(args[0].node,args[0].args)}else if(this.__node.keepState){if(args[0].route)this.setState({[args[0].route]:args[0].args});if(args[0].node)this.setState({[args[0].node]:args[0].args})}return args}else return args};this.receive=(...args)=>{if(args[0]){if(typeof args[0]==="string"){let substr=args[0].substring(0,8);if(substr.includes("{")||substr.includes("[")){if(substr.includes("\\\\\\\\"))args[0]=args[0].replace(/\\\\\\\\/g,"");if(args[0][0]===\\\'"\\\'){args[0]=args[0].substring(1,args[0].length-1)};args[0]=JSON.parse(args[0])}}}if(typeof args[0]==="object"){if(args[0].method){return this.handleMethod(args[0].route,args[0].method,args[0].args)}else if(args[0].route){return this.handleServiceMessage(args[0])}else if(args[0].node){return this.handleGraphNodeCall(args[0].node,args[0].args)}else if(this.__node.keepState){if(args[0].route)this.setState({[args[0].route]:args[0].args});if(args[0].node)this.setState({[args[0].node]:args[0].args})}return args}else return args};this.pipe=(source,destination,endpoint,method,callback)=>{if(source instanceof GraphNode){if(callback)return this.subscribe(source,res=>{let mod=callback(res);if(mod!==void 0)this.transmit({route:destination,args:mod,method});else this.transmit({route:destination,args:res,method},endpoint)});else return this.subscribe(source,res=>{this.transmit({route:destination,args:res,method},endpoint)})}else if(typeof source==="string")return this.subscribe(source,res=>{this.transmit({route:destination,args:res,method},endpoint)})};this.pipeOnce=(source,destination,endpoint,method,callback)=>{if(source instanceof GraphNode){if(callback)return source.__node.state.subscribeEventOnce(source.__node.unique,res=>{let mod=callback(res);if(mod!==void 0)this.transmit({route:destination,args:mod,method});else this.transmit({route:destination,args:res,method},endpoint)});else return this.__node.state.subscribeEventOnce(source.__node.unique,res=>{this.transmit({route:destination,args:res,method},endpoint)})}else if(typeof source==="string")return this.__node.state.subscribeEventOnce(this.__node.nodes.get(source).__node.unique,res=>{this.transmit({route:destination,args:res,method},endpoint)})};this.terminate=(...args)=>{};this.isTypedArray=isTypedArray;this.recursivelyAssign=recursivelyAssign2;this.spliceTypedArray=spliceTypedArray;this.ping=()=>{console.log("pinged!");return"pong"};this.echo=(...args)=>{this.transmit(...args);return args};if(options?.services)this.addServices(options.services);this.load(this)}handleServiceMessage(message){let call;if(typeof message==="object"){if(message.route)call=message.route;else if(message.node)call=message.node}if(call){if(Array.isArray(message.args))return this.run(call,...message.args);else return this.run(call,message.args)}else return message}handleGraphNodeCall(route,args){if(!route)return args;if(args?.args){this.handleServiceMessage(args)}else if(Array.isArray(args))return this.run(route,...args);else return this.run(route,args)}};function isTypedArray(x2){return ArrayBuffer.isView(x2)&&Object.prototype.toString.call(x2)!=="[object DataView]"}var recursivelyAssign2=(target,obj)=>{for(const key in obj){if(typeof obj[key]==="object"&&!Array.isArray(obj[key])){if(typeof target[key]==="object"&&!Array.isArray(target[key]))recursivelyAssign2(target[key],obj[key]);else target[key]=recursivelyAssign2({},obj[key])}else target[key]=obj[key]}return target};function spliceTypedArray(arr,start,end){let s=arr.subarray(0,start);let e;if(end){e=arr.subarray(end+1)}let ta;if(s.length>0||e?.length>0)ta=new arr.constructor(s.length+e.length);if(ta){if(s.length>0)ta.set(s);if(e&&e.length>0)ta.set(e,s.length)}return ta}var import_web_worker=__toESM(require_browser());var recursivelyStringifyFunctions=obj=>{let cpy={};for(const key in obj){if(typeof obj[key]==="object"){cpy[key]=recursivelyStringifyFunctions(obj[key])}else if(typeof obj[key]==="function"){cpy[key]=obj[key].toString()}}return cpy};function parseFunctionFromText(method=""){let getFunctionBody=methodString=>{return methodString.replace(/^\\\\W*(function[^{]+\\\\{([\\\\s\\\\S]*)\\\\}|[^=]+=>[^{]*\\\\{([\\\\s\\\\S]*)\\\\}|[^=]+=>(.+))/i,"$2$3$4")};let getFunctionHead=methodString=>{let startindex=methodString.indexOf("=>")+1;if(startindex<=0){startindex=methodString.indexOf("){")}if(startindex<=0){startindex=methodString.indexOf(") {")}return methodString.slice(0,methodString.indexOf("{",startindex)+1)};let newFuncHead=getFunctionHead(method);let newFuncBody=getFunctionBody(method);let newFunc;if(newFuncHead.includes("function")){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody)}else{if(newFuncHead.substring(0,6)===newFuncBody.substring(0,6)){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody.substring(newFuncBody.indexOf("{")+1,newFuncBody.length-1))}else{try{newFunc=(0,eval)(newFuncHead+newFuncBody+"}")}catch{}}}return newFunc}var stringifyWithCircularRefs=function(){const refs=new Map;const parents=[];const path=["this"];function clear(){refs.clear();parents.length=0;path.length=1}function updateParents(key,value){var idx=parents.length-1;var prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value||idx===0){path.push(key);parents.push(value.pushed)}else{while(idx-->=0){prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value){idx+=2;parents.length=idx;path.length=idx;--idx;parents[idx]=value;path[idx]=key;break}}idx--}}}}function checkCircular(key,value){if(value!=null){if(typeof value==="object"){if(key){updateParents(key,value)}let other=refs.get(value);if(other){return"[Circular Reference]"+other}else{refs.set(value,path.join("."))}}}return value}return function stringifyWithCircularRefs2(obj,space){try{parents.push(obj);return JSON.stringify(obj,checkCircular,space)}finally{clear()}}}();if(JSON.stringifyWithCircularRefs===void 0){JSON.stringifyWithCircularRefs=stringifyWithCircularRefs}var stringifyFast=function(){const refs=new Map;const parents=[];const path=["this"];function clear(){refs.clear();parents.length=0;path.length=1}function updateParents(key,value){var idx=parents.length-1;if(parents[idx]){var prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value||idx===0){path.push(key);parents.push(value.pushed)}else{while(idx-->=0){prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value){idx+=2;parents.length=idx;path.length=idx;--idx;parents[idx]=value;path[idx]=key;break}}idx++}}}}}function checkValues(key,value){let val;if(value!=null){if(typeof value==="object"){let c=value.constructor.name;if(key&&c==="Object"){updateParents(key,value)}let other=refs.get(value);if(other){return"[Circular Reference]"+other}else{refs.set(value,path.join("."))}if(c==="Array"){if(value.length>20){val=value.slice(value.length-20)}else val=value}else if(c.includes("Set")){val=Array.from(value)}else if(c!=="Object"&&c!=="Number"&&c!=="String"&&c!=="Boolean"){val="instanceof_"+c}else if(c==="Object"){let obj={};for(const prop in value){if(value[prop]==null){obj[prop]=value[prop]}else if(Array.isArray(value[prop])){if(value[prop].length>20)obj[prop]=value[prop].slice(value[prop].length-20);else obj[prop]=value[prop]}else if(value[prop].constructor.name==="Object"){obj[prop]={};for(const p in value[prop]){if(Array.isArray(value[prop][p])){if(value[prop][p].length>20)obj[prop][p]=value[prop][p].slice(value[prop][p].length-20);else obj[prop][p]=value[prop][p]}else{if(value[prop][p]!=null){let con=value[prop][p].constructor.name;if(con.includes("Set")){obj[prop][p]=Array.from(value[prop][p])}else if(con!=="Number"&&con!=="String"&&con!=="Boolean"){obj[prop][p]="instanceof_"+con}else{obj[prop][p]=value[prop][p]}}else{obj[prop][p]=value[prop][p]}}}}else{let con=value[prop].constructor.name;if(con.includes("Set")){obj[prop]=Array.from(value[prop])}else if(con!=="Number"&&con!=="String"&&con!=="Boolean"){obj[prop]="instanceof_"+con}else{obj[prop]=value[prop]}}}val=obj}else{val=value}}else{val=value}}return val}return function stringifyFast2(obj,space){parents.push(obj);let res=JSON.stringify(obj,checkValues,space);clear();return res}}();if(JSON.stringifyFast===void 0){JSON.stringifyFast=stringifyFast}function methodstrings(node){if(typeof node.__methods==="object"){for(const key in node.__methods){let fstr=node.__methods[key];let fn=typeof fstr==="function"?fstr:parseFunctionFromText(fstr);if(key==="__operator"){node.__setOperator(fn)}else{node[key]=fn.bind(node)}}}}var WorkerService=class extends Service{constructor(options){super();this.name="worker";this.workers={};this.threadRot=0;this.loadWorkerRoute=(rt,routeKey)=>{if(rt.workerUrl)rt.url=rt.workerUrl;if(rt.workerId)rt.__node.tag=rt.workerId;if(!rt.__node.tag)rt.__node.tag=routeKey;rt._id=rt.__node.tag;let worker;if(this.workers[rt._id])worker=this.workers[rt._id];else if(rt.worker)worker=rt.worker;if(!worker){worker=this.addWorker(rt)}rt.worker=worker;if(!rt.worker.__ondisconnected){let ondelete=rt2=>{rt2.worker?.terminate()};rt.__addOndisconnected(ondelete)}if(rt.transferFunctions){for(const prop in rt.transferFunctions){this.transferFunction(worker,rt.transferFunctions[prop],prop)}}if(rt.transferClasses){for(const prop in rt.transferClasses){this.transferClass(worker,rt.transferClasses[prop],prop)}}if(worker){if(!rt.__operator){rt.__operator=(...args)=>{if(rt.callback){if(!this.__node.nodes.get(rt.__node.tag)?.__children)worker.post(rt.callback,args);else return worker.run(rt.callback,args)}else{if(!this.__node.nodes.get(rt.__node.tag)?.__children)worker.send(args);else return worker.request(args)}}}if(rt.init){worker.run(rt.init,rt.initArgs,rt.initTransfer)}return worker}};this.workerloader={"workers":(node,parent,graph,roots)=>{let rt=node;if(!node.parentRoute&&(parent?.callback&&parent?.worker))node.parentRoute=parent?.callback;if(rt?.worker||rt?.workerId||rt?.workerUrl){let worker=this.loadWorkerRoute(rt,rt.__node.tag);if(worker){if(!rt.parentRoute&&rt.__parent?.callback)rt.parentRoute=rt.__parent.callback;if(rt.__parent&&!rt.portId){if(typeof rt.__parent==="string"){if(rt.__node.tag!==rt.__parent&&worker._id!==rt.__parent)rt.portId=this.establishMessageChannel(worker,rt.__parent)}else if(rt.__node.tag!==rt.__parent?.__node?.tag&&worker._id!==rt.__parent?.tag){rt.portId=this.establishMessageChannel(worker,rt.__parent.worker)}};if(rt.parentRoute){if(!rt.stopped){if(typeof rt.__parent==="string"&&rt.__parent===worker._id){worker.run("subscribe",[rt.parentRoute,void 0,void 0,rt.callback])}else if(rt.__node.tag===rt.__parent?.__node?.tag||worker._id===rt.__parent?.__node?.tag){worker.run("subscribe",[rt.parentRoute,void 0,void 0,rt.callback])}else worker.run("subscribeToWorker",[rt.parentRoute,rt.portId,void 0,rt.callback,void 0,void 0,rt.blocking]).then(sub=>{worker.workerSubs[rt.parentRoute+rt.portId].sub=sub})}if(!(typeof rt.__parent==="string"&&rt.__parent===worker._id)&&!(rt.__node.tag===rt.__parent?.__node?.tag||worker._id===rt.__parent?.__node?.tag))worker.workerSubs[rt.parentRoute+rt.portId]={sub:null,route:rt.parentRoute,portId:rt.portId,callback:rt.callback,blocking:rt.blocking}}else if(rt.__parent){if(typeof rt.__parent==="string"){if(!rt.stopped){if(rt.__parent===worker._id){worker.run("subscribe",[rt.__parent,void 0,rt.callback])}else worker.run("subscribeToWorker",[rt.__parent,rt.portId,void 0,rt.callback,void 0,void 0,rt.blocking]).then(sub=>{worker.workerSubs[rt.__parent+rt.portId].sub=sub})}if(!(typeof rt.__parent==="string"&&rt.__parent===worker._id))worker.workerSubs[rt.__parent+rt.portId]={sub:null,route:worker._id,portId:rt.portId,callback:rt.callback,blocking:rt.blocking}}else if(rt.__parent?.__node?.tag&&rt.__parent?.worker){if(!rt.stopped){if(rt.__node.tag===rt.__parent.__node.tag||worker._id===rt.__parent.__node.tag){worker.run("subscribe",[rt.__parent.__node.tag,void 0,void 0,rt.callback])}else worker.run("subscribeToWorker",[rt.__parent.__node.tag,rt.portId,void 0,rt.callback,void 0,void 0,rt.blocking]).then(sub=>{worker.workerSubs[rt.__parent.__node.tag+rt.portId].sub=sub})}if(!(rt.__node.tag===rt.__parent?.__node?.tag||worker._id===rt.__parent?.__node?.tag))worker.workerSubs[rt.__parent.__node.tag+rt.portId]={sub:null,route:rt.__parent.__node.tag,portId:rt.portId,callback:rt.callback,blocking:rt.blocking}}}}}else if(rt.__parent&&rt.parentRoute){if(typeof rt.__parent==="string"&&roots[rt.__parent]?.worker){roots[rt.__parent].worker.subscribe(rt.parentRoute,rt.__operator,void 0,void 0,void 0,rt.blocking)}else if(rt.__parent?.worker){rt.__parent.worker.subscribe(rt.parentRoute,rt.__operator,void 0,void 0,void 0,rt.blocking)}}return rt}};this.addDefaultMessageListener=()=>{globalThis.onmessage=ev2=>{let result=this.receive(ev2.data);if(this.__node.keepState)this.setState({[this.name]:result})}};this.postMessage=(message,target,transfer)=>{if(this.workers[target]){this.workers[target].send(message,transfer)}else{globalThis.postMessage(message,target,transfer)}};this.addWorker=options=>{let worker;if(!options._id)options._id=`worker${Math.floor(Math.random()*1e15)}`;if(options.url)worker=new import_web_worker.default(options.url);else if(options.port){worker=options.port}else if(this.workers[options._id]){if(this.workers[options._id].port)worker=this.workers[options._id].port;else worker=this.workers[options._id].worker}if(!worker)return;let send=(message,transfer)=>{return this.transmit(message,worker,transfer)};let post=(route,args,transfer,method)=>{let message={route,args};if(method)message.method=method;return this.transmit(message,worker,transfer)};let run=(route,args,transfer,method)=>{return new Promise((res,rej)=>{let callbackId=Math.random();let req={route:"runRequest",args:[{route,args},options._id,callbackId]};if(method)req.args[0].method=method;let onmessage=ev2=>{if(typeof ev2.data==="object"){if(ev2.data.callbackId===callbackId){worker.removeEventListener("message",onmessage);res(ev2.data.args)}}};worker.addEventListener("message",onmessage);this.transmit(req,worker,transfer)})};let request=(message,transfer,method)=>{return new Promise((res,rej)=>{let callbackId=Math.random();let req={route:"runRequest",args:[message,options._id,callbackId]};if(method)req.method=method;let onmessage=ev2=>{if(typeof ev2.data==="object"){if(ev2.data.callbackId===callbackId){worker.removeEventListener("message",onmessage);res(ev2.data.args)}}};worker.addEventListener("message",onmessage);this.transmit(req,worker,transfer)})};let workerSubs={};let subscribe=(route,callback,args,key,subInput,blocking)=>{return this.subscribeToWorker(route,options._id,callback,args,key,subInput,blocking)};let unsubscribe=(route,sub)=>{return run("unsubscribe",[route,sub])};let start=async(route,portId,callback,blocking)=>{if(route)await run("subscribeToWorker",[route,portId,void 0,callback,blocking]).then(sub=>{if(sub)workerSubs[route+portId]={sub,route,portId,callback,blocking}});else for(const key in workerSubs){if(typeof workerSubs[key].sub!=="number")await run("subscribeToWorker",[workerSubs[key].route,workerSubs[key].portId,void 0,workerSubs[key].callback,void 0,workerSubs[key].blocking]).then(sub=>{workerSubs[key].sub=sub});console.log(JSON.stringify(workerSubs))}return true};let stop=async(route,portId)=>{if(route&&portId&&workerSubs[route+portId]){await run("unsubscribe",[route,workerSubs[route+portId].sub]);workerSubs[route+portId].sub=false}else{for(const key in workerSubs){if(typeof workerSubs[key].sub==="number"){await run("unpipeWorkers",[workerSubs[key].route,workerSubs[key].portId,workerSubs[key].sub]).then(console.log)}workerSubs[key].sub=false}}return true};let terminate=()=>{for(const key in workerSubs){if(typeof workerSubs[key].sub==="number"){run("unpipeWorkers",[workerSubs[key].route,workerSubs[key].portId,workerSubs[key].sub])}workerSubs[key].sub=false}return this.terminate(options._id)};if(!options.onmessage)options.onmessage=ev2=>{this.receive(ev2.data);this.setState({[options._id]:ev2.data})};if(!options.onerror){options.onerror=ev2=>{console.error(ev2.data)}}worker.onmessage=options.onmessage;worker.onerror=options.onerror;this.workers[options._id]={worker,send,post,run,request,subscribe,unsubscribe,terminate,start,stop,postMessage:worker.postMessage,workerSubs,graph:this,...options};return this.workers[options._id]};this.toObjectURL=scriptTemplate=>{let blob=new Blob([scriptTemplate],{type:"text/javascript"});return URL.createObjectURL(blob)};this.transmit=(message,worker,transfer)=>{if(!transfer){transfer=this.getTransferable(message)}if(worker instanceof import_web_worker.default||worker instanceof MessagePort){worker.postMessage(message,transfer)}else if(typeof worker==="string"){if(this.workers[worker]){if(this.workers[worker].port)this.workers[worker].port.postMessage(message,transfer);else if(this.workers[worker].worker)this.workers[worker].worker.postMessage(message,transfer)}}else{let keys=Object.keys(this.workers);this.workers[keys[this.threadRot]].worker.postMessage(message,transfer);this.threadRot++;if(this.threadRot===keys.length)this.threadRot=0}return message};this.terminate=worker=>{let onclose;if(typeof worker==="string"){let obj=this.workers[worker];if(obj){delete this.workers[worker];worker=obj.worker;if(obj.onclose)onclose=obj.onclose}}else if(typeof worker==="object"){if(worker?._id){worker=worker.worker;delete this.workers[worker?._id]}}if(worker instanceof import_web_worker.default){worker.terminate();if(onclose)onclose(worker);return true}if(worker instanceof MessagePort){worker.close();if(onclose)onclose(worker);return true}return false};this.establishMessageChannel=(worker,worker2)=>{let workerId;if(typeof worker==="string"){workerId=worker;if(this.workers[worker]){if(this.workers[worker].port)worker=this.workers[worker].port;else worker2=this.workers[worker].worker}}else if(worker?.worker){worker=worker.worker}if(typeof worker2==="string"){if(this.workers[worker2]){if(this.workers[worker2].port)worker2=this.workers[worker2].port;else worker2=this.workers[worker2].worker}}else if(worker2?.worker){worker2=worker2.worker}if(worker instanceof import_web_worker.default||worker instanceof MessagePort){let channel=new MessageChannel;let portId=`port${Math.floor(Math.random()*1e15)}`;worker.postMessage({route:"addWorker",args:{port:channel.port1,_id:portId}},[channel.port1]);if(worker2 instanceof import_web_worker.default||worker2 instanceof MessagePort){worker2.postMessage({route:"addWorker",args:{port:channel.port2,_id:portId}},[channel.port2])}else if(workerId&&this.workers[workerId]){channel.port2.onmessage=this.workers[workerId].onmessage;this.workers[workerId].port=channel.port2}return portId}return false};this.request=(message,workerId,transfer,method)=>{let worker=this.workers[workerId].worker;return new Promise((res,rej)=>{let callbackId=Math.random();let req={route:"runRequest",args:[message,callbackId]};if(method)req.method=method;let onmessage=ev2=>{if(typeof ev2.data==="object"){if(ev2.data.callbackId===callbackId){worker.removeEventListener("message",onmessage);res(ev2.data.args)}}};worker.addEventListener("message",onmessage);this.transmit(req,worker,transfer)})};this.runRequest=(message,worker,callbackId)=>{let res=this.receive(message);if(typeof worker==="string"&&this.workers[worker]){if(this.workers[worker].port)worker=this.workers[worker].port;else worker=this.workers[worker].worker}if(res instanceof Promise){res.then(r=>{if(worker instanceof import_web_worker.default||worker instanceof MessagePort)worker.postMessage({args:r,callbackId});else if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope)globalThis.postMessage({args:r,callbackId})})}else{if(worker instanceof import_web_worker.default||worker instanceof MessagePort)worker.postMessage({args:res,callbackId});else if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope)globalThis.postMessage({args:res,callbackId})}return res};this.subscribeWorker=(route,worker,args,key,subInput,blocking)=>{let callback;if(blocking){let blocked=false;callback=res=>{if(!blocked){blocked=true;if(res instanceof Promise){res.then(r=>{if(worker?.run)worker.run("triggerSubscription",[route,worker._id,r]).then(ret=>{blocked=false})})}else{if(worker?.run)worker.run("triggerSubscription",[route,worker._id,res]).then(ret=>{blocked=false})}}}}else{callback=res=>{if(res instanceof Promise){res.then(r=>{if(worker?.postMessage)worker.postMessage({args:r,callbackId:route});else if(globalThis.postMessage)globalThis.postMessage({args:r,callbackId:route})})}else{if(worker?.postMessage)worker.postMessage({args:res,callbackId:route});else if(globalThis.postMessage)globalThis.postMessage({args:res,callbackId:route})}}}if(!blocking&&worker?.port){worker=worker.port}else if(!blocking&&worker?.worker){worker=worker.worker}else if(typeof worker==="string"&&this.workers[worker]){if(blocking)worker=this.workers[worker];else if(this.workers[worker].port)worker=this.workers[worker].port;else worker=this.workers[worker].worker}return this.subscribe(route,callback,args,key,subInput)};this.subscribeToWorker=(route,workerId,callback,args,key,subInput,blocking)=>{if(typeof workerId==="string"&&this.workers[workerId]){this.__node.state.subscribeEvent(workerId,res=>{if(res?.callbackId===route){if(!callback)this.setState({[workerId]:res.args});else if(typeof callback==="string"){this.run(callback,res.args)}else callback(res.args)}});return this.workers[workerId].run("subscribeWorker",[route,workerId,args,key,subInput,blocking])}};this.triggerSubscription=async(route,workerId,result)=>{if(this.__node.state.triggers[workerId])for(let i=0;i<this.__node.state.triggers[workerId].length;i++){await this.__node.state.triggers[workerId][i].onchange({args:result,callbackId:route})}return true};this.pipeWorkers=(sourceWorker,listenerWorker,sourceRoute,listenerRoute,portId,args,key,subInput,blocking)=>{if(typeof sourceWorker==="string")sourceWorker=this.workers[sourceWorker];if(typeof listenerWorker==="string")listenerWorker=this.workers[listenerWorker];if(!portId){portId=this.establishMessageChannel(sourceWorker.worker,listenerWorker.worker)}return listenerWorker.run("subscribeToWorker",[sourceRoute,portId,listenerRoute,args,key,subInput,blocking])};this.unpipeWorkers=(sourceRoute,sourceWorker,sub)=>{if(typeof sourceWorker==="string")sourceWorker=this.workers[sourceWorker];if(typeof sourceWorker==="object"){return sourceWorker.run("unsubscribe",[sourceRoute,sub])}};this.connections={workers:this.workers};if(options?.services)this.addServices(options.services);this.load(this);this.setLoaders(this.workerloader);if(options)this.init(options);if(typeof WorkerGlobalScope!=="undefined"&&globalThis instanceof WorkerGlobalScope){this.addDefaultMessageListener()}}getTransferable(message){let transfer;if(typeof message==="object"){if(message.args){if(message.args?.constructor?.name==="Object"){for(const key in message.args){if(ArrayBuffer.isView(message.args[key])){if(!transfer)transfer=[message.args[key].buffer];else transfer.push(message.args[key].buffer)}else if(message.args[key]?.constructor?.name==="ArrayBuffer"){if(!transfer)transfer=[message.args[key]];else transfer.push(message.args[key])}}}else if(Array.isArray(message.args)&&message.args.length<11){message.args.forEach(arg=>{if(ArrayBuffer.isView(arg)){transfer=[arg.buffer]}else if(arg?.constructor?.name==="ArrayBuffer")transfer=[arg]})}else if(ArrayBuffer.isView(message.args)){transfer=[message.args.buffer]}else if(message.args?.constructor?.name==="ArrayBuffer"){transfer=[message]}}else if(message?.constructor?.name==="Object"){for(const key in message){if(ArrayBuffer.isView(message[key])){if(!transfer)transfer=[message[key].buffer];else transfer.push(message[key].buffer)}else if(message[key]?.constructor?.name==="ArrayBuffer"){if(!transfer)transfer=[message[key]];else transfer.push(message[key])}}}else if(Array.isArray(message)&&message.length<11){message.forEach(arg=>{if(ArrayBuffer.isView(arg)){transfer=[arg.buffer]}else if(arg.constructor?.name==="ArrayBuffer")transfer=[arg]})}else if(ArrayBuffer.isView(message)){transfer=[message.buffer]}else if(message.constructor?.name==="ArrayBuffer"){transfer=[message]}}return transfer}transferFunction(worker,fn,fnName){if(!fnName)fnName=fn.name;return worker.request({route:"setRoute",args:[fn.toString(),fnName]})}transferClass(worker,cls,className){if(!className)className=cls.name;return worker.request({route:"receiveClass",args:[cls.toString(),className]})}receiveNode(properties){if(properties.__methods){if(!this.__node.graph.loaders.methodstrings){this.__node.graph.__node.loaders.methodstrings=methodstrings}}let node=this.__node.graph.add(properties);return node.__node.tag}transferNode(properties,worker,name){if(!properties.__node){properties.__node={}}properties.__node.tag=name;for(const key in properties){if(typeof properties[key]==="function"){if(!properties.__methods)properties.__methods={};properties.__methods[key]=properties[key].toString()}}if(worker.run)return worker.run("receiveNode",[recursivelyStringifyFunctions(properties)]);else if(worker.postMessage){worker.postMessage({route:"receiveNode",args:recursivelyStringifyFunctions(properties)},void 0);return new Promise(r=>r(name))}}};var mouseEventHandler=makeSendPropertiesHandler(["ctrlKey","metaKey","shiftKey","button","pointerType","clientX","clientY","pageX","pageY"]);var wheelEventHandlerImpl=makeSendPropertiesHandler(["deltaX","deltaY"]);var keydownEventHandler=makeSendPropertiesHandler(["ctrlKey","metaKey","shiftKey","keyCode"]);function wheelEventHandler(event,sendFn){event.preventDefault();wheelEventHandlerImpl(event,sendFn)}function preventDefaultHandler(event){event.preventDefault()}function copyProperties(src,properties,dst){for(const name of properties){dst[name]=src[name]}}function makeSendPropertiesHandler(properties){return function sendProperties(event,sendFn){const data={type:event.type};copyProperties(event,properties,data);sendFn(data)}}function touchEventHandler(event,sendFn){const touches=[];const data={type:event.type,touches};for(let i=0;i<event.touches.length;++i){const touch=event.touches[i];touches.push({pageX:touch.pageX,pageY:touch.pageY})}sendFn(data)}var orbitKeys={"37":true,"38":true,"39":true,"40":true};function filteredKeydownEventHandler(event,sendFn){const{keyCode}=event;if(orbitKeys[keyCode]){event.preventDefault();keydownEventHandler(event,sendFn)}}var eventHandlers={contextmenu:preventDefaultHandler,mousedown:mouseEventHandler,mousemove:mouseEventHandler,mouseup:mouseEventHandler,pointerdown:mouseEventHandler,pointermove:mouseEventHandler,pointerup:mouseEventHandler,touchstart:touchEventHandler,touchmove:touchEventHandler,touchend:touchEventHandler,wheel:wheelEventHandler,keydown:filteredKeydownEventHandler};function initProxyElement(element,worker,id){if(!id)id="proxy"+Math.floor(Math.random()*1e15);const sendEvent=data=>{if(!worker){handleProxyEvent(data,id)}else worker.postMessage({route:"handleProxyEvent",args:[data,id]})};let entries=Object.entries(eventHandlers);for(const[eventName,handler]of entries){element.addEventListener(eventName,function(event){handler(event,sendEvent)})}const sendSize=()=>{const rect=element.getBoundingClientRect();sendEvent({type:"resize",left:rect.left,top:rect.top,width:element.clientWidth,height:element.clientHeight})};sendSize();globalThis.addEventListener("resize",sendSize);return id}var EventDispatcher=class{addEventListener(type,listener){if(this.__listeners===void 0)this.__listeners={};const listeners=this.__listeners;if(listeners[type]===void 0){listeners[type]=[]}if(listeners[type].indexOf(listener)===-1){listeners[type].push(listener)}}hasEventListener(type,listener){if(this.__listeners===void 0)return false;const listeners=this.__listeners;return listeners[type]!==void 0&&listeners[type].indexOf(listener)!==-1}removeEventListener(type,listener){if(this.__listeners===void 0)return;const listeners=this.__listeners;const listenerArray=listeners[type];if(listenerArray!==void 0){const index=listenerArray.indexOf(listener);if(index!==-1){listenerArray.splice(index,1)}}}dispatchEvent(event,target){if(this.__listeners===void 0)return;const listeners=this.__listeners;const listenerArray=listeners[event.type];if(listenerArray!==void 0){if(!target)event.target=this;else event.target=target;const array=listenerArray.slice(0);for(let i=0,l=array.length;i<l;i++){array[i].call(this,event)}event.target=null}}};function noop(){}var ElementProxyReceiver=class extends EventDispatcher{constructor(){super();this.__listeners={};this.style={};this.setPointerCapture=()=>{};this.releasePointerCapture=()=>{};this.getBoundingClientRect=()=>{return{left:this.left,top:this.top,width:this.width,height:this.height,right:this.left+this.width,bottom:this.top+this.height}};this.handleEvent=data=>{if(data.type==="resize"){this.left=data.left;this.top=data.top;this.width=data.width;this.height=data.height;if(typeof this.proxied==="object"){this.proxied.style.width=this.width+"px";this.proxied.style.height=this.height+"px";this.proxied.clientWidth=this.width;this.proxied.clientHeight=this.height}}data.preventDefault=noop;data.stopPropagation=noop;this.dispatchEvent(data,this.proxied)};this.style={}}get clientWidth(){return this.width}get clientHeight(){return this.height}focus(){}};var ProxyManager=class{constructor(){this.targets={};this.makeProxy=(id,addTo=void 0)=>{if(!id)id=`proxyReceiver${Math.floor(Math.random()*1e15)}`;let proxy;if(this.targets[id])proxy=this.targets[id];else{proxy=new ElementProxyReceiver;this.targets[id]=proxy}if(typeof addTo==="object"){addTo.proxy=proxy;proxy.proxied=addTo;if(typeof WorkerGlobalScope!=="undefined")addTo.style=proxy.style;if(proxy.width){addTo.style.width=proxy.width+"px";addTo.clientWidth=proxy.width}if(proxy.height){addTo.style.height=proxy.height+"px";addTo.clientHeight=proxy.height}addTo.setPointerCapture=proxy.setPointerCapture.bind(proxy);addTo.releasePointerCapture=proxy.releasePointerCapture.bind(proxy);addTo.getBoundingClientRect=proxy.getBoundingClientRect.bind(proxy);addTo.addEventListener=proxy.addEventListener.bind(proxy);addTo.removeEventListener=proxy.removeEventListener.bind(proxy);addTo.handleEvent=proxy.handleEvent.bind(proxy);addTo.dispatchEvent=proxy.dispatchEvent.bind(proxy);addTo.focus=proxy.focus.bind(proxy)}};this.getProxy=id=>{return this.targets[id]};this.handleEvent=(data,id)=>{if(!this.targets[id])this.makeProxy(id);if(this.targets[id]){this.targets[id].handleEvent(data);return true}return void 0};if(!globalThis.document)globalThis.document={}}};function makeProxy(id,elm){if(this?.__node?.graph){if(!this.__node.graph.ProxyManager)this.__node.graph.ProxyManager=new ProxyManager;this.__node.graph.ProxyManager.makeProxy(id,elm)}else{if(!globalThis.ProxyManager)globalThis.ProxyManager=new ProxyManager;globalThis.ProxyManager.makeProxy(id,elm)}return id}function handleProxyEvent(data,id){if(this?.__node?.graph){if(!this.__node.graph.ProxyManager)this.__node.graph.ProxyManager=new ProxyManager;if(this.__node.graph.ProxyManager.handleEvent(data,id))return data}else{if(!globalThis.ProxyManager)globalThis.ProxyManager=new ProxyManager;if(globalThis.ProxyManager.handleEvent(data,id))return data}}var proxyElementWorkerRoutes={initProxyElement,makeProxy,handleProxyEvent};function Renderer(options){if(options.worker){let worker=options.worker;let route=options.route;if(worker instanceof Blob||typeof worker==="string"){worker=new Worker(worker)}delete options.worker;delete options.route;return transferCanvas(worker,options,route)}else{initProxyElement(options.canvas,void 0,options._id);return setupCanvas(options)}}function transferCanvas(worker,options,route){if(!options)return void 0;if(!options._id)options._id=`canvas${Math.floor(Math.random()*1e15)}`;let offscreen=options.canvas.transferControlToOffscreen();if(!options.width)options.width=options.canvas.clientWidth;if(!options.height)options.height=options.canvas.clientHeight;let message={route:route?route:"setupCanvas",args:{...options,canvas:offscreen}};if(this?.__node?.graph)this.__node.graph.run("initProxyElement",options.canvas,worker,options._id);else initProxyElement(options.canvas,worker,options._id);if(options.draw){if(typeof options.draw==="function")message.args.draw=options.draw.toString();else message.args.draw=options.draw}if(options.update){if(typeof options.update==="function")message.args.update=options.update.toString();else message.args.update=options.update}if(options.init){if(typeof options.init==="function")message.args.init=options.init.toString();else message.args.init=options.init}if(options.clear){if(typeof options.clear==="function")message.args.clear=options.clear.toString();else message.args.clear=options.clear}let transfer=[offscreen];if(options.transfer){transfer.push(...options.transfer);delete options.transfer}worker.postMessage(message,transfer);const canvascontrols={_id:options._id,width:options.width,height:options.height,worker,draw:props=>{worker.postMessage({route:"drawFrame",args:[props,options._id]})},update:props=>{worker.postMessage({route:"updateCanvas",args:[props,options._id]})},clear:()=>{worker.postMessage({route:"clearCanvas",args:options._id})},init:()=>{worker.postMessage({route:"initCanvas",args:options._id})},stop:()=>{worker.postMessage({route:"stopAnim",args:options._id})},start:()=>{worker.postMessage({route:"startAnim",args:options._id})},set:newDrawProps=>{worker.postMessage({route:"setDraw",args:[newDrawProps,options._id]})},terminate:()=>{worker.terminate()}};return canvascontrols}function setDraw(settings,_id){let canvasopts;if(this?.__node?.graph){if(_id)canvasopts=this.__node.graph.CANVASES?.[settings._id];else if(settings._id)canvasopts=this.__node.graph.CANVASES?.[settings._id];else canvasopts=this.__node.graph.CANVASES?.[Object.keys(this.__node.graph.CANVASES)[0]]}else{if(_id)canvasopts=globalThis.CANVASES?.[settings._id];else if(settings._id)canvasopts=globalThis.CANVASES?.[settings._id];else canvasopts=globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]]}if(canvasopts){if(settings.canvas){canvasopts.canvas=settings.canvas;if(this?.__node?.graph)this.__node.graph.run("makeProxy",canvasopts._id,canvasopts.canvas);else proxyElementWorkerRoutes.makeProxy(canvasopts._id,canvasopts.canvas)}if(typeof settings.context==="string")canvasopts.context=canvasopts.canvas.getContext(settings.context);else if(settings.context)canvasopts.context=settings.context;if(settings.width)canvasopts.canvas.width=settings.width;if(settings.height)canvasopts.canvas.height=settings.height;if(typeof settings.draw==="string")settings.draw=parseFunctionFromText2(settings.draw);if(typeof settings.draw==="function"){canvasopts.draw=settings.draw}if(typeof settings.update==="string")settings.update=parseFunctionFromText2(settings.update);if(typeof settings.update==="function"){canvasopts.update=settings.update}if(typeof settings.init==="string")settings.init=parseFunctionFromText2(settings.init);if(typeof settings.init==="function"){canvasopts.init=settings.init}if(typeof settings.clear==="string")settings.clear=parseFunctionFromText2(settings.clear);if(typeof settings.clear==="function"){canvasopts.clear=settings.clear}return settings._id}return void 0}function setupCanvas(options){if(this?.__node?.graph){if(!this.__node.graph.CANVASES)this.__node.graph.CANVASES={}}else if(!globalThis.CANVASES)globalThis.CANVASES={};let canvasOptions=options;options._id?canvasOptions._id=options._id:canvasOptions._id=`canvas${Math.floor(Math.random()*1e15)}`;typeof options.context==="string"?canvasOptions.context=options.canvas.getContext(options.context):canvasOptions.context=options.context;"animating"in options?canvasOptions.animating=options.animating:canvasOptions.animating=true;if(this?.__node?.graph?.CANVASES[canvasOptions._id]){this.__node.graph.run("setDraw",canvasOptions)}else if(globalThis.CANVASES?.[canvasOptions._id]){setDraw(canvasOptions)}else{if(this?.__node?.graph)canvasOptions.graph=this.__node.graph;if(this?.__node?.graph)this.__node.graph.CANVASES[canvasOptions._id]=canvasOptions;else globalThis.CANVASES[canvasOptions._id]=canvasOptions;if(this?.__node?.graph)this.__node.graph.run("makeProxy",canvasOptions._id,canvasOptions.canvas);else proxyElementWorkerRoutes.makeProxy(canvasOptions._id,canvasOptions.canvas);if(options.width)canvasOptions.canvas.width=options.width;if(options.height)canvasOptions.canvas.height=options.height;if(typeof canvasOptions.draw==="string"){canvasOptions.draw=parseFunctionFromText2(canvasOptions.draw)}else if(typeof canvasOptions.draw==="function"){canvasOptions.draw=canvasOptions.draw}if(typeof canvasOptions.update==="string"){canvasOptions.update=parseFunctionFromText2(canvasOptions.update)}else if(typeof canvasOptions.update==="function"){canvasOptions.update=canvasOptions.update}if(typeof canvasOptions.init==="string"){canvasOptions.init=parseFunctionFromText2(canvasOptions.init)}else if(typeof canvasOptions.init==="function"){canvasOptions.init=canvasOptions.init}if(typeof canvasOptions.clear==="string"){canvasOptions.clear=parseFunctionFromText2(canvasOptions.clear)}else if(typeof canvasOptions.clear==="function"){canvasOptions.clear=canvasOptions.clear}if(typeof canvasOptions.init==="function")canvasOptions.init(canvasOptions,canvasOptions.canvas,canvasOptions.context);canvasOptions.stop=()=>{stopAnim(canvasOptions._id)};canvasOptions.start=draw=>{startAnim(canvasOptions._id,draw)};canvasOptions.set=settings=>{setDraw(settings,canvasOptions._id)};if(typeof canvasOptions.draw==="function"&&canvasOptions.animating){let draw=(s,canvas,context)=>{if(s.animating){s.draw(s,canvas,context);requestAnimationFrame(()=>{draw(s,canvas,context)})}};draw(canvasOptions,canvasOptions.canvas,canvasOptions.context)}}if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope)return canvasOptions._id;else{const canvascontrols={_id:options._id,width:options.width,height:options.height,draw:props=>{drawFrame(props,options._id)},update:props=>{updateCanvas(props,options._id)},clear:()=>{clearCanvas(options._id)},init:()=>{initCanvas(options._id)},stop:()=>{stopAnim(options._id)},start:()=>{startAnim(options._id)},set:newDrawProps=>{setDraw(newDrawProps,options._id)},terminate:()=>{stopAnim(options._id)}};return canvascontrols}}function drawFrame(props,_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts){if(props)Object.assign(canvasopts,props);if(canvasopts.draw){canvasopts.draw(canvasopts,canvasopts.canvas,canvasopts.context);return _id}}return void 0}function clearCanvas(_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts?.clear){canvasopts.clear(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function initCanvas(_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts?.init){canvasopts.init(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function updateCanvas(input,_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts?.update){canvasopts.update(canvasopts,canvasopts.canvas,canvasopts.context,input);return _id}return void 0}function setProps(props,_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts){Object.assign(canvasopts,props);if(props.width)canvasopts.canvas.width=props.width;if(props.height)canvasopts.canvas.height=props.height;return _id}return void 0}function startAnim(_id,draw){let canvasopts=getCanvas.call(this,_id);canvasopts.animating=true;if(canvasopts&&draw){if(typeof draw==="string")draw=parseFunctionFromText2(draw);if(typeof draw==="function"){canvasopts.draw=draw}return _id}if(typeof canvasopts?.draw==="function"){let draw2=(s,canvas,context)=>{if(s.animating){s.draw(s,canvas,context);requestAnimationFrame(()=>{draw2(s,canvas,context)})}};if(typeof canvasopts.clear==="function")canvasopts.clear(canvasopts,canvasopts.canvas,canvasopts.context);if(typeof canvasopts.init==="function")canvasopts.init(canvasopts,canvasopts.canvas,canvasopts.context);draw2(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function stopAnim(_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts){canvasopts.animating=false;if(typeof canvasopts.clear==="function")canvasopts.clear(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function getCanvas(_id){let canvasopts;if(this?.__node?.graph){if(!_id)canvasopts=this.__node.graph.CANVASES?.[Object.keys(this.__node.graph.CANVASES)[0]];else canvasopts=this.__node.graph.CANVASES?.[_id]}else{if(!_id)canvasopts=globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]];else canvasopts=globalThis.CANVASES?.[_id]}return canvasopts}var workerCanvasRoutes={...proxyElementWorkerRoutes,Renderer,transferCanvas,setupCanvas,setDraw,drawFrame,clearCanvas,initCanvas,updateCanvas,setProps,startAnim,stopAnim};function parseFunctionFromText2(method=""){let getFunctionBody=methodString=>{return methodString.replace(/^\\\\W*(function[^{]+\\\\{([\\\\s\\\\S]*)\\\\}|[^=]+=>[^{]*\\\\{([\\\\s\\\\S]*)\\\\}|[^=]+=>(.+))/i,"$2$3$4")};let getFunctionHead=methodString=>{let startindex=methodString.indexOf("=>")+1;if(startindex<=0){startindex=methodString.indexOf("){")}if(startindex<=0){startindex=methodString.indexOf(") {")}return methodString.slice(0,methodString.indexOf("{",startindex)+1)};let newFuncHead=getFunctionHead(method);let newFuncBody=getFunctionBody(method);let newFunc;if(newFuncHead.includes("function")){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody)}else{if(newFuncHead.substring(0,6)===newFuncBody.substring(0,6)){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody.substring(newFuncBody.indexOf("{")+1,newFuncBody.length-1))}else{try{newFunc=(0,eval)(newFuncHead+newFuncBody+"}")}catch{}}}return newFunc}var unsafeRoutes={setRoute:function(fn,fnName){if(typeof fn==="string")fn=parseFunctionFromText(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;if(this.__node.graph.get(fnName)){this.__node.graph.get(fnName).__setOperator(fn)}else{let node=this.__node.graph.add({__node:{tag:fnName},__operator:fn})}return true}return false},setNode:function(fn,fnName){if(typeof fn==="string")fn=parseFunctionFromText(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;if(this.__node.graph.get(fnName)){this.__node.graph.get(fnName).__setOperator(fn)}else this.__node.graph.add({__node:{tag:fnName},__operator:fn});return true}return false},setMethod:function(route,fn,fnName){if(typeof fn==="string")fn=parseFunctionFromText(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;if(this.__node.graph.get(route)){this.__node.graph.get(route)[fnName]=fn}else this.__node.graph.add({__node:{tag:fnName,[fnName]:fn}});return true}return false},assignRoute:function(route,source){if(this.__node.graph.get(route)&&typeof source==="object"){Object.assign(this.__node.graph.get(route),source)}},transferClass:(classObj,className)=>{if(typeof classObj==="object"){let str=classObj.toString();let message={route:"receiveClass",args:[str,className]};return message}return false},receiveClass:function(stringified,className){if(typeof stringified==="string"){if(stringified.indexOf("class")===0){let cls=(0,eval)("("+stringified+")");let name=className;if(!name)name=cls.name;this.__node.graph[name]=cls;return true}}return false},setGlobal:(key,value)=>{globalThis[key]=value;return true},assignGlobalObject:(target,source)=>{if(!globalThis[target])return false;if(typeof source==="object")Object.assign(globalThis[target],source);return true},setValue:function(key,value){this.__node.graph[key]=value;return true},assignObject:function(target,source){if(!this.__node.graph[target])return false;if(typeof source==="object")Object.assign(this.__node.graph[target],source);return true},setGlobalFunction:(fn,fnName)=>{if(typeof fn==="string")fn=parseFunctionFromText(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;globalThis[fnName]=fn;return true}return false},assignFunctionToGlobalObject:function(globalObjectName,fn,fnName){if(!globalThis[globalObjectName])return false;if(typeof fn==="string")fn=parseFunctionFromText(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;this.__node.graph[globalObjectName][fnName]=fn;return true}return false},setFunction:function(fn,fnName){if(typeof fn==="string")fn=parseFunctionFromText(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;this.__node.graph[fnName]=fn;return true}return false},assignFunctionToObject:function(objectName,fn,fnName){if(!this.__node.graph[objectName])return false;if(typeof fn==="string")fn=parseFunctionFromText(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;this.__node.graph[objectName][fnName]=fn;return true}return false}};var __defProp2=Object.defineProperty;var __defNormalProp=(obj,key,value)=>key in obj?__defProp2(obj,key,{enumerable:true,configurable:true,writable:true,value}):obj[key]=value;var __publicField=(obj,key,value)=>{__defNormalProp(obj,typeof key!=="symbol"?key+"":key,value);return value};var _Math2=class{constructor(){}static genSineWave(freq=20,peakAmp=1,nSec=1,fs=512,freq2=0,peakAmp2=1){var sineWave=[];var t=[];var increment=1/fs;for(var ti=0;ti<nSec;ti+=increment){var amplitude=Math.sin(2*Math.PI*freq*ti)*peakAmp;amplitude+=Math.sin(2*Math.PI*freq2*ti)*peakAmp2;sineWave.push(amplitude);t.push(ti)}return[t,sineWave]}static getSineAmplitude(frequency=20,peakAmplitude=1,ti=0,tOffset=0){return Math.sin(this.TWO_PI*frequency*ti+tOffset)*peakAmplitude}static mean(arr){var sum=arr.reduce((prev,curr)=>curr+=prev);return sum/arr.length}static mode(arr){return arr.sort((a,b)=>arr.filter(v=>v===a).length-arr.filter(v=>v===b).length).pop()}static std(arr,mean=void 0){let avg=mean;if(!mean)avg=this.mean(arr);let summed=0;for(let i=0;i<arr.length;i++){let subbed=arr[i]-avg;summed+=subbed*subbed}return Math.sqrt(summed/arr.length)}static relError(actual=[],forecast=[],abs=true){if(actual.length!==forecast.length)throw new Error("Input arrays of same length!");let i=actual.length;let d=new Array(actual.length);for(let j=0;j<i;j++){let dd=(actual[j]-forecast[j])/actual[j];if(abs)dd=Math.abs(dd);d[j]=dd}return d}static informationEntropy(probabilities=[]){let len=probabilities.length;let entropy=new Array(len);for(let i=0;i<len;i++){let ent=probabilities[i]*Math.log(probabilities[i]);if(isNaN(ent))ent=0;entropy[i]=ent}return entropy}static zscore(arr){let mean=this.mean(arr);let std=this.std(arr,mean);let z=new Array().length(arr.length);for(let i=0;i<arr.length;i++){z[i]=(arr[i]-mean)/std}return z}static variance(arr){var mean=this.mean(arr);return arr.reduce((a,b)=>a+(b-mean)**2,0)/arr.length}static dot(vec1,vec2){var dot=0;for(var i=0;i<vec1.length;i++){dot+=vec1[i]*vec2[i]}return dot}static cross3D(vec1,vec2){return[vec1[1]*vec2[2]-vec1[2]*vec2[1],vec1[2]*vec2[0]-vec1[0]*vec2[2],vec1[0]*vec2[1]-vec1[1]*vec2[0]]}static magnitude(vec){var sqrd=0;vec.forEach(c=>{sqrd+=c*c});return Math.sqrt(sqrd)}static distance(point1,point2){var dsqrd=0;point1.forEach((c,i)=>{dsqrd+=(point2[i]-c)*(point2[i]-c)});return Math.sqrt(dsqrd)}static midpoint(point1=[1,2,3],point2=[3,4,5]){return point1.map((c,i)=>{return(c+point2[i])*.5})}static normalize(vec){var norm=0;norm=this.magnitude(vec);var vecn=new Array(vec.length);vec.forEach((c,i)=>{vecn[i]=c*norm});return vecn}static normalizeSeries(arr=[],fromZero=true){let max=Math.max(...arr);let min=Math.min(...arr);if(fromZero==false){max=Math.max(max,Math.abs(min));min=0}if(max-min===0){min=0;if(max===0)max=1e-13}return arr.map(v=>(v-min)/(max-min))}static quadraticFormula(a,b,c){let bbmac4=Math.sqrt(b*b-4*a*c);if(!isNaN(bbmac4))return["complex","complex"];let _a2=1/(2*a);if(bbmac4===0)return[b*_a2];let nb=-b;return[(nb+bbmac4)*_a2,(nb-bbmac4)*_a2]}static newtonsMethod(foo=x2=>{return Math.pow(x2,5)+x2*x2-x2-.2},start=0,end=1,precision=.01,attempts=10){let roots=[];for(let i=0;i<attempts;i++){let seedx=Math.random()*(end-start);let guess=foo(seedx);let guess2=foo(seedx+precision);let slope=(guess2-guess)/precision;let xn=seedx+precision;while(Math.abs(slope)>precision){let step=-guess/slope2;let xn12=xn+step;guess=guess2;guess2=foo(xn12);let slope2=(guess2-guess)/(xn12-xn)}let idx;let f=roots.find((root,i2)=>{if(Math.abs(xn1-root)<precision){idx=i2;return true}});if(f)roots[idx]=(xn1+f)*.5;else roots.push(xn1)}return roots}static makeVec(point1,point2){var vec=[];point1.forEach((c,i)=>{vec.push(point2[i]-c)});return vec}static getBufferedValueByCoordinates(vb=new Array(300).fill(1),dims=[10,10,2],coordinate=[1,2,1],cardinal=void 0){let getIdx=(foundIdx=0,dimIdx=0)=>{if(dimIdx===dims.length)return foundIdx;if(dimIdx==0)foundIdx+=coordinate[dimIdx];else if(dims[dimIdx]==0)dimsAt0++;else{let reMul=(val=coordinate[dimIdx],di=dimIdx-1)=>{val*=dims[di];di--;if(di==0)return val;else return reMul(val,di)};foundIdx+=reMul(coordinate[dimIdx]+1,dimIdx-1)}dimIdx++;return getIdx(foundIdx,dimIdx)};let found=getIdx();if(cardinal){if(coordinate[coordinate.length-1]===0){let lastnonzero=0;let idx=0;while(idx!==coordinate.length-1){if(coordinate[idx]!==0)lastnonzero=idx;idx++}return vb[found-lastnonzero+cardinal]}return vb[found-dims.length+cardinal]}else{if(coordinate[coordinate.length-1]===0){let lastnonzero=0;let idx=0;while(idx!==coordinate.length-1){if(coordinate[idx]!==0)lastnonzero=idx;idx++}return vb.slice(found-lastnonzero,found+1)}return vb.slice(found-dims.length,found+1)}}static forBufferedMat(vb=new Array(100).fill(1),dims=[10,10],asIndex=(v,i,x2,y)=>{return v+x2+y}){let coordinate=[];let idx=0;let recurseFor=(depth=0,nextDepth=depth+1)=>{let result=new Array(vb.length);for(let di=0;di<dims[depth];di++){coordinate[depth]=di;if(dims[nextDepth])recurseFor(nextDepth);else{result[idx]=asIndex(vb[idx],idx,...coordinate);idx++}}return result};let recurseForArrFuncs=(depth,nextDepth=depth+1)=>{let result=new Array(vb.length);for(let di=0;di<dims[depth];di++){coordinate[depth]=di;if(dims[nextDepth])recurseFor(nextDepth);else{for(let dj=0;dj<dims.length;dj++){result[idx]=asIndex[dj](vb[idx],idx,...coordinate);idx++}}}return result};if(typeof asIndex==="function"){return recurseFor()}else if(Array.isArray(asIndex)){return recurseForArrFuncs()}}static mapBufferedMat(buffer=new Array(100).fill(1),dimensions=[10,10],asIndex=(v,idx,i,j)=>{console.log(`value:${v}, idx:${idx}, x:${i},y:${j}`);return v+i+j}){let coordinate=new Array(dimensions.length).fill(0);const iterateCoordinate=(coord,idx=0)=>{if(coord[idx]>=dimensions[idx]){coord[idx]=0;idx++;if(idx===dimensions.length)return;iterateCoordinate(coord,idx)}else coord[idx]++};let result=new Array(buffer.length);let i=0;if(typeof asIndex==="function"){while(i<buffer.length){result[i]=asIndex(buffer[i],i,...coordinate);i+=dimensions.length;iterateCoordinate(coordinate)}}else if(Array.isArray(asIndex)){while(i<buffer.length){asIndex.forEach(func=>{result[i]=func(buffer[i],i,...coordinate);i++;iterateCoordinate(coordinate)})}}return result}static combinations(choices=["a","b","c"],vecsize=3){var result=[];if(vecsize<=0){result.push([])}else{_Math2.combinations(choices,vecsize-1).forEach(function(previousComb){choices.forEach(function(element){result.push([element].concat(previousComb))})})}return result}static generateCoordinateSpace(upperBounds=[10,10,10],lowerBounds=[-10,-10,-10],steps=[1,1,1],mutater=void 0){for(let i=0;i<upperBounds.length;i++){if(lowerBounds[i]>upperBounds[i]){let temp=upperBounds[i];upperBounds[i]=lowerBounds[i];lowerBounds[i]=temp}}let result=[];let copy=[...upperBounds];let lastindex=copy.length-1;result.push([...copy]);while(copy[0]>=lowerBounds[0]){let checkNextIndex=decrIdx2=>{if(copy[decrIdx2]<=lowerBounds[decrIdx2]){if(decrIdx2===0)return;copy[decrIdx2]=upperBounds[decrIdx2];decrIdx2--;if(decrIdx2<0)return;if(typeof steps[decrIdx2]=="function")copy[decrIdx2]-=steps[decrIdx2](copy[decrIdx2]);else copy[decrIdx2]-=steps[decrIdx2];checkNextIndex(decrIdx2)}};let decrIdx=lastindex;if(typeof steps[decrIdx]=="function")copy[decrIdx]-=steps[decrIdx](copy[decrIdx]);else copy[decrIdx]-=steps[decrIdx];result.push([...copy]);checkNextIndex(decrIdx);if(mutater)result[result.length-1]=mutater(result[result.length-1])}return result}static calcVectorField(coordinates=[[0,0],[0,1],[1,0],[1,1]],formula=(x2,y)=>{return[x2*10,y*10]}){return coordinates.map(vec=>formula(...vec))}static transpose(mat){return mat[0].map((_,colIndex)=>mat.map(row=>row[colIndex]))}static matmul(a,b){var aNumRows=a.length,aNumCols=a[0].length,bNumRows=b.length,bNumCols=b[0].length,m=new Array(aNumRows);for(var r=0;r<aNumRows;++r){m[r]=new Array(bNumCols);for(var c=0;c<bNumCols;++c){m[r][c]=0;for(var i=0;i<aNumCols;++i){m[r][c]+=a[r][i]*b[i][c]}}}return m}static matscale(mat,scalar){let m=[];for(var i=0;i<mat.length;i++){m[i]=[];for(let j=0;j<mat[0].length;j++){m[i][j]=mat[i][j]*scalar}}return m}static matadd(a,b){let m=[];for(let i=0;i<a.length;i++){m[i]=[];for(var j=0;j<a[0].length;j++){m[i][j]=a[i][j]+b[i][j]}}return m}static matsub(a,b){let m=[];for(let i=0;i<a.length;i++){m[i]=[];for(var j=0;j<a[0].length;j++){m[i][j]=a[i][j]-b[i][j]}}return m}static histogram(arr=[],binSize=1,nBins=void 0){let copy=[...arr];copy.sort(function(a,b){return a-b});let binStart=Math.min(...copy);if(typeof nBins==="number"){let binEnd=Math.max(...copy);binSize=Math.abs((binEnd-binStart)/(nBins-1))}let j=binStart;let binx=[];let biny=[];for(let i=0;i<copy.length;i++){let binidx=binSize*j;if(copy[i]>binStart+binidx){j++;binidx+=binSize;let binmin=binStart+binidx;let binmid=binmin+binidx*.5;binx.push(binmid);biny.push(0)}biny[biny.length-1]++}return[binx,biny]}static normalDistribution(samples=[],normalize=true,cutoff=1e-4){let m=this.mean(samples);let vari=this.variance(samples);let nSamples=samples.length;let probabilities=[];let denom=1/(this.TWO_PI*vari);let _variance=1/vari;let sum=0;for(let i=0;i<nSamples;i++){let px=Math.exp(-.5*Math.pow((samples[i]-m)*_variance,2))*denom;if(px<cutoff)px=0;probabilities.push(px);sum+=px}if(normalize){let _sum=1/sum;probabilities=probabilities.map(x2=>x2*_sum)}return probabilities}static expectedValue(samples=[],probabilities=this.normalDistribution(samples)){return samples.reduce((sum,item,idx)=>sum+item*probabilities[idx])}static originMoment(samples=[],probabilities=this.normalDistribution(samples),order=1){return samples.reduce((sum,item,idx)=>sum+Math.pow(item,order)*probabilities[idx])}static centralMoment(samples=[],probabilities=this.normalDistribution(samples),order=1){let m=this.mean(samples);return samples.reduce((sum,item,idx)=>sum+Math.pow(item-m,order)*probabilities[idx]/samples.length)}static linearDiscriminantAnalysis(samples=[],classifier=[]){let mean=this.mean(samples);let meank=this.mean(classifier);let covariance=this.cov1d(samples,classifier);let probs=this.normalDistribution(samples);let dk=[];for(let i=0;i<samples.length;i++){dk.push(x[i]*covariance*meank-.5*mean*covariance*meank+Math.log10(probs[i]))}return dk}static conv1D(arr=[],kern=[1/3,1/3,1/3],pad=Math.floor(kern.length*.5)){let result=[];let _n=1/kern.length;if(pad>0){let pads=new Array(pad).fill(0);arr=[...pads,...arr,...pads]}let start=Math.floor(kern.length*.5);let end=arr.length-kern.length+start;for(let i=start;i<end;i++){let acc=0;for(let j=0;j<kern.length;j++){acc+=arr[i-start]*kern[j]}result.push(acc*_n)}return result}static conv2D(mat=[[],[],[]],kern=[[],[],[]],pad=0){let result=new Array(mat.length-Math.ceil(kern.length*.5)).fill([]);let mat_t;let kern_t=_Math2.transpose(kern_t);if(pad>0){let pads=new Array(pad).fill(0);mat_t=_Math2.transpose(mat);for(let i2=0;i2<mat_t.length;i2++){mat_t[i2]=[...pads,...mat_t[i2],...pads]}mat=_Math2.transpose(mat_t);for(let j=0;j<mat.length;j++){mat[j]=[...pads,...mat[j],...pads]}}let startr=Math.floor(kern[0].length*.5);let startl=Math.floor(kern_t[0].length*.5);let endr=mat[0].length-kern[0].length+startr;let endl=mat_t[0].length-kern_t[0].length+startl;let _n=1/(kern[0].length*kern_t[0].length);let iters=endr*endl;let i=startr;let x2;let y=startl;while(i<iters){let acc=0;x2=i%mat[0].length;if(x2===0){y++}for(let j=0;j<kern[0].length;j++){for(let k=0;k<kern_t[0].length;j++){acc+=mat[y-startl+k][x2-startr+j]*kern[k][j]}result[y].push(acc*_n)}i++}return result}static cov2d(mat){var mattransposed=this.transpose(mat);var matproducts=[];var rowmeans=[];var colmeans=[];mat.forEach((row,idx)=>{rowmeans.push(this.mean(row))});mattransposed.forEach((col,idx)=>{colmeans.push(this.mean(col))});mat.forEach((row,idx)=>{matproducts.push([]);for(var col=0;col<row.length;col++){matproducts[idx].push((mat[idx][col]-rowmeans[idx])*(mat[idx][col]-colmeans[col])/(row.length-1))}});var matproductstransposed=this.transpose(matproducts);var aNumRows=matproducts.length,aNumCols=matproducts[0].length,bNumRows=matproductstransposed.length,bNumCols=matproductstransposed[0].length,m=new Array(aNumRows);for(var r=0;r<aNumRows;++r){m[r]=new Array(bNumCols);for(var c=0;c<bNumCols;++c){m[r][c]=0;for(var i=0;i<aNumCols;++i){m[r][c]+=matproducts[r][i]*matproductstransposed[i][c]/(mat[0].length-1)}}}return m}static cov1d(arr1=[],arr2=[]){return this.cov2d([arr1,arr2])}static cov3d(x2=[],y=[],z=[]){return[[this.cov1d(x2,x2),this.cov1d(x2,y),this.cov1d(x2,z)],[this.cov1d(y,x2),this.cov1d(y,y),this.cov1d(y,z)],[this.cov1d(z,x2),this.cov1d(z,y),this.cov1d(z,z)]]}static covNd(dimensionalData=[]){let covariance=[];dimensionalData.forEach((arr,i)=>{covariance.push([]);dimensionalData.forEach((arr2,j)=>{covariance[i].push(this.cov1d(arr,arr2))})})}static eigens2x2(mat=[[1,2],[3,4]]){let det=mat[0][0]*mat[1][1]-mat[0][1]*mat[1][0];let mean=(mat[0][0]+mat[1][1])*.5;let sqrt=Math.sqrt(mean*mean-det);let eig1=mean+sqrt;let eig2=mean-sqrt;return[eig1,eig2]}static eigenvectors2x2(mat=[[1,2],[3,4]],eigens=[1,2]){let v1=[-mat[0][1],mat[0][0]-eigens[0]];if(v1[0]===0&&v1[1]===0){v1[0]=mat[1][1]-eigens[0];v1[1]=-mat[1][0]}let v2=[-mat[0][1],mat[0][0]-eigens[1]];if(v2[0]===0&&v2[1]===0){v2[0]=mat[1][1]-eigens[1];v2[1]=-mat[1][0]}return[v1,v2]}static fastpca2d(xarr,yarr){let cov1d=this.cov1d(xarr,yarr);let eigs=this.eigens2x2(cov1d);if(eigs[1]>eigs[0])eigs.reverse();let evs=this.eigenvectors2x2(cov1d,eigs);console.log(eigs,evs);return[eigs,evs]}static crosscorrelation(arr1,arr2){var arr2buf=[...arr2,...Array(arr2.length).fill(0)];var mean1=this.mean(arr1);var mean2=this.mean(arr2);var arr1Est=arr1.reduce((sum,item)=>sum+=Math.pow(item-mean1,2));arr1Est=Math.sqrt(Math.abs(arr1Est));var arr2Est2=arr2.reduce((sum,item)=>sum+=Math.pow(item-mean1,2));arr2Est2=Math.sqrt(Math.abs(arr2Est2));let denom=arr1Est*arr2Est2;if(denom===0)denom=1e-26;var _arrEstsMul=1/denom;var correlations=new Array(arr1.length).fill(0);for(var delay=0;delay<arr1.length;delay++){var r=arr1.reduce((sum,item,i)=>sum+=(item-mean1)*(arr2buf[delay+i]-mean2));correlations[delay]=r*_arrEstsMul}return correlations}static autocorrelation(arr1){var delaybuf=[...arr1,...Array(arr1.length).fill(0)];var mean1=this.mean(arr1);var arr1Est=arr1.reduce((sum,item)=>sum+=Math.pow(item-mean1,2));arr1Est=Math.sqrt(Math.abs(arr1Est));let denom=arr1Est*arr2Est;if(denom===0)denom=1e-26;var _arr1estsqrd=1/denom;var correlations=new Array(arr1.length).fill(0);for(var delay=0;delay<arr1.length;delay++){var r=arr1.reduce((sum,item,i)=>sum+=(item-mean1)*(delaybuf[delay+i]-mean1));correlations[delay]=r*_arr1estsqrd}return correlations}static autocorrelation2dNormalized(mat2d2){let result=[];for(let y=0;y<mat2d2.length;y++){result.push([]);for(let x2=0;x2<mat2d2[y].length;x2++){let G=0;let _G=0;for(let b=0;b<mat2d2.length;b++){for(let a=0;a<mat2d2[b].length;a++){G+=mat2d2[y][x2]*mat2d2[mat2d2.length-1-b][mat2d2[y].length-1-a];_G+=mat2d2[y][x2]*mat2d2[mat2d2.length-1][mat2d2[y].length-1]}}result[y][x2]=G/_G-1}}return result}static crosscorrelation2d(mat2d1,mat2d2){let result=[];for(let y=0;y<mat2d1.length;y++){result.push([]);for(let x2=0;x2<mat2d1[y].length;x2++){let G=0;for(let b=0;b<mat2d2.length;b++){for(let a=0;a<mat2d2[b].length;a++){G+=mat2d1[y][x2]*mat2d2[mat2d2.length-1-b][mat2d2[y].length-1-a]}}result[y][x2]=G}}return result}static crosscorrelation2dNormalized(mat2d1,mat2d2){let result=[];for(let y=0;y<mat2d1.length;y++){result.push([]);for(let x2=0;x2<mat2d1[y].length;x2++){let G=0;let _G=0;for(let b=0;b<mat2d2.length;b++){for(let a=0;a<mat2d2[b].length;a++){G+=mat2d1[y][x2]*mat2d2[mat2d.length-1-b][mat2d2[y].length-1-a];_G+=mat2d1[y][x2]*mat2d2[mat2d2.length-1][mat2d2[y].length-1]}}result[y][x2]=G/_G-1}}return result}static correlograms(dat=[[],[]]){var correlograms=[];dat.forEach((row1,i)=>{dat.forEach((row2,j)=>{if(j>=i){correlograms.push(_Math2.crosscorrelation(row1,row2))}})});return correlograms}static dft(sineWave=[]){var TWOPI=2*3.141592653589793;var real=[];var imag=[];var mags=[];for(var k=0;k<sineWave.length;k++){real.push(0);imag.push(0);for(var j=0;j<sineWave.length;j++){var shared=TWOPI*k*j/sineWave.length;real[k]=real[k]+sineWave[j]*Math.cos(shared);imag[k]=imag[k]-sineWave[j]*Math.sin(shared)}mags.push(Math.sqrt(real[k]*real[k]+imag[k]*imag[k]))}function orderMagnitudes(unorderedMags){return[...unorderedMags.slice(Math.ceil(unorderedMags.length*.5),unorderedMags.length),...unorderedMags.slice(0,Math.ceil(unorderedMags.length*.5))]}mags=orderMagnitudes(mags);let halflen=mags.length*.5;let freqs=mags.map((m,i)=>{return i-halflen});return{real,imag,freqs,mags}}static sma(arr=[],window){var smaArr=[];for(var i=0;i<arr.length;i++){if(i==0){smaArr.push(arr[0])}else if(i<window){var arrslice=arr.slice(0,i+1);smaArr.push(arrslice.reduce((previous,current)=>current+=previous)/(i+1))}else{var arrslice=arr.slice(i-window,i);smaArr.push(arrslice.reduce((previous,current)=>current+=previous)/window)}}return smaArr}static sum(arr=[]){if(arr.length>0){var sum=arr.reduce((prev,curr)=>curr+=prev);return sum}else{return 0}}static reduceArrByFactor(arr,factor=2){let x2=arr.filter((element,index)=>{return index%factor===0});return x2}static makeArr(startValue,stopValue,nSteps){var arr=[];var step=(stopValue-startValue)/(nSteps-1);for(var i=0;i<nSteps;i++){arr.push(startValue+step*i)}return arr}static autoscale(array,stackedLines=1,stackPosition=0,centerZero=false){if(array?.length===0)return array;let max=Math.max(...array);let min=Math.min(...array);let _lines=1/stackedLines;let scalar;if(centerZero){let absmax=Math.max(Math.abs(min),Math.abs(max));scalar=_lines/absmax;return array.map(y=>y*scalar+(_lines*(stackPosition+1)*2-1-_lines))}else{scalar=_lines/(max-min);return array.map(y=>2*((y-min)*scalar-1/(2*stackedLines))+(_lines*(stackPosition+1)*2-1-_lines))}}static absmax(array){return Math.max(Math.abs(Math.min(...array)),Math.max(...array))}static downsample(array,fitCount,scalar=1){if(array.length>fitCount){let output=new Array(fitCount);let incr=array.length/fitCount;let lastIdx=array.length-1;let last=0;let counter=0;for(let i=incr;i<array.length;i+=incr){let rounded=Math.round(i);if(rounded>lastIdx)rounded=lastIdx;for(let j=last;j<rounded;j++){output[counter]+=array[j]}output[counter]/=(rounded-last)*scalar;counter++;last=rounded}return output}else return array}static interpolateArray(data,fitCount,scalar=1){var linearInterpolate=function(before2,after2,atPoint2){return(before2+(after2-before2)*atPoint2)*scalar};var newData=new Array;var springFactor=(data.length-1)/(fitCount-1);newData[0]=data[0];for(var i=1;i<fitCount-1;i++){var tmp=i*springFactor;var before=Math.floor(tmp);var after=Math.ceil(tmp);var atPoint=tmp-before;newData[i]=linearInterpolate(data[before],data[after],atPoint)}newData[fitCount-1]=data[data.length-1];return newData}static isExtrema(arr,critical="peak"){let ref=[...arr];if(ref.length%2===0)ref.pop();if(arr.length>1){let pass=true;for(let i=0;i<ref.length;i++){let val=ref[i];if(critical==="peak"){if(i<Math.floor(ref.length*.5)&&val>=ref[Math.floor(ref.length*.5)]){pass=false;break}else if(i>Math.floor(ref.length*.5)&&val>=ref[Math.floor(ref.length*.5)]){pass=false;break}}else if(critical==="valley"){if(i<Math.floor(ref.length*.5)&&val<=ref[Math.floor(ref.length*.5)]){pass=false;break}else if(i>Math.floor(ref.length*.5)&&val<=ref[Math.floor(ref.length*.5)]){pass=false;break}}else{if(i<Math.floor(ref.length*.5)&&val<=ref[Math.floor(ref.length*.5)]){pass=false;break}else if(i>Math.floor(ref.length*.5)&&val<=ref[Math.floor(ref.length*.5)]){pass=false;break}}}if(critical!=="peak"&&critical!=="valley"&&pass===false){pass=true;for(let i=0;i<ref.length;i++){let val=ref[i];if(i<Math.floor(ref.length*.5)&&val>=ref[Math.floor(ref.length*.5)]){pass=false;break}else if(i>Math.floor(ref.length*.5)&&val>=ref[Math.floor(ref.length*.5)]){pass=false;break}}}return pass}else return void 0}static isCriticalPoint(arr,critical="peak"){let ref=[...arr];if(ref.length%2===0)ref.pop();if(arr.length>1){let pass=true;for(let i=0;i<ref.length;i++){let val=ref[i];if(critical==="peak"){if(i<ref.length*.5&&val<=0){pass=false;break}else if(i>ref.length*.5&&val>0){pass=false;break}}else if(critical==="valley"){if(i<ref.length*.5&&val>=0){pass=false;break}else if(i>ref.length*.5&&val<0){pass=false;break}}else{if(i<ref.length*.5&&val>=0){pass=false;break}else if(i>ref.length*.5&&val<0){pass=false;break}}}if(critical!=="peak"&&critical!=="valley"&&pass===false){pass=true;for(let i=0;i<ref.length;i++){let val=ref[i];if(i<ref.length*.5&&val<=0){pass=false;break}else if(i>ref.length*.5&&val>0){pass=false;break}}}return pass}else return void 0}static getPeakThreshold(arr,peakIndices,thresholdVar){let threshold;let filtered=arr.filter((o,i)=>{if(peakIndices.indexOf(i)>-1)return true});if(thresholdVar===0){threshold=this.mean(filtered)}else threshold=(thresholdVar+this.mean(filtered))*.5;return threshold}static column(mat,x2){let col=new Array(mat.length).fill(0).map(()=>new Array(1).fill(0));for(let i=0;i<mat.length;i++){col[i][0]=mat[i][x2]}return col}static flatten_vector(v){let v_new=[];for(let i=0;i<v.length;i++){v_new[i]=v[i][0]}return v_new}static squared_difference(v1,v2){let sum=0;for(let i=0;i<v1.length;i++){sum=sum+Math.pow(v1[i]-v2[i],2)}return sum}static shift_deflate(mat,eigenvalue,eigenvector){let len=Math.sqrt(this.matmul(this.transpose(eigenvector),eigenvector));let U=this.matscale(eigenvector,1/len);let delta=this.matscale(this.matmul(U,this.transpose(U)),eigenvalue);let M_new=this.matsub(mat,delta);return M_new}static eigenvalue_of_vector(mat,eigenvector){ev=this.matmul(this.matmul(this.transpose(eigenvector),mat),eigenvector);return ev}static power_iteration(mat,tolerance=1e-5,max_iterations=1e3){let rank=mat.length;let eigenvector=new Array(rank).fill(0).map(()=>new Array(1).fill(Math.sqrt(rank)));let eigenvalue=this.eigenvalue_of_vector(mat,eigenvector);let epsilon=1;let iter=0;while(epsilon>tolerance&&iter<max_iterations){let old_eigenvalue=JSON.parse(JSON.stringify(eigenvalue));let Mv=this.matmul(mat,eigenvector);eigenvector=this.normalize(Mv);eigenvalue=this.eigenvalue_of_vector(mat,eigenvector);epsilon=Math.abs(eigenvalue-old_eigenvalue);iter++};return[eigenvalue,eigenvector]}static eigens(mat,tolerance=1e-4,max_iterations=1e3){let eigenvalues=[];let eigenvectors=[];for(let i=0;i<mat.length;i++){let result=this.power_iteration(mat,tolerance,max_iterations);let eigenvalue=result[0];let eigenvector=result[1];eigenvalues[i]=eigenvalue;eigenvectors[i]=this.flatten_vector(eigenvector);mat=this.shift_deflate(mat,eigenvalue,eigenvector)}return[eigenvalues,eigenvectors]}static pca(mat,tolerance=1e-5){let dims=mat.length;let t=new Array(dims);let p=new Array(dims);let mat_t=this.transpose(mat);t[0]=this.column(mat,0);let epsilon=1;let iter=0;while(espilon>tolerance){iter++;p[0]=this.matmul(mat_t,t[0]);let tp=this.matmul(this.transpose(t[0]),t[0]);p[0]=this.matscale(p[0],1/tp);let p_length=Math.sqrt(this.matmul(this.transpose(p[0]),p[0]));p[0]=this.matscale(p[0],1/p_length);let t_new=this.matmul(mat,p[0]);let pp=this.matmul(this.transpose(p[0]),p[0]);t_new=this.matscale(t_new,1/pp);epsilon=this.squared_difference(t[0],t_new);t[0]=JSON.parse(JSON.stringify(t_new))}let components=this.matmul(this.transpose(t[0]),t[0]);return components}static circularBuffer(arr,newEntries){if(Array.isArray(newEntries)){if(newEntries.length<arr.length){let slice=arr.slice(newEntries.length);let len=arr.length;arr.splice(0,len,...slice,...newEntries)}else if(newEntries.length>arr.length){let len=arr.length;arr.splice(0,len,newEntries.slice(len-newEntries.length))}else{arr.splice(0,arr.length,...newEntries)}}else{arr.push(newEntries);arr.shift()}return arr}static HSLToRGB(h,s,l,scalar=255){s/=100;l/=100;let c=(1-Math.abs(2*l-1))*s,x2=c*(1-Math.abs(h/60%2-1)),m=l-c/2,r=0,g=0,b=0;if(0<=h&&h<60){r=c;g=x2;b=0}else if(60<=h&&h<120){r=x2;g=c;b=0}else if(120<=h&&h<180){r=0;g=c;b=x2}else if(180<=h&&h<240){r=0;g=x2;b=c}else if(240<=h&&h<300){r=x2;g=0;b=c}else if(300<=h&&h<360){r=c;g=0;b=x2}r=(r+m)*scalar;g=(g+m)*scalar;b=(b+m)*scalar;return[r,g,b]}static p300(event_timestamps=[],raw_signal=[],signal_timestamps=[],sps=256){let smoothingstep=Math.floor(sps/10);let smoothed=this.sma(raw_signal,smoothingstep);let peaks=this.peakDetect(smoothed,"peak",smoothingstep);let mean=this.mean(smoothed);let std=this.std(smoothed,mean);let p_idx=0;let candidates=[];if(peaks.length>0){event_timestamps.forEach((t,j)=>{while(signal_timestamps[peaks[p_idx]]<t+200){p_idx++;if(!peaks[p_idx])break}let tempi=0;let tempcandidates=[];while(signal_timestamps[peaks[p_idx+tempi]]<t+600){tempcandidates.push(p_idx+tempi);tempi++;if(!peaks[p_idx+tempi])break}if(tempcandidates.length>1){let peakvals=[];tempcandidates.forEach(tc=>{peakvals.push(smoothed[peaks[tc]])});let max=Math.max(...peakvals);let maxi=tempcandidates[peakvals.indexOf(max)];candidates.push({event_timestamp:t,event_index:j,peak_timestamp:signal_timestamps[[peaks[maxi]]],signal_index:[peaks[maxi]],signal_amplitude:raw_signal[[peaks[maxi]]],zscore:(smoothed[peaks[maxi]]-mean)/std})}else if(tempcandidates.length===1)candidates.push({event_timestamp:t,event_index:j,peak_timestamp:signal_timestamps[peaks[tempcandidates[0]]],signal_index:peaks[tempcandidates[0]],signal_amplitude:raw_signal[[peaks[tempcandidates[0]]]],zscore:(smoothed[peaks[tempcandidates[0]]]-mean)/std})})}return candidates}};var Math2=_Math2;__publicField(Math2,"TWO_PI",Math.PI*2);__publicField(Math2,"C",299792458);__publicField(Math2,"G",66743e-15);__publicField(Math2,"h",662607015e-42);__publicField(Math2,"R",8314.32);__publicField(Math2,"Ra",287);__publicField(Math2,"H",69.3);__publicField(Math2,"kbar",1054571817e-43);__publicField(Math2,"kB",1380649e-29);__publicField(Math2,"ke",89875517923e-1);__publicField(Math2,"me",91093837015e-41);__publicField(Math2,"mp",167262192369e-38);__publicField(Math2,"mn",167492749804e-38);__publicField(Math2,"P0",101325);__publicField(Math2,"T0",288.15);__publicField(Math2,"p0",1.225);__publicField(Math2,"Na",60220978e16);__publicField(Math2,"y",1.405);__publicField(Math2,"M0",28.96643);__publicField(Math2,"g0",9.80665);__publicField(Math2,"Re",6378100);__publicField(Math2,"B",1458e-9);__publicField(Math2,"S",110.4);__publicField(Math2,"Sigma",365e-12);__publicField(Math2,"imgkernels",{edgeDetection:[[-1,-1,-1],[-1,8,-1],[-1,-1,-1]],boxBlur:[[1/9,1/9,1/9],[1/9,1/9,1/9],[1/9,1/9,1/9]],sobelLeft:[[1,0,-1],[2,0,-2],[1,0,-1]],sobelRight:[[-1,0,1],[-2,0,2],[-1,0,1]],sobelTop:[[1,2,1],[0,0,0],[-1,-2,-1]],sobelBottom:[[-1,2,1],[0,0,0],[1,2,1]],identity:[[0,0,0],[0,1,0],[0,0,0]],gaussian3x3:[[1,2,1],[2,4,2],[1,2,1]],guassian7x7:[[0,0,0,5,0,0,0],[0,5,18,32,18,5,0],[0,18,64,100,64,18,0],[5,32,100,100,100,32,5],[0,18,64,100,64,18,0],[0,5,18,32,18,5,0],[0,0,0,5,0,0,0]],emboss:[[-2,-1,0],[-1,1,1],[0,1,2]],sharpen:[[0,-1,0],[-1,5,-1],[0,-1,0]]});__publicField(Math2,"integral",(func=x2=>{let y=x2;return y},range=[],stepx=.01)=>{let area=0;for(let i=range[0];i<range[1];i+=stepx){let y=func(i);area+=y*stepx}return area});__publicField(Math2,"dintegral",(func=(x2,y)=>{let z=x2+y;return z},range=[[],[]],stepx=.01,stepy=stepx)=>{let volume=0;for(let i=range[0][0]+stepx;i<range[0][1];i+=stepx){for(let j=range[1][0]+stepy;j<range[1][1];j+=stepy){let z=func(i,j);volume+=z*stepx*stepy}}return volume});__publicField(Math2,"tintegral",(func=(x2,y,z)=>{let w=x2+y+z;return w},range=[[],[],[]],stepx=.01,stepy=stepx,stepz=stepx)=>{let volume=0;for(let i=range[0][0]+stepx;i<range[0][1];i+=stepx){for(let j=range[1][0]+stepy;j<range[1][1];j+=stepy){for(let k=range[2][0]+stepz;k<range[2][1];k+=stepz){let w=func(i,j,k);volume+=w*stepx*stepy*stepz}}}return volume});__publicField(Math2,"pintegral",(func=x2=>{let y=x2;return y},range=[],stepx=.01)=>{let length=0;let y0=void 0;let yi=void 0;for(let i=range[0];i<range[1];i+=stepx){y0=yi;yi=func(i);if(y0)length+=_Math2.distance([0,y0],[stepx,yi])}return length});__publicField(Math2,"meshgrid",_Math2.generateCoordinateSpace);__publicField(Math2,"autocorrelation2d",mat2d2=>{let result=[];for(let y=0;y<mat2d2.length;y++){result.push([]);for(let x2=0;x2<mat2d2[y].length;x2++){let G=0;for(let b=0;b<mat2d2.length;b++){for(let a=0;a<mat2d2[b].length;a++){G+=mat2d2[y][x2]*mat2d2[mat2d2.length-1-b][mat2d2[y].length-1-a]}}result[y][x2]=G}}return result});__publicField(Math2,"lerp",_Math2.makeArr);__publicField(Math2,"upsample",_Math2.interpolateArray);__publicField(Math2,"lerp",(v0,v1,fit,floor=true)=>{function lerp(v02,v12,t){return(1-t)*v02+t*v12}function interpolerp(v02,v12,fit2,floor2=true){if(fit2<=2)return[v02,v12];let a=1/fit2;let result=new Array(fit2);result[0]=v02;for(let i=1;i<=fit2;i++){result[i]=lerp(v02,v12,a*i);if(floor2)result[i]=Math.floor(result[i])}return result}});__publicField(Math2,"peakDetect",(smoothedArray,type="peak",window=49)=>{let mid=Math.floor(window*.5);let peaks=[];for(let i=0;i<smoothedArray.length-window;i++){let isPeak=_Math2.isExtrema(smoothedArray.slice(i,i+window),type);if(isPeak){peaks.push(i+mid-1)}}return peaks});Object.assign(Math,Math2);if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope){self.SERVICE=new WorkerService({services:{workerCanvasRoutes,unsafeRoutes,Math,Math2}})}var Worker_default=self;})();\\n\')],{type:"text/javascript"}));function parseFunctionFromText4(method=""){let getFunctionBody=methodString=>{return methodString.replace(/^\\W*(function[^{]+\\{([\\s\\S]*)\\}|[^=]+=>[^{]*\\{([\\s\\S]*)\\}|[^=]+=>(.+))/i,"$2$3$4")};let getFunctionHead=methodString=>{let startindex=methodString.indexOf("=>")+1;if(startindex<=0){startindex=methodString.indexOf("){")}if(startindex<=0){startindex=methodString.indexOf(") {")}return methodString.slice(0,methodString.indexOf("{",startindex)+1)};let newFuncHead=getFunctionHead(method);let newFuncBody=getFunctionBody(method);let newFunc;if(newFuncHead.includes("function")){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody)}else{if(newFuncHead.substring(0,6)===newFuncBody.substring(0,6)){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody.substring(newFuncBody.indexOf("{")+1,newFuncBody.length-1))}else{try{newFunc=(0,eval)(newFuncHead+newFuncBody+"}")}catch{}}}return newFunc}var stringifyWithCircularRefs3=function(){const refs=new Map;const parents=[];const path=["this"];function clear(){refs.clear();parents.length=0;path.length=1}function updateParents(key,value2){var idx=parents.length-1;var prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value2||idx===0){path.push(key);parents.push(value2.pushed)}else{while(idx-->=0){prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value2){idx+=2;parents.length=idx;path.length=idx;--idx;parents[idx]=value2;path[idx]=key;break}}idx--}}}}function checkCircular(key,value2){if(value2!=null){if(typeof value2==="object"){if(key){updateParents(key,value2)}let other=refs.get(value2);if(other){return"[Circular Reference]"+other}else{refs.set(value2,path.join("."))}}}return value2}return function stringifyWithCircularRefs22(obj,space){try{parents.push(obj);return JSON.stringify(obj,checkCircular,space)}finally{clear()}}}();if(JSON.stringifyWithCircularRefs===void 0){JSON.stringifyWithCircularRefs=stringifyWithCircularRefs3}var stringifyFast3=function(){const refs=new Map;const parents=[];const path=["this"];function clear(){refs.clear();parents.length=0;path.length=1}function updateParents(key,value2){var idx=parents.length-1;if(parents[idx]){var prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value2||idx===0){path.push(key);parents.push(value2.pushed)}else{while(idx-->=0){prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value2){idx+=2;parents.length=idx;path.length=idx;--idx;parents[idx]=value2;path[idx]=key;break}}idx++}}}}}function checkValues(key,value2){let val;if(value2!=null){if(typeof value2==="object"){let c2=value2.constructor.name;if(key&&c2==="Object"){updateParents(key,value2)}let other=refs.get(value2);if(other){return"[Circular Reference]"+other}else{refs.set(value2,path.join("."))}if(c2==="Array"){if(value2.length>20){val=value2.slice(value2.length-20)}else val=value2}else if(c2.includes("Set")){val=Array.from(value2)}else if(c2!=="Object"&&c2!=="Number"&&c2!=="String"&&c2!=="Boolean"){val="instanceof_"+c2}else if(c2==="Object"){let obj={};for(const prop in value2){if(value2[prop]==null){obj[prop]=value2[prop]}else if(Array.isArray(value2[prop])){if(value2[prop].length>20)obj[prop]=value2[prop].slice(value2[prop].length-20);else obj[prop]=value2[prop]}else if(value2[prop].constructor.name==="Object"){obj[prop]={};for(const p in value2[prop]){if(Array.isArray(value2[prop][p])){if(value2[prop][p].length>20)obj[prop][p]=value2[prop][p].slice(value2[prop][p].length-20);else obj[prop][p]=value2[prop][p]}else{if(value2[prop][p]!=null){let con=value2[prop][p].constructor.name;if(con.includes("Set")){obj[prop][p]=Array.from(value2[prop][p])}else if(con!=="Number"&&con!=="String"&&con!=="Boolean"){obj[prop][p]="instanceof_"+con}else{obj[prop][p]=value2[prop][p]}}else{obj[prop][p]=value2[prop][p]}}}}else{let con=value2[prop].constructor.name;if(con.includes("Set")){obj[prop]=Array.from(value2[prop])}else if(con!=="Number"&&con!=="String"&&con!=="Boolean"){obj[prop]="instanceof_"+con}else{obj[prop]=value2[prop]}}}val=obj}else{val=value2}}else{val=value2}}return val}return function stringifyFast22(obj,space){parents.push(obj);let res=JSON.stringify(obj,checkValues,space);clear();return res}}();if(JSON.stringifyFast===void 0){JSON.stringifyFast=stringifyFast3}var unsafeRoutes2={setRoute:function(fn2,fnName){if(typeof fn2==="string")fn2=parseFunctionFromText4(fn2);if(typeof fn2==="function"){if(!fnName)fnName=fn2.name;if(this.__node.graph.get(fnName)){this.__node.graph.get(fnName).__setOperator(fn2)}else{let node=this.__node.graph.add({__node:{tag:fnName},__operator:fn2})}return true}return false},setNode:function(fn2,fnName){if(typeof fn2==="string")fn2=parseFunctionFromText4(fn2);if(typeof fn2==="function"){if(!fnName)fnName=fn2.name;if(this.__node.graph.get(fnName)){this.__node.graph.get(fnName).__setOperator(fn2)}else this.__node.graph.add({__node:{tag:fnName},__operator:fn2});return true}return false},setMethod:function(route,fn2,fnName){if(typeof fn2==="string")fn2=parseFunctionFromText4(fn2);if(typeof fn2==="function"){if(!fnName)fnName=fn2.name;if(this.__node.graph.get(route)){this.__node.graph.get(route)[fnName]=fn2}else this.__node.graph.add({__node:{tag:fnName,[fnName]:fn2}});return true}return false},assignRoute:function(route,source){if(this.__node.graph.get(route)&&typeof source==="object"){Object.assign(this.__node.graph.get(route),source)}},transferClass:(classObj,className)=>{if(typeof classObj==="object"){let str22=classObj.toString();let message={route:"receiveClass",args:[str22,className]};return message}return false},receiveClass:function(stringified,className){if(typeof stringified==="string"){if(stringified.indexOf("class")===0){let cls=(0,eval)("("+stringified+")");let name2=className;if(!name2)name2=cls.name;this.__node.graph[name2]=cls;return true}}return false},setGlobal:(key,value2)=>{globalThis[key]=value2;return true},assignGlobalObject:(target,source)=>{if(!globalThis[target])return false;if(typeof source==="object")Object.assign(globalThis[target],source);return true},setValue:function(key,value2){this.__node.graph[key]=value2;return true},assignObject:function(target,source){if(!this.__node.graph[target])return false;if(typeof source==="object")Object.assign(this.__node.graph[target],source);return true},setGlobalFunction:(fn2,fnName)=>{if(typeof fn2==="string")fn2=parseFunctionFromText4(fn2);if(typeof fn2==="function"){if(!fnName)fnName=fn2.name;globalThis[fnName]=fn2;return true}return false},assignFunctionToGlobalObject:function(globalObjectName,fn2,fnName){if(!globalThis[globalObjectName])return false;if(typeof fn2==="string")fn2=parseFunctionFromText4(fn2);if(typeof fn2==="function"){if(!fnName)fnName=fn2.name;this.__node.graph[globalObjectName][fnName]=fn2;return true}return false},setFunction:function(fn2,fnName){if(typeof fn2==="string")fn2=parseFunctionFromText4(fn2);if(typeof fn2==="function"){if(!fnName)fnName=fn2.name;this.__node.graph[fnName]=fn2;return true}return false},assignFunctionToObject:function(objectName,fn2,fnName){if(!this.__node.graph[objectName])return false;if(typeof fn2==="string")fn2=parseFunctionFromText4(fn2);if(typeof fn2==="function"){if(!fnName)fnName=fn2.name;this.__node.graph[objectName][fnName]=fn2;return true}return false}};var algorithms2={};var loadAlgorithms2=settings=>{return Object.assign(algorithms2,settings)};function createSubprocess2(options,inputs){let ctx={_id:options._id?options._id:`algorithm${Math.floor(Math.random()*1e15)}`,ondata:options.ondata,run:data=>{return ctx.ondata(ctx,data)}};if(options.structs)recursivelyAssign32(ctx,JSON.parse(JSON.stringify(options.structs)));if(inputs)recursivelyAssign32(ctx,JSON.parse(JSON.stringify(inputs)));if(options.oncreate){ctx.oncreate=options.oncreate}if(ctx.oncreate){ctx.oncreate(ctx)}return ctx}var recursivelyAssign32=(target,obj)=>{for(const key in obj){if(typeof obj[key]==="object"&&!Array.isArray(obj[key])){if(typeof target[key]==="object"&&!Array.isArray(target[key]))recursivelyAssign32(target[key],obj[key]);else target[key]=recursivelyAssign32({},obj[key])}else target[key]=obj[key]}return target};var subprocessRoutes2={...unsafeRoutes2,loadAlgorithms:loadAlgorithms2,"initSubprocesses":async function initSubprocesses2(subprocesses,service){if(!service)service=this.__node.graph;if(!service)return void 0;for(const p in subprocesses){let s=subprocesses[p];if(!s.worker&&s.url)s.worker=service.addWorker({url:s.url});if(!s.worker)continue;let w22=s.worker;let wpId;wpId=service.establishMessageChannel(w22.worker,s.source?.worker);if(!s.source)s.source=service;if(typeof s.subprocess==="object"){const p2=s.subprocess;if(!p2.name)continue;if(typeof p2.oncreate==="function"){p2.oncreate=p2.oncreate.toString()}if(typeof p2.ondata==="function"){p2.ondata=p2.ondata.toString()}s.worker.post("addSubprocessTemplate",[p2.name,p2.structs,p2.oncreate,p2.ondata,p2.props]);s.subprocess=p2.name}if(s.init){let r=await w22.run(s.init,s.initArgs);s.otherArgs=r}if(s.otherArgs){w22.run("setValue",["otherArgsProxy",Array.isArray(s.otherArgs)?s.otherArgs:[s.otherArgs]])}if(s.pipeTo){w22.run("setValue",["routeProxy",s.route]);w22.run("setValue",["pipeRoute",s.pipeTo.route]);if(s.url&&!s.pipeTo.worker){let w222=service.addWorker({url:s.url});s.pipeTo.portId=service.establishMessageChannel(w22.worker,w222.worker);s.pipeTo.worker=w222}if(s.pipeTo.init){s.pipeTo.otherArgs=await s.pipeTo.worker.run(s.pipeTo.init,s.pipeTo.initArgs)}w22.run("setValue",["pipePort",s.pipeTo.portId]);if(s.pipeTo.otherArgs)w22.run("setValue",["otherPipeArgs",s.pipeTo.otherArgs]);service.transferFunction(w22,function pipeResults(data){let inp=data;if(this.__node.graph.otherArgsProxy)inp=[data,...this.__node.graph.otherArgsProxy];let r=this.__node.graph.run(this.__node.graph.routeProxy,inp);if(!s.blocking)return new Promise(res=>{if(r instanceof Promise){r.then(rr2=>{if(rr2!==void 0){let args=rr2;if(this.__node.graph.otherPipeArgs)args=[rr2,...this.__node.graph.otherPipeArgs];if(this.workers[this.__node.graph.pipePort]){s.blocking=true;this.workers[this.__node.graph.pipePort].run(this.__node.graph.pipeRoute,args).then(result=>{s.blocking=false;res(result)})}}})}else if(r!==void 0){let args=r;if(this.__node.graph.otherPipeArgs)args=[r,...this.__node.graph.otherPipeArgs];if(this.workers[this.__node.graph.pipePort]){s.blocking=true;this.workers[this.__node.graph.pipePort].run(this.__node.graph.pipeRoute,args).then(result=>{s.blocking=false;res(result)})}}});return void 0},s.route+"_pipeResults");s.route=s.route+"_pipeResults"}else{w22.run("setValue",["routeProxy",s.route]);service.transferFunction(w22,function routeProxy(data){let r;if(this.__node.graph.otherArgsProxy)r=this.__node.graph.nodes.get(this.__node.graph.routeProxy).__operator(data,...this.__node.graph.otherArgsProxy);else r=this.__node.graph.nodes.get(this.__node.graph.routeProxy).__operator(data);if(this.__node.graph.state.triggers[this.__node.graph.routeProxy]){if(r instanceof Promise){r.then(rr2=>{this.setState({[this.__node.graph.routeProxy]:rr2})})}else this.setState({[this.__node.graph.routeProxy]:r})}return r},s.route+"_routeProxy");s.route=s.route+"_routeProxy";if(!s.stopped)w22.run("subscribeToWorker",[s.subscribeRoute,wpId,s.route]).then(sub2=>{s.sub=sub2})}s.stop=async()=>{if(s.source&&typeof s.sub==="number"){s.source.unsubscribe(s.subscribeRoute,s.sub);return true}return void 0};s.start=async()=>{if(typeof s.sub!=="number")return w22.run("subscribeToWorker",[s.subscribeRoute,wpId,s.route,s.blocking]).then(sub2=>{s.sub=sub2})};s.setArgs=async args=>{if(Array.isArray(args))await w22.run("setValue",["otherArgsProxy",args]);else if(typeof args==="object"){for(const key in args){await w22.run("setValue",[key,args[key]])}}return true};s.terminate=()=>{w22.terminate();if(s.source?.worker&&typeof s.sub==="number"){s.source.post("unsubscribe",s.sub)}if(s.pipeTo?.worker){s.pipeTo.worker.terminate()}};if(s.callback)w22.subscribe(s.route,res=>{if(typeof s.callback==="string")this.__node.graph.run(s.callback,res);else s.callback(res)})}return subprocesses},"addSubprocessTemplate":function subprocesstempalte2(name2,structs,oncreate,ondata,props){if(typeof oncreate==="string")oncreate=parseFunctionFromText4(oncreate);if(typeof ondata==="string")ondata=parseFunctionFromText4(ondata);if(typeof ondata==="function"){algorithms2[name2]={ondata,oncreate:typeof oncreate==="function"?oncreate:null,structs};if(typeof props==="object")Object.assign(algorithms2[name2],props);return true}},"updateSubprocess":function updatesubprocess2(structs,_id){if(!this.__node.graph.ALGORITHMS)this.__node.graph.ALGORITHMS={};if(!_id)_id=Object.keys(this.__node.graph.ALGORITHMS)[0];if(!_id)return;Object.assign(this.__node.graph.ALGORITHMS[_id],structs)},"createSubprocess":function creatsubprocess2(options,inputs){if(!this.__node.graph.ALGORITHMS)this.__node.graph.ALGORITHMS={};if(typeof options==="string"){options=algorithms2[options]}if(typeof options==="object"){if(typeof options.ondata==="string")options.ondata=parseFunctionFromText4(options.ondata);let ctx;if(typeof options?.ondata==="function")ctx=createSubprocess2(options,inputs);if(ctx)this.__node.graph.ALGORITHMS[ctx._id]=ctx;if(ctx)return ctx._id}return false},"runSubprocess":function runsubprocess2(data,_id){if(!this.__node.graph.ALGORITHMS)this.__node.graph.ALGORITHMS={};if(!_id)_id=Object.keys(this.__node.graph.ALGORITHMS)[0];if(!_id)return;let res=this.__node.graph.ALGORITHMS[_id].run(data);if(res!==void 0){if(Array.isArray(res)){let pass=[];res.forEach(r=>{if(r!==void 0){pass.push(r);this.__node.graph.setState({[_id]:r})}});if(pass.length>0){return pass}}else{this.__node.graph.setState({[_id]:res});return res}}}};var __defProp22=Object.defineProperty;var __defNormalProp=(obj,key,value2)=>key in obj?__defProp22(obj,key,{enumerable:true,configurable:true,writable:true,value:value2}):obj[key]=value2;var __publicField=(obj,key,value2)=>{__defNormalProp(obj,typeof key!=="symbol"?key+"":key,value2);return value2};var _Math2=class{constructor(){}static genSineWave(freq=20,peakAmp=1,nSec=1,fs4=512,freq2=0,peakAmp2=1){var sineWave=[];var t2=[];var increment=1/fs4;for(var ti2=0;ti2<nSec;ti2+=increment){var amplitude=Math.sin(2*Math.PI*freq*ti2)*peakAmp;amplitude+=Math.sin(2*Math.PI*freq2*ti2)*peakAmp2;sineWave.push(amplitude);t2.push(ti2)}return[t2,sineWave]}static getSineAmplitude(frequency=20,peakAmplitude=1,ti2=0,tOffset=0){return Math.sin(this.TWO_PI*frequency*ti2+tOffset)*peakAmplitude}static mean(arr){var sum=arr.reduce((prev,curr)=>curr+=prev);return sum/arr.length}static mode(arr){return arr.sort((a,b2)=>arr.filter(v22=>v22===a).length-arr.filter(v22=>v22===b2).length).pop()}static std(arr,mean2=void 0){let avg=mean2;if(!mean2)avg=this.mean(arr);let summed=0;for(let i=0;i<arr.length;i++){let subbed=arr[i]-avg;summed+=subbed*subbed}return Math.sqrt(summed/arr.length)}static relError(actual=[],forecast=[],abs=true){if(actual.length!==forecast.length)throw new Error("Input arrays of same length!");let i=actual.length;let d22=new Array(actual.length);for(let j3=0;j3<i;j3++){let dd=(actual[j3]-forecast[j3])/actual[j3];if(abs)dd=Math.abs(dd);d22[j3]=dd}return d22}static informationEntropy(probabilities=[]){let len=probabilities.length;let entropy=new Array(len);for(let i=0;i<len;i++){let ent=probabilities[i]*Math.log(probabilities[i]);if(isNaN(ent))ent=0;entropy[i]=ent}return entropy}static zscore(arr){let mean2=this.mean(arr);let std=this.std(arr,mean2);let z3=new Array().length(arr.length);for(let i=0;i<arr.length;i++){z3[i]=(arr[i]-mean2)/std}return z3}static variance(arr){var mean2=this.mean(arr);return arr.reduce((a,b2)=>a+(b2-mean2)**2,0)/arr.length}static dot(vec1,vec2){var dot=0;for(var i=0;i<vec1.length;i++){dot+=vec1[i]*vec2[i]}return dot}static cross3D(vec1,vec2){return[vec1[1]*vec2[2]-vec1[2]*vec2[1],vec1[2]*vec2[0]-vec1[0]*vec2[2],vec1[0]*vec2[1]-vec1[1]*vec2[0]]}static magnitude(vec){var sqrd=0;vec.forEach(c2=>{sqrd+=c2*c2});return Math.sqrt(sqrd)}static distance(point1,point2){var dsqrd=0;point1.forEach((c2,i)=>{dsqrd+=(point2[i]-c2)*(point2[i]-c2)});return Math.sqrt(dsqrd)}static midpoint(point1=[1,2,3],point2=[3,4,5]){return point1.map((c2,i)=>{return(c2+point2[i])*.5})}static normalize(vec){var norm=0;norm=this.magnitude(vec);var vecn=new Array(vec.length);vec.forEach((c2,i)=>{vecn[i]=c2*norm});return vecn}static normalizeSeries(arr=[],fromZero=true){let max=Math.max(...arr);let min=Math.min(...arr);if(fromZero==false){max=Math.max(max,Math.abs(min));min=0}if(max-min===0){min=0;if(max===0)max=1e-13}return arr.map(v22=>(v22-min)/(max-min))}static quadraticFormula(a,b2,c2){let bbmac4=Math.sqrt(b2*b2-4*a*c2);if(!isNaN(bbmac4))return["complex","complex"];let _a22=1/(2*a);if(bbmac4===0)return[b2*_a22];let nb=-b2;return[(nb+bbmac4)*_a22,(nb-bbmac4)*_a22]}static newtonsMethod(foo=x22=>{return Math.pow(x22,5)+x22*x22-x22-.2},start=0,end=1,precision=.01,attempts=10){let roots=[];for(let i=0;i<attempts;i++){let seedx=Math.random()*(end-start);let guess=foo(seedx);let guess2=foo(seedx+precision);let slope=(guess2-guess)/precision;let xn2=seedx+precision;while(Math.abs(slope)>precision){let step=-guess/slope2;let xn12=xn2+step;guess=guess2;guess2=foo(xn12);let slope2=(guess2-guess)/(xn12-xn2)}let idx;let f=roots.find((root,i2)=>{if(Math.abs(xn1-root)<precision){idx=i2;return true}});if(f)roots[idx]=(xn1+f)*.5;else roots.push(xn1)}return roots}static makeVec(point1,point2){var vec=[];point1.forEach((c2,i)=>{vec.push(point2[i]-c2)});return vec}static getBufferedValueByCoordinates(vb=new Array(300).fill(1),dims=[10,10,2],coordinate=[1,2,1],cardinal=void 0){let getIdx=(foundIdx=0,dimIdx=0)=>{if(dimIdx===dims.length)return foundIdx;if(dimIdx==0)foundIdx+=coordinate[dimIdx];else if(dims[dimIdx]==0)dimsAt0++;else{let reMul=(val=coordinate[dimIdx],di2=dimIdx-1)=>{val*=dims[di2];di2--;if(di2==0)return val;else return reMul(val,di2)};foundIdx+=reMul(coordinate[dimIdx]+1,dimIdx-1)}dimIdx++;return getIdx(foundIdx,dimIdx)};let found=getIdx();if(cardinal){if(coordinate[coordinate.length-1]===0){let lastnonzero=0;let idx=0;while(idx!==coordinate.length-1){if(coordinate[idx]!==0)lastnonzero=idx;idx++}return vb[found-lastnonzero+cardinal]}return vb[found-dims.length+cardinal]}else{if(coordinate[coordinate.length-1]===0){let lastnonzero=0;let idx=0;while(idx!==coordinate.length-1){if(coordinate[idx]!==0)lastnonzero=idx;idx++}return vb.slice(found-lastnonzero,found+1)}return vb.slice(found-dims.length,found+1)}}static forBufferedMat(vb=new Array(100).fill(1),dims=[10,10],asIndex=(v22,i,x22,y22)=>{return v22+x22+y22}){let coordinate=[];let idx=0;let recurseFor=(depth=0,nextDepth=depth+1)=>{let result=new Array(vb.length);for(let di2=0;di2<dims[depth];di2++){coordinate[depth]=di2;if(dims[nextDepth])recurseFor(nextDepth);else{result[idx]=asIndex(vb[idx],idx,...coordinate);idx++}}return result};let recurseForArrFuncs=(depth,nextDepth=depth+1)=>{let result=new Array(vb.length);for(let di2=0;di2<dims[depth];di2++){coordinate[depth]=di2;if(dims[nextDepth])recurseFor(nextDepth);else{for(let dj=0;dj<dims.length;dj++){result[idx]=asIndex[dj](vb[idx],idx,...coordinate);idx++}}}return result};if(typeof asIndex==="function"){return recurseFor()}else if(Array.isArray(asIndex)){return recurseForArrFuncs()}}static mapBufferedMat(buffer=new Array(100).fill(1),dimensions=[10,10],asIndex=(v22,idx,i,j3)=>{console.log(`value:${v22}, idx:${idx}, x:${i},y:${j3}`);return v22+i+j3}){let coordinate=new Array(dimensions.length).fill(0);const iterateCoordinate=(coord,idx=0)=>{if(coord[idx]>=dimensions[idx]){coord[idx]=0;idx++;if(idx===dimensions.length)return;iterateCoordinate(coord,idx)}else coord[idx]++};let result=new Array(buffer.length);let i=0;if(typeof asIndex==="function"){while(i<buffer.length){result[i]=asIndex(buffer[i],i,...coordinate);i+=dimensions.length;iterateCoordinate(coordinate)}}else if(Array.isArray(asIndex)){while(i<buffer.length){asIndex.forEach(func=>{result[i]=func(buffer[i],i,...coordinate);i++;iterateCoordinate(coordinate)})}}return result}static combinations(choices=["a","b","c"],vecsize=3){var result=[];if(vecsize<=0){result.push([])}else{_Math2.combinations(choices,vecsize-1).forEach(function(previousComb){choices.forEach(function(element){result.push([element].concat(previousComb))})})}return result}static generateCoordinateSpace(upperBounds=[10,10,10],lowerBounds=[-10,-10,-10],steps=[1,1,1],mutater=void 0){for(let i=0;i<upperBounds.length;i++){if(lowerBounds[i]>upperBounds[i]){let temp=upperBounds[i];upperBounds[i]=lowerBounds[i];lowerBounds[i]=temp}}let result=[];let copy=[...upperBounds];let lastindex=copy.length-1;result.push([...copy]);while(copy[0]>=lowerBounds[0]){let checkNextIndex=decrIdx2=>{if(copy[decrIdx2]<=lowerBounds[decrIdx2]){if(decrIdx2===0)return;copy[decrIdx2]=upperBounds[decrIdx2];decrIdx2--;if(decrIdx2<0)return;if(typeof steps[decrIdx2]=="function")copy[decrIdx2]-=steps[decrIdx2](copy[decrIdx2]);else copy[decrIdx2]-=steps[decrIdx2];checkNextIndex(decrIdx2)}};let decrIdx=lastindex;if(typeof steps[decrIdx]=="function")copy[decrIdx]-=steps[decrIdx](copy[decrIdx]);else copy[decrIdx]-=steps[decrIdx];result.push([...copy]);checkNextIndex(decrIdx);if(mutater)result[result.length-1]=mutater(result[result.length-1])}return result}static calcVectorField(coordinates=[[0,0],[0,1],[1,0],[1,1]],formula=(x22,y22)=>{return[x22*10,y22*10]}){return coordinates.map(vec=>formula(...vec))}static transpose(mat){return mat[0].map((_22,colIndex)=>mat.map(row=>row[colIndex]))}static matmul(a,b2){var aNumRows=a.length,aNumCols=a[0].length,bNumRows=b2.length,bNumCols=b2[0].length,m=new Array(aNumRows);for(var r=0;r<aNumRows;++r){m[r]=new Array(bNumCols);for(var c2=0;c2<bNumCols;++c2){m[r][c2]=0;for(var i=0;i<aNumCols;++i){m[r][c2]+=a[r][i]*b2[i][c2]}}}return m}static matscale(mat,scalar){let m=[];for(var i=0;i<mat.length;i++){m[i]=[];for(let j3=0;j3<mat[0].length;j3++){m[i][j3]=mat[i][j3]*scalar}}return m}static matadd(a,b2){let m=[];for(let i=0;i<a.length;i++){m[i]=[];for(var j3=0;j3<a[0].length;j3++){m[i][j3]=a[i][j3]+b2[i][j3]}}return m}static matsub(a,b2){let m=[];for(let i=0;i<a.length;i++){m[i]=[];for(var j3=0;j3<a[0].length;j3++){m[i][j3]=a[i][j3]-b2[i][j3]}}return m}static histogram(arr=[],binSize=1,nBins=void 0){let copy=[...arr];copy.sort(function(a,b2){return a-b2});let binStart=Math.min(...copy);if(typeof nBins==="number"){let binEnd=Math.max(...copy);binSize=Math.abs((binEnd-binStart)/(nBins-1))}let j3=binStart;let binx=[];let biny=[];for(let i=0;i<copy.length;i++){let binidx=binSize*j3;if(copy[i]>binStart+binidx){j3++;binidx+=binSize;let binmin=binStart+binidx;let binmid=binmin+binidx*.5;binx.push(binmid);biny.push(0)}biny[biny.length-1]++}return[binx,biny]}static normalDistribution(samples=[],normalize=true,cutoff=1e-4){let m=this.mean(samples);let vari=this.variance(samples);let nSamples=samples.length;let probabilities=[];let denom=1/(this.TWO_PI*vari);let _variance=1/vari;let sum=0;for(let i=0;i<nSamples;i++){let px=Math.exp(-.5*Math.pow((samples[i]-m)*_variance,2))*denom;if(px<cutoff)px=0;probabilities.push(px);sum+=px}if(normalize){let _sum=1/sum;probabilities=probabilities.map(x22=>x22*_sum)}return probabilities}static expectedValue(samples=[],probabilities=this.normalDistribution(samples)){return samples.reduce((sum,item,idx)=>sum+item*probabilities[idx])}static originMoment(samples=[],probabilities=this.normalDistribution(samples),order=1){return samples.reduce((sum,item,idx)=>sum+Math.pow(item,order)*probabilities[idx])}static centralMoment(samples=[],probabilities=this.normalDistribution(samples),order=1){let m=this.mean(samples);return samples.reduce((sum,item,idx)=>sum+Math.pow(item-m,order)*probabilities[idx]/samples.length)}static linearDiscriminantAnalysis(samples=[],classifier=[]){let mean2=this.mean(samples);let meank=this.mean(classifier);let covariance=this.cov1d(samples,classifier);let probs=this.normalDistribution(samples);let dk=[];for(let i=0;i<samples.length;i++){dk.push(x[i]*covariance*meank-.5*mean2*covariance*meank+Math.log10(probs[i]))}return dk}static conv1D(arr=[],kern=[1/3,1/3,1/3],pad=Math.floor(kern.length*.5)){let result=[];let _n2=1/kern.length;if(pad>0){let pads=new Array(pad).fill(0);arr=[...pads,...arr,...pads]}let start=Math.floor(kern.length*.5);let end=arr.length-kern.length+start;for(let i=start;i<end;i++){let acc=0;for(let j3=0;j3<kern.length;j3++){acc+=arr[i-start]*kern[j3]}result.push(acc*_n2)}return result}static conv2D(mat=[[],[],[]],kern=[[],[],[]],pad=0){let result=new Array(mat.length-Math.ceil(kern.length*.5)).fill([]);let mat_t;let kern_t=_Math2.transpose(kern_t);if(pad>0){let pads=new Array(pad).fill(0);mat_t=_Math2.transpose(mat);for(let i2=0;i2<mat_t.length;i2++){mat_t[i2]=[...pads,...mat_t[i2],...pads]}mat=_Math2.transpose(mat_t);for(let j3=0;j3<mat.length;j3++){mat[j3]=[...pads,...mat[j3],...pads]}}let startr=Math.floor(kern[0].length*.5);let startl=Math.floor(kern_t[0].length*.5);let endr=mat[0].length-kern[0].length+startr;let endl=mat_t[0].length-kern_t[0].length+startl;let _n2=1/(kern[0].length*kern_t[0].length);let iters=endr*endl;let i=startr;let x22;let y22=startl;while(i<iters){let acc=0;x22=i%mat[0].length;if(x22===0){y22++}for(let j3=0;j3<kern[0].length;j3++){for(let k2=0;k2<kern_t[0].length;j3++){acc+=mat[y22-startl+k2][x22-startr+j3]*kern[k2][j3]}result[y22].push(acc*_n2)}i++}return result}static cov2d(mat){var mattransposed=this.transpose(mat);var matproducts=[];var rowmeans=[];var colmeans=[];mat.forEach((row,idx)=>{rowmeans.push(this.mean(row))});mattransposed.forEach((col,idx)=>{colmeans.push(this.mean(col))});mat.forEach((row,idx)=>{matproducts.push([]);for(var col=0;col<row.length;col++){matproducts[idx].push((mat[idx][col]-rowmeans[idx])*(mat[idx][col]-colmeans[col])/(row.length-1))}});var matproductstransposed=this.transpose(matproducts);var aNumRows=matproducts.length,aNumCols=matproducts[0].length,bNumRows=matproductstransposed.length,bNumCols=matproductstransposed[0].length,m=new Array(aNumRows);for(var r=0;r<aNumRows;++r){m[r]=new Array(bNumCols);for(var c2=0;c2<bNumCols;++c2){m[r][c2]=0;for(var i=0;i<aNumCols;++i){m[r][c2]+=matproducts[r][i]*matproductstransposed[i][c2]/(mat[0].length-1)}}}return m}static cov1d(arr1=[],arr2=[]){return this.cov2d([arr1,arr2])}static cov3d(x22=[],y22=[],z3=[]){return[[this.cov1d(x22,x22),this.cov1d(x22,y22),this.cov1d(x22,z3)],[this.cov1d(y22,x22),this.cov1d(y22,y22),this.cov1d(y22,z3)],[this.cov1d(z3,x22),this.cov1d(z3,y22),this.cov1d(z3,z3)]]}static covNd(dimensionalData=[]){let covariance=[];dimensionalData.forEach((arr,i)=>{covariance.push([]);dimensionalData.forEach((arr2,j3)=>{covariance[i].push(this.cov1d(arr,arr2))})})}static eigens2x2(mat=[[1,2],[3,4]]){let det=mat[0][0]*mat[1][1]-mat[0][1]*mat[1][0];let mean2=(mat[0][0]+mat[1][1])*.5;let sqrt=Math.sqrt(mean2*mean2-det);let eig1=mean2+sqrt;let eig2=mean2-sqrt;return[eig1,eig2]}static eigenvectors2x2(mat=[[1,2],[3,4]],eigens=[1,2]){let v1=[-mat[0][1],mat[0][0]-eigens[0]];if(v1[0]===0&&v1[1]===0){v1[0]=mat[1][1]-eigens[0];v1[1]=-mat[1][0]}let v22=[-mat[0][1],mat[0][0]-eigens[1]];if(v22[0]===0&&v22[1]===0){v22[0]=mat[1][1]-eigens[1];v22[1]=-mat[1][0]}return[v1,v22]}static fastpca2d(xarr,yarr){let cov1d=this.cov1d(xarr,yarr);let eigs=this.eigens2x2(cov1d);if(eigs[1]>eigs[0])eigs.reverse();let evs=this.eigenvectors2x2(cov1d,eigs);console.log(eigs,evs);return[eigs,evs]}static crosscorrelation(arr1,arr2){var arr2buf=[...arr2,...Array(arr2.length).fill(0)];var mean12=this.mean(arr1);var mean2=this.mean(arr2);var arr1Est=arr1.reduce((sum,item)=>sum+=Math.pow(item-mean12,2));arr1Est=Math.sqrt(Math.abs(arr1Est));var arr2Est2=arr2.reduce((sum,item)=>sum+=Math.pow(item-mean12,2));arr2Est2=Math.sqrt(Math.abs(arr2Est2));let denom=arr1Est*arr2Est2;if(denom===0)denom=1e-26;var _arrEstsMul=1/denom;var correlations=new Array(arr1.length).fill(0);for(var delay=0;delay<arr1.length;delay++){var r=arr1.reduce((sum,item,i)=>sum+=(item-mean12)*(arr2buf[delay+i]-mean2));correlations[delay]=r*_arrEstsMul}return correlations}static autocorrelation(arr1){var delaybuf=[...arr1,...Array(arr1.length).fill(0)];var mean12=this.mean(arr1);var arr1Est=arr1.reduce((sum,item)=>sum+=Math.pow(item-mean12,2));arr1Est=Math.sqrt(Math.abs(arr1Est));let denom=arr1Est*arr2Est;if(denom===0)denom=1e-26;var _arr1estsqrd=1/denom;var correlations=new Array(arr1.length).fill(0);for(var delay=0;delay<arr1.length;delay++){var r=arr1.reduce((sum,item,i)=>sum+=(item-mean12)*(delaybuf[delay+i]-mean12));correlations[delay]=r*_arr1estsqrd}return correlations}static autocorrelation2dNormalized(mat2d2){let result=[];for(let y22=0;y22<mat2d2.length;y22++){result.push([]);for(let x22=0;x22<mat2d2[y22].length;x22++){let G3=0;let _G=0;for(let b2=0;b2<mat2d2.length;b2++){for(let a=0;a<mat2d2[b2].length;a++){G3+=mat2d2[y22][x22]*mat2d2[mat2d2.length-1-b2][mat2d2[y22].length-1-a];_G+=mat2d2[y22][x22]*mat2d2[mat2d2.length-1][mat2d2[y22].length-1]}}result[y22][x22]=G3/_G-1}}return result}static crosscorrelation2d(mat2d1,mat2d2){let result=[];for(let y22=0;y22<mat2d1.length;y22++){result.push([]);for(let x22=0;x22<mat2d1[y22].length;x22++){let G3=0;for(let b2=0;b2<mat2d2.length;b2++){for(let a=0;a<mat2d2[b2].length;a++){G3+=mat2d1[y22][x22]*mat2d2[mat2d2.length-1-b2][mat2d2[y22].length-1-a]}}result[y22][x22]=G3}}return result}static crosscorrelation2dNormalized(mat2d1,mat2d2){let result=[];for(let y22=0;y22<mat2d1.length;y22++){result.push([]);for(let x22=0;x22<mat2d1[y22].length;x22++){let G3=0;let _G=0;for(let b2=0;b2<mat2d2.length;b2++){for(let a=0;a<mat2d2[b2].length;a++){G3+=mat2d1[y22][x22]*mat2d2[mat2d.length-1-b2][mat2d2[y22].length-1-a];_G+=mat2d1[y22][x22]*mat2d2[mat2d2.length-1][mat2d2[y22].length-1]}}result[y22][x22]=G3/_G-1}}return result}static correlograms(dat=[[],[]]){var correlograms=[];dat.forEach((row1,i)=>{dat.forEach((row2,j3)=>{if(j3>=i){correlograms.push(_Math2.crosscorrelation(row1,row2))}})});return correlograms}static dft(sineWave=[]){var TWOPI=2*3.141592653589793;var real=[];var imag=[];var mags=[];for(var k2=0;k2<sineWave.length;k2++){real.push(0);imag.push(0);for(var j3=0;j3<sineWave.length;j3++){var shared=TWOPI*k2*j3/sineWave.length;real[k2]=real[k2]+sineWave[j3]*Math.cos(shared);imag[k2]=imag[k2]-sineWave[j3]*Math.sin(shared)}mags.push(Math.sqrt(real[k2]*real[k2]+imag[k2]*imag[k2]))}function orderMagnitudes(unorderedMags){return[...unorderedMags.slice(Math.ceil(unorderedMags.length*.5),unorderedMags.length),...unorderedMags.slice(0,Math.ceil(unorderedMags.length*.5))]}mags=orderMagnitudes(mags);let halflen=mags.length*.5;let freqs=mags.map((m,i)=>{return i-halflen});return{real,imag,freqs,mags}}static sma(arr=[],window2){var smaArr=[];for(var i=0;i<arr.length;i++){if(i==0){smaArr.push(arr[0])}else if(i<window2){var arrslice=arr.slice(0,i+1);smaArr.push(arrslice.reduce((previous,current)=>current+=previous)/(i+1))}else{var arrslice=arr.slice(i-window2,i);smaArr.push(arrslice.reduce((previous,current)=>current+=previous)/window2)}}return smaArr}static sum(arr=[]){if(arr.length>0){var sum=arr.reduce((prev,curr)=>curr+=prev);return sum}else{return 0}}static reduceArrByFactor(arr,factor=2){let x22=arr.filter((element,index)=>{return index%factor===0});return x22}static makeArr(startValue,stopValue,nSteps){var arr=[];var step=(stopValue-startValue)/(nSteps-1);for(var i=0;i<nSteps;i++){arr.push(startValue+step*i)}return arr}static autoscale(array,stackedLines=1,stackPosition=0,centerZero=false){if(array?.length===0)return array;let max=Math.max(...array);let min=Math.min(...array);let _lines=1/stackedLines;let scalar;if(centerZero){let absmax=Math.max(Math.abs(min),Math.abs(max));scalar=_lines/absmax;return array.map(y22=>y22*scalar+(_lines*(stackPosition+1)*2-1-_lines))}else{scalar=_lines/(max-min);return array.map(y22=>2*((y22-min)*scalar-1/(2*stackedLines))+(_lines*(stackPosition+1)*2-1-_lines))}}static absmax(array){return Math.max(Math.abs(Math.min(...array)),Math.max(...array))}static downsample(array,fitCount,scalar=1){if(array.length>fitCount){let output=new Array(fitCount);let incr=array.length/fitCount;let lastIdx=array.length-1;let last=0;let counter=0;for(let i=incr;i<array.length;i+=incr){let rounded=Math.round(i);if(rounded>lastIdx)rounded=lastIdx;for(let j3=last;j3<rounded;j3++){output[counter]+=array[j3]}output[counter]/=(rounded-last)*scalar;counter++;last=rounded}return output}else return array}static interpolateArray(data,fitCount,scalar=1){var linearInterpolate=function(before2,after2,atPoint2){return(before2+(after2-before2)*atPoint2)*scalar};var newData=new Array;var springFactor=(data.length-1)/(fitCount-1);newData[0]=data[0];for(var i=1;i<fitCount-1;i++){var tmp=i*springFactor;var before=Math.floor(tmp);var after=Math.ceil(tmp);var atPoint=tmp-before;newData[i]=linearInterpolate(data[before],data[after],atPoint)}newData[fitCount-1]=data[data.length-1];return newData}static isExtrema(arr,critical="peak"){let ref=[...arr];if(ref.length%2===0)ref.pop();if(arr.length>1){let pass=true;for(let i=0;i<ref.length;i++){let val=ref[i];if(critical==="peak"){if(i<Math.floor(ref.length*.5)&&val>=ref[Math.floor(ref.length*.5)]){pass=false;break}else if(i>Math.floor(ref.length*.5)&&val>=ref[Math.floor(ref.length*.5)]){pass=false;break}}else if(critical==="valley"){if(i<Math.floor(ref.length*.5)&&val<=ref[Math.floor(ref.length*.5)]){pass=false;break}else if(i>Math.floor(ref.length*.5)&&val<=ref[Math.floor(ref.length*.5)]){pass=false;break}}else{if(i<Math.floor(ref.length*.5)&&val<=ref[Math.floor(ref.length*.5)]){pass=false;break}else if(i>Math.floor(ref.length*.5)&&val<=ref[Math.floor(ref.length*.5)]){pass=false;break}}}if(critical!=="peak"&&critical!=="valley"&&pass===false){pass=true;for(let i=0;i<ref.length;i++){let val=ref[i];if(i<Math.floor(ref.length*.5)&&val>=ref[Math.floor(ref.length*.5)]){pass=false;break}else if(i>Math.floor(ref.length*.5)&&val>=ref[Math.floor(ref.length*.5)]){pass=false;break}}}return pass}else return void 0}static isCriticalPoint(arr,critical="peak"){let ref=[...arr];if(ref.length%2===0)ref.pop();if(arr.length>1){let pass=true;for(let i=0;i<ref.length;i++){let val=ref[i];if(critical==="peak"){if(i<ref.length*.5&&val<=0){pass=false;break}else if(i>ref.length*.5&&val>0){pass=false;break}}else if(critical==="valley"){if(i<ref.length*.5&&val>=0){pass=false;break}else if(i>ref.length*.5&&val<0){pass=false;break}}else{if(i<ref.length*.5&&val>=0){pass=false;break}else if(i>ref.length*.5&&val<0){pass=false;break}}}if(critical!=="peak"&&critical!=="valley"&&pass===false){pass=true;for(let i=0;i<ref.length;i++){let val=ref[i];if(i<ref.length*.5&&val<=0){pass=false;break}else if(i>ref.length*.5&&val>0){pass=false;break}}}return pass}else return void 0}static getPeakThreshold(arr,peakIndices,thresholdVar){let threshold;let filtered=arr.filter((o2,i)=>{if(peakIndices.indexOf(i)>-1)return true});if(thresholdVar===0){threshold=this.mean(filtered)}else threshold=(thresholdVar+this.mean(filtered))*.5;return threshold}static column(mat,x22){let col=new Array(mat.length).fill(0).map(()=>new Array(1).fill(0));for(let i=0;i<mat.length;i++){col[i][0]=mat[i][x22]}return col}static flatten_vector(v22){let v_new=[];for(let i=0;i<v22.length;i++){v_new[i]=v22[i][0]}return v_new}static squared_difference(v1,v22){let sum=0;for(let i=0;i<v1.length;i++){sum=sum+Math.pow(v1[i]-v22[i],2)}return sum}static shift_deflate(mat,eigenvalue,eigenvector){let len=Math.sqrt(this.matmul(this.transpose(eigenvector),eigenvector));let U2=this.matscale(eigenvector,1/len);let delta=this.matscale(this.matmul(U2,this.transpose(U2)),eigenvalue);let M_new=this.matsub(mat,delta);return M_new}static eigenvalue_of_vector(mat,eigenvector){ev=this.matmul(this.matmul(this.transpose(eigenvector),mat),eigenvector);return ev}static power_iteration(mat,tolerance=1e-5,max_iterations=1e3){let rank=mat.length;let eigenvector=new Array(rank).fill(0).map(()=>new Array(1).fill(Math.sqrt(rank)));let eigenvalue=this.eigenvalue_of_vector(mat,eigenvector);let epsilon=1;let iter=0;while(epsilon>tolerance&&iter<max_iterations){let old_eigenvalue=JSON.parse(JSON.stringify(eigenvalue));let Mv=this.matmul(mat,eigenvector);eigenvector=this.normalize(Mv);eigenvalue=this.eigenvalue_of_vector(mat,eigenvector);epsilon=Math.abs(eigenvalue-old_eigenvalue);iter++};return[eigenvalue,eigenvector]}static eigens(mat,tolerance=1e-4,max_iterations=1e3){let eigenvalues=[];let eigenvectors=[];for(let i=0;i<mat.length;i++){let result=this.power_iteration(mat,tolerance,max_iterations);let eigenvalue=result[0];let eigenvector=result[1];eigenvalues[i]=eigenvalue;eigenvectors[i]=this.flatten_vector(eigenvector);mat=this.shift_deflate(mat,eigenvalue,eigenvector)}return[eigenvalues,eigenvectors]}static pca(mat,tolerance=1e-5){let dims=mat.length;let t2=new Array(dims);let p=new Array(dims);let mat_t=this.transpose(mat);t2[0]=this.column(mat,0);let epsilon=1;let iter=0;while(espilon>tolerance){iter++;p[0]=this.matmul(mat_t,t2[0]);let tp=this.matmul(this.transpose(t2[0]),t2[0]);p[0]=this.matscale(p[0],1/tp);let p_length=Math.sqrt(this.matmul(this.transpose(p[0]),p[0]));p[0]=this.matscale(p[0],1/p_length);let t_new=this.matmul(mat,p[0]);let pp=this.matmul(this.transpose(p[0]),p[0]);t_new=this.matscale(t_new,1/pp);epsilon=this.squared_difference(t2[0],t_new);t2[0]=JSON.parse(JSON.stringify(t_new))}let components=this.matmul(this.transpose(t2[0]),t2[0]);return components}static circularBuffer(arr,newEntries){if(Array.isArray(newEntries)){if(newEntries.length<arr.length){let slice=arr.slice(newEntries.length);let len=arr.length;arr.splice(0,len,...slice,...newEntries)}else if(newEntries.length>arr.length){let len=arr.length;arr.splice(0,len,newEntries.slice(len-newEntries.length))}else{arr.splice(0,arr.length,...newEntries)}}else{arr.push(newEntries);arr.shift()}return arr}static HSLToRGB(h,s,l,scalar=255){s/=100;l/=100;let c2=(1-Math.abs(2*l-1))*s,x22=c2*(1-Math.abs(h/60%2-1)),m=l-c2/2,r=0,g3=0,b2=0;if(0<=h&&h<60){r=c2;g3=x22;b2=0}else if(60<=h&&h<120){r=x22;g3=c2;b2=0}else if(120<=h&&h<180){r=0;g3=c2;b2=x22}else if(180<=h&&h<240){r=0;g3=x22;b2=c2}else if(240<=h&&h<300){r=x22;g3=0;b2=c2}else if(300<=h&&h<360){r=c2;g3=0;b2=x22}r=(r+m)*scalar;g3=(g3+m)*scalar;b2=(b2+m)*scalar;return[r,g3,b2]}static p300(event_timestamps=[],raw_signal=[],signal_timestamps=[],sps11=256){let smoothingstep=Math.floor(sps11/10);let smoothed=this.sma(raw_signal,smoothingstep);let peaks=this.peakDetect(smoothed,"peak",smoothingstep);let mean2=this.mean(smoothed);let std=this.std(smoothed,mean2);let p_idx=0;let candidates=[];if(peaks.length>0){event_timestamps.forEach((t2,j3)=>{while(signal_timestamps[peaks[p_idx]]<t2+200){p_idx++;if(!peaks[p_idx])break}let tempi=0;let tempcandidates=[];while(signal_timestamps[peaks[p_idx+tempi]]<t2+600){tempcandidates.push(p_idx+tempi);tempi++;if(!peaks[p_idx+tempi])break}if(tempcandidates.length>1){let peakvals=[];tempcandidates.forEach(tc3=>{peakvals.push(smoothed[peaks[tc3]])});let max=Math.max(...peakvals);let maxi=tempcandidates[peakvals.indexOf(max)];candidates.push({event_timestamp:t2,event_index:j3,peak_timestamp:signal_timestamps[[peaks[maxi]]],signal_index:[peaks[maxi]],signal_amplitude:raw_signal[[peaks[maxi]]],zscore:(smoothed[peaks[maxi]]-mean2)/std})}else if(tempcandidates.length===1)candidates.push({event_timestamp:t2,event_index:j3,peak_timestamp:signal_timestamps[peaks[tempcandidates[0]]],signal_index:peaks[tempcandidates[0]],signal_amplitude:raw_signal[[peaks[tempcandidates[0]]]],zscore:(smoothed[peaks[tempcandidates[0]]]-mean2)/std})})}return candidates}};var Math2=_Math2;__publicField(Math2,"TWO_PI",Math.PI*2);__publicField(Math2,"C",299792458);__publicField(Math2,"G",66743e-15);__publicField(Math2,"h",662607015e-42);__publicField(Math2,"R",8314.32);__publicField(Math2,"Ra",287);__publicField(Math2,"H",69.3);__publicField(Math2,"kbar",1054571817e-43);__publicField(Math2,"kB",1380649e-29);__publicField(Math2,"ke",89875517923e-1);__publicField(Math2,"me",91093837015e-41);__publicField(Math2,"mp",167262192369e-38);__publicField(Math2,"mn",167492749804e-38);__publicField(Math2,"P0",101325);__publicField(Math2,"T0",288.15);__publicField(Math2,"p0",1.225);__publicField(Math2,"Na",60220978e16);__publicField(Math2,"y",1.405);__publicField(Math2,"M0",28.96643);__publicField(Math2,"g0",9.80665);__publicField(Math2,"Re",6378100);__publicField(Math2,"B",1458e-9);__publicField(Math2,"S",110.4);__publicField(Math2,"Sigma",365e-12);__publicField(Math2,"imgkernels",{edgeDetection:[[-1,-1,-1],[-1,8,-1],[-1,-1,-1]],boxBlur:[[1/9,1/9,1/9],[1/9,1/9,1/9],[1/9,1/9,1/9]],sobelLeft:[[1,0,-1],[2,0,-2],[1,0,-1]],sobelRight:[[-1,0,1],[-2,0,2],[-1,0,1]],sobelTop:[[1,2,1],[0,0,0],[-1,-2,-1]],sobelBottom:[[-1,2,1],[0,0,0],[1,2,1]],identity:[[0,0,0],[0,1,0],[0,0,0]],gaussian3x3:[[1,2,1],[2,4,2],[1,2,1]],guassian7x7:[[0,0,0,5,0,0,0],[0,5,18,32,18,5,0],[0,18,64,100,64,18,0],[5,32,100,100,100,32,5],[0,18,64,100,64,18,0],[0,5,18,32,18,5,0],[0,0,0,5,0,0,0]],emboss:[[-2,-1,0],[-1,1,1],[0,1,2]],sharpen:[[0,-1,0],[-1,5,-1],[0,-1,0]]});__publicField(Math2,"integral",(func=x22=>{let y22=x22;return y22},range=[],stepx=.01)=>{let area=0;for(let i=range[0];i<range[1];i+=stepx){let y22=func(i);area+=y22*stepx}return area});__publicField(Math2,"dintegral",(func=(x22,y22)=>{let z3=x22+y22;return z3},range=[[],[]],stepx=.01,stepy=stepx)=>{let volume=0;for(let i=range[0][0]+stepx;i<range[0][1];i+=stepx){for(let j3=range[1][0]+stepy;j3<range[1][1];j3+=stepy){let z3=func(i,j3);volume+=z3*stepx*stepy}}return volume});__publicField(Math2,"tintegral",(func=(x22,y22,z3)=>{let w22=x22+y22+z3;return w22},range=[[],[],[]],stepx=.01,stepy=stepx,stepz=stepx)=>{let volume=0;for(let i=range[0][0]+stepx;i<range[0][1];i+=stepx){for(let j3=range[1][0]+stepy;j3<range[1][1];j3+=stepy){for(let k2=range[2][0]+stepz;k2<range[2][1];k2+=stepz){let w22=func(i,j3,k2);volume+=w22*stepx*stepy*stepz}}}return volume});__publicField(Math2,"pintegral",(func=x22=>{let y22=x22;return y22},range=[],stepx=.01)=>{let length=0;let y0=void 0;let yi2=void 0;for(let i=range[0];i<range[1];i+=stepx){y0=yi2;yi2=func(i);if(y0)length+=_Math2.distance([0,y0],[stepx,yi2])}return length});__publicField(Math2,"meshgrid",_Math2.generateCoordinateSpace);__publicField(Math2,"autocorrelation2d",mat2d2=>{let result=[];for(let y22=0;y22<mat2d2.length;y22++){result.push([]);for(let x22=0;x22<mat2d2[y22].length;x22++){let G3=0;for(let b2=0;b2<mat2d2.length;b2++){for(let a=0;a<mat2d2[b2].length;a++){G3+=mat2d2[y22][x22]*mat2d2[mat2d2.length-1-b2][mat2d2[y22].length-1-a]}}result[y22][x22]=G3}}return result});__publicField(Math2,"lerp",_Math2.makeArr);__publicField(Math2,"upsample",_Math2.interpolateArray);__publicField(Math2,"lerp",(v0,v1,fit,floor=true)=>{function lerp2(v02,v12,t2){return(1-t2)*v02+t2*v12}function interpolerp2(v02,v12,fit2,floor2=true){if(fit2<=2)return[v02,v12];let a=1/fit2;let result=new Array(fit2);result[0]=v02;for(let i=1;i<=fit2;i++){result[i]=lerp2(v02,v12,a*i);if(floor2)result[i]=Math.floor(result[i])}return result}});__publicField(Math2,"peakDetect",(smoothedArray,type="peak",window2=49)=>{let mid=Math.floor(window2*.5);let peaks=[];for(let i=0;i<smoothedArray.length-window2;i++){let isPeak=_Math2.isExtrema(smoothedArray.slice(i,i+window2),type);if(isPeak){peaks.push(i+mid-1)}}return peaks});Object.assign(Math,Math2);var accel_gyro={structs:{accelConstant:1/8192,gyroConstant:1/65.5,gyroXAngle:0,gyroYAngle:0,gyroZAngle:0,px:0,py:0,pz:0,sps:100,lastAccelTime:Date.now(),lastGyroTime:Date.now()},ondata:(ctx,data)=>{if(!("ax"in data)&&!("gx"in data))return void 0;if(!data.timestamp){if(data.ax&&Array.isArray(data.ax)||data.gx&&Array.isArray(data.gx)){let len=data.ax?data.ax.length:data.gx.length;let now=Date.now();let toInterp=[now-len*ctx.sps*1e3,now];data.timestamp=Math2.upsample(toInterp,len)}else{data.timestamp=Date.now()}}let result;if(data.ax){let apass=(timestamp,ax,ay,az)=>{ax=ax*ctx.accelConstant;ay=ay*ctx.accelConstant;az=az*ctx.accelConstant;const accelXAngle=Math.atan(ay/Math.sqrt(ax*ax)+az*az*180/Math.PI)+ctx.accelXError;const accelYAngle=Math.atan(-ax/Math.sqrt(ay*ay)+az*az*180/Math.PI)+ctx.accelYError;return{ax,ay,az,roll:accelXAngle,pitch:accelYAngle}};if(Array.isArray(data.timestamp)){result=data.timestamp.map((v22,i)=>{return apass(v22,data.ax[i],data.ay[i],data.az[i])})}else result=apass(data.timestamp,data.ax,data.ay,data.az)}if(data.gx){let gpass=(timestamp,gx,gy,gz)=>{const elapsed=timestamp-ctx.lastGyroTime;ctx.lastGyroTime=timestamp;gx=gx*ctx.gyroConstant+ctx.gyroXError;gy=gy*ctx.gyroConstant+ctx.gyroYError;gz=gz*ctx.gyroConstant+ctx.gyroZError;ctx.gyroXAngle+=gx*elapsed;ctx.gyroYAngle+=gy*elapsed;ctx.gyroZAngle+=gz*elapsed;return{gx,gy,gz,roll:ctx.gyroXAngle,pitch:ctx.gyroYAngle,yaw:ctx.gyroZAngle}};let res;if(Array.isArray(data.timestamp)){res=data.timestamp.map((v22,i)=>{if(result){let r=gpass(v22,data.gx[i],data.gy[i],data.gz[i]);result.roll=result.roll*.04+r.roll*.96;result.pitch=result.pitch*.04+r.pitch*.96;result.yaw=res.yaw}else return gpass(v22,data.gx[i],data.gy[i],data.gz[i])});if(!result)result=res}else{res=gpass(data.timestamp,data.gx,data.gy,data.gz);if(result){result.roll=result.roll*.04+res.roll*.96;result.pitch=result.pitch*.04+res.pitch*.96;result.yaw=res.yaw}else result=res}}else if(ctx.gyroXAngle||ctx.gyroYAngle||ctx.gyroZAngle){result.roll=result.roll*.04+ctx.gyroXAngle*.96;result.pitch=result.pitch*.04+ctx.gyroYAngle*.96;result.yaw=ctx.gyroXAngle}if(result.ax){const setPositionOffset=(timestamp,result2)=>{const elapsed=timestamp-ctx.lastAccelTime;ctx.lastAccelTime=timestamp;ctx.px+=result2.ax*elapsed*elapsed*Math.cos(ctx.pitch*Math.PI*.005555555555);ctx.py+=result2.ay*elapsed*elapsed*Math.cos(ctx.roll*Math.PI*.005555555555);ctx.pz+=result2.az*elapsed*elapsed*Math.sin(ctx.pitch*Math.PI*.005555555555);result2.px=ctx.px;result2.py=ctx.py;result2.pz=ctx.pz;return result2};if(Array.isArray(data.timestamp)){data.timestamp.map((timestamp,i)=>{setPositionOffset(timestamp,result)})}else{setPositionOffset(data.timestamp,result)}}return result}};var Biquad2=class{constructor(type,freq,sps11,Q2=1/Math.sqrt(2),dbGain=0){this.a0=0;this.a1=0;this.a2=0;this.b0=0;this.b1=0;this.b2=0;this.x1=0;this.x2=0;this.y1=0;this.y2=0;let types=["lowpass","highpass","bandpass","notch","peak","lowshelf","highshelf"];if(types.indexOf(type)<0){console.error("Valid types: \'lowpass\',\'highpass\',\'bandpass\',\'notch\',\'peak\',\'lowshelf\',\'highshelf\'");return}this.type=type;this.freq=freq;this.sps=sps11;this.Q=Q2;this.dbGain=dbGain;let A22=Math.pow(10,dbGain/40);let omega=2*Math.PI*freq/sps11;let sn3=Math.sin(omega);let cs2=Math.cos(omega);let alpha=sn3/(2*Q2);let beta=Math.sqrt(A22+A22);this[type](A22,sn3,cs2,alpha,beta);this.b0/=this.a0;this.b1/=this.a0;this.b2/=this.a0;this.a1/=this.a0;this.a2/=this.a0}lowpass(A22,sn3,cs2,alpha,beta){this.b0=(1-cs2)*.5;this.b1=1-cs2;this.b2=(1-cs2)*.5;this.a0=1+alpha;this.a1=-2*cs2;this.a2=1-alpha}highpass(A22,sn3,cs2,alpha,beta){this.b0=(1+cs2)*.5;this.b1=-(1+cs2);this.b2=(1+cs2)*.5;this.a0=1+alpha;this.a1=-2*cs2;this.a2=1-alpha}bandpass(A22,sn3,cs2,alpha,beta){this.b0=alpha;this.b1=0;this.b2=-alpha;this.a0=1+alpha;this.a1=-2*cs2;this.a2=1-alpha}notch(A22,sn3,cs2,alpha,beta){this.b0=1;this.b1=-2*cs2;this.b2=1;this.a0=1+alpha;this.a1=-2*cs2;this.a2=1-alpha}peak(A22,sn3,cs2,alpha,beta){this.b0=1+alpha*A22;this.b1=-2*cs2;this.b2=1-alpha*A22;this.a0=1+alpha/A22;this.a1=-2*cs2;this.a2=1-alpha/A22}lowshelf(A22,sn3,cs2,alpha,beta){this.b0=A22*(A22+1-(A22-1)*cs2+beta*sn3);this.b1=2*A22*(A22-1-(A22+1)*cs2);this.b2=A22*(A22+1-(A22-1)*cs2-beta*sn3);this.a0=A22+1+(A22+1)*cs2+beta*sn3;this.a1=2*(A22-1+(A22+1)*cs2);this.a2=A22+1+(A22-1)*cs2-beta*sn3}highshelf(A22,sn3,cs2,alpha,beta){this.b0=A22*(A22+1+(A22-1)*cs2+beta*sn3);this.b1=2*A22*(A22-1+(A22+1)*cs2);this.b2=A22*(A22+1-(A22-1)*cs2-beta*sn3);this.a0=A22+1-(A22+1)*cs2-beta*sn3;this.a1=2*(A22-1-(A22+1)*cs2);this.a2=A22+1-(A22-1)*cs2-beta*sn3}applyFilter(signal_step){let y22=this.b0*signal_step+this.b1*this.x1+this.b2*this.x2-this.a1*this.y1-this.a2*this.y2;this.x2=this.x1;this.x1=signal_step;this.y2=this.y1;this.y1=y22;return y22}zResult(freq){try{let phi=Math.pow(Math.sin(Math.PI*freq*2/(2*this.sps)),2);let result=(Math.pow(this.b0+this.b1+this.b2,2)-4*(this.b0*this.b1+4*this.b0*this.b2+this.b1*this.b2)*phi+16*this.b0*this.b2*phi*phi)/(Math.pow(1+this.a1+this.a2,2)-4*(this.a1+4*this.a2+this.a1*this.a2)*phi+16*this.a2*phi*phi);return result}catch(err){return-200}}static calcCenterFrequency(freqStart,freqEnd){return(freqStart+freqEnd)/2}static calcBandwidth(freqStart,freqEnd){return freqEnd-this.calcCenterFrequency(freqStart,freqEnd)}static calcBandpassQ(frequency,bandwidth,resonance=Math.pow(10,Math.floor(Math.log10(frequency)))){let Q2=resonance*Math.sqrt((frequency-bandwidth)*(frequency+bandwidth))/(2*bandwidth);return Q2}static calcNotchQ(frequency,bandwidth,resonance=Math.pow(10,Math.floor(Math.log10(frequency)))){let Q2=resonance*frequency*bandwidth/Math.sqrt((frequency-bandwidth)*(frequency+bandwidth));return Q2}};var beat_detect={structs:{refdata:[],lowpass:void 0,smoothed:[],timestamp:[],peaks:[],valleys:[],peak_distances:[],valley_distances:[],beats:[],lastPeak:0,lastValley:0,sps:100,maxFreq:4,limit:10},oncreate:context=>{if(!context.lowpass){let freq=context.maxFreq;if(!freq)freq=1;if(freq>1)freq*=.5;context.lowpass=new Biquad2("lowpass",context.maxFreq,context.sps);context.peakFinderWindow=Math.floor(context.sps/context.maxFreq);if(context.peakFinderWindow%2===0)context.peakFinderWindow+=1;if(context.peakFinderWindow<5)context.peakFinderWindow=5;context.midpoint=Math.round(context.peakFinderWindow*.5)}},ondata:(context,data)=>{if(!("red"in data)&&!("heg"in data)&&!("raw"in data))return void 0;let refdata=data.red?data.red:data.heg?data.heg:data.raw;if(!("timestamp"in data)){if(Array.isArray(refdata)){let now=Date.now();let len;if(refdata)len=refdata.length;let toInterp=[now-refdata.length*context.sps*1e3,now];data.timestamp=Math2.upsample(toInterp,refdata.length)}else{data.timestamp=Date.now()}}let pass=(amplitude,timestamp)=>{if(amplitude){context.refdata.push(amplitude)}context.timestamp.push(timestamp);let beat;if(context.refdata.length>context.peakFinderWindow){context.refdata.shift();context.timestamp.shift()}context.smoothed.push(context.lowpass.applyFilter(context.refdata[context.refdata.length-1]));if(context.smoothed.length>context.peakFinderWindow){context.smoothed.shift()}if(context.smoothed.length===context.peakFinderWindow){if(Math2.isExtrema(context.smoothed,"valley")){context.valleys.push({value:context.smoothed[context.smoothed.length-context.midpoint?context.midpoint:1],timestamp:context.timestamp[context.timestamp.length-context.midpoint?context.midpoint:1]})}else if(Math2.isExtrema(context.smoothed,"peak")){context.peaks.push({value:context.smoothed[context.smoothed.length-context.midpoint?context.midpoint:1],timestamp:context.timestamp[context.timestamp.length-context.midpoint?context.midpoint:1]})}if(context.valleys.length>2&&context.peaks.length>2){if(context.valleys[context.valleys.length-1].timestamp<context.peaks[context.peaks.length-2].timestamp)context.peaks.splice(context.peaks.length-1);if(context.peaks[context.peaks.length-1].timestamp<context.valleys[context.valleys.length-2].timestamp)context.valleys.splice(context.valleys.length-1);context.valley_distances.push({distance:context.valleys[context.valleys.length-1].timestamp-context.valleys[context.valleys.length-2].timestamp,timestamp:context.valleys[context.valleys.length-1].timestamp,peak0:context.valleys[context.valleys.length-1].value,peak1:context.valleys[context.valleys.length-2].value});context.peak_distances.push({distance:context.peaks[context.peaks.length-1].timestamp-context.peaks[context.peaks.length-2].timestamp,timestamp:context.peaks[context.peaks.length-1].timestamp,peak0:context.peaks[context.peaks.length-1].value,peak1:context.peaks[context.peaks.length-2].value});if(context.peak_distances.length>1&&context.valley_distances.length>1){if(context.lastPeak<context.peaks[context.peaks.length-1].timestamp&&context.lastValley<context.peaks[context.peaks.length-1].timestamp){if(context.valley_distances[context.valley_distances.length-1].timestamp>context.peak_distances[context.peak_distances.length-1].timestamp){let bpm,change=0;if(context.beats.length<1){bpm=60/(5e-4*(context.peak_distances[context.peak_distances.length-1].distance+context.valley_distances[context.valley_distances.length-1].distance))}else if(context.beats[context.beats.length-1].timestamp!==context.peak_distances[context.peak_distances.length-1].timestamp){bpm=60/(5e-4*(context.peak_distances[context.peak_distances.length-1].dt+context.valley_distances[context.valley_distances.length-1].dt));change=Math.abs(bpm-context.beats[context.beats.length-1].bpm)}beat={timestamp:context.peak_distances[context.peak_distances.length-1].timestamp,change,bpm,height0:context.peak_distances[context.peak_distances.length-1].peak0-context.valley_distances[context.valley_distances.length-1].peak0,height1:context.peak_distances[context.peak_distances.length-1].peak1-context.valley_distances[context.valley_distances.length-1].peak1};context.beats.push(beat);context.lastPeak=context.peaks[context.peaks.length-1].timestamp;context.lastValley=context.peaks[context.peaks.length-1].timestamp}else{let bpm,change=0;if(context.beats.length<2){bpm=60/(5e-4*(context.peak_distances[context.peak_distances.length-2].distance+context.valley_distances[context.valley_distances.length-2].distance))}else if(context.beats[context.beats.length-1].timestamp!==context.peak_distances[context.peak_distances.length-2].timestamp){bpm=60/(5e-4*(context.peak_distances[context.peak_distances.length-2].distance+context.valley_distances[context.valley_distances.length-2].distance));change=Math.abs(bpm-context.beats[context.beats.length-2].bpm)}beat={timestamp:context.peak_distances[context.peak_distances.length-2].timestamp,change,bpm,height0:context.peak_distances[context.peak_distances.length-2].peak0-context.valley_distances[context.valley_distances.length-2].peak0,height1:context.peak_distances[context.peak_distances.length-2].peak1-context.valley_distances[context.valley_distances.length-2].peak1};context.beats.push(beat);context.lastPeak=context.peaks[context.peaks.length-1].timestamp;context.lastValley=context.peaks[context.peaks.length-1].timestamp}}}if(context.peaks.length>context.limit){context.peaks.shift()}if(context.valleys.length>context.limit){context.valleys.shift()}if(context.peak_distances.length>context.limit){context.peak_distances.shift()}if(context.valley_distances.length>context.limit){context.valley_distances.shift()}if(context.beats.length>context.limit){context.beats.shift()}}}return beat};if(data.red){if("ir"in data&&!Array.isArray(data.red))return pass(data.red+data.ir,data.timestamp);let result;if(data.ir)result=data.red.map((v22,i)=>{return pass(v22+data.ir[i],data.timestamp[i])});else result=data.red.map((v22,i)=>{return pass(v22,data.timestamp[i])});return result}else if(data.raw){if(!Array.isArray(data.raw))return pass(data.raw,data.timestamp);let result=data.raw.map((v22,i)=>{return pass(v22,data.timestamp[i])});return result}else if(Array.isArray(data.heg)){if(!Array.isArray(data.heg))return pass(data.heg,data.timestamp);let result=data.heg.map((v22,i)=>{return pass(v22,data.timestamp[i])});return result}}};var blink_detect={structs:{sps:250,intervals:{},watch:["0"],tolerance:.2},oncreate:ctx=>{ctx.watch.forEach(ch=>ctx.intervals[ch]={lowpass:new Biquad2("lowpass",20,ctx.sps),filtered:[],averaged:[]})},ondata:(ctx,data)=>{let checkCt=5;let averageCt=50;let found={};let passed=false;let pass=(key,n)=>{let next=ctx.intervals[key].lowpass.applyFilter(n);ctx.intervals[key].filtered.push(next);ctx.intervals[key].averaged.push(next);if(ctx.intervals[key].filtered.length>checkCt){if(ctx.intervals[key].averaged.length>averageCt){ctx.intervals[key].averaged.splice(0,checkCt);let mean2=Math2.mean(ctx.intervals[key].averaged);if(Math.abs(Math.min(...ctx.intervals[key].filtered))>Math.abs(mean2)+ctx.tolerance){ctx.intervals[key].filtered.length=0;passed=true;found[key]=true}}else ctx.intervals[key].filtered.shift()}};for(const key in ctx.intervals){if(data[key]){if(Array.isArray(data[key])){data[key].forEach(n=>{pass(key,n)})}else if(typeof data[key]==="number")pass(key,data[key])}}if(passed)return found}};var _ArrayManip2=class{constructor(){this.recursivelyAssign=(target,obj)=>{for(const key in obj){if(typeof obj[key]==="object"){if(typeof target[key]==="object")this.recursivelyAssign(target[key],obj[key]);else target[key]=this.recursivelyAssign({},obj[key])}else target[key]=obj[key]}return target}}static autoscale(array,lineIdx=0,nLines=1,centerZero=false,ymin,ymax,clamp){if(array?.length===0)return array;let max=ymax?ymax:Math.max(...array);let min=ymin?ymin:Math.min(...array);let _lines=1/nLines;let scalar=1;if(centerZero){let absmax=Math.max(Math.abs(min),Math.abs(max));if(absmax!==0)scalar=_lines/absmax;return array.map(y22=>{if(clamp){if(y22<min)y22=min;if(y22>max)y22=max}return y22*scalar+(_lines*(lineIdx+1)*2-1-_lines)})}else{if(max===min){if(max!==0){scalar=_lines/max}else if(min!==0){scalar=_lines/Math.abs(min)}}else scalar=_lines/(max-min);return array.map(y22=>{if(clamp){if(y22<min)y22=min;if(y22>max)y22=max}return 2*((y22-min)*scalar-1/(2*nLines))+(_lines*(lineIdx+1)*2-1-_lines)})}}static genTimestamps(ct3,sps11){let now=Date.now();let toInterp=[now-ct3*1e3/sps11,now];return _ArrayManip2.upsample(toInterp,ct3)}static absmax(array){return Math.max(Math.abs(Math.min(...array)),Math.max(...array))}static downsample(array,fitCount,scalar=1){if(array.length>fitCount){let output=new Array(fitCount);let incr=array.length/fitCount;let lastIdx=array.length-1;let last=0;let counter=0;for(let i=incr;i<array.length;i+=incr){let rounded=Math.round(i);if(rounded>lastIdx)rounded=lastIdx;for(let j3=last;j3<rounded;j3++){output[counter]+=array[j3]}output[counter]/=(rounded-last)*scalar;counter++;last=rounded}return output}else return array}static upsample(array,fitCount,scalar=1){var linearInterpolate=function(before2,after2,atPoint2){return(before2+(after2-before2)*atPoint2)*scalar};var newData=new Array(fitCount);var springFactor=(array.length-1)/(fitCount-1);newData[0]=array[0];for(var i=1;i<fitCount-1;i++){var tmp=i*springFactor;var before=Math.floor(tmp);var after=Math.ceil(tmp);var atPoint=tmp-before;newData[i]=linearInterpolate(array[before],array[after],atPoint)}newData[fitCount-1]=array[array.length-1];return newData}static interpolate(array,fitCount,scalar=1){if(array.length>fitCount){return _ArrayManip2.downsample(array,fitCount,scalar)}else if(array.length<fitCount){return _ArrayManip2.upsample(array,fitCount,scalar)}return array}static HSLToRGB(h,s,l,scalar=255){s/=100;l/=100;let c2=(1-Math.abs(2*l-1))*s,x32=c2*(1-Math.abs(h/60%2-1)),m=l-c2/2,r=0,g3=0,b2=0;if(0<=h&&h<60){r=c2;g3=x32;b2=0}else if(60<=h&&h<120){r=x32;g3=c2;b2=0}else if(120<=h&&h<180){r=0;g3=c2;b2=x32}else if(180<=h&&h<240){r=0;g3=x32;b2=c2}else if(240<=h&&h<300){r=x32;g3=0;b2=c2}else if(300<=h&&h<360){r=c2;g3=0;b2=x32}r=(r+m)*scalar;g3=(g3+m)*scalar;b2=(b2+m)*scalar;return[r,g3,b2]}static circularBuffer(arr,newEntries){if(newEntries.length<arr.length){let slice=arr.slice(newEntries.length);let len=arr.length;arr.splice(0,len,...slice,...newEntries)}else if(newEntries.length>arr.length){let len=arr.length;arr.splice(0,len,...newEntries.slice(newEntries.length-len))}else{arr.splice(0,arr.length,...newEntries)}return arr}static reformatData(data,key){if(Array.isArray(data)){if(Array.isArray(data[0])){let d22={};data.forEach((arr,i)=>{d22[i]=arr});data=d22;if(isNaN(data[0][0]))return void 0}else if(key){data={[key]:data};if(isNaN(data[key][0]))return void 0}else{data={0:data};if(isNaN(data[0][0]))return void 0}}else if(typeof data==="object"){for(const key2 in data){if(typeof data[key2]==="number")data[key2]=[data[key2]];else if(data[key2]?.values){if(typeof data[key2].values==="number")data[key2].values=[data[key2].values]}if(isNaN(data[key2][0]))return void 0}}else if(typeof data==="string"){let split;if(data.includes("\\r\\n")){let lines=data.split("\\r\\n");data={};lines.forEach((l,j3)=>{if(l.includes("	")){split=l.split("	")}else if(l.includes(",")){split=l.split(",")}else if(l.includes("|")){split=l.split("|")}if(Array.isArray(split)){split.forEach((val,i)=>{if(val.includes(":")){let[key2,v22]=val.split(":");let fl2=parseFloat(v22);if(fl2)data[key2]=[fl2];else return void 0}else{let fl2=parseFloat(val);if(fl2)data[i]=[fl2];else return void 0}})}})}else if(data.includes("	")){split=data.split("	")}else if(data.includes(",")){split=data.split(",")}else if(data.includes("|")){split=data.split("|")}data={};if(Array.isArray(split)){split.forEach((val,i)=>{if(val.includes(":")){let[key2,v22]=val.split(":");let fl2=parseFloat(v22);if(fl2)data[key2]=[fl2];else return void 0}else{let fl2=parseFloat(val);if(fl2)data[i]=[fl2];else return void 0}})}}else if(typeof data==="number"){if(key)data={[key]:[data]};else data={0:[data]}}return data}static padTime(data,lastValue,time,targetFit){let slopeIncr=(data[0]-lastValue)/time/targetFit;let padded=[...new Array(targetFit-data.length).map((_22,i)=>lastValue+slopeIncr*(i+1)),...data];return padded}static interpolateForTime(data,time,targetSPS){return _ArrayManip2.interpolate(data,Math.ceil(targetSPS*time))}isTypedArray(x32){return ArrayBuffer.isView(x32)&&Object.prototype.toString.call(x32)!=="[object DataView]"}spliceTypedArray(arr,start,end){let s=arr.subarray(0,start);let e;if(end){e=arr.subarray(end+1)}let n;if(s.length>0||e?.length>0)n=new arr.constructor(s.length+e.length);if(s.length>0)n.set(s);if(e&&e.length>0)n.set(e,s.length);return n}};var ArrayManip2=_ArrayManip2;ArrayManip2.bufferValues=(objects,property,keys,buffer)=>{if(!Array.isArray(keys)&&typeof keys==="object")keys=Object.keys(keys);if(!buffer){let object_keys=Object.keys(objects);if(keys)buffer=new Float32Array(object_keys.length*keys.length);else{if(typeof objects[object_keys[0]][property]==="object"){keys=Object.keys(objects[object_keys[0]][property]);buffer=new Float32Array(object_keys.length*keys.length)}else buffer=new Float32Array(object_keys.length)}}let i=0;for(const key in objects){if(objects[key][property]){if(keys){for(let j3=0;j3<keys.length;j3++){buffer[i]=objects[key][property][keys[j3]];i++}}else{buffer[i]=objects[key][property];i++}}}return buffer};var rechk2=/^([<>])?(([1-9]\\d*)?([xcbB?hHiIfdsp]))*$/;var refmt2=/([1-9]\\d*)?([xcbB?hHiIfdsp])/g;var str2=(v22,o2,c2)=>String.fromCharCode(...new Uint8Array(v22.buffer,v22.byteOffset+o2,c2));var rts2=(v22,o2,c2,s)=>new Uint8Array(v22.buffer,v22.byteOffset+o2,c2).set(s.split("").map(str22=>str22.charCodeAt(0)));var pst2=(v22,o2,c2)=>str2(v22,o2+1,Math.min(v22.getUint8(o2),c2-1));var tsp2=(v22,o2,c2,s)=>{v22.setUint8(o2,s.length);rts2(v22,o2+1,c2-1,s)};var lut2=le3=>({x:c2=>[1,c2,0],c:c2=>[c2,1,o2=>({u:v22=>str2(v22,o2,1),p:(v22,c22)=>rts2(v22,o2,1,c22)})],"?":c2=>[c2,1,o2=>({u:v22=>Boolean(v22.getUint8(o2)),p:(v22,B2)=>v22.setUint8(o2,B2)})],b:c2=>[c2,1,o2=>({u:v22=>v22.getInt8(o2),p:(v22,b2)=>v22.setInt8(o2,b2)})],B:c2=>[c2,1,o2=>({u:v22=>v22.getUint8(o2),p:(v22,B2)=>v22.setUint8(o2,B2)})],h:c2=>[c2,2,o2=>({u:v22=>v22.getInt16(o2,le3),p:(v22,h)=>v22.setInt16(o2,h,le3)})],H:c2=>[c2,2,o2=>({u:v22=>v22.getUint16(o2,le3),p:(v22,H3)=>v22.setUint16(o2,H3,le3)})],i:c2=>[c2,4,o2=>({u:v22=>v22.getInt32(o2,le3),p:(v22,i)=>v22.setInt32(o2,i,le3)})],I:c2=>[c2,4,o2=>({u:v22=>v22.getUint32(o2,le3),p:(v22,I2)=>v22.setUint32(o2,I2,le3)})],f:c2=>[c2,4,o2=>({u:v22=>v22.getFloat32(o2,le3),p:(v22,f)=>v22.setFloat32(o2,f,le3)})],d:c2=>[c2,8,o2=>({u:v22=>v22.getFloat64(o2,le3),p:(v22,d22)=>v22.setFloat64(o2,d22,le3)})],s:c2=>[1,c2,o2=>({u:v22=>str2(v22,o2,c2),p:(v22,s)=>rts2(v22,o2,c2,s.slice(0,c2))})],p:c2=>[1,c2,o2=>({u:v22=>pst2(v22,o2,c2),p:(v22,s)=>tsp2(v22,o2,c2,s.slice(0,c2-1))})]});var errbuf2=new RangeError("Structure larger than remaining buffer");var errval2=new RangeError("Not enough values for structure");var _ByteParser2=class extends ArrayManip2{static toDataView(value2){if(!(value2 instanceof DataView)){if(typeof value2==="string"&&parseInt(value2))value2=parseInt(value2);if(typeof value2==="string"){let enc=new TextEncoder;let hascodes={};for(const code in _ByteParser2.codes){while(value2.indexOf(code)>-1){let idx=value2.indexOf(code);value2=value2.replace(code,"");hascodes[idx]=code}}let encoded=Array.from(enc.encode(value2));for(const key in hascodes){encoded.splice(parseInt(key),0,_ByteParser2.codes[hascodes[key]])}value2=new DataView(new Uint8Array(encoded).buffer)}else if(typeof value2==="number"){let tmp=value2;if(value2<256){value2=new DataView(new ArrayBuffer(1));value2.setUint8(0,tmp)}else if(value2<65536){value2=new DataView(new ArrayBuffer(2));value2.setInt16(0,tmp)}else{value2=new DataView(new ArrayBuffer(4));value2.setUint32(0,tmp)}}else if(value2 instanceof ArrayBuffer||typeof SharedArrayBuffer!=="undefined"&&value2 instanceof SharedArrayBuffer){value2=new DataView(value2)}else if(Array.isArray(value2)){value2=new DataView(Uint8Array.from(value2).buffer)}else if(typeof value2==="object"){value2=new TextEncoder().encode(JSON.stringify(value2))}}return value2}static searchBuffer(buffer,searchString,limit){var needle=searchString;var haystack=buffer;var search=_ByteParser2.boyerMoore(needle);var skip=search.byteLength;var indices=[];for(var i=search(haystack);i!==-1;i=search(haystack,i+skip)){indices.push(i);if(limit){if(indices.length>=limit)break}}return indices}static bytesToInt16(x0,x1){let int16=(255&x0)<<8|255&x1;if((int16&32768)>0){int16|=4294901760}else{int16&=65535}return int16}static bytesToUInt16(x0,x1){return x0*256+x1}static Uint16ToBytes(y22){return[y22&255,y22>>8&255]}static bytesToInt24(x0,x1,x22){let int24=(255&x0)<<16|(255&x1)<<8|255&x22;if((int24&8388608)>0){int24|=4278190080}else{int24&=16777215}return int24}static bytesToUInt24(x0,x1,x22){return x0*65536+x1*256+x22}static Uint24ToBytes(y22){return[y22&255,y22>>8&255,y22>>16&255]}static bytesToInt32(x0,x1,x22,x32){let int32=(255&x0)<<24|(255&x1)<<16|(255&x22)<<8|255&x32;if((int32&2147483648)>0){int32|=0}else{int32&=4294967295}return int32}static bytesToUInt32(x0,x1,x22,x32){return x0*16777216+x1*65536+x22*256+x32}static Uint32ToBytes(y22){return[y22&255,y22>>8&255,y22>>16&255,y22>>24&255]}static get2sCompliment(val,nbits3){if(val>4294967296)return null;return val<<32-nbits3>>32-nbits3}static getSignedInt(...args){let pos=0;function getInt(size){var value2=0;var first=true;while(size--){if(first){let byte=args[pos++];value2+=byte&127;if(byte&128){value2-=128}first=false}else{value2*=256;value2+=args[pos++]}}return value2}return getInt(args.length)}static asUint8Array(input){if(input instanceof Uint8Array){return input}else if(typeof input==="string"){var arr=new Uint8Array(input.length);for(var i=0;i<input.length;i++){var c2=input.charCodeAt(i);if(c2>127){throw new TypeError("Only ASCII patterns are supported")}arr[i]=c2}return arr}else{return new Uint8Array(input)}}static boyerMoore(patternBuffer){var pattern=_ByteParser2.asUint8Array(patternBuffer);var M22=pattern.length;if(M22===0){throw new TypeError("patternBuffer must be at least 1 byte long")}var R22=256;var rightmost_positions=new Int32Array(R22);for(var c2=0;c2<R22;c2++){rightmost_positions[c2]=-1}for(var j3=0;j3<M22;j3++){rightmost_positions[pattern[j3]]=j3}var boyerMooreSearch=(txtBuffer,start,end)=>{var txt=_ByteParser2.asUint8Array(txtBuffer);if(start===void 0)start=0;if(end===void 0)end=txt.length;var pat=pattern;var right=rightmost_positions;var lastIndex=end-pat.length;var lastPatIndex=pat.length-1;var skip;for(var i=start;i<=lastIndex;i+=skip){skip=0;for(var j22=lastPatIndex;j22>=0;j22--){var c22=txt[i+j22];if(pat[j22]!==c22){skip=Math.max(1,j22-right[c22]);break}}if(skip===0){return i}}return-1};boyerMooreSearch.byteLength=pattern.byteLength;return boyerMooreSearch}static struct(format){let fns=[],size=0,m=rechk2.exec(format);if(!m){throw new RangeError("Invalid format string")}const t2=lut2("<"===m[1]),lu=(n,c2)=>t2[c2](n?parseInt(n,10):1);while(m=refmt2.exec(format)){((r,s,f)=>{for(let i=0;i<r;++i,size+=s){if(f){fns.push(f(size))}}})(...lu(...m.slice(1)))}const unpack_from=(arrb,offs)=>{if(arrb.byteLength<(offs|0)+size){throw errbuf2}let v22=new DataView(arrb,offs|0);return fns.map(f=>f.u(v22))};const pack_into=(arrb,offs,...values)=>{if(values.length<fns.length){throw errval2}if(arrb.byteLength<offs+size){throw errbuf2}const v22=new DataView(arrb,offs);new Uint8Array(arrb,offs,size).fill(0);fns.forEach((f,i)=>f.p(v22,values[i]))};const pack=(...values)=>{let b2=new ArrayBuffer(size);pack_into(b2,0,...values);return b2};const unpack=arrb=>unpack_from(arrb,0);function*iter_unpack(arrb){for(let offs=0;offs+size<=arrb.byteLength;offs+=size){yield unpack_from(arrb,offs)}}return Object.freeze({unpack,pack,unpack_from,pack_into,iter_unpack,format,size})}};var ByteParser2=_ByteParser2;ByteParser2.codes={"\\\\n":10,"\\\\r":13,"\\\\t":9,"\\\\s":32,"\\\\b":8,"\\\\f":12,"\\\\":92};var rms={structs:{sps:250,nSec:1,watch:["0","1","2","3"],data:{},rms:{}},ondata:(ctx,data)=>{ctx.watch.forEach(key=>{if(data[key]){if(!ctx.data[key]){if(Array.isArray(data[key])){ctx.data[key]=new Array(Math.floor(ctx.sps*ctx.nSec)).fill(data[key][0])}else ctx.data[key]=new Array(Math.floor(ctx.sps*ctx.nSec)).fill(data[key])}ByteParser2.circularBuffer(ctx.data[key],data[key])}});if(data.timestamp){if(Array.isArray(data.timestamp)){ctx.rms.timestamp=data.timestamp[data.timestamp.length-1]}else ctx.rms.timestamp=data.timestamp}else ctx.rms.timestamp=Date.now();return new Promise(async res=>{await Promise.all(ctx.watch.map(async key=>{if(ctx.data[key])ctx.rms[key]=Math.sqrt(Math.abs(ctx.data[key].reduce((p,v22,i)=>p+v22*v22)/ctx.data[key].length));else delete ctx.rms[key]}));res(ctx.rms)})}};var circularBuffer2d={structs:{bufferSize:250,watch:["0","1","2","3"],data:{},blocking:false},oncreate:ctx=>{for(const key in ctx.watch){ctx.data[key]=new Array(ctx.bufferSize).fill(0)}},ondata:(ctx,data)=>{let buffer2d=[];ctx.watch.forEach(key=>{if(data[key]){ByteParser2.circularBuffer(ctx.data[key],data[key]);buffer2d.push(ctx.data[key])}});return buffer2d}};Object.assign(algorithms2,{beat_detect,accel_gyro,heartrate:beat_detect,breath:Object.assign({},beat_detect),blink_detect,rms,circularBuffer2d});algorithms2["breath"].structs=JSON.parse(JSON.stringify(algorithms2["breath"].structs));algorithms2["breath"].structs.maxFreq=.2;var Tf=Object.create;var au=Object.defineProperty;var Mf=Object.getOwnPropertyDescriptor;var Cf=Object.getOwnPropertyNames;var If=Object.getPrototypeOf;var Nf=Object.prototype.hasOwnProperty;var c=(r,t2)=>()=>(t2||r((t2={exports:{}}).exports,t2),t2.exports);var Rf=(r,t2,e,n)=>{if(t2&&typeof t2=="object"||typeof t2=="function")for(let i of Cf(t2))!Nf.call(r,i)&&i!==e&&au(r,i,{get:()=>t2[i],enumerable:!(n=Mf(t2,i))||n.enumerable});return r};var kf=(r,t2,e)=>(e=r!=null?Tf(If(r)):{},Rf(t2||!r||!r.__esModule?au(e,"default",{value:r,enumerable:true}):e,r));var ue=c(tn2=>{"use strict";Object.defineProperty(tn2,"__esModule",{value:true});function Vf(r){return typeof r=="function"}tn2.isFunction=Vf});var Te=c(nn2=>{"use strict";Object.defineProperty(nn2,"__esModule",{value:true});var rn2=false;nn2.config={Promise:void 0,set useDeprecatedSynchronousErrorHandling(r){if(r){var t2=new Error;console.warn(`DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n`+t2.stack)}else rn2&&console.log("RxJS: Back to a better error behavior. Thank you. <3");rn2=r},get useDeprecatedSynchronousErrorHandling(){return rn2}}});var vr=c(on2=>{"use strict";Object.defineProperty(on2,"__esModule",{value:true});function Wf(r){setTimeout(function(){throw r},0)}on2.hostReportError=Wf});var sn=c(un2=>{"use strict";Object.defineProperty(un2,"__esModule",{value:true});var Ff=Te(),Df=vr();un2.empty={closed:true,next:function(r){},error:function(r){if(Ff.config.useDeprecatedSynchronousErrorHandling)throw r;Df.hostReportError(r)},complete:function(){}}});var g=c(cn2=>{"use strict";Object.defineProperty(cn2,"__esModule",{value:true});cn2.isArray=function(){return Array.isArray||function(r){return r&&typeof r.length=="number"}}()});var dr=c(an2=>{"use strict";Object.defineProperty(an2,"__esModule",{value:true});function Uf(r){return r!==null&&typeof r=="object"}an2.isObject=Uf});var ln=c(fn2=>{"use strict";Object.defineProperty(fn2,"__esModule",{value:true});var Bf=function(){function r(t2){return Error.call(this),this.message=t2?t2.length+` errors occurred during unsubscription:\n`+t2.map(function(e,n){return n+1+") "+e.toString()}).join(`\n  `):"",this.name="UnsubscriptionError",this.errors=t2,this}return r.prototype=Object.create(Error.prototype),r}();fn2.UnsubscriptionError=Bf});var O=c(pn2=>{"use strict";Object.defineProperty(pn2,"__esModule",{value:true});var Lf=g(),zf=dr(),Gf=ue(),yr2=ln(),Yf=function(){function r(t2){this.closed=false,this._parentOrParents=null,this._subscriptions=null,t2&&(this._ctorUnsubscribe=true,this._unsubscribe=t2)}return r.prototype.unsubscribe=function(){var t2;if(!this.closed){var e=this,n=e._parentOrParents,i=e._ctorUnsubscribe,o2=e._unsubscribe,u2=e._subscriptions;if(this.closed=true,this._parentOrParents=null,this._subscriptions=null,n instanceof r)n.remove(this);else if(n!==null)for(var s=0;s<n.length;++s){var f=n[s];f.remove(this)}if(Gf.isFunction(o2)){i&&(this._unsubscribe=void 0);try{o2.call(this)}catch(b2){t2=b2 instanceof yr2.UnsubscriptionError?fu(b2.errors):[b2]}}if(Lf.isArray(u2))for(var s=-1,a=u2.length;++s<a;){var p=u2[s];if(zf.isObject(p))try{p.unsubscribe()}catch(v3){t2=t2||[],v3 instanceof yr2.UnsubscriptionError?t2=t2.concat(fu(v3.errors)):t2.push(v3)}}if(t2)throw new yr2.UnsubscriptionError(t2)}},r.prototype.add=function(t2){var e=t2;if(!t2)return r.EMPTY;switch(typeof t2){case"function":e=new r(t2);case"object":if(e===this||e.closed||typeof e.unsubscribe!="function")return e;if(this.closed)return e.unsubscribe(),e;if(!(e instanceof r)){var n=e;e=new r,e._subscriptions=[n]}break;default:throw new Error("unrecognized teardown "+t2+" added to Subscription.")}var i=e._parentOrParents;if(i===null)e._parentOrParents=this;else if(i instanceof r){if(i===this)return e;e._parentOrParents=[i,this]}else if(i.indexOf(this)===-1)i.push(this);else return e;var o2=this._subscriptions;return o2===null?this._subscriptions=[e]:o2.push(e),e},r.prototype.remove=function(t2){var e=this._subscriptions;if(e){var n=e.indexOf(t2);n!==-1&&e.splice(n,1)}},r.EMPTY=function(t2){return t2.closed=true,t2}(new r),r}();pn2.Subscription=Yf;function fu(r){return r.reduce(function(t2,e){return t2.concat(e instanceof yr2.UnsubscriptionError?e.errors:e)},[])}});var mr=c(Me2=>{"use strict";Object.defineProperty(Me2,"__esModule",{value:true});Me2.rxSubscriber=function(){return typeof Symbol=="function"?Symbol("rxSubscriber"):"@@rxSubscriber_"+Math.random()}();Me2.$$rxSubscriber=Me2.rxSubscriber});var _2=c(ce2=>{"use strict";var pu=ce2&&ce2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(ce2,"__esModule",{value:true});var lu=ue(),hn2=sn(),Qf=O(),Hf=mr(),se2=Te(),Sr2=vr(),hu=function(r){pu(t2,r);function t2(e,n,i){var o2=r.call(this)||this;switch(o2.syncErrorValue=null,o2.syncErrorThrown=false,o2.syncErrorThrowable=false,o2.isStopped=false,arguments.length){case 0:o2.destination=hn2.empty;break;case 1:if(!e){o2.destination=hn2.empty;break}if(typeof e=="object"){e instanceof t2?(o2.syncErrorThrowable=e.syncErrorThrowable,o2.destination=e,e.add(o2)):(o2.syncErrorThrowable=true,o2.destination=new bn2(o2,e));break}default:o2.syncErrorThrowable=true,o2.destination=new bn2(o2,e,n,i);break}return o2}return t2.prototype[Hf.rxSubscriber]=function(){return this},t2.create=function(e,n,i){var o2=new t2(e,n,i);return o2.syncErrorThrowable=false,o2},t2.prototype.next=function(e){this.isStopped||this._next(e)},t2.prototype.error=function(e){this.isStopped||(this.isStopped=true,this._error(e))},t2.prototype.complete=function(){this.isStopped||(this.isStopped=true,this._complete())},t2.prototype.unsubscribe=function(){this.closed||(this.isStopped=true,r.prototype.unsubscribe.call(this))},t2.prototype._next=function(e){this.destination.next(e)},t2.prototype._error=function(e){this.destination.error(e),this.unsubscribe()},t2.prototype._complete=function(){this.destination.complete(),this.unsubscribe()},t2.prototype._unsubscribeAndRecycle=function(){var e=this._parentOrParents;return this._parentOrParents=null,this.unsubscribe(),this.closed=false,this.isStopped=false,this._parentOrParents=e,this},t2}(Qf.Subscription);ce2.Subscriber=hu;var bn2=function(r){pu(t2,r);function t2(e,n,i,o2){var u2=r.call(this)||this;u2._parentSubscriber=e;var s,f=u2;return lu.isFunction(n)?s=n:n&&(s=n.next,i=n.error,o2=n.complete,n!==hn2.empty&&(f=Object.create(n),lu.isFunction(f.unsubscribe)&&u2.add(f.unsubscribe.bind(f)),f.unsubscribe=u2.unsubscribe.bind(u2))),u2._context=f,u2._next=s,u2._error=i,u2._complete=o2,u2}return t2.prototype.next=function(e){if(!this.isStopped&&this._next){var n=this._parentSubscriber;!se2.config.useDeprecatedSynchronousErrorHandling||!n.syncErrorThrowable?this.__tryOrUnsub(this._next,e):this.__tryOrSetError(n,this._next,e)&&this.unsubscribe()}},t2.prototype.error=function(e){if(!this.isStopped){var n=this._parentSubscriber,i=se2.config.useDeprecatedSynchronousErrorHandling;if(this._error)!i||!n.syncErrorThrowable?(this.__tryOrUnsub(this._error,e),this.unsubscribe()):(this.__tryOrSetError(n,this._error,e),this.unsubscribe());else if(n.syncErrorThrowable)i?(n.syncErrorValue=e,n.syncErrorThrown=true):Sr2.hostReportError(e),this.unsubscribe();else{if(this.unsubscribe(),i)throw e;Sr2.hostReportError(e)}}},t2.prototype.complete=function(){var e=this;if(!this.isStopped){var n=this._parentSubscriber;if(this._complete){var i=function(){return e._complete.call(e._context)};!se2.config.useDeprecatedSynchronousErrorHandling||!n.syncErrorThrowable?(this.__tryOrUnsub(i),this.unsubscribe()):(this.__tryOrSetError(n,i),this.unsubscribe())}else this.unsubscribe()}},t2.prototype.__tryOrUnsub=function(e,n){try{e.call(this._context,n)}catch(i){if(this.unsubscribe(),se2.config.useDeprecatedSynchronousErrorHandling)throw i;Sr2.hostReportError(i)}},t2.prototype.__tryOrSetError=function(e,n,i){if(!se2.config.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{n.call(this._context,i)}catch(o2){return se2.config.useDeprecatedSynchronousErrorHandling?(e.syncErrorValue=o2,e.syncErrorThrown=true,true):(Sr2.hostReportError(o2),true)}return false},t2.prototype._unsubscribe=function(){var e=this._parentSubscriber;this._context=null,this._parentSubscriber=null,e.unsubscribe()},t2}(hu);ce2.SafeSubscriber=bn2});var Or=c(_n2=>{"use strict";Object.defineProperty(_n2,"__esModule",{value:true});var Kf=_2();function Jf(r){for(;r;){var t2=r,e=t2.closed,n=t2.destination,i=t2.isStopped;if(e||i)return false;n&&n instanceof Kf.Subscriber?r=n:r=null}return true}_n2.canReportError=Jf});var _u=c(dn2=>{"use strict";Object.defineProperty(dn2,"__esModule",{value:true});var vn2=_2(),bu=mr(),Zf=sn();function $f(r,t2,e){if(r){if(r instanceof vn2.Subscriber)return r;if(r[bu.rxSubscriber])return r[bu.rxSubscriber]()}return!r&&!t2&&!e?new vn2.Subscriber(Zf.empty):new vn2.Subscriber(r,t2,e)}dn2.toSubscriber=$f});var Y2=c(yn2=>{"use strict";Object.defineProperty(yn2,"__esModule",{value:true});yn2.observable=function(){return typeof Symbol=="function"&&Symbol.observable||"@@observable"}()});var V=c(mn2=>{"use strict";Object.defineProperty(mn2,"__esModule",{value:true});function Xf(r){return r}mn2.identity=Xf});var gr=c(wr2=>{"use strict";Object.defineProperty(wr2,"__esModule",{value:true});var el2=V();function tl2(){for(var r=[],t2=0;t2<arguments.length;t2++)r[t2]=arguments[t2];return vu(r)}wr2.pipe=tl2;function vu(r){return r.length===0?el2.identity:r.length===1?r[0]:function(e){return r.reduce(function(n,i){return i(n)},e)}}wr2.pipeFromArray=vu});var d2=c(Sn2=>{"use strict";Object.defineProperty(Sn2,"__esModule",{value:true});var rl2=Or(),nl2=_u(),il=Y2(),ol2=gr(),xr2=Te(),ul2=function(){function r(t2){this._isScalar=false,t2&&(this._subscribe=t2)}return r.prototype.lift=function(t2){var e=new r;return e.source=this,e.operator=t2,e},r.prototype.subscribe=function(t2,e,n){var i=this.operator,o2=nl2.toSubscriber(t2,e,n);if(i?o2.add(i.call(o2,this.source)):o2.add(this.source||xr2.config.useDeprecatedSynchronousErrorHandling&&!o2.syncErrorThrowable?this._subscribe(o2):this._trySubscribe(o2)),xr2.config.useDeprecatedSynchronousErrorHandling&&o2.syncErrorThrowable&&(o2.syncErrorThrowable=false,o2.syncErrorThrown))throw o2.syncErrorValue;return o2},r.prototype._trySubscribe=function(t2){try{return this._subscribe(t2)}catch(e){xr2.config.useDeprecatedSynchronousErrorHandling&&(t2.syncErrorThrown=true,t2.syncErrorValue=e),rl2.canReportError(t2)?t2.error(e):console.warn(e)}},r.prototype.forEach=function(t2,e){var n=this;return e=du(e),new e(function(i,o2){var u2;u2=n.subscribe(function(s){try{t2(s)}catch(f){o2(f),u2&&u2.unsubscribe()}},o2,i)})},r.prototype._subscribe=function(t2){var e=this.source;return e&&e.subscribe(t2)},r.prototype[il.observable]=function(){return this},r.prototype.pipe=function(){for(var t2=[],e=0;e<arguments.length;e++)t2[e]=arguments[e];return t2.length===0?this:ol2.pipeFromArray(t2)(this)},r.prototype.toPromise=function(t2){var e=this;return t2=du(t2),new t2(function(n,i){var o2;e.subscribe(function(u2){return o2=u2},function(u2){return i(u2)},function(){return n(o2)})})},r.create=function(t2){return new r(t2)},r}();Sn2.Observable=ul2;function du(r){if(r||(r=xr2.config.Promise||Promise),!r)throw new Error("no Promise impl found");return r}});var Ce=c(On2=>{"use strict";Object.defineProperty(On2,"__esModule",{value:true});var sl=function(){function r(){return Error.call(this),this.message="object unsubscribed",this.name="ObjectUnsubscribedError",this}return r.prototype=Object.create(Error.prototype),r}();On2.ObjectUnsubscribedError=sl});var wn=c(Ie2=>{"use strict";var cl=Ie2&&Ie2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Ie2,"__esModule",{value:true});var al=O(),fl2=function(r){cl(t2,r);function t2(e,n){var i=r.call(this)||this;return i.subject=e,i.subscriber=n,i.closed=false,i}return t2.prototype.unsubscribe=function(){if(!this.closed){this.closed=true;var e=this.subject,n=e.observers;if(this.subject=null,!(!n||n.length===0||e.isStopped||e.closed)){var i=n.indexOf(this.subscriber);i!==-1&&n.splice(i,1)}}},t2}(al.Subscription);Ie2.SubjectSubscription=fl2});var w2=c(Q2=>{"use strict";var qn2=Q2&&Q2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Q2,"__esModule",{value:true});var yu=d2(),ll=_2(),gn2=O(),Ne2=Ce(),pl2=wn(),hl2=mr(),mu=function(r){qn2(t2,r);function t2(e){var n=r.call(this,e)||this;return n.destination=e,n}return t2}(ll.Subscriber);Q2.SubjectSubscriber=mu;var Su=function(r){qn2(t2,r);function t2(){var e=r.call(this)||this;return e.observers=[],e.closed=false,e.isStopped=false,e.hasError=false,e.thrownError=null,e}return t2.prototype[hl2.rxSubscriber]=function(){return new mu(this)},t2.prototype.lift=function(e){var n=new xn2(this,this);return n.operator=e,n},t2.prototype.next=function(e){if(this.closed)throw new Ne2.ObjectUnsubscribedError;if(!this.isStopped)for(var n=this.observers,i=n.length,o2=n.slice(),u2=0;u2<i;u2++)o2[u2].next(e)},t2.prototype.error=function(e){if(this.closed)throw new Ne2.ObjectUnsubscribedError;this.hasError=true,this.thrownError=e,this.isStopped=true;for(var n=this.observers,i=n.length,o2=n.slice(),u2=0;u2<i;u2++)o2[u2].error(e);this.observers.length=0},t2.prototype.complete=function(){if(this.closed)throw new Ne2.ObjectUnsubscribedError;this.isStopped=true;for(var e=this.observers,n=e.length,i=e.slice(),o2=0;o2<n;o2++)i[o2].complete();this.observers.length=0},t2.prototype.unsubscribe=function(){this.isStopped=true,this.closed=true,this.observers=null},t2.prototype._trySubscribe=function(e){if(this.closed)throw new Ne2.ObjectUnsubscribedError;return r.prototype._trySubscribe.call(this,e)},t2.prototype._subscribe=function(e){if(this.closed)throw new Ne2.ObjectUnsubscribedError;return this.hasError?(e.error(this.thrownError),gn2.Subscription.EMPTY):this.isStopped?(e.complete(),gn2.Subscription.EMPTY):(this.observers.push(e),new pl2.SubjectSubscription(this,e))},t2.prototype.asObservable=function(){var e=new yu.Observable;return e.source=this,e},t2.create=function(e,n){return new xn2(e,n)},t2}(yu.Observable);Q2.Subject=Su;var xn2=function(r){qn2(t2,r);function t2(e,n){var i=r.call(this)||this;return i.destination=e,i.source=n,i}return t2.prototype.next=function(e){var n=this.destination;n&&n.next&&n.next(e)},t2.prototype.error=function(e){var n=this.destination;n&&n.error&&this.destination.error(e)},t2.prototype.complete=function(){var e=this.destination;e&&e.complete&&this.destination.complete()},t2.prototype._subscribe=function(e){var n=this.source;return n?this.source.subscribe(e):gn2.Subscription.EMPTY},t2}(Su);Q2.AnonymousSubject=xn2});var qr=c(Re2=>{"use strict";var bl2=Re2&&Re2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Re2,"__esModule",{value:true});var _l=_2();function vl(){return function(t2){return t2.lift(new dl2(t2))}}Re2.refCount=vl;var dl2=function(){function r(t2){this.connectable=t2}return r.prototype.call=function(t2,e){var n=this.connectable;n._refCount++;var i=new yl2(t2,n),o2=e.subscribe(i);return i.closed||(i.connection=n.connect()),o2},r}(),yl2=function(r){bl2(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.connectable=n,i}return t2.prototype._unsubscribe=function(){var e=this.connectable;if(!e){this.connection=null;return}this.connectable=null;var n=e._refCount;if(n<=0){this.connection=null;return}if(e._refCount=n-1,n>1){this.connection=null;return}var i=this.connection,o2=e._connection;this.connection=null,o2&&(!i||o2===i)&&o2.unsubscribe()},t2}(_l.Subscriber)});var Pn=c(ae2=>{"use strict";var jn2=ae2&&ae2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(ae2,"__esModule",{value:true});var ml2=w2(),Sl2=d2(),Ol2=_2(),Ou=O(),wl=qr(),wu=function(r){jn2(t2,r);function t2(e,n){var i=r.call(this)||this;return i.source=e,i.subjectFactory=n,i._refCount=0,i._isComplete=false,i}return t2.prototype._subscribe=function(e){return this.getSubject().subscribe(e)},t2.prototype.getSubject=function(){var e=this._subject;return(!e||e.isStopped)&&(this._subject=this.subjectFactory()),this._subject},t2.prototype.connect=function(){var e=this._connection;return e||(this._isComplete=false,e=this._connection=new Ou.Subscription,e.add(this.source.subscribe(new gl2(this.getSubject(),this))),e.closed&&(this._connection=null,e=Ou.Subscription.EMPTY)),e},t2.prototype.refCount=function(){return wl.refCount()(this)},t2}(Sl2.Observable);ae2.ConnectableObservable=wu;ae2.connectableObservableDescriptor=function(){var r=wu.prototype;return{operator:{value:null},_refCount:{value:0,writable:true},_subject:{value:null,writable:true},_connection:{value:null,writable:true},_subscribe:{value:r._subscribe},_isComplete:{value:r._isComplete,writable:true},getSubject:{value:r.getSubject},connect:{value:r.connect},refCount:{value:r.refCount}}}();var gl2=function(r){jn2(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.connectable=n,i}return t2.prototype._error=function(e){this._unsubscribe(),r.prototype._error.call(this,e)},t2.prototype._complete=function(){this.connectable._isComplete=true,this._unsubscribe(),r.prototype._complete.call(this)},t2.prototype._unsubscribe=function(){var e=this.connectable;if(e){this.connectable=null;var n=e._connection;e._refCount=0,e._subject=null,e._connection=null,n&&n.unsubscribe()}},t2}(ml2.SubjectSubscriber),Rj=function(){function r(t2){this.connectable=t2}return r.prototype.call=function(t2,e){var n=this.connectable;n._refCount++;var i=new xl2(t2,n),o2=e.subscribe(i);return i.closed||(i.connection=n.connect()),o2},r}(),xl2=function(r){jn2(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.connectable=n,i}return t2.prototype._unsubscribe=function(){var e=this.connectable;if(!e){this.connection=null;return}this.connectable=null;var n=e._refCount;if(n<=0){this.connection=null;return}if(e._refCount=n-1,n>1){this.connection=null;return}var i=this.connection,o2=e._connection;this.connection=null,o2&&(!i||o2===i)&&o2.unsubscribe()},t2}(Ol2.Subscriber)});var An=c(fe2=>{"use strict";var jr2=fe2&&fe2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(fe2,"__esModule",{value:true});var gu=_2(),xu=O(),ql=d2(),jl=w2();function Pl2(r,t2,e,n){return function(i){return i.lift(new El(r,t2,e,n))}}fe2.groupBy=Pl2;var El=function(){function r(t2,e,n,i){this.keySelector=t2,this.elementSelector=e,this.durationSelector=n,this.subjectSelector=i}return r.prototype.call=function(t2,e){return e.subscribe(new Al(t2,this.keySelector,this.elementSelector,this.durationSelector,this.subjectSelector))},r}(),Al=function(r){jr2(t2,r);function t2(e,n,i,o2,u2){var s=r.call(this,e)||this;return s.keySelector=n,s.elementSelector=i,s.durationSelector=o2,s.subjectSelector=u2,s.groups=null,s.attemptedToUnsubscribe=false,s.count=0,s}return t2.prototype._next=function(e){var n;try{n=this.keySelector(e)}catch(i){this.error(i);return}this._group(e,n)},t2.prototype._group=function(e,n){var i=this.groups;i||(i=this.groups=new Map);var o2=i.get(n),u2;if(this.elementSelector)try{u2=this.elementSelector(e)}catch(a){this.error(a)}else u2=e;if(!o2){o2=this.subjectSelector?this.subjectSelector():new jl.Subject,i.set(n,o2);var s=new En2(n,o2,this);if(this.destination.next(s),this.durationSelector){var f=void 0;try{f=this.durationSelector(new En2(n,o2))}catch(a){this.error(a);return}this.add(f.subscribe(new Tl(n,o2,this)))}}o2.closed||o2.next(u2)},t2.prototype._error=function(e){var n=this.groups;n&&(n.forEach(function(i,o2){i.error(e)}),n.clear()),this.destination.error(e)},t2.prototype._complete=function(){var e=this.groups;e&&(e.forEach(function(n,i){n.complete()}),e.clear()),this.destination.complete()},t2.prototype.removeGroup=function(e){this.groups.delete(e)},t2.prototype.unsubscribe=function(){this.closed||(this.attemptedToUnsubscribe=true,this.count===0&&r.prototype.unsubscribe.call(this))},t2}(gu.Subscriber),Tl=function(r){jr2(t2,r);function t2(e,n,i){var o2=r.call(this,n)||this;return o2.key=e,o2.group=n,o2.parent=i,o2}return t2.prototype._next=function(e){this.complete()},t2.prototype._unsubscribe=function(){var e=this,n=e.parent,i=e.key;this.key=this.parent=null,n&&n.removeGroup(i)},t2}(gu.Subscriber),En2=function(r){jr2(t2,r);function t2(e,n,i){var o2=r.call(this)||this;return o2.key=e,o2.groupSubject=n,o2.refCountSubscription=i,o2}return t2.prototype._subscribe=function(e){var n=new xu.Subscription,i=this,o2=i.refCountSubscription,u2=i.groupSubject;return o2&&!o2.closed&&n.add(new Ml(o2)),n.add(u2.subscribe(e)),n},t2}(ql.Observable);fe2.GroupedObservable=En2;var Ml=function(r){jr2(t2,r);function t2(e){var n=r.call(this)||this;return n.parent=e,e.count++,n}return t2.prototype.unsubscribe=function(){var e=this.parent;!e.closed&&!this.closed&&(r.prototype.unsubscribe.call(this),e.count-=1,e.count===0&&e.attemptedToUnsubscribe&&e.unsubscribe())},t2}(xu.Subscription)});var Tn=c(ke2=>{"use strict";var Cl2=ke2&&ke2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(ke2,"__esModule",{value:true});var Il2=w2(),Nl=Ce(),Rl=function(r){Cl2(t2,r);function t2(e){var n=r.call(this)||this;return n._value=e,n}return Object.defineProperty(t2.prototype,"value",{get:function(){return this.getValue()},enumerable:true,configurable:true}),t2.prototype._subscribe=function(e){var n=r.prototype._subscribe.call(this,e);return n&&!n.closed&&e.next(this._value),n},t2.prototype.getValue=function(){if(this.hasError)throw this.thrownError;if(this.closed)throw new Nl.ObjectUnsubscribedError;return this._value},t2.prototype.next=function(e){r.prototype.next.call(this,this._value=e)},t2}(Il2.Subject);ke2.BehaviorSubject=Rl});var qu=c(Ve2=>{"use strict";var kl=Ve2&&Ve2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Ve2,"__esModule",{value:true});var Vl=O(),Wl=function(r){kl(t2,r);function t2(e,n){return r.call(this)||this}return t2.prototype.schedule=function(e,n){return n===void 0&&(n=0),this},t2}(Vl.Subscription);Ve2.Action=Wl});var le=c(We2=>{"use strict";var Fl=We2&&We2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(We2,"__esModule",{value:true});var Dl=qu(),Ul=function(r){Fl(t2,r);function t2(e,n){var i=r.call(this,e,n)||this;return i.scheduler=e,i.work=n,i.pending=false,i}return t2.prototype.schedule=function(e,n){if(n===void 0&&(n=0),this.closed)return this;this.state=e;var i=this.id,o2=this.scheduler;return i!=null&&(this.id=this.recycleAsyncId(o2,i,n)),this.pending=true,this.delay=n,this.id=this.id||this.requestAsyncId(o2,this.id,n),this},t2.prototype.requestAsyncId=function(e,n,i){return i===void 0&&(i=0),setInterval(e.flush.bind(e,this),i)},t2.prototype.recycleAsyncId=function(e,n,i){if(i===void 0&&(i=0),i!==null&&this.delay===i&&this.pending===false)return n;clearInterval(n)},t2.prototype.execute=function(e,n){if(this.closed)return new Error("executing a cancelled action");this.pending=false;var i=this._execute(e,n);if(i)return i;this.pending===false&&this.id!=null&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))},t2.prototype._execute=function(e,n){var i=false,o2=void 0;try{this.work(e)}catch(u2){i=true,o2=!!u2&&u2||new Error(u2)}if(i)return this.unsubscribe(),o2},t2.prototype._unsubscribe=function(){var e=this.id,n=this.scheduler,i=n.actions,o2=i.indexOf(this);this.work=null,this.state=null,this.pending=false,this.scheduler=null,o2!==-1&&i.splice(o2,1),e!=null&&(this.id=this.recycleAsyncId(n,e,null)),this.delay=null},t2}(Dl.Action);We2.AsyncAction=Ul});var ju=c(Fe2=>{"use strict";var Bl2=Fe2&&Fe2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Fe2,"__esModule",{value:true});var Ll=le(),zl=function(r){Bl2(t2,r);function t2(e,n){var i=r.call(this,e,n)||this;return i.scheduler=e,i.work=n,i}return t2.prototype.schedule=function(e,n){return n===void 0&&(n=0),n>0?r.prototype.schedule.call(this,e,n):(this.delay=n,this.state=e,this.scheduler.flush(this),this)},t2.prototype.execute=function(e,n){return n>0||this.closed?r.prototype.execute.call(this,e,n):this._execute(e,n)},t2.prototype.requestAsyncId=function(e,n,i){return i===void 0&&(i=0),i!==null&&i>0||i===null&&this.delay>0?r.prototype.requestAsyncId.call(this,e,n,i):e.flush(this)},t2}(Ll.AsyncAction);Fe2.QueueAction=zl});var Cn=c(Mn2=>{"use strict";Object.defineProperty(Mn2,"__esModule",{value:true});var Gl=function(){function r(t2,e){e===void 0&&(e=r.now),this.SchedulerAction=t2,this.now=e}return r.prototype.schedule=function(t2,e,n){return e===void 0&&(e=0),new this.SchedulerAction(this,t2).schedule(n,e)},r.now=function(){return Date.now()},r}();Mn2.Scheduler=Gl});var pe=c(De2=>{"use strict";var Yl=De2&&De2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(De2,"__esModule",{value:true});var Pu=Cn(),Ql=function(r){Yl(t2,r);function t2(e,n){n===void 0&&(n=Pu.Scheduler.now);var i=r.call(this,e,function(){return t2.delegate&&t2.delegate!==i?t2.delegate.now():n()})||this;return i.actions=[],i.active=false,i.scheduled=void 0,i}return t2.prototype.schedule=function(e,n,i){return n===void 0&&(n=0),t2.delegate&&t2.delegate!==this?t2.delegate.schedule(e,n,i):r.prototype.schedule.call(this,e,n,i)},t2.prototype.flush=function(e){var n=this.actions;if(this.active){n.push(e);return}var i;this.active=true;do if(i=e.execute(e.state,e.delay))break;while(e=n.shift());if(this.active=false,i){for(;e=n.shift();)e.unsubscribe();throw i}},t2}(Pu.Scheduler);De2.AsyncScheduler=Ql});var Eu=c(Ue2=>{"use strict";var Hl=Ue2&&Ue2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Ue2,"__esModule",{value:true});var Kl=pe(),Jl=function(r){Hl(t2,r);function t2(){return r!==null&&r.apply(this,arguments)||this}return t2}(Kl.AsyncScheduler);Ue2.QueueScheduler=Jl});var In=c(Be2=>{"use strict";Object.defineProperty(Be2,"__esModule",{value:true});var Zl=ju(),$l=Eu();Be2.queueScheduler=new $l.QueueScheduler(Zl.QueueAction);Be2.queue=Be2.queueScheduler});var P2=c(Le2=>{"use strict";Object.defineProperty(Le2,"__esModule",{value:true});var Au=d2();Le2.EMPTY=new Au.Observable(function(r){return r.complete()});function Xl(r){return r?ep(r):Le2.EMPTY}Le2.empty=Xl;function ep(r){return new Au.Observable(function(t2){return r.schedule(function(){return t2.complete()})})}});var E2=c(Nn2=>{"use strict";Object.defineProperty(Nn2,"__esModule",{value:true});function tp(r){return r&&typeof r.schedule=="function"}Nn2.isScheduler=tp});var kn=c(Rn2=>{"use strict";Object.defineProperty(Rn2,"__esModule",{value:true});Rn2.subscribeToArray=function(r){return function(t2){for(var e=0,n=r.length;e<n&&!t2.closed;e++)t2.next(r[e]);t2.complete()}}});var Pr=c(Vn2=>{"use strict";Object.defineProperty(Vn2,"__esModule",{value:true});var rp=d2(),np=O();function ip(r,t2){return new rp.Observable(function(e){var n=new np.Subscription,i=0;return n.add(t2.schedule(function(){if(i===r.length){e.complete();return}e.next(r[i++]),e.closed||n.add(this.schedule())})),n})}Vn2.scheduleArray=ip});var he=c(Wn2=>{"use strict";Object.defineProperty(Wn2,"__esModule",{value:true});var op=d2(),up=kn(),sp=Pr();function cp(r,t2){return t2?sp.scheduleArray(r,t2):new op.Observable(up.subscribeToArray(r))}Wn2.fromArray=cp});var ze=c(Fn2=>{"use strict";Object.defineProperty(Fn2,"__esModule",{value:true});var ap=E2(),fp=he(),lp=Pr();function pp(){for(var r=[],t2=0;t2<arguments.length;t2++)r[t2]=arguments[t2];var e=r[r.length-1];return ap.isScheduler(e)?(r.pop(),lp.scheduleArray(r,e)):fp.fromArray(r)}Fn2.of=pp});var Er=c(Dn2=>{"use strict";Object.defineProperty(Dn2,"__esModule",{value:true});var Tu=d2();function hp(r,t2){return t2?new Tu.Observable(function(e){return t2.schedule(bp,0,{error:r,subscriber:e})}):new Tu.Observable(function(e){return e.error(r)})}Dn2.throwError=hp;function bp(r){var t2=r.error,e=r.subscriber;e.error(t2)}});var Ye=c(Ge2=>{"use strict";Object.defineProperty(Ge2,"__esModule",{value:true});var _p=P2(),vp=ze(),dp=Er(),yp;(function(r){r.NEXT="N",r.ERROR="E",r.COMPLETE="C"})(yp=Ge2.NotificationKind||(Ge2.NotificationKind={}));var mp=function(){function r(t2,e,n){this.kind=t2,this.value=e,this.error=n,this.hasValue=t2==="N"}return r.prototype.observe=function(t2){switch(this.kind){case"N":return t2.next&&t2.next(this.value);case"E":return t2.error&&t2.error(this.error);case"C":return t2.complete&&t2.complete()}},r.prototype.do=function(t2,e,n){var i=this.kind;switch(i){case"N":return t2&&t2(this.value);case"E":return e&&e(this.error);case"C":return n&&n()}},r.prototype.accept=function(t2,e,n){return t2&&typeof t2.next=="function"?this.observe(t2):this.do(t2,e,n)},r.prototype.toObservable=function(){var t2=this.kind;switch(t2){case"N":return vp.of(this.value);case"E":return dp.throwError(this.error);case"C":return _p.empty()}throw new Error("unexpected notification kind value")},r.createNext=function(t2){return typeof t2<"u"?new r("N",t2):r.undefinedValueNotification},r.createError=function(t2){return new r("E",void 0,t2)},r.createComplete=function(){return r.completeNotification},r.completeNotification=new r("C"),r.undefinedValueNotification=new r("N",void 0),r}();Ge2.Notification=mp});var Bn=c(W2=>{"use strict";var Sp=W2&&W2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(W2,"__esModule",{value:true});var Op=_2(),Un2=Ye();function wp(r,t2){return t2===void 0&&(t2=0),function(n){return n.lift(new Mu(r,t2))}}W2.observeOn=wp;var Mu=function(){function r(t2,e){e===void 0&&(e=0),this.scheduler=t2,this.delay=e}return r.prototype.call=function(t2,e){return e.subscribe(new Cu(t2,this.scheduler,this.delay))},r}();W2.ObserveOnOperator=Mu;var Cu=function(r){Sp(t2,r);function t2(e,n,i){i===void 0&&(i=0);var o2=r.call(this,e)||this;return o2.scheduler=n,o2.delay=i,o2}return t2.dispatch=function(e){var n=e.notification,i=e.destination;n.observe(i),this.unsubscribe()},t2.prototype.scheduleMessage=function(e){var n=this.destination;n.add(this.scheduler.schedule(t2.dispatch,this.delay,new Iu(e,this.destination)))},t2.prototype._next=function(e){this.scheduleMessage(Un2.Notification.createNext(e))},t2.prototype._error=function(e){this.scheduleMessage(Un2.Notification.createError(e)),this.unsubscribe()},t2.prototype._complete=function(){this.scheduleMessage(Un2.Notification.createComplete()),this.unsubscribe()},t2}(Op.Subscriber);W2.ObserveOnSubscriber=Cu;var Iu=function(){function r(t2,e){this.notification=t2,this.destination=e}return r}();W2.ObserveOnMessage=Iu});var Ar=c(Qe2=>{"use strict";var gp=Qe2&&Qe2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Qe2,"__esModule",{value:true});var xp=w2(),qp=In(),jp=O(),Pp=Bn(),Ep=Ce(),Ap=wn(),Tp=function(r){gp(t2,r);function t2(e,n,i){e===void 0&&(e=Number.POSITIVE_INFINITY),n===void 0&&(n=Number.POSITIVE_INFINITY);var o2=r.call(this)||this;return o2.scheduler=i,o2._events=[],o2._infiniteTimeWindow=false,o2._bufferSize=e<1?1:e,o2._windowTime=n<1?1:n,n===Number.POSITIVE_INFINITY?(o2._infiniteTimeWindow=true,o2.next=o2.nextInfiniteTimeWindow):o2.next=o2.nextTimeWindow,o2}return t2.prototype.nextInfiniteTimeWindow=function(e){if(!this.isStopped){var n=this._events;n.push(e),n.length>this._bufferSize&&n.shift()}r.prototype.next.call(this,e)},t2.prototype.nextTimeWindow=function(e){this.isStopped||(this._events.push(new Mp(this._getNow(),e)),this._trimBufferThenGetEvents()),r.prototype.next.call(this,e)},t2.prototype._subscribe=function(e){var n=this._infiniteTimeWindow,i=n?this._events:this._trimBufferThenGetEvents(),o2=this.scheduler,u2=i.length,s;if(this.closed)throw new Ep.ObjectUnsubscribedError;if(this.isStopped||this.hasError?s=jp.Subscription.EMPTY:(this.observers.push(e),s=new Ap.SubjectSubscription(this,e)),o2&&e.add(e=new Pp.ObserveOnSubscriber(e,o2)),n)for(var f=0;f<u2&&!e.closed;f++)e.next(i[f]);else for(var f=0;f<u2&&!e.closed;f++)e.next(i[f].value);return this.hasError?e.error(this.thrownError):this.isStopped&&e.complete(),s},t2.prototype._getNow=function(){return(this.scheduler||qp.queue).now()},t2.prototype._trimBufferThenGetEvents=function(){for(var e=this._getNow(),n=this._bufferSize,i=this._windowTime,o2=this._events,u2=o2.length,s=0;s<u2&&!(e-o2[s].time<i);)s++;return u2>n&&(s=Math.max(s,u2-n)),s>0&&o2.splice(0,s),o2},t2}(xp.Subject);Qe2.ReplaySubject=Tp;var Mp=function(){function r(t2,e){this.time=t2,this.value=e}return r}()});var Ke=c(He2=>{"use strict";var Cp=He2&&He2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(He2,"__esModule",{value:true});var Ip=w2(),Nu=O(),Np=function(r){Cp(t2,r);function t2(){var e=r!==null&&r.apply(this,arguments)||this;return e.value=null,e.hasNext=false,e.hasCompleted=false,e}return t2.prototype._subscribe=function(e){return this.hasError?(e.error(this.thrownError),Nu.Subscription.EMPTY):this.hasCompleted&&this.hasNext?(e.next(this.value),e.complete(),Nu.Subscription.EMPTY):r.prototype._subscribe.call(this,e)},t2.prototype.next=function(e){this.hasCompleted||(this.value=e,this.hasNext=true)},t2.prototype.error=function(e){this.hasCompleted||r.prototype.error.call(this,e)},t2.prototype.complete=function(){this.hasCompleted=true,this.hasNext&&r.prototype.next.call(this,this.value),r.prototype.complete.call(this)},t2}(Ip.Subject);He2.AsyncSubject=Np});var ku=c(Mr2=>{"use strict";Object.defineProperty(Mr2,"__esModule",{value:true});var Rp=1,kp=function(){return Promise.resolve()}(),Tr2={};function Ru(r){return r in Tr2?(delete Tr2[r],true):false}Mr2.Immediate={setImmediate:function(r){var t2=Rp++;return Tr2[t2]=true,kp.then(function(){return Ru(t2)&&r()}),t2},clearImmediate:function(r){Ru(r)}};Mr2.TestTools={pending:function(){return Object.keys(Tr2).length}}});var Wu=c(Je2=>{"use strict";var Vp=Je2&&Je2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Je2,"__esModule",{value:true});var Vu=ku(),Wp=le(),Fp=function(r){Vp(t2,r);function t2(e,n){var i=r.call(this,e,n)||this;return i.scheduler=e,i.work=n,i}return t2.prototype.requestAsyncId=function(e,n,i){return i===void 0&&(i=0),i!==null&&i>0?r.prototype.requestAsyncId.call(this,e,n,i):(e.actions.push(this),e.scheduled||(e.scheduled=Vu.Immediate.setImmediate(e.flush.bind(e,null))))},t2.prototype.recycleAsyncId=function(e,n,i){if(i===void 0&&(i=0),i!==null&&i>0||i===null&&this.delay>0)return r.prototype.recycleAsyncId.call(this,e,n,i);e.actions.length===0&&(Vu.Immediate.clearImmediate(n),e.scheduled=void 0)},t2}(Wp.AsyncAction);Je2.AsapAction=Fp});var Fu=c(Ze2=>{"use strict";var Dp=Ze2&&Ze2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Ze2,"__esModule",{value:true});var Up=pe(),Bp=function(r){Dp(t2,r);function t2(){return r!==null&&r.apply(this,arguments)||this}return t2.prototype.flush=function(e){this.active=true,this.scheduled=void 0;var n=this.actions,i,o2=-1,u2=n.length;e=e||n.shift();do if(i=e.execute(e.state,e.delay))break;while(++o2<u2&&(e=n.shift()));if(this.active=false,i){for(;++o2<u2&&(e=n.shift());)e.unsubscribe();throw i}},t2}(Up.AsyncScheduler);Ze2.AsapScheduler=Bp});var Ln=c($e2=>{"use strict";Object.defineProperty($e2,"__esModule",{value:true});var Lp=Wu(),zp=Fu();$e2.asapScheduler=new zp.AsapScheduler(Lp.AsapAction);$e2.asap=$e2.asapScheduler});var x3=c(Xe2=>{"use strict";Object.defineProperty(Xe2,"__esModule",{value:true});var Gp=le(),Yp=pe();Xe2.asyncScheduler=new Yp.AsyncScheduler(Gp.AsyncAction);Xe2.async=Xe2.asyncScheduler});var Du=c(et2=>{"use strict";var Qp=et2&&et2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(et2,"__esModule",{value:true});var Hp=le(),Kp=function(r){Qp(t2,r);function t2(e,n){var i=r.call(this,e,n)||this;return i.scheduler=e,i.work=n,i}return t2.prototype.requestAsyncId=function(e,n,i){return i===void 0&&(i=0),i!==null&&i>0?r.prototype.requestAsyncId.call(this,e,n,i):(e.actions.push(this),e.scheduled||(e.scheduled=requestAnimationFrame(function(){return e.flush(null)})))},t2.prototype.recycleAsyncId=function(e,n,i){if(i===void 0&&(i=0),i!==null&&i>0||i===null&&this.delay>0)return r.prototype.recycleAsyncId.call(this,e,n,i);e.actions.length===0&&(cancelAnimationFrame(n),e.scheduled=void 0)},t2}(Hp.AsyncAction);et2.AnimationFrameAction=Kp});var Uu=c(tt2=>{"use strict";var Jp=tt2&&tt2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(tt2,"__esModule",{value:true});var Zp=pe(),$p=function(r){Jp(t2,r);function t2(){return r!==null&&r.apply(this,arguments)||this}return t2.prototype.flush=function(e){this.active=true,this.scheduled=void 0;var n=this.actions,i,o2=-1,u2=n.length;e=e||n.shift();do if(i=e.execute(e.state,e.delay))break;while(++o2<u2&&(e=n.shift()));if(this.active=false,i){for(;++o2<u2&&(e=n.shift());)e.unsubscribe();throw i}},t2}(Zp.AsyncScheduler);tt2.AnimationFrameScheduler=$p});var Bu=c(rt2=>{"use strict";Object.defineProperty(rt2,"__esModule",{value:true});var Xp=Du(),eh=Uu();rt2.animationFrameScheduler=new eh.AnimationFrameScheduler(Xp.AnimationFrameAction);rt2.animationFrame=rt2.animationFrameScheduler});var Gu=c(be2=>{"use strict";var Lu=be2&&be2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(be2,"__esModule",{value:true});var th=le(),rh=pe(),nh=function(r){Lu(t2,r);function t2(e,n){e===void 0&&(e=zu),n===void 0&&(n=Number.POSITIVE_INFINITY);var i=r.call(this,e,function(){return i.frame})||this;return i.maxFrames=n,i.frame=0,i.index=-1,i}return t2.prototype.flush=function(){for(var e=this,n=e.actions,i=e.maxFrames,o2,u2;(u2=n[0])&&u2.delay<=i&&(n.shift(),this.frame=u2.delay,!(o2=u2.execute(u2.state,u2.delay))););if(o2){for(;u2=n.shift();)u2.unsubscribe();throw o2}},t2.frameTimeFactor=10,t2}(rh.AsyncScheduler);be2.VirtualTimeScheduler=nh;var zu=function(r){Lu(t2,r);function t2(e,n,i){i===void 0&&(i=e.index+=1);var o2=r.call(this,e,n)||this;return o2.scheduler=e,o2.work=n,o2.index=i,o2.active=true,o2.index=e.index=i,o2}return t2.prototype.schedule=function(e,n){if(n===void 0&&(n=0),!this.id)return r.prototype.schedule.call(this,e,n);this.active=false;var i=new t2(this.scheduler,this.work);return this.add(i),i.schedule(e,n)},t2.prototype.requestAsyncId=function(e,n,i){i===void 0&&(i=0),this.delay=e.frame+i;var o2=e.actions;return o2.push(this),o2.sort(t2.sortActions),true},t2.prototype.recycleAsyncId=function(e,n,i){i===void 0&&(i=0)},t2.prototype._execute=function(e,n){if(this.active===true)return r.prototype._execute.call(this,e,n)},t2.sortActions=function(e,n){return e.delay===n.delay?e.index===n.index?0:e.index>n.index?1:-1:e.delay>n.delay?1:-1},t2}(th.AsyncAction);be2.VirtualAction=zu});var Cr=c(zn2=>{"use strict";Object.defineProperty(zn2,"__esModule",{value:true});function ih(){}zn2.noop=ih});var Yu=c(Gn2=>{"use strict";Object.defineProperty(Gn2,"__esModule",{value:true});var oh=d2();function uh(r){return!!r&&(r instanceof oh.Observable||typeof r.lift=="function"&&typeof r.subscribe=="function")}Gn2.isObservable=uh});var _e=c(Yn2=>{"use strict";Object.defineProperty(Yn2,"__esModule",{value:true});var sh=function(){function r(){return Error.call(this),this.message="argument out of range",this.name="ArgumentOutOfRangeError",this}return r.prototype=Object.create(Error.prototype),r}();Yn2.ArgumentOutOfRangeError=sh});var ve=c(Qn2=>{"use strict";Object.defineProperty(Qn2,"__esModule",{value:true});var ch=function(){function r(){return Error.call(this),this.message="no elements in sequence",this.name="EmptyError",this}return r.prototype=Object.create(Error.prototype),r}();Qn2.EmptyError=ch});var Kn=c(Hn2=>{"use strict";Object.defineProperty(Hn2,"__esModule",{value:true});var ah=function(){function r(){return Error.call(this),this.message="Timeout has occurred",this.name="TimeoutError",this}return r.prototype=Object.create(Error.prototype),r}();Hn2.TimeoutError=ah});var j=c(de2=>{"use strict";var fh=de2&&de2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(de2,"__esModule",{value:true});var lh=_2();function ph(r,t2){return function(n){if(typeof r!="function")throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");return n.lift(new Qu(r,t2))}}de2.map=ph;var Qu=function(){function r(t2,e){this.project=t2,this.thisArg=e}return r.prototype.call=function(t2,e){return e.subscribe(new hh(t2,this.project,this.thisArg))},r}();de2.MapOperator=Qu;var hh=function(r){fh(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;return o2.project=n,o2.count=0,o2.thisArg=i||o2,o2}return t2.prototype._next=function(e){var n;try{n=this.project.call(this.thisArg,e,this.count++)}catch(i){this.destination.error(i);return}this.destination.next(n)},t2}(lh.Subscriber)});var Ju=c(Jn2=>{"use strict";Object.defineProperty(Jn2,"__esModule",{value:true});var bh=d2(),Hu=Ke(),_h=j(),vh=Or(),dh=g(),yh=E2();function Ku(r,t2,e){if(t2)if(yh.isScheduler(t2))e=t2;else return function(){for(var n=[],i=0;i<arguments.length;i++)n[i]=arguments[i];return Ku(r,e).apply(void 0,n).pipe(_h.map(function(o2){return dh.isArray(o2)?t2.apply(void 0,o2):t2(o2)}))};return function(){for(var n=[],i=0;i<arguments.length;i++)n[i]=arguments[i];var o2=this,u2,s={context:o2,subject:u2,callbackFunc:r,scheduler:e};return new bh.Observable(function(f){if(e){var p={args:n,subscriber:f,params:s};return e.schedule(mh,0,p)}else{if(!u2){u2=new Hu.AsyncSubject;var a=function(){for(var b2=[],v3=0;v3<arguments.length;v3++)b2[v3]=arguments[v3];u2.next(b2.length<=1?b2[0]:b2),u2.complete()};try{r.apply(o2,n.concat([a]))}catch(b2){vh.canReportError(u2)?u2.error(b2):console.warn(b2)}}return u2.subscribe(f)}})}}Jn2.bindCallback=Ku;function mh(r){var t2=this,e=this,n=r.args,i=r.subscriber,o2=r.params,u2=o2.callbackFunc,s=o2.context,f=o2.scheduler,a=o2.subject;if(!a){a=o2.subject=new Hu.AsyncSubject;var p=function(){for(var b2=[],v3=0;v3<arguments.length;v3++)b2[v3]=arguments[v3];var q2=b2.length<=1?b2[0]:b2;t2.add(f.schedule(Sh,0,{value:q2,subject:a}))};try{u2.apply(s,n.concat([p]))}catch(b2){a.error(b2)}}this.add(a.subscribe(i))}function Sh(r){var t2=r.value,e=r.subject;e.next(t2),e.complete()}});var es=c(Zn2=>{"use strict";Object.defineProperty(Zn2,"__esModule",{value:true});var Oh=d2(),$u=Ke(),wh=j(),gh=Or(),xh=E2(),qh=g();function Xu(r,t2,e){if(t2)if(xh.isScheduler(t2))e=t2;else return function(){for(var n=[],i=0;i<arguments.length;i++)n[i]=arguments[i];return Xu(r,e).apply(void 0,n).pipe(wh.map(function(o2){return qh.isArray(o2)?t2.apply(void 0,o2):t2(o2)}))};return function(){for(var n=[],i=0;i<arguments.length;i++)n[i]=arguments[i];var o2={subject:void 0,args:n,callbackFunc:r,scheduler:e,context:this};return new Oh.Observable(function(u2){var s=o2.context,f=o2.subject;if(e)return e.schedule(jh,0,{params:o2,subscriber:u2,context:s});if(!f){f=o2.subject=new $u.AsyncSubject;var a=function(){for(var p=[],b2=0;b2<arguments.length;b2++)p[b2]=arguments[b2];var v3=p.shift();if(v3){f.error(v3);return}f.next(p.length<=1?p[0]:p),f.complete()};try{r.apply(s,n.concat([a]))}catch(p){gh.canReportError(f)?f.error(p):console.warn(p)}}return f.subscribe(u2)})}}Zn2.bindNodeCallback=Xu;function jh(r){var t2=this,e=r.params,n=r.subscriber,i=r.context,o2=e.callbackFunc,u2=e.args,s=e.scheduler,f=e.subject;if(!f){f=e.subject=new $u.AsyncSubject;var a=function(){for(var p=[],b2=0;b2<arguments.length;b2++)p[b2]=arguments[b2];var v3=p.shift();if(v3)t2.add(s.schedule(Zu,0,{err:v3,subject:f}));else{var q2=p.length<=1?p[0]:p;t2.add(s.schedule(Ph,0,{value:q2,subject:f}))}};try{o2.apply(i,u2.concat([a]))}catch(p){this.add(s.schedule(Zu,0,{err:p,subject:f}))}}this.add(f.subscribe(n))}function Ph(r){var t2=r.value,e=r.subject;e.next(t2),e.complete()}function Zu(r){var t2=r.err,e=r.subject;e.error(t2)}});var F3=c(nt2=>{"use strict";var Eh=nt2&&nt2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(nt2,"__esModule",{value:true});var Ah=_2(),Th=function(r){Eh(t2,r);function t2(){return r!==null&&r.apply(this,arguments)||this}return t2.prototype.notifyNext=function(e,n,i,o2,u2){this.destination.next(n)},t2.prototype.notifyError=function(e,n){this.destination.error(e)},t2.prototype.notifyComplete=function(e){this.destination.complete()},t2}(Ah.Subscriber);nt2.OuterSubscriber=Th});var ts=c(it2=>{"use strict";var Mh=it2&&it2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(it2,"__esModule",{value:true});var Ch=_2(),Ih=function(r){Mh(t2,r);function t2(e,n,i){var o2=r.call(this)||this;return o2.parent=e,o2.outerValue=n,o2.outerIndex=i,o2.index=0,o2}return t2.prototype._next=function(e){this.parent.notifyNext(this.outerValue,e,this.outerIndex,this.index++,this)},t2.prototype._error=function(e){this.parent.notifyError(e,this),this.unsubscribe()},t2.prototype._complete=function(){this.parent.notifyComplete(this),this.unsubscribe()},t2}(Ch.Subscriber);it2.InnerSubscriber=Ih});var rs=c($n2=>{"use strict";Object.defineProperty($n2,"__esModule",{value:true});var Nh=vr();$n2.subscribeToPromise=function(r){return function(t2){return r.then(function(e){t2.closed||(t2.next(e),t2.complete())},function(e){return t2.error(e)}).then(null,Nh.hostReportError),t2}}});var me=c(ye2=>{"use strict";Object.defineProperty(ye2,"__esModule",{value:true});function ns2(){return typeof Symbol!="function"||!Symbol.iterator?"@@iterator":Symbol.iterator}ye2.getSymbolIterator=ns2;ye2.iterator=ns2();ye2.$$iterator=ye2.iterator});var is=c(Xn2=>{"use strict";Object.defineProperty(Xn2,"__esModule",{value:true});var Rh=me();Xn2.subscribeToIterable=function(r){return function(t2){var e=r[Rh.iterator]();do{var n=void 0;try{n=e.next()}catch(i){return t2.error(i),t2}if(n.done){t2.complete();break}if(t2.next(n.value),t2.closed)break}while(true);return typeof e.return=="function"&&t2.add(function(){e.return&&e.return()}),t2}}});var os=c(ei2=>{"use strict";Object.defineProperty(ei2,"__esModule",{value:true});var kh=Y2();ei2.subscribeToObservable=function(r){return function(t2){var e=r[kh.observable]();if(typeof e.subscribe!="function")throw new TypeError("Provided object does not correctly implement Symbol.observable");return e.subscribe(t2)}}});var ri=c(ti2=>{"use strict";Object.defineProperty(ti2,"__esModule",{value:true});ti2.isArrayLike=function(r){return r&&typeof r.length=="number"&&typeof r!="function"}});var ii=c(ni2=>{"use strict";Object.defineProperty(ni2,"__esModule",{value:true});function Vh(r){return!!r&&typeof r.subscribe!="function"&&typeof r.then=="function"}ni2.isPromise=Vh});var ot=c(oi2=>{"use strict";Object.defineProperty(oi2,"__esModule",{value:true});var Wh=kn(),Fh=rs(),Dh=is(),Uh=os(),Bh=ri(),Lh=ii(),zh=dr(),Gh=me(),Yh=Y2();oi2.subscribeTo=function(r){if(!!r&&typeof r[Yh.observable]=="function")return Uh.subscribeToObservable(r);if(Bh.isArrayLike(r))return Wh.subscribeToArray(r);if(Lh.isPromise(r))return Fh.subscribeToPromise(r);if(!!r&&typeof r[Gh.iterator]=="function")return Dh.subscribeToIterable(r);var t2=zh.isObject(r)?"an invalid object":"\'"+r+"\'",e="You provided "+t2+" where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.";throw new TypeError(e)}});var D2=c(ui2=>{"use strict";Object.defineProperty(ui2,"__esModule",{value:true});var Qh=ts(),Hh=ot(),Kh=d2();function Jh(r,t2,e,n,i){if(i===void 0&&(i=new Qh.InnerSubscriber(r,e,n)),!i.closed)return t2 instanceof Kh.Observable?t2.subscribe(i):Hh.subscribeTo(t2)(i)}ui2.subscribeToResult=Jh});var Ir=c(H3=>{"use strict";var Zh=H3&&H3.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(H3,"__esModule",{value:true});var $h=E2(),Xh=g(),eb=F3(),tb=D2(),rb=he(),us2={};function nb(){for(var r=[],t2=0;t2<arguments.length;t2++)r[t2]=arguments[t2];var e=void 0,n=void 0;return $h.isScheduler(r[r.length-1])&&(n=r.pop()),typeof r[r.length-1]=="function"&&(e=r.pop()),r.length===1&&Xh.isArray(r[0])&&(r=r[0]),rb.fromArray(r,n).lift(new ss2(e))}H3.combineLatest=nb;var ss2=function(){function r(t2){this.resultSelector=t2}return r.prototype.call=function(t2,e){return e.subscribe(new cs2(t2,this.resultSelector))},r}();H3.CombineLatestOperator=ss2;var cs2=function(r){Zh(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.resultSelector=n,i.active=0,i.values=[],i.observables=[],i}return t2.prototype._next=function(e){this.values.push(us2),this.observables.push(e)},t2.prototype._complete=function(){var e=this.observables,n=e.length;if(n===0)this.destination.complete();else{this.active=n,this.toRespond=n;for(var i=0;i<n;i++){var o2=e[i];this.add(tb.subscribeToResult(this,o2,void 0,i))}}},t2.prototype.notifyComplete=function(e){(this.active-=1)===0&&this.destination.complete()},t2.prototype.notifyNext=function(e,n,i){var o2=this.values,u2=o2[i],s=this.toRespond?u2===us2?--this.toRespond:this.toRespond:0;o2[i]=n,s===0&&(this.resultSelector?this._tryResultSelector(o2):this.destination.next(o2.slice()))},t2.prototype._tryResultSelector=function(e){var n;try{n=this.resultSelector.apply(this,e)}catch(i){this.destination.error(i);return}this.destination.next(n)},t2}(eb.OuterSubscriber);H3.CombineLatestSubscriber=cs2});var as=c(si2=>{"use strict";Object.defineProperty(si2,"__esModule",{value:true});var ib=d2(),ob=O(),ub=Y2();function sb(r,t2){return new ib.Observable(function(e){var n=new ob.Subscription;return n.add(t2.schedule(function(){var i=r[ub.observable]();n.add(i.subscribe({next:function(o2){n.add(t2.schedule(function(){return e.next(o2)}))},error:function(o2){n.add(t2.schedule(function(){return e.error(o2)}))},complete:function(){n.add(t2.schedule(function(){return e.complete()}))}}))})),n})}si2.scheduleObservable=sb});var fs2=c(ci2=>{"use strict";Object.defineProperty(ci2,"__esModule",{value:true});var cb=d2(),ab=O();function fb(r,t2){return new cb.Observable(function(e){var n=new ab.Subscription;return n.add(t2.schedule(function(){return r.then(function(i){n.add(t2.schedule(function(){e.next(i),n.add(t2.schedule(function(){return e.complete()}))}))},function(i){n.add(t2.schedule(function(){return e.error(i)}))})})),n})}ci2.schedulePromise=fb});var ls=c(ai2=>{"use strict";Object.defineProperty(ai2,"__esModule",{value:true});var lb=d2(),pb=O(),hb=me();function bb(r,t2){if(!r)throw new Error("Iterable cannot be null");return new lb.Observable(function(e){var n=new pb.Subscription,i;return n.add(function(){i&&typeof i.return=="function"&&i.return()}),n.add(t2.schedule(function(){i=r[hb.iterator](),n.add(t2.schedule(function(){if(!e.closed){var o2,u2;try{var s=i.next();o2=s.value,u2=s.done}catch(f){e.error(f);return}u2?e.complete():(e.next(o2),this.schedule())}}))})),n})}ai2.scheduleIterable=bb});var ps=c(fi2=>{"use strict";Object.defineProperty(fi2,"__esModule",{value:true});var _b=Y2();function vb(r){return r&&typeof r[_b.observable]=="function"}fi2.isInteropObservable=vb});var hs=c(li2=>{"use strict";Object.defineProperty(li2,"__esModule",{value:true});var db=me();function yb(r){return r&&typeof r[db.iterator]=="function"}li2.isIterable=yb});var hi=c(pi2=>{"use strict";Object.defineProperty(pi2,"__esModule",{value:true});var mb=as(),Sb=fs2(),Ob=Pr(),wb=ls(),gb=ps(),xb=ii(),qb=ri(),jb=hs();function Pb(r,t2){if(r!=null){if(gb.isInteropObservable(r))return mb.scheduleObservable(r,t2);if(xb.isPromise(r))return Sb.schedulePromise(r,t2);if(qb.isArrayLike(r))return Ob.scheduleArray(r,t2);if(jb.isIterable(r)||typeof r=="string")return wb.scheduleIterable(r,t2)}throw new TypeError((r!==null&&typeof r||r)+" is not observable")}pi2.scheduled=Pb});var A3=c(bi2=>{"use strict";Object.defineProperty(bi2,"__esModule",{value:true});var bs2=d2(),Eb=ot(),Ab=hi();function Tb(r,t2){return t2?Ab.scheduled(r,t2):r instanceof bs2.Observable?r:new bs2.Observable(Eb.subscribeTo(r))}bi2.from=Tb});var y3=c(N3=>{"use strict";var Nr2=N3&&N3.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(N3,"__esModule",{value:true});var Rr2=_2(),Mb=d2(),Cb=ot(),Ib=function(r){Nr2(t2,r);function t2(e){var n=r.call(this)||this;return n.parent=e,n}return t2.prototype._next=function(e){this.parent.notifyNext(e)},t2.prototype._error=function(e){this.parent.notifyError(e),this.unsubscribe()},t2.prototype._complete=function(){this.parent.notifyComplete(),this.unsubscribe()},t2}(Rr2.Subscriber);N3.SimpleInnerSubscriber=Ib;var Nb=function(r){Nr2(t2,r);function t2(e,n,i){var o2=r.call(this)||this;return o2.parent=e,o2.outerValue=n,o2.outerIndex=i,o2}return t2.prototype._next=function(e){this.parent.notifyNext(this.outerValue,e,this.outerIndex,this)},t2.prototype._error=function(e){this.parent.notifyError(e),this.unsubscribe()},t2.prototype._complete=function(){this.parent.notifyComplete(this),this.unsubscribe()},t2}(Rr2.Subscriber);N3.ComplexInnerSubscriber=Nb;var Rb=function(r){Nr2(t2,r);function t2(){return r!==null&&r.apply(this,arguments)||this}return t2.prototype.notifyNext=function(e){this.destination.next(e)},t2.prototype.notifyError=function(e){this.destination.error(e)},t2.prototype.notifyComplete=function(){this.destination.complete()},t2}(Rr2.Subscriber);N3.SimpleOuterSubscriber=Rb;var kb=function(r){Nr2(t2,r);function t2(){return r!==null&&r.apply(this,arguments)||this}return t2.prototype.notifyNext=function(e,n,i,o2){this.destination.next(n)},t2.prototype.notifyError=function(e){this.destination.error(e)},t2.prototype.notifyComplete=function(e){this.destination.complete()},t2}(Rr2.Subscriber);N3.ComplexOuterSubscriber=kb;function Vb(r,t2){if(!t2.closed){if(r instanceof Mb.Observable)return r.subscribe(t2);var e;try{e=Cb.subscribeTo(r)(t2)}catch(n){t2.error(n)}return e}}N3.innerSubscribe=Vb});var ut=c(U2=>{"use strict";var Wb=U2&&U2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(U2,"__esModule",{value:true});var Fb=j(),Db=A3(),_i2=y3();function vi2(r,t2,e){return e===void 0&&(e=Number.POSITIVE_INFINITY),typeof t2=="function"?function(n){return n.pipe(vi2(function(i,o2){return Db.from(r(i,o2)).pipe(Fb.map(function(u2,s){return t2(i,u2,o2,s)}))},e))}:(typeof t2=="number"&&(e=t2),function(n){return n.lift(new _s2(r,e))})}U2.mergeMap=vi2;var _s2=function(){function r(t2,e){e===void 0&&(e=Number.POSITIVE_INFINITY),this.project=t2,this.concurrent=e}return r.prototype.call=function(t2,e){return e.subscribe(new vs2(t2,this.project,this.concurrent))},r}();U2.MergeMapOperator=_s2;var vs2=function(r){Wb(t2,r);function t2(e,n,i){i===void 0&&(i=Number.POSITIVE_INFINITY);var o2=r.call(this,e)||this;return o2.project=n,o2.concurrent=i,o2.hasCompleted=false,o2.buffer=[],o2.active=0,o2.index=0,o2}return t2.prototype._next=function(e){this.active<this.concurrent?this._tryNext(e):this.buffer.push(e)},t2.prototype._tryNext=function(e){var n,i=this.index++;try{n=this.project(e,i)}catch(o2){this.destination.error(o2);return}this.active++,this._innerSub(n)},t2.prototype._innerSub=function(e){var n=new _i2.SimpleInnerSubscriber(this),i=this.destination;i.add(n);var o2=_i2.innerSubscribe(e,n);o2!==n&&i.add(o2)},t2.prototype._complete=function(){this.hasCompleted=true,this.active===0&&this.buffer.length===0&&this.destination.complete(),this.unsubscribe()},t2.prototype.notifyNext=function(e){this.destination.next(e)},t2.prototype.notifyComplete=function(){var e=this.buffer;this.active--,e.length>0?this._next(e.shift()):this.active===0&&this.hasCompleted&&this.destination.complete()},t2}(_i2.SimpleOuterSubscriber);U2.MergeMapSubscriber=vs2;U2.flatMap=vi2});var kr=c(di2=>{"use strict";Object.defineProperty(di2,"__esModule",{value:true});var Ub=ut(),Bb=V();function Lb(r){return r===void 0&&(r=Number.POSITIVE_INFINITY),Ub.mergeMap(Bb.identity,r)}di2.mergeAll=Lb});var mi=c(yi2=>{"use strict";Object.defineProperty(yi2,"__esModule",{value:true});var zb=kr();function Gb(){return zb.mergeAll(1)}yi2.concatAll=Gb});var st=c(Si2=>{"use strict";Object.defineProperty(Si2,"__esModule",{value:true});var Yb=ze(),Qb=mi();function Hb(){for(var r=[],t2=0;t2<arguments.length;t2++)r[t2]=arguments[t2];return Qb.concatAll()(Yb.of.apply(void 0,r))}Si2.concat=Hb});var Vr=c(Oi2=>{"use strict";Object.defineProperty(Oi2,"__esModule",{value:true});var Kb=d2(),Jb=A3(),Zb=P2();function $b(r){return new Kb.Observable(function(t2){var e;try{e=r()}catch(i){t2.error(i);return}var n=e?Jb.from(e):Zb.empty();return n.subscribe(t2)})}Oi2.defer=$b});var ys=c(wi2=>{"use strict";Object.defineProperty(wi2,"__esModule",{value:true});var Xb=d2(),ds2=g(),e_=j(),t_=dr(),r_=A3();function n_(){for(var r=[],t2=0;t2<arguments.length;t2++)r[t2]=arguments[t2];if(r.length===1){var e=r[0];if(ds2.isArray(e))return Wr2(e,null);if(t_.isObject(e)&&Object.getPrototypeOf(e)===Object.prototype){var n=Object.keys(e);return Wr2(n.map(function(o2){return e[o2]}),n)}}if(typeof r[r.length-1]=="function"){var i=r.pop();return r=r.length===1&&ds2.isArray(r[0])?r[0]:r,Wr2(r,null).pipe(e_.map(function(o2){return i.apply(void 0,o2)}))}return Wr2(r,null)}wi2.forkJoin=n_;function Wr2(r,t2){return new Xb.Observable(function(e){var n=r.length;if(n===0){e.complete();return}for(var i=new Array(n),o2=0,u2=0,s=function(a){var p=r_.from(r[a]),b2=false;e.add(p.subscribe({next:function(v3){b2||(b2=true,u2++),i[a]=v3},error:function(v3){return e.error(v3)},complete:function(){o2++,(o2===n||!b2)&&(u2===n&&e.next(t2?t2.reduce(function(v3,q2,I2){return v3[q2]=i[I2],v3},{}):i),e.complete())}}))},f=0;f<n;f++)s(f)})}});var Os=c(gi2=>{"use strict";Object.defineProperty(gi2,"__esModule",{value:true});var i_=d2(),o_=g(),u_=ue(),s_=j(),G0=function(){return Object.prototype.toString}();function ms2(r,t2,e,n){return u_.isFunction(e)&&(n=e,e=void 0),n?ms2(r,t2,e).pipe(s_.map(function(i){return o_.isArray(i)?n.apply(void 0,i):n(i)})):new i_.Observable(function(i){function o2(u2){arguments.length>1?i.next(Array.prototype.slice.call(arguments)):i.next(u2)}Ss2(r,t2,o2,i,e)})}gi2.fromEvent=ms2;function Ss2(r,t2,e,n,i){var o2;if(f_(r)){var u2=r;r.addEventListener(t2,e,i),o2=function(){return u2.removeEventListener(t2,e,i)}}else if(a_(r)){var s=r;r.on(t2,e),o2=function(){return s.off(t2,e)}}else if(c_(r)){var f=r;r.addListener(t2,e),o2=function(){return f.removeListener(t2,e)}}else if(r&&r.length)for(var a=0,p=r.length;a<p;a++)Ss2(r[a],t2,e,n,i);else throw new TypeError("Invalid event target");n.add(o2)}function c_(r){return r&&typeof r.addListener=="function"&&typeof r.removeListener=="function"}function a_(r){return r&&typeof r.on=="function"&&typeof r.off=="function"}function f_(r){return r&&typeof r.addEventListener=="function"&&typeof r.removeEventListener=="function"}});var gs=c(xi2=>{"use strict";Object.defineProperty(xi2,"__esModule",{value:true});var l_=d2(),p_=g(),h_=ue(),b_=j();function ws2(r,t2,e){return e?ws2(r,t2).pipe(b_.map(function(n){return p_.isArray(n)?e.apply(void 0,n):e(n)})):new l_.Observable(function(n){var i=function(){for(var u2=[],s=0;s<arguments.length;s++)u2[s]=arguments[s];return n.next(u2.length===1?u2[0]:u2)},o2;try{o2=r(i)}catch(u2){n.error(u2);return}if(!!h_.isFunction(t2))return function(){return t2(i,o2)}})}xi2.fromEventPattern=ws2});var qs=c(qi2=>{"use strict";Object.defineProperty(qi2,"__esModule",{value:true});var __=d2(),xs2=V(),v_=E2();function d_(r,t2,e,n,i){var o2,u2;if(arguments.length==1){var s=r;u2=s.initialState,t2=s.condition,e=s.iterate,o2=s.resultSelector||xs2.identity,i=s.scheduler}else n===void 0||v_.isScheduler(n)?(u2=r,o2=xs2.identity,i=n):(u2=r,o2=n);return new __.Observable(function(f){var a=u2;if(i)return i.schedule(y_,0,{subscriber:f,iterate:e,condition:t2,resultSelector:o2,state:a});do{if(t2){var p=void 0;try{p=t2(a)}catch(v3){f.error(v3);return}if(!p){f.complete();break}}var b2=void 0;try{b2=o2(a)}catch(v3){f.error(v3);return}if(f.next(b2),f.closed)break;try{a=e(a)}catch(v3){f.error(v3);return}}while(true)})}qi2.generate=d_;function y_(r){var t2=r.subscriber,e=r.condition;if(!t2.closed){if(r.needIterate)try{r.state=r.iterate(r.state)}catch(o2){t2.error(o2);return}else r.needIterate=true;if(e){var n=void 0;try{n=e(r.state)}catch(o2){t2.error(o2);return}if(!n){t2.complete();return}if(t2.closed)return}var i;try{i=r.resultSelector(r.state)}catch(o2){t2.error(o2);return}if(!t2.closed&&(t2.next(i),!t2.closed))return this.schedule(r)}}});var Ps=c(ji2=>{"use strict";Object.defineProperty(ji2,"__esModule",{value:true});var m_=Vr(),js2=P2();function S_(r,t2,e){return t2===void 0&&(t2=js2.EMPTY),e===void 0&&(e=js2.EMPTY),m_.defer(function(){return r()?t2:e})}ji2.iif=S_});var ct=c(Pi2=>{"use strict";Object.defineProperty(Pi2,"__esModule",{value:true});var O_=g();function w_(r){return!O_.isArray(r)&&r-parseFloat(r)+1>=0}Pi2.isNumeric=w_});var As=c(Ei2=>{"use strict";Object.defineProperty(Ei2,"__esModule",{value:true});var g_=d2(),Es2=x3(),x_=ct();function q_(r,t2){return r===void 0&&(r=0),t2===void 0&&(t2=Es2.async),(!x_.isNumeric(r)||r<0)&&(r=0),(!t2||typeof t2.schedule!="function")&&(t2=Es2.async),new g_.Observable(function(e){return e.add(t2.schedule(j_,r,{subscriber:e,counter:0,period:r})),e})}Ei2.interval=q_;function j_(r){var t2=r.subscriber,e=r.counter,n=r.period;t2.next(e),this.schedule({subscriber:t2,counter:e+1,period:n},n)}});var Ti=c(Ai2=>{"use strict";Object.defineProperty(Ai2,"__esModule",{value:true});var P_=d2(),E_=E2(),A_=kr(),T_=he();function M_(){for(var r=[],t2=0;t2<arguments.length;t2++)r[t2]=arguments[t2];var e=Number.POSITIVE_INFINITY,n=null,i=r[r.length-1];return E_.isScheduler(i)?(n=r.pop(),r.length>1&&typeof r[r.length-1]=="number"&&(e=r.pop())):typeof i=="number"&&(e=r.pop()),n===null&&r.length===1&&r[0]instanceof P_.Observable?r[0]:A_.mergeAll(e)(T_.fromArray(r,n))}Ai2.merge=M_});var Mi=c(at2=>{"use strict";Object.defineProperty(at2,"__esModule",{value:true});var C_=d2(),I_=Cr();at2.NEVER=new C_.Observable(I_.noop);function N_(){return at2.NEVER}at2.never=N_});var Ts=c(Ii2=>{"use strict";Object.defineProperty(Ii2,"__esModule",{value:true});var R_=d2(),k_=A3(),V_=g(),W_=P2();function Ci2(){for(var r=[],t2=0;t2<arguments.length;t2++)r[t2]=arguments[t2];if(r.length===0)return W_.EMPTY;var e=r[0],n=r.slice(1);return r.length===1&&V_.isArray(e)?Ci2.apply(void 0,e):new R_.Observable(function(i){var o2=function(){return i.add(Ci2.apply(void 0,n).subscribe(i))};return k_.from(e).subscribe({next:function(u2){i.next(u2)},error:o2,complete:o2})})}Ii2.onErrorResumeNext=Ci2});var Is=c(Fr2=>{"use strict";Object.defineProperty(Fr2,"__esModule",{value:true});var Ms2=d2(),F_=O();function D_(r,t2){return t2?new Ms2.Observable(function(e){var n=Object.keys(r),i=new F_.Subscription;return i.add(t2.schedule(Cs2,0,{keys:n,index:0,subscriber:e,subscription:i,obj:r})),i}):new Ms2.Observable(function(e){for(var n=Object.keys(r),i=0;i<n.length&&!e.closed;i++){var o2=n[i];r.hasOwnProperty(o2)&&e.next([o2,r[o2]])}e.complete()})}Fr2.pairs=D_;function Cs2(r){var t2=r.keys,e=r.index,n=r.subscriber,i=r.subscription,o2=r.obj;if(!n.closed)if(e<t2.length){var u2=t2[e];n.next([u2,o2[u2]]),i.add(this.schedule({keys:t2,index:e+1,subscriber:n,subscription:i,obj:o2}))}else n.complete()}Fr2.dispatch=Cs2});var Ri=c(Ni2=>{"use strict";Object.defineProperty(Ni2,"__esModule",{value:true});function U_(r,t2){function e(){return!e.pred.apply(e.thisArg,arguments)}return e.pred=r,e.thisArg=t2,e}Ni2.not=U_});var K=c(ft2=>{"use strict";var B_=ft2&&ft2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(ft2,"__esModule",{value:true});var L_=_2();function z_(r,t2){return function(n){return n.lift(new G_(r,t2))}}ft2.filter=z_;var G_=function(){function r(t2,e){this.predicate=t2,this.thisArg=e}return r.prototype.call=function(t2,e){return e.subscribe(new Y_(t2,this.predicate,this.thisArg))},r}(),Y_=function(r){B_(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;return o2.predicate=n,o2.thisArg=i,o2.count=0,o2}return t2.prototype._next=function(e){var n;try{n=this.predicate.call(this.thisArg,e,this.count++)}catch(i){this.destination.error(i);return}n&&this.destination.next(e)},t2}(L_.Subscriber)});var Vs=c(ki2=>{"use strict";Object.defineProperty(ki2,"__esModule",{value:true});var Q_=Ri(),Ns2=ot(),Rs2=K(),ks2=d2();function H_(r,t2,e){return[Rs2.filter(t2,e)(new ks2.Observable(Ns2.subscribeTo(r))),Rs2.filter(Q_.not(t2,e))(new ks2.Observable(Ns2.subscribeTo(r)))]}ki2.partition=H_});var Vi=c(J2=>{"use strict";var K_=J2&&J2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(J2,"__esModule",{value:true});var J_=g(),Z_=he(),$_=F3(),X_=D2();function ev2(){for(var r=[],t2=0;t2<arguments.length;t2++)r[t2]=arguments[t2];if(r.length===1)if(J_.isArray(r[0]))r=r[0];else return r[0];return Z_.fromArray(r,void 0).lift(new Ws2)}J2.race=ev2;var Ws2=function(){function r(){}return r.prototype.call=function(t2,e){return e.subscribe(new Fs2(t2))},r}();J2.RaceOperator=Ws2;var Fs2=function(r){K_(t2,r);function t2(e){var n=r.call(this,e)||this;return n.hasFirst=false,n.observables=[],n.subscriptions=[],n}return t2.prototype._next=function(e){this.observables.push(e)},t2.prototype._complete=function(){var e=this.observables,n=e.length;if(n===0)this.destination.complete();else{for(var i=0;i<n&&!this.hasFirst;i++){var o2=e[i],u2=X_.subscribeToResult(this,o2,void 0,i);this.subscriptions&&this.subscriptions.push(u2),this.add(u2)}this.observables=null}},t2.prototype.notifyNext=function(e,n,i){if(!this.hasFirst){this.hasFirst=true;for(var o2=0;o2<this.subscriptions.length;o2++)if(o2!==i){var u2=this.subscriptions[o2];u2.unsubscribe(),this.remove(u2)}this.subscriptions=null}this.destination.next(n)},t2}($_.OuterSubscriber);J2.RaceSubscriber=Fs2});var Us=c(Dr2=>{"use strict";Object.defineProperty(Dr2,"__esModule",{value:true});var tv=d2();function rv(r,t2,e){return r===void 0&&(r=0),new tv.Observable(function(n){t2===void 0&&(t2=r,r=0);var i=0,o2=r;if(e)return e.schedule(Ds2,0,{index:i,count:t2,start:r,subscriber:n});do{if(i++>=t2){n.complete();break}if(n.next(o2++),n.closed)break}while(true)})}Dr2.range=rv;function Ds2(r){var t2=r.start,e=r.index,n=r.count,i=r.subscriber;if(e>=n){i.complete();return}i.next(t2),!i.closed&&(r.index=e+1,r.start=t2+1,this.schedule(r))}Dr2.dispatch=Ds2});var Fi=c(Wi2=>{"use strict";Object.defineProperty(Wi2,"__esModule",{value:true});var nv=d2(),iv=x3(),Bs2=ct(),Ls2=E2();function ov(r,t2,e){r===void 0&&(r=0);var n=-1;return Bs2.isNumeric(t2)?n=Number(t2)<1&&1||Number(t2):Ls2.isScheduler(t2)&&(e=t2),Ls2.isScheduler(e)||(e=iv.async),new nv.Observable(function(i){var o2=Bs2.isNumeric(r)?r:+r-e.now();return e.schedule(uv,o2,{index:0,period:n,subscriber:i})})}Wi2.timer=ov;function uv(r){var t2=r.index,e=r.period,n=r.subscriber;if(n.next(t2),!n.closed){if(e===-1)return n.complete();r.index=t2+1,this.schedule(r,e)}}});var zs=c(Di2=>{"use strict";Object.defineProperty(Di2,"__esModule",{value:true});var sv=d2(),cv=A3(),av=P2();function fv(r,t2){return new sv.Observable(function(e){var n;try{n=r()}catch(s){e.error(s);return}var i;try{i=t2(n)}catch(s){e.error(s);return}var o2=i?cv.from(i):av.EMPTY,u2=o2.subscribe(e);return function(){u2.unsubscribe(),n&&n.unsubscribe()}})}Di2.using=fv});var Br=c(Z2=>{"use strict";var Gs2=Z2&&Z2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Z2,"__esModule",{value:true});var lv=he(),pv=g(),hv=_2(),Ur2=me(),Ui2=y3();function bv(){for(var r=[],t2=0;t2<arguments.length;t2++)r[t2]=arguments[t2];var e=r[r.length-1];return typeof e=="function"&&r.pop(),lv.fromArray(r,void 0).lift(new Ys2(e))}Z2.zip=bv;var Ys2=function(){function r(t2){this.resultSelector=t2}return r.prototype.call=function(t2,e){return e.subscribe(new Qs2(t2,this.resultSelector))},r}();Z2.ZipOperator=Ys2;var Qs2=function(r){Gs2(t2,r);function t2(e,n,i){i===void 0&&(i=Object.create(null));var o2=r.call(this,e)||this;return o2.resultSelector=n,o2.iterators=[],o2.active=0,o2.resultSelector=typeof n=="function"?n:void 0,o2}return t2.prototype._next=function(e){var n=this.iterators;pv.isArray(e)?n.push(new vv(e)):typeof e[Ur2.iterator]=="function"?n.push(new _v(e[Ur2.iterator]())):n.push(new dv(this.destination,this,e))},t2.prototype._complete=function(){var e=this.iterators,n=e.length;if(this.unsubscribe(),n===0){this.destination.complete();return}this.active=n;for(var i=0;i<n;i++){var o2=e[i];if(o2.stillUnsubscribed){var u2=this.destination;u2.add(o2.subscribe())}else this.active--}},t2.prototype.notifyInactive=function(){this.active--,this.active===0&&this.destination.complete()},t2.prototype.checkIterators=function(){for(var e=this.iterators,n=e.length,i=this.destination,o2=0;o2<n;o2++){var u2=e[o2];if(typeof u2.hasValue=="function"&&!u2.hasValue())return}for(var s=false,f=[],o2=0;o2<n;o2++){var u2=e[o2],a=u2.next();if(u2.hasCompleted()&&(s=true),a.done){i.complete();return}f.push(a.value)}this.resultSelector?this._tryresultSelector(f):i.next(f),s&&i.complete()},t2.prototype._tryresultSelector=function(e){var n;try{n=this.resultSelector.apply(this,e)}catch(i){this.destination.error(i);return}this.destination.next(n)},t2}(hv.Subscriber);Z2.ZipSubscriber=Qs2;var _v=function(){function r(t2){this.iterator=t2,this.nextResult=t2.next()}return r.prototype.hasValue=function(){return true},r.prototype.next=function(){var t2=this.nextResult;return this.nextResult=this.iterator.next(),t2},r.prototype.hasCompleted=function(){var t2=this.nextResult;return Boolean(t2&&t2.done)},r}(),vv=function(){function r(t2){this.array=t2,this.index=0,this.length=0,this.length=t2.length}return r.prototype[Ur2.iterator]=function(){return this},r.prototype.next=function(t2){var e=this.index++,n=this.array;return e<this.length?{value:n[e],done:false}:{value:null,done:true}},r.prototype.hasValue=function(){return this.array.length>this.index},r.prototype.hasCompleted=function(){return this.array.length===this.index},r}(),dv=function(r){Gs2(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;return o2.parent=n,o2.observable=i,o2.stillUnsubscribed=true,o2.buffer=[],o2.isComplete=false,o2}return t2.prototype[Ur2.iterator]=function(){return this},t2.prototype.next=function(){var e=this.buffer;return e.length===0&&this.isComplete?{value:null,done:true}:{value:e.shift(),done:false}},t2.prototype.hasValue=function(){return this.buffer.length>0},t2.prototype.hasCompleted=function(){return this.buffer.length===0&&this.isComplete},t2.prototype.notifyComplete=function(){this.buffer.length>0?(this.isComplete=true,this.parent.notifyInactive()):this.destination.complete()},t2.prototype.notifyNext=function(e){this.buffer.push(e),this.parent.checkIterators()},t2.prototype.subscribe=function(){return Ui2.innerSubscribe(this.observable,new Ui2.SimpleInnerSubscriber(this))},t2}(Ui2.SimpleOuterSubscriber)});var lt=c(h=>{"use strict";Object.defineProperty(h,"__esModule",{value:true});var yv=d2();h.Observable=yv.Observable;var mv=Pn();h.ConnectableObservable=mv.ConnectableObservable;var Sv=An();h.GroupedObservable=Sv.GroupedObservable;var Ov=Y2();h.observable=Ov.observable;var wv=w2();h.Subject=wv.Subject;var gv=Tn();h.BehaviorSubject=gv.BehaviorSubject;var xv=Ar();h.ReplaySubject=xv.ReplaySubject;var qv=Ke();h.AsyncSubject=qv.AsyncSubject;var Hs2=Ln();h.asap=Hs2.asap;h.asapScheduler=Hs2.asapScheduler;var Ks2=x3();h.async=Ks2.async;h.asyncScheduler=Ks2.asyncScheduler;var Js2=In();h.queue=Js2.queue;h.queueScheduler=Js2.queueScheduler;var Zs2=Bu();h.animationFrame=Zs2.animationFrame;h.animationFrameScheduler=Zs2.animationFrameScheduler;var $s2=Gu();h.VirtualTimeScheduler=$s2.VirtualTimeScheduler;h.VirtualAction=$s2.VirtualAction;var jv=Cn();h.Scheduler=jv.Scheduler;var Pv=O();h.Subscription=Pv.Subscription;var Ev=_2();h.Subscriber=Ev.Subscriber;var Xs2=Ye();h.Notification=Xs2.Notification;h.NotificationKind=Xs2.NotificationKind;var Av=gr();h.pipe=Av.pipe;var Tv=Cr();h.noop=Tv.noop;var Mv=V();h.identity=Mv.identity;var Cv=Yu();h.isObservable=Cv.isObservable;var Iv=_e();h.ArgumentOutOfRangeError=Iv.ArgumentOutOfRangeError;var Nv=ve();h.EmptyError=Nv.EmptyError;var Rv=Ce();h.ObjectUnsubscribedError=Rv.ObjectUnsubscribedError;var kv=ln();h.UnsubscriptionError=kv.UnsubscriptionError;var Vv=Kn();h.TimeoutError=Vv.TimeoutError;var Wv=Ju();h.bindCallback=Wv.bindCallback;var Fv=es();h.bindNodeCallback=Fv.bindNodeCallback;var Dv=Ir();h.combineLatest=Dv.combineLatest;var Uv=st();h.concat=Uv.concat;var Bv=Vr();h.defer=Bv.defer;var Lv=P2();h.empty=Lv.empty;var zv=ys();h.forkJoin=zv.forkJoin;var Gv=A3();h.from=Gv.from;var Yv=Os();h.fromEvent=Yv.fromEvent;var Qv=gs();h.fromEventPattern=Qv.fromEventPattern;var Hv=qs();h.generate=Hv.generate;var Kv=Ps();h.iif=Kv.iif;var Jv=As();h.interval=Jv.interval;var Zv=Ti();h.merge=Zv.merge;var $v=Mi();h.never=$v.never;var Xv=ze();h.of=Xv.of;var ed=Ts();h.onErrorResumeNext=ed.onErrorResumeNext;var td=Is();h.pairs=td.pairs;var rd=Vs();h.partition=rd.partition;var nd=Vi();h.race=nd.race;var id=Us();h.range=id.range;var od=Er();h.throwError=od.throwError;var ud=Fi();h.timer=ud.timer;var sd=zs();h.using=sd.using;var cd=Br();h.zip=cd.zip;var ad=hi();h.scheduled=ad.scheduled;var fd=P2();h.EMPTY=fd.EMPTY;var ld=Mi();h.NEVER=ld.NEVER;var pd=Te();h.config=pd.config});var Li=c(pt2=>{"use strict";var hd=pt2&&pt2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(pt2,"__esModule",{value:true});var Bi2=y3();function bd(r){return function(e){return e.lift(new _d(r))}}pt2.audit=bd;var _d=function(){function r(t2){this.durationSelector=t2}return r.prototype.call=function(t2,e){return e.subscribe(new vd(t2,this.durationSelector))},r}(),vd=function(r){hd(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.durationSelector=n,i.hasValue=false,i}return t2.prototype._next=function(e){if(this.value=e,this.hasValue=true,!this.throttled){var n=void 0;try{var i=this.durationSelector;n=i(e)}catch(u2){return this.destination.error(u2)}var o2=Bi2.innerSubscribe(n,new Bi2.SimpleInnerSubscriber(this));!o2||o2.closed?this.clearThrottle():this.add(this.throttled=o2)}},t2.prototype.clearThrottle=function(){var e=this,n=e.value,i=e.hasValue,o2=e.throttled;o2&&(this.remove(o2),this.throttled=void 0,o2.unsubscribe()),i&&(this.value=void 0,this.hasValue=false,this.destination.next(n))},t2.prototype.notifyNext=function(){this.clearThrottle()},t2.prototype.notifyComplete=function(){this.clearThrottle()},t2}(Bi2.SimpleOuterSubscriber)});var ec=c(zi2=>{"use strict";Object.defineProperty(zi2,"__esModule",{value:true});var dd=x3(),yd=Li(),md=Fi();function Sd(r,t2){return t2===void 0&&(t2=dd.async),yd.audit(function(){return md.timer(r,t2)})}zi2.auditTime=Sd});var tc=c(ht2=>{"use strict";var Od=ht2&&ht2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(ht2,"__esModule",{value:true});var Gi2=y3();function wd(r){return function(e){return e.lift(new gd(r))}}ht2.buffer=wd;var gd=function(){function r(t2){this.closingNotifier=t2}return r.prototype.call=function(t2,e){return e.subscribe(new xd(t2,this.closingNotifier))},r}(),xd=function(r){Od(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.buffer=[],i.add(Gi2.innerSubscribe(n,new Gi2.SimpleInnerSubscriber(i))),i}return t2.prototype._next=function(e){this.buffer.push(e)},t2.prototype.notifyNext=function(){var e=this.buffer;this.buffer=[],this.destination.next(e)},t2}(Gi2.SimpleOuterSubscriber)});var ic=c(bt2=>{"use strict";var rc2=bt2&&bt2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(bt2,"__esModule",{value:true});var nc2=_2();function qd(r,t2){return t2===void 0&&(t2=null),function(n){return n.lift(new jd(r,t2))}}bt2.bufferCount=qd;var jd=function(){function r(t2,e){this.bufferSize=t2,this.startBufferEvery=e,!e||t2===e?this.subscriberClass=Pd:this.subscriberClass=Ed}return r.prototype.call=function(t2,e){return e.subscribe(new this.subscriberClass(t2,this.bufferSize,this.startBufferEvery))},r}(),Pd=function(r){rc2(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.bufferSize=n,i.buffer=[],i}return t2.prototype._next=function(e){var n=this.buffer;n.push(e),n.length==this.bufferSize&&(this.destination.next(n),this.buffer=[])},t2.prototype._complete=function(){var e=this.buffer;e.length>0&&this.destination.next(e),r.prototype._complete.call(this)},t2}(nc2.Subscriber),Ed=function(r){rc2(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;return o2.bufferSize=n,o2.startBufferEvery=i,o2.buffers=[],o2.count=0,o2}return t2.prototype._next=function(e){var n=this,i=n.bufferSize,o2=n.startBufferEvery,u2=n.buffers,s=n.count;this.count++,s%o2===0&&u2.push([]);for(var f=u2.length;f--;){var a=u2[f];a.push(e),a.length===i&&(u2.splice(f,1),this.destination.next(a))}},t2.prototype._complete=function(){for(var e=this,n=e.buffers,i=e.destination;n.length>0;){var o2=n.shift();o2.length>0&&i.next(o2)}r.prototype._complete.call(this)},t2}(nc2.Subscriber)});var sc=c(_t=>{"use strict";var Ad=_t&&_t.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(_t,"__esModule",{value:true});var Td=x3(),Md=_2(),Cd=E2();function Id(r){var t2=arguments.length,e=Td.async;Cd.isScheduler(arguments[arguments.length-1])&&(e=arguments[arguments.length-1],t2--);var n=null;t2>=2&&(n=arguments[1]);var i=Number.POSITIVE_INFINITY;return t2>=3&&(i=arguments[2]),function(u2){return u2.lift(new Nd(r,n,i,e))}}_t.bufferTime=Id;var Nd=function(){function r(t2,e,n,i){this.bufferTimeSpan=t2,this.bufferCreationInterval=e,this.maxBufferSize=n,this.scheduler=i}return r.prototype.call=function(t2,e){return e.subscribe(new kd(t2,this.bufferTimeSpan,this.bufferCreationInterval,this.maxBufferSize,this.scheduler))},r}(),Rd=function(){function r(){this.buffer=[]}return r}(),kd=function(r){Ad(t2,r);function t2(e,n,i,o2,u2){var s=r.call(this,e)||this;s.bufferTimeSpan=n,s.bufferCreationInterval=i,s.maxBufferSize=o2,s.scheduler=u2,s.contexts=[];var f=s.openContext();if(s.timespanOnly=i==null||i<0,s.timespanOnly){var a={subscriber:s,context:f,bufferTimeSpan:n};s.add(f.closeAction=u2.schedule(oc2,n,a))}else{var p={subscriber:s,context:f},b2={bufferTimeSpan:n,bufferCreationInterval:i,subscriber:s,scheduler:u2};s.add(f.closeAction=u2.schedule(uc2,n,p)),s.add(u2.schedule(Vd,i,b2))}return s}return t2.prototype._next=function(e){for(var n=this.contexts,i=n.length,o2,u2=0;u2<i;u2++){var s=n[u2],f=s.buffer;f.push(e),f.length==this.maxBufferSize&&(o2=s)}o2&&this.onBufferFull(o2)},t2.prototype._error=function(e){this.contexts.length=0,r.prototype._error.call(this,e)},t2.prototype._complete=function(){for(var e=this,n=e.contexts,i=e.destination;n.length>0;){var o2=n.shift();i.next(o2.buffer)}r.prototype._complete.call(this)},t2.prototype._unsubscribe=function(){this.contexts=null},t2.prototype.onBufferFull=function(e){this.closeContext(e);var n=e.closeAction;if(n.unsubscribe(),this.remove(n),!this.closed&&this.timespanOnly){e=this.openContext();var i=this.bufferTimeSpan,o2={subscriber:this,context:e,bufferTimeSpan:i};this.add(e.closeAction=this.scheduler.schedule(oc2,i,o2))}},t2.prototype.openContext=function(){var e=new Rd;return this.contexts.push(e),e},t2.prototype.closeContext=function(e){this.destination.next(e.buffer);var n=this.contexts,i=n?n.indexOf(e):-1;i>=0&&n.splice(n.indexOf(e),1)},t2}(Md.Subscriber);function oc2(r){var t2=r.subscriber,e=r.context;e&&t2.closeContext(e),t2.closed||(r.context=t2.openContext(),r.context.closeAction=this.schedule(r,r.bufferTimeSpan))}function Vd(r){var t2=r.bufferCreationInterval,e=r.bufferTimeSpan,n=r.subscriber,i=r.scheduler,o2=n.openContext(),u2=this;n.closed||(n.add(o2.closeAction=i.schedule(uc2,e,{subscriber:n,context:o2})),u2.schedule(r,t2))}function uc2(r){var t2=r.subscriber,e=r.context;t2.closeContext(e)}});var ac=c(vt=>{"use strict";var Wd=vt&&vt.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(vt,"__esModule",{value:true});var Fd=O(),cc2=D2(),Dd=F3();function Ud(r,t2){return function(n){return n.lift(new Bd(r,t2))}}vt.bufferToggle=Ud;var Bd=function(){function r(t2,e){this.openings=t2,this.closingSelector=e}return r.prototype.call=function(t2,e){return e.subscribe(new Ld(t2,this.openings,this.closingSelector))},r}(),Ld=function(r){Wd(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;return o2.closingSelector=i,o2.contexts=[],o2.add(cc2.subscribeToResult(o2,n)),o2}return t2.prototype._next=function(e){for(var n=this.contexts,i=n.length,o2=0;o2<i;o2++)n[o2].buffer.push(e)},t2.prototype._error=function(e){for(var n=this.contexts;n.length>0;){var i=n.shift();i.subscription.unsubscribe(),i.buffer=null,i.subscription=null}this.contexts=null,r.prototype._error.call(this,e)},t2.prototype._complete=function(){for(var e=this.contexts;e.length>0;){var n=e.shift();this.destination.next(n.buffer),n.subscription.unsubscribe(),n.buffer=null,n.subscription=null}this.contexts=null,r.prototype._complete.call(this)},t2.prototype.notifyNext=function(e,n){e?this.closeBuffer(e):this.openBuffer(n)},t2.prototype.notifyComplete=function(e){this.closeBuffer(e.context)},t2.prototype.openBuffer=function(e){try{var n=this.closingSelector,i=n.call(this,e);i&&this.trySubscribe(i)}catch(o2){this._error(o2)}},t2.prototype.closeBuffer=function(e){var n=this.contexts;if(n&&e){var i=e.buffer,o2=e.subscription;this.destination.next(i),n.splice(n.indexOf(e),1),this.remove(o2),o2.unsubscribe()}},t2.prototype.trySubscribe=function(e){var n=this.contexts,i=[],o2=new Fd.Subscription,u2={buffer:i,subscription:o2};n.push(u2);var s=cc2.subscribeToResult(this,e,u2);!s||s.closed?this.closeBuffer(u2):(s.context=u2,this.add(s),o2.add(s))},t2}(Dd.OuterSubscriber)});var fc=c(dt2=>{"use strict";var zd=dt2&&dt2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(dt2,"__esModule",{value:true});var Gd=O(),Yi2=y3();function Yd(r){return function(t2){return t2.lift(new Qd(r))}}dt2.bufferWhen=Yd;var Qd=function(){function r(t2){this.closingSelector=t2}return r.prototype.call=function(t2,e){return e.subscribe(new Hd(t2,this.closingSelector))},r}(),Hd=function(r){zd(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.closingSelector=n,i.subscribing=false,i.openBuffer(),i}return t2.prototype._next=function(e){this.buffer.push(e)},t2.prototype._complete=function(){var e=this.buffer;e&&this.destination.next(e),r.prototype._complete.call(this)},t2.prototype._unsubscribe=function(){this.buffer=void 0,this.subscribing=false},t2.prototype.notifyNext=function(){this.openBuffer()},t2.prototype.notifyComplete=function(){this.subscribing?this.complete():this.openBuffer()},t2.prototype.openBuffer=function(){var e=this.closingSubscription;e&&(this.remove(e),e.unsubscribe());var n=this.buffer;this.buffer&&this.destination.next(n),this.buffer=[];var i;try{var o2=this.closingSelector;i=o2()}catch(u2){return this.error(u2)}e=new Gd.Subscription,this.closingSubscription=e,this.add(e),this.subscribing=true,e.add(Yi2.innerSubscribe(i,new Yi2.SimpleInnerSubscriber(this))),this.subscribing=false},t2}(Yi2.SimpleOuterSubscriber)});var lc=c(yt2=>{"use strict";var Kd=yt2&&yt2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(yt2,"__esModule",{value:true});var Qi2=y3();function Jd(r){return function(e){var n=new Zd(r),i=e.lift(n);return n.caught=i}}yt2.catchError=Jd;var Zd=function(){function r(t2){this.selector=t2}return r.prototype.call=function(t2,e){return e.subscribe(new $d(t2,this.selector,this.caught))},r}(),$d=function(r){Kd(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;return o2.selector=n,o2.caught=i,o2}return t2.prototype.error=function(e){if(!this.isStopped){var n=void 0;try{n=this.selector(e,this.caught)}catch(u2){r.prototype.error.call(this,u2);return}this._unsubscribeAndRecycle();var i=new Qi2.SimpleInnerSubscriber(this);this.add(i);var o2=Qi2.innerSubscribe(n,i);o2!==i&&this.add(o2)}},t2}(Qi2.SimpleOuterSubscriber)});var pc=c(Hi2=>{"use strict";Object.defineProperty(Hi2,"__esModule",{value:true});var Xd=Ir();function ey(r){return function(t2){return t2.lift(new Xd.CombineLatestOperator(r))}}Hi2.combineAll=ey});var hc=c(Ki2=>{"use strict";Object.defineProperty(Ki2,"__esModule",{value:true});var ty=g(),ry=Ir(),ny=A3();function iy(){for(var r=[],t2=0;t2<arguments.length;t2++)r[t2]=arguments[t2];var e=null;return typeof r[r.length-1]=="function"&&(e=r.pop()),r.length===1&&ty.isArray(r[0])&&(r=r[0].slice()),function(n){return n.lift.call(ny.from([n].concat(r)),new ry.CombineLatestOperator(e))}}Ki2.combineLatest=iy});var bc=c(Ji2=>{"use strict";Object.defineProperty(Ji2,"__esModule",{value:true});var oy=st();function uy(){for(var r=[],t2=0;t2<arguments.length;t2++)r[t2]=arguments[t2];return function(e){return e.lift.call(oy.concat.apply(void 0,[e].concat(r)))}}Ji2.concat=uy});var $i=c(Zi2=>{"use strict";Object.defineProperty(Zi2,"__esModule",{value:true});var sy=ut();function cy(r,t2){return sy.mergeMap(r,t2,1)}Zi2.concatMap=cy});var _c=c(Xi2=>{"use strict";Object.defineProperty(Xi2,"__esModule",{value:true});var ay=$i();function fy(r,t2){return ay.concatMap(function(){return r},t2)}Xi2.concatMapTo=fy});var vc=c(mt2=>{"use strict";var ly=mt2&&mt2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(mt2,"__esModule",{value:true});var py=_2();function hy(r){return function(t2){return t2.lift(new by(r,t2))}}mt2.count=hy;var by=function(){function r(t2,e){this.predicate=t2,this.source=e}return r.prototype.call=function(t2,e){return e.subscribe(new _y(t2,this.predicate,this.source))},r}(),_y=function(r){ly(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;return o2.predicate=n,o2.source=i,o2.count=0,o2.index=0,o2}return t2.prototype._next=function(e){this.predicate?this._tryPredicate(e):this.count++},t2.prototype._tryPredicate=function(e){var n;try{n=this.predicate(e,this.index++,this.source)}catch(i){this.destination.error(i);return}n&&this.count++},t2.prototype._complete=function(){this.destination.next(this.count),this.destination.complete()},t2}(py.Subscriber)});var dc=c(St2=>{"use strict";var vy=St2&&St2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(St2,"__esModule",{value:true});var eo2=y3();function dy(r){return function(t2){return t2.lift(new yy(r))}}St2.debounce=dy;var yy=function(){function r(t2){this.durationSelector=t2}return r.prototype.call=function(t2,e){return e.subscribe(new my(t2,this.durationSelector))},r}(),my=function(r){vy(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.durationSelector=n,i.hasValue=false,i}return t2.prototype._next=function(e){try{var n=this.durationSelector.call(this,e);n&&this._tryNext(e,n)}catch(i){this.destination.error(i)}},t2.prototype._complete=function(){this.emitValue(),this.destination.complete()},t2.prototype._tryNext=function(e,n){var i=this.durationSubscription;this.value=e,this.hasValue=true,i&&(i.unsubscribe(),this.remove(i)),i=eo2.innerSubscribe(n,new eo2.SimpleInnerSubscriber(this)),i&&!i.closed&&this.add(this.durationSubscription=i)},t2.prototype.notifyNext=function(){this.emitValue()},t2.prototype.notifyComplete=function(){this.emitValue()},t2.prototype.emitValue=function(){if(this.hasValue){var e=this.value,n=this.durationSubscription;n&&(this.durationSubscription=void 0,n.unsubscribe(),this.remove(n)),this.value=void 0,this.hasValue=false,r.prototype._next.call(this,e)}},t2}(eo2.SimpleOuterSubscriber)});var yc=c(Ot2=>{"use strict";var Sy=Ot2&&Ot2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Ot2,"__esModule",{value:true});var Oy=_2(),wy=x3();function gy(r,t2){return t2===void 0&&(t2=wy.async),function(e){return e.lift(new xy(r,t2))}}Ot2.debounceTime=gy;var xy=function(){function r(t2,e){this.dueTime=t2,this.scheduler=e}return r.prototype.call=function(t2,e){return e.subscribe(new qy(t2,this.dueTime,this.scheduler))},r}(),qy=function(r){Sy(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;return o2.dueTime=n,o2.scheduler=i,o2.debouncedSubscription=null,o2.lastValue=null,o2.hasValue=false,o2}return t2.prototype._next=function(e){this.clearDebounce(),this.lastValue=e,this.hasValue=true,this.add(this.debouncedSubscription=this.scheduler.schedule(jy,this.dueTime,this))},t2.prototype._complete=function(){this.debouncedNext(),this.destination.complete()},t2.prototype.debouncedNext=function(){if(this.clearDebounce(),this.hasValue){var e=this.lastValue;this.lastValue=null,this.hasValue=false,this.destination.next(e)}},t2.prototype.clearDebounce=function(){var e=this.debouncedSubscription;e!==null&&(this.remove(e),e.unsubscribe(),this.debouncedSubscription=null)},t2}(Oy.Subscriber);function jy(r){r.debouncedNext()}});var Se=c(wt2=>{"use strict";var Py=wt2&&wt2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(wt2,"__esModule",{value:true});var Ey=_2();function Ay(r){return r===void 0&&(r=null),function(t2){return t2.lift(new Ty(r))}}wt2.defaultIfEmpty=Ay;var Ty=function(){function r(t2){this.defaultValue=t2}return r.prototype.call=function(t2,e){return e.subscribe(new My(t2,this.defaultValue))},r}(),My=function(r){Py(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.defaultValue=n,i.isEmpty=true,i}return t2.prototype._next=function(e){this.isEmpty=false,this.destination.next(e)},t2.prototype._complete=function(){this.isEmpty&&this.destination.next(this.defaultValue),this.destination.complete()},t2}(Ey.Subscriber)});var ro=c(to2=>{"use strict";Object.defineProperty(to2,"__esModule",{value:true});function Cy(r){return r instanceof Date&&!isNaN(+r)}to2.isDate=Cy});var Sc=c(gt2=>{"use strict";var Iy=gt2&&gt2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(gt2,"__esModule",{value:true});var Ny=x3(),Ry=ro(),ky=_2(),mc2=Ye();function Vy(r,t2){t2===void 0&&(t2=Ny.async);var e=Ry.isDate(r),n=e?+r-t2.now():Math.abs(r);return function(i){return i.lift(new Wy(n,t2))}}gt2.delay=Vy;var Wy=function(){function r(t2,e){this.delay=t2,this.scheduler=e}return r.prototype.call=function(t2,e){return e.subscribe(new Fy(t2,this.delay,this.scheduler))},r}(),Fy=function(r){Iy(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;return o2.delay=n,o2.scheduler=i,o2.queue=[],o2.active=false,o2.errored=false,o2}return t2.dispatch=function(e){for(var n=e.source,i=n.queue,o2=e.scheduler,u2=e.destination;i.length>0&&i[0].time-o2.now()<=0;)i.shift().notification.observe(u2);if(i.length>0){var s=Math.max(0,i[0].time-o2.now());this.schedule(e,s)}else this.unsubscribe(),n.active=false},t2.prototype._schedule=function(e){this.active=true;var n=this.destination;n.add(e.schedule(t2.dispatch,this.delay,{source:this,destination:this.destination,scheduler:e}))},t2.prototype.scheduleNotification=function(e){if(this.errored!==true){var n=this.scheduler,i=new Dy(n.now()+this.delay,e);this.queue.push(i),this.active===false&&this._schedule(n)}},t2.prototype._next=function(e){this.scheduleNotification(mc2.Notification.createNext(e))},t2.prototype._error=function(e){this.errored=true,this.queue=[],this.destination.error(e),this.unsubscribe()},t2.prototype._complete=function(){this.scheduleNotification(mc2.Notification.createComplete()),this.unsubscribe()},t2}(ky.Subscriber),Dy=function(){function r(t2,e){this.time=t2,this.notification=e}return r}()});var wc=c(xt2=>{"use strict";var no2=xt2&&xt2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(xt2,"__esModule",{value:true});var Uy=_2(),By=d2(),Ly=F3(),zy=D2();function Gy(r,t2){return t2?function(e){return new Qy(e,t2).lift(new Oc2(r))}:function(e){return e.lift(new Oc2(r))}}xt2.delayWhen=Gy;var Oc2=function(){function r(t2){this.delayDurationSelector=t2}return r.prototype.call=function(t2,e){return e.subscribe(new Yy(t2,this.delayDurationSelector))},r}(),Yy=function(r){no2(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.delayDurationSelector=n,i.completed=false,i.delayNotifierSubscriptions=[],i.index=0,i}return t2.prototype.notifyNext=function(e,n,i,o2,u2){this.destination.next(e),this.removeSubscription(u2),this.tryComplete()},t2.prototype.notifyError=function(e,n){this._error(e)},t2.prototype.notifyComplete=function(e){var n=this.removeSubscription(e);n&&this.destination.next(n),this.tryComplete()},t2.prototype._next=function(e){var n=this.index++;try{var i=this.delayDurationSelector(e,n);i&&this.tryDelay(i,e)}catch(o2){this.destination.error(o2)}},t2.prototype._complete=function(){this.completed=true,this.tryComplete(),this.unsubscribe()},t2.prototype.removeSubscription=function(e){e.unsubscribe();var n=this.delayNotifierSubscriptions.indexOf(e);return n!==-1&&this.delayNotifierSubscriptions.splice(n,1),e.outerValue},t2.prototype.tryDelay=function(e,n){var i=zy.subscribeToResult(this,e,n);if(i&&!i.closed){var o2=this.destination;o2.add(i),this.delayNotifierSubscriptions.push(i)}},t2.prototype.tryComplete=function(){this.completed&&this.delayNotifierSubscriptions.length===0&&this.destination.complete()},t2}(Ly.OuterSubscriber),Qy=function(r){no2(t2,r);function t2(e,n){var i=r.call(this)||this;return i.source=e,i.subscriptionDelay=n,i}return t2.prototype._subscribe=function(e){this.subscriptionDelay.subscribe(new Hy(e,this.source))},t2}(By.Observable),Hy=function(r){no2(t2,r);function t2(e,n){var i=r.call(this)||this;return i.parent=e,i.source=n,i.sourceSubscribed=false,i}return t2.prototype._next=function(e){this.subscribeToSource()},t2.prototype._error=function(e){this.unsubscribe(),this.parent.error(e)},t2.prototype._complete=function(){this.unsubscribe(),this.subscribeToSource()},t2.prototype.subscribeToSource=function(){this.sourceSubscribed||(this.sourceSubscribed=true,this.unsubscribe(),this.source.subscribe(this.parent))},t2}(Uy.Subscriber)});var gc=c(qt=>{"use strict";var Ky=qt&&qt.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(qt,"__esModule",{value:true});var Jy=_2();function Zy(){return function(t2){return t2.lift(new $y)}}qt.dematerialize=Zy;var $y=function(){function r(){}return r.prototype.call=function(t2,e){return e.subscribe(new Xy(t2))},r}(),Xy=function(r){Ky(t2,r);function t2(e){return r.call(this,e)||this}return t2.prototype._next=function(e){e.observe(this.destination)},t2}(Jy.Subscriber)});var qc=c(Oe2=>{"use strict";var em=Oe2&&Oe2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Oe2,"__esModule",{value:true});var io2=y3();function tm(r,t2){return function(e){return e.lift(new rm(r,t2))}}Oe2.distinct=tm;var rm=function(){function r(t2,e){this.keySelector=t2,this.flushes=e}return r.prototype.call=function(t2,e){return e.subscribe(new xc2(t2,this.keySelector,this.flushes))},r}(),xc2=function(r){em(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;return o2.keySelector=n,o2.values=new Set,i&&o2.add(io2.innerSubscribe(i,new io2.SimpleInnerSubscriber(o2))),o2}return t2.prototype.notifyNext=function(){this.values.clear()},t2.prototype.notifyError=function(e){this._error(e)},t2.prototype._next=function(e){this.keySelector?this._useKeySelector(e):this._finalizeNext(e,e)},t2.prototype._useKeySelector=function(e){var n,i=this.destination;try{n=this.keySelector(e)}catch(o2){i.error(o2);return}this._finalizeNext(n,e)},t2.prototype._finalizeNext=function(e,n){var i=this.values;i.has(e)||(i.add(e),this.destination.next(n))},t2}(io2.SimpleOuterSubscriber);Oe2.DistinctSubscriber=xc2});var oo=c(jt2=>{"use strict";var nm=jt2&&jt2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(jt2,"__esModule",{value:true});var im=_2();function om(r,t2){return function(e){return e.lift(new um(r,t2))}}jt2.distinctUntilChanged=om;var um=function(){function r(t2,e){this.compare=t2,this.keySelector=e}return r.prototype.call=function(t2,e){return e.subscribe(new sm(t2,this.compare,this.keySelector))},r}(),sm=function(r){nm(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;return o2.keySelector=i,o2.hasKey=false,typeof n=="function"&&(o2.compare=n),o2}return t2.prototype.compare=function(e,n){return e===n},t2.prototype._next=function(e){var n;try{var i=this.keySelector;n=i?i(e):e}catch(s){return this.destination.error(s)}var o2=false;if(this.hasKey)try{var u2=this.compare;o2=u2(this.key,n)}catch(s){return this.destination.error(s)}else this.hasKey=true;o2||(this.key=n,this.destination.next(e))},t2}(im.Subscriber)});var jc=c(uo2=>{"use strict";Object.defineProperty(uo2,"__esModule",{value:true});var cm=oo();function am(r,t2){return cm.distinctUntilChanged(function(e,n){return t2?t2(e[r],n[r]):e[r]===n[r]})}uo2.distinctUntilKeyChanged=am});var Et=c(Pt2=>{"use strict";var fm=Pt2&&Pt2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Pt2,"__esModule",{value:true});var lm=ve(),pm=_2();function hm(r){return r===void 0&&(r=vm),function(t2){return t2.lift(new bm(r))}}Pt2.throwIfEmpty=hm;var bm=function(){function r(t2){this.errorFactory=t2}return r.prototype.call=function(t2,e){return e.subscribe(new _m(t2,this.errorFactory))},r}(),_m=function(r){fm(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.errorFactory=n,i.hasValue=false,i}return t2.prototype._next=function(e){this.hasValue=true,this.destination.next(e)},t2.prototype._complete=function(){if(this.hasValue)return this.destination.complete();var e=void 0;try{e=this.errorFactory()}catch(n){e=n}this.destination.error(e)},t2}(pm.Subscriber);function vm(){return new lm.EmptyError}});var Lr=c(At=>{"use strict";var dm=At&&At.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(At,"__esModule",{value:true});var ym=_2(),mm=_e(),Sm=P2();function Om(r){return function(t2){return r===0?Sm.empty():t2.lift(new wm(r))}}At.take=Om;var wm=function(){function r(t2){if(this.total=t2,this.total<0)throw new mm.ArgumentOutOfRangeError}return r.prototype.call=function(t2,e){return e.subscribe(new gm(t2,this.total))},r}(),gm=function(r){dm(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.total=n,i.count=0,i}return t2.prototype._next=function(e){var n=this.total,i=++this.count;i<=n&&(this.destination.next(e),i===n&&(this.destination.complete(),this.unsubscribe()))},t2}(ym.Subscriber)});var Ec=c(so2=>{"use strict";Object.defineProperty(so2,"__esModule",{value:true});var Pc2=_e(),xm=K(),qm=Et(),jm=Se(),Pm=Lr();function Em(r,t2){if(r<0)throw new Pc2.ArgumentOutOfRangeError;var e=arguments.length>=2;return function(n){return n.pipe(xm.filter(function(i,o2){return o2===r}),Pm.take(1),e?jm.defaultIfEmpty(t2):qm.throwIfEmpty(function(){return new Pc2.ArgumentOutOfRangeError}))}}so2.elementAt=Em});var Ac=c(co2=>{"use strict";Object.defineProperty(co2,"__esModule",{value:true});var Am=st(),Tm=ze();function Mm(){for(var r=[],t2=0;t2<arguments.length;t2++)r[t2]=arguments[t2];return function(e){return Am.concat(e,Tm.of.apply(void 0,r))}}co2.endWith=Mm});var Tc=c(Tt=>{"use strict";var Cm=Tt&&Tt.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Tt,"__esModule",{value:true});var Im=_2();function Nm(r,t2){return function(e){return e.lift(new Rm(r,t2,e))}}Tt.every=Nm;var Rm=function(){function r(t2,e,n){this.predicate=t2,this.thisArg=e,this.source=n}return r.prototype.call=function(t2,e){return e.subscribe(new km(t2,this.predicate,this.thisArg,this.source))},r}(),km=function(r){Cm(t2,r);function t2(e,n,i,o2){var u2=r.call(this,e)||this;return u2.predicate=n,u2.thisArg=i,u2.source=o2,u2.index=0,u2.thisArg=i||u2,u2}return t2.prototype.notifyComplete=function(e){this.destination.next(e),this.destination.complete()},t2.prototype._next=function(e){var n=false;try{n=this.predicate.call(this.thisArg,e,this.index++,this.source)}catch(i){this.destination.error(i);return}n||this.notifyComplete(false)},t2.prototype._complete=function(){this.notifyComplete(true)},t2}(Im.Subscriber)});var Mc=c(Mt=>{"use strict";var Vm=Mt&&Mt.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Mt,"__esModule",{value:true});var ao2=y3();function Wm(){return function(r){return r.lift(new Fm)}}Mt.exhaust=Wm;var Fm=function(){function r(){}return r.prototype.call=function(t2,e){return e.subscribe(new Dm(t2))},r}(),Dm=function(r){Vm(t2,r);function t2(e){var n=r.call(this,e)||this;return n.hasCompleted=false,n.hasSubscription=false,n}return t2.prototype._next=function(e){this.hasSubscription||(this.hasSubscription=true,this.add(ao2.innerSubscribe(e,new ao2.SimpleInnerSubscriber(this))))},t2.prototype._complete=function(){this.hasCompleted=true,this.hasSubscription||this.destination.complete()},t2.prototype.notifyComplete=function(){this.hasSubscription=false,this.hasCompleted&&this.destination.complete()},t2}(ao2.SimpleOuterSubscriber)});var Ic=c(Ct2=>{"use strict";var Um=Ct2&&Ct2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Ct2,"__esModule",{value:true});var Bm=j(),Lm=A3(),fo2=y3();function Cc2(r,t2){return t2?function(e){return e.pipe(Cc2(function(n,i){return Lm.from(r(n,i)).pipe(Bm.map(function(o2,u2){return t2(n,o2,i,u2)}))}))}:function(e){return e.lift(new zm(r))}}Ct2.exhaustMap=Cc2;var zm=function(){function r(t2){this.project=t2}return r.prototype.call=function(t2,e){return e.subscribe(new Gm(t2,this.project))},r}(),Gm=function(r){Um(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.project=n,i.hasSubscription=false,i.hasCompleted=false,i.index=0,i}return t2.prototype._next=function(e){this.hasSubscription||this.tryNext(e)},t2.prototype.tryNext=function(e){var n,i=this.index++;try{n=this.project(e,i)}catch(o2){this.destination.error(o2);return}this.hasSubscription=true,this._innerSub(n)},t2.prototype._innerSub=function(e){var n=new fo2.SimpleInnerSubscriber(this),i=this.destination;i.add(n);var o2=fo2.innerSubscribe(e,n);o2!==n&&i.add(o2)},t2.prototype._complete=function(){this.hasCompleted=true,this.hasSubscription||this.destination.complete(),this.unsubscribe()},t2.prototype.notifyNext=function(e){this.destination.next(e)},t2.prototype.notifyError=function(e){this.destination.error(e)},t2.prototype.notifyComplete=function(){this.hasSubscription=false,this.hasCompleted&&this.destination.complete()},t2}(fo2.SimpleOuterSubscriber)});var kc=c($2=>{"use strict";var Ym=$2&&$2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty($2,"__esModule",{value:true});var lo2=y3();function Qm(r,t2,e){return t2===void 0&&(t2=Number.POSITIVE_INFINITY),t2=(t2||0)<1?Number.POSITIVE_INFINITY:t2,function(n){return n.lift(new Nc2(r,t2,e))}}$2.expand=Qm;var Nc2=function(){function r(t2,e,n){this.project=t2,this.concurrent=e,this.scheduler=n}return r.prototype.call=function(t2,e){return e.subscribe(new Rc2(t2,this.project,this.concurrent,this.scheduler))},r}();$2.ExpandOperator=Nc2;var Rc2=function(r){Ym(t2,r);function t2(e,n,i,o2){var u2=r.call(this,e)||this;return u2.project=n,u2.concurrent=i,u2.scheduler=o2,u2.index=0,u2.active=0,u2.hasCompleted=false,i<Number.POSITIVE_INFINITY&&(u2.buffer=[]),u2}return t2.dispatch=function(e){var n=e.subscriber,i=e.result,o2=e.value,u2=e.index;n.subscribeToProjection(i,o2,u2)},t2.prototype._next=function(e){var n=this.destination;if(n.closed){this._complete();return}var i=this.index++;if(this.active<this.concurrent){n.next(e);try{var o2=this.project,u2=o2(e,i);if(!this.scheduler)this.subscribeToProjection(u2,e,i);else{var s={subscriber:this,result:u2,value:e,index:i},f=this.destination;f.add(this.scheduler.schedule(t2.dispatch,0,s))}}catch(a){n.error(a)}}else this.buffer.push(e)},t2.prototype.subscribeToProjection=function(e,n,i){this.active++;var o2=this.destination;o2.add(lo2.innerSubscribe(e,new lo2.SimpleInnerSubscriber(this)))},t2.prototype._complete=function(){this.hasCompleted=true,this.hasCompleted&&this.active===0&&this.destination.complete(),this.unsubscribe()},t2.prototype.notifyNext=function(e){this._next(e)},t2.prototype.notifyComplete=function(){var e=this.buffer;this.active--,e&&e.length>0&&this._next(e.shift()),this.hasCompleted&&this.active===0&&this.destination.complete()},t2}(lo2.SimpleOuterSubscriber);$2.ExpandSubscriber=Rc2});var Vc=c(It2=>{"use strict";var Hm=It2&&It2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(It2,"__esModule",{value:true});var Km=_2(),Jm=O();function Zm(r){return function(t2){return t2.lift(new $m(r))}}It2.finalize=Zm;var $m=function(){function r(t2){this.callback=t2}return r.prototype.call=function(t2,e){return e.subscribe(new Xm(t2,this.callback))},r}(),Xm=function(r){Hm(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.add(new Jm.Subscription(n)),i}return t2}(Km.Subscriber)});var po=c(X2=>{"use strict";var eS=X2&&X2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(X2,"__esModule",{value:true});var tS=_2();function rS(r,t2){if(typeof r!="function")throw new TypeError("predicate is not a function");return function(e){return e.lift(new Wc2(r,e,false,t2))}}X2.find=rS;var Wc2=function(){function r(t2,e,n,i){this.predicate=t2,this.source=e,this.yieldIndex=n,this.thisArg=i}return r.prototype.call=function(t2,e){return e.subscribe(new Fc2(t2,this.predicate,this.source,this.yieldIndex,this.thisArg))},r}();X2.FindValueOperator=Wc2;var Fc2=function(r){eS(t2,r);function t2(e,n,i,o2,u2){var s=r.call(this,e)||this;return s.predicate=n,s.source=i,s.yieldIndex=o2,s.thisArg=u2,s.index=0,s}return t2.prototype.notifyComplete=function(e){var n=this.destination;n.next(e),n.complete(),this.unsubscribe()},t2.prototype._next=function(e){var n=this,i=n.predicate,o2=n.thisArg,u2=this.index++;try{var s=i.call(o2||this,e,u2,this.source);s&&this.notifyComplete(this.yieldIndex?u2:e)}catch(f){this.destination.error(f)}},t2.prototype._complete=function(){this.notifyComplete(this.yieldIndex?-1:void 0)},t2}(tS.Subscriber);X2.FindValueSubscriber=Fc2});var Dc=c(ho2=>{"use strict";Object.defineProperty(ho2,"__esModule",{value:true});var nS=po();function iS(r,t2){return function(e){return e.lift(new nS.FindValueOperator(r,e,true,t2))}}ho2.findIndex=iS});var Uc=c(bo2=>{"use strict";Object.defineProperty(bo2,"__esModule",{value:true});var oS=ve(),uS=K(),sS=Lr(),cS=Se(),aS=Et(),fS=V();function lS(r,t2){var e=arguments.length>=2;return function(n){return n.pipe(r?uS.filter(function(i,o2){return r(i,o2,n)}):fS.identity,sS.take(1),e?cS.defaultIfEmpty(t2):aS.throwIfEmpty(function(){return new oS.EmptyError}))}}bo2.first=lS});var Bc=c(Nt=>{"use strict";var pS=Nt&&Nt.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Nt,"__esModule",{value:true});var hS=_2();function bS(){return function(t2){return t2.lift(new _S)}}Nt.ignoreElements=bS;var _S=function(){function r(){}return r.prototype.call=function(t2,e){return e.subscribe(new vS(t2))},r}(),vS=function(r){pS(t2,r);function t2(){return r!==null&&r.apply(this,arguments)||this}return t2.prototype._next=function(e){},t2}(hS.Subscriber)});var Lc=c(Rt=>{"use strict";var dS=Rt&&Rt.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Rt,"__esModule",{value:true});var yS=_2();function mS(){return function(r){return r.lift(new SS)}}Rt.isEmpty=mS;var SS=function(){function r(){}return r.prototype.call=function(t2,e){return e.subscribe(new OS(t2))},r}(),OS=function(r){dS(t2,r);function t2(e){return r.call(this,e)||this}return t2.prototype.notifyComplete=function(e){var n=this.destination;n.next(e),n.complete()},t2.prototype._next=function(e){this.notifyComplete(false)},t2.prototype._complete=function(){this.notifyComplete(true)},t2}(yS.Subscriber)});var zr=c(kt2=>{"use strict";var wS=kt2&&kt2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(kt2,"__esModule",{value:true});var gS=_2(),xS=_e(),qS=P2();function jS(r){return function(e){return r===0?qS.empty():e.lift(new PS(r))}}kt2.takeLast=jS;var PS=function(){function r(t2){if(this.total=t2,this.total<0)throw new xS.ArgumentOutOfRangeError}return r.prototype.call=function(t2,e){return e.subscribe(new ES(t2,this.total))},r}(),ES=function(r){wS(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.total=n,i.ring=new Array,i.count=0,i}return t2.prototype._next=function(e){var n=this.ring,i=this.total,o2=this.count++;if(n.length<i)n.push(e);else{var u2=o2%i;n[u2]=e}},t2.prototype._complete=function(){var e=this.destination,n=this.count;if(n>0)for(var i=this.count>=this.total?this.total:this.count,o2=this.ring,u2=0;u2<i;u2++){var s=n++%i;e.next(o2[s])}e.complete()},t2}(gS.Subscriber)});var zc=c(_o2=>{"use strict";Object.defineProperty(_o2,"__esModule",{value:true});var AS=ve(),TS=K(),MS=zr(),CS=Et(),IS=Se(),NS=V();function RS(r,t2){var e=arguments.length>=2;return function(n){return n.pipe(r?TS.filter(function(i,o2){return r(i,o2,n)}):NS.identity,MS.takeLast(1),e?IS.defaultIfEmpty(t2):CS.throwIfEmpty(function(){return new AS.EmptyError}))}}_o2.last=RS});var Gc=c(Vt=>{"use strict";var kS=Vt&&Vt.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Vt,"__esModule",{value:true});var VS=_2();function WS(r){return function(t2){return t2.lift(new FS(r))}}Vt.mapTo=WS;var FS=function(){function r(t2){this.value=t2}return r.prototype.call=function(t2,e){return e.subscribe(new DS(t2,this.value))},r}(),DS=function(r){kS(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.value=n,i}return t2.prototype._next=function(e){this.destination.next(this.value)},t2}(VS.Subscriber)});var Yc=c(Wt=>{"use strict";var US=Wt&&Wt.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Wt,"__esModule",{value:true});var BS=_2(),vo2=Ye();function LS(){return function(t2){return t2.lift(new zS)}}Wt.materialize=LS;var zS=function(){function r(){}return r.prototype.call=function(t2,e){return e.subscribe(new GS(t2))},r}(),GS=function(r){US(t2,r);function t2(e){return r.call(this,e)||this}return t2.prototype._next=function(e){this.destination.next(vo2.Notification.createNext(e))},t2.prototype._error=function(e){var n=this.destination;n.next(vo2.Notification.createError(e)),n.complete()},t2.prototype._complete=function(){var e=this.destination;e.next(vo2.Notification.createComplete()),e.complete()},t2}(BS.Subscriber)});var Gr=c(Ft=>{"use strict";var YS=Ft&&Ft.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Ft,"__esModule",{value:true});var QS=_2();function HS(r,t2){var e=false;return arguments.length>=2&&(e=true),function(i){return i.lift(new KS(r,t2,e))}}Ft.scan=HS;var KS=function(){function r(t2,e,n){n===void 0&&(n=false),this.accumulator=t2,this.seed=e,this.hasSeed=n}return r.prototype.call=function(t2,e){return e.subscribe(new JS(t2,this.accumulator,this.seed,this.hasSeed))},r}(),JS=function(r){YS(t2,r);function t2(e,n,i,o2){var u2=r.call(this,e)||this;return u2.accumulator=n,u2._seed=i,u2.hasSeed=o2,u2.index=0,u2}return Object.defineProperty(t2.prototype,"seed",{get:function(){return this._seed},set:function(e){this.hasSeed=true,this._seed=e},enumerable:true,configurable:true}),t2.prototype._next=function(e){if(!this.hasSeed)this.seed=e,this.destination.next(e);else return this._tryNext(e)},t2.prototype._tryNext=function(e){var n=this.index++,i;try{i=this.accumulator(this.seed,e,n)}catch(o2){this.destination.error(o2)}this.seed=i,this.destination.next(i)},t2}(QS.Subscriber)});var Dt=c(yo2=>{"use strict";Object.defineProperty(yo2,"__esModule",{value:true});var Qc2=Gr(),Hc2=zr(),ZS=Se(),Kc2=gr();function $S(r,t2){return arguments.length>=2?function(n){return Kc2.pipe(Qc2.scan(r,t2),Hc2.takeLast(1),ZS.defaultIfEmpty(t2))(n)}:function(n){return Kc2.pipe(Qc2.scan(function(i,o2,u2){return r(i,o2,u2+1)}),Hc2.takeLast(1))(n)}}yo2.reduce=$S});var Jc=c(mo2=>{"use strict";Object.defineProperty(mo2,"__esModule",{value:true});var XS=Dt();function eO(r){var t2=typeof r=="function"?function(e,n){return r(e,n)>0?e:n}:function(e,n){return e>n?e:n};return XS.reduce(t2)}mo2.max=eO});var Zc=c(So2=>{"use strict";Object.defineProperty(So2,"__esModule",{value:true});var tO=Ti();function rO(){for(var r=[],t2=0;t2<arguments.length;t2++)r[t2]=arguments[t2];return function(e){return e.lift.call(tO.merge.apply(void 0,[e].concat(r)))}}So2.merge=rO});var Xc=c(Oo=>{"use strict";Object.defineProperty(Oo,"__esModule",{value:true});var $c2=ut();function nO(r,t2,e){return e===void 0&&(e=Number.POSITIVE_INFINITY),typeof t2=="function"?$c2.mergeMap(function(){return r},t2,e):(typeof t2=="number"&&(e=t2),$c2.mergeMap(function(){return r},e))}Oo.mergeMapTo=nO});var ra=c(ee2=>{"use strict";var iO=ee2&&ee2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(ee2,"__esModule",{value:true});var wo2=y3();function oO(r,t2,e){return e===void 0&&(e=Number.POSITIVE_INFINITY),function(n){return n.lift(new ea2(r,t2,e))}}ee2.mergeScan=oO;var ea2=function(){function r(t2,e,n){this.accumulator=t2,this.seed=e,this.concurrent=n}return r.prototype.call=function(t2,e){return e.subscribe(new ta2(t2,this.accumulator,this.seed,this.concurrent))},r}();ee2.MergeScanOperator=ea2;var ta2=function(r){iO(t2,r);function t2(e,n,i,o2){var u2=r.call(this,e)||this;return u2.accumulator=n,u2.acc=i,u2.concurrent=o2,u2.hasValue=false,u2.hasCompleted=false,u2.buffer=[],u2.active=0,u2.index=0,u2}return t2.prototype._next=function(e){if(this.active<this.concurrent){var n=this.index++,i=this.destination,o2=void 0;try{var u2=this.accumulator;o2=u2(this.acc,e,n)}catch(s){return i.error(s)}this.active++,this._innerSub(o2)}else this.buffer.push(e)},t2.prototype._innerSub=function(e){var n=new wo2.SimpleInnerSubscriber(this),i=this.destination;i.add(n);var o2=wo2.innerSubscribe(e,n);o2!==n&&i.add(o2)},t2.prototype._complete=function(){this.hasCompleted=true,this.active===0&&this.buffer.length===0&&(this.hasValue===false&&this.destination.next(this.acc),this.destination.complete()),this.unsubscribe()},t2.prototype.notifyNext=function(e){var n=this.destination;this.acc=e,this.hasValue=true,n.next(e)},t2.prototype.notifyComplete=function(){var e=this.buffer;this.active--,e.length>0?this._next(e.shift()):this.active===0&&this.hasCompleted&&(this.hasValue===false&&this.destination.next(this.acc),this.destination.complete())},t2}(wo2.SimpleOuterSubscriber);ee2.MergeScanSubscriber=ta2});var na=c(go=>{"use strict";Object.defineProperty(go,"__esModule",{value:true});var uO=Dt();function sO(r){var t2=typeof r=="function"?function(e,n){return r(e,n)<0?e:n}:function(e,n){return e<n?e:n};return uO.reduce(t2)}go.min=sO});var te=c(Yr2=>{"use strict";Object.defineProperty(Yr2,"__esModule",{value:true});var cO=Pn();function aO(r,t2){return function(n){var i;if(typeof r=="function"?i=r:i=function(){return r},typeof t2=="function")return n.lift(new ia2(i,t2));var o2=Object.create(n,cO.connectableObservableDescriptor);return o2.source=n,o2.subjectFactory=i,o2}}Yr2.multicast=aO;var ia2=function(){function r(t2,e){this.subjectFactory=t2,this.selector=e}return r.prototype.call=function(t2,e){var n=this.selector,i=this.subjectFactory(),o2=n(i).subscribe(t2);return o2.add(e.subscribe(i)),o2},r}();Yr2.MulticastOperator=ia2});var sa=c(we2=>{"use strict";var fO=we2&&we2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(we2,"__esModule",{value:true});var lO=A3(),oa2=g(),xo=y3();function pO(){for(var r=[],t2=0;t2<arguments.length;t2++)r[t2]=arguments[t2];return r.length===1&&oa2.isArray(r[0])&&(r=r[0]),function(e){return e.lift(new ua2(r))}}we2.onErrorResumeNext=pO;function hO(){for(var r=[],t2=0;t2<arguments.length;t2++)r[t2]=arguments[t2];var e=void 0;return r.length===1&&oa2.isArray(r[0])&&(r=r[0]),e=r.shift(),lO.from(e).lift(new ua2(r))}we2.onErrorResumeNextStatic=hO;var ua2=function(){function r(t2){this.nextSources=t2}return r.prototype.call=function(t2,e){return e.subscribe(new bO(t2,this.nextSources))},r}(),bO=function(r){fO(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.destination=e,i.nextSources=n,i}return t2.prototype.notifyError=function(){this.subscribeToNextSource()},t2.prototype.notifyComplete=function(){this.subscribeToNextSource()},t2.prototype._error=function(e){this.subscribeToNextSource(),this.unsubscribe()},t2.prototype._complete=function(){this.subscribeToNextSource(),this.unsubscribe()},t2.prototype.subscribeToNextSource=function(){var e=this.nextSources.shift();if(e){var n=new xo.SimpleInnerSubscriber(this),i=this.destination;i.add(n);var o2=xo.innerSubscribe(e,n);o2!==n&&i.add(o2)}else this.destination.complete()},t2}(xo.SimpleOuterSubscriber)});var ca=c(Ut=>{"use strict";var _O=Ut&&Ut.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Ut,"__esModule",{value:true});var vO=_2();function dO(){return function(r){return r.lift(new yO)}}Ut.pairwise=dO;var yO=function(){function r(){}return r.prototype.call=function(t2,e){return e.subscribe(new mO(t2))},r}(),mO=function(r){_O(t2,r);function t2(e){var n=r.call(this,e)||this;return n.hasPrev=false,n}return t2.prototype._next=function(e){var n;this.hasPrev?n=[this.prev,e]:this.hasPrev=true,this.prev=e,n&&this.destination.next(n)},t2}(vO.Subscriber)});var fa=c(qo2=>{"use strict";Object.defineProperty(qo2,"__esModule",{value:true});var SO=Ri(),aa2=K();function OO(r,t2){return function(e){return[aa2.filter(r,t2)(e),aa2.filter(SO.not(r,t2))(e)]}}qo2.partition=OO});var la=c(jo2=>{"use strict";Object.defineProperty(jo2,"__esModule",{value:true});var wO=j();function gO(){for(var r=[],t2=0;t2<arguments.length;t2++)r[t2]=arguments[t2];var e=r.length;if(e===0)throw new Error("list of properties cannot be empty.");return function(n){return wO.map(xO(r,e))(n)}}jo2.pluck=gO;function xO(r,t2){var e=function(n){for(var i=n,o2=0;o2<t2;o2++){var u2=i?.[r[o2]];if(u2!==void 0)i=u2;else return}return i};return e}});var ba=c(Po2=>{"use strict";Object.defineProperty(Po2,"__esModule",{value:true});var pa2=w2(),ha2=te();function qO(r){return r?ha2.multicast(function(){return new pa2.Subject},r):ha2.multicast(new pa2.Subject)}Po2.publish=qO});var _a=c(Eo2=>{"use strict";Object.defineProperty(Eo2,"__esModule",{value:true});var jO=Tn(),PO=te();function EO(r){return function(t2){return PO.multicast(new jO.BehaviorSubject(r))(t2)}}Eo2.publishBehavior=EO});var va=c(Ao2=>{"use strict";Object.defineProperty(Ao2,"__esModule",{value:true});var AO=Ke(),TO=te();function MO(){return function(r){return TO.multicast(new AO.AsyncSubject)(r)}}Ao2.publishLast=MO});var da=c(To2=>{"use strict";Object.defineProperty(To2,"__esModule",{value:true});var CO=Ar(),IO=te();function NO(r,t2,e,n){e&&typeof e!="function"&&(n=e);var i=typeof e=="function"?e:void 0,o2=new CO.ReplaySubject(r,t2,n);return function(u2){return IO.multicast(function(){return o2},i)(u2)}}To2.publishReplay=NO});var ya=c(Mo2=>{"use strict";Object.defineProperty(Mo2,"__esModule",{value:true});var RO=g(),kO=Vi();function VO(){for(var r=[],t2=0;t2<arguments.length;t2++)r[t2]=arguments[t2];return function(n){return r.length===1&&RO.isArray(r[0])&&(r=r[0]),n.lift.call(kO.race.apply(void 0,[n].concat(r)))}}Mo2.race=VO});var Sa=c(Bt2=>{"use strict";var WO=Bt2&&Bt2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Bt2,"__esModule",{value:true});var FO=_2(),DO=P2();function UO(r){return r===void 0&&(r=-1),function(t2){return r===0?DO.empty():r<0?t2.lift(new ma2(-1,t2)):t2.lift(new ma2(r-1,t2))}}Bt2.repeat=UO;var ma2=function(){function r(t2,e){this.count=t2,this.source=e}return r.prototype.call=function(t2,e){return e.subscribe(new BO(t2,this.count,this.source))},r}(),BO=function(r){WO(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;return o2.count=n,o2.source=i,o2}return t2.prototype.complete=function(){if(!this.isStopped){var e=this,n=e.source,i=e.count;if(i===0)return r.prototype.complete.call(this);i>-1&&(this.count=i-1),n.subscribe(this._unsubscribeAndRecycle())}},t2}(FO.Subscriber)});var Oa=c(Lt=>{"use strict";var LO=Lt&&Lt.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Lt,"__esModule",{value:true});var zO=w2(),Co2=y3();function GO(r){return function(t2){return t2.lift(new YO(r))}}Lt.repeatWhen=GO;var YO=function(){function r(t2){this.notifier=t2}return r.prototype.call=function(t2,e){return e.subscribe(new QO(t2,this.notifier,e))},r}(),QO=function(r){LO(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;return o2.notifier=n,o2.source=i,o2.sourceIsBeingSubscribedTo=true,o2}return t2.prototype.notifyNext=function(){this.sourceIsBeingSubscribedTo=true,this.source.subscribe(this)},t2.prototype.notifyComplete=function(){if(this.sourceIsBeingSubscribedTo===false)return r.prototype.complete.call(this)},t2.prototype.complete=function(){if(this.sourceIsBeingSubscribedTo=false,!this.isStopped){if(this.retries||this.subscribeToRetries(),!this.retriesSubscription||this.retriesSubscription.closed)return r.prototype.complete.call(this);this._unsubscribeAndRecycle(),this.notifications.next(void 0)}},t2.prototype._unsubscribe=function(){var e=this,n=e.notifications,i=e.retriesSubscription;n&&(n.unsubscribe(),this.notifications=void 0),i&&(i.unsubscribe(),this.retriesSubscription=void 0),this.retries=void 0},t2.prototype._unsubscribeAndRecycle=function(){var e=this._unsubscribe;return this._unsubscribe=null,r.prototype._unsubscribeAndRecycle.call(this),this._unsubscribe=e,this},t2.prototype.subscribeToRetries=function(){this.notifications=new zO.Subject;var e;try{var n=this.notifier;e=n(this.notifications)}catch{return r.prototype.complete.call(this)}this.retries=e,this.retriesSubscription=Co2.innerSubscribe(e,new Co2.SimpleInnerSubscriber(this))},t2}(Co2.SimpleOuterSubscriber)});var wa=c(zt=>{"use strict";var HO=zt&&zt.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(zt,"__esModule",{value:true});var KO=_2();function JO(r){return r===void 0&&(r=-1),function(t2){return t2.lift(new ZO(r,t2))}}zt.retry=JO;var ZO=function(){function r(t2,e){this.count=t2,this.source=e}return r.prototype.call=function(t2,e){return e.subscribe(new $O(t2,this.count,this.source))},r}(),$O=function(r){HO(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;return o2.count=n,o2.source=i,o2}return t2.prototype.error=function(e){if(!this.isStopped){var n=this,i=n.source,o2=n.count;if(o2===0)return r.prototype.error.call(this,e);o2>-1&&(this.count=o2-1),i.subscribe(this._unsubscribeAndRecycle())}},t2}(KO.Subscriber)});var ga=c(Gt=>{"use strict";var XO=Gt&&Gt.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Gt,"__esModule",{value:true});var ew=w2(),Io2=y3();function tw(r){return function(t2){return t2.lift(new rw(r,t2))}}Gt.retryWhen=tw;var rw=function(){function r(t2,e){this.notifier=t2,this.source=e}return r.prototype.call=function(t2,e){return e.subscribe(new nw(t2,this.notifier,this.source))},r}(),nw=function(r){XO(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;return o2.notifier=n,o2.source=i,o2}return t2.prototype.error=function(e){if(!this.isStopped){var n=this.errors,i=this.retries,o2=this.retriesSubscription;if(i)this.errors=void 0,this.retriesSubscription=void 0;else{n=new ew.Subject;try{var u2=this.notifier;i=u2(n)}catch(s){return r.prototype.error.call(this,s)}o2=Io2.innerSubscribe(i,new Io2.SimpleInnerSubscriber(this))}this._unsubscribeAndRecycle(),this.errors=n,this.retries=i,this.retriesSubscription=o2,n.next(e)}},t2.prototype._unsubscribe=function(){var e=this,n=e.errors,i=e.retriesSubscription;n&&(n.unsubscribe(),this.errors=void 0),i&&(i.unsubscribe(),this.retriesSubscription=void 0),this.retries=void 0},t2.prototype.notifyNext=function(){var e=this._unsubscribe;this._unsubscribe=null,this._unsubscribeAndRecycle(),this._unsubscribe=e,this.source.subscribe(this)},t2}(Io2.SimpleOuterSubscriber)});var xa=c(Yt=>{"use strict";var iw=Yt&&Yt.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Yt,"__esModule",{value:true});var No2=y3();function ow(r){return function(t2){return t2.lift(new uw(r))}}Yt.sample=ow;var uw=function(){function r(t2){this.notifier=t2}return r.prototype.call=function(t2,e){var n=new sw(t2),i=e.subscribe(n);return i.add(No2.innerSubscribe(this.notifier,new No2.SimpleInnerSubscriber(n))),i},r}(),sw=function(r){iw(t2,r);function t2(){var e=r!==null&&r.apply(this,arguments)||this;return e.hasValue=false,e}return t2.prototype._next=function(e){this.value=e,this.hasValue=true},t2.prototype.notifyNext=function(){this.emitValue()},t2.prototype.notifyComplete=function(){this.emitValue()},t2.prototype.emitValue=function(){this.hasValue&&(this.hasValue=false,this.destination.next(this.value))},t2}(No2.SimpleOuterSubscriber)});var qa=c(Qt=>{"use strict";var cw=Qt&&Qt.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Qt,"__esModule",{value:true});var aw=_2(),fw=x3();function lw(r,t2){return t2===void 0&&(t2=fw.async),function(e){return e.lift(new pw(r,t2))}}Qt.sampleTime=lw;var pw=function(){function r(t2,e){this.period=t2,this.scheduler=e}return r.prototype.call=function(t2,e){return e.subscribe(new hw(t2,this.period,this.scheduler))},r}(),hw=function(r){cw(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;return o2.period=n,o2.scheduler=i,o2.hasValue=false,o2.add(i.schedule(bw,n,{subscriber:o2,period:n})),o2}return t2.prototype._next=function(e){this.lastValue=e,this.hasValue=true},t2.prototype.notifyNext=function(){this.hasValue&&(this.hasValue=false,this.destination.next(this.lastValue))},t2}(aw.Subscriber);function bw(r){var t2=r.subscriber,e=r.period;t2.notifyNext(),this.schedule(r,e)}});var Ta=c(re2=>{"use strict";var ja2=re2&&re2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(re2,"__esModule",{value:true});var Pa2=_2();function _w(r,t2){return function(e){return e.lift(new Ea2(r,t2))}}re2.sequenceEqual=_w;var Ea2=function(){function r(t2,e){this.compareTo=t2,this.comparator=e}return r.prototype.call=function(t2,e){return e.subscribe(new Aa2(t2,this.compareTo,this.comparator))},r}();re2.SequenceEqualOperator=Ea2;var Aa2=function(r){ja2(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;return o2.compareTo=n,o2.comparator=i,o2._a=[],o2._b=[],o2._oneComplete=false,o2.destination.add(n.subscribe(new vw(e,o2))),o2}return t2.prototype._next=function(e){this._oneComplete&&this._b.length===0?this.emit(false):(this._a.push(e),this.checkValues())},t2.prototype._complete=function(){this._oneComplete?this.emit(this._a.length===0&&this._b.length===0):this._oneComplete=true,this.unsubscribe()},t2.prototype.checkValues=function(){for(var e=this,n=e._a,i=e._b,o2=e.comparator;n.length>0&&i.length>0;){var u2=n.shift(),s=i.shift(),f=false;try{f=o2?o2(u2,s):u2===s}catch(a){this.destination.error(a)}f||this.emit(false)}},t2.prototype.emit=function(e){var n=this.destination;n.next(e),n.complete()},t2.prototype.nextB=function(e){this._oneComplete&&this._a.length===0?this.emit(false):(this._b.push(e),this.checkValues())},t2.prototype.completeB=function(){this._oneComplete?this.emit(this._a.length===0&&this._b.length===0):this._oneComplete=true},t2}(Pa2.Subscriber);re2.SequenceEqualSubscriber=Aa2;var vw=function(r){ja2(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.parent=n,i}return t2.prototype._next=function(e){this.parent.nextB(e)},t2.prototype._error=function(e){this.parent.error(e),this.unsubscribe()},t2.prototype._complete=function(){this.parent.completeB(),this.unsubscribe()},t2}(Pa2.Subscriber)});var Ma=c(Ro2=>{"use strict";Object.defineProperty(Ro2,"__esModule",{value:true});var dw=te(),yw=qr(),mw=w2();function Sw(){return new mw.Subject}function Ow(){return function(r){return yw.refCount()(dw.multicast(Sw)(r))}}Ro2.share=Ow});var Ca=c(ko2=>{"use strict";Object.defineProperty(ko2,"__esModule",{value:true});var ww=Ar();function gw(r,t2,e){var n;return r&&typeof r=="object"?n=r:n={bufferSize:r,windowTime:t2,refCount:false,scheduler:e},function(i){return i.lift(xw(n))}}ko2.shareReplay=gw;function xw(r){var t2=r.bufferSize,e=t2===void 0?Number.POSITIVE_INFINITY:t2,n=r.windowTime,i=n===void 0?Number.POSITIVE_INFINITY:n,o2=r.refCount,u2=r.scheduler,s,f=0,a,p=false,b2=false;return function(q2){f++;var I2;!s||p?(p=false,s=new ww.ReplaySubject(e,i,u2),I2=s.subscribe(this),a=q2.subscribe({next:function(oe2){s.next(oe2)},error:function(oe2){p=true,s.error(oe2)},complete:function(){b2=true,a=void 0,s.complete()}}),b2&&(a=void 0)):I2=s.subscribe(this),this.add(function(){f--,I2.unsubscribe(),I2=void 0,a&&!b2&&o2&&f===0&&(a.unsubscribe(),a=void 0,s=void 0)})}}});var Ia=c(Ht=>{"use strict";var qw=Ht&&Ht.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Ht,"__esModule",{value:true});var jw=_2(),Pw=ve();function Ew(r){return function(t2){return t2.lift(new Aw(r,t2))}}Ht.single=Ew;var Aw=function(){function r(t2,e){this.predicate=t2,this.source=e}return r.prototype.call=function(t2,e){return e.subscribe(new Tw(t2,this.predicate,this.source))},r}(),Tw=function(r){qw(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;return o2.predicate=n,o2.source=i,o2.seenValue=false,o2.index=0,o2}return t2.prototype.applySingleValue=function(e){this.seenValue?this.destination.error("Sequence contains more than one element"):(this.seenValue=true,this.singleValue=e)},t2.prototype._next=function(e){var n=this.index++;this.predicate?this.tryNext(e,n):this.applySingleValue(e)},t2.prototype.tryNext=function(e,n){try{this.predicate(e,n,this.source)&&this.applySingleValue(e)}catch(i){this.destination.error(i)}},t2.prototype._complete=function(){var e=this.destination;this.index>0?(e.next(this.seenValue?this.singleValue:void 0),e.complete()):e.error(new Pw.EmptyError)},t2}(jw.Subscriber)});var Na=c(Kt2=>{"use strict";var Mw=Kt2&&Kt2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Kt2,"__esModule",{value:true});var Cw=_2();function Iw(r){return function(t2){return t2.lift(new Nw(r))}}Kt2.skip=Iw;var Nw=function(){function r(t2){this.total=t2}return r.prototype.call=function(t2,e){return e.subscribe(new Rw(t2,this.total))},r}(),Rw=function(r){Mw(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.total=n,i.count=0,i}return t2.prototype._next=function(e){++this.count>this.total&&this.destination.next(e)},t2}(Cw.Subscriber)});var ka=c(Jt2=>{"use strict";var kw=Jt2&&Jt2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Jt2,"__esModule",{value:true});var Ra2=_2(),Vw=_e();function Ww(r){return function(t2){return t2.lift(new Fw(r))}}Jt2.skipLast=Ww;var Fw=function(){function r(t2){if(this._skipCount=t2,this._skipCount<0)throw new Vw.ArgumentOutOfRangeError}return r.prototype.call=function(t2,e){return this._skipCount===0?e.subscribe(new Ra2.Subscriber(t2)):e.subscribe(new Dw(t2,this._skipCount))},r}(),Dw=function(r){kw(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i._skipCount=n,i._count=0,i._ring=new Array(n),i}return t2.prototype._next=function(e){var n=this._skipCount,i=this._count++;if(i<n)this._ring[i]=e;else{var o2=i%n,u2=this._ring,s=u2[o2];u2[o2]=e,this.destination.next(s)}},t2}(Ra2.Subscriber)});var Va=c(Zt=>{"use strict";var Uw=Zt&&Zt.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Zt,"__esModule",{value:true});var Vo2=y3();function Bw(r){return function(t2){return t2.lift(new Lw(r))}}Zt.skipUntil=Bw;var Lw=function(){function r(t2){this.notifier=t2}return r.prototype.call=function(t2,e){return e.subscribe(new zw(t2,this.notifier))},r}(),zw=function(r){Uw(t2,r);function t2(e,n){var i=r.call(this,e)||this;i.hasValue=false;var o2=new Vo2.SimpleInnerSubscriber(i);i.add(o2),i.innerSubscription=o2;var u2=Vo2.innerSubscribe(n,o2);return u2!==o2&&(i.add(u2),i.innerSubscription=u2),i}return t2.prototype._next=function(e){this.hasValue&&r.prototype._next.call(this,e)},t2.prototype.notifyNext=function(){this.hasValue=true,this.innerSubscription&&this.innerSubscription.unsubscribe()},t2.prototype.notifyComplete=function(){},t2}(Vo2.SimpleOuterSubscriber)});var Wa=c($t=>{"use strict";var Gw=$t&&$t.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty($t,"__esModule",{value:true});var Yw=_2();function Qw(r){return function(t2){return t2.lift(new Hw(r))}}$t.skipWhile=Qw;var Hw=function(){function r(t2){this.predicate=t2}return r.prototype.call=function(t2,e){return e.subscribe(new Kw(t2,this.predicate))},r}(),Kw=function(r){Gw(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.predicate=n,i.skipping=true,i.index=0,i}return t2.prototype._next=function(e){var n=this.destination;this.skipping&&this.tryCallPredicate(e),this.skipping||n.next(e)},t2.prototype.tryCallPredicate=function(e){try{var n=this.predicate(e,this.index++);this.skipping=Boolean(n)}catch(i){this.destination.error(i)}},t2}(Yw.Subscriber)});var Da=c(Wo2=>{"use strict";Object.defineProperty(Wo2,"__esModule",{value:true});var Fa2=st(),Jw=E2();function Zw(){for(var r=[],t2=0;t2<arguments.length;t2++)r[t2]=arguments[t2];var e=r[r.length-1];return Jw.isScheduler(e)?(r.pop(),function(n){return Fa2.concat(r,n,e)}):function(n){return Fa2.concat(r,n)}}Wo2.startWith=Zw});var Ua=c(Xt2=>{"use strict";var $w=Xt2&&Xt2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(Xt2,"__esModule",{value:true});var Xw=d2(),Fo2=Ln(),e1=ct(),t1=function(r){$w(t2,r);function t2(e,n,i){n===void 0&&(n=0),i===void 0&&(i=Fo2.asap);var o2=r.call(this)||this;return o2.source=e,o2.delayTime=n,o2.scheduler=i,(!e1.isNumeric(n)||n<0)&&(o2.delayTime=0),(!i||typeof i.schedule!="function")&&(o2.scheduler=Fo2.asap),o2}return t2.create=function(e,n,i){return n===void 0&&(n=0),i===void 0&&(i=Fo2.asap),new t2(e,n,i)},t2.dispatch=function(e){var n=e.source,i=e.subscriber;return this.add(n.subscribe(i))},t2.prototype._subscribe=function(e){var n=this.delayTime,i=this.source,o2=this.scheduler;return o2.schedule(t2.dispatch,n,{source:i,subscriber:e})},t2}(Xw.Observable);Xt2.SubscribeOnObservable=t1});var Ba=c(Do2=>{"use strict";Object.defineProperty(Do2,"__esModule",{value:true});var r1=Ua();function n1(r,t2){return t2===void 0&&(t2=0),function(n){return n.lift(new i1(r,t2))}}Do2.subscribeOn=n1;var i1=function(){function r(t2,e){this.scheduler=t2,this.delay=e}return r.prototype.call=function(t2,e){return new r1.SubscribeOnObservable(e,this.delay,this.scheduler).subscribe(t2)},r}()});var Qr=c(er2=>{"use strict";var o1=er2&&er2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(er2,"__esModule",{value:true});var u1=j(),s1=A3(),Uo2=y3();function La2(r,t2){return typeof t2=="function"?function(e){return e.pipe(La2(function(n,i){return s1.from(r(n,i)).pipe(u1.map(function(o2,u2){return t2(n,o2,i,u2)}))}))}:function(e){return e.lift(new c1(r))}}er2.switchMap=La2;var c1=function(){function r(t2){this.project=t2}return r.prototype.call=function(t2,e){return e.subscribe(new a1(t2,this.project))},r}(),a1=function(r){o1(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.project=n,i.index=0,i}return t2.prototype._next=function(e){var n,i=this.index++;try{n=this.project(e,i)}catch(o2){this.destination.error(o2);return}this._innerSub(n)},t2.prototype._innerSub=function(e){var n=this.innerSubscription;n&&n.unsubscribe();var i=new Uo2.SimpleInnerSubscriber(this),o2=this.destination;o2.add(i),this.innerSubscription=Uo2.innerSubscribe(e,i),this.innerSubscription!==i&&o2.add(this.innerSubscription)},t2.prototype._complete=function(){var e=this.innerSubscription;(!e||e.closed)&&r.prototype._complete.call(this),this.unsubscribe()},t2.prototype._unsubscribe=function(){this.innerSubscription=void 0},t2.prototype.notifyComplete=function(){this.innerSubscription=void 0,this.isStopped&&r.prototype._complete.call(this)},t2.prototype.notifyNext=function(e){this.destination.next(e)},t2}(Uo2.SimpleOuterSubscriber)});var za=c(Bo2=>{"use strict";Object.defineProperty(Bo2,"__esModule",{value:true});var f1=Qr(),l1=V();function p1(){return f1.switchMap(l1.identity)}Bo2.switchAll=p1});var Ya=c(Lo2=>{"use strict";Object.defineProperty(Lo2,"__esModule",{value:true});var Ga2=Qr();function h1(r,t2){return t2?Ga2.switchMap(function(){return r},t2):Ga2.switchMap(function(){return r})}Lo2.switchMapTo=h1});var Qa=c(tr2=>{"use strict";var b1=tr2&&tr2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(tr2,"__esModule",{value:true});var zo2=y3();function _1(r){return function(t2){return t2.lift(new v1(r))}}tr2.takeUntil=_1;var v1=function(){function r(t2){this.notifier=t2}return r.prototype.call=function(t2,e){var n=new d1(t2),i=zo2.innerSubscribe(this.notifier,new zo2.SimpleInnerSubscriber(n));return i&&!n.seenValue?(n.add(i),e.subscribe(n)):n},r}(),d1=function(r){b1(t2,r);function t2(e){var n=r.call(this,e)||this;return n.seenValue=false,n}return t2.prototype.notifyNext=function(){this.seenValue=true,this.complete()},t2.prototype.notifyComplete=function(){},t2}(zo2.SimpleOuterSubscriber)});var Ha=c(rr2=>{"use strict";var y1=rr2&&rr2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(rr2,"__esModule",{value:true});var m1=_2();function S1(r,t2){return t2===void 0&&(t2=false),function(e){return e.lift(new O1(r,t2))}}rr2.takeWhile=S1;var O1=function(){function r(t2,e){this.predicate=t2,this.inclusive=e}return r.prototype.call=function(t2,e){return e.subscribe(new w1(t2,this.predicate,this.inclusive))},r}(),w1=function(r){y1(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;return o2.predicate=n,o2.inclusive=i,o2.index=0,o2}return t2.prototype._next=function(e){var n=this.destination,i;try{i=this.predicate(e,this.index++)}catch(o2){n.error(o2);return}this.nextOrComplete(e,i)},t2.prototype.nextOrComplete=function(e,n){var i=this.destination;Boolean(n)?i.next(e):(this.inclusive&&i.next(e),i.complete())},t2}(m1.Subscriber)});var Ka=c(nr2=>{"use strict";var g1=nr2&&nr2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(nr2,"__esModule",{value:true});var x1=_2(),B2=Cr(),q1=ue();function j1(r,t2,e){return function(i){return i.lift(new P1(r,t2,e))}}nr2.tap=j1;var P1=function(){function r(t2,e,n){this.nextOrObserver=t2,this.error=e,this.complete=n}return r.prototype.call=function(t2,e){return e.subscribe(new E1(t2,this.nextOrObserver,this.error,this.complete))},r}(),E1=function(r){g1(t2,r);function t2(e,n,i,o2){var u2=r.call(this,e)||this;return u2._tapNext=B2.noop,u2._tapError=B2.noop,u2._tapComplete=B2.noop,u2._tapError=i||B2.noop,u2._tapComplete=o2||B2.noop,q1.isFunction(n)?(u2._context=u2,u2._tapNext=n):n&&(u2._context=n,u2._tapNext=n.next||B2.noop,u2._tapError=n.error||B2.noop,u2._tapComplete=n.complete||B2.noop),u2}return t2.prototype._next=function(e){try{this._tapNext.call(this._context,e)}catch(n){this.destination.error(n);return}this.destination.next(e)},t2.prototype._error=function(e){try{this._tapError.call(this._context,e)}catch(n){this.destination.error(n);return}this.destination.error(e)},t2.prototype._complete=function(){try{this._tapComplete.call(this._context)}catch(e){this.destination.error(e);return}return this.destination.complete()},t2}(x1.Subscriber)});var Yo=c(ne2=>{"use strict";var A1=ne2&&ne2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(ne2,"__esModule",{value:true});var Go2=y3();ne2.defaultThrottleConfig={leading:true,trailing:false};function T1(r,t2){return t2===void 0&&(t2=ne2.defaultThrottleConfig),function(e){return e.lift(new M1(r,!!t2.leading,!!t2.trailing))}}ne2.throttle=T1;var M1=function(){function r(t2,e,n){this.durationSelector=t2,this.leading=e,this.trailing=n}return r.prototype.call=function(t2,e){return e.subscribe(new C1(t2,this.durationSelector,this.leading,this.trailing))},r}(),C1=function(r){A1(t2,r);function t2(e,n,i,o2){var u2=r.call(this,e)||this;return u2.destination=e,u2.durationSelector=n,u2._leading=i,u2._trailing=o2,u2._hasValue=false,u2}return t2.prototype._next=function(e){this._hasValue=true,this._sendValue=e,this._throttled||(this._leading?this.send():this.throttle(e))},t2.prototype.send=function(){var e=this,n=e._hasValue,i=e._sendValue;n&&(this.destination.next(i),this.throttle(i)),this._hasValue=false,this._sendValue=void 0},t2.prototype.throttle=function(e){var n=this.tryDurationSelector(e);n&&this.add(this._throttled=Go2.innerSubscribe(n,new Go2.SimpleInnerSubscriber(this)))},t2.prototype.tryDurationSelector=function(e){try{return this.durationSelector(e)}catch(n){return this.destination.error(n),null}},t2.prototype.throttlingDone=function(){var e=this,n=e._throttled,i=e._trailing;n&&n.unsubscribe(),this._throttled=void 0,i&&this.send()},t2.prototype.notifyNext=function(){this.throttlingDone()},t2.prototype.notifyComplete=function(){this.throttlingDone()},t2}(Go2.SimpleOuterSubscriber)});var Ja=c(ir2=>{"use strict";var I1=ir2&&ir2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(ir2,"__esModule",{value:true});var N1=_2(),R1=x3(),k1=Yo();function V1(r,t2,e){return t2===void 0&&(t2=R1.async),e===void 0&&(e=k1.defaultThrottleConfig),function(n){return n.lift(new W1(r,t2,e.leading,e.trailing))}}ir2.throttleTime=V1;var W1=function(){function r(t2,e,n,i){this.duration=t2,this.scheduler=e,this.leading=n,this.trailing=i}return r.prototype.call=function(t2,e){return e.subscribe(new F1(t2,this.duration,this.scheduler,this.leading,this.trailing))},r}(),F1=function(r){I1(t2,r);function t2(e,n,i,o2,u2){var s=r.call(this,e)||this;return s.duration=n,s.scheduler=i,s.leading=o2,s.trailing=u2,s._hasTrailingValue=false,s._trailingValue=null,s}return t2.prototype._next=function(e){this.throttled?this.trailing&&(this._trailingValue=e,this._hasTrailingValue=true):(this.add(this.throttled=this.scheduler.schedule(D1,this.duration,{subscriber:this})),this.leading?this.destination.next(e):this.trailing&&(this._trailingValue=e,this._hasTrailingValue=true))},t2.prototype._complete=function(){this._hasTrailingValue?(this.destination.next(this._trailingValue),this.destination.complete()):this.destination.complete()},t2.prototype.clearThrottle=function(){var e=this.throttled;e&&(this.trailing&&this._hasTrailingValue&&(this.destination.next(this._trailingValue),this._trailingValue=null,this._hasTrailingValue=false),e.unsubscribe(),this.remove(e),this.throttled=null)},t2}(N1.Subscriber);function D1(r){var t2=r.subscriber;t2.clearThrottle()}});var $a=c(Hr2=>{"use strict";Object.defineProperty(Hr2,"__esModule",{value:true});var U1=x3(),B1=Gr(),L1=Vr(),z1=j();function G1(r){return r===void 0&&(r=U1.async),function(t2){return L1.defer(function(){return t2.pipe(B1.scan(function(e,n){var i=e.current;return{value:n,current:r.now(),last:i}},{current:r.now(),value:void 0,last:void 0}),z1.map(function(e){var n=e.current,i=e.last,o2=e.value;return new Za2(o2,n-i)}))})}}Hr2.timeInterval=G1;var Za2=function(){function r(t2,e){this.value=t2,this.interval=e}return r}();Hr2.TimeInterval=Za2});var Ho=c(or2=>{"use strict";var Y1=or2&&or2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(or2,"__esModule",{value:true});var Q1=x3(),H1=ro(),Qo2=y3();function K1(r,t2,e){return e===void 0&&(e=Q1.async),function(n){var i=H1.isDate(r),o2=i?+r-e.now():Math.abs(r);return n.lift(new J1(o2,i,t2,e))}}or2.timeoutWith=K1;var J1=function(){function r(t2,e,n,i){this.waitFor=t2,this.absoluteTimeout=e,this.withObservable=n,this.scheduler=i}return r.prototype.call=function(t2,e){return e.subscribe(new Z1(t2,this.absoluteTimeout,this.waitFor,this.withObservable,this.scheduler))},r}(),Z1=function(r){Y1(t2,r);function t2(e,n,i,o2,u2){var s=r.call(this,e)||this;return s.absoluteTimeout=n,s.waitFor=i,s.withObservable=o2,s.scheduler=u2,s.scheduleTimeout(),s}return t2.dispatchTimeout=function(e){var n=e.withObservable;e._unsubscribeAndRecycle(),e.add(Qo2.innerSubscribe(n,new Qo2.SimpleInnerSubscriber(e)))},t2.prototype.scheduleTimeout=function(){var e=this.action;e?this.action=e.schedule(this,this.waitFor):this.add(this.action=this.scheduler.schedule(t2.dispatchTimeout,this.waitFor,this))},t2.prototype._next=function(e){this.absoluteTimeout||this.scheduleTimeout(),r.prototype._next.call(this,e)},t2.prototype._unsubscribe=function(){this.action=void 0,this.scheduler=null,this.withObservable=null},t2}(Qo2.SimpleOuterSubscriber)});var Xa=c(Ko2=>{"use strict";Object.defineProperty(Ko2,"__esModule",{value:true});var $1=x3(),X1=Kn(),eg=Ho(),tg=Er();function rg(r,t2){return t2===void 0&&(t2=$1.async),eg.timeoutWith(r,tg.throwError(new X1.TimeoutError),t2)}Ko2.timeout=rg});var tf=c(Kr2=>{"use strict";Object.defineProperty(Kr2,"__esModule",{value:true});var ng=x3(),ig=j();function og(r){return r===void 0&&(r=ng.async),ig.map(function(t2){return new ef(t2,r.now())})}Kr2.timestamp=og;var ef=function(){function r(t2,e){this.value=t2,this.timestamp=e}return r}();Kr2.Timestamp=ef});var rf=c(Jo2=>{"use strict";Object.defineProperty(Jo2,"__esModule",{value:true});var ug=Dt();function sg(r,t2,e){return e===0?[t2]:(r.push(t2),r)}function cg(){return ug.reduce(sg,[])}Jo2.toArray=cg});var of=c(ur2=>{"use strict";var ag=ur2&&ur2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(ur2,"__esModule",{value:true});var nf=w2(),Zo2=y3();function fg(r){return function(e){return e.lift(new lg(r))}}ur2.window=fg;var lg=function(){function r(t2){this.windowBoundaries=t2}return r.prototype.call=function(t2,e){var n=new pg(t2),i=e.subscribe(n);return i.closed||n.add(Zo2.innerSubscribe(this.windowBoundaries,new Zo2.SimpleInnerSubscriber(n))),i},r}(),pg=function(r){ag(t2,r);function t2(e){var n=r.call(this,e)||this;return n.window=new nf.Subject,e.next(n.window),n}return t2.prototype.notifyNext=function(){this.openWindow()},t2.prototype.notifyError=function(e){this._error(e)},t2.prototype.notifyComplete=function(){this._complete()},t2.prototype._next=function(e){this.window.next(e)},t2.prototype._error=function(e){this.window.error(e),this.destination.error(e)},t2.prototype._complete=function(){this.window.complete(),this.destination.complete()},t2.prototype._unsubscribe=function(){this.window=null},t2.prototype.openWindow=function(){var e=this.window;e&&e.complete();var n=this.destination,i=this.window=new nf.Subject;n.next(i)},t2}(Zo2.SimpleOuterSubscriber)});var sf=c(sr2=>{"use strict";var hg=sr2&&sr2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(sr2,"__esModule",{value:true});var bg=_2(),uf=w2();function _g(r,t2){return t2===void 0&&(t2=0),function(n){return n.lift(new vg(r,t2))}}sr2.windowCount=_g;var vg=function(){function r(t2,e){this.windowSize=t2,this.startWindowEvery=e}return r.prototype.call=function(t2,e){return e.subscribe(new dg(t2,this.windowSize,this.startWindowEvery))},r}(),dg=function(r){hg(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;return o2.destination=e,o2.windowSize=n,o2.startWindowEvery=i,o2.windows=[new uf.Subject],o2.count=0,e.next(o2.windows[0]),o2}return t2.prototype._next=function(e){for(var n=this.startWindowEvery>0?this.startWindowEvery:this.windowSize,i=this.destination,o2=this.windowSize,u2=this.windows,s=u2.length,f=0;f<s&&!this.closed;f++)u2[f].next(e);var a=this.count-o2+1;if(a>=0&&a%n===0&&!this.closed&&u2.shift().complete(),++this.count%n===0&&!this.closed){var p=new uf.Subject;u2.push(p),i.next(p)}},t2.prototype._error=function(e){var n=this.windows;if(n)for(;n.length>0&&!this.closed;)n.shift().error(e);this.destination.error(e)},t2.prototype._complete=function(){var e=this.windows;if(e)for(;e.length>0&&!this.closed;)e.shift().complete();this.destination.complete()},t2.prototype._unsubscribe=function(){this.count=0,this.windows=null},t2}(bg.Subscriber)});var lf=c(cr2=>{"use strict";var af=cr2&&cr2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(cr2,"__esModule",{value:true});var yg=w2(),mg=x3(),Sg=_2(),cf=ct(),$o2=E2();function Og(r){var t2=mg.async,e=null,n=Number.POSITIVE_INFINITY;return $o2.isScheduler(arguments[3])&&(t2=arguments[3]),$o2.isScheduler(arguments[2])?t2=arguments[2]:cf.isNumeric(arguments[2])&&(n=Number(arguments[2])),$o2.isScheduler(arguments[1])?t2=arguments[1]:cf.isNumeric(arguments[1])&&(e=Number(arguments[1])),function(o2){return o2.lift(new wg(r,e,n,t2))}}cr2.windowTime=Og;var wg=function(){function r(t2,e,n,i){this.windowTimeSpan=t2,this.windowCreationInterval=e,this.maxWindowSize=n,this.scheduler=i}return r.prototype.call=function(t2,e){return e.subscribe(new xg(t2,this.windowTimeSpan,this.windowCreationInterval,this.maxWindowSize,this.scheduler))},r}(),gg=function(r){af(t2,r);function t2(){var e=r!==null&&r.apply(this,arguments)||this;return e._numberOfNextedValues=0,e}return t2.prototype.next=function(e){this._numberOfNextedValues++,r.prototype.next.call(this,e)},Object.defineProperty(t2.prototype,"numberOfNextedValues",{get:function(){return this._numberOfNextedValues},enumerable:true,configurable:true}),t2}(yg.Subject),xg=function(r){af(t2,r);function t2(e,n,i,o2,u2){var s=r.call(this,e)||this;s.destination=e,s.windowTimeSpan=n,s.windowCreationInterval=i,s.maxWindowSize=o2,s.scheduler=u2,s.windows=[];var f=s.openWindow();if(i!==null&&i>=0){var a={subscriber:s,window:f,context:null},p={windowTimeSpan:n,windowCreationInterval:i,subscriber:s,scheduler:u2};s.add(u2.schedule(ff,n,a)),s.add(u2.schedule(jg,i,p))}else{var b2={subscriber:s,window:f,windowTimeSpan:n};s.add(u2.schedule(qg,n,b2))}return s}return t2.prototype._next=function(e){for(var n=this.windows,i=n.length,o2=0;o2<i;o2++){var u2=n[o2];u2.closed||(u2.next(e),u2.numberOfNextedValues>=this.maxWindowSize&&this.closeWindow(u2))}},t2.prototype._error=function(e){for(var n=this.windows;n.length>0;)n.shift().error(e);this.destination.error(e)},t2.prototype._complete=function(){for(var e=this.windows;e.length>0;){var n=e.shift();n.closed||n.complete()}this.destination.complete()},t2.prototype.openWindow=function(){var e=new gg;this.windows.push(e);var n=this.destination;return n.next(e),e},t2.prototype.closeWindow=function(e){e.complete();var n=this.windows;n.splice(n.indexOf(e),1)},t2}(Sg.Subscriber);function qg(r){var t2=r.subscriber,e=r.windowTimeSpan,n=r.window;n&&t2.closeWindow(n),r.window=t2.openWindow(),this.schedule(r,e)}function jg(r){var t2=r.windowTimeSpan,e=r.subscriber,n=r.scheduler,i=r.windowCreationInterval,o2=e.openWindow(),u2=this,s={action:u2,subscription:null},f={subscriber:e,window:o2,context:s};s.subscription=n.schedule(ff,t2,f),u2.add(s.subscription),u2.schedule(r,i)}function ff(r){var t2=r.subscriber,e=r.window,n=r.context;n&&n.action&&n.subscription&&n.action.remove(n.subscription),t2.closeWindow(e)}});var hf=c(ar2=>{"use strict";var Pg=ar2&&ar2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(ar2,"__esModule",{value:true});var Eg=w2(),Ag=O(),Tg=F3(),pf=D2();function Mg(r,t2){return function(e){return e.lift(new Cg(r,t2))}}ar2.windowToggle=Mg;var Cg=function(){function r(t2,e){this.openings=t2,this.closingSelector=e}return r.prototype.call=function(t2,e){return e.subscribe(new Ig(t2,this.openings,this.closingSelector))},r}(),Ig=function(r){Pg(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;return o2.openings=n,o2.closingSelector=i,o2.contexts=[],o2.add(o2.openSubscription=pf.subscribeToResult(o2,n,n)),o2}return t2.prototype._next=function(e){var n=this.contexts;if(n)for(var i=n.length,o2=0;o2<i;o2++)n[o2].window.next(e)},t2.prototype._error=function(e){var n=this.contexts;if(this.contexts=null,n)for(var i=n.length,o2=-1;++o2<i;){var u2=n[o2];u2.window.error(e),u2.subscription.unsubscribe()}r.prototype._error.call(this,e)},t2.prototype._complete=function(){var e=this.contexts;if(this.contexts=null,e)for(var n=e.length,i=-1;++i<n;){var o2=e[i];o2.window.complete(),o2.subscription.unsubscribe()}r.prototype._complete.call(this)},t2.prototype._unsubscribe=function(){var e=this.contexts;if(this.contexts=null,e)for(var n=e.length,i=-1;++i<n;){var o2=e[i];o2.window.unsubscribe(),o2.subscription.unsubscribe()}},t2.prototype.notifyNext=function(e,n,i,o2,u2){if(e===this.openings){var s=void 0;try{var f=this.closingSelector;s=f(n)}catch(q2){return this.error(q2)}var a=new Eg.Subject,p=new Ag.Subscription,b2={window:a,subscription:p};this.contexts.push(b2);var v3=pf.subscribeToResult(this,s,b2);v3.closed?this.closeWindow(this.contexts.length-1):(v3.context=b2,p.add(v3)),this.destination.next(a)}else this.closeWindow(this.contexts.indexOf(e))},t2.prototype.notifyError=function(e){this.error(e)},t2.prototype.notifyComplete=function(e){e!==this.openSubscription&&this.closeWindow(this.contexts.indexOf(e.context))},t2.prototype.closeWindow=function(e){if(e!==-1){var n=this.contexts,i=n[e],o2=i.window,u2=i.subscription;n.splice(e,1),o2.complete(),u2.unsubscribe()}},t2}(Tg.OuterSubscriber)});var bf=c(fr2=>{"use strict";var Ng=fr2&&fr2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(fr2,"__esModule",{value:true});var Rg=w2(),kg=F3(),Vg=D2();function Wg(r){return function(e){return e.lift(new Fg(r))}}fr2.windowWhen=Wg;var Fg=function(){function r(t2){this.closingSelector=t2}return r.prototype.call=function(t2,e){return e.subscribe(new Dg(t2,this.closingSelector))},r}(),Dg=function(r){Ng(t2,r);function t2(e,n){var i=r.call(this,e)||this;return i.destination=e,i.closingSelector=n,i.openWindow(),i}return t2.prototype.notifyNext=function(e,n,i,o2,u2){this.openWindow(u2)},t2.prototype.notifyError=function(e){this._error(e)},t2.prototype.notifyComplete=function(e){this.openWindow(e)},t2.prototype._next=function(e){this.window.next(e)},t2.prototype._error=function(e){this.window.error(e),this.destination.error(e),this.unsubscribeClosingNotification()},t2.prototype._complete=function(){this.window.complete(),this.destination.complete(),this.unsubscribeClosingNotification()},t2.prototype.unsubscribeClosingNotification=function(){this.closingNotification&&this.closingNotification.unsubscribe()},t2.prototype.openWindow=function(e){e===void 0&&(e=null),e&&(this.remove(e),e.unsubscribe());var n=this.window;n&&n.complete();var i=this.window=new Rg.Subject;this.destination.next(i);var o2;try{var u2=this.closingSelector;o2=u2()}catch(s){this.destination.error(s),this.window.error(s);return}this.add(this.closingNotification=Vg.subscribeToResult(this,o2))},t2}(kg.OuterSubscriber)});var _f=c(lr2=>{"use strict";var Ug=lr2&&lr2.__extends||function(){var r=function(t2,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o2 in i)i.hasOwnProperty(o2)&&(n[o2]=i[o2])},r(t2,e)};return function(t2,e){r(t2,e);function n(){this.constructor=t2}t2.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}}();Object.defineProperty(lr2,"__esModule",{value:true});var Bg=F3(),Lg=D2();function zg(){for(var r=[],t2=0;t2<arguments.length;t2++)r[t2]=arguments[t2];return function(e){var n;typeof r[r.length-1]=="function"&&(n=r.pop());var i=r;return e.lift(new Gg(i,n))}}lr2.withLatestFrom=zg;var Gg=function(){function r(t2,e){this.observables=t2,this.project=e}return r.prototype.call=function(t2,e){return e.subscribe(new Yg(t2,this.observables,this.project))},r}(),Yg=function(r){Ug(t2,r);function t2(e,n,i){var o2=r.call(this,e)||this;o2.observables=n,o2.project=i,o2.toRespond=[];var u2=n.length;o2.values=new Array(u2);for(var s=0;s<u2;s++)o2.toRespond.push(s);for(var s=0;s<u2;s++){var f=n[s];o2.add(Lg.subscribeToResult(o2,f,void 0,s))}return o2}return t2.prototype.notifyNext=function(e,n,i){this.values[i]=n;var o2=this.toRespond;if(o2.length>0){var u2=o2.indexOf(i);u2!==-1&&o2.splice(u2,1)}},t2.prototype.notifyComplete=function(){},t2.prototype._next=function(e){if(this.toRespond.length===0){var n=[e].concat(this.values);this.project?this._tryProject(n):this.destination.next(n)}},t2.prototype._tryProject=function(e){var n;try{n=this.project.apply(this,e)}catch(i){this.destination.error(i);return}this.destination.next(n)},t2}(Bg.OuterSubscriber)});var vf=c(Xo2=>{"use strict";Object.defineProperty(Xo2,"__esModule",{value:true});var Qg=Br();function Hg(){for(var r=[],t2=0;t2<arguments.length;t2++)r[t2]=arguments[t2];return function(n){return n.lift.call(Qg.zip.apply(void 0,[n].concat(r)))}}Xo2.zip=Hg});var df=c(eu=>{"use strict";Object.defineProperty(eu,"__esModule",{value:true});var Kg=Br();function Jg(r){return function(t2){return t2.lift(new Kg.ZipOperator(r))}}eu.zipAll=Jg});var ge=c(l=>{"use strict";Object.defineProperty(l,"__esModule",{value:true});var Zg=Li();l.audit=Zg.audit;var $g=ec();l.auditTime=$g.auditTime;var Xg=tc();l.buffer=Xg.buffer;var ex=ic();l.bufferCount=ex.bufferCount;var tx=sc();l.bufferTime=tx.bufferTime;var rx=ac();l.bufferToggle=rx.bufferToggle;var nx=fc();l.bufferWhen=nx.bufferWhen;var ix=lc();l.catchError=ix.catchError;var ox=pc();l.combineAll=ox.combineAll;var ux=hc();l.combineLatest=ux.combineLatest;var sx=bc();l.concat=sx.concat;var cx=mi();l.concatAll=cx.concatAll;var ax=$i();l.concatMap=ax.concatMap;var fx=_c();l.concatMapTo=fx.concatMapTo;var lx=vc();l.count=lx.count;var px=dc();l.debounce=px.debounce;var hx=yc();l.debounceTime=hx.debounceTime;var bx=Se();l.defaultIfEmpty=bx.defaultIfEmpty;var _x=Sc();l.delay=_x.delay;var vx=wc();l.delayWhen=vx.delayWhen;var dx=gc();l.dematerialize=dx.dematerialize;var yx=qc();l.distinct=yx.distinct;var mx=oo();l.distinctUntilChanged=mx.distinctUntilChanged;var Sx=jc();l.distinctUntilKeyChanged=Sx.distinctUntilKeyChanged;var Ox=Ec();l.elementAt=Ox.elementAt;var wx=Ac();l.endWith=wx.endWith;var gx=Tc();l.every=gx.every;var xx=Mc();l.exhaust=xx.exhaust;var qx=Ic();l.exhaustMap=qx.exhaustMap;var jx=kc();l.expand=jx.expand;var Px=K();l.filter=Px.filter;var Ex=Vc();l.finalize=Ex.finalize;var Ax=po();l.find=Ax.find;var Tx=Dc();l.findIndex=Tx.findIndex;var Mx=Uc();l.first=Mx.first;var Cx=An();l.groupBy=Cx.groupBy;var Ix=Bc();l.ignoreElements=Ix.ignoreElements;var Nx=Lc();l.isEmpty=Nx.isEmpty;var Rx=zc();l.last=Rx.last;var kx=j();l.map=kx.map;var Vx=Gc();l.mapTo=Vx.mapTo;var Wx=Yc();l.materialize=Wx.materialize;var Fx=Jc();l.max=Fx.max;var Dx=Zc();l.merge=Dx.merge;var Ux=kr();l.mergeAll=Ux.mergeAll;var yf=ut();l.mergeMap=yf.mergeMap;l.flatMap=yf.flatMap;var Bx=Xc();l.mergeMapTo=Bx.mergeMapTo;var Lx=ra();l.mergeScan=Lx.mergeScan;var zx=na();l.min=zx.min;var Gx=te();l.multicast=Gx.multicast;var Yx=Bn();l.observeOn=Yx.observeOn;var Qx=sa();l.onErrorResumeNext=Qx.onErrorResumeNext;var Hx=ca();l.pairwise=Hx.pairwise;var Kx=fa();l.partition=Kx.partition;var Jx=la();l.pluck=Jx.pluck;var Zx=ba();l.publish=Zx.publish;var $x=_a();l.publishBehavior=$x.publishBehavior;var Xx=va();l.publishLast=Xx.publishLast;var eq=da();l.publishReplay=eq.publishReplay;var tq=ya();l.race=tq.race;var rq=Dt();l.reduce=rq.reduce;var nq=Sa();l.repeat=nq.repeat;var iq=Oa();l.repeatWhen=iq.repeatWhen;var oq=wa();l.retry=oq.retry;var uq=ga();l.retryWhen=uq.retryWhen;var sq=qr();l.refCount=sq.refCount;var cq=xa();l.sample=cq.sample;var aq=qa();l.sampleTime=aq.sampleTime;var fq=Gr();l.scan=fq.scan;var lq=Ta();l.sequenceEqual=lq.sequenceEqual;var pq=Ma();l.share=pq.share;var hq=Ca();l.shareReplay=hq.shareReplay;var bq=Ia();l.single=bq.single;var _q=Na();l.skip=_q.skip;var vq=ka();l.skipLast=vq.skipLast;var dq=Va();l.skipUntil=dq.skipUntil;var yq=Wa();l.skipWhile=yq.skipWhile;var mq=Da();l.startWith=mq.startWith;var Sq=Ba();l.subscribeOn=Sq.subscribeOn;var Oq=za();l.switchAll=Oq.switchAll;var wq=Qr();l.switchMap=wq.switchMap;var gq=Ya();l.switchMapTo=gq.switchMapTo;var xq=Lr();l.take=xq.take;var qq=zr();l.takeLast=qq.takeLast;var jq=Qa();l.takeUntil=jq.takeUntil;var Pq=Ha();l.takeWhile=Pq.takeWhile;var Eq=Ka();l.tap=Eq.tap;var Aq=Yo();l.throttle=Aq.throttle;var Tq=Ja();l.throttleTime=Tq.throttleTime;var Mq=Et();l.throwIfEmpty=Mq.throwIfEmpty;var Cq=$a();l.timeInterval=Cq.timeInterval;var Iq=Xa();l.timeout=Iq.timeout;var Nq=Ho();l.timeoutWith=Nq.timeoutWith;var Rq=tf();l.timestamp=Rq.timestamp;var kq=rf();l.toArray=kq.toArray;var Vq=of();l.window=Vq.window;var Wq=sf();l.windowCount=Wq.windowCount;var Fq=lf();l.windowTime=Fq.windowTime;var Dq=hf();l.windowToggle=Dq.windowToggle;var Uq=bf();l.windowWhen=Uq.windowWhen;var Bq=_f();l.withLatestFrom=Bq.withLatestFrom;var Lq=vf();l.zip=Lq.zip;var zq=df();l.zipAll=zq.zipAll});var wf=c(T2=>{"use strict";Object.defineProperty(T2,"__esModule",{value:true});var Jr2=ge();function Gq(r){return r.pipe(Jr2.concatMap(function(t2){return t2.split("")}),Jr2.scan(function(t2,e){return t2.indexOf("}")>=0?e:t2+e},""),Jr2.filter(function(t2){return t2.indexOf("}")>=0}),Jr2.map(function(t2){return JSON.parse(t2)}))}T2.parseControl=Gq;function mf(r){for(var t2=[],e=0;e<r.length;e++)e%3===0?t2.push(r[e]<<4|r[e+1]>>4):(t2.push((r[e]&15)<<8|r[e+1]),e++);return t2}T2.decodeUnsigned12BitData=mf;function Sf(r){for(var t2=[],e=0;e<r.length;e=e+3)t2.push(r[e]<<16|r[e+1]<<8|r[e+2]);return t2}T2.decodeUnsigned24BitData=Sf;function Yq(r){return mf(r).map(function(t2){return .48828125*(t2-2048)})}T2.decodeEEGSamples=Yq;function Qq(r){return Sf(r)}T2.decodePPGSamples=Qq;function Hq(r){return{sequenceId:r.getUint16(0),batteryLevel:r.getUint16(2)/512,fuelGaugeVoltage:r.getUint16(4)*2.2,temperature:r.getUint16(8)}}T2.parseTelemetry=Hq;function Of(r,t2){function e(n){return{x:t2*r.getInt16(n),y:t2*r.getInt16(n+2),z:t2*r.getInt16(n+4)}}return{sequenceId:r.getUint16(0),samples:[e(2),e(8),e(14)]}}function Kq(r){return Of(r,610352e-10)}T2.parseAccelerometer=Kq;function Jq(r){return Of(r,.0074768)}T2.parseGyroscope=Jq});var qf=c(R3=>{"use strict";var Zq=R3&&R3.__awaiter||function(r,t2,e,n){return new(e||(e=Promise))(function(i,o2){function u2(a){try{f(n.next(a))}catch(p){o2(p)}}function s(a){try{f(n.throw(a))}catch(p){o2(p)}}function f(a){a.done?i(a.value):new e(function(p){p(a.value)}).then(u2,s)}f((n=n.apply(r,t2||[])).next())})},$q=R3&&R3.__generator||function(r,t2){var e={label:0,sent:function(){if(o2[0]&1)throw o2[1];return o2[1]},trys:[],ops:[]},n,i,o2,u2;return u2={next:s(0),throw:s(1),return:s(2)},typeof Symbol=="function"&&(u2[Symbol.iterator]=function(){return this}),u2;function s(a){return function(p){return f([a,p])}}function f(a){if(n)throw new TypeError("Generator is already executing.");for(;e;)try{if(n=1,i&&(o2=a[0]&2?i.return:a[0]?i.throw||((o2=i.return)&&o2.call(i),0):i.next)&&!(o2=o2.call(i,a[1])).done)return o2;switch(i=0,o2&&(a=[a[0]&2,o2.value]),a[0]){case 0:case 1:o2=a;break;case 4:return e.label++,{value:a[1],done:false};case 5:e.label++,i=a[1],a=[0];continue;case 7:a=e.ops.pop(),e.trys.pop();continue;default:if(o2=e.trys,!(o2=o2.length>0&&o2[o2.length-1])&&(a[0]===6||a[0]===2)){e=0;continue}if(a[0]===3&&(!o2||a[1]>o2[0]&&a[1]<o2[3])){e.label=a[1];break}if(a[0]===6&&e.label<o2[1]){e.label=o2[1],o2=a;break}if(o2&&e.label<o2[2]){e.label=o2[2],e.ops.push(a);break}o2[2]&&e.ops.pop(),e.trys.pop();continue}a=t2.call(r,e)}catch(p){a=[6,p],i=0}finally{n=o2=0}if(a[0]&5)throw a[1];return{value:a[0]?a[1]:void 0,done:true}}};Object.defineProperty(R3,"__esModule",{value:true});var gf=lt(),xf=ge();function Xq(r){return new TextDecoder().decode(r.subarray(1,1+r[0]))}R3.decodeResponse=Xq;function ej(r){var t2=new TextEncoder().encode("X"+r+`\n`);return t2[0]=t2.length-1,t2}R3.encodeCommand=ej;function tj(r){return Zq(this,void 0,void 0,function(){var t2;return $q(this,function(e){switch(e.label){case 0:return[4,r.startNotifications()];case 1:return e.sent(),t2=gf.fromEvent(r.service.device,"gattserverdisconnected"),[2,gf.fromEvent(r,"characteristicvaluechanged").pipe(xf.takeUntil(t2),xf.map(function(n){return n.target.value}))]}})})}R3.observableCharacteristic=tj});var jf=c(ru=>{"use strict";Object.defineProperty(ru,"__esModule",{value:true});var Zr2=lt(),tu=ge(),rj=$r();function nj(r){var t2=[],e=null;return r.pipe(tu.mergeMap(function(n){if(n.timestamp!==e&&(e=n.timestamp,t2.length)){var i=Zr2.from([t2.slice()]);return t2.splice(0,t2.length,n),i}return t2.push(n),Zr2.from([])}),tu.concat(Zr2.from([t2])),tu.mergeMap(function(n){var i=n[0].samples.map(function(o2,u2){for(var s=[NaN,NaN,NaN,NaN,NaN],f=0,a=n;f<a.length;f++){var p=a[f];s[p.electrode]=p.samples[u2]}return{data:s,index:n[0].index,timestamp:n[0].timestamp+u2*1e3/rj.EEG_FREQUENCY}});return Zr2.from(i)}))}ru.zipSamples=nj});var Pf=c(iu=>{"use strict";Object.defineProperty(iu,"__esModule",{value:true});var Xr2=lt(),nu=ge(),ij=$r();function oj(r){var t2=[],e=null;return r.pipe(nu.mergeMap(function(n){if(n.timestamp!==e&&(e=n.timestamp,t2.length)){var i=Xr2.from([t2.slice()]);return t2.splice(0,t2.length,n),i}return t2.push(n),Xr2.from([])}),nu.concat(Xr2.from([t2])),nu.mergeMap(function(n){var i=n[0].samples.map(function(o2,u2){for(var s=[NaN,NaN,NaN],f=0,a=n;f<a.length;f++){var p=a[f];s[p.ppgChannel]=p.samples[u2]}return{data:s,index:n[0].index,timestamp:n[0].timestamp+u2*1e3/ij.PPG_FREQUENCY}});return Xr2.from(i)}))}iu.zipSamplesPpg=oj});var $r=c(m=>{"use strict";var ie2=m&&m.__awaiter||function(r,t2,e,n){return new(e||(e=Promise))(function(i,o2){function u2(a){try{f(n.next(a))}catch(p){o2(p)}}function s(a){try{f(n.throw(a))}catch(p){o2(p)}}function f(a){a.done?i(a.value):new e(function(p){p(a.value)}).then(u2,s)}f((n=n.apply(r,t2||[])).next())})},k2=m&&m.__generator||function(r,t2){var e={label:0,sent:function(){if(o2[0]&1)throw o2[1];return o2[1]},trys:[],ops:[]},n,i,o2,u2;return u2={next:s(0),throw:s(1),return:s(2)},typeof Symbol=="function"&&(u2[Symbol.iterator]=function(){return this}),u2;function s(a){return function(p){return f([a,p])}}function f(a){if(n)throw new TypeError("Generator is already executing.");for(;e;)try{if(n=1,i&&(o2=a[0]&2?i.return:a[0]?i.throw||((o2=i.return)&&o2.call(i),0):i.next)&&!(o2=o2.call(i,a[1])).done)return o2;switch(i=0,o2&&(a=[a[0]&2,o2.value]),a[0]){case 0:case 1:o2=a;break;case 4:return e.label++,{value:a[1],done:false};case 5:e.label++,i=a[1],a=[0];continue;case 7:a=e.ops.pop(),e.trys.pop();continue;default:if(o2=e.trys,!(o2=o2.length>0&&o2[o2.length-1])&&(a[0]===6||a[0]===2)){e=0;continue}if(a[0]===3&&(!o2||a[1]>o2[0]&&a[1]<o2[3])){e.label=a[1];break}if(a[0]===6&&e.label<o2[1]){e.label=o2[1],o2=a;break}if(o2&&e.label<o2[2]){e.label=o2[2],e.ops.push(a);break}o2[2]&&e.ops.pop(),e.trys.pop();continue}a=t2.call(r,e)}catch(p){a=[6,p],i=0}finally{n=o2=0}if(a[0]&5)throw a[1];return{value:a[0]?a[1]:void 0,done:true}}};Object.defineProperty(m,"__esModule",{value:true});var pr2=lt(),M3=ge(),xe2=wf(),C3=qf(),uj=jf();m.zipSamples=uj.zipSamples;var sj=Pf();m.zipSamplesPpg=sj.zipSamplesPpg;m.MUSE_SERVICE=65165;var cj="273e0001-4c4d-454d-96be-f03bac821358",aj="273e000b-4c4d-454d-96be-f03bac821358",fj="273e0009-4c4d-454d-96be-f03bac821358",lj="273e000a-4c4d-454d-96be-f03bac821358",Ef=["273e000f-4c4d-454d-96be-f03bac821358","273e0010-4c4d-454d-96be-f03bac821358","273e0011-4c4d-454d-96be-f03bac821358"];m.PPG_FREQUENCY=64;m.PPG_SAMPLES_PER_READING=6;var Af=["273e0003-4c4d-454d-96be-f03bac821358","273e0004-4c4d-454d-96be-f03bac821358","273e0005-4c4d-454d-96be-f03bac821358","273e0006-4c4d-454d-96be-f03bac821358","273e0007-4c4d-454d-96be-f03bac821358"];m.EEG_FREQUENCY=256;m.EEG_SAMPLES_PER_READING=12;m.ppgChannelNames=["ambient","infrared","red"];m.channelNames=["TP9","AF7","AF8","TP10","AUX"];var pj=function(){function r(){this.enableAux=false,this.enablePpg=false,this.deviceName="",this.connectionStatus=new pr2.BehaviorSubject(false),this.gatt=null,this.lastIndex=null,this.lastTimestamp=null}return r.prototype.connect=function(t2){return ie2(this,void 0,void 0,function(){var e,n,i,o2,u2,s,f,a,p,b2,v3,q2,I2,oe2,ou,hr2,en2,uu,su,cu,br2,_r2=this;return k2(this,function(S3){switch(S3.label){case 0:return t2?(this.gatt=t2,[3,4]):[3,1];case 1:return[4,navigator.bluetooth.requestDevice({filters:[{services:[m.MUSE_SERVICE]}]})];case 2:return e=S3.sent(),n=this,[4,e.gatt.connect()];case 3:n.gatt=S3.sent(),S3.label=4;case 4:return this.deviceName=this.gatt.device.name||null,[4,this.gatt.getPrimaryService(m.MUSE_SERVICE)];case 5:return i=S3.sent(),pr2.fromEvent(this.gatt.device,"gattserverdisconnected").pipe(M3.first()).subscribe(function(){_r2.gatt=null,_r2.connectionStatus.next(false)}),o2=this,[4,i.getCharacteristic(cj)];case 6:return o2.controlChar=S3.sent(),u2=this,[4,C3.observableCharacteristic(this.controlChar)];case 7:return u2.rawControlData=S3.sent().pipe(M3.map(function(L){return C3.decodeResponse(new Uint8Array(L.buffer))}),M3.share()),this.controlResponses=xe2.parseControl(this.rawControlData),[4,i.getCharacteristic(aj)];case 8:return s=S3.sent(),f=this,[4,C3.observableCharacteristic(s)];case 9:return f.telemetryData=S3.sent().pipe(M3.map(xe2.parseTelemetry)),[4,i.getCharacteristic(fj)];case 10:return a=S3.sent(),p=this,[4,C3.observableCharacteristic(a)];case 11:return p.gyroscopeData=S3.sent().pipe(M3.map(xe2.parseGyroscope)),[4,i.getCharacteristic(lj)];case 12:return b2=S3.sent(),v3=this,[4,C3.observableCharacteristic(b2)];case 13:if(v3.accelerometerData=S3.sent().pipe(M3.map(xe2.parseAccelerometer)),this.eventMarkers=new pr2.Subject,!this.enablePpg)return[3,18];this.ppgCharacteristics=[],q2=[],I2=Ef.length,oe2=function(L){var qe2,z3,je2,Pe2;return k2(this,function(G3){switch(G3.label){case 0:return qe2=Ef[L],[4,i.getCharacteristic(qe2)];case 1:return z3=G3.sent(),Pe2=(je2=q2).push,[4,C3.observableCharacteristic(z3)];case 2:return Pe2.apply(je2,[G3.sent().pipe(M3.map(function(Ee2){var Ae2=Ee2.getUint16(0);return{index:Ae2,ppgChannel:L,samples:xe2.decodePPGSamples(new Uint8Array(Ee2.buffer).subarray(2)),timestamp:_r2.getTimestamp(Ae2,m.PPG_SAMPLES_PER_READING,m.PPG_FREQUENCY)}}))]),ou.ppgCharacteristics.push(z3),[2]}})},ou=this,hr2=0,S3.label=14;case 14:return hr2<I2?[5,oe2(hr2)]:[3,17];case 15:S3.sent(),S3.label=16;case 16:return hr2++,[3,14];case 17:this.ppgReadings=pr2.merge.apply(void 0,q2),S3.label=18;case 18:this.eegCharacteristics=[],en2=[],uu=this.enableAux?Af.length:4,su=function(L){var qe2,z3,je2,Pe2;return k2(this,function(G3){switch(G3.label){case 0:return qe2=Af[L],[4,i.getCharacteristic(qe2)];case 1:return z3=G3.sent(),Pe2=(je2=en2).push,[4,C3.observableCharacteristic(z3)];case 2:return Pe2.apply(je2,[G3.sent().pipe(M3.map(function(Ee2){var Ae2=Ee2.getUint16(0);return{electrode:L,index:Ae2,samples:xe2.decodeEEGSamples(new Uint8Array(Ee2.buffer).subarray(2)),timestamp:_r2.getTimestamp(Ae2,m.EEG_SAMPLES_PER_READING,m.EEG_FREQUENCY)}}))]),cu.eegCharacteristics.push(z3),[2]}})},cu=this,br2=0,S3.label=19;case 19:return br2<uu?[5,su(br2)]:[3,22];case 20:S3.sent(),S3.label=21;case 21:return br2++,[3,19];case 22:return this.eegReadings=pr2.merge.apply(void 0,en2),this.connectionStatus.next(true),[2]}})})},r.prototype.sendCommand=function(t2){return ie2(this,void 0,void 0,function(){return k2(this,function(e){switch(e.label){case 0:return[4,this.controlChar.writeValue(C3.encodeCommand(t2))];case 1:return e.sent(),[2]}})})},r.prototype.start=function(){return ie2(this,void 0,void 0,function(){var t2;return k2(this,function(e){switch(e.label){case 0:return[4,this.pause()];case 1:return e.sent(),t2="p21",this.enablePpg?t2="p50":this.enableAux&&(t2="p20"),[4,this.controlChar.writeValue(C3.encodeCommand(t2))];case 2:return e.sent(),[4,this.controlChar.writeValue(C3.encodeCommand("s"))];case 3:return e.sent(),[4,this.resume()];case 4:return e.sent(),[2]}})})},r.prototype.pause=function(){return ie2(this,void 0,void 0,function(){return k2(this,function(t2){switch(t2.label){case 0:return[4,this.sendCommand("h")];case 1:return t2.sent(),[2]}})})},r.prototype.resume=function(){return ie2(this,void 0,void 0,function(){return k2(this,function(t2){switch(t2.label){case 0:return[4,this.sendCommand("d")];case 1:return t2.sent(),[2]}})})},r.prototype.deviceInfo=function(){return ie2(this,void 0,void 0,function(){var t2;return k2(this,function(e){switch(e.label){case 0:return t2=this.controlResponses.pipe(M3.filter(function(n){return!!n.fw}),M3.take(1)).toPromise(),[4,this.sendCommand("v1")];case 1:return e.sent(),[2,t2]}})})},r.prototype.injectMarker=function(t2,e){return e===void 0&&(e=new Date().getTime()),ie2(this,void 0,void 0,function(){return k2(this,function(n){switch(n.label){case 0:return[4,this.eventMarkers.next({value:t2,timestamp:e})];case 1:return n.sent(),[2]}})})},r.prototype.disconnect=function(){this.gatt&&(this.lastIndex=null,this.lastTimestamp=null,this.gatt.disconnect(),this.connectionStatus.next(false))},r.prototype.getTimestamp=function(t2,e,n){var i=1e3*(1/n)*e;for((this.lastIndex===null||this.lastTimestamp===null)&&(this.lastIndex=t2,this.lastTimestamp=new Date().getTime()-i);this.lastIndex-t2>4096;)t2+=65536;return t2===this.lastIndex?this.lastTimestamp:t2>this.lastIndex?(this.lastTimestamp+=i*(t2-this.lastIndex),this.lastIndex=t2,this.lastTimestamp):this.lastTimestamp-i*(this.lastIndex-t2)},r}();m.MuseClient=pj});var hj=kf($r(),1);var export_MuseClient=hj.MuseClient;var sps9=250;var museSettings={sps:sps9,connect:(settings={})=>{return new Promise(async(res,rej)=>{let _id=`muse${Math.floor(Math.random()*1e15)}`;let client=new export_MuseClient;let info={_id,client,settings:Object.assign(Object.assign({},museSettings),settings)};client.enableAux=true;await client.connect();await client.start();let eegts;client.eegReadings.subscribe(reading=>{reading.origin="eeg";if(reading.electrode===0){eegts=ByteParser.genTimestamps(12,250)}if(!eegts)eegts=ByteParser.genTimestamps(12,250);reading.timestamp=eegts;info.settings.ondata(reading)});client.telemetryData.subscribe(reading=>{reading.origin="telemetry";info.settings.ondata(reading)});client.gyroscopeData.subscribe(reading=>{reading.origin="gyro";info.settings.ondata(reading)});client.accelerometerData.subscribe(reading=>{reading.origin="accelerometer";info.settings.ondata(reading)});if(client.enablePPG){client.ppgData.subscribe(reading=>{reading.origin="ppg";info.settings.ondata(reading)})}if(info.settings.onconnect)info.settings.onconnect(info);res(info)})},codec:reading=>{let origin=reading.origin;if(origin==="eeg"){return{[reading.electrode]:reading.samples,timestamp:Date.now()}}else if(origin==="gyro"){let transformed={gx:[],gy:[],gz:[],timestamp:Date.now()};reading.samples.forEach(s=>{transformed.gx.push(s.x);transformed.gy.push(s.y);transformed.gz.push(s.z)});return transformed}else if(origin==="accelerometer"){let transformed={ax:[],ay:[],az:[],timestamp:Date.now()};reading.samples.forEach(s=>{transformed.ax.push(s.x);transformed.ay.push(s.y);transformed.az.push(s.z)});return transformed}else if(origin==="ppg"){return{[`ppg${reading.ppgChannel}`]:reading.samples,timestamp:Date.now()}}else if(origin==="telemetry"){return reading}},disconnect:info=>{info.client.disconnect();info.settings.ondisconnect(info)},onconnect:info=>{console.log("muse connected!",info)},ondisconnect:info=>{console.log("muse disconnected!",info)},ondata:data=>{console.log(data)}};var defaultsetting5={sps:sps9,useDCBlock:true,useBandpass:true,bandpassLower:3,bandpassUpper:45};var museFilterSettings2={"0":JSON.parse(JSON.stringify(defaultsetting5)),"1":JSON.parse(JSON.stringify(defaultsetting5)),"2":JSON.parse(JSON.stringify(defaultsetting5)),"3":JSON.parse(JSON.stringify(defaultsetting5)),"4":JSON.parse(JSON.stringify(defaultsetting5))};var Po=Object.create;var Ee=Object.defineProperty;var wo=Object.defineProperties;var Do=Object.getOwnPropertyDescriptor;var ko=Object.getOwnPropertyDescriptors;var Ao=Object.getOwnPropertyNames;var de=Object.getOwnPropertySymbols;var Eo=Object.getPrototypeOf;var ve2=Object.prototype.hasOwnProperty;var Dt2=Object.prototype.propertyIsEnumerable;var wt=(e,t2,n)=>t2 in e?Ee(e,t2,{enumerable:true,configurable:true,writable:true,value:n}):e[t2]=n;var Z=(e,t2)=>{for(var n in t2||(t2={}))ve2.call(t2,n)&&wt(e,n,t2[n]);if(de)for(var n of de(t2))Dt2.call(t2,n)&&wt(e,n,t2[n]);return e};var j2=(e,t2)=>wo(e,ko(t2));var kt=(e,t2)=>{var n={};for(var r in e)ve2.call(e,r)&&t2.indexOf(r)<0&&(n[r]=e[r]);if(e!=null&&de)for(var r of de(e))t2.indexOf(r)<0&&Dt2.call(e,r)&&(n[r]=e[r]);return n};var vo=(e,t2)=>()=>(t2||e((t2={exports:{}}).exports,t2),t2.exports);var To=(e,t2,n,r)=>{if(t2&&typeof t2=="object"||typeof t2=="function")for(let a of Ao(t2))!ve2.call(e,a)&&a!==n&&Ee(e,a,{get:()=>t2[a],enumerable:!(r=Do(t2,a))||r.enumerable});return e};var Ro=(e,t2,n)=>(n=e!=null?Po(Eo(e)):{},To(t2||!e||!e.__esModule?Ee(n,"default",{value:e,enumerable:true}):n,e));var X=(e,t2,n)=>new Promise((r,a)=>{var i=l=>{try{s(n.next(l))}catch(u2){a(u2)}},c2=l=>{try{s(n.throw(l))}catch(u2){a(u2)}},s=l=>l.done?r(l.value):Promise.resolve(l.value).then(i,c2);s((n=n.apply(e,t2)).next())});var jt=vo((ll,he2)=>{var At,Et2,vt,Tt,Rt,Nt,_t,Ft,Mt,Ce2,Te2,Gt,Ut,Lt,L,Ht,zt,Vt,Qt,Wt,qt,Yt,$t,Zt,pe2;(function(e){var t2=typeof global=="object"?global:typeof self=="object"?self:typeof this=="object"?this:{};typeof define=="function"&&define.amd?define("tslib",["exports"],function(r){e(n(t2,n(r)))}):typeof he2=="object"&&typeof he2.exports=="object"?e(n(t2,n(he2.exports))):e(n(t2));function n(r,a){return r!==t2&&(typeof Object.create=="function"?Object.defineProperty(r,"__esModule",{value:true}):r.__esModule=true),function(i,c2){return r[i]=a?a(i,c2):c2}}})(function(e){var t2=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,a){r.__proto__=a}||function(r,a){for(var i in a)Object.prototype.hasOwnProperty.call(a,i)&&(r[i]=a[i])};At=function(r,a){if(typeof a!="function"&&a!==null)throw new TypeError("Class extends value "+String(a)+" is not a constructor or null");t2(r,a);function i(){this.constructor=r}r.prototype=a===null?Object.create(a):(i.prototype=a.prototype,new i)},Et2=Object.assign||function(r){for(var a,i=1,c2=arguments.length;i<c2;i++){a=arguments[i];for(var s in a)Object.prototype.hasOwnProperty.call(a,s)&&(r[s]=a[s])}return r},vt=function(r,a){var i={};for(var c2 in r)Object.prototype.hasOwnProperty.call(r,c2)&&a.indexOf(c2)<0&&(i[c2]=r[c2]);if(r!=null&&typeof Object.getOwnPropertySymbols=="function")for(var s=0,c2=Object.getOwnPropertySymbols(r);s<c2.length;s++)a.indexOf(c2[s])<0&&Object.prototype.propertyIsEnumerable.call(r,c2[s])&&(i[c2[s]]=r[c2[s]]);return i},Tt=function(r,a,i,c2){var s=arguments.length,l=s<3?a:c2===null?c2=Object.getOwnPropertyDescriptor(a,i):c2,u2;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")l=Reflect.decorate(r,a,i,c2);else for(var f=r.length-1;f>=0;f--)(u2=r[f])&&(l=(s<3?u2(l):s>3?u2(a,i,l):u2(a,i))||l);return s>3&&l&&Object.defineProperty(a,i,l),l},Rt=function(r,a){return function(i,c2){a(i,c2,r)}},Nt=function(r,a){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(r,a)},_t=function(r,a,i,c2){function s(l){return l instanceof i?l:new i(function(u2){u2(l)})}return new(i||(i=Promise))(function(l,u2){function f(p){try{m(c2.next(p))}catch(B2){u2(B2)}}function b2(p){try{m(c2.throw(p))}catch(B2){u2(B2)}}function m(p){p.done?l(p.value):s(p.value).then(f,b2)}m((c2=c2.apply(r,a||[])).next())})},Ft=function(r,a){var i={label:0,sent:function(){if(l[0]&1)throw l[1];return l[1]},trys:[],ops:[]},c2,s,l,u2;return u2={next:f(0),throw:f(1),return:f(2)},typeof Symbol=="function"&&(u2[Symbol.iterator]=function(){return this}),u2;function f(m){return function(p){return b2([m,p])}}function b2(m){if(c2)throw new TypeError("Generator is already executing.");for(;i;)try{if(c2=1,s&&(l=m[0]&2?s.return:m[0]?s.throw||((l=s.return)&&l.call(s),0):s.next)&&!(l=l.call(s,m[1])).done)return l;switch(s=0,l&&(m=[m[0]&2,l.value]),m[0]){case 0:case 1:l=m;break;case 4:return i.label++,{value:m[1],done:false};case 5:i.label++,s=m[1],m=[0];continue;case 7:m=i.ops.pop(),i.trys.pop();continue;default:if(l=i.trys,!(l=l.length>0&&l[l.length-1])&&(m[0]===6||m[0]===2)){i=0;continue}if(m[0]===3&&(!l||m[1]>l[0]&&m[1]<l[3])){i.label=m[1];break}if(m[0]===6&&i.label<l[1]){i.label=l[1],l=m;break}if(l&&i.label<l[2]){i.label=l[2],i.ops.push(m);break}l[2]&&i.ops.pop(),i.trys.pop();continue}m=a.call(r,i)}catch(p){m=[6,p],s=0}finally{c2=l=0}if(m[0]&5)throw m[1];return{value:m[0]?m[1]:void 0,done:true}}},Mt=function(r,a){for(var i in r)i!=="default"&&!Object.prototype.hasOwnProperty.call(a,i)&&pe2(a,r,i)},pe2=Object.create?function(r,a,i,c2){c2===void 0&&(c2=i);var s=Object.getOwnPropertyDescriptor(a,i);(!s||("get"in s?!a.__esModule:s.writable||s.configurable))&&(s={enumerable:true,get:function(){return a[i]}}),Object.defineProperty(r,c2,s)}:function(r,a,i,c2){c2===void 0&&(c2=i),r[c2]=a[i]},Ce2=function(r){var a=typeof Symbol=="function"&&Symbol.iterator,i=a&&r[a],c2=0;if(i)return i.call(r);if(r&&typeof r.length=="number")return{next:function(){return r&&c2>=r.length&&(r=void 0),{value:r&&r[c2++],done:!r}}};throw new TypeError(a?"Object is not iterable.":"Symbol.iterator is not defined.")},Te2=function(r,a){var i=typeof Symbol=="function"&&r[Symbol.iterator];if(!i)return r;var c2=i.call(r),s,l=[],u2;try{for(;(a===void 0||a-- >0)&&!(s=c2.next()).done;)l.push(s.value)}catch(f){u2={error:f}}finally{try{s&&!s.done&&(i=c2.return)&&i.call(c2)}finally{if(u2)throw u2.error}}return l},Gt=function(){for(var r=[],a=0;a<arguments.length;a++)r=r.concat(Te2(arguments[a]));return r},Ut=function(){for(var r=0,a=0,i=arguments.length;a<i;a++)r+=arguments[a].length;for(var c2=Array(r),s=0,a=0;a<i;a++)for(var l=arguments[a],u2=0,f=l.length;u2<f;u2++,s++)c2[s]=l[u2];return c2},Lt=function(r,a,i){if(i||arguments.length===2)for(var c2=0,s=a.length,l;c2<s;c2++)(l||!(c2 in a))&&(l||(l=Array.prototype.slice.call(a,0,c2)),l[c2]=a[c2]);return r.concat(l||Array.prototype.slice.call(a))},L=function(r){return this instanceof L?(this.v=r,this):new L(r)},Ht=function(r,a,i){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var c2=i.apply(r,a||[]),s,l=[];return s={},u2("next"),u2("throw"),u2("return"),s[Symbol.asyncIterator]=function(){return this},s;function u2(C3){c2[C3]&&(s[C3]=function(x4){return new Promise(function(h,T2){l.push([C3,x4,h,T2])>1||f(C3,x4)})})}function f(C3,x4){try{b2(c2[C3](x4))}catch(h){B2(l[0][3],h)}}function b2(C3){C3.value instanceof L?Promise.resolve(C3.value.v).then(m,p):B2(l[0][2],C3)}function m(C3){f("next",C3)}function p(C3){f("throw",C3)}function B2(C3,x4){C3(x4),l.shift(),l.length&&f(l[0][0],l[0][1])}},zt=function(r){var a,i;return a={},c2("next"),c2("throw",function(s){throw s}),c2("return"),a[Symbol.iterator]=function(){return this},a;function c2(s,l){a[s]=r[s]?function(u2){return(i=!i)?{value:L(r[s](u2)),done:s==="return"}:l?l(u2):u2}:l}},Vt=function(r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var a=r[Symbol.asyncIterator],i;return a?a.call(r):(r=typeof Ce2=="function"?Ce2(r):r[Symbol.iterator](),i={},c2("next"),c2("throw"),c2("return"),i[Symbol.asyncIterator]=function(){return this},i);function c2(l){i[l]=r[l]&&function(u2){return new Promise(function(f,b2){u2=r[l](u2),s(f,b2,u2.done,u2.value)})}}function s(l,u2,f,b2){Promise.resolve(b2).then(function(m){l({value:m,done:f})},u2)}},Qt=function(r,a){return Object.defineProperty?Object.defineProperty(r,"raw",{value:a}):r.raw=a,r};var n=Object.create?function(r,a){Object.defineProperty(r,"default",{enumerable:true,value:a})}:function(r,a){r.default=a};Wt=function(r){if(r&&r.__esModule)return r;var a={};if(r!=null)for(var i in r)i!=="default"&&Object.prototype.hasOwnProperty.call(r,i)&&pe2(a,r,i);return n(a,r),a},qt=function(r){return r&&r.__esModule?r:{default:r}},Yt=function(r,a,i,c2){if(i==="a"&&!c2)throw new TypeError("Private accessor was defined without a getter");if(typeof a=="function"?r!==a||!c2:!a.has(r))throw new TypeError("Cannot read private member from an object whose class did not declare it");return i==="m"?c2:i==="a"?c2.call(r):c2?c2.value:a.get(r)},$t=function(r,a,i,c2,s){if(c2==="m")throw new TypeError("Private method is not writable");if(c2==="a"&&!s)throw new TypeError("Private accessor was defined without a setter");if(typeof a=="function"?r!==a||!s:!a.has(r))throw new TypeError("Cannot write private member to an object whose class did not declare it");return c2==="a"?s.call(r,i):s?s.value=i:a.set(r,i),i},Zt=function(r,a){if(a===null||typeof a!="object"&&typeof a!="function")throw new TypeError("Cannot use \'in\' operator on non-object");return typeof r=="function"?a===r:r.has(a)},e("__extends",At),e("__assign",Et2),e("__rest",vt),e("__decorate",Tt),e("__param",Rt),e("__metadata",Nt),e("__awaiter",_t),e("__generator",Ft),e("__exportStar",Mt),e("__createBinding",pe2),e("__values",Ce2),e("__read",Te2),e("__spread",Gt),e("__spreadArrays",Ut),e("__spreadArray",Lt),e("__await",L),e("__asyncGenerator",Ht),e("__asyncDelegator",zt),e("__asyncValues",Vt),e("__makeTemplateObject",Qt),e("__importStar",Wt),e("__importDefault",qt),e("__classPrivateFieldGet",Yt),e("__classPrivateFieldSet",$t),e("__classPrivateFieldIn",Zt)})});var Xt=Ro(jt(),1);var{__extends:w3,__assign:ul,__rest:ml,__decorate:fl,__param:dl,__metadata:Cl,__awaiter:Kt,__generator:be,__exportStar:pl,__createBinding:hl,__values:_3,__read:D3,__spread:bl,__spreadArrays:Sl,__spreadArray:R2,__await:Se2,__asyncGenerator:Jt,__asyncDelegator:yl,__asyncValues:en,__makeTemplateObject:Il,__importStar:Bl,__importDefault:Ol,__classPrivateFieldGet:gl,__classPrivateFieldSet:xl,__classPrivateFieldIn:Pl}=Xt.default;function d3(e){return typeof e=="function"}function H2(e){var t2=function(r){Error.call(r),r.stack=new Error().stack},n=e(t2);return n.prototype=Object.create(Error.prototype),n.prototype.constructor=n,n}var ye=H2(function(e){return function(n){e(this),this.message=n?n.length+` errors occurred during unsubscription:\n`+n.map(function(r,a){return a+1+") "+r.toString()}).join(`\n  `):"",this.name="UnsubscriptionError",this.errors=n}});function K2(e,t2){if(e){var n=e.indexOf(t2);0<=n&&e.splice(n,1)}}var z2=function(){function e(t2){this.initialTeardown=t2,this.closed=false,this._parentage=null,this._finalizers=null}return e.prototype.unsubscribe=function(){var t2,n,r,a,i;if(!this.closed){this.closed=true;var c2=this._parentage;if(c2)if(this._parentage=null,Array.isArray(c2))try{for(var s=_3(c2),l=s.next();!l.done;l=s.next()){var u2=l.value;u2.remove(this)}}catch(C3){t2={error:C3}}finally{try{l&&!l.done&&(n=s.return)&&n.call(s)}finally{if(t2)throw t2.error}}else c2.remove(this);var f=this.initialTeardown;if(d3(f))try{f()}catch(C3){i=C3 instanceof ye?C3.errors:[C3]}var b2=this._finalizers;if(b2){this._finalizers=null;try{for(var m=_3(b2),p=m.next();!p.done;p=m.next()){var B2=p.value;try{tn(B2)}catch(C3){i=i??[],C3 instanceof ye?i=R2(R2([],D3(i)),D3(C3.errors)):i.push(C3)}}}catch(C3){r={error:C3}}finally{try{p&&!p.done&&(a=m.return)&&a.call(m)}finally{if(r)throw r.error}}}if(i)throw new ye(i)}},e.prototype.add=function(t2){var n;if(t2&&t2!==this)if(this.closed)tn(t2);else{if(t2 instanceof e){if(t2.closed||t2._hasParent(this))return;t2._addParent(this)}(this._finalizers=(n=this._finalizers)!==null&&n!==void 0?n:[]).push(t2)}},e.prototype._hasParent=function(t2){var n=this._parentage;return n===t2||Array.isArray(n)&&n.includes(t2)},e.prototype._addParent=function(t2){var n=this._parentage;this._parentage=Array.isArray(n)?(n.push(t2),n):n?[n,t2]:t2},e.prototype._removeParent=function(t2){var n=this._parentage;n===t2?this._parentage=null:Array.isArray(n)&&K2(n,t2)},e.prototype.remove=function(t2){var n=this._finalizers;n&&K2(n,t2),t2 instanceof e&&t2._removeParent(this)},e.EMPTY=function(){var t2=new e;return t2.closed=true,t2}(),e}();var Re=z2.EMPTY;function Ie(e){return e instanceof z2||e&&"closed"in e&&d3(e.remove)&&d3(e.add)&&d3(e.unsubscribe)}function tn(e){d3(e)?e():e.unsubscribe()}var P3={onUnhandledError:null,onStoppedNotification:null,Promise:void 0,useDeprecatedSynchronousErrorHandling:false,useDeprecatedNextContext:false};var V2={setTimeout:function(e,t2){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];var a=V2.delegate;return a?.setTimeout?a.setTimeout.apply(a,R2([e,t2],D3(n))):setTimeout.apply(void 0,R2([e,t2],D3(n)))},clearTimeout:function(e){var t2=V2.delegate;return(t2?.clearTimeout||clearTimeout)(e)},delegate:void 0};function Be(e){V2.setTimeout(function(){var t2=P3.onUnhandledError;if(t2)t2(e);else throw e})}function J(){}var nn=function(){return Ne("C",void 0,void 0)}();function rn(e){return Ne("E",void 0,e)}function an(e){return Ne("N",e,void 0)}function Ne(e,t2,n){return{kind:e,value:t2,error:n}}var F4=null;function Q(e){if(P3.useDeprecatedSynchronousErrorHandling){var t2=!F4;if(t2&&(F4={errorThrown:false,error:null}),e(),t2){var n=F4,r=n.errorThrown,a=n.error;if(F4=null,r)throw a}}else e()}function on(e){P3.useDeprecatedSynchronousErrorHandling&&F4&&(F4.errorThrown=true,F4.error=e)}var ee=function(e){w3(t2,e);function t2(n){var r=e.call(this)||this;return r.isStopped=false,n?(r.destination=n,Ie(n)&&n.add(r)):r.destination=Mo,r}return t2.create=function(n,r,a){return new ge2(n,r,a)},t2.prototype.next=function(n){this.isStopped?Fe(an(n),this):this._next(n)},t2.prototype.error=function(n){this.isStopped?Fe(rn(n),this):(this.isStopped=true,this._error(n))},t2.prototype.complete=function(){this.isStopped?Fe(nn,this):(this.isStopped=true,this._complete())},t2.prototype.unsubscribe=function(){this.closed||(this.isStopped=true,e.prototype.unsubscribe.call(this),this.destination=null)},t2.prototype._next=function(n){this.destination.next(n)},t2.prototype._error=function(n){try{this.destination.error(n)}finally{this.unsubscribe()}},t2.prototype._complete=function(){try{this.destination.complete()}finally{this.unsubscribe()}},t2}(z2);var No=Function.prototype.bind;function _e2(e,t2){return No.call(e,t2)}var _o=function(){function e(t2){this.partialObserver=t2}return e.prototype.next=function(t2){var n=this.partialObserver;if(n.next)try{n.next(t2)}catch(r){Oe(r)}},e.prototype.error=function(t2){var n=this.partialObserver;if(n.error)try{n.error(t2)}catch(r){Oe(r)}else Oe(t2)},e.prototype.complete=function(){var t2=this.partialObserver;if(t2.complete)try{t2.complete()}catch(n){Oe(n)}},e}();var ge2=function(e){w3(t2,e);function t2(n,r,a){var i=e.call(this)||this,c2;if(d3(n)||!n)c2={next:n??void 0,error:r??void 0,complete:a??void 0};else{var s;i&&P3.useDeprecatedNextContext?(s=Object.create(n),s.unsubscribe=function(){return i.unsubscribe()},c2={next:n.next&&_e2(n.next,s),error:n.error&&_e2(n.error,s),complete:n.complete&&_e2(n.complete,s)}):c2=n}return i.destination=new _o(c2),i}return t2}(ee);function Oe(e){P3.useDeprecatedSynchronousErrorHandling?on(e):Be(e)}function Fo(e){throw e}function Fe(e,t2){var n=P3.onStoppedNotification;n&&V2.setTimeout(function(){return n(e,t2)})}var Mo={closed:true,next:J,error:Fo,complete:J};var W=function(){return typeof Symbol=="function"&&Symbol.observable||"@@observable"}();function q(e){return e}function cn(e){return e.length===0?q:e.length===1?e[0]:function(n){return e.reduce(function(r,a){return a(r)},n)}}var O2=function(){function e(t2){t2&&(this._subscribe=t2)}return e.prototype.lift=function(t2){var n=new e;return n.source=this,n.operator=t2,n},e.prototype.subscribe=function(t2,n,r){var a=this,i=Uo(t2)?t2:new ge2(t2,n,r);return Q(function(){var c2=a,s=c2.operator,l=c2.source;i.add(s?s.call(i,l):l?a._subscribe(i):a._trySubscribe(i))}),i},e.prototype._trySubscribe=function(t2){try{return this._subscribe(t2)}catch(n){t2.error(n)}},e.prototype.forEach=function(t2,n){var r=this;return n=sn2(n),new n(function(a,i){var c2=new ge2({next:function(s){try{t2(s)}catch(l){i(l),c2.unsubscribe()}},error:i,complete:a});r.subscribe(c2)})},e.prototype._subscribe=function(t2){var n;return(n=this.source)===null||n===void 0?void 0:n.subscribe(t2)},e.prototype[W]=function(){return this},e.prototype.pipe=function(){for(var t2=[],n=0;n<arguments.length;n++)t2[n]=arguments[n];return cn(t2)(this)},e.prototype.toPromise=function(t2){var n=this;return t2=sn2(t2),new t2(function(r,a){var i;n.subscribe(function(c2){return i=c2},function(c2){return a(c2)},function(){return r(i)})})},e.create=function(t2){return new e(t2)},e}();function sn2(e){var t2;return(t2=e??P3.Promise)!==null&&t2!==void 0?t2:Promise}function Go(e){return e&&d3(e.next)&&d3(e.error)&&d3(e.complete)}function Uo(e){return e&&e instanceof ee||Go(e)&&Ie(e)}function Lo(e){return d3(e?.lift)}function y4(e){return function(t2){if(Lo(t2))return t2.lift(function(n){try{return e(n,this)}catch(r){this.error(r)}});throw new TypeError("Unable to lift unknown Observable type")}}function S2(e,t2,n,r,a){return new Ho2(e,t2,n,r,a)}var Ho2=function(e){w3(t2,e);function t2(n,r,a,i,c2,s){var l=e.call(this,n)||this;return l.onFinalize=c2,l.shouldUnsubscribe=s,l._next=r?function(u2){try{r(u2)}catch(f){n.error(f)}}:e.prototype._next,l._error=i?function(u2){try{i(u2)}catch(f){n.error(f)}finally{this.unsubscribe()}}:e.prototype._error,l._complete=a?function(){try{a()}catch(u2){n.error(u2)}finally{this.unsubscribe()}}:e.prototype._complete,l}return t2.prototype.unsubscribe=function(){var n;if(!this.shouldUnsubscribe||this.shouldUnsubscribe()){var r=this.closed;e.prototype.unsubscribe.call(this),!r&&((n=this.onFinalize)===null||n===void 0||n.call(this))}},t2}(ee);var ln2=H2(function(e){return function(){e(this),this.name="ObjectUnsubscribedError",this.message="object unsubscribed"}});var M2=function(e){w3(t2,e);function t2(){var n=e.call(this)||this;return n.closed=false,n.currentObservers=null,n.observers=[],n.isStopped=false,n.hasError=false,n.thrownError=null,n}return t2.prototype.lift=function(n){var r=new un(this,this);return r.operator=n,r},t2.prototype._throwIfClosed=function(){if(this.closed)throw new ln2},t2.prototype.next=function(n){var r=this;Q(function(){var a,i;if(r._throwIfClosed(),!r.isStopped){r.currentObservers||(r.currentObservers=Array.from(r.observers));try{for(var c2=_3(r.currentObservers),s=c2.next();!s.done;s=c2.next()){var l=s.value;l.next(n)}}catch(u2){a={error:u2}}finally{try{s&&!s.done&&(i=c2.return)&&i.call(c2)}finally{if(a)throw a.error}}}})},t2.prototype.error=function(n){var r=this;Q(function(){if(r._throwIfClosed(),!r.isStopped){r.hasError=r.isStopped=true,r.thrownError=n;for(var a=r.observers;a.length;)a.shift().error(n)}})},t2.prototype.complete=function(){var n=this;Q(function(){if(n._throwIfClosed(),!n.isStopped){n.isStopped=true;for(var r=n.observers;r.length;)r.shift().complete()}})},t2.prototype.unsubscribe=function(){this.isStopped=this.closed=true,this.observers=this.currentObservers=null},Object.defineProperty(t2.prototype,"observed",{get:function(){var n;return((n=this.observers)===null||n===void 0?void 0:n.length)>0},enumerable:false,configurable:true}),t2.prototype._trySubscribe=function(n){return this._throwIfClosed(),e.prototype._trySubscribe.call(this,n)},t2.prototype._subscribe=function(n){return this._throwIfClosed(),this._checkFinalizedStatuses(n),this._innerSubscribe(n)},t2.prototype._innerSubscribe=function(n){var r=this,a=this,i=a.hasError,c2=a.isStopped,s=a.observers;return i||c2?Re:(this.currentObservers=null,s.push(n),new z2(function(){r.currentObservers=null,K2(s,n)}))},t2.prototype._checkFinalizedStatuses=function(n){var r=this,a=r.hasError,i=r.thrownError,c2=r.isStopped;a?n.error(i):c2&&n.complete()},t2.prototype.asObservable=function(){var n=new O2;return n.source=this,n},t2.create=function(n,r){return new un(n,r)},t2}(O2);var un=function(e){w3(t2,e);function t2(n,r){var a=e.call(this)||this;return a.destination=n,a.source=r,a}return t2.prototype.next=function(n){var r,a;(a=(r=this.destination)===null||r===void 0?void 0:r.next)===null||a===void 0||a.call(r,n)},t2.prototype.error=function(n){var r,a;(a=(r=this.destination)===null||r===void 0?void 0:r.error)===null||a===void 0||a.call(r,n)},t2.prototype.complete=function(){var n,r;(r=(n=this.destination)===null||n===void 0?void 0:n.complete)===null||r===void 0||r.call(n)},t2.prototype._subscribe=function(n){var r,a;return(a=(r=this.source)===null||r===void 0?void 0:r.subscribe(n))!==null&&a!==void 0?a:Re},t2}(M2);var Me=function(e){w3(t2,e);function t2(n){var r=e.call(this)||this;return r._value=n,r}return Object.defineProperty(t2.prototype,"value",{get:function(){return this.getValue()},enumerable:false,configurable:true}),t2.prototype._subscribe=function(n){var r=e.prototype._subscribe.call(this,n);return!r.closed&&n.next(this._value),r},t2.prototype.getValue=function(){var n=this,r=n.hasError,a=n.thrownError,i=n._value;if(r)throw a;return this._throwIfClosed(),i},t2.prototype.next=function(n){e.prototype.next.call(this,this._value=n)},t2}(M2);var mn=new O2(function(e){return e.complete()});var xe=function(e){return e&&typeof e.length=="number"&&typeof e!="function"};function fn(e){return d3(e?.then)}function dn(e){return d3(e[W])}function Cn2(e){return Symbol.asyncIterator&&d3(e?.[Symbol.asyncIterator])}function pn(e){return new TypeError("You provided "+(e!==null&&typeof e=="object"?"an invalid object":"\'"+e+"\'")+" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.")}function zo(){return typeof Symbol!="function"||!Symbol.iterator?"@@iterator":Symbol.iterator}var hn=zo();function bn(e){return d3(e?.[hn])}function Sn(e){return Jt(this,arguments,function(){var n,r,a,i;return be(this,function(c2){switch(c2.label){case 0:n=e.getReader(),c2.label=1;case 1:c2.trys.push([1,,9,10]),c2.label=2;case 2:return[4,Se2(n.read())];case 3:return r=c2.sent(),a=r.value,i=r.done,i?[4,Se2(void 0)]:[3,5];case 4:return[2,c2.sent()];case 5:return[4,Se2(a)];case 6:return[4,c2.sent()];case 7:return c2.sent(),[3,2];case 8:return[3,10];case 9:return n.releaseLock(),[7];case 10:return[2]}})})}function yn(e){return d3(e?.getReader)}function N2(e){if(e instanceof O2)return e;if(e!=null){if(dn(e))return Vo(e);if(xe(e))return Qo(e);if(fn(e))return Wo(e);if(Cn2(e))return In2(e);if(bn(e))return qo(e);if(yn(e))return Yo2(e)}throw pn(e)}function Vo(e){return new O2(function(t2){var n=e[W]();if(d3(n.subscribe))return n.subscribe(t2);throw new TypeError("Provided object does not correctly implement Symbol.observable")})}function Qo(e){return new O2(function(t2){for(var n=0;n<e.length&&!t2.closed;n++)t2.next(e[n]);t2.complete()})}function Wo(e){return new O2(function(t2){e.then(function(n){t2.closed||(t2.next(n),t2.complete())},function(n){return t2.error(n)}).then(null,Be)})}function qo(e){return new O2(function(t2){var n,r;try{for(var a=_3(e),i=a.next();!i.done;i=a.next()){var c2=i.value;if(t2.next(c2),t2.closed)return}}catch(s){n={error:s}}finally{try{i&&!i.done&&(r=a.return)&&r.call(a)}finally{if(n)throw n.error}}t2.complete()})}function In2(e){return new O2(function(t2){$o(e,t2).catch(function(n){return t2.error(n)})})}function Yo2(e){return In2(Sn(e))}function $o(e,t2){var n,r,a,i;return Kt(this,void 0,void 0,function(){var c2,s;return be(this,function(l){switch(l.label){case 0:l.trys.push([0,5,6,11]),n=en(e),l.label=1;case 1:return[4,n.next()];case 2:if(r=l.sent(),!!r.done)return[3,4];if(c2=r.value,t2.next(c2),t2.closed)return[2];l.label=3;case 3:return[3,1];case 4:return[3,11];case 5:return s=l.sent(),a={error:s},[3,11];case 6:return l.trys.push([6,,9,10]),r&&!r.done&&(i=n.return)?[4,i.call(n)]:[3,8];case 7:l.sent(),l.label=8;case 8:return[3,10];case 9:if(a)throw a.error;return[7];case 10:return[7];case 11:return t2.complete(),[2]}})})}function Bn2(e,t2,n,r,a){r===void 0&&(r=0),a===void 0&&(a=false);var i=t2.schedule(function(){n(),a?e.add(this.schedule(null,r)):this.unsubscribe()},r);if(e.add(i),!a)return i}var Pe=H2(function(e){return function(){e(this),this.name="EmptyError",this.message="no elements in sequence"}});function k(e,t2){return y4(function(n,r){var a=0;n.subscribe(S2(r,function(i){r.next(e.call(t2,i,a++))}))})}var Zo=Array.isArray;function jo(e,t2){return Zo(t2)?e.apply(void 0,R2([],D3(t2))):e(t2)}function On(e){return k(function(t2){return jo(e,t2)})}function gn(e,t2,n,r,a,i,c2,s){var l=[],u2=0,f=0,b2=false,m=function(){b2&&!l.length&&!u2&&t2.complete()},p=function(C3){return u2<r?B2(C3):l.push(C3)},B2=function(C3){i&&t2.next(C3),u2++;var x4=false;N2(n(C3,f++)).subscribe(S2(t2,function(h){a?.(h),i?p(h):t2.next(h)},function(){x4=true},void 0,function(){if(x4)try{u2--;for(var h=function(){var T2=l.shift();c2?Bn2(t2,c2,function(){return B2(T2)}):B2(T2)};l.length&&u2<r;)h();m()}catch(T2){t2.error(T2)}}))};return e.subscribe(S2(t2,p,function(){b2=true,m()})),function(){s?.()}}function Y3(e,t2,n){return n===void 0&&(n=1/0),d3(t2)?Y3(function(r,a){return k(function(i,c2){return t2(r,i,a,c2)})(N2(e(r,a)))},n):(typeof t2=="number"&&(n=t2),y4(function(r,a){return gn(r,a,e,n)}))}var Xo=["addListener","removeListener"];var Ko=["addEventListener","removeEventListener"];var Jo=["on","off"];function te2(e,t2,n,r){if(d3(n)&&(r=n,n=void 0),r)return te2(e,t2,n).pipe(On(r));var a=D3(ni(e)?Ko.map(function(s){return function(l){return e[s](t2,l,n)}}):ei(e)?Xo.map(xn(e,t2)):ti(e)?Jo.map(xn(e,t2)):[],2),i=a[0],c2=a[1];if(!i&&xe(e))return Y3(function(s){return te2(s,t2,n)})(N2(e));if(!i)throw new TypeError("Invalid event target");return new O2(function(s){var l=function(){for(var u2=[],f=0;f<arguments.length;f++)u2[f]=arguments[f];return s.next(1<u2.length?u2:u2[0])};return i(l),function(){return c2(l)}})}function xn(e,t2){return function(n){return function(r){return e[n](t2,r)}}}function ei(e){return d3(e.addListener)&&d3(e.removeListener)}function ti(e){return d3(e.on)&&d3(e.off)}function ni(e){return d3(e.addEventListener)&&d3(e.removeEventListener)}function ne(e,t2){return y4(function(n,r){var a=0;n.subscribe(S2(r,function(i){return e.call(t2,i,a++)&&r.next(i)}))})}function Pn2(e){return y4(function(t2,n){var r=false;t2.subscribe(S2(n,function(a){r=true,n.next(a)},function(){r||n.next(e),n.complete()}))})}function wn2(e){return e<=0?function(){return mn}:y4(function(t2,n){var r=0;t2.subscribe(S2(n,function(a){++r<=e&&(n.next(a),e<=r&&n.complete())}))})}function Dn(e){return e===void 0&&(e=ri2),y4(function(t2,n){var r=false;t2.subscribe(S2(n,function(a){r=true,n.next(a)},function(){return r?n.complete():n.error(e())}))})}function ri2(){return new Pe}function Ge(e,t2){var n=arguments.length>=2;return function(r){return r.pipe(e?ne(function(a,i){return e(a,i,r)}):q,wn2(1),n?Pn2(t2):Dn(function(){return new Pe}))}}function Ue(e){return y4(function(t2,n){N2(e).subscribe(S2(n,function(){return n.complete()},J)),!n.closed&&t2.subscribe(n)})}function Le(e,t2,n){var r=d3(e)||t2||n?{next:e,error:t2,complete:n}:e;return r?y4(function(a,i){var c2;(c2=r.subscribe)===null||c2===void 0||c2.call(r);var s=true;a.subscribe(S2(i,function(l){var u2;(u2=r.next)===null||u2===void 0||u2.call(r,l),i.next(l)},function(){var l;s=false,(l=r.complete)===null||l===void 0||l.call(r),i.complete()},function(l){var u2;s=false,(u2=r.error)===null||u2===void 0||u2.call(r,l),i.error(l)},function(){var l,u2;s&&((l=r.unsubscribe)===null||l===void 0||l.call(r)),(u2=r.finalize)===null||u2===void 0||u2.call(r)}))}):q}var kn2="1";var An2="2";var En="3";var vn="4";var Tn2="5";var Rn="6";var Nn="7";var _n="8";var Fn="q";var Mn="w";var Gn="e";var Un="r";var Ln2="t";var Hn="y";var zn="u";var Vn="i";var Qn="!";var Wn="@";var qn="#";var Yn="$";var $n="%";var Zn="^";var jn="&";var Xn="*";var Kn2="Q";var Jn="W";var er="E";var tr="R";var nr="T";var rr="Y";var ar="U";var or="I";var ir="p";var cr="0";var sr="=";var lr="-";var ur="]";var mr2="[";var We="0";var qe="1";var Ye2="6";var $e="7";var Ze="2";var je="3";var Xe="4";var Ke2="5";var Qr2="1";var Wr="0";var qr2="1";var Yr="2";var $r2="3";var Zr="4";var jr="5";var Xr="6";var Kr="7";var Jr="8";var ea="Q";var ta="W";var na2="E";var ra2="R";var aa="T";var oa="Y";var ia="U";var ca2="I";var Je="0";var et="1";var tt="2";var nt="3";var rt="4";var at="5";var ot2="6";var sa2="X";var la2="1";var ua="0";var ma="x";var fa2="1";var da2="0";var Ca2="1";var pa="0";var De="normal";var it="shorted";var ct2="biasMethod";var st2="mvdd";var lt2="temp";var ut2="testSig";var mt="biasDrp";var ft="biasDrn";var fr="d";var ai="D";var ha="Z";var ba2="z";var Ve="1";var Qe="0";var dr2="G";var Cr2="H";var pr="J";var hr="K";var br="L";var Sr="A";var yr="S";var Ir2="F";var Br2="a";var oi="j";var Or2="1hour";var gr2="2hour";var xr="4hour";var Pr2="12hour";var wr="24hour";var Dr="5min";var kr2="15min";var Ar2="30min";var Er2="14sec";var ii2="b";var ci="s";var si="?";var vr2="CH1SET";var Tr="CH2SET";var Rr="CH3SET";var Nr="CH4SET";var _r="CH5SET";var Fr="CH6SET";var Mr="CH7SET";var Gr2="CH8SET";var li="v";var ui="c";var mi2="C";var fi="";var di="daisy removed";var Ci="16";var pi="daisy attached16";var hi2="no daisy to attach!8";var bi="g";var Si="f";var yi="`";var Ii="<";var Bi=",";var Sa2="/";var ya2="0";var Ia2="1";var Ba2="2";var Oa2="3";var Oi="/";var ga2="analog";var xa2="default";var Pa="debug";var wa2="digital";var Da2="~";var ka2="0";var Aa="1";var Ea="2";var va2="3";var Ta2="4";var Ra="5";var Na2="6";var _a2="0";var Fa="1";var Ma2="2";var Ga="3";var Ua2="4";var La="5";var Ha2="6";var za2="7";var gi="~";var xi="n";var Pi="N";var wi="{";var Di="}";var ki=";";var Ai=":";var re="cyton";var He="cytonBLE";var we="daisy";var Ei="default";var ae="ganglion";var ze2="none";var vi="60Hz";var Ti2="50Hz";var Ri2="none";var Ni="random";var _i="fullBuffers";var Fi2="oneByOne";var Mi2="none";var Gi="Invalid Packet Byte Length";var Ui="Invalid Start Byte";var Li2="Invalid Stop Byte";var Hi="Invalid data - try again";var zi="Invalid type - check comments for input type";var Vi2="Missing register setting";var Qi="Missing property in JSON";var Wi="Scan already under way";var qi="No scan started";var Yi="Please turn blue tooth on.";var $i2="\'this.sync.curSyncObj\' must not be null";var Zi="Missed the time sync sent confirmation. Try sync again";var ji="Undefined or Null Input";var Ur="bad";var Lr2="none";var Hr="good";var Xi="init";var zr2="ok";var Ki="OpenBCISimulator";var Ji="v1";var ec2="v2";var tc2="v3";var nc="Daisy";var rc="v2";var ac2="Failure";var oc="$$$";var ic2="Success";var cc="rawAux";var sc2="standard";var lc2="default";var uc="fast";var mc="accelerometer";var fc2="blePoweredOn";var dc2="close";var Cc="droppedPacket";var pc2="eot";var hc2="error";var bc2="ganglionFound";var Sc2="hardSet";var yc2="impedance";var Ic2="impedanceArray";var Bc2="message";var Oc="query";var gc2="rawDataPacket";var xc="ready";var Pc="rfduino";var wc2="sample";var Dc2="scanStopped";var kc2="synced";var Ac2="wifiShield";var Ec2={max:100,min:1};var vc2={max:200,min:101};var Tc2=201;var Rc=202;var Nc=203;var _c2=204;var Fc=205;var Mc2=206;var Gc2=207;var Uc2=20;var Lc2=2;var Hc={auxByte:20,byteId:0,dataStart:1,dataStop:19};var zc2={byteId:0,dataStart:1,dataStop:20};var Va2=51;var Qa2=1.2;var dt="Ganglion";var Vc2="t";var Qc="T";var Wc="z";var qc2="Z";var Yc2=Qa2/(8388607*Va2*1.5);var $c="fe84";var Zc2="2d30c082f39f4ce6923f3484ea480596";var jc2="2d30c083f39f4ce6923f3484ea480596";var Xc2="2d30c084f39f4ce6923f3484ea480596";var Kc="2220";var Jc2="2221";var es2="2222";var ts2="2223";var ns=3;var rs2="connect";var as2="disconnect";var os2="discover";var is2="servicesDiscover";var cs="characteristicsDiscover";var ss="read";var ls2="discover";var us="scanStart";var ms="scanStop";var fs3="stateChange";var ds="poweredOn";var Cs="ble";var ps2="serial";var hs2="wifi";var Ct=`\nLIS3DH Registers\n0x07.0\n0x08.0\n0x09.0\n0x0A.0\n0x0B.0\n0x0C.0\n0x0D.0\n0x0E.0\n0x0F.33\n\n0x1F.0\n0x20.8\n0x21.0\n0x22.0\n0x23.18\n0x24.0\n0x25.0\n0x26.0\n0x27.0\n0x28.0\n0x29.0\n0x2A.0\n0x2B.0\n0x2C.0\n0x2D.0\n0x2E.0\n0x2F.20\n0x30.0\n0x31.0\n0x32.0\n0x33.0\n\n0x38.0\n0x39.0\n0x3A.0\n0x3B.0\n0x3C.0\n0x3D.0\n`;var pt=`\nLIS3DH Registers\n0x07 00\n0x08 00\n0x09 00\n0x0A 00\n0x0B 00\n0x0C 00\n0x0D 00\n0x0E 00\n0x0F 33\n\n0x1F 00\n0x20 08\n0x21 00\n0x22 00\n0x23 18\n0x24 00\n0x25 00\n0x26 00\n0x27 00\n0x28 00\n0x29 00\n0x2A 00\n0x2B 00\n0x2C 00\n0x2D 00\n0x2E 00\n0x2F 20\n0x30 00\n0x31 00\n0x32 00\n0x33 00\n\n0x38 00\n0x39 00\n0x3A 00\n0x3B 00\n0x3C 00\n0x3D 00\n`;var ie=`\nBoard ADS Registers\nADS_ID, 00, 3E, 0, 0, 1, 1, 1, 1, 1, 0\nCONFIG1, 01, 96, 1, 0, 0, 1, 0, 1, 1, 0\nCONFIG2, 02, C0, 1, 1, 0, 0, 0, 0, 0, 0\nCONFIG3, 03, EC, 1, 1, 1, 0, 1, 1, 0, 0\nLOFF, 04, 02, 0, 0, 0, 0, 0, 0, 1, 0\nCH1SET, 05, 68, 0, 1, 1, 0, 1, 0, 0, 0\nCH2SET, 06, 68, 0, 1, 1, 0, 1, 0, 0, 0\nCH3SET, 07, 68, 0, 1, 1, 0, 1, 0, 0, 0\nCH4SET, 08, 68, 0, 1, 1, 0, 1, 0, 0, 0\nCH5SET, 09, 68, 0, 1, 1, 0, 1, 0, 0, 0\nCH6SET, 0A, 68, 0, 1, 1, 0, 1, 0, 0, 0\nCH7SET, 0B, 68, 0, 1, 1, 0, 1, 0, 0, 0\nCH8SET, 0C, 68, 0, 1, 1, 0, 1, 0, 0, 0\nBIAS_SENSP, 0D, FF, 1, 1, 1, 1, 1, 1, 1, 1\nBIAS_SENSN, 0E, FF, 1, 1, 1, 1, 1, 1, 1, 1\nLOFF_SENSP, 0F, 00, 0, 0, 0, 0, 0, 0, 0, 0\nLOFF_SENSN, 10, 00, 0, 0, 0, 0, 0, 0, 0, 0\nLOFF_FLIP, 11, 00, 0, 0, 0, 0, 0, 0, 0, 0\nLOFF_STATP, 12, 00, 0, 0, 0, 0, 0, 0, 0, 0\nLOFF_STATN, 13, 00, 0, 0, 0, 0, 0, 0, 0, 0\nGPIO, 14, 0F, 0, 0, 0, 0, 1, 1, 1, 1\nMISC1, 15, 00, 0, 0, 0, 0, 0, 0, 0, 0\nMISC2, 16, 00, 0, 0, 0, 0, 0, 0, 0, 0\nCONFIG4, 17, 00, 0, 0, 0, 0, 0, 0, 0, 0\n`;var ht=`\nDaisy ADS Registers\nADS_ID, 00, 3E, 0, 0, 1, 1, 1, 1, 1, 0\nCONFIG1, 01, 96, 1, 0, 0, 1, 0, 1, 1, 0\nCONFIG2, 02, C0, 1, 1, 0, 0, 0, 0, 0, 0\nCONFIG3, 03, EC, 1, 1, 1, 0, 1, 1, 0, 0\nLOFF, 04, 02, 0, 0, 0, 0, 0, 0, 1, 0\nCH1SET, 05, 68, 0, 1, 1, 0, 1, 0, 0, 0\nCH2SET, 06, 68, 0, 1, 1, 0, 1, 0, 0, 0\nCH3SET, 07, 68, 0, 1, 1, 0, 1, 0, 0, 0\nCH4SET, 08, 68, 0, 1, 1, 0, 1, 0, 0, 0\nCH5SET, 09, 68, 0, 1, 1, 0, 1, 0, 0, 0\nCH6SET, 0A, 68, 0, 1, 1, 0, 1, 0, 0, 0\nCH7SET, 0B, 68, 0, 1, 1, 0, 1, 0, 0, 0\nCH8SET, 0C, 68, 0, 1, 1, 0, 1, 0, 0, 0\nBIAS_SENSP, 0D, FF, 1, 1, 1, 1, 1, 1, 1, 1\nBIAS_SENSN, 0E, FF, 1, 1, 1, 1, 1, 1, 1, 1\nLOFF_SENSP, 0F, 00, 0, 0, 0, 0, 0, 0, 0, 0\nLOFF_SENSN, 10, 00, 0, 0, 0, 0, 0, 0, 0, 0\nLOFF_FLIP, 11, 00, 0, 0, 0, 0, 0, 0, 0, 0\nLOFF_STATP, 12, 00, 0, 0, 0, 0, 0, 0, 0, 0\nLOFF_STATN, 13, 00, 0, 0, 0, 0, 0, 0, 0, 0\nGPIO, 14, 0F, 0, 0, 0, 0, 1, 1, 1, 1\nMISC1, 15, 00, 0, 0, 0, 0, 0, 0, 0, 0\nMISC2, 16, 00, 0, 0, 0, 0, 0, 0, 0, 0\nCONFIG4, 17, 00, 0, 0, 0, 0, 0, 0, 0, 0\n`;var bs="MISC1";var Ss="BIAS_SENSP";var ys2=["CH1SET","CH2SET","CH3SET","CH4SET","CH5SET","CH6SET","CH7SET","CH8SET"];var Is2=ie.length+Ct.length;var Bs=ie.length+ht.length+Ct.length;var Os2=ie.length+pt.length;var gs2=ie.length+ht.length+pt.length;var Wa2={OBCIChannelOff1:kn2,OBCIChannelOff2:An2,OBCIChannelOff3:En,OBCIChannelOff4:vn,OBCIChannelOff5:Tn2,OBCIChannelOff6:Rn,OBCIChannelOff7:Nn,OBCIChannelOff8:_n,OBCIChannelOff9:Fn,OBCIChannelOff10:Mn,OBCIChannelOff11:Gn,OBCIChannelOff12:Un,OBCIChannelOff13:Ln2,OBCIChannelOff14:Hn,OBCIChannelOff15:zn,OBCIChannelOff16:Vn,commandChannelOff:function(e){return new Promise(function(t2,n){switch(e){case 1:t2(kn2);break;case 2:t2(An2);break;case 3:t2(En);break;case 4:t2(vn);break;case 5:t2(Tn2);break;case 6:t2(Rn);break;case 7:t2(Nn);break;case 8:t2(_n);break;case 9:t2(Fn);break;case 10:t2(Mn);break;case 11:t2(Gn);break;case 12:t2(Un);break;case 13:t2(Ln2);break;case 14:t2(Hn);break;case 15:t2(zn);break;case 16:t2(Vn);break;default:n(Error("Error [commandChannelOff]: Invalid Channel Number"));break}})},OBCIChannelOn1:Qn,OBCIChannelOn2:Wn,OBCIChannelOn3:qn,OBCIChannelOn4:Yn,OBCIChannelOn5:$n,OBCIChannelOn6:Zn,OBCIChannelOn7:jn,OBCIChannelOn8:Xn,OBCIChannelOn9:Kn2,OBCIChannelOn10:Jn,OBCIChannelOn11:er,OBCIChannelOn12:tr,OBCIChannelOn13:nr,OBCIChannelOn14:rr,OBCIChannelOn15:ar,OBCIChannelOn16:or,commandChannelOn:function(e){return new Promise(function(t2,n){switch(e){case 1:t2(Qn);break;case 2:t2(Wn);break;case 3:t2(qn);break;case 4:t2(Yn);break;case 5:t2($n);break;case 6:t2(Zn);break;case 7:t2(jn);break;case 8:t2(Xn);break;case 9:t2(Kn2);break;case 10:t2(Jn);break;case 11:t2(er);break;case 12:t2(tr);break;case 13:t2(nr);break;case 14:t2(rr);break;case 15:t2(ar);break;case 16:t2(or);break;default:n(Error("Error [commandChannelOn]: Invalid Channel Number"));break}})},OBCITestSignalConnectToDC:ir,OBCITestSignalConnectToGround:cr,OBCITestSignalConnectToPulse1xFast:sr,OBCITestSignalConnectToPulse1xSlow:lr,OBCITestSignalConnectToPulse2xFast:ur,OBCITestSignalConnectToPulse2xSlow:mr2,getTestSignalCommand:e=>new Promise((t2,n)=>{switch(e){case"dc":t2(ir);break;case"ground":t2(cr);break;case"pulse1xFast":t2(sr);break;case"pulse1xSlow":t2(lr);break;case"pulse2xFast":t2(ur);break;case"pulse2xSlow":t2(mr2);break;case"none":t2(fr);break;default:n(Error("Invalid selection! Check your spelling."));break}}),OBCIChannelCmdADCNormal:We,OBCIChannelCmdADCShorted:qe,OBCIChannelCmdADCBiasDRP:Ye2,OBCIChannelCmdADCBiasDRN:$e,OBCIChannelCmdADCBiasMethod:Ze,OBCIChannelCmdADCMVDD:je,OBCIChannelCmdADCTemp:Xe,OBCIChannelCmdADCTestSig:Ke2,OBCIChannelCmdBiasInclude:Qr2,OBCIChannelCmdBiasRemove:Wr,OBCIChannelCmdChannel1:qr2,OBCIChannelCmdChannel2:Yr,OBCIChannelCmdChannel3:$r2,OBCIChannelCmdChannel4:Zr,OBCIChannelCmdChannel5:jr,OBCIChannelCmdChannel6:Xr,OBCIChannelCmdChannel7:Kr,OBCIChannelCmdChannel8:Jr,OBCIChannelCmdChannel9:ea,OBCIChannelCmdChannel10:ta,OBCIChannelCmdChannel11:na2,OBCIChannelCmdChannel12:ra2,OBCIChannelCmdChannel13:aa,OBCIChannelCmdChannel14:oa,OBCIChannelCmdChannel15:ia,OBCIChannelCmdChannel16:ca2,commandChannelForCmd:bt,OBCIChannelCmdGain1:Je,OBCIChannelCmdGain2:et,OBCIChannelCmdGain4:tt,OBCIChannelCmdGain6:nt,OBCIChannelCmdGain8:rt,OBCIChannelCmdGain12:at,OBCIChannelCmdGain24:ot2,commandForGain:Ya2,gainForCommand:vs,OBCIChannelCmdLatch:sa2,OBCIChannelCmdPowerOff:la2,OBCIChannelCmdPowerOn:ua,OBCIChannelCmdSet:ma,OBCIChannelCmdSRB1Connect:fa2,OBCIChannelCmdSRB1Diconnect:da2,OBCIChannelCmdSRB2Connect:Ca2,OBCIChannelCmdSRB2Diconnect:pa,channelSettingsObjectDefault:Vr2,channelSettingsArrayInit:e=>{for(var t2=[],n=0;n<e;n++)t2.push(Vr2(n));return t2},OBCIStringADCNormal:De,OBCIStringADCShorted:it,OBCIStringADCBiasMethod:ct2,OBCIStringADCMvdd:st2,OBCIStringADCTemp:lt2,OBCIStringADCTestSig:ut2,OBCIStringADCBiasDrp:mt,OBCIStringADCBiasDrn:ft,commandForADCString:qa2,inputTypeForCommand:Es,OBCIChannelDefaultAllSet:fr,OBCIChannelDefaultAllGet:ai,OBCIChannelImpedanceLatch:ha,OBCIChannelImpedanceSet:ba2,OBCIChannelImpedanceTestSignalApplied:Ve,OBCIChannelImpedanceTestSignalAppliedNot:Qe,OBCISDLogForHour1:dr2,OBCISDLogForHour2:Cr2,OBCISDLogForHour4:pr,OBCISDLogForHour12:hr,OBCISDLogForHour24:br,OBCISDLogForMin5:Sr,OBCISDLogForMin15:yr,OBCISDLogForMin30:Ir2,OBCISDLogForSec14:Br2,OBCISDLogStop:oi,OBCIStringSDHour1:Or2,OBCIStringSDHour2:gr2,OBCIStringSDHour4:xr,OBCIStringSDHour12:Pr2,OBCIStringSDHour24:wr,OBCIStringSDMin5:Dr,OBCIStringSDMin15:kr2,OBCIStringSDMin30:Ar2,OBCIStringSDSec14:Er2,sdSettingForString:e=>new Promise((t2,n)=>{switch(e){case Or2:t2(dr2);break;case gr2:t2(Cr2);break;case xr:t2(pr);break;case Pr2:t2(hr);break;case wr:t2(br);break;case Dr:t2(Sr);break;case kr2:t2(yr);break;case Ar2:t2(Ir2);break;case Er2:t2(Br2);break;default:n(Error(TypeError));break}}),OBCIStreamStart:ii2,OBCIStreamStop:ci,OBCIAccelStart:xi,OBCIAccelStop:Pi,OBCIMiscQueryRegisterSettings:si,OBCIMiscQueryRegisterSettingsChannel1:vr2,OBCIMiscQueryRegisterSettingsChannel2:Tr,OBCIMiscQueryRegisterSettingsChannel3:Rr,OBCIMiscQueryRegisterSettingsChannel4:Nr,OBCIMiscQueryRegisterSettingsChannel5:_r,OBCIMiscQueryRegisterSettingsChannel6:Fr,OBCIMiscQueryRegisterSettingsChannel7:Mr,OBCIMiscQueryRegisterSettingsChannel8:Gr2,channelSettingsKeyForChannel:e=>new Promise((t2,n)=>{switch(e){case 1:t2(new Buffer(vr2));break;case 2:t2(new Buffer(Tr));break;case 3:t2(new Buffer(Rr));break;case 4:t2(new Buffer(Nr));break;case 5:t2(new Buffer(_r));break;case 6:t2(new Buffer(Fr));break;case 7:t2(new Buffer(Mr));break;case 8:t2(new Buffer(Gr2));break;default:n(Error("Invalid channel number"));break}}),OBCIMiscSoftReset:li,OBCIChannelMaxNumber8:ui,OBCIChannelMaxNumber16:mi2,OBCIChannelMaxNumber8NoDaisyToRemove:fi,OBCIChannelMaxNumber8SuccessDaisyRemoved:di,OBCIChannelMaxNumber16DaisyAlreadyAttached:Ci,OBCIChannelMaxNumber16DaisyAttached:pi,OBCIChannelMaxNumber16NoDaisyAttached:hi2,OBCIFilterDisable:bi,OBCIFilterEnable:Si,OBCITrigger:yi,OBCINumberOfChannelsCyton:8,OBCINumberOfChannelsCytonBLE:2,OBCINumberOfChannelsDaisy:16,OBCINumberOfChannelsDefault:8,OBCINumberOfChannelsGanglion:4,OBCIBoardCyton:re,OBCIBoardCytonBLE:He,OBCIBoardDaisy:we,OBCIBoardDefault:Ei,OBCIBoardGanglion:ae,OBCIBoardNone:ze2,numberOfChannelsForBoardType:e=>{switch(e){case we:return 16;case ae:return 4;case ze2:return 0;case He:return 2;case re:default:return 8}},boardTypeForNumberOfChannels:e=>{switch(e){case 16:return we;case 4:return ae;case 0:return ze2;case 2:return He;case 8:default:return re}},OBCISampleRate1000:1e3,OBCISampleRate125:125,OBCISampleRate12800:12800,OBCISampleRate1600:1600,OBCISampleRate16000:16e3,OBCISampleRate200:200,OBCISampleRate2000:2e3,OBCISampleRate250:250,OBCISampleRate25600:25600,OBCISampleRate3200:3200,OBCISampleRate400:400,OBCISampleRate4000:4e3,OBCISampleRate500:500,OBCISampleRate6400:6400,OBCISampleRate800:800,OBCISampleRate8000:8e3,OBCISampleNumberMax:255,OBCIPacketSize:33,OBCIPacketSizeBLECyton:20,OBCIPacketSizeBLERaw:12,OBCIByteStart:160,OBCIByteStop:192,OBCIErrorInvalidByteLength:Gi,OBCIErrorInvalidByteStart:Ui,OBCIErrorInvalidByteStop:Li2,OBCIErrorInvalidData:Hi,OBCIErrorInvalidType:zi,OBCIErrorMissingRegisterSetting:Vi2,OBCIErrorMissingRequiredProperty:Qi,OBCIErrorNobleAlreadyScanning:Wi,OBCIErrorNobleNotAlreadyScanning:qi,OBCIErrorNobleNotInPoweredOnState:Yi,OBCIErrorTimeSyncIsNull:$i2,OBCIErrorTimeSyncNoComma:Zi,OBCIErrorUndefinedOrNullInput:ji,OBCIMasterBufferSize:4096,OBCILeadOffDriveInAmps:6e-9,OBCILeadOffFrequencyHz:31.5,getChannelSetter:xs,getImpedanceSetter:Ps2,getSampleRateSetter:ws,getBoardModeSetter:Ds,OBCIWriteIntervalDelayMSLong:50,OBCIWriteIntervalDelayMSNone:0,OBCIWriteIntervalDelayMSShort:10,OBCISyncTimeSent:Bi,OBCISyncTimeSet:Ii,OBCIRadioKey:240,OBCIRadioCmdChannelGet:0,OBCIRadioCmdChannelSet:1,OBCIRadioCmdChannelSetOverride:2,OBCIRadioCmdPollTimeGet:3,OBCIRadioCmdPollTimeSet:4,OBCIRadioCmdBaudRateSetDefault:5,OBCIRadioCmdBaudRateSetFast:6,OBCIRadioCmdSystemStatus:7,OBCIImpedanceTextBad:Ur,OBCIImpedanceTextGood:Hr,OBCIImpedanceTextInit:Xi,OBCIImpedanceTextOk:zr2,OBCIImpedanceTextNone:Lr2,OBCIImpedanceThresholdBadMax:1e6,OBCIImpedanceSeriesResistor:2200,getTextForRawImpedance:e=>e>0&&e<5e3?Hr:e>5001&&e<1e4?zr2:e>10001&&e<1e6?Ur:Lr2,OBCISimulatorPortName:Ki,OBCIStreamPacketStandardAccel:0,OBCIStreamPacketStandardRawAux:1,OBCIStreamPacketUserDefinedType:2,OBCIStreamPacketAccelTimeSyncSet:3,OBCIStreamPacketAccelTimeSynced:4,OBCIStreamPacketRawAuxTimeSyncSet:5,OBCIStreamPacketRawAuxTimeSynced:6,OBCIStreamPacketImpedance:7,isNumber:oe,isBoolean:G2,isString:ke,isUndefined:ks,isNull:As2,OBCIPacketPositionStartByte:0,OBCIPacketPositionStopByte:32,OBCIPacketPositionStartAux:26,OBCIPacketPositionStopAux:31,OBCIPacketPositionChannelDataStart:2,OBCIPacketPositionChannelDataStop:25,OBCIPacketPositionSampleNumber:1,OBCIPacketPositionTimeSyncAuxStart:26,OBCIPacketPositionTimeSyncAuxStop:28,OBCIPacketPositionTimeSyncTimeStart:28,OBCIPacketPositionTimeSyncTimeStop:32,OBCISimulatorLineNoiseHz60:vi,OBCISimulatorLineNoiseHz50:Ti2,OBCISimulatorLineNoiseNone:Ri2,OBCISimulatorFragmentationRandom:Ni,OBCISimulatorFragmentationFullBuffers:_i,OBCISimulatorFragmentationOneByOne:Fi2,OBCISimulatorFragmentationNone:Mi2,OBCIFirmwareV1:Ji,OBCIFirmwareV2:ec2,OBCIFirmwareV3:tc2,OBCIAccelAxisX:7,OBCIAccelAxisY:8,OBCIAccelAxisZ:9,OBCIStreamPacketTimeByteSize:4,OBCIParseDaisy:nc,OBCIParseFailure:ac2,OBCIParseFirmware:rc,OBCIParseEOT:oc,OBCIParseSuccess:ic2,OBCIParsingChannelSettings:2,OBCIParsingEOT:4,OBCIParsingNormal:3,OBCIParsingReset:0,OBCIParsingTimeSyncSent:1,OBCITimeoutProcessBytes:500,OBCISimulatorRawAux:cc,OBCISimulatorStandard:sc2,OBCIRadioChannelMax:25,OBCIRadioChannelMin:1,OBCIRadioPollTimeMax:255,OBCIRadioPollTimeMin:0,OBCITimeSyncArraySize:10,OBCITimeSyncMultiplierWithSyncConf:.9,OBCITimeSyncMultiplierWithoutSyncConf:.75,OBCITimeSyncThresholdTransFailureMS:10,OBCIBoardModeSet:Sa2,OBCIBoardModeCmdDefault:ya2,OBCIBoardModeCmdDebug:Ia2,OBCIBoardModeCmdAnalog:Ba2,OBCIBoardModeCmdDigital:Oa2,OBCIBoardModeCmdGetCur:Oi,OBCIBoardModeAnalog:ga2,OBCIBoardModeDefault:xa2,OBCIBoardModeDebug:Pa,OBCIBoardModeDigital:wa2,OBCISampleRateSet:Da2,OBCISampleRateCmdCyton16000:ka2,OBCISampleRateCmdCyton8000:Aa,OBCISampleRateCmdCyton4000:Ea,OBCISampleRateCmdCyton2000:va2,OBCISampleRateCmdCyton1000:Ta2,OBCISampleRateCmdCyton500:Ra,OBCISampleRateCmdCyton250:Na2,OBCISampleRateCmdGang25600:_a2,OBCISampleRateCmdGang12800:Fa,OBCISampleRateCmdGang6400:Ma2,OBCISampleRateCmdGang3200:Ga,OBCISampleRateCmdGang1600:Ua2,OBCISampleRateCmdGang800:La,OBCISampleRateCmdGang400:Ha2,OBCISampleRateCmdGang200:za2,OBCISampleRateCmdGetCur:gi,OBCIWifiAttach:wi,OBCIWifiRemove:Di,OBCIWifiReset:ki,OBCIWifiStatus:Ai,OBCIRadioBaudRateDefault:115200,OBCIRadioBaudRateDefaultStr:lc2,OBCIRadioBaudRateFast:230400,OBCIRadioBaudRateFastStr:uc,OBCIEmitterAccelerometer:mc,OBCIEmitterBlePoweredUp:fc2,OBCIEmitterClose:dc2,OBCIEmitterDroppedPacket:Cc,OBCIEmitterEot:pc2,OBCIEmitterError:hc2,OBCIEmitterGanglionFound:bc2,OBCIEmitterHardSet:Sc2,OBCIEmitterImpedance:yc2,OBCIEmitterImpedanceArray:Ic2,OBCIEmitterMessage:Bc2,OBCIEmitterQuery:Oc,OBCIEmitterRawDataPacket:gc2,OBCIEmitterReady:xc,OBCIEmitterRFduino:Pc,OBCIEmitterSample:wc2,OBCIEmitterScanStopped:Dc2,OBCIEmitterSynced:kc2,OBCIEmitterWifiShield:Ac2,OBCIGanglionAccelAxisX:1,OBCIGanglionAccelAxisY:2,OBCIGanglionAccelAxisZ:3,OBCIGanglionBleSearchTime:2e4,OBCIGanglionByteIdUncompressed:0,OBCIGanglionByteId18Bit:Ec2,OBCIGanglionByteId19Bit:vc2,OBCIGanglionByteIdImpedanceChannel1:Tc2,OBCIGanglionByteIdImpedanceChannel2:Rc,OBCIGanglionByteIdImpedanceChannel3:Nc,OBCIGanglionByteIdImpedanceChannel4:_c2,OBCIGanglionByteIdImpedanceChannelReference:Fc,OBCIGanglionByteIdMultiPacket:Mc2,OBCIGanglionByteIdMultiPacketStop:Gc2,OBCIGanglionMCP3912Gain:Va2,OBCIGanglionMCP3912Vref:Qa2,OBCIGanglionPacketSize:Uc2,OBCIGanglionPacket18Bit:Hc,OBCIGanglionPacket19Bit:zc2,OBCIGanglionPrefix:dt,OBCIGanglionSamplesPerPacket:Lc2,OBCIGanglionSyntheticDataEnable:Vc2,OBCIGanglionSyntheticDataDisable:Qc,OBCIGanglionImpedanceStart:Wc,OBCIGanglionImpedanceStop:qc2,OBCIGanglionScaleFactorPerCountVolts:Yc2,SimbleeUuidService:$c,SimbleeUuidReceive:Zc2,SimbleeUuidSend:jc2,SimbleeUuidDisconnect:Xc2,RFduinoUuidService:Kc,RFduinoUuidReceive:Jc2,RFduinoUuidSend:es2,RFduinoUuidSendTwo:ts2,OBCICytonBLESamplesPerPacket:ns,OBCIGanglionAccelScaleFactor:.016,OBCINobleEmitterPeripheralConnect:rs2,OBCINobleEmitterPeripheralDisconnect:as2,OBCINobleEmitterPeripheralDiscover:os2,OBCINobleEmitterPeripheralServicesDiscover:is2,OBCINobleEmitterServiceCharacteristicsDiscover:cs,OBCINobleEmitterServiceRead:ss,OBCINobleEmitterDiscover:ls2,OBCINobleEmitterScanStart:us,OBCINobleEmitterScanStop:ms,OBCINobleEmitterStateChange:fs3,OBCINobleStatePoweredOn:ds,getPeripheralLocalNames:Ns,getPeripheralWithLocalName:_s,getVersionNumber:Fs,isPeripheralGanglion:Ms,commandSampleRateForCmdCyton:$a2,commandSampleRateForCmdGanglion:Za,commandBoardModeForMode:ja,rawDataToSampleObjectDefault:Ts2,OBCIProtocolBLE:Cs,OBCIProtocolSerial:ps2,OBCIProtocolWifi:hs2,OBCIRegisterQueryAccelerometerFirmwareV1:Ct,OBCIRegisterQueryAccelerometerFirmwareV3:pt,OBCIRegisterQueryCyton:ie,OBCIRegisterQueryCytonDaisy:ht,OBCIRegisterQueryNameMISC1:bs,OBCIRegisterQueryNameBIASSENSP:Ss,OBCIRegisterQueryNameCHnSET:ys2,OBCIRegisterQuerySizeCytonFirmwareV1:Is2,OBCIRegisterQuerySizeCytonDaisyFirmwareV1:Bs,OBCIRegisterQuerySizeCytonFirmwareV3:Os2,OBCIRegisterQuerySizeCytonDaisyFirmwareV3:gs2};function xs(e,t2,n,r,a,i,c2){var s,l,u2,f;return new Promise(function(b2,m){oe(e)||m(Error("channelNumber must be of type \'number\' ")),G2(t2)||m(Error("powerDown must be of type \'boolean\' ")),oe(n)||m(Error("gain must be of type \'number\' ")),ke(r)||m(Error("inputType must be of type \'string\' ")),G2(a)||m(Error("bias must be of type \'boolean\' ")),G2(i)||m(Error("srb1 must be of type \'boolean\' ")),G2(c2)||m(Error("srb2 must be of type \'boolean\' "));var p=bt(e).catch(h=>m(h));s=t2?la2:ua;var B2=Ya2(n).catch(h=>m(h)),C3=qa2(r).catch(h=>m(h));l=a?Qr2:Wr,u2=i?Ca2:pa,f=c2?fa2:da2;var x4={channelNumber:e,powerDown:t2,gain:n,inputType:r,bias:a,srb2:i,srb1:c2};Promise.all([p,B2,C3]).then(function(h){var T2=[ma,h[0],s,h[1],h[2],l,u2,f,sa2];b2({commandArray:T2,newChannelSettingsObject:x4})})})}function Ps2(e,t2,n){var r,a;return new Promise((i,c2)=>{oe(e)||c2(Error("channelNumber must be of type \'number\' ")),G2(t2)||c2(Error("pInputApplied must be of type \'boolean\' ")),G2(n)||c2(Error("nInputApplied must be of type \'boolean\' ")),a=t2?Ve:Qe,r=n?Ve:Qe,bt(e).then(s=>{var l=[ba2,s,a,r,ha];i(l)}).catch(s=>c2(s))})}function ws(e,t2){return new Promise((n,r)=>{if(!ke(e))return r(Error("board type must be of type \'string\' "));if(!oe(t2))return r(Error("sampleRate must be of type \'number\' "));t2=Math.floor(t2);let a;if(e===re||e===we)a=$a2;else if(e===ae)a=Za;else return r(Error(`boardType must be either ${re} or ${ae}`));a(t2).then(i=>{var c2=[Da2,i];n(c2)}).catch(i=>r(i))})}function Ds(e){return new Promise((t2,n)=>{if(!ke(e))return n(Error("board mode must be of type \'string\' "));ja(e).then(r=>{var a=[Sa2,r];t2(a)}).catch(r=>n(r))})}function oe(e){return typeof e=="number"}function G2(e){return typeof e=="boolean"}function ke(e){return typeof e=="string"}function ks(e){return typeof e=="undefined"}function As2(e){return e===null}function qa2(e){return new Promise(function(t2,n){switch(e){case De:t2(We);break;case it:t2(qe);break;case ct2:t2(Ze);break;case st2:t2(je);break;case lt2:t2(Xe);break;case ut2:t2(Ke2);break;case mt:t2(Ye2);break;case ft:t2($e);break;default:n(Error("Invalid ADC string"));break}})}function Es(e){switch(String(e)){case We:return De;case qe:return it;case Ze:return ct2;case je:return st2;case Xe:return lt2;case Ke2:return ut2;case Ye2:return mt;case $e:return ft;default:throw new Error("Invalid input type, must be less than 8")}}function Ya2(e){return new Promise(function(t2,n){switch(e){case 1:t2(Je);break;case 2:t2(et);break;case 4:t2(tt);break;case 6:t2(nt);break;case 8:t2(rt);break;case 12:t2(at);break;case 24:t2(ot2);break;default:n(Error("Invalid gain setting of "+e+" gain must be (1,2,4,6,8,12,24)"));break}})}function vs(e){switch(String(e)){case Je:return 1;case et:return 2;case tt:return 4;case nt:return 6;case rt:return 8;case at:return 12;case ot2:return 24;default:throw new Error(`Invalid gain setting of ${e} gain must be (0,1,2,3,4,5,6)`)}}function bt(e){return new Promise(function(t2,n){switch(e){case 1:t2(qr2);break;case 2:t2(Yr);break;case 3:t2($r2);break;case 4:t2(Zr);break;case 5:t2(jr);break;case 6:t2(Xr);break;case 7:t2(Kr);break;case 8:t2(Jr);break;case 9:t2(ea);break;case 10:t2(ta);break;case 11:t2(na2);break;case 12:t2(ra2);break;case 13:t2(aa);break;case 14:t2(oa);break;case 15:t2(ia);break;case 16:t2(ca2);break;default:n(Error("Invalid channel number"));break}})}function Vr2(e){return{channelNumber:e,powerDown:false,gain:24,inputType:De,bias:true,srb2:true,srb1:false}}function Ts2(e){return e===void 0&&(e=8),{accelArray:[0,0,0],channelSettings:Wa2.channelSettingsArrayInit(e),decompressedSamples:Rs(e),lastSampleNumber:0,rawDataPacket:Buffer.alloc(33),rawDataPackets:[],scale:true,sendCounts:false,timeOffset:0,verbose:false}}function Rs(e){let t2=[];for(let n=0;n<3;n++)t2.push(new Array(e));return t2}function $a2(e){return new Promise(function(t2,n){switch(e){case 16e3:t2(ka2);break;case 8e3:t2(Aa);break;case 4e3:t2(Ea);break;case 2e3:t2(va2);break;case 1e3:t2(Ta2);break;case 500:t2(Ra);break;case 250:t2(Na2);break;default:n(Error("Invalid sample rate"));break}})}function Za(e){return new Promise(function(t2,n){switch(e){case 25600:t2(_a2);break;case 12800:t2(Fa);break;case 6400:t2(Ma2);break;case 3200:t2(Ga);break;case 1600:t2(Ua2);break;case 800:t2(La);break;case 400:t2(Ha2);break;case 200:t2(za2);break;default:n(Error("Invalid sample rate"));break}})}function ja(e){return new Promise(function(t2,n){switch(e){case xa2:t2(ya2);break;case Pa:t2(Ia2);break;case ga2:t2(Ba2);break;case wa2:t2(Oa2);break;default:n(Error("Invalid sample rate"));break}})}function Ns(e){return new Promise((t2,n)=>{var r=[];return e.forEach(a=>{r.push(a.advertisement.localName)}),r.length>0?t2(r):n(Error(`No peripherals discovered with prefix equal to ${dt}`))})}function _s(e,t2){return new Promise((n,r)=>typeof e!="object"?r(Error("pArray must be of type Object")):(e.forEach(a=>{if(a.advertisement.hasOwnProperty("localName")&&a.advertisement.localName===t2)return n(a)}),r(Error(`No peripheral found with localName: ${t2}`))))}function Fs(e){return Number(e[1])}function Ms(e){return!!(e&&e.hasOwnProperty("advertisement")&&e.advertisement!==null&&e.advertisement.hasOwnProperty("localName")&&e.advertisement.localName!==void 0&&e.advertisement.localName!==null&&e.advertisement.localName.indexOf(dt)>-1)}var o=Wa2;var U=4.5;var $=.002/Math.pow(2,4);var no=3;var g2={extractRawDataPackets:e=>{if(!e)return{buffer:e,rawDataPackets:[]};let t2=e.length,n=[];if(t2<o.OBCIPacketSize)return{buffer:e,rawDataPackets:n};let r=0;for(;r<=t2-o.OBCIPacketSize;){if(e[r]===o.OBCIByteStart&&le2(e[r+o.OBCIPacketSize-1])){let a;a=Uint8Array.from(e.slice(r,r+o.OBCIPacketSize)),n.push(a);let i;r>0?i=Uint8Array.concat([Uint8Array.from(e.slice(0,r)),Uint8Array.from(e.slice(r+o.OBCIPacketSize))]):i=Uint8Array.from(e.slice(o.OBCIPacketSize)),i.length===0?e=null:e=Uint8Array.from(i),r=-1,t2-=o.OBCIPacketSize}r++}return{buffer:e,rawDataPackets:n}},extractRawBLEDataPackets:e=>{let t2=[];if(o.isNull(e)||e.byteLength!==o.OBCIPacketSizeBLECyton)return t2;let n=[0,0,0];n[0]=e[1],n[1]=n[0]+1,n[1]>255&&(n[1]-=256),n[2]=n[1]+1,n[2]>255&&(n[2]-=256);for(let r=0;r<o.OBCICytonBLESamplesPerPacket;r++){let a=g2.samplePacketZero(n[r]);a[0]=o.OBCIByteStart,a[o.OBCIPacketPositionStopByte]=e[0],e.copy(a,o.OBCIPacketPositionChannelDataStart,o.OBCIPacketPositionChannelDataStart+r*6,o.OBCIPacketPositionChannelDataStart+6+r*6),t2.push(a)}return t2},transformRawDataPacketToSample:io,transformRawDataPacketsToSample:Vs2,convertGanglionArrayToBuffer:Qs,getRawPacketType:uo,getFromTimePacketAccel:co,getFromTimePacketTime:xt,getFromTimePacketRawAux:Pt,ganglionFillRawDataPacket:Ws,parsePacketStandardAccel:qs2,parsePacketStandardRawAux:Ys,parsePacketTimeSyncedAccel:$s,parsePacketTimeSyncedRawAux:Zs,parsePacketImpedance:js,convertSampleToPacketStandard:e=>{let t2=new Uint8Array(o.OBCIPacketSize);t2.fill(0),t2[0]=o.OBCIByteStart,t2[1]=e.sampleNumber;for(let n=0;n<o.OBCINumberOfChannelsDefault;n++)se(e.channelData[n]).copy(t2,2+n*3);for(let n=0;n<3;n++)Ja2(e.auxData[n]).copy(t2,o.OBCIPacketSize-1-6+n*2);return t2[o.OBCIPacketSize-1]=o.OBCIByteStop,t2},convertSampleToPacketRawAux:(e,t2)=>{let n=new Uint8Array(o.OBCIPacketSize);n.fill(0),n[0]=o.OBCIByteStart,n[1]=e.sampleNumber;for(let r=0;r<o.OBCINumberOfChannelsDefault;r++)se(e.channelData[r]).copy(n,2+r*3);return t2.copy(n,26),n[o.OBCIPacketSize-1]=I(o.OBCIStreamPacketStandardRawAux),n},convertSampleToPacketAccelTimeSyncSet:(e,t2)=>{let n=to(e,t2);return n[o.OBCIPacketPositionStopByte]=I(o.OBCIStreamPacketAccelTimeSyncSet),n},convertSampleToPacketAccelTimeSynced:to,convertSampleToPacketRawAuxTimeSyncSet:(e,t2,n)=>{let r=eo(e,t2,n);return r[o.OBCIPacketPositionStopByte]=I(o.OBCIStreamPacketRawAuxTimeSyncSet),r},convertSampleToPacketRawAuxTimeSynced:eo,debugPrettyPrint:e=>{if(e==null)console.log("== Sample is undefined ==");else{console.log("-- Sample --"),console.log("---- Start Byte: "+e.startByte),console.log("---- Sample Number: "+e.sampleNumber);for(let t2=0;t2<8;t2++)console.log("---- Channel Data "+(t2+1)+": "+e.channelData[t2]);if(e.accelData)for(let t2=0;t2<3;t2++)console.log("---- Accel Data "+t2+": "+e.accelData[t2]);e.auxData&&console.log("---- Aux Data "+e.auxData),console.log("---- Stop Byte: "+e.stopByte)}},samplePrintHeader:()=>`All voltages in Volts!sampleNumber, channel1, channel2, channel3, channel4, channel5, channel6, channel7, channel8, aux1, aux2, aux3\n`,samplePrintLine:e=>new Promise((t2,n)=>{e==null&&n(Error("undefined sample")),t2(e.sampleNumber+","+e.channelData[0].toFixed(8)+","+e.channelData[1].toFixed(8)+","+e.channelData[2].toFixed(8)+","+e.channelData[3].toFixed(8)+","+e.channelData[4].toFixed(8)+","+e.channelData[5].toFixed(8)+","+e.channelData[6].toFixed(8)+","+e.channelData[7].toFixed(8)+","+e.auxData[0].toFixed(8)+","+e.auxData[1].toFixed(8)+","+e.auxData[2].toFixed(8)+`\n`)}),floatTo3ByteBuffer:se,floatTo2ByteBuffer:Ja2,impedanceCalculationForChannel:(e,t2)=>{let n=Math.sqrt(2);return new Promise((r,a)=>{e==null&&a(Error("Sample Object cannot be null or undefined")),(e.channelData===void 0||e.channelData===null)&&a(Error("Channel cannot be null or undefined")),(t2<1||t2>o.OBCINumberOfChannelsDefault)&&a(Error("Channel number invalid."));let i=t2-1;e.channelData[i]<0&&(e.channelData[i]*=-1);let c2=n*e.channelData[i]/o.OBCILeadOffDriveInAmps;r(c2)})},impedanceCalculationForAllChannels:e=>{let t2=Math.sqrt(2);return new Promise((n,r)=>{e==null&&r(Error("Sample Object cannot be null or undefined")),(e.channelData===void 0||e.channelData===null)&&r(Error("Channel cannot be null or undefined"));let a=[],i=e.channelData.length;for(let c2=0;c2<i;c2++){e.channelData[c2]<0&&(e.channelData[c2]*=-1);let s=t2*e.channelData[c2]/o.OBCILeadOffDriveInAmps;a.push(s)}e.impedances=a,n(e)})},interpret16bitAsInt32:e=>{let t2=0;return e[0]>127&&(t2=65535),t2<<16|e[0]<<8|e[1]},interpret24bitAsInt32:e=>{let t2=0;return e[0]>127&&(t2=255),t2<<24|e[0]<<16|e[1]<<8|e[2]},impedanceArray:e=>{let t2=[];for(let n=0;n<e;n++)t2.push(Ka2(n+1));return t2},impedanceObject:Ka2,impedanceSummarize:e=>{e.raw>o.OBCIImpedanceThresholdBadMax?e.text=o.OBCIImpedanceTextNone:e.text=o.getTextForRawImpedance(e.raw)},newSample:mo,newSampleNoScale:fo,scaleFactorAux:$,impedanceCalculateArray:(e,t2)=>{if(t2.buffer.push(e.channelData),t2.count++,t2.count>=t2.window){let n=[];for(let r=0;r<e.channelData.length;r++){let a=0;for(let s=0;s<t2.window;s++)t2.buffer[r][s]>a&&(a=t2.buffer[r][s]);let i=0;for(let s=0;s<t2.window;s++)t2.buffer[r][s]<i&&(i=t2.buffer[r][s]);let c2=a-i;n.push(c2/2/o.OBCILeadOffDriveInAmps)}return t2.count=0,n}return null},impedanceTestObjDefault:e=>{let t2=e||{};return t2.active=false,t2.buffer=[],t2.count=0,t2.isTestingPInput=false,t2.isTestingNInput=false,t2.onChannel=0,t2.sampleNumber=0,t2.continuousMode=false,t2.impedanceForChannel=0,t2.window=40,t2},samplePacket:e=>new Uint8Array([160,A4(e),0,0,1,0,0,2,0,0,3,0,0,4,0,0,5,0,0,6,0,0,7,0,0,8,0,0,0,1,0,2,I(o.OBCIStreamPacketStandardAccel)]),samplePacketZero:e=>new Uint8Array([160,A4(e),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I(o.OBCIStreamPacketStandardAccel)]),samplePacketReal:e=>new Uint8Array([160,A4(e),143,242,64,143,223,244,144,43,182,143,191,191,127,255,255,127,255,255,148,37,52,32,182,125,0,224,0,224,15,112,I(o.OBCIStreamPacketStandardAccel)]),samplePacketStandardRawAux:e=>new Uint8Array([160,A4(e),0,0,1,0,0,2,0,0,3,0,0,4,0,0,5,0,0,6,0,0,7,0,0,8,0,1,2,3,4,5,I(o.OBCIStreamPacketStandardRawAux)]),samplePacketAccelTimeSyncSet:e=>new Uint8Array([160,A4(e),0,0,1,0,0,2,0,0,3,0,0,4,0,0,5,0,0,6,0,0,7,0,0,8,0,1,0,0,0,1,I(o.OBCIStreamPacketAccelTimeSyncSet)]),samplePacketAccelTimeSynced:e=>new Uint8Array([160,A4(e),0,0,1,0,0,2,0,0,3,0,0,4,0,0,5,0,0,6,0,0,7,0,0,8,0,1,0,0,0,1,I(o.OBCIStreamPacketAccelTimeSynced)]),samplePacketRawAuxTimeSyncSet:e=>new Uint8Array([160,A4(e),0,0,1,0,0,2,0,0,3,0,0,4,0,0,5,0,0,6,0,0,7,0,0,8,0,1,0,0,0,1,I(o.OBCIStreamPacketRawAuxTimeSyncSet)]),samplePacketRawAuxTimeSynced:e=>new Uint8Array([160,A4(e),0,0,1,0,0,2,0,0,3,0,0,4,0,0,5,0,0,6,0,0,7,0,0,8,0,1,0,0,0,1,I(o.OBCIStreamPacketRawAuxTimeSynced)]),samplePacketImpedance:e=>new Uint8Array([160,e,54,52,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,I(o.OBCIStreamPacketImpedance)]),samplePacketUserDefined:()=>new Uint8Array([160,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,I(o.OBCIStreamPacketUserDefinedType)]),samplePacketCytonBLE:e=>new Uint8Array([192,A4(e),0,0,1,0,0,2,0,0,10,0,0,20,0,0,100,0,0,200]),getBiasSetFromADSRegisterQuery:yt,getBooleanFromRegisterQuery:ue2,getChannelDataArray:me2,getChannelDataArrayNoScale:fe,getDataArrayAccel:so,getDataArrayAccelNoScale:lo,getFirmware:tl,getSRB1FromADSRegisterQuery:St,getNumFromThreeCSVADSRegisterQuery:It,isEven:Co,isOdd:el,isStopByte:le2,isTimeSyncSetConfirmationInBuffer:rl,makeDaisySampleObject:Ks,makeDaisySampleObjectWifi:Js,makeTailByteFromPacketType:I,newSyncObject:zs2,setChSetFromADSRegisterQuery:Bt,stripToEOTBuffer:nl,syncChannelSettingsWithRawData:Xs,droppedPacketCheck:(e,t2)=>{if(e===o.OBCISampleNumberMax&&t2===0||t2-e===1)return null;let n=[];if(e>t2){let r=o.OBCISampleNumberMax-e;for(let a=0;a<r;a++)n.push(e+a+1);e=-1}for(let r=1;r<t2-e;r++)n.push(e+r);return n},convert18bitAsInt32:E3,convert19bitAsInt32:v2,decompressDeltas18Bit:ao,decompressDeltas19Bit:oo2,sampleCompressedData:e=>new Uint8Array([e,0,0,0,0,8,0,5,0,0,72,0,9,240,1,176,0,48,0,8]),sampleBLERaw:()=>new Uint8Array([0,0,1,0,0,2,0,0,3,0,0,4]),sampleImpedanceChannel1:()=>new Uint8Array([o.OBCIGanglionByteIdImpedanceChannel1,0,0,1]),sampleImpedanceChannel2:()=>new Uint8Array([o.OBCIGanglionByteIdImpedanceChannel2,0,0,1]),sampleImpedanceChannel3:()=>new Uint8Array([o.OBCIGanglionByteIdImpedanceChannel3,0,0,1]),sampleImpedanceChannel4:()=>new Uint8Array([o.OBCIGanglionByteIdImpedanceChannel4,0,0,1]),sampleImpedanceChannelReference:()=>new Uint8Array([o.OBCIGanglionByteIdImpedanceChannelReference,0,0,1]),sampleMultiBytePacket:e=>{let t2=new Uint8Array([o.OBCIGanglionByteIdMultiPacket]);return Uint8Array.concat([t2,e])},sampleMultiBytePacketStop:e=>{let t2=new Uint8Array([o.OBCIGanglionByteIdMultiPacketStop]);return Uint8Array.concat([t2,e])},sampleOtherData:e=>{let t2=new Uint8Array([255]);return Uint8Array.concat([t2,e])},sampleUncompressedData:()=>new Uint8Array([0,0,0,1,0,0,2,0,0,3,0,0,4,1,2,3,4,5,6,7]),parseGanglion:Gs,processMultiBytePacket:Ot,processMultiBytePacketStop:ro2};function Gs(e){let t2=parseInt(e.rawDataPacket[0]);if(t2<=o.OBCIGanglionByteId19Bit.max)return gt(e);switch(t2){case o.OBCIGanglionByteIdMultiPacket:return Ot(e);case o.OBCIGanglionByteIdMultiPacketStop:return ro2(e);case o.OBCIGanglionByteIdImpedanceChannel1:case o.OBCIGanglionByteIdImpedanceChannel2:case o.OBCIGanglionByteIdImpedanceChannel3:case o.OBCIGanglionByteIdImpedanceChannel4:case o.OBCIGanglionByteIdImpedanceChannelReference:return Ls(e);default:return null}}function Us2(e){e.lastSampleNumber=parseInt(e.rawDataPacket[0]);let t2=[];if(e.lastSampleNumber<=o.OBCIGanglionByteId18Bit.max)switch(Xa2(e,ao(e.rawDataPacket.slice(o.OBCIGanglionPacket18Bit.dataStart,o.OBCIGanglionPacket18Bit.dataStop))),t2.push(ce(e.lastSampleNumber*2-1,e.decompressedSamples[1],e.sendCounts)),t2.push(ce(e.lastSampleNumber*2,e.decompressedSamples[2],e.sendCounts)),e.lastSampleNumber%10){case o.OBCIGanglionAccelAxisX:e.accelArray[0]=e.sendCounts?e.rawDataPacket.readInt8(o.OBCIGanglionPacket18Bit.auxByte-1):e.rawDataPacket.readInt8(o.OBCIGanglionPacket18Bit.auxByte-1)*o.OBCIGanglionAccelScaleFactor;break;case o.OBCIGanglionAccelAxisY:e.accelArray[1]=e.sendCounts?e.rawDataPacket.readInt8(o.OBCIGanglionPacket18Bit.auxByte-1):e.rawDataPacket.readInt8(o.OBCIGanglionPacket18Bit.auxByte-1)*o.OBCIGanglionAccelScaleFactor;break;case o.OBCIGanglionAccelAxisZ:e.accelArray[2]=e.sendCounts?e.rawDataPacket.readInt8(o.OBCIGanglionPacket18Bit.auxByte-1):e.rawDataPacket.readInt8(o.OBCIGanglionPacket18Bit.auxByte-1)*o.OBCIGanglionAccelScaleFactor,e.sendCounts?t2[0].accelData=e.accelArray:t2[0].accelDataCounts=e.accelArray;break;default:break}else Xa2(e,oo2(e.rawDataPacket.slice(o.OBCIGanglionPacket19Bit.dataStart,o.OBCIGanglionPacket19Bit.dataStop))),t2.push(ce((e.lastSampleNumber-100)*2-1,e.decompressedSamples[1],e.sendCounts)),t2.push(ce((e.lastSampleNumber-100)*2,e.decompressedSamples[2],e.sendCounts));for(let n=0;n<o.OBCINumberOfChannelsGanglion;n++)e.decompressedSamples[0][n]=e.decompressedSamples[2][n];return t2}function Ls(e){let t2=parseInt(e.rawDataPacket[0]),n;switch(t2){case o.OBCIGanglionByteIdImpedanceChannel1:n=1;break;case o.OBCIGanglionByteIdImpedanceChannel2:n=2;break;case o.OBCIGanglionByteIdImpedanceChannel3:n=3;break;case o.OBCIGanglionByteIdImpedanceChannel4:n=4;break;case o.OBCIGanglionByteIdImpedanceChannelReference:n=0;break}let r={channelNumber:n,impedanceValue:0},a=e.rawDataPacket.length;for(;Number.isNaN(Number(e.rawDataPacket.slice(1,a)))&&a!==0;)a--;return a!==0&&(r.impedanceValue=Number(e.rawDataPacket.slice(1,a))),r}function Ot(e){e.multiPacketBuffer?e.multiPacketBuffer=Uint8Array.concat([Uint8Array.from(e.multiPacketBuffer),Uint8Array.from(e.rawDataPacket.slice(o.OBCIGanglionPacket19Bit.dataStart,o.OBCIGanglionPacket19Bit.dataStop))]):e.multiPacketBuffer=e.rawDataPacket.slice(o.OBCIGanglionPacket19Bit.dataStart,o.OBCIGanglionPacket19Bit.dataStop)}function ro2(e){Ot(e);let t2=e.multiPacketBuffer.toString();return e.multiPacketBuffer=null,{message:t2}}function Xa2(e,t2){for(let n=1;n<3;n++)for(let r=0;r<4;r++)e.decompressedSamples[n][r]=e.decompressedSamples[n-1][r]-t2[n-1][r]}function ce(e,t2,n){let r;if(n)r=fo(e),r.channelDataCounts=t2;else{r=mo(e);for(let a=0;a<o.OBCINumberOfChannelsGanglion;a++)r.channelData.push(t2[a]*o.OBCIGanglionScaleFactorPerCountVolts)}return r.timestamp=Date.now(),r}function gt(e){return parseInt(e.rawDataPacket[0])===o.OBCIGanglionByteIdUncompressed?Hs(e):Us2(e)}function Hs(e){e.lastSampleNumber=o.OBCIGanglionByteIdUncompressed;for(let t2=0;t2<4;t2++)e.decompressedSamples[0][t2]=g2.interpret24bitAsInt32(e.rawDataPacket.slice(1+t2*3,1+t2*3+3));return[ce(0,e.decompressedSamples[0],e.sendCounts)]}function E3(e){let t2=0;return e[2]&1>0&&(t2=16383),t2<<18|e[0]<<16|e[1]<<8|e[2]}function v2(e){let t2=0;return e[2]&1>0&&(t2=8191),t2<<19|e[0]<<16|e[1]<<8|e[2]}function ao(e){let t2=new Array(o.OBCIGanglionSamplesPerPacket);t2[0]=[0,0,0,0],t2[1]=[0,0,0,0];let n=[];for(let a=0;a<o.OBCIGanglionSamplesPerPacket;a++)n.push([0,0,0,0]);let r;return r=new Uint8Array([e[0]>>6,(e[0]&63)<<2|e[1]>>6,(e[1]&63)<<2|e[2]>>6]),n[0][0]=E3(r),r=new Uint8Array([(e[2]&63)>>4,e[2]<<4|e[3]>>4,e[3]<<4|e[4]>>4]),n[0][1]=E3(r),r=new Uint8Array([(e[4]&15)>>2,e[4]<<6|e[5]>>2,e[5]<<6|e[6]>>2]),n[0][2]=E3(r),r=new Uint8Array([e[6]&3,e[7],e[8]]),n[0][3]=E3(r),r=new Uint8Array([e[9]>>6,(e[9]&63)<<2|e[10]>>6,(e[10]&63)<<2|e[11]>>6]),n[1][0]=E3(r),r=new Uint8Array([(e[11]&63)>>4,e[11]<<4|e[12]>>4,e[12]<<4|e[13]>>4]),n[1][1]=E3(r),r=new Uint8Array([(e[13]&15)>>2,e[13]<<6|e[14]>>2,e[14]<<6|e[15]>>2]),n[1][2]=E3(r),r=new Uint8Array([e[15]&3,e[16],e[17]]),n[1][3]=E3(r),n}function oo2(e){let t2=new Array(o.OBCIGanglionSamplesPerPacket);t2[0]=[0,0,0,0],t2[1]=[0,0,0,0];let n=[];for(let a=0;a<o.OBCIGanglionSamplesPerPacket;a++)n.push([0,0,0,0]);let r;return r=new Uint8Array([e[0]>>5,(e[0]&31)<<3|e[1]>>5,(e[1]&31)<<3|e[2]>>5]),n[0][0]=v2(r),r=new Uint8Array([(e[2]&31)>>2,e[2]<<6|e[3]>>2,e[3]<<6|e[4]>>2]),n[0][1]=v2(r),r=new Uint8Array([(e[4]&3)<<1|e[5]>>7,(e[5]&127)<<1|e[6]>>7,(e[6]&127)<<1|e[7]>>7]),n[0][2]=v2(r),r=new Uint8Array([(e[7]&127)>>4,(e[7]&15)<<4|e[8]>>4,(e[8]&15)<<4|e[9]>>4]),n[0][3]=v2(r),r=new Uint8Array([(e[9]&15)>>1,e[9]<<7|e[10]>>1,e[10]<<7|e[11]>>1]),n[1][0]=v2(r),r=new Uint8Array([(e[11]&1)<<2|e[12]>>6,e[12]<<2|e[13]>>6,e[13]<<2|e[14]>>6]),n[1][1]=v2(r),r=new Uint8Array([(e[14]&56)>>3,(e[14]&7)<<5|(e[15]&248)>>3,(e[15]&7)<<5|(e[16]&248)>>3]),n[1][2]=v2(r),r=new Uint8Array([e[16]&7,e[17],e[18]]),n[1][3]=v2(r),n}function Ka2(e){return{channel:e,P:{raw:-1,text:o.OBCIImpedanceTextInit},N:{raw:-1,text:o.OBCIImpedanceTextInit}}}function zs2(){return{boardTime:0,correctedTransmissionTime:false,error:null,timeSyncSent:0,timeSyncSentConfirmation:0,timeSyncSetPacket:0,timeRoundTrip:0,timeTransmission:0,timeOffset:0,timeOffsetMaster:0,valid:false}}function Vs2(e){let t2=[];for(let n=0;n<e.rawDataPackets.length;n++){e.rawDataPacket=e.rawDataPackets[n];let r=io(e);t2.push(r),r.hasOwnProperty("sampleNumber")?e.lastSampleNumber=r.sampleNumber:r.hasOwnProperty("impedanceValue")||(e.lastSampleNumber=e.rawDataPacket[o.OBCIPacketPositionSampleNumber])}return t2}function io(e){let t2;try{switch(uo(e.rawDataPacket[o.OBCIPacketPositionStopByte])){case o.OBCIStreamPacketStandardAccel:t2=g2.parsePacketStandardAccel(e);break;case o.OBCIStreamPacketStandardRawAux:t2=g2.parsePacketStandardRawAux(e);break;case o.OBCIStreamPacketAccelTimeSyncSet:case o.OBCIStreamPacketAccelTimeSynced:t2=g2.parsePacketTimeSyncedAccel(e);break;case o.OBCIStreamPacketRawAuxTimeSyncSet:case o.OBCIStreamPacketRawAuxTimeSynced:t2=g2.parsePacketTimeSyncedRawAux(e);break;case o.OBCIStreamPacketImpedance:t2=g2.parsePacketImpedance(e);break;default:t2={error:`bad stop byte ${e.rawDataPacket.slice(32,33).toString("hex")}`,valid:false,rawDataPacket:e.rawDataPacket},e.verbose&&console.log(t2.error);break}}catch(n){t2={error:n,valid:false,rawDataPacket:e.rawDataPacket},e.verbose&&console.log(n)}return t2}function Qs(e,t2){for(let n=0;n<o.OBCINumberOfChannelsGanglion;n++)t2.writeInt16BE(e[n]>>8,n*3),t2.writeInt8(e[n]&255,n*3+2)}function Ws(e){if(o.isUndefined(e)||o.isUndefined(e.rawDataPacket)||o.isNull(e.rawDataPacket)||o.isUndefined(e.data)||o.isNull(e.data))throw new Error(o.OBCIErrorUndefinedOrNullInput);if(!e.hasOwnProperty("sampleNumber"))throw new Error(o.OBCIErrorUndefinedOrNullInput);if(e.rawDataPacket.byteLength!==o.OBCIPacketSize)throw new Error(o.OBCIErrorInvalidByteLength);if(e.data.byteLength!==o.OBCIPacketSizeBLERaw)throw new Error(o.OBCIErrorInvalidByteLength);e.data.copy(e.rawDataPacket,o.OBCIPacketPositionChannelDataStart),e.rawDataPacket[o.OBCIPacketPositionSampleNumber]=e.sampleNumber,e.rawDataPacket[o.OBCIPacketPositionStartByte]=o.OBCIByteStart,e.rawDataPacket[o.OBCIPacketPositionStopByte]=o.OBCIStreamPacketStandardRawAux}function qs2(e){if(o.isUndefined(e)||o.isUndefined(e.rawDataPacket)||o.isNull(e.rawDataPacket))throw new Error(o.OBCIErrorUndefinedOrNullInput);if(e.rawDataPacket.byteLength!==o.OBCIPacketSize)throw new Error(o.OBCIErrorInvalidByteLength);if(e.rawDataPacket[0]!==o.OBCIByteStart)throw new Error(o.OBCIErrorInvalidByteStart);let t2={};return(o.isUndefined(e.scale)||o.isNull(e.scale))&&(e.scale=true),e.scale?t2.accelData=so(e.rawDataPacket.slice(o.OBCIPacketPositionStartAux,o.OBCIPacketPositionStopAux+1)):t2.accelDataCounts=lo(e.rawDataPacket.slice(o.OBCIPacketPositionStartAux,o.OBCIPacketPositionStopAux+1)),e.scale?t2.channelData=me2(e):t2.channelDataCounts=fe(e),t2.auxData=Uint8Array.from(e.rawDataPacket.slice(o.OBCIPacketPositionStartAux,o.OBCIPacketPositionStopAux+1)),t2.sampleNumber=e.rawDataPacket[o.OBCIPacketPositionSampleNumber],t2.startByte=e.rawDataPacket[0],t2.stopByte=e.rawDataPacket[o.OBCIPacketPositionStopByte],t2.valid=true,t2.timestamp=Date.now(),t2.boardTime=0,t2}function Ys(e){if(o.isUndefined(e)||o.isUndefined(e.rawDataPacket)||o.isNull(e.rawDataPacket))throw new Error(o.OBCIErrorUndefinedOrNullInput);if(e.rawDataPacket.byteLength!==o.OBCIPacketSize)throw new Error(o.OBCIErrorInvalidByteLength);if(e.rawDataPacket[0]!==o.OBCIByteStart)throw new Error(o.OBCIErrorInvalidByteStart);let t2={};return(o.isUndefined(e.scale)||o.isNull(e.scale))&&(e.scale=true),e.scale?t2.channelData=me2(e):t2.channelDataCounts=fe(e),t2.auxData=Uint8Array.from(e.rawDataPacket.slice(o.OBCIPacketPositionStartAux,o.OBCIPacketPositionStopAux+1)),t2.sampleNumber=e.rawDataPacket[o.OBCIPacketPositionSampleNumber],t2.startByte=e.rawDataPacket[0],t2.stopByte=e.rawDataPacket[o.OBCIPacketPositionStopByte],t2.valid=true,t2.timestamp=Date.now(),t2.boardTime=0,t2}function $s(e){if(o.isUndefined(e)||o.isUndefined(e.rawDataPacket)||o.isNull(e.rawDataPacket))throw new Error(o.OBCIErrorUndefinedOrNullInput);if(e.rawDataPacket.byteLength!==o.OBCIPacketSize)throw new Error(o.OBCIErrorInvalidByteLength);if(e.rawDataPacket[0]!==o.OBCIByteStart)throw new Error(o.OBCIErrorInvalidByteStart);let t2={};return t2.sampleNumber=e.rawDataPacket[o.OBCIPacketPositionSampleNumber],t2.startByte=e.rawDataPacket[0],t2.stopByte=e.rawDataPacket[o.OBCIPacketPositionStopByte],t2.boardTime=xt(e.rawDataPacket),e.hasOwnProperty("timeOffset")?t2.timestamp=t2.boardTime+e.timeOffset:t2.timestamp=Date.now(),t2.auxData=Pt(e.rawDataPacket),(o.isUndefined(e.scale)||o.isNull(e.scale))&&(e.scale=true),e.scale?t2.channelData=me2(e):t2.channelDataCounts=fe(e),co(e)&&(e.scale?t2.accelData=e.accelArray:t2.accelDataCounts=e.accelArray),t2.valid=true,t2}function Zs(e){if(o.isUndefined(e)||o.isUndefined(e.rawDataPacket)||o.isNull(e.rawDataPacket))throw new Error(o.OBCIErrorUndefinedOrNullInput);if(e.rawDataPacket.byteLength!==o.OBCIPacketSize)throw new Error(o.OBCIErrorInvalidByteLength);if(e.rawDataPacket[0]!==o.OBCIByteStart)throw new Error(o.OBCIErrorInvalidByteStart);let t2={};return t2.sampleNumber=e.rawDataPacket[o.OBCIPacketPositionSampleNumber],t2.startByte=e.rawDataPacket[0],t2.stopByte=e.rawDataPacket[o.OBCIPacketPositionStopByte],t2.boardTime=xt(e.rawDataPacket),e.hasOwnProperty("timeOffset")?t2.timestamp=t2.boardTime+e.timeOffset:t2.timestamp=Date.now(),t2.auxData=Pt(e.rawDataPacket),(o.isUndefined(e.scale)||o.isNull(e.scale))&&(e.scale=true),e.scale?t2.channelData=me2(e):t2.channelDataCounts=fe(e),t2.valid=true,t2}function js(e){if(o.isUndefined(e)||o.isUndefined(e.rawDataPacket)||o.isNull(e.rawDataPacket))throw new Error(o.OBCIErrorUndefinedOrNullInput);if(e.rawDataPacket.byteLength!==o.OBCIPacketSize)throw new Error(o.OBCIErrorInvalidByteLength);let t2={};return t2.channelNumber=e.rawDataPacket[1],t2.channelNumber===5&&(t2.channelNumber=0),t2.impedanceValue=Number(e.rawDataPacket.toString().match(/\\d+/)[0]),t2}function ue2(e,t2,n){let r=e.match(t2);if(r){let a=parseInt(e.charAt(r.index+n));if(Number.isNaN(a))throw new Error(o.OBCIErrorInvalidData);return Boolean(a)}else throw new Error(o.OBCIErrorMissingRegisterSetting)}function St(e){return ue2(e,o.OBCIRegisterQueryNameMISC1,21)}function yt(e,t2){return ue2(e,o.OBCIRegisterQueryNameBIASSENSP,20+t2*3)}function It(e,t2,n){let r=e.match(t2);if(r){let a=parseInt(e.charAt(r.index+n)),i=parseInt(e.charAt(r.index+n+3)),c2=parseInt(e.charAt(r.index+n+6));if(!Number.isNaN(a)&&!Number.isNaN(i)&&!Number.isNaN(c2))return a<<2|i<<1|c2;throw new Error(o.OBCIErrorInvalidData)}else throw new Error(o.OBCIErrorMissingRegisterSetting)}function Bt(e,t2){let n=o.OBCIRegisterQueryNameCHnSET[t2.channelNumber];n===void 0&&(n=o.OBCIRegisterQueryNameCHnSET[t2.channelNumber-o.OBCINumberOfChannelsCyton]),t2.powerDown=ue2(e,n,16),t2.gain=o.gainForCommand(It(e,n,19)),t2.inputType=o.inputTypeForCommand(It(e,n,31)),t2.srb2=ue2(e,n,28)}function Xs(e){if(o.isUndefined(e)||o.isUndefined(e.channelSettings)||o.isNull(e.channelSettings)||o.isUndefined(e.data)||o.isNull(e.data))throw new Error(o.OBCIErrorUndefinedOrNullInput);if(!Array.isArray(e.channelSettings))throw new Error(`${o.OBCIErrorInvalidType} channelSettings`);if(e.channelSettings.length===o.OBCINumberOfChannelsCyton){if(e.data.toString().match(/Daisy ADS/))throw new Error("raw data mismatch - expected only cyton register info but also found daisy");if(e.data.toString().match(/Board ADS/)==null)throw new Error(o.OBCIErrorInvalidData)}else{if(e.data.toString().match(/Daisy ADS/)==null)throw new Error("raw data mismatch - expected daisy register info but none found");if(e.data.toString().match(/Board ADS/)==null)throw new Error("no Board ADS info found")}e.channelSettings.forEach(c2=>{if(!c2.hasOwnProperty("channelNumber")||!c2.hasOwnProperty("powerDown")||!c2.hasOwnProperty("gain")||!c2.hasOwnProperty("inputType")||!c2.hasOwnProperty("bias")||!c2.hasOwnProperty("srb2")||!c2.hasOwnProperty("srb1"))throw new Error(o.OBCIErrorMissingRequiredProperty)});let t2=null,n=false,r=false,a=e.data.toString().match(/Board ADS/),i=e.data.toString().slice(a.index,o.OBCIRegisterQueryCyton.length);if(St(i)&&(n=true),e.channelSettings.length>o.OBCINumberOfChannelsCyton){let c2=e.data.toString().match(/Daisy ADS/);t2=e.data.toString().slice(c2.index,c2.index+o.OBCIRegisterQueryCytonDaisy.length),St(i)&&(r=true)}e.channelSettings.forEach(c2=>{c2.channelNumber<o.OBCINumberOfChannelsCyton?(Bt(i,c2),c2.bias=yt(i,c2.channelNumber),c2.srb1=n):(Bt(t2,c2),c2.bias=yt(t2,c2.channelNumber-o.OBCINumberOfChannelsCyton),c2.srb1=r)})}function xt(e){let t2=o.OBCIPacketSize-1;if(e.byteLength!==o.OBCIPacketSize)throw new Error(o.OBCIErrorInvalidByteLength);return e.readUInt32BE(t2-o.OBCIStreamPacketTimeByteSize)}function co(e){let n=o.OBCIPacketSize-1-o.OBCIStreamPacketTimeByteSize-2;if(e.rawDataPacket.byteLength!==o.OBCIPacketSize)throw new Error(o.OBCIErrorInvalidByteLength);let r=e.rawDataPacket[o.OBCIPacketPositionSampleNumber],a=g2.interpret16bitAsInt32(e.rawDataPacket.slice(n,n+2));switch(r%10){case o.OBCIAccelAxisX:return e.accelArray[0]=e.scale?a*$:a,false;case o.OBCIAccelAxisY:return e.accelArray[1]=e.scale?a*$:a,false;case o.OBCIAccelAxisZ:return e.accelArray[2]=e.scale?a*$:a,true;default:return false}}function Pt(e){if(e.byteLength!==o.OBCIPacketSize)throw new Error(o.OBCIErrorInvalidByteLength);return Uint8Array.from(e.slice(o.OBCIPacketPositionTimeSyncAuxStart,o.OBCIPacketPositionTimeSyncAuxStop))}function so(e){let t2=[];for(let n=0;n<no;n++){let r=n*2;t2.push(g2.interpret16bitAsInt32(e.slice(r,r+2))*$)}return t2}function lo(e){let t2=[];for(let n=0;n<no;n++){let r=n*2;t2.push(g2.interpret16bitAsInt32(e.slice(r,r+2)))}return t2}function me2(e){if(!Array.isArray(e.channelSettings))throw new Error("Error [getChannelDataArray]: Channel Settings must be an array!");e.hasOwnProperty("protocol")||(e.protocol=o.OBCIProtocolSerial);let t2=[],n=e.channelSettings.length,r=e.rawDataPacket[o.OBCIPacketPositionSampleNumber],a=n===o.OBCINumberOfChannelsDaisy,i=o.OBCINumberOfChannelsCyton;a||(i=e.channelSettings.length);for(let c2=0;c2<i;c2++){if(!e.channelSettings[c2].hasOwnProperty("gain"))throw new Error(`Error [getChannelDataArray]: Invalid channel settings object at index ${c2}`);if(!o.isNumber(e.channelSettings[c2].gain))throw new Error("Error [getChannelDataArray]: Property gain of channelSettingsObject not or type Number");let s=0;if(e.protocol===o.OBCIProtocolSerial)Co(r)&&a?s=U/e.channelSettings[c2+o.OBCINumberOfChannelsDefault].gain/(Math.pow(2,23)-1):s=U/e.channelSettings[c2].gain/(Math.pow(2,23)-1);else if(e.protocol===o.OBCIProtocolWifi)a?e.lastSampleNumber===r?s=U/e.channelSettings[c2+o.OBCINumberOfChannelsDefault].gain/(Math.pow(2,23)-1):s=U/e.channelSettings[c2].gain/(Math.pow(2,23)-1):e.channelSettings.length===o.OBCINumberOfChannelsCyton?s=U/e.channelSettings[c2].gain/(Math.pow(2,23)-1):s=o.OBCIGanglionScaleFactorPerCountVolts;else if(e.protocol===o.OBCIProtocolBLE)s=U/e.channelSettings[c2].gain/(Math.pow(2,23)-1);else throw new Error("Error [getChannelDataArray]: Invalid protocol must be wifi or serial");t2.push(s*g2.interpret24bitAsInt32(e.rawDataPacket.slice(c2*3+o.OBCIPacketPositionChannelDataStart,c2*3+o.OBCIPacketPositionChannelDataStart+3)))}return t2}function fe(e){if(!Array.isArray(e.channelSettings))throw new Error("Error [getChannelDataArrayNoScale]: Channel Settings must be an array!");let t2=[],n=e.channelSettings.length;n>o.OBCINumberOfChannelsDefault&&(n=o.OBCINumberOfChannelsDefault);for(let r=0;r<n;r++)t2.push(g2.interpret24bitAsInt32(e.rawDataPacket.slice(r*3+o.OBCIPacketPositionChannelDataStart,r*3+o.OBCIPacketPositionChannelDataStart+3)));return t2}function uo(e){return e&15}function A4(e){return e||e===0?e>255&&(e=255):e=69,e}function mo(e){return e||e===0?e>255&&(e=255):e=0,{startByte:o.OBCIByteStart,sampleNumber:e,channelData:[],accelData:[],auxData:null,stopByte:o.OBCIByteStop,boardTime:0,timestamp:0,valid:true}}function fo(e){return e||e===0?e>255&&(e=255):e=0,{startByte:o.OBCIByteStart,sampleNumber:e,channelDataCounts:[],accelDataCounts:[],auxData:null,stopByte:o.OBCIByteStop,boardTime:0,timestamp:0,valid:true}}function se(e){let t2=new Uint8Array(3);t2.fill(0);let n=e/(U/24/(Math.pow(2,23)-1));return n=Math.floor(n),t2[2]=n&255,t2[1]=(n&255<<8)>>8,t2[0]=(n&255<<16)>>16,t2}function Ja2(e){let t2=new Uint8Array(2);t2.fill(0);let n=e/$;return n=Math.floor(n),t2[1]=n&255,t2[0]=(n&255<<8)>>8,t2}function Ks(e,t2){let n={};return e.hasOwnProperty("channelData")&&(n.channelData=e.channelData.concat(t2.channelData)),e.hasOwnProperty("channelDataCounts")&&(n.channelDataCounts=e.channelDataCounts.concat(t2.channelDataCounts)),n.sampleNumber=Math.floor(t2.sampleNumber/2),n.auxData={lower:e.auxData,upper:t2.auxData},n.stopByte=e.stopByte,n.timestamp=(e.timestamp+t2.timestamp)/2,n._timestamps={lower:e.timestamp,upper:t2.timestamp},e.hasOwnProperty("accelData")&&(e.accelData[0]>0||e.accelData[1]>0||e.accelData[2]>0?n.accelData=e.accelData:n.accelData=t2.accelData),e.hasOwnProperty("accelDataCounts")&&(e.accelDataCounts[0]>0||e.accelDataCounts[1]>0||e.accelDataCounts[2]>0?n.accelDataCounts=e.accelDataCounts:n.accelDataCounts=t2.accelDataCounts),n.valid=true,n}function Js(e,t2){let n={};return e.hasOwnProperty("channelData")&&(n.channelData=e.channelData.concat(t2.channelData)),e.hasOwnProperty("channelDataCounts")&&(n.channelDataCounts=e.channelDataCounts.concat(t2.channelDataCounts)),n.sampleNumber=t2.sampleNumber,n.auxData={lower:e.auxData,upper:t2.auxData},e.hasOwnProperty("timestamp")&&(n.timestamp=e.timestamp),n.stopByte=e.stopByte,n._timestamps={lower:e.timestamp,upper:t2.timestamp},e.hasOwnProperty("accelData")&&(e.accelData[0]>0||e.accelData[1]>0||e.accelData[2]>0?n.accelData=e.accelData:n.accelData=t2.accelData),e.hasOwnProperty("accelDataCounts")&&(e.accelDataCounts[0]>0||e.accelDataCounts[1]>0||e.accelDataCounts[2]>0?n.accelDataCounts=e.accelDataCounts:n.accelDataCounts=t2.accelDataCounts),n.valid=true,n}function Co(e){return e%2===0}function el(e){return e%2===1}function tl(e){let t2=/v\\d.\\d*.\\d*/,n=e.toString().match(t2);if(n){let r=n[0].split(".");return{major:Number(r[0][1]),minor:Number(r[1]),patch:Number(r[2]),raw:n[0]}}else return n}function nl(e){let t2=e.indexOf(o.OBCIParseEOT);if(t2>=0)t2+=o.OBCIParseEOT.length;else return e;return t2<e.byteLength?Uint8Array.from(e.slice(t2)):null}function rl(e){if(e){let t2=e.length;switch(t2){case 0:return false;case 1:return e[0]===o.OBCISyncTimeSent.charCodeAt(0);case 2:return e[1]===o.OBCIByteStart?e[0]===o.OBCISyncTimeSent.charCodeAt(0):le2(e[0])?e[1]===o.OBCISyncTimeSent.charCodeAt(0):false;default:if(e[0]===o.OBCISyncTimeSent.charCodeAt(0)&&e[1]===o.OBCIByteStart)return true;for(let n=1;n<t2;n++)if(n===t2-1){if(le2(e[n-1]))return e[n]===o.OBCISyncTimeSent.charCodeAt(0)}else if(le2(e[n-1])&&e[n+1]===o.OBCIByteStart)return e[n]===o.OBCISyncTimeSent.charCodeAt(0);return false}}}function eo(e,t2,n){let r=new Uint8Array(o.OBCIPacketSize);r.fill(0),r[0]=o.OBCIByteStart,r[1]=e.sampleNumber;for(let a=0;a<o.OBCINumberOfChannelsDefault;a++)se(e.channelData[a]).copy(r,2+a*3);return n.copy(r,26),r.writeInt32BE(t2,28),r[o.OBCIPacketSize-1]=I(o.OBCIStreamPacketRawAuxTimeSynced),r}function to(e,t2){let n=new Uint8Array(o.OBCIPacketSize);n.fill(0),n[0]=o.OBCIByteStart,n[1]=e.sampleNumber;for(let r=0;r<o.OBCINumberOfChannelsDefault;r++)se(e.channelData[r]).copy(n,2+r*3);return n.writeInt32BE(t2,28),n[o.OBCIPacketSize-1]=I(o.OBCIStreamPacketAccelTimeSynced),n}function I(e){return(e<0||e>15)&&(e=0),o.OBCIByteStop|e}function le2(e){return(e&240)===o.OBCIByteStop}var po2=n=>{var r=n,{channelData:e}=r,t2=kt(r,["channelData"]);return j2(Z({},t2),{data:e})};var ho="ganglion";var bo={reader:"2d30c082-f39f-4ce6-923f-3484ea480596",writer:"2d30c083-f39f-4ce6-923f-3484ea480596",connection:"2d30c084-f39f-4ce6-923f-3484ea480596"};var So="characteristicvaluechanged";var yo="gattserverdisconnected";var Io={filters:[{namePrefix:"Ganglion-"}],optionalServices:[65156]};var Bo={start:"b",accelData:"n"};function ol(e){let t2=parseInt(e.rawDataPacket[0]);if(t2<=o.OBCIGanglionByteId19Bit.max)return gt(e);switch(t2){case o.OBCIGanglionByteIdMultiPacket:return processMultiBytePacket(e);case o.OBCIGanglionByteIdMultiPacketStop:return processMultiBytePacketStop(e);case o.OBCIGanglionByteIdImpedanceChannel1:case o.OBCIGanglionByteIdImpedanceChannel2:case o.OBCIGanglionByteIdImpedanceChannel3:case o.OBCIGanglionByteIdImpedanceChannel4:case o.OBCIGanglionByteIdImpedanceChannelReference:return processImpedanceData(e);default:return null}}var Ae=class{constructor(t2={}){this.options=t2,this.gatt=null,this.device=null,this.deviceName=null,this.service=null,this.characteristics=null,this.onDisconnect$=new M2,this.boardName=ho,this.channelSize=4;function n(i){return{channelNumber:i,powerDown:false,gain:24,inputType:"normal",bias:true,srb2:true,srb1:false}}let r=i=>{for(var c2=[],s=0;s<i;s++)c2.push(n(s));return c2};function a(i){let c2=[];for(let s=0;s<3;s++)c2.push(new Array(i));return c2}this.rawDataPacketToSample={accelArray:[0,0,0],channelSettings:r(4),decompressedSamples:a(4),lastSampleNumber:0,rawDataPacket:new Uint8Array(33).buffer,rawDataPackets:[],scale:true,sendCounts:false,timeOffset:0,verbose:false},this.connectionStatus=new Me(false),this.stream=new M2().pipe(k(i=>this.eventToBufferMapper(i)),Le(i=>this.setRawDataPacket(i)),k(()=>ol(this.rawDataPacketToSample)),Y3(i=>i),k(po2),Ue(this.onDisconnect$)),this.accelData=this.stream.pipe(ne(i=>i.accelData.length))}eventToBufferMapper(t2){return new Uint8Array(t2.target.value.buffer)}setRawDataPacket(t2){this.rawDataPacketToSample.rawDataPacket=t2}connect(){return X(this,null,function*(){this.device=yield navigator.bluetooth.requestDevice(Io),this.addDisconnectedEvent(),this.gatt=yield this.device.gatt.connect(),this.deviceName=this.gatt.device.name,this.service=yield this.gatt.getPrimaryService(65156),this.setCharacteristics(yield this.service.getCharacteristics()),this.connectionStatus.next(true)})}setCharacteristics(t2){this.characteristics=Object.entries(bo).reduce((n,[r,a])=>j2(Z({},n),{[r]:t2.find(i=>i.uuid===a)}),{})}start(){return X(this,null,function*(){let{reader:t2,writer:n}=this.characteristics,r=Object.entries(Bo).reduce((a,[i,c2])=>j2(Z({},a),{[i]:new TextEncoder().encode(c2)}),{});t2.startNotifications(),t2.addEventListener(So,a=>{this.stream.next(a)}),this.options.accelData&&(yield n.writeValue(r.accelData),t2.readValue()),yield n.writeValue(r.start),t2.readValue()})}addDisconnectedEvent(){te2(this.device,yo).pipe(Ge()).subscribe(()=>{this.gatt=null,this.device=null,this.deviceName=null,this.service=null,this.characteristics=null,this.connectionStatus.next(false)})}disconnect(){!this.gatt||(this.onDisconnect$.next(),this.gatt.disconnect())}};var sps10=250;var ganglionSettings={sps:sps10,connect:(settings={})=>{return new Promise(async(res,rej)=>{let _id=`ganglion${Math.floor(Math.random()*1e15)}`;let client=new Ae;let info={_id,client,settings:Object.assign(Object.assign({},ganglionSettings),settings)};await client.connect();await client.start();client.stream.subscribe(reading=>{reading.origin="eeg";info.settings.ondata(reading)});client.accelData.subscribe(reading=>{reading.origin="accelerometer";info.settings.ondata(reading)});if(info.settings.onconnect)info.settings.onconnect(info);res(info)})},codec:reading=>{let origin=reading.origin;if(origin==="eeg"){return{0:reading.data[0],1:reading.data[1],2:reading.data[2],3:reading.data[3],timestamp:Date.now()}}else if(origin==="accelerometer"){return{ax:reading.data[0],ay:reading.data[1],az:reading.data[2],timestamp:Date.now()}}},disconnect:info=>{info.client.disconnect();info.settings.ondisconnect(info)},onconnect:info=>{console.log("ganglion connected!",info)},ondisconnect:info=>{console.log("ganglion disconnected!",info)},ondata:data=>{console.log(data)}};var defaultsetting6={sps:sps10,useDCBlock:true,useBandpass:true,bandpassLower:3,bandpassUpper:45};var ganglionFilterSettings2={"0":JSON.parse(JSON.stringify(defaultsetting6)),"1":JSON.parse(JSON.stringify(defaultsetting6)),"2":JSON.parse(JSON.stringify(defaultsetting6)),"3":JSON.parse(JSON.stringify(defaultsetting6))};var defaultChartSetting7={nSec:10,sps:sps10,units:"mV"};var ganglionChartSettings2={lines:{"0":JSON.parse(JSON.stringify(defaultChartSetting7)),"1":JSON.parse(JSON.stringify(defaultChartSetting7)),"2":JSON.parse(JSON.stringify(defaultChartSetting7)),"3":JSON.parse(JSON.stringify(defaultChartSetting7)),"ax":{nSec:10,sps:sps10,units:"mg"},"ay":{nSec:10,sps:sps10,units:"mg"},"az":{nSec:10,sps:sps10,units:"mg"}},generateNewLines:true};var Devices3rdParty={BLE_OTHER:{muse:museSettings,ganglion:ganglionSettings}};var Devices2={};Object.assign(Devices2,Devices);Object.assign(Devices2,Devices3rdParty);var __create3=Object.create;var __defProp3=Object.defineProperty;var __getOwnPropDesc3=Object.getOwnPropertyDescriptor;var __getOwnPropNames3=Object.getOwnPropertyNames;var __getProtoOf3=Object.getPrototypeOf;var __hasOwnProp3=Object.prototype.hasOwnProperty;var __commonJS3=(cb,mod)=>function __require4(){return mod||(0,cb[__getOwnPropNames3(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports};var __copyProps3=(to2,from,except,desc)=>{if(from&&typeof from==="object"||typeof from==="function"){for(let key of __getOwnPropNames3(from))if(!__hasOwnProp3.call(to2,key)&&key!==except)__defProp3(to2,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc3(from,key))||desc.enumerable})}return to2};var __toESM3=(mod,isNodeMode,target)=>(target=mod!=null?__create3(__getProtoOf3(mod)):{},__copyProps3(isNodeMode||!mod||!mod.__esModule?__defProp3(target,"default",{value:mod,enumerable:true}):target,mod));var require_browserfs=__commonJS3({"node_modules/browserfs/dist/browserfs.js"(exports,module2){(function webpackUniversalModuleDefinition(root,factory){if(typeof exports==="object"&&typeof module2==="object")module2.exports=factory();else if(typeof define==="function"&&define.amd)define([],factory);else if(typeof exports==="object")exports["BrowserFS"]=factory();else root["BrowserFS"]=factory()})(exports,function(){return function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module22=installedModules[moduleId]={exports:{},id:moduleId,loaded:false};modules[moduleId].call(module22.exports,module22,module22.exports,__webpack_require__);module22.loaded=true;return module22.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.p="";return __webpack_require__(0)}([function(module22,exports2,__webpack_require__){(function(Buffer2,global2,module3,process2){"use strict";Object.defineProperty(exports2,"__esModule",{value:true});var buffer=__webpack_require__(2);var path=__webpack_require__(9);var ErrorCode;(function(ErrorCode2){ErrorCode2[ErrorCode2["EPERM"]=1]="EPERM";ErrorCode2[ErrorCode2["ENOENT"]=2]="ENOENT";ErrorCode2[ErrorCode2["EIO"]=5]="EIO";ErrorCode2[ErrorCode2["EBADF"]=9]="EBADF";ErrorCode2[ErrorCode2["EACCES"]=13]="EACCES";ErrorCode2[ErrorCode2["EBUSY"]=16]="EBUSY";ErrorCode2[ErrorCode2["EEXIST"]=17]="EEXIST";ErrorCode2[ErrorCode2["ENOTDIR"]=20]="ENOTDIR";ErrorCode2[ErrorCode2["EISDIR"]=21]="EISDIR";ErrorCode2[ErrorCode2["EINVAL"]=22]="EINVAL";ErrorCode2[ErrorCode2["EFBIG"]=27]="EFBIG";ErrorCode2[ErrorCode2["ENOSPC"]=28]="ENOSPC";ErrorCode2[ErrorCode2["EROFS"]=30]="EROFS";ErrorCode2[ErrorCode2["ENOTEMPTY"]=39]="ENOTEMPTY";ErrorCode2[ErrorCode2["ENOTSUP"]=95]="ENOTSUP"})(ErrorCode||(ErrorCode={}));var ErrorStrings={};ErrorStrings[ErrorCode.EPERM]="Operation not permitted.";ErrorStrings[ErrorCode.ENOENT]="No such file or directory.";ErrorStrings[ErrorCode.EIO]="Input/output error.";ErrorStrings[ErrorCode.EBADF]="Bad file descriptor.";ErrorStrings[ErrorCode.EACCES]="Permission denied.";ErrorStrings[ErrorCode.EBUSY]="Resource busy or locked.";ErrorStrings[ErrorCode.EEXIST]="File exists.";ErrorStrings[ErrorCode.ENOTDIR]="File is not a directory.";ErrorStrings[ErrorCode.EISDIR]="File is a directory.";ErrorStrings[ErrorCode.EINVAL]="Invalid argument.";ErrorStrings[ErrorCode.EFBIG]="File is too big.";ErrorStrings[ErrorCode.ENOSPC]="No space left on disk.";ErrorStrings[ErrorCode.EROFS]="Cannot modify a read-only file system.";ErrorStrings[ErrorCode.ENOTEMPTY]="Directory is not empty.";ErrorStrings[ErrorCode.ENOTSUP]="Operation is not supported.";var ApiError=function(Error2){function ApiError2(type,message,path$$1){if(message===void 0)message=ErrorStrings[type];Error2.call(this,message);this.syscall="";this.errno=type;this.code=ErrorCode[type];this.path=path$$1;this.stack=new Error2().stack;this.message="Error: "+this.code+": "+message+(this.path?", \'"+this.path+"\'":"")}if(Error2)ApiError2.__proto__=Error2;ApiError2.prototype=Object.create(Error2&&Error2.prototype);ApiError2.prototype.constructor=ApiError2;ApiError2.fromJSON=function fromJSON(json){var err=new ApiError2(0);err.errno=json.errno;err.code=json.code;err.path=json.path;err.stack=json.stack;err.message=json.message;return err};ApiError2.fromBuffer=function fromBuffer(buffer$$1,i2){if(i2===void 0)i2=0;return ApiError2.fromJSON(JSON.parse(buffer$$1.toString("utf8",i2+4,i2+4+buffer$$1.readUInt32LE(i2))))};ApiError2.FileError=function FileError(code,p){return new ApiError2(code,ErrorStrings[code],p)};ApiError2.ENOENT=function ENOENT(path$$1){return this.FileError(ErrorCode.ENOENT,path$$1)};ApiError2.EEXIST=function EEXIST(path$$1){return this.FileError(ErrorCode.EEXIST,path$$1)};ApiError2.EISDIR=function EISDIR(path$$1){return this.FileError(ErrorCode.EISDIR,path$$1)};ApiError2.ENOTDIR=function ENOTDIR(path$$1){return this.FileError(ErrorCode.ENOTDIR,path$$1)};ApiError2.EPERM=function EPERM(path$$1){return this.FileError(ErrorCode.EPERM,path$$1)};ApiError2.ENOTEMPTY=function ENOTEMPTY(path$$1){return this.FileError(ErrorCode.ENOTEMPTY,path$$1)};ApiError2.prototype.toString=function toString(){return this.message};ApiError2.prototype.toJSON=function toJSON(){return{errno:this.errno,code:this.code,path:this.path,stack:this.stack,message:this.message}};ApiError2.prototype.writeToBuffer=function writeToBuffer(buffer$$1,i2){if(buffer$$1===void 0)buffer$$1=Buffer2.alloc(this.bufferSize());if(i2===void 0)i2=0;var bytesWritten=buffer$$1.write(JSON.stringify(this.toJSON()),i2+4);buffer$$1.writeUInt32LE(bytesWritten,i2);return buffer$$1};ApiError2.prototype.bufferSize=function bufferSize(){return 4+Buffer2.byteLength(JSON.stringify(this.toJSON()))};return ApiError2}(Error);var api_error=Object.freeze({get ErrorCode(){return ErrorCode},ErrorStrings,ApiError});var ActionType;(function(ActionType2){ActionType2[ActionType2["NOP"]=0]="NOP";ActionType2[ActionType2["THROW_EXCEPTION"]=1]="THROW_EXCEPTION";ActionType2[ActionType2["TRUNCATE_FILE"]=2]="TRUNCATE_FILE";ActionType2[ActionType2["CREATE_FILE"]=3]="CREATE_FILE"})(ActionType||(ActionType={}));var FileFlag=function FileFlag2(flagStr){this.flagStr=flagStr;if(FileFlag2.validFlagStrs.indexOf(flagStr)<0){throw new ApiError(ErrorCode.EINVAL,"Invalid flag: "+flagStr)}};FileFlag.getFileFlag=function getFileFlag(flagStr){if(FileFlag.flagCache.hasOwnProperty(flagStr)){return FileFlag.flagCache[flagStr]}return FileFlag.flagCache[flagStr]=new FileFlag(flagStr)};FileFlag.prototype.getFlagString=function getFlagString(){return this.flagStr};FileFlag.prototype.isReadable=function isReadable(){return this.flagStr.indexOf("r")!==-1||this.flagStr.indexOf("+")!==-1};FileFlag.prototype.isWriteable=function isWriteable(){return this.flagStr.indexOf("w")!==-1||this.flagStr.indexOf("a")!==-1||this.flagStr.indexOf("+")!==-1};FileFlag.prototype.isTruncating=function isTruncating(){return this.flagStr.indexOf("w")!==-1};FileFlag.prototype.isAppendable=function isAppendable(){return this.flagStr.indexOf("a")!==-1};FileFlag.prototype.isSynchronous=function isSynchronous(){return this.flagStr.indexOf("s")!==-1};FileFlag.prototype.isExclusive=function isExclusive(){return this.flagStr.indexOf("x")!==-1};FileFlag.prototype.pathExistsAction=function pathExistsAction(){if(this.isExclusive()){return ActionType.THROW_EXCEPTION}else if(this.isTruncating()){return ActionType.TRUNCATE_FILE}else{return ActionType.NOP}};FileFlag.prototype.pathNotExistsAction=function pathNotExistsAction(){if((this.isWriteable()||this.isAppendable())&&this.flagStr!=="r+"){return ActionType.CREATE_FILE}else{return ActionType.THROW_EXCEPTION}};FileFlag.flagCache={};FileFlag.validFlagStrs=["r","r+","rs","rs+","w","wx","w+","wx+","a","ax","a+","ax+"];var FileType;(function(FileType2){FileType2[FileType2["FILE"]=32768]="FILE";FileType2[FileType2["DIRECTORY"]=16384]="DIRECTORY";FileType2[FileType2["SYMLINK"]=40960]="SYMLINK"})(FileType||(FileType={}));var Stats=function Stats2(itemType,size,mode,atime,mtime,ctime){if(atime===void 0)atime=new Date;if(mtime===void 0)mtime=new Date;if(ctime===void 0)ctime=new Date;this.size=size;this.atime=atime;this.mtime=mtime;this.ctime=ctime;this.dev=0;this.ino=0;this.rdev=0;this.nlink=1;this.blksize=4096;this.uid=0;this.gid=0;this.birthtime=new Date(0);this.fileData=null;if(!mode){switch(itemType){case FileType.FILE:this.mode=420;break;case FileType.DIRECTORY:default:this.mode=511}}else{this.mode=mode}this.blocks=Math.ceil(size/512);if(this.mode<4096){this.mode|=itemType}};Stats.fromBuffer=function fromBuffer(buffer$$1){var size=buffer$$1.readUInt32LE(0),mode=buffer$$1.readUInt32LE(4),atime=buffer$$1.readDoubleLE(8),mtime=buffer$$1.readDoubleLE(16),ctime=buffer$$1.readDoubleLE(24);return new Stats(mode&61440,size,mode&4095,new Date(atime),new Date(mtime),new Date(ctime))};Stats.prototype.toBuffer=function toBuffer(){var buffer$$1=Buffer2.alloc(32);buffer$$1.writeUInt32LE(this.size,0);buffer$$1.writeUInt32LE(this.mode,4);buffer$$1.writeDoubleLE(this.atime.getTime(),8);buffer$$1.writeDoubleLE(this.mtime.getTime(),16);buffer$$1.writeDoubleLE(this.ctime.getTime(),24);return buffer$$1};Stats.prototype.clone=function clone(){return new Stats(this.mode&61440,this.size,this.mode&4095,this.atime,this.mtime,this.ctime)};Stats.prototype.isFile=function isFile(){return(this.mode&61440)===FileType.FILE};Stats.prototype.isDirectory=function isDirectory(){return(this.mode&61440)===FileType.DIRECTORY};Stats.prototype.isSymbolicLink=function isSymbolicLink(){return(this.mode&61440)===FileType.SYMLINK};Stats.prototype.chmod=function chmod(mode){this.mode=this.mode&61440|mode};Stats.prototype.isSocket=function isSocket(){return false};Stats.prototype.isBlockDevice=function isBlockDevice(){return false};Stats.prototype.isCharacterDevice=function isCharacterDevice(){return false};Stats.prototype.isFIFO=function isFIFO(){return false};var wrapCb=function(cb,numArgs){return cb};function assertRoot(fs4){if(fs4){return fs4}throw new ApiError(ErrorCode.EIO,"Initialize BrowserFS with a file system using BrowserFS.initialize(filesystem)")}function normalizeMode(mode,def){switch(typeof mode){case"number":return mode;case"string":var trueMode=parseInt(mode,8);if(!isNaN(trueMode)){return trueMode}return def;default:return def}}function normalizeTime(time){if(time instanceof Date){return time}else if(typeof time==="number"){return new Date(time*1e3)}else{throw new ApiError(ErrorCode.EINVAL,"Invalid time.")}}function normalizePath(p){if(p.indexOf("\\0")>=0){throw new ApiError(ErrorCode.EINVAL,"Path must be a string without null bytes.")}else if(p===""){throw new ApiError(ErrorCode.EINVAL,"Path must not be empty.")}return path.resolve(p)}function normalizeOptions(options,defEnc,defFlag,defMode){switch(typeof options){case"object":return{encoding:typeof options["encoding"]!=="undefined"?options["encoding"]:defEnc,flag:typeof options["flag"]!=="undefined"?options["flag"]:defFlag,mode:normalizeMode(options["mode"],defMode)};case"string":return{encoding:options,flag:defFlag,mode:defMode};default:return{encoding:defEnc,flag:defFlag,mode:defMode}}}function nopCb(){}var FS=function FS2(){this.F_OK=0;this.R_OK=4;this.W_OK=2;this.X_OK=1;this.root=null;this.fdMap={};this.nextFd=100};FS.prototype.initialize=function initialize3(rootFS){if(!rootFS.constructor.isAvailable()){throw new ApiError(ErrorCode.EINVAL,"Tried to instantiate BrowserFS with an unavailable file system.")}return this.root=rootFS};FS.prototype._toUnixTimestamp=function _toUnixTimestamp(time){if(typeof time==="number"){return time}else if(time instanceof Date){return time.getTime()/1e3}throw new Error("Cannot parse time: "+time)};FS.prototype.getRootFS=function getRootFS(){if(this.root){return this.root}else{return null}};FS.prototype.rename=function rename(oldPath,newPath,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{assertRoot(this.root).rename(normalizePath(oldPath),normalizePath(newPath),newCb)}catch(e){newCb(e)}};FS.prototype.renameSync=function renameSync(oldPath,newPath){assertRoot(this.root).renameSync(normalizePath(oldPath),normalizePath(newPath))};FS.prototype.exists=function exists2(path$$1,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{return assertRoot(this.root).exists(normalizePath(path$$1),newCb)}catch(e){return newCb(false)}};FS.prototype.existsSync=function existsSync(path$$1){try{return assertRoot(this.root).existsSync(normalizePath(path$$1))}catch(e){return false}};FS.prototype.stat=function stat(path$$1,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,2);try{return assertRoot(this.root).stat(normalizePath(path$$1),false,newCb)}catch(e){return newCb(e)}};FS.prototype.statSync=function statSync(path$$1){return assertRoot(this.root).statSync(normalizePath(path$$1),false)};FS.prototype.lstat=function lstat(path$$1,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,2);try{return assertRoot(this.root).stat(normalizePath(path$$1),true,newCb)}catch(e){return newCb(e)}};FS.prototype.lstatSync=function lstatSync(path$$1){return assertRoot(this.root).statSync(normalizePath(path$$1),true)};FS.prototype.truncate=function truncate(path$$1,arg2,cb){if(arg2===void 0)arg2=0;if(cb===void 0)cb=nopCb;var len=0;if(typeof arg2==="function"){cb=arg2}else if(typeof arg2==="number"){len=arg2}var newCb=wrapCb(cb,1);try{if(len<0){throw new ApiError(ErrorCode.EINVAL)}return assertRoot(this.root).truncate(normalizePath(path$$1),len,newCb)}catch(e){return newCb(e)}};FS.prototype.truncateSync=function truncateSync(path$$1,len){if(len===void 0)len=0;if(len<0){throw new ApiError(ErrorCode.EINVAL)}return assertRoot(this.root).truncateSync(normalizePath(path$$1),len)};FS.prototype.unlink=function unlink(path$$1,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{return assertRoot(this.root).unlink(normalizePath(path$$1),newCb)}catch(e){return newCb(e)}};FS.prototype.unlinkSync=function unlinkSync(path$$1){return assertRoot(this.root).unlinkSync(normalizePath(path$$1))};FS.prototype.open=function open(path$$1,flag,arg2,cb){var this$1=this;if(cb===void 0)cb=nopCb;var mode=normalizeMode(arg2,420);cb=typeof arg2==="function"?arg2:cb;var newCb=wrapCb(cb,2);try{assertRoot(this.root).open(normalizePath(path$$1),FileFlag.getFileFlag(flag),mode,function(e,file){if(file){newCb(e,this$1.getFdForFile(file))}else{newCb(e)}})}catch(e){newCb(e)}};FS.prototype.openSync=function openSync(path$$1,flag,mode){if(mode===void 0)mode=420;return this.getFdForFile(assertRoot(this.root).openSync(normalizePath(path$$1),FileFlag.getFileFlag(flag),normalizeMode(mode,420)))};FS.prototype.readFile=function readFile2(filename,arg2,cb){if(arg2===void 0)arg2={};if(cb===void 0)cb=nopCb;var options=normalizeOptions(arg2,null,"r",null);cb=typeof arg2==="function"?arg2:cb;var newCb=wrapCb(cb,2);try{var flag=FileFlag.getFileFlag(options["flag"]);if(!flag.isReadable()){return newCb(new ApiError(ErrorCode.EINVAL,"Flag passed to readFile must allow for reading."))}return assertRoot(this.root).readFile(normalizePath(filename),options.encoding,flag,newCb)}catch(e){return newCb(e)}};FS.prototype.readFileSync=function readFileSync(filename,arg2){if(arg2===void 0)arg2={};var options=normalizeOptions(arg2,null,"r",null);var flag=FileFlag.getFileFlag(options.flag);if(!flag.isReadable()){throw new ApiError(ErrorCode.EINVAL,"Flag passed to readFile must allow for reading.")}return assertRoot(this.root).readFileSync(normalizePath(filename),options.encoding,flag)};FS.prototype.writeFile=function writeFile2(filename,data,arg3,cb){if(arg3===void 0)arg3={};if(cb===void 0)cb=nopCb;var options=normalizeOptions(arg3,"utf8","w",420);cb=typeof arg3==="function"?arg3:cb;var newCb=wrapCb(cb,1);try{var flag=FileFlag.getFileFlag(options.flag);if(!flag.isWriteable()){return newCb(new ApiError(ErrorCode.EINVAL,"Flag passed to writeFile must allow for writing."))}return assertRoot(this.root).writeFile(normalizePath(filename),data,options.encoding,flag,options.mode,newCb)}catch(e){return newCb(e)}};FS.prototype.writeFileSync=function writeFileSync(filename,data,arg3){var options=normalizeOptions(arg3,"utf8","w",420);var flag=FileFlag.getFileFlag(options.flag);if(!flag.isWriteable()){throw new ApiError(ErrorCode.EINVAL,"Flag passed to writeFile must allow for writing.")}return assertRoot(this.root).writeFileSync(normalizePath(filename),data,options.encoding,flag,options.mode)};FS.prototype.appendFile=function appendFile3(filename,data,arg3,cb){if(cb===void 0)cb=nopCb;var options=normalizeOptions(arg3,"utf8","a",420);cb=typeof arg3==="function"?arg3:cb;var newCb=wrapCb(cb,1);try{var flag=FileFlag.getFileFlag(options.flag);if(!flag.isAppendable()){return newCb(new ApiError(ErrorCode.EINVAL,"Flag passed to appendFile must allow for appending."))}assertRoot(this.root).appendFile(normalizePath(filename),data,options.encoding,flag,options.mode,newCb)}catch(e){newCb(e)}};FS.prototype.appendFileSync=function appendFileSync(filename,data,arg3){var options=normalizeOptions(arg3,"utf8","a",420);var flag=FileFlag.getFileFlag(options.flag);if(!flag.isAppendable()){throw new ApiError(ErrorCode.EINVAL,"Flag passed to appendFile must allow for appending.")}return assertRoot(this.root).appendFileSync(normalizePath(filename),data,options.encoding,flag,options.mode)};FS.prototype.fstat=function fstat(fd,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,2);try{var file=this.fd2file(fd);file.stat(newCb)}catch(e){newCb(e)}};FS.prototype.fstatSync=function fstatSync(fd){return this.fd2file(fd).statSync()};FS.prototype.close=function close(fd,cb){var this$1=this;if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{this.fd2file(fd).close(function(e){if(!e){this$1.closeFd(fd)}newCb(e)})}catch(e){newCb(e)}};FS.prototype.closeSync=function closeSync(fd){this.fd2file(fd).closeSync();this.closeFd(fd)};FS.prototype.ftruncate=function ftruncate(fd,arg2,cb){if(cb===void 0)cb=nopCb;var length=typeof arg2==="number"?arg2:0;cb=typeof arg2==="function"?arg2:cb;var newCb=wrapCb(cb,1);try{var file=this.fd2file(fd);if(length<0){throw new ApiError(ErrorCode.EINVAL)}file.truncate(length,newCb)}catch(e){newCb(e)}};FS.prototype.ftruncateSync=function ftruncateSync(fd,len){if(len===void 0)len=0;var file=this.fd2file(fd);if(len<0){throw new ApiError(ErrorCode.EINVAL)}file.truncateSync(len)};FS.prototype.fsync=function fsync(fd,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{this.fd2file(fd).sync(newCb)}catch(e){newCb(e)}};FS.prototype.fsyncSync=function fsyncSync(fd){this.fd2file(fd).syncSync()};FS.prototype.fdatasync=function fdatasync(fd,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{this.fd2file(fd).datasync(newCb)}catch(e){newCb(e)}};FS.prototype.fdatasyncSync=function fdatasyncSync(fd){this.fd2file(fd).datasyncSync()};FS.prototype.write=function write(fd,arg2,arg3,arg4,arg5,cb){if(cb===void 0)cb=nopCb;var buffer$$1,offset,length,position=null;if(typeof arg2==="string"){var encoding="utf8";switch(typeof arg3){case"function":cb=arg3;break;case"number":position=arg3;encoding=typeof arg4==="string"?arg4:"utf8";cb=typeof arg5==="function"?arg5:cb;break;default:cb=typeof arg4==="function"?arg4:typeof arg5==="function"?arg5:cb;return cb(new ApiError(ErrorCode.EINVAL,"Invalid arguments."))}buffer$$1=Buffer2.from(arg2,encoding);offset=0;length=buffer$$1.length}else{buffer$$1=arg2;offset=arg3;length=arg4;position=typeof arg5==="number"?arg5:null;cb=typeof arg5==="function"?arg5:cb}var newCb=wrapCb(cb,3);try{var file=this.fd2file(fd);if(position===void 0||position===null){position=file.getPos()}file.write(buffer$$1,offset,length,position,newCb)}catch(e){newCb(e)}};FS.prototype.writeSync=function writeSync(fd,arg2,arg3,arg4,arg5){var buffer$$1,offset=0,length,position;if(typeof arg2==="string"){position=typeof arg3==="number"?arg3:null;var encoding=typeof arg4==="string"?arg4:"utf8";offset=0;buffer$$1=Buffer2.from(arg2,encoding);length=buffer$$1.length}else{buffer$$1=arg2;offset=arg3;length=arg4;position=typeof arg5==="number"?arg5:null}var file=this.fd2file(fd);if(position===void 0||position===null){position=file.getPos()}return file.writeSync(buffer$$1,offset,length,position)};FS.prototype.read=function read(fd,arg2,arg3,arg4,arg5,cb){if(cb===void 0)cb=nopCb;var position,offset,length,buffer$$1,newCb;if(typeof arg2==="number"){length=arg2;position=arg3;var encoding=arg4;cb=typeof arg5==="function"?arg5:cb;offset=0;buffer$$1=Buffer2.alloc(length);newCb=wrapCb(function(err,bytesRead,buf){if(err){return cb(err)}cb(err,buf.toString(encoding),bytesRead)},3)}else{buffer$$1=arg2;offset=arg3;length=arg4;position=arg5;newCb=wrapCb(cb,3)}try{var file=this.fd2file(fd);if(position===void 0||position===null){position=file.getPos()}file.read(buffer$$1,offset,length,position,newCb)}catch(e){newCb(e)}};FS.prototype.readSync=function readSync(fd,arg2,arg3,arg4,arg5){var shenanigans=false;var buffer$$1,offset,length,position,encoding="utf8";if(typeof arg2==="number"){length=arg2;position=arg3;encoding=arg4;offset=0;buffer$$1=Buffer2.alloc(length);shenanigans=true}else{buffer$$1=arg2;offset=arg3;length=arg4;position=arg5}var file=this.fd2file(fd);if(position===void 0||position===null){position=file.getPos()}var rv=file.readSync(buffer$$1,offset,length,position);if(!shenanigans){return rv}else{return[buffer$$1.toString(encoding),rv]}};FS.prototype.fchown=function fchown(fd,uid,gid,callback){if(callback===void 0)callback=nopCb;var newCb=wrapCb(callback,1);try{this.fd2file(fd).chown(uid,gid,newCb)}catch(e){newCb(e)}};FS.prototype.fchownSync=function fchownSync(fd,uid,gid){this.fd2file(fd).chownSync(uid,gid)};FS.prototype.fchmod=function fchmod(fd,mode,cb){var newCb=wrapCb(cb,1);try{var numMode=typeof mode==="string"?parseInt(mode,8):mode;this.fd2file(fd).chmod(numMode,newCb)}catch(e){newCb(e)}};FS.prototype.fchmodSync=function fchmodSync(fd,mode){var numMode=typeof mode==="string"?parseInt(mode,8):mode;this.fd2file(fd).chmodSync(numMode)};FS.prototype.futimes=function futimes(fd,atime,mtime,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{var file=this.fd2file(fd);if(typeof atime==="number"){atime=new Date(atime*1e3)}if(typeof mtime==="number"){mtime=new Date(mtime*1e3)}file.utimes(atime,mtime,newCb)}catch(e){newCb(e)}};FS.prototype.futimesSync=function futimesSync(fd,atime,mtime){this.fd2file(fd).utimesSync(normalizeTime(atime),normalizeTime(mtime))};FS.prototype.rmdir=function rmdir(path$$1,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{path$$1=normalizePath(path$$1);assertRoot(this.root).rmdir(path$$1,newCb)}catch(e){newCb(e)}};FS.prototype.rmdirSync=function rmdirSync(path$$1){path$$1=normalizePath(path$$1);return assertRoot(this.root).rmdirSync(path$$1)};FS.prototype.mkdir=function mkdir(path$$1,mode,cb){if(cb===void 0)cb=nopCb;if(typeof mode==="function"){cb=mode;mode=511}var newCb=wrapCb(cb,1);try{path$$1=normalizePath(path$$1);assertRoot(this.root).mkdir(path$$1,mode,newCb)}catch(e){newCb(e)}};FS.prototype.mkdirSync=function mkdirSync(path$$1,mode){assertRoot(this.root).mkdirSync(normalizePath(path$$1),normalizeMode(mode,511))};FS.prototype.readdir=function readdir(path$$1,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,2);try{path$$1=normalizePath(path$$1);assertRoot(this.root).readdir(path$$1,newCb)}catch(e){newCb(e)}};FS.prototype.readdirSync=function readdirSync(path$$1){path$$1=normalizePath(path$$1);return assertRoot(this.root).readdirSync(path$$1)};FS.prototype.link=function link(srcpath,dstpath,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{srcpath=normalizePath(srcpath);dstpath=normalizePath(dstpath);assertRoot(this.root).link(srcpath,dstpath,newCb)}catch(e){newCb(e)}};FS.prototype.linkSync=function linkSync(srcpath,dstpath){srcpath=normalizePath(srcpath);dstpath=normalizePath(dstpath);return assertRoot(this.root).linkSync(srcpath,dstpath)};FS.prototype.symlink=function symlink(srcpath,dstpath,arg3,cb){if(cb===void 0)cb=nopCb;var type=typeof arg3==="string"?arg3:"file";cb=typeof arg3==="function"?arg3:cb;var newCb=wrapCb(cb,1);try{if(type!=="file"&&type!=="dir"){return newCb(new ApiError(ErrorCode.EINVAL,"Invalid type: "+type))}srcpath=normalizePath(srcpath);dstpath=normalizePath(dstpath);assertRoot(this.root).symlink(srcpath,dstpath,type,newCb)}catch(e){newCb(e)}};FS.prototype.symlinkSync=function symlinkSync(srcpath,dstpath,type){if(!type){type="file"}else if(type!=="file"&&type!=="dir"){throw new ApiError(ErrorCode.EINVAL,"Invalid type: "+type)}srcpath=normalizePath(srcpath);dstpath=normalizePath(dstpath);return assertRoot(this.root).symlinkSync(srcpath,dstpath,type)};FS.prototype.readlink=function readlink(path$$1,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,2);try{path$$1=normalizePath(path$$1);assertRoot(this.root).readlink(path$$1,newCb)}catch(e){newCb(e)}};FS.prototype.readlinkSync=function readlinkSync(path$$1){path$$1=normalizePath(path$$1);return assertRoot(this.root).readlinkSync(path$$1)};FS.prototype.chown=function chown(path$$1,uid,gid,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{path$$1=normalizePath(path$$1);assertRoot(this.root).chown(path$$1,false,uid,gid,newCb)}catch(e){newCb(e)}};FS.prototype.chownSync=function chownSync(path$$1,uid,gid){path$$1=normalizePath(path$$1);assertRoot(this.root).chownSync(path$$1,false,uid,gid)};FS.prototype.lchown=function lchown(path$$1,uid,gid,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{path$$1=normalizePath(path$$1);assertRoot(this.root).chown(path$$1,true,uid,gid,newCb)}catch(e){newCb(e)}};FS.prototype.lchownSync=function lchownSync(path$$1,uid,gid){path$$1=normalizePath(path$$1);assertRoot(this.root).chownSync(path$$1,true,uid,gid)};FS.prototype.chmod=function chmod(path$$1,mode,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{var numMode=normalizeMode(mode,-1);if(numMode<0){throw new ApiError(ErrorCode.EINVAL,"Invalid mode.")}assertRoot(this.root).chmod(normalizePath(path$$1),false,numMode,newCb)}catch(e){newCb(e)}};FS.prototype.chmodSync=function chmodSync(path$$1,mode){var numMode=normalizeMode(mode,-1);if(numMode<0){throw new ApiError(ErrorCode.EINVAL,"Invalid mode.")}path$$1=normalizePath(path$$1);assertRoot(this.root).chmodSync(path$$1,false,numMode)};FS.prototype.lchmod=function lchmod(path$$1,mode,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{var numMode=normalizeMode(mode,-1);if(numMode<0){throw new ApiError(ErrorCode.EINVAL,"Invalid mode.")}assertRoot(this.root).chmod(normalizePath(path$$1),true,numMode,newCb)}catch(e){newCb(e)}};FS.prototype.lchmodSync=function lchmodSync(path$$1,mode){var numMode=normalizeMode(mode,-1);if(numMode<1){throw new ApiError(ErrorCode.EINVAL,"Invalid mode.")}assertRoot(this.root).chmodSync(normalizePath(path$$1),true,numMode)};FS.prototype.utimes=function utimes(path$$1,atime,mtime,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{assertRoot(this.root).utimes(normalizePath(path$$1),normalizeTime(atime),normalizeTime(mtime),newCb)}catch(e){newCb(e)}};FS.prototype.utimesSync=function utimesSync(path$$1,atime,mtime){assertRoot(this.root).utimesSync(normalizePath(path$$1),normalizeTime(atime),normalizeTime(mtime))};FS.prototype.realpath=function realpath(path$$1,arg2,cb){if(cb===void 0)cb=nopCb;var cache=typeof arg2==="object"?arg2:{};cb=typeof arg2==="function"?arg2:nopCb;var newCb=wrapCb(cb,2);try{path$$1=normalizePath(path$$1);assertRoot(this.root).realpath(path$$1,cache,newCb)}catch(e){newCb(e)}};FS.prototype.realpathSync=function realpathSync(path$$1,cache){if(cache===void 0)cache={};path$$1=normalizePath(path$$1);return assertRoot(this.root).realpathSync(path$$1,cache)};FS.prototype.watchFile=function watchFile(filename,arg2,listener){if(listener===void 0)listener=nopCb;throw new ApiError(ErrorCode.ENOTSUP)};FS.prototype.unwatchFile=function unwatchFile(filename,listener){if(listener===void 0)listener=nopCb;throw new ApiError(ErrorCode.ENOTSUP)};FS.prototype.watch=function watch(filename,arg2,listener){if(listener===void 0)listener=nopCb;throw new ApiError(ErrorCode.ENOTSUP)};FS.prototype.access=function access(path$$1,arg2,cb){if(cb===void 0)cb=nopCb;throw new ApiError(ErrorCode.ENOTSUP)};FS.prototype.accessSync=function accessSync(path$$1,mode){throw new ApiError(ErrorCode.ENOTSUP)};FS.prototype.createReadStream=function createReadStream(path$$1,options){throw new ApiError(ErrorCode.ENOTSUP)};FS.prototype.createWriteStream=function createWriteStream(path$$1,options){throw new ApiError(ErrorCode.ENOTSUP)};FS.prototype.wrapCallbacks=function wrapCallbacks(cbWrapper){wrapCb=cbWrapper};FS.prototype.getFdForFile=function getFdForFile(file){var fd=this.nextFd++;this.fdMap[fd]=file;return fd};FS.prototype.fd2file=function fd2file(fd){var rv=this.fdMap[fd];if(rv){return rv}else{throw new ApiError(ErrorCode.EBADF,"Invalid file descriptor.")}};FS.prototype.closeFd=function closeFd(fd){delete this.fdMap[fd]};FS.Stats=Stats;var fs32=new FS;var _fsMock={};var fsProto=FS.prototype;Object.keys(fsProto).forEach(function(key){if(typeof fs32[key]==="function"){_fsMock[key]=function(){return fs32[key].apply(fs32,arguments)}}else{_fsMock[key]=fs32[key]}});_fsMock["changeFSModule"]=function(newFs){fs32=newFs};_fsMock["getFSModule"]=function(){return fs32};_fsMock["FS"]=FS;function _min(d0,d1,d22,bx,ay){return d0<d1||d22<d1?d0>d22?d22+1:d0+1:bx===ay?d1:d1+1}function levenshtein(a,b2){if(a===b2){return 0}if(a.length>b2.length){var tmp=a;a=b2;b2=tmp}var la3=a.length;var lb=b2.length;while(la3>0&&a.charCodeAt(la3-1)===b2.charCodeAt(lb-1)){la3--;lb--}var offset=0;while(offset<la3&&a.charCodeAt(offset)===b2.charCodeAt(offset)){offset++}la3-=offset;lb-=offset;if(la3===0||lb===1){return lb}var vector=new Array(la3<<1);for(var y5=0;y5<la3;){vector[la3+y5]=a.charCodeAt(offset+y5);vector[y5]=++y5}var x4;var d0;var d1;var d22;var d32;for(x4=0;x4+3<lb;){var bx0=b2.charCodeAt(offset+(d0=x4));var bx1=b2.charCodeAt(offset+(d1=x4+1));var bx2=b2.charCodeAt(offset+(d22=x4+2));var bx3=b2.charCodeAt(offset+(d32=x4+3));var dd$1=x4+=4;for(var y$1=0;y$1<la3;){var ay=vector[la3+y$1];var dy=vector[y$1];d0=_min(dy,d0,d1,bx0,ay);d1=_min(d0,d1,d22,bx1,ay);d22=_min(d1,d22,d32,bx2,ay);dd$1=_min(d22,d32,dd$1,bx3,ay);vector[y$1++]=dd$1;d32=d22;d22=d1;d1=d0;d0=dy}}var dd=0;for(;x4<lb;){var bx0$1=b2.charCodeAt(offset+(d0=x4));dd=++x4;for(var y$2=0;y$2<la3;y$2++){var dy$1=vector[y$2];vector[y$2]=dd=dy$1<d0||dd<d0?dy$1>dd?dd+1:dy$1+1:bx0$1===vector[la3+y$2]?d0:d0+1;d0=dy$1}}return dd}function deprecationMessage(print,fsName,opts){if(print){console.warn("["+fsName+"] Direct file system constructor usage is deprecated for this file system, and will be removed in the next major version. Please use the \'"+fsName+".Create("+JSON.stringify(opts)+", callback)\' method instead. See https://github.com/jvilk/BrowserFS/issues/176 for more details.")}}var isIE=typeof navigator!=="undefined"&&!!(/(msie) ([\\w.]+)/.exec(navigator.userAgent.toLowerCase())||navigator.userAgent.indexOf("Trident")!==-1);var isWebWorker=typeof window==="undefined";function fail(){throw new Error("BFS has reached an impossible code path; please file a bug.")}function mkdirpSync(p,mode,fs4){if(!fs4.existsSync(p)){mkdirpSync(path.dirname(p),mode,fs4);fs4.mkdirSync(p,mode)}}function buffer2ArrayBuffer(buff){var u8=buffer2Uint8array(buff),u8offset=u8.byteOffset,u8Len=u8.byteLength;if(u8offset===0&&u8Len===u8.buffer.byteLength){return u8.buffer}else{return u8.buffer.slice(u8offset,u8offset+u8Len)}}function buffer2Uint8array(buff){if(buff instanceof Uint8Array){return buff}else{return new Uint8Array(buff)}}function arrayish2Buffer(arr){if(arr instanceof Buffer2){return arr}else if(arr instanceof Uint8Array){return uint8Array2Buffer(arr)}else{return Buffer2.from(arr)}}function uint8Array2Buffer(u8){if(u8 instanceof Buffer2){return u8}else if(u8.byteOffset===0&&u8.byteLength===u8.buffer.byteLength){return arrayBuffer2Buffer(u8.buffer)}else{return Buffer2.from(u8.buffer,u8.byteOffset,u8.byteLength)}}function arrayBuffer2Buffer(ab){return Buffer2.from(ab)}function copyingSlice(buff,start,end){if(start===void 0)start=0;if(end===void 0)end=buff.length;if(start<0||end<0||end>buff.length||start>end){throw new TypeError("Invalid slice bounds on buffer of length "+buff.length+": ["+start+", "+end+"]")}if(buff.length===0){return emptyBuffer()}else{var u8=buffer2Uint8array(buff),s0=buff[0],newS0=(s0+1)%255;buff[0]=newS0;if(u8[0]===newS0){u8[0]=s0;return uint8Array2Buffer(u8.slice(start,end))}else{buff[0]=s0;return uint8Array2Buffer(u8.subarray(start,end))}}}var emptyBuff=null;function emptyBuffer(){if(emptyBuff){return emptyBuff}return emptyBuff=Buffer2.alloc(0)}function bufferValidator(v3,cb){if(Buffer2.isBuffer(v3)){cb()}else{cb(new ApiError(ErrorCode.EINVAL,"option must be a Buffer."))}}function checkOptions(fsType,opts,cb){var optsInfo=fsType.Options;var fsName=fsType.Name;var pendingValidators=0;var callbackCalled=false;var loopEnded=false;function validatorCallback(e){if(!callbackCalled){if(e){callbackCalled=true;cb(e)}pendingValidators--;if(pendingValidators===0&&loopEnded){cb()}}}var loop3=function(optName2){if(optsInfo.hasOwnProperty(optName2)){var opt=optsInfo[optName2];var providedValue=opts[optName2];if(providedValue===void 0||providedValue===null){if(!opt.optional){var incorrectOptions=Object.keys(opts).filter(function(o2){return!(o2 in optsInfo)}).map(function(a){return{str:a,distance:levenshtein(optName2,a)}}).filter(function(o2){return o2.distance<5}).sort(function(a,b2){return a.distance-b2.distance});if(callbackCalled){return{}}callbackCalled=true;return{v:cb(new ApiError(ErrorCode.EINVAL,"["+fsName+"] Required option \'"+optName2+"\' not provided."+(incorrectOptions.length>0?" You provided unrecognized option \'"+incorrectOptions[0].str+"\'; perhaps you meant to type \'"+optName2+"\'.":"")+"\\nOption description: "+opt.description))}}}else{var typeMatches=false;if(Array.isArray(opt.type)){typeMatches=opt.type.indexOf(typeof providedValue)!==-1}else{typeMatches=typeof providedValue===opt.type}if(!typeMatches){if(callbackCalled){return{}}callbackCalled=true;return{v:cb(new ApiError(ErrorCode.EINVAL,"["+fsName+"] Value provided for option "+optName2+" is not the proper type. Expected "+(Array.isArray(opt.type)?"one of {"+opt.type.join(", ")+"}":opt.type)+", but received "+typeof providedValue+"\\nOption description: "+opt.description))}}else if(opt.validator){pendingValidators++;opt.validator(providedValue,validatorCallback)}}}};for(var optName in optsInfo){var returned=loop3(optName);if(returned)return returned.v}loopEnded=true;if(pendingValidators===0&&!callbackCalled){cb()}}var BFSUtils=Object.freeze({deprecationMessage,isIE,isWebWorker,fail,mkdirpSync,buffer2ArrayBuffer,buffer2Uint8array,arrayish2Buffer,uint8Array2Buffer,arrayBuffer2Buffer,copyingSlice,emptyBuffer,bufferValidator,checkOptions});var BFSEmscriptenStreamOps=function BFSEmscriptenStreamOps2(fs4){this.fs=fs4;this.nodefs=fs4.getNodeFS();this.FS=fs4.getFS();this.PATH=fs4.getPATH();this.ERRNO_CODES=fs4.getERRNO_CODES()};BFSEmscriptenStreamOps.prototype.open=function open(stream){var path$$1=this.fs.realPath(stream.node);var FS2=this.FS;try{if(FS2.isFile(stream.node.mode)){stream.nfd=this.nodefs.openSync(path$$1,this.fs.flagsToPermissionString(stream.flags))}}catch(e){if(!e.code){throw e}throw new FS2.ErrnoError(this.ERRNO_CODES[e.code])}};BFSEmscriptenStreamOps.prototype.close=function close(stream){var FS2=this.FS;try{if(FS2.isFile(stream.node.mode)&&stream.nfd){this.nodefs.closeSync(stream.nfd)}}catch(e){if(!e.code){throw e}throw new FS2.ErrnoError(this.ERRNO_CODES[e.code])}};BFSEmscriptenStreamOps.prototype.read=function read(stream,buffer$$1,offset,length,position){try{return this.nodefs.readSync(stream.nfd,uint8Array2Buffer(buffer$$1),offset,length,position)}catch(e){throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code])}};BFSEmscriptenStreamOps.prototype.write=function write(stream,buffer$$1,offset,length,position){try{return this.nodefs.writeSync(stream.nfd,uint8Array2Buffer(buffer$$1),offset,length,position)}catch(e){throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code])}};BFSEmscriptenStreamOps.prototype.llseek=function llseek(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(this.FS.isFile(stream.node.mode)){try{var stat=this.nodefs.fstatSync(stream.nfd);position+=stat.size}catch(e){throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code])}}}if(position<0){throw new this.FS.ErrnoError(this.ERRNO_CODES.EINVAL)}stream.position=position;return position};var BFSEmscriptenNodeOps=function BFSEmscriptenNodeOps2(fs4){this.fs=fs4;this.nodefs=fs4.getNodeFS();this.FS=fs4.getFS();this.PATH=fs4.getPATH();this.ERRNO_CODES=fs4.getERRNO_CODES()};BFSEmscriptenNodeOps.prototype.getattr=function getattr(node){var path$$1=this.fs.realPath(node);var stat;try{stat=this.nodefs.lstatSync(path$$1)}catch(e){if(!e.code){throw e}throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code])}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks}};BFSEmscriptenNodeOps.prototype.setattr=function setattr(node,attr){var path$$1=this.fs.realPath(node);try{if(attr.mode!==void 0){this.nodefs.chmodSync(path$$1,attr.mode);node.mode=attr.mode}if(attr.timestamp!==void 0){var date=new Date(attr.timestamp);this.nodefs.utimesSync(path$$1,date,date)}}catch(e){if(!e.code){throw e}if(e.code!=="ENOTSUP"){throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code])}}if(attr.size!==void 0){try{this.nodefs.truncateSync(path$$1,attr.size)}catch(e){if(!e.code){throw e}throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code])}}};BFSEmscriptenNodeOps.prototype.lookup=function lookup(parent,name2){var path$$1=this.PATH.join2(this.fs.realPath(parent),name2);var mode=this.fs.getMode(path$$1);return this.fs.createNode(parent,name2,mode)};BFSEmscriptenNodeOps.prototype.mknod=function mknod(parent,name2,mode,dev){var node=this.fs.createNode(parent,name2,mode,dev);var path$$1=this.fs.realPath(node);try{if(this.FS.isDir(node.mode)){this.nodefs.mkdirSync(path$$1,node.mode)}else{this.nodefs.writeFileSync(path$$1,"",{mode:node.mode})}}catch(e){if(!e.code){throw e}throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code])}return node};BFSEmscriptenNodeOps.prototype.rename=function rename(oldNode,newDir,newName){var oldPath=this.fs.realPath(oldNode);var newPath=this.PATH.join2(this.fs.realPath(newDir),newName);try{this.nodefs.renameSync(oldPath,newPath);oldNode.name=newName;oldNode.parent=newDir}catch(e){if(!e.code){throw e}throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code])}};BFSEmscriptenNodeOps.prototype.unlink=function unlink(parent,name2){var path$$1=this.PATH.join2(this.fs.realPath(parent),name2);try{this.nodefs.unlinkSync(path$$1)}catch(e){if(!e.code){throw e}throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code])}};BFSEmscriptenNodeOps.prototype.rmdir=function rmdir(parent,name2){var path$$1=this.PATH.join2(this.fs.realPath(parent),name2);try{this.nodefs.rmdirSync(path$$1)}catch(e){if(!e.code){throw e}throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code])}};BFSEmscriptenNodeOps.prototype.readdir=function readdir(node){var path$$1=this.fs.realPath(node);try{var contents=this.nodefs.readdirSync(path$$1);contents.push(".","..");return contents}catch(e){if(!e.code){throw e}throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code])}};BFSEmscriptenNodeOps.prototype.symlink=function symlink(parent,newName,oldPath){var newPath=this.PATH.join2(this.fs.realPath(parent),newName);try{this.nodefs.symlinkSync(oldPath,newPath)}catch(e){if(!e.code){throw e}throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code])}};BFSEmscriptenNodeOps.prototype.readlink=function readlink(node){var path$$1=this.fs.realPath(node);try{return this.nodefs.readlinkSync(path$$1)}catch(e){if(!e.code){throw e}throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code])}};var BFSEmscriptenFS=function BFSEmscriptenFS2(_FS,_PATH,_ERRNO_CODES,nodefs){if(_FS===void 0)_FS=self["FS"];if(_PATH===void 0)_PATH=self["PATH"];if(_ERRNO_CODES===void 0)_ERRNO_CODES=self["ERRNO_CODES"];if(nodefs===void 0)nodefs=_fsMock;this.flagsToPermissionStringMap={0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"};this.nodefs=nodefs;this.FS=_FS;this.PATH=_PATH;this.ERRNO_CODES=_ERRNO_CODES;this.node_ops=new BFSEmscriptenNodeOps(this);this.stream_ops=new BFSEmscriptenStreamOps(this)};BFSEmscriptenFS.prototype.mount=function mount(m){return this.createNode(null,"/",this.getMode(m.opts.root),0)};BFSEmscriptenFS.prototype.createNode=function createNode(parent,name2,mode,dev){var FS2=this.FS;if(!FS2.isDir(mode)&&!FS2.isFile(mode)&&!FS2.isLink(mode)){throw new FS2.ErrnoError(this.ERRNO_CODES.EINVAL)}var node=FS2.createNode(parent,name2,mode);node.node_ops=this.node_ops;node.stream_ops=this.stream_ops;return node};BFSEmscriptenFS.prototype.getMode=function getMode(path$$1){var stat;try{stat=this.nodefs.lstatSync(path$$1)}catch(e){if(!e.code){throw e}throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code])}return stat.mode};BFSEmscriptenFS.prototype.realPath=function realPath(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent}parts.push(node.mount.opts.root);parts.reverse();return this.PATH.join.apply(null,parts)};BFSEmscriptenFS.prototype.flagsToPermissionString=function flagsToPermissionString(flags){var parsedFlags=typeof flags==="string"?parseInt(flags,10):flags;parsedFlags&=8191;if(parsedFlags in this.flagsToPermissionStringMap){return this.flagsToPermissionStringMap[parsedFlags]}else{return flags}};BFSEmscriptenFS.prototype.getNodeFS=function getNodeFS(){return this.nodefs};BFSEmscriptenFS.prototype.getFS=function getFS(){return this.FS};BFSEmscriptenFS.prototype.getPATH=function getPATH(){return this.PATH};BFSEmscriptenFS.prototype.getERRNO_CODES=function getERRNO_CODES(){return this.ERRNO_CODES};var BaseFileSystem=function BaseFileSystem2(){};BaseFileSystem.prototype.supportsLinks=function supportsLinks(){return false};BaseFileSystem.prototype.diskSpace=function diskSpace(p,cb){cb(0,0)};BaseFileSystem.prototype.openFile=function openFile(p,flag,cb){throw new ApiError(ErrorCode.ENOTSUP)};BaseFileSystem.prototype.createFile=function createFile(p,flag,mode,cb){throw new ApiError(ErrorCode.ENOTSUP)};BaseFileSystem.prototype.open=function open(p,flag,mode,cb){var this$1=this;var mustBeFile=function(e,stats){if(e){switch(flag.pathNotExistsAction()){case ActionType.CREATE_FILE:return this$1.stat(path.dirname(p),false,function(e2,parentStats){if(e2){cb(e2)}else if(parentStats&&!parentStats.isDirectory()){cb(ApiError.ENOTDIR(path.dirname(p)))}else{this$1.createFile(p,flag,mode,cb)}});case ActionType.THROW_EXCEPTION:return cb(ApiError.ENOENT(p));default:return cb(new ApiError(ErrorCode.EINVAL,"Invalid FileFlag object."))}}else{if(stats&&stats.isDirectory()){return cb(ApiError.EISDIR(p))}switch(flag.pathExistsAction()){case ActionType.THROW_EXCEPTION:return cb(ApiError.EEXIST(p));case ActionType.TRUNCATE_FILE:return this$1.openFile(p,flag,function(e2,fd){if(e2){cb(e2)}else if(fd){fd.truncate(0,function(){fd.sync(function(){cb(null,fd)})})}else{fail()}});case ActionType.NOP:return this$1.openFile(p,flag,cb);default:return cb(new ApiError(ErrorCode.EINVAL,"Invalid FileFlag object."))}}};this.stat(p,false,mustBeFile)};BaseFileSystem.prototype.rename=function rename(oldPath,newPath,cb){cb(new ApiError(ErrorCode.ENOTSUP))};BaseFileSystem.prototype.renameSync=function renameSync(oldPath,newPath){throw new ApiError(ErrorCode.ENOTSUP)};BaseFileSystem.prototype.stat=function stat(p,isLstat,cb){cb(new ApiError(ErrorCode.ENOTSUP))};BaseFileSystem.prototype.statSync=function statSync(p,isLstat){throw new ApiError(ErrorCode.ENOTSUP)};BaseFileSystem.prototype.openFileSync=function openFileSync(p,flag,mode){throw new ApiError(ErrorCode.ENOTSUP)};BaseFileSystem.prototype.createFileSync=function createFileSync(p,flag,mode){throw new ApiError(ErrorCode.ENOTSUP)};BaseFileSystem.prototype.openSync=function openSync(p,flag,mode){var stats;try{stats=this.statSync(p,false)}catch(e){switch(flag.pathNotExistsAction()){case ActionType.CREATE_FILE:var parentStats=this.statSync(path.dirname(p),false);if(!parentStats.isDirectory()){throw ApiError.ENOTDIR(path.dirname(p))}return this.createFileSync(p,flag,mode);case ActionType.THROW_EXCEPTION:throw ApiError.ENOENT(p);default:throw new ApiError(ErrorCode.EINVAL,"Invalid FileFlag object.")}}if(stats.isDirectory()){throw ApiError.EISDIR(p)}switch(flag.pathExistsAction()){case ActionType.THROW_EXCEPTION:throw ApiError.EEXIST(p);case ActionType.TRUNCATE_FILE:this.unlinkSync(p);return this.createFileSync(p,flag,stats.mode);case ActionType.NOP:return this.openFileSync(p,flag,mode);default:throw new ApiError(ErrorCode.EINVAL,"Invalid FileFlag object.")}};BaseFileSystem.prototype.unlink=function unlink(p,cb){cb(new ApiError(ErrorCode.ENOTSUP))};BaseFileSystem.prototype.unlinkSync=function unlinkSync(p){throw new ApiError(ErrorCode.ENOTSUP)};BaseFileSystem.prototype.rmdir=function rmdir(p,cb){cb(new ApiError(ErrorCode.ENOTSUP))};BaseFileSystem.prototype.rmdirSync=function rmdirSync(p){throw new ApiError(ErrorCode.ENOTSUP)};BaseFileSystem.prototype.mkdir=function mkdir(p,mode,cb){cb(new ApiError(ErrorCode.ENOTSUP))};BaseFileSystem.prototype.mkdirSync=function mkdirSync(p,mode){throw new ApiError(ErrorCode.ENOTSUP)};BaseFileSystem.prototype.readdir=function readdir(p,cb){cb(new ApiError(ErrorCode.ENOTSUP))};BaseFileSystem.prototype.readdirSync=function readdirSync(p){throw new ApiError(ErrorCode.ENOTSUP)};BaseFileSystem.prototype.exists=function exists2(p,cb){this.stat(p,null,function(err){cb(!err)})};BaseFileSystem.prototype.existsSync=function existsSync(p){try{this.statSync(p,true);return true}catch(e){return false}};BaseFileSystem.prototype.realpath=function realpath(p,cache,cb){if(this.supportsLinks()){var splitPath=p.split(path.sep);for(var i2=0;i2<splitPath.length;i2++){var addPaths=splitPath.slice(0,i2+1);splitPath[i2]=path.join.apply(null,addPaths)}}else{this.exists(p,function(doesExist){if(doesExist){cb(null,p)}else{cb(ApiError.ENOENT(p))}})}};BaseFileSystem.prototype.realpathSync=function realpathSync(p,cache){if(this.supportsLinks()){var splitPath=p.split(path.sep);for(var i2=0;i2<splitPath.length;i2++){var addPaths=splitPath.slice(0,i2+1);splitPath[i2]=path.join.apply(path,addPaths)}return splitPath.join(path.sep)}else{if(this.existsSync(p)){return p}else{throw ApiError.ENOENT(p)}}};BaseFileSystem.prototype.truncate=function truncate(p,len,cb){this.open(p,FileFlag.getFileFlag("r+"),420,function(er2,fd){if(er2){return cb(er2)}fd.truncate(len,function(er22){fd.close(function(er222){cb(er22||er222)})})})};BaseFileSystem.prototype.truncateSync=function truncateSync(p,len){var fd=this.openSync(p,FileFlag.getFileFlag("r+"),420);try{fd.truncateSync(len)}catch(e){throw e}finally{fd.closeSync()}};BaseFileSystem.prototype.readFile=function readFile2(fname,encoding,flag,cb){var oldCb=cb;this.open(fname,flag,420,function(err,fd){if(err){return cb(err)}cb=function(err2,arg){fd.close(function(err22){if(!err2){err2=err22}return oldCb(err2,arg)})};fd.stat(function(err2,stat){if(err2){return cb(err2)}var buf=Buffer2.alloc(stat.size);fd.read(buf,0,stat.size,0,function(err3){if(err3){return cb(err3)}else if(encoding===null){return cb(err3,buf)}try{cb(null,buf.toString(encoding))}catch(e){cb(e)}})})})};BaseFileSystem.prototype.readFileSync=function readFileSync(fname,encoding,flag){var fd=this.openSync(fname,flag,420);try{var stat=fd.statSync();var buf=Buffer2.alloc(stat.size);fd.readSync(buf,0,stat.size,0);fd.closeSync();if(encoding===null){return buf}return buf.toString(encoding)}finally{fd.closeSync()}};BaseFileSystem.prototype.writeFile=function writeFile2(fname,data,encoding,flag,mode,cb){var oldCb=cb;this.open(fname,flag,420,function(err,fd){if(err){return cb(err)}cb=function(err2){fd.close(function(err22){oldCb(err2?err2:err22)})};try{if(typeof data==="string"){data=Buffer2.from(data,encoding)}}catch(e){return cb(e)}fd.write(data,0,data.length,0,cb)})};BaseFileSystem.prototype.writeFileSync=function writeFileSync(fname,data,encoding,flag,mode){var fd=this.openSync(fname,flag,mode);try{if(typeof data==="string"){data=Buffer2.from(data,encoding)}fd.writeSync(data,0,data.length,0)}finally{fd.closeSync()}};BaseFileSystem.prototype.appendFile=function appendFile3(fname,data,encoding,flag,mode,cb){var oldCb=cb;this.open(fname,flag,mode,function(err,fd){if(err){return cb(err)}cb=function(err2){fd.close(function(err22){oldCb(err2?err2:err22)})};if(typeof data==="string"){data=Buffer2.from(data,encoding)}fd.write(data,0,data.length,null,cb)})};BaseFileSystem.prototype.appendFileSync=function appendFileSync(fname,data,encoding,flag,mode){var fd=this.openSync(fname,flag,mode);try{if(typeof data==="string"){data=Buffer2.from(data,encoding)}fd.writeSync(data,0,data.length,null)}finally{fd.closeSync()}};BaseFileSystem.prototype.chmod=function chmod(p,isLchmod,mode,cb){cb(new ApiError(ErrorCode.ENOTSUP))};BaseFileSystem.prototype.chmodSync=function chmodSync(p,isLchmod,mode){throw new ApiError(ErrorCode.ENOTSUP)};BaseFileSystem.prototype.chown=function chown(p,isLchown,uid,gid,cb){cb(new ApiError(ErrorCode.ENOTSUP))};BaseFileSystem.prototype.chownSync=function chownSync(p,isLchown,uid,gid){throw new ApiError(ErrorCode.ENOTSUP)};BaseFileSystem.prototype.utimes=function utimes(p,atime,mtime,cb){cb(new ApiError(ErrorCode.ENOTSUP))};BaseFileSystem.prototype.utimesSync=function utimesSync(p,atime,mtime){throw new ApiError(ErrorCode.ENOTSUP)};BaseFileSystem.prototype.link=function link(srcpath,dstpath,cb){cb(new ApiError(ErrorCode.ENOTSUP))};BaseFileSystem.prototype.linkSync=function linkSync(srcpath,dstpath){throw new ApiError(ErrorCode.ENOTSUP)};BaseFileSystem.prototype.symlink=function symlink(srcpath,dstpath,type,cb){cb(new ApiError(ErrorCode.ENOTSUP))};BaseFileSystem.prototype.symlinkSync=function symlinkSync(srcpath,dstpath,type){throw new ApiError(ErrorCode.ENOTSUP)};BaseFileSystem.prototype.readlink=function readlink(p,cb){cb(new ApiError(ErrorCode.ENOTSUP))};BaseFileSystem.prototype.readlinkSync=function readlinkSync(p){throw new ApiError(ErrorCode.ENOTSUP)};var SynchronousFileSystem=function(BaseFileSystem2){function SynchronousFileSystem2(){BaseFileSystem2.apply(this,arguments)}if(BaseFileSystem2)SynchronousFileSystem2.__proto__=BaseFileSystem2;SynchronousFileSystem2.prototype=Object.create(BaseFileSystem2&&BaseFileSystem2.prototype);SynchronousFileSystem2.prototype.constructor=SynchronousFileSystem2;SynchronousFileSystem2.prototype.supportsSynch=function supportsSynch(){return true};SynchronousFileSystem2.prototype.rename=function rename(oldPath,newPath,cb){try{this.renameSync(oldPath,newPath);cb()}catch(e){cb(e)}};SynchronousFileSystem2.prototype.stat=function stat(p,isLstat,cb){try{cb(null,this.statSync(p,isLstat))}catch(e){cb(e)}};SynchronousFileSystem2.prototype.open=function open(p,flags,mode,cb){try{cb(null,this.openSync(p,flags,mode))}catch(e){cb(e)}};SynchronousFileSystem2.prototype.unlink=function unlink(p,cb){try{this.unlinkSync(p);cb()}catch(e){cb(e)}};SynchronousFileSystem2.prototype.rmdir=function rmdir(p,cb){try{this.rmdirSync(p);cb()}catch(e){cb(e)}};SynchronousFileSystem2.prototype.mkdir=function mkdir(p,mode,cb){try{this.mkdirSync(p,mode);cb()}catch(e){cb(e)}};SynchronousFileSystem2.prototype.readdir=function readdir(p,cb){try{cb(null,this.readdirSync(p))}catch(e){cb(e)}};SynchronousFileSystem2.prototype.chmod=function chmod(p,isLchmod,mode,cb){try{this.chmodSync(p,isLchmod,mode);cb()}catch(e){cb(e)}};SynchronousFileSystem2.prototype.chown=function chown(p,isLchown,uid,gid,cb){try{this.chownSync(p,isLchown,uid,gid);cb()}catch(e){cb(e)}};SynchronousFileSystem2.prototype.utimes=function utimes(p,atime,mtime,cb){try{this.utimesSync(p,atime,mtime);cb()}catch(e){cb(e)}};SynchronousFileSystem2.prototype.link=function link(srcpath,dstpath,cb){try{this.linkSync(srcpath,dstpath);cb()}catch(e){cb(e)}};SynchronousFileSystem2.prototype.symlink=function symlink(srcpath,dstpath,type,cb){try{this.symlinkSync(srcpath,dstpath,type);cb()}catch(e){cb(e)}};SynchronousFileSystem2.prototype.readlink=function readlink(p,cb){try{cb(null,this.readlinkSync(p))}catch(e){cb(e)}};return SynchronousFileSystem2}(BaseFileSystem);var BaseFile=function BaseFile2(){};BaseFile.prototype.sync=function sync(cb){cb(new ApiError(ErrorCode.ENOTSUP))};BaseFile.prototype.syncSync=function syncSync(){throw new ApiError(ErrorCode.ENOTSUP)};BaseFile.prototype.datasync=function datasync(cb){this.sync(cb)};BaseFile.prototype.datasyncSync=function datasyncSync(){return this.syncSync()};BaseFile.prototype.chown=function chown(uid,gid,cb){cb(new ApiError(ErrorCode.ENOTSUP))};BaseFile.prototype.chownSync=function chownSync(uid,gid){throw new ApiError(ErrorCode.ENOTSUP)};BaseFile.prototype.chmod=function chmod(mode,cb){cb(new ApiError(ErrorCode.ENOTSUP))};BaseFile.prototype.chmodSync=function chmodSync(mode){throw new ApiError(ErrorCode.ENOTSUP)};BaseFile.prototype.utimes=function utimes(atime,mtime,cb){cb(new ApiError(ErrorCode.ENOTSUP))};BaseFile.prototype.utimesSync=function utimesSync(atime,mtime){throw new ApiError(ErrorCode.ENOTSUP)};var PreloadFile=function(BaseFile$$1){function PreloadFile2(_fs,_path,_flag,_stat,contents){BaseFile$$1.call(this);this._pos=0;this._dirty=false;this._fs=_fs;this._path=_path;this._flag=_flag;this._stat=_stat;if(contents){this._buffer=contents}else{this._buffer=emptyBuffer()}if(this._stat.size!==this._buffer.length&&this._flag.isReadable()){throw new Error("Invalid buffer: Buffer is "+this._buffer.length+" long, yet Stats object specifies that file is "+this._stat.size+" long.")}}if(BaseFile$$1)PreloadFile2.__proto__=BaseFile$$1;PreloadFile2.prototype=Object.create(BaseFile$$1&&BaseFile$$1.prototype);PreloadFile2.prototype.constructor=PreloadFile2;PreloadFile2.prototype.getBuffer=function getBuffer(){return this._buffer};PreloadFile2.prototype.getStats=function getStats(){return this._stat};PreloadFile2.prototype.getFlag=function getFlag2(){return this._flag};PreloadFile2.prototype.getPath=function getPath(){return this._path};PreloadFile2.prototype.getPos=function getPos(){if(this._flag.isAppendable()){return this._stat.size}return this._pos};PreloadFile2.prototype.advancePos=function advancePos(delta){return this._pos+=delta};PreloadFile2.prototype.setPos=function setPos(newPos){return this._pos=newPos};PreloadFile2.prototype.sync=function sync(cb){try{this.syncSync();cb()}catch(e){cb(e)}};PreloadFile2.prototype.syncSync=function syncSync(){throw new ApiError(ErrorCode.ENOTSUP)};PreloadFile2.prototype.close=function close(cb){try{this.closeSync();cb()}catch(e){cb(e)}};PreloadFile2.prototype.closeSync=function closeSync(){throw new ApiError(ErrorCode.ENOTSUP)};PreloadFile2.prototype.stat=function stat(cb){try{cb(null,this._stat.clone())}catch(e){cb(e)}};PreloadFile2.prototype.statSync=function statSync(){return this._stat.clone()};PreloadFile2.prototype.truncate=function truncate(len,cb){try{this.truncateSync(len);if(this._flag.isSynchronous()&&!_fsMock.getRootFS().supportsSynch()){this.sync(cb)}cb()}catch(e){return cb(e)}};PreloadFile2.prototype.truncateSync=function truncateSync(len){this._dirty=true;if(!this._flag.isWriteable()){throw new ApiError(ErrorCode.EPERM,"File not opened with a writeable mode.")}this._stat.mtime=new Date;if(len>this._buffer.length){var buf=Buffer2.alloc(len-this._buffer.length,0);this.writeSync(buf,0,buf.length,this._buffer.length);if(this._flag.isSynchronous()&&_fsMock.getRootFS().supportsSynch()){this.syncSync()}return}this._stat.size=len;var newBuff=Buffer2.alloc(len);this._buffer.copy(newBuff,0,0,len);this._buffer=newBuff;if(this._flag.isSynchronous()&&_fsMock.getRootFS().supportsSynch()){this.syncSync()}};PreloadFile2.prototype.write=function write(buffer$$1,offset,length,position,cb){try{cb(null,this.writeSync(buffer$$1,offset,length,position),buffer$$1)}catch(e){cb(e)}};PreloadFile2.prototype.writeSync=function writeSync(buffer$$1,offset,length,position){this._dirty=true;if(position===void 0||position===null){position=this.getPos()}if(!this._flag.isWriteable()){throw new ApiError(ErrorCode.EPERM,"File not opened with a writeable mode.")}var endFp=position+length;if(endFp>this._stat.size){this._stat.size=endFp;if(endFp>this._buffer.length){var newBuff=Buffer2.alloc(endFp);this._buffer.copy(newBuff);this._buffer=newBuff}}var len=buffer$$1.copy(this._buffer,position,offset,offset+length);this._stat.mtime=new Date;if(this._flag.isSynchronous()){this.syncSync();return len}this.setPos(position+len);return len};PreloadFile2.prototype.read=function read(buffer$$1,offset,length,position,cb){try{cb(null,this.readSync(buffer$$1,offset,length,position),buffer$$1)}catch(e){cb(e)}};PreloadFile2.prototype.readSync=function readSync(buffer$$1,offset,length,position){if(!this._flag.isReadable()){throw new ApiError(ErrorCode.EPERM,"File not opened with a readable mode.")}if(position===void 0||position===null){position=this.getPos()}var endRead=position+length;if(endRead>this._stat.size){length=this._stat.size-position}var rv=this._buffer.copy(buffer$$1,offset,position,position+length);this._stat.atime=new Date;this._pos=position+length;return rv};PreloadFile2.prototype.chmod=function chmod(mode,cb){try{this.chmodSync(mode);cb()}catch(e){cb(e)}};PreloadFile2.prototype.chmodSync=function chmodSync(mode){if(!this._fs.supportsProps()){throw new ApiError(ErrorCode.ENOTSUP)}this._dirty=true;this._stat.chmod(mode);this.syncSync()};PreloadFile2.prototype.isDirty=function isDirty(){return this._dirty};PreloadFile2.prototype.resetDirty=function resetDirty(){this._dirty=false};return PreloadFile2}(BaseFile);var NoSyncFile=function(PreloadFile2){function NoSyncFile2(_fs,_path,_flag,_stat,contents){PreloadFile2.call(this,_fs,_path,_flag,_stat,contents)}if(PreloadFile2)NoSyncFile2.__proto__=PreloadFile2;NoSyncFile2.prototype=Object.create(PreloadFile2&&PreloadFile2.prototype);NoSyncFile2.prototype.constructor=NoSyncFile2;NoSyncFile2.prototype.sync=function sync(cb){cb()};NoSyncFile2.prototype.syncSync=function syncSync(){};NoSyncFile2.prototype.close=function close(cb){cb()};NoSyncFile2.prototype.closeSync=function closeSync(){};return NoSyncFile2}(PreloadFile);var MirrorFile=function(PreloadFile$$1){function MirrorFile2(fs4,path$$1,flag,stat,data){PreloadFile$$1.call(this,fs4,path$$1,flag,stat,data)}if(PreloadFile$$1)MirrorFile2.__proto__=PreloadFile$$1;MirrorFile2.prototype=Object.create(PreloadFile$$1&&PreloadFile$$1.prototype);MirrorFile2.prototype.constructor=MirrorFile2;MirrorFile2.prototype.syncSync=function syncSync(){if(this.isDirty()){this._fs._syncSync(this);this.resetDirty()}};MirrorFile2.prototype.closeSync=function closeSync(){this.syncSync()};return MirrorFile2}(PreloadFile);var AsyncMirror=function(SynchronousFileSystem$$1){function AsyncMirror2(sync,async,deprecateMsg){if(deprecateMsg===void 0)deprecateMsg=true;SynchronousFileSystem$$1.call(this);this._queue=[];this._queueRunning=false;this._isInitialized=false;this._initializeCallbacks=[];this._sync=sync;this._async=async;if(!sync.supportsSynch()){throw new Error("The first argument to AsyncMirror needs to be a synchronous file system.")}deprecationMessage(deprecateMsg,AsyncMirror2.Name,{sync:"sync file system instance",async:"async file system instance"})}if(SynchronousFileSystem$$1)AsyncMirror2.__proto__=SynchronousFileSystem$$1;AsyncMirror2.prototype=Object.create(SynchronousFileSystem$$1&&SynchronousFileSystem$$1.prototype);AsyncMirror2.prototype.constructor=AsyncMirror2;AsyncMirror2.Create=function Create(opts,cb){try{var fs4=new AsyncMirror2(opts.sync,opts.async,false);fs4.initialize(function(e){if(e){cb(e)}else{cb(null,fs4)}},false)}catch(e){cb(e)}};AsyncMirror2.isAvailable=function isAvailable(){return true};AsyncMirror2.prototype.getName=function getName(){return AsyncMirror2.Name};AsyncMirror2.prototype._syncSync=function _syncSync(fd){this._sync.writeFileSync(fd.getPath(),fd.getBuffer(),null,FileFlag.getFileFlag("w"),fd.getStats().mode);this.enqueueOp({apiMethod:"writeFile",arguments:[fd.getPath(),fd.getBuffer(),null,fd.getFlag(),fd.getStats().mode]})};AsyncMirror2.prototype.initialize=function initialize3(userCb,deprecateMsg){var this$1=this;if(deprecateMsg===void 0)deprecateMsg=true;if(deprecateMsg){console.warn("[AsyncMirror] AsyncMirror.initialize() is deprecated and will be removed in the next major version. Please use \'AsyncMirror.Create({ sync: (sync file system instance), async: (async file system instance)}, cb)\' to create and initialize AsyncMirror instances.")}var callbacks=this._initializeCallbacks;var end=function(e){this$1._isInitialized=!e;this$1._initializeCallbacks=[];callbacks.forEach(function(cb){return cb(e)})};if(!this._isInitialized){if(callbacks.push(userCb)===1){var copyDirectory=function(p,mode,cb){if(p!=="/"){this$1._sync.mkdirSync(p,mode)}this$1._async.readdir(p,function(err,files){var i2=0;function copyNextFile(err2){if(err2){cb(err2)}else if(i2<files.length){copyItem(path.join(p,files[i2]),copyNextFile);i2++}else{cb()}}if(err){cb(err)}else{copyNextFile()}})},copyFile=function(p,mode,cb){this$1._async.readFile(p,null,FileFlag.getFileFlag("r"),function(err,data){if(err){cb(err)}else{try{this$1._sync.writeFileSync(p,data,null,FileFlag.getFileFlag("w"),mode)}catch(e){err=e}finally{cb(err)}}})},copyItem=function(p,cb){this$1._async.stat(p,false,function(err,stats){if(err){cb(err)}else if(stats.isDirectory()){copyDirectory(p,stats.mode,cb)}else{copyFile(p,stats.mode,cb)}})};copyDirectory("/",0,end)}}else{userCb()}};AsyncMirror2.prototype.isReadOnly=function isReadOnly(){return false};AsyncMirror2.prototype.supportsSynch=function supportsSynch(){return true};AsyncMirror2.prototype.supportsLinks=function supportsLinks(){return false};AsyncMirror2.prototype.supportsProps=function supportsProps(){return this._sync.supportsProps()&&this._async.supportsProps()};AsyncMirror2.prototype.renameSync=function renameSync(oldPath,newPath){this.checkInitialized();this._sync.renameSync(oldPath,newPath);this.enqueueOp({apiMethod:"rename",arguments:[oldPath,newPath]})};AsyncMirror2.prototype.statSync=function statSync(p,isLstat){this.checkInitialized();return this._sync.statSync(p,isLstat)};AsyncMirror2.prototype.openSync=function openSync(p,flag,mode){this.checkInitialized();var fd=this._sync.openSync(p,flag,mode);fd.closeSync();return new MirrorFile(this,p,flag,this._sync.statSync(p,false),this._sync.readFileSync(p,null,FileFlag.getFileFlag("r")))};AsyncMirror2.prototype.unlinkSync=function unlinkSync(p){this.checkInitialized();this._sync.unlinkSync(p);this.enqueueOp({apiMethod:"unlink",arguments:[p]})};AsyncMirror2.prototype.rmdirSync=function rmdirSync(p){this.checkInitialized();this._sync.rmdirSync(p);this.enqueueOp({apiMethod:"rmdir",arguments:[p]})};AsyncMirror2.prototype.mkdirSync=function mkdirSync(p,mode){this.checkInitialized();this._sync.mkdirSync(p,mode);this.enqueueOp({apiMethod:"mkdir",arguments:[p,mode]})};AsyncMirror2.prototype.readdirSync=function readdirSync(p){this.checkInitialized();return this._sync.readdirSync(p)};AsyncMirror2.prototype.existsSync=function existsSync(p){this.checkInitialized();return this._sync.existsSync(p)};AsyncMirror2.prototype.chmodSync=function chmodSync(p,isLchmod,mode){this.checkInitialized();this._sync.chmodSync(p,isLchmod,mode);this.enqueueOp({apiMethod:"chmod",arguments:[p,isLchmod,mode]})};AsyncMirror2.prototype.chownSync=function chownSync(p,isLchown,uid,gid){this.checkInitialized();this._sync.chownSync(p,isLchown,uid,gid);this.enqueueOp({apiMethod:"chown",arguments:[p,isLchown,uid,gid]})};AsyncMirror2.prototype.utimesSync=function utimesSync(p,atime,mtime){this.checkInitialized();this._sync.utimesSync(p,atime,mtime);this.enqueueOp({apiMethod:"utimes",arguments:[p,atime,mtime]})};AsyncMirror2.prototype.checkInitialized=function checkInitialized(){if(!this._isInitialized){throw new ApiError(ErrorCode.EPERM,"AsyncMirrorFS is not initialized. Please initialize AsyncMirrorFS using its initialize() method before using it.")}};AsyncMirror2.prototype.enqueueOp=function enqueueOp(op){var this$1=this;this._queue.push(op);if(!this._queueRunning){this._queueRunning=true;var doNextOp=function(err){if(err){console.error("WARNING: File system has desynchronized. Received following error: "+err+"\\n$")}if(this$1._queue.length>0){var op2=this$1._queue.shift(),args=op2.arguments;args.push(doNextOp);this$1._async[op2.apiMethod].apply(this$1._async,args)}else{this$1._queueRunning=false}};doNextOp()}};return AsyncMirror2}(SynchronousFileSystem);AsyncMirror.Name="AsyncMirror";AsyncMirror.Options={sync:{type:"object",description:"The synchronous file system to mirror the asynchronous file system to."},async:{type:"object",description:"The asynchronous file system to mirror."}};function apply(func,thisArg,args){switch(args.length){case 0:return func.call(thisArg);case 1:return func.call(thisArg,args[0]);case 2:return func.call(thisArg,args[0],args[1]);case 3:return func.call(thisArg,args[0],args[1],args[2])}return func.apply(thisArg,args)}var nativeMax=Math.max;function overRest$1(func,start,transform){start=nativeMax(start===void 0?func.length-1:start,0);return function(){var args=arguments,index=-1,length=nativeMax(args.length-start,0),array=Array(length);while(++index<length){array[index]=args[start+index]}index=-1;var otherArgs=Array(start+1);while(++index<start){otherArgs[index]=args[index]}otherArgs[start]=transform(array);return apply(func,this,otherArgs)}}function identity(value2){return value2}function rest(func,start){return overRest$1(func,start,identity)}var initialParams=function(fn2){return rest(function(args){var callback=args.pop();fn2.call(this,args,callback)})};function applyEach$1(eachfn){return rest(function(fns,args){var go=initialParams(function(args2,callback){var that=this;return eachfn(fns,function(fn2,cb){fn2.apply(that,args2.concat(cb))},callback)});if(args.length){return go.apply(this,args)}else{return go}})}var freeGlobal=typeof global2=="object"&&global2&&global2.Object===Object&&global2;var freeSelf=typeof self=="object"&&self&&self.Object===Object&&self;var root=freeGlobal||freeSelf||Function("return this")();var Symbol$1=root.Symbol;var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;var nativeObjectToString=objectProto.toString;var symToStringTag$1=Symbol$1?Symbol$1.toStringTag:void 0;function getRawTag(value2){var isOwn=hasOwnProperty.call(value2,symToStringTag$1),tag=value2[symToStringTag$1];try{value2[symToStringTag$1]=void 0;var unmasked=true}catch(e){}var result=nativeObjectToString.call(value2);if(unmasked){if(isOwn){value2[symToStringTag$1]=tag}else{delete value2[symToStringTag$1]}}return result}var objectProto$1=Object.prototype;var nativeObjectToString$1=objectProto$1.toString;function objectToString(value2){return nativeObjectToString$1.call(value2)}var nullTag="[object Null]";var undefinedTag="[object Undefined]";var symToStringTag=Symbol$1?Symbol$1.toStringTag:void 0;function baseGetTag(value2){if(value2==null){return value2===void 0?undefinedTag:nullTag}return symToStringTag&&symToStringTag in Object(value2)?getRawTag(value2):objectToString(value2)}function isObject(value2){var type=typeof value2;return value2!=null&&(type=="object"||type=="function")}var asyncTag="[object AsyncFunction]";var funcTag="[object Function]";var genTag="[object GeneratorFunction]";var proxyTag="[object Proxy]";function isFunction(value2){if(!isObject(value2)){return false}var tag=baseGetTag(value2);return tag==funcTag||tag==genTag||tag==asyncTag||tag==proxyTag}var MAX_SAFE_INTEGER=9007199254740991;function isLength(value2){return typeof value2=="number"&&value2>-1&&value2%1==0&&value2<=MAX_SAFE_INTEGER}function isArrayLike(value2){return value2!=null&&isLength(value2.length)&&!isFunction(value2)}var breakLoop={};function noop2(){}function once(fn2){return function(){if(fn2===null){return}var callFn=fn2;fn2=null;callFn.apply(this,arguments)}}var iteratorSymbol=typeof Symbol==="function"&&Symbol.iterator;var getIterator=function(coll){return iteratorSymbol&&coll[iteratorSymbol]&&coll[iteratorSymbol]()};function baseTimes(n,iteratee){var index=-1,result=Array(n);while(++index<n){result[index]=iteratee(index)}return result}function isObjectLike(value2){return value2!=null&&typeof value2=="object"}var argsTag="[object Arguments]";function baseIsArguments(value2){return isObjectLike(value2)&&baseGetTag(value2)==argsTag}var objectProto$3=Object.prototype;var hasOwnProperty$2=objectProto$3.hasOwnProperty;var propertyIsEnumerable=objectProto$3.propertyIsEnumerable;var isArguments=baseIsArguments(function(){return arguments}())?baseIsArguments:function(value2){return isObjectLike(value2)&&hasOwnProperty$2.call(value2,"callee")&&!propertyIsEnumerable.call(value2,"callee")};var isArray=Array.isArray;function stubFalse(){return false}var freeExports=typeof exports2=="object"&&exports2&&!exports2.nodeType&&exports2;var freeModule=freeExports&&typeof module3=="object"&&module3&&!module3.nodeType&&module3;var moduleExports=freeModule&&freeModule.exports===freeExports;var Buffer$1=moduleExports?root.Buffer:void 0;var nativeIsBuffer=Buffer$1?Buffer$1.isBuffer:void 0;var isBuffer=nativeIsBuffer||stubFalse;var MAX_SAFE_INTEGER$1=9007199254740991;var reIsUint=/^(?:0|[1-9]\\d*)$/;function isIndex(value2,length){length=length==null?MAX_SAFE_INTEGER$1:length;return!!length&&(typeof value2=="number"||reIsUint.test(value2))&&(value2>-1&&value2%1==0&&value2<length)}var argsTag$1="[object Arguments]";var arrayTag="[object Array]";var boolTag="[object Boolean]";var dateTag="[object Date]";var errorTag="[object Error]";var funcTag$1="[object Function]";var mapTag="[object Map]";var numberTag="[object Number]";var objectTag="[object Object]";var regexpTag="[object RegExp]";var setTag="[object Set]";var stringTag="[object String]";var weakMapTag="[object WeakMap]";var arrayBufferTag="[object ArrayBuffer]";var dataViewTag="[object DataView]";var float32Tag="[object Float32Array]";var float64Tag="[object Float64Array]";var int8Tag="[object Int8Array]";var int16Tag="[object Int16Array]";var int32Tag="[object Int32Array]";var uint8Tag="[object Uint8Array]";var uint8ClampedTag="[object Uint8ClampedArray]";var uint16Tag="[object Uint16Array]";var uint32Tag="[object Uint32Array]";var typedArrayTags={};typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=true;typedArrayTags[argsTag$1]=typedArrayTags[arrayTag]=typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=typedArrayTags[dataViewTag]=typedArrayTags[dateTag]=typedArrayTags[errorTag]=typedArrayTags[funcTag$1]=typedArrayTags[mapTag]=typedArrayTags[numberTag]=typedArrayTags[objectTag]=typedArrayTags[regexpTag]=typedArrayTags[setTag]=typedArrayTags[stringTag]=typedArrayTags[weakMapTag]=false;function baseIsTypedArray(value2){return isObjectLike(value2)&&isLength(value2.length)&&!!typedArrayTags[baseGetTag(value2)]}function baseUnary(func){return function(value2){return func(value2)}}var freeExports$1=typeof exports2=="object"&&exports2&&!exports2.nodeType&&exports2;var freeModule$1=freeExports$1&&typeof module3=="object"&&module3&&!module3.nodeType&&module3;var moduleExports$1=freeModule$1&&freeModule$1.exports===freeExports$1;var freeProcess=moduleExports$1&&freeGlobal.process;var nodeUtil=function(){try{return freeProcess&&freeProcess.binding&&freeProcess.binding("util")}catch(e){}}();var nodeIsTypedArray=nodeUtil&&nodeUtil.isTypedArray;var isTypedArray3=nodeIsTypedArray?baseUnary(nodeIsTypedArray):baseIsTypedArray;var objectProto$2=Object.prototype;var hasOwnProperty$1=objectProto$2.hasOwnProperty;function arrayLikeKeys(value2,inherited){var isArr=isArray(value2),isArg=!isArr&&isArguments(value2),isBuff=!isArr&&!isArg&&isBuffer(value2),isType=!isArr&&!isArg&&!isBuff&&isTypedArray3(value2),skipIndexes=isArr||isArg||isBuff||isType,result=skipIndexes?baseTimes(value2.length,String):[],length=result.length;for(var key in value2){if((inherited||hasOwnProperty$1.call(value2,key))&&!(skipIndexes&&(key=="length"||isBuff&&(key=="offset"||key=="parent")||isType&&(key=="buffer"||key=="byteLength"||key=="byteOffset")||isIndex(key,length)))){result.push(key)}}return result}var objectProto$5=Object.prototype;function isPrototype(value2){var Ctor=value2&&value2.constructor,proto=typeof Ctor=="function"&&Ctor.prototype||objectProto$5;return value2===proto}function overArg(func,transform){return function(arg){return func(transform(arg))}}var nativeKeys=overArg(Object.keys,Object);var objectProto$4=Object.prototype;var hasOwnProperty$3=objectProto$4.hasOwnProperty;function baseKeys(object){if(!isPrototype(object)){return nativeKeys(object)}var result=[];for(var key in Object(object)){if(hasOwnProperty$3.call(object,key)&&key!="constructor"){result.push(key)}}return result}function keys(object){return isArrayLike(object)?arrayLikeKeys(object):baseKeys(object)}function createArrayIterator(coll){var i2=-1;var len=coll.length;return function next(){return++i2<len?{value:coll[i2],key:i2}:null}}function createES2015Iterator(iterator2){var i2=-1;return function next(){var item=iterator2.next();if(item.done){return null}i2++;return{value:item.value,key:i2}}}function createObjectIterator(obj){var okeys=keys(obj);var i2=-1;var len=okeys.length;return function next(){var key=okeys[++i2];return i2<len?{value:obj[key],key}:null}}function iterator(coll){if(isArrayLike(coll)){return createArrayIterator(coll)}var iterator2=getIterator(coll);return iterator2?createES2015Iterator(iterator2):createObjectIterator(coll)}function onlyOnce(fn2){return function(){if(fn2===null){throw new Error("Callback was already called.")}var callFn=fn2;fn2=null;callFn.apply(this,arguments)}}function _eachOfLimit(limit){return function(obj,iteratee,callback){callback=once(callback||noop2);if(limit<=0||!obj){return callback(null)}var nextElem=iterator(obj);var done=false;var running=0;function iterateeCallback(err,value2){running-=1;if(err){done=true;callback(err)}else if(value2===breakLoop||done&&running<=0){done=true;return callback(null)}else{replenish()}}function replenish(){while(running<limit&&!done){var elem=nextElem();if(elem===null){done=true;if(running<=0){callback(null)}return}running+=1;iteratee(elem.value,elem.key,onlyOnce(iterateeCallback))}}replenish()}}function eachOfLimit(coll,limit,iteratee,callback){_eachOfLimit(limit)(coll,iteratee,callback)}function doLimit(fn2,limit){return function(iterable,iteratee,callback){return fn2(iterable,limit,iteratee,callback)}}function eachOfArrayLike(coll,iteratee,callback){callback=once(callback||noop2);var index=0,completed=0,length=coll.length;if(length===0){callback(null)}function iteratorCallback(err,value2){if(err){callback(err)}else if(++completed===length||value2===breakLoop){callback(null)}}for(;index<length;index++){iteratee(coll[index],index,onlyOnce(iteratorCallback))}}var eachOfGeneric=doLimit(eachOfLimit,Infinity);var eachOf=function(coll,iteratee,callback){var eachOfImplementation=isArrayLike(coll)?eachOfArrayLike:eachOfGeneric;eachOfImplementation(coll,iteratee,callback)};function doParallel(fn2){return function(obj,iteratee,callback){return fn2(eachOf,obj,iteratee,callback)}}function _asyncMap(eachfn,arr,iteratee,callback){callback=callback||noop2;arr=arr||[];var results=[];var counter=0;eachfn(arr,function(value2,_4,callback2){var index=counter++;iteratee(value2,function(err,v3){results[index]=v3;callback2(err)})},function(err){callback(err,results)})}var map=doParallel(_asyncMap);applyEach$1(map);function doParallelLimit(fn2){return function(obj,limit,iteratee,callback){return fn2(_eachOfLimit(limit),obj,iteratee,callback)}}var mapLimit=doParallelLimit(_asyncMap);var mapSeries=doLimit(mapLimit,1);applyEach$1(mapSeries);rest(function(fn2,args){return rest(function(callArgs){return fn2.apply(null,args.concat(callArgs))})});function arrayEach(array,iteratee){var index=-1,length=array==null?0:array.length;while(++index<length){if(iteratee(array[index],index,array)===false){break}}return array}function createBaseFor(fromRight){return function(object,iteratee,keysFunc){var index=-1,iterable=Object(object),props=keysFunc(object),length=props.length;while(length--){var key=props[fromRight?length:++index];if(iteratee(iterable[key],key,iterable)===false){break}}return object}}var baseFor=createBaseFor();function baseForOwn(object,iteratee){return object&&baseFor(object,iteratee,keys)}function baseFindIndex(array,predicate,fromIndex,fromRight){var length=array.length,index=fromIndex+(fromRight?1:-1);while(fromRight?index--:++index<length){if(predicate(array[index],index,array)){return index}}return-1}function baseIsNaN(value2){return value2!==value2}function strictIndexOf(array,value2,fromIndex){var index=fromIndex-1,length=array.length;while(++index<length){if(array[index]===value2){return index}}return-1}function baseIndexOf(array,value2,fromIndex){return value2===value2?strictIndexOf(array,value2,fromIndex):baseFindIndex(array,baseIsNaN,fromIndex)}var rsAstralRange$1="\\\\ud800-\\\\udfff";var rsComboMarksRange$1="\\\\u0300-\\\\u036f";var reComboHalfMarksRange$1="\\\\ufe20-\\\\ufe2f";var rsComboSymbolsRange$1="\\\\u20d0-\\\\u20ff";var rsComboRange$1=rsComboMarksRange$1+reComboHalfMarksRange$1+rsComboSymbolsRange$1;var rsVarRange$1="\\\\ufe0e\\\\ufe0f";var rsAstral="["+rsAstralRange$1+"]";var rsCombo="["+rsComboRange$1+"]";var rsFitz="\\\\ud83c[\\\\udffb-\\\\udfff]";var rsModifier="(?:"+rsCombo+"|"+rsFitz+")";var rsNonAstral="[^"+rsAstralRange$1+"]";var rsRegional="(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}";var rsSurrPair="[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]";var rsZWJ$1="\\\\u200d";var reOptMod=rsModifier+"?";var rsOptVar="["+rsVarRange$1+"]?";var rsOptJoin="(?:"+rsZWJ$1+"(?:"+[rsNonAstral,rsRegional,rsSurrPair].join("|")+")"+rsOptVar+reOptMod+")*";var rsSeq=rsOptVar+reOptMod+rsOptJoin;var rsSymbol="(?:"+[rsNonAstral+rsCombo+"?",rsCombo,rsRegional,rsSurrPair,rsAstral].join("|")+")";var hasSetImmediate=typeof setImmediate==="function"&&setImmediate;var hasNextTick=typeof process2==="object"&&typeof process2.nextTick==="function";function fallback(fn2){setTimeout(fn2,0)}function wrap(defer){return rest(function(fn2,args){defer(function(){fn2.apply(null,args)})})}var _defer;if(hasSetImmediate){_defer=setImmediate}else if(hasNextTick){_defer=process2.nextTick}else{_defer=fallback}wrap(_defer);var eachOfSeries=doLimit(eachOfLimit,1);function reduce(coll,memo,iteratee,callback){callback=once(callback||noop2);eachOfSeries(coll,function(x4,i2,callback2){iteratee(memo,x4,function(err,v3){memo=v3;callback2(err)})},function(err){callback(err,memo)})}var seq=rest(function seq2(functions){return rest(function(args){var that=this;var cb=args[args.length-1];if(typeof cb=="function"){args.pop()}else{cb=noop2}reduce(functions,args,function(newargs,fn2,cb2){fn2.apply(that,newargs.concat(rest(function(err,nextargs){cb2(err,nextargs)})))},function(err,results){cb.apply(that,[err].concat(results))})})});rest(function(args){return seq.apply(null,args.reverse())});rest(function(values){var args=[null].concat(values);return initialParams(function(ignoredArgs,callback){return callback.apply(this,args)})});function consoleFunc(name2){return rest(function(fn2,args){fn2.apply(null,args.concat(rest(function(err,args2){if(typeof console==="object"){if(err){if(console.error){console.error(err)}}else if(console[name2]){arrayEach(args2,function(x4){console[name2](x4)})}}})))})}consoleFunc("dir");function _withoutIndex(iteratee){return function(value2,index,callback){return iteratee(value2,callback)}}function eachLimit(coll,iteratee,callback){eachOf(coll,_withoutIndex(iteratee),callback)}consoleFunc("log");var _defer$1;if(hasNextTick){_defer$1=process2.nextTick}else if(hasSetImmediate){_defer$1=setImmediate}else{_defer$1=fallback}wrap(_defer$1);var nativeCeil=Math.ceil;var nativeMax$1=Math.max;var errorCodeLookup;function constructErrorCodeLookup(){if(errorCodeLookup){return}errorCodeLookup={};errorCodeLookup[Dropbox.ApiError.NETWORK_ERROR]=ErrorCode.EIO;errorCodeLookup[Dropbox.ApiError.INVALID_PARAM]=ErrorCode.EINVAL;errorCodeLookup[Dropbox.ApiError.INVALID_TOKEN]=ErrorCode.EPERM;errorCodeLookup[Dropbox.ApiError.OAUTH_ERROR]=ErrorCode.EPERM;errorCodeLookup[Dropbox.ApiError.NOT_FOUND]=ErrorCode.ENOENT;errorCodeLookup[Dropbox.ApiError.INVALID_METHOD]=ErrorCode.EINVAL;errorCodeLookup[Dropbox.ApiError.NOT_ACCEPTABLE]=ErrorCode.EINVAL;errorCodeLookup[Dropbox.ApiError.CONFLICT]=ErrorCode.EINVAL;errorCodeLookup[Dropbox.ApiError.RATE_LIMITED]=ErrorCode.EBUSY;errorCodeLookup[Dropbox.ApiError.SERVER_ERROR]=ErrorCode.EBUSY;errorCodeLookup[Dropbox.ApiError.OVER_QUOTA]=ErrorCode.ENOSPC}function isFileInfo(cache){return cache&&cache.stat.isFile}function isDirInfo(cache){return cache&&cache.stat.isFolder}function isArrayBuffer(ab){return ab===null||ab===void 0||typeof ab==="object"&&typeof ab["byteLength"]==="number"}var CachedDropboxClient=function CachedDropboxClient2(client){this._cache={};this._client=client};CachedDropboxClient.prototype.readdir=function readdir(p,cb){var this$1=this;var cacheInfo=this.getCachedDirInfo(p);this._wrap(function(interceptCb){if(cacheInfo!==null&&cacheInfo.contents){this$1._client.readdir(p,{contentHash:cacheInfo.stat.contentHash},interceptCb)}else{this$1._client.readdir(p,interceptCb)}},function(err,filenames,stat,folderEntries){if(err){if(err.status===Dropbox.ApiError.NO_CONTENT&&cacheInfo!==null){cb(null,cacheInfo.contents.slice(0))}else{cb(err)}}else{this$1.updateCachedDirInfo(p,stat,filenames.slice(0));folderEntries.forEach(function(entry){this$1.updateCachedInfo(path.join(p,entry.name),entry)});cb(null,filenames)}})};CachedDropboxClient.prototype.remove=function remove(p,cb){var this$1=this;this._wrap(function(interceptCb){this$1._client.remove(p,interceptCb)},function(err,stat){if(!err){this$1.updateCachedInfo(p,stat)}cb(err)})};CachedDropboxClient.prototype.move=function move(src,dest,cb){var this$1=this;this._wrap(function(interceptCb){this$1._client.move(src,dest,interceptCb)},function(err,stat){if(!err){this$1.deleteCachedInfo(src);this$1.updateCachedInfo(dest,stat)}cb(err)})};CachedDropboxClient.prototype.stat=function stat(p,cb){var this$1=this;this._wrap(function(interceptCb){this$1._client.stat(p,interceptCb)},function(err,stat2){if(!err){this$1.updateCachedInfo(p,stat2)}cb(err,stat2)})};CachedDropboxClient.prototype.readFile=function readFile2(p,cb){var this$1=this;var cacheInfo=this.getCachedFileInfo(p);if(cacheInfo!==null&&cacheInfo.contents!==null){this.stat(p,function(error,stat){if(error){cb(error)}else if(stat.contentHash===cacheInfo.stat.contentHash){cb(error,cacheInfo.contents.slice(0),cacheInfo.stat)}else{this$1.readFile(p,cb)}})}else{this._wrap(function(interceptCb){this$1._client.readFile(p,{arrayBuffer:true},interceptCb)},function(err,contents,stat){if(!err){this$1.updateCachedInfo(p,stat,contents.slice(0))}cb(err,contents,stat)})}};CachedDropboxClient.prototype.writeFile=function writeFile2(p,contents,cb){var this$1=this;this._wrap(function(interceptCb){this$1._client.writeFile(p,contents,interceptCb)},function(err,stat){if(!err){this$1.updateCachedInfo(p,stat,contents.slice(0))}cb(err,stat)})};CachedDropboxClient.prototype.mkdir=function mkdir(p,cb){var this$1=this;this._wrap(function(interceptCb){this$1._client.mkdir(p,interceptCb)},function(err,stat){if(!err){this$1.updateCachedInfo(p,stat,[])}cb(err)})};CachedDropboxClient.prototype._wrap=function _wrap(performOp,cb){var numRun=0;var interceptCb=function(error){var timeoutDuration=2;if(error&&3>++numRun){switch(error.status){case Dropbox.ApiError.SERVER_ERROR:case Dropbox.ApiError.NETWORK_ERROR:case Dropbox.ApiError.RATE_LIMITED:setTimeout(function(){performOp(interceptCb)},timeoutDuration*1e3);break;default:cb.apply(null,arguments);break}}else{cb.apply(null,arguments)}};performOp(interceptCb)};CachedDropboxClient.prototype.getCachedInfo=function getCachedInfo(p){return this._cache[p.toLowerCase()]};CachedDropboxClient.prototype.putCachedInfo=function putCachedInfo(p,cache){this._cache[p.toLowerCase()]=cache};CachedDropboxClient.prototype.deleteCachedInfo=function deleteCachedInfo(p){delete this._cache[p.toLowerCase()]};CachedDropboxClient.prototype.getCachedDirInfo=function getCachedDirInfo(p){var info=this.getCachedInfo(p);if(isDirInfo(info)){return info}else{return null}};CachedDropboxClient.prototype.getCachedFileInfo=function getCachedFileInfo(p){var info=this.getCachedInfo(p);if(isFileInfo(info)){return info}else{return null}};CachedDropboxClient.prototype.updateCachedDirInfo=function updateCachedDirInfo(p,stat,contents){if(contents===void 0)contents=null;var cachedInfo=this.getCachedInfo(p);if(stat.contentHash!==null&&(cachedInfo===void 0||cachedInfo.stat.contentHash!==stat.contentHash)){this.putCachedInfo(p,{stat,contents})}};CachedDropboxClient.prototype.updateCachedFileInfo=function updateCachedFileInfo(p,stat,contents){if(contents===void 0)contents=null;var cachedInfo=this.getCachedInfo(p);if(stat.versionTag!==null&&(cachedInfo===void 0||cachedInfo.stat.versionTag!==stat.versionTag)){this.putCachedInfo(p,{stat,contents})}};CachedDropboxClient.prototype.updateCachedInfo=function updateCachedInfo(p,stat,contents){if(contents===void 0)contents=null;if(stat.isFile&&isArrayBuffer(contents)){this.updateCachedFileInfo(p,stat,contents)}else if(stat.isFolder&&Array.isArray(contents)){this.updateCachedDirInfo(p,stat,contents)}};var DropboxFile=function(PreloadFile$$1){function DropboxFile2(_fs,_path,_flag,_stat,contents){PreloadFile$$1.call(this,_fs,_path,_flag,_stat,contents)}if(PreloadFile$$1)DropboxFile2.__proto__=PreloadFile$$1;DropboxFile2.prototype=Object.create(PreloadFile$$1&&PreloadFile$$1.prototype);DropboxFile2.prototype.constructor=DropboxFile2;DropboxFile2.prototype.sync=function sync(cb){var this$1=this;if(this.isDirty()){var buffer$$1=this.getBuffer(),arrayBuffer=buffer2ArrayBuffer(buffer$$1);this._fs._writeFileStrict(this.getPath(),arrayBuffer,function(e){if(!e){this$1.resetDirty()}cb(e)})}else{cb()}};DropboxFile2.prototype.close=function close(cb){this.sync(cb)};return DropboxFile2}(PreloadFile);var DropboxFileSystem=function(BaseFileSystem$$1){function DropboxFileSystem2(client,deprecateMsg){if(deprecateMsg===void 0)deprecateMsg=true;BaseFileSystem$$1.call(this);this._client=new CachedDropboxClient(client);deprecationMessage(deprecateMsg,DropboxFileSystem2.Name,{client:"authenticated dropbox client instance"});constructErrorCodeLookup()}if(BaseFileSystem$$1)DropboxFileSystem2.__proto__=BaseFileSystem$$1;DropboxFileSystem2.prototype=Object.create(BaseFileSystem$$1&&BaseFileSystem$$1.prototype);DropboxFileSystem2.prototype.constructor=DropboxFileSystem2;DropboxFileSystem2.Create=function Create(opts,cb){cb(null,new DropboxFileSystem2(opts.client,false))};DropboxFileSystem2.isAvailable=function isAvailable(){return typeof Dropbox!=="undefined"};DropboxFileSystem2.prototype.getName=function getName(){return DropboxFileSystem2.Name};DropboxFileSystem2.prototype.isReadOnly=function isReadOnly(){return false};DropboxFileSystem2.prototype.supportsSymlinks=function supportsSymlinks(){return false};DropboxFileSystem2.prototype.supportsProps=function supportsProps(){return false};DropboxFileSystem2.prototype.supportsSynch=function supportsSynch(){return false};DropboxFileSystem2.prototype.empty=function empty(mainCb){var this$1=this;this._client.readdir("/",function(error,files){if(error){mainCb(this$1.convert(error,"/"))}else{var deleteFile2=function(file,cb){var p=path.join("/",file);this$1._client.remove(p,function(err){cb(err?this$1.convert(err,p):null)})};var finished=function(err){if(err){mainCb(err)}else{mainCb()}};eachLimit(files,deleteFile2,finished)}})};DropboxFileSystem2.prototype.rename=function rename(oldPath,newPath,cb){var this$1=this;this._client.move(oldPath,newPath,function(error){if(error){this$1._client.stat(newPath,function(error2,stat){if(error2||stat.isFolder){var missingPath=error.response.error.indexOf(oldPath)>-1?oldPath:newPath;cb(this$1.convert(error,missingPath))}else{this$1._client.remove(newPath,function(error22){if(error22){cb(this$1.convert(error22,newPath))}else{this$1.rename(oldPath,newPath,cb)}})}})}else{cb()}})};DropboxFileSystem2.prototype.stat=function stat(path$$1,isLstat,cb){var this$1=this;this._client.stat(path$$1,function(error,stat2){if(error){cb(this$1.convert(error,path$$1))}else if(stat2&&stat2.isRemoved){cb(ApiError.FileError(ErrorCode.ENOENT,path$$1))}else{var stats=new Stats(this$1._statType(stat2),stat2.size);return cb(null,stats)}})};DropboxFileSystem2.prototype.open=function open(path$$1,flags,mode,cb){var this$1=this;this._client.readFile(path$$1,function(error,content,dbStat){if(error){if(flags.isReadable()){cb(this$1.convert(error,path$$1))}else{switch(error.status){case Dropbox.ApiError.NOT_FOUND:var ab=new ArrayBuffer(0);return this$1._writeFileStrict(path$$1,ab,function(error2,stat){if(error2){cb(error2)}else{var file2=this$1._makeFile(path$$1,flags,stat,arrayBuffer2Buffer(ab));cb(null,file2)}});default:return cb(this$1.convert(error,path$$1))}}}else{var buffer$$1;if(content===null){buffer$$1=emptyBuffer()}else{buffer$$1=arrayBuffer2Buffer(content)}var file=this$1._makeFile(path$$1,flags,dbStat,buffer$$1);return cb(null,file)}})};DropboxFileSystem2.prototype._writeFileStrict=function _writeFileStrict(p,data,cb){var this$1=this;var parent=path.dirname(p);this.stat(parent,false,function(error,stat){if(error){cb(ApiError.FileError(ErrorCode.ENOENT,parent))}else{this$1._client.writeFile(p,data,function(error2,stat2){if(error2){cb(this$1.convert(error2,p))}else{cb(null,stat2)}})}})};DropboxFileSystem2.prototype._statType=function _statType(stat){return stat.isFile?FileType.FILE:FileType.DIRECTORY};DropboxFileSystem2.prototype._makeFile=function _makeFile(path$$1,flag,stat,buffer$$1){var type=this._statType(stat);var stats=new Stats(type,stat.size);return new DropboxFile(this,path$$1,flag,stats,buffer$$1)};DropboxFileSystem2.prototype._remove=function _remove(path$$1,cb,isFile){var this$1=this;this._client.stat(path$$1,function(error,stat){if(error){cb(this$1.convert(error,path$$1))}else{if(stat.isFile&&!isFile){cb(ApiError.FileError(ErrorCode.ENOTDIR,path$$1))}else if(!stat.isFile&&isFile){cb(ApiError.FileError(ErrorCode.EISDIR,path$$1))}else{this$1._client.remove(path$$1,function(error2){if(error2){cb(this$1.convert(error2,path$$1))}else{cb(null)}})}}})};DropboxFileSystem2.prototype.unlink=function unlink(path$$1,cb){this._remove(path$$1,cb,true)};DropboxFileSystem2.prototype.rmdir=function rmdir(path$$1,cb){this._remove(path$$1,cb,false)};DropboxFileSystem2.prototype.mkdir=function mkdir(p,mode,cb){var this$1=this;var parent=path.dirname(p);this._client.stat(parent,function(error,stat){if(error){cb(this$1.convert(error,parent))}else{this$1._client.mkdir(p,function(error2){if(error2){cb(ApiError.FileError(ErrorCode.EEXIST,p))}else{cb(null)}})}})};DropboxFileSystem2.prototype.readdir=function readdir(path$$1,cb){var this$1=this;this._client.readdir(path$$1,function(error,files){if(error){return cb(this$1.convert(error))}else{return cb(null,files)}})};DropboxFileSystem2.prototype.convert=function convert(err,path$$1){if(path$$1===void 0)path$$1=null;var errorCode=errorCodeLookup[err.status];if(errorCode===void 0){errorCode=ErrorCode.EIO}if(!path$$1){return new ApiError(errorCode)}else{return ApiError.FileError(errorCode,path$$1)}};return DropboxFileSystem2}(BaseFileSystem);DropboxFileSystem.Name="Dropbox";DropboxFileSystem.Options={client:{type:"object",description:"An *authenticated* Dropbox client. Must be from the 0.10 JS SDK.",validator:function(opt,cb){if(opt.isAuthenticated&&opt.isAuthenticated()){cb()}else{cb(new ApiError(ErrorCode.EINVAL,"\'client\' option must be an authenticated Dropbox client from the v0.10 JS SDK."))}}}};function convertError(e,path$$1){if(path$$1===void 0)path$$1="";var errno=e.errno;var parent=e.node;var paths=[];while(parent){paths.unshift(parent.name);if(parent===parent.parent){break}parent=parent.parent}return new ApiError(errno,ErrorStrings[errno],paths.length>0?"/"+paths.join("/"):path$$1)}var EmscriptenFile=function(BaseFile$$1){function EmscriptenFile2(_fs,_FS,_path,_stream){BaseFile$$1.call(this);this._fs=_fs;this._FS=_FS;this._path=_path;this._stream=_stream}if(BaseFile$$1)EmscriptenFile2.__proto__=BaseFile$$1;EmscriptenFile2.prototype=Object.create(BaseFile$$1&&BaseFile$$1.prototype);EmscriptenFile2.prototype.constructor=EmscriptenFile2;EmscriptenFile2.prototype.getPos=function getPos(){return void 0};EmscriptenFile2.prototype.close=function close(cb){var err=null;try{this.closeSync()}catch(e){err=e}finally{cb(err)}};EmscriptenFile2.prototype.closeSync=function closeSync(){try{this._FS.close(this._stream)}catch(e){throw convertError(e,this._path)}};EmscriptenFile2.prototype.stat=function stat(cb){try{cb(null,this.statSync())}catch(e){cb(e)}};EmscriptenFile2.prototype.statSync=function statSync(){try{return this._fs.statSync(this._path,false)}catch(e){throw convertError(e,this._path)}};EmscriptenFile2.prototype.truncate=function truncate(len,cb){var err=null;try{this.truncateSync(len)}catch(e){err=e}finally{cb(err)}};EmscriptenFile2.prototype.truncateSync=function truncateSync(len){try{this._FS.ftruncate(this._stream.fd,len)}catch(e){throw convertError(e,this._path)}};EmscriptenFile2.prototype.write=function write(buffer$$1,offset,length,position,cb){try{cb(null,this.writeSync(buffer$$1,offset,length,position),buffer$$1)}catch(e){cb(e)}};EmscriptenFile2.prototype.writeSync=function writeSync(buffer$$1,offset,length,position){try{var u8=buffer2Uint8array(buffer$$1);var emPosition=position===null?void 0:position;return this._FS.write(this._stream,u8,offset,length,emPosition)}catch(e){throw convertError(e,this._path)}};EmscriptenFile2.prototype.read=function read(buffer$$1,offset,length,position,cb){try{cb(null,this.readSync(buffer$$1,offset,length,position),buffer$$1)}catch(e){cb(e)}};EmscriptenFile2.prototype.readSync=function readSync(buffer$$1,offset,length,position){try{var u8=buffer2Uint8array(buffer$$1);var emPosition=position===null?void 0:position;return this._FS.read(this._stream,u8,offset,length,emPosition)}catch(e){throw convertError(e,this._path)}};EmscriptenFile2.prototype.sync=function sync(cb){cb()};EmscriptenFile2.prototype.syncSync=function syncSync(){};EmscriptenFile2.prototype.chown=function chown(uid,gid,cb){var err=null;try{this.chownSync(uid,gid)}catch(e){err=e}finally{cb(err)}};EmscriptenFile2.prototype.chownSync=function chownSync(uid,gid){try{this._FS.fchown(this._stream.fd,uid,gid)}catch(e){throw convertError(e,this._path)}};EmscriptenFile2.prototype.chmod=function chmod(mode,cb){var err=null;try{this.chmodSync(mode)}catch(e){err=e}finally{cb(err)}};EmscriptenFile2.prototype.chmodSync=function chmodSync(mode){try{this._FS.fchmod(this._stream.fd,mode)}catch(e){throw convertError(e,this._path)}};EmscriptenFile2.prototype.utimes=function utimes(atime,mtime,cb){var err=null;try{this.utimesSync(atime,mtime)}catch(e){err=e}finally{cb(err)}};EmscriptenFile2.prototype.utimesSync=function utimesSync(atime,mtime){this._fs.utimesSync(this._path,atime,mtime)};return EmscriptenFile2}(BaseFile);var EmscriptenFileSystem=function(SynchronousFileSystem$$1){function EmscriptenFileSystem2(_FS){SynchronousFileSystem$$1.call(this);this._FS=_FS}if(SynchronousFileSystem$$1)EmscriptenFileSystem2.__proto__=SynchronousFileSystem$$1;EmscriptenFileSystem2.prototype=Object.create(SynchronousFileSystem$$1&&SynchronousFileSystem$$1.prototype);EmscriptenFileSystem2.prototype.constructor=EmscriptenFileSystem2;EmscriptenFileSystem2.Create=function Create(opts,cb){cb(null,new EmscriptenFileSystem2(opts.FS))};EmscriptenFileSystem2.isAvailable=function isAvailable(){return true};EmscriptenFileSystem2.prototype.getName=function getName(){return this._FS.DB_NAME()};EmscriptenFileSystem2.prototype.isReadOnly=function isReadOnly(){return false};EmscriptenFileSystem2.prototype.supportsLinks=function supportsLinks(){return true};EmscriptenFileSystem2.prototype.supportsProps=function supportsProps(){return true};EmscriptenFileSystem2.prototype.supportsSynch=function supportsSynch(){return true};EmscriptenFileSystem2.prototype.renameSync=function renameSync(oldPath,newPath){try{this._FS.rename(oldPath,newPath)}catch(e){if(e.errno===ErrorCode.ENOENT){throw convertError(e,this.existsSync(oldPath)?newPath:oldPath)}else{throw convertError(e)}}};EmscriptenFileSystem2.prototype.statSync=function statSync(p,isLstat){try{var stats=isLstat?this._FS.lstat(p):this._FS.stat(p);var itemType=this.modeToFileType(stats.mode);return new Stats(itemType,stats.size,stats.mode,stats.atime,stats.mtime,stats.ctime)}catch(e){throw convertError(e,p)}};EmscriptenFileSystem2.prototype.openSync=function openSync(p,flag,mode){try{var stream=this._FS.open(p,flag.getFlagString(),mode);if(this._FS.isDir(stream.node.mode)){this._FS.close(stream);throw ApiError.EISDIR(p)}return new EmscriptenFile(this,this._FS,p,stream)}catch(e){throw convertError(e,p)}};EmscriptenFileSystem2.prototype.unlinkSync=function unlinkSync(p){try{this._FS.unlink(p)}catch(e){throw convertError(e,p)}};EmscriptenFileSystem2.prototype.rmdirSync=function rmdirSync(p){try{this._FS.rmdir(p)}catch(e){throw convertError(e,p)}};EmscriptenFileSystem2.prototype.mkdirSync=function mkdirSync(p,mode){try{this._FS.mkdir(p,mode)}catch(e){throw convertError(e,p)}};EmscriptenFileSystem2.prototype.readdirSync=function readdirSync(p){try{return this._FS.readdir(p).filter(function(p2){return p2!=="."&&p2!==".."})}catch(e){throw convertError(e,p)}};EmscriptenFileSystem2.prototype.truncateSync=function truncateSync(p,len){try{this._FS.truncate(p,len)}catch(e){throw convertError(e,p)}};EmscriptenFileSystem2.prototype.readFileSync=function readFileSync(p,encoding,flag){try{var data=this._FS.readFile(p,{flags:flag.getFlagString()});var buff=uint8Array2Buffer(data);if(encoding){return buff.toString(encoding)}else{return buff}}catch(e){throw convertError(e,p)}};EmscriptenFileSystem2.prototype.writeFileSync=function writeFileSync(p,data,encoding,flag,mode){try{if(encoding){data=Buffer2.from(data,encoding)}var u8=buffer2Uint8array(data);this._FS.writeFile(p,u8,{flags:flag.getFlagString(),encoding:"binary"});this._FS.chmod(p,mode)}catch(e){throw convertError(e,p)}};EmscriptenFileSystem2.prototype.chmodSync=function chmodSync(p,isLchmod,mode){try{isLchmod?this._FS.lchmod(p,mode):this._FS.chmod(p,mode)}catch(e){throw convertError(e,p)}};EmscriptenFileSystem2.prototype.chownSync=function chownSync(p,isLchown,uid,gid){try{isLchown?this._FS.lchown(p,uid,gid):this._FS.chown(p,uid,gid)}catch(e){throw convertError(e,p)}};EmscriptenFileSystem2.prototype.symlinkSync=function symlinkSync(srcpath,dstpath,type){try{this._FS.symlink(srcpath,dstpath)}catch(e){throw convertError(e)}};EmscriptenFileSystem2.prototype.readlinkSync=function readlinkSync(p){try{return this._FS.readlink(p)}catch(e){throw convertError(e,p)}};EmscriptenFileSystem2.prototype.utimesSync=function utimesSync(p,atime,mtime){try{this._FS.utime(p,atime.getTime(),mtime.getTime())}catch(e){throw convertError(e,p)}};EmscriptenFileSystem2.prototype.modeToFileType=function modeToFileType(mode){if(this._FS.isDir(mode)){return FileType.DIRECTORY}else if(this._FS.isFile(mode)){return FileType.FILE}else if(this._FS.isLink(mode)){return FileType.SYMLINK}else{throw ApiError.EPERM("Invalid mode: "+mode)}};return EmscriptenFileSystem2}(SynchronousFileSystem);EmscriptenFileSystem.Name="EmscriptenFileSystem";EmscriptenFileSystem.Options={FS:{type:"object",description:"The Emscripten file system to use (the `FS` variable)"}};var FolderAdapter=function(BaseFileSystem$$1){function FolderAdapter2(folder,wrapped){BaseFileSystem$$1.call(this);this._folder=folder;this._wrapped=wrapped}if(BaseFileSystem$$1)FolderAdapter2.__proto__=BaseFileSystem$$1;FolderAdapter2.prototype=Object.create(BaseFileSystem$$1&&BaseFileSystem$$1.prototype);FolderAdapter2.prototype.constructor=FolderAdapter2;FolderAdapter2.Create=function Create(opts,cb){cb(null,new FolderAdapter2(opts.folder,opts.wrapped))};FolderAdapter2.isAvailable=function isAvailable(){return true};FolderAdapter2.prototype.initialize=function initialize3(cb){var this$1=this;this._wrapped.exists(this._folder,function(exists2){if(exists2){cb()}else if(this$1._wrapped.isReadOnly()){cb(ApiError.ENOENT(this$1._folder))}else{this$1._wrapped.mkdir(this$1._folder,511,cb)}})};FolderAdapter2.prototype.getName=function getName(){return this._wrapped.getName()};FolderAdapter2.prototype.isReadOnly=function isReadOnly(){return this._wrapped.isReadOnly()};FolderAdapter2.prototype.supportsProps=function supportsProps(){return this._wrapped.supportsProps()};FolderAdapter2.prototype.supportsSynch=function supportsSynch(){return this._wrapped.supportsSynch()};FolderAdapter2.prototype.supportsLinks=function supportsLinks(){return false};return FolderAdapter2}(BaseFileSystem);FolderAdapter.Name="FolderAdapter";FolderAdapter.Options={folder:{type:"string",description:"The folder to use as the root directory"},wrapped:{type:"object",description:"The file system to wrap"}};function translateError(folder,e){if(e!==null&&typeof e==="object"){var err=e;var p=err.path;if(p){p="/"+path.relative(folder,p);err.message=err.message.replace(err.path,p);err.path=p}}return e}function wrapCallback(folder,cb){if(typeof cb==="function"){return function(err){if(arguments.length>0){arguments[0]=translateError(folder,err)}cb.apply(null,arguments)}}else{return cb}}function wrapFunction(name2,wrapFirst,wrapSecond){if(name2.slice(name2.length-4)!=="Sync"){return function(){if(arguments.length>0){if(wrapFirst){arguments[0]=path.join(this._folder,arguments[0])}if(wrapSecond){arguments[1]=path.join(this._folder,arguments[1])}arguments[arguments.length-1]=wrapCallback(this._folder,arguments[arguments.length-1])}return this._wrapped[name2].apply(this._wrapped,arguments)}}else{return function(){try{if(wrapFirst){arguments[0]=path.join(this._folder,arguments[0])}if(wrapSecond){arguments[1]=path.join(this._folder,arguments[1])}return this._wrapped[name2].apply(this._wrapped,arguments)}catch(e){throw translateError(this._folder,e)}}}}["diskSpace","stat","statSync","open","openSync","unlink","unlinkSync","rmdir","rmdirSync","mkdir","mkdirSync","readdir","readdirSync","exists","existsSync","realpath","realpathSync","truncate","truncateSync","readFile","readFileSync","writeFile","writeFileSync","appendFile","appendFileSync","chmod","chmodSync","chown","chownSync","utimes","utimesSync","readlink","readlinkSync"].forEach(function(name2){FolderAdapter.prototype[name2]=wrapFunction(name2,true,false)});["rename","renameSync","link","linkSync","symlink","symlinkSync"].forEach(function(name2){FolderAdapter.prototype[name2]=wrapFunction(name2,true,true)});var toExport;if(typeof window!=="undefined"){toExport=window}else if(typeof self!=="undefined"){toExport=self}else{toExport=global2}var global$1=toExport;function isDirectoryEntry(entry){return entry.isDirectory}var _getFS=global$1.webkitRequestFileSystem||global$1.requestFileSystem||null;function _requestQuota(type,size,success,errorCallback){if(typeof navigator["webkitPersistentStorage"]!=="undefined"){switch(type){case global$1.PERSISTENT:navigator.webkitPersistentStorage.requestQuota(size,success,errorCallback);break;case global$1.TEMPORARY:navigator.webkitTemporaryStorage.requestQuota(size,success,errorCallback);break;default:errorCallback(new TypeError("Invalid storage type: "+type));break}}else{global$1.webkitStorageInfo.requestQuota(type,size,success,errorCallback)}}function _toArray(list2){return Array.prototype.slice.call(list2||[],0)}function convertError$1(err,p,expectedDir){switch(err.name){case"PathExistsError":return ApiError.EEXIST(p);case"QuotaExceededError":return ApiError.FileError(ErrorCode.ENOSPC,p);case"NotFoundError":return ApiError.ENOENT(p);case"SecurityError":return ApiError.FileError(ErrorCode.EACCES,p);case"InvalidModificationError":return ApiError.FileError(ErrorCode.EPERM,p);case"TypeMismatchError":return ApiError.FileError(expectedDir?ErrorCode.ENOTDIR:ErrorCode.EISDIR,p);case"EncodingError":case"InvalidStateError":case"NoModificationAllowedError":default:return ApiError.FileError(ErrorCode.EINVAL,p)}}var HTML5FSFile=function(PreloadFile$$1){function HTML5FSFile2(fs4,entry,path$$1,flag,stat,contents){PreloadFile$$1.call(this,fs4,path$$1,flag,stat,contents);this._entry=entry}if(PreloadFile$$1)HTML5FSFile2.__proto__=PreloadFile$$1;HTML5FSFile2.prototype=Object.create(PreloadFile$$1&&PreloadFile$$1.prototype);HTML5FSFile2.prototype.constructor=HTML5FSFile2;HTML5FSFile2.prototype.sync=function sync(cb){var this$1=this;if(!this.isDirty()){return cb()}this._entry.createWriter(function(writer){var buffer$$1=this$1.getBuffer();var blob=new Blob([buffer2ArrayBuffer(buffer$$1)]);var length=blob.size;writer.onwriteend=function(err){writer.onwriteend=null;writer.onerror=null;writer.truncate(length);this$1.resetDirty();cb()};writer.onerror=function(err){cb(convertError$1(err,this$1.getPath(),false))};writer.write(blob)})};HTML5FSFile2.prototype.close=function close(cb){this.sync(cb)};return HTML5FSFile2}(PreloadFile);var HTML5FS=function(BaseFileSystem$$1){function HTML5FS2(size,type,deprecateMsg){if(size===void 0)size=5;if(type===void 0)type=global$1.PERSISTENT;if(deprecateMsg===void 0)deprecateMsg=true;BaseFileSystem$$1.call(this);this.size=1024*1024*size;this.type=type;deprecationMessage(deprecateMsg,HTML5FS2.Name,{size,type})}if(BaseFileSystem$$1)HTML5FS2.__proto__=BaseFileSystem$$1;HTML5FS2.prototype=Object.create(BaseFileSystem$$1&&BaseFileSystem$$1.prototype);HTML5FS2.prototype.constructor=HTML5FS2;HTML5FS2.Create=function Create(opts,cb){var fs4=new HTML5FS2(opts.size,opts.type,false);fs4.allocate(function(e){return e?cb(e):cb(null,fs4)},false)};HTML5FS2.isAvailable=function isAvailable(){return!!_getFS};HTML5FS2.prototype.getName=function getName(){return HTML5FS2.Name};HTML5FS2.prototype.isReadOnly=function isReadOnly(){return false};HTML5FS2.prototype.supportsSymlinks=function supportsSymlinks(){return false};HTML5FS2.prototype.supportsProps=function supportsProps(){return false};HTML5FS2.prototype.supportsSynch=function supportsSynch(){return false};HTML5FS2.prototype.allocate=function allocate(cb,deprecateMsg){var this$1=this;if(cb===void 0)cb=function(){};if(deprecateMsg===void 0)deprecateMsg=true;if(deprecateMsg){console.warn("[HTML5FS] HTML5FS.allocate() is deprecated and will be removed in the next major release. Please use \'HTML5FS.Create({type: "+this.type+", size: "+this.size+"}, cb)\' to create and allocate HTML5FS instances.")}var success=function(fs4){this$1.fs=fs4;cb()};var error=function(err){cb(convertError$1(err,"/",true))};if(this.type===global$1.PERSISTENT){_requestQuota(this.type,this.size,function(granted){_getFS(this$1.type,granted,success,error)},error)}else{_getFS(this.type,this.size,success,error)}};HTML5FS2.prototype.empty=function empty(mainCb){this._readdir("/",function(err,entries){if(err){console.error("Failed to empty FS");mainCb(err)}else{var finished=function(er2){if(err){console.error("Failed to empty FS");mainCb(err)}else{mainCb()}};var deleteEntry=function(entry,cb){var succ=function(){cb()};var error=function(err2){cb(convertError$1(err2,entry.fullPath,!entry.isDirectory))};if(isDirectoryEntry(entry)){entry.removeRecursively(succ,error)}else{entry.remove(succ,error)}};eachLimit(entries,deleteEntry,finished)}})};HTML5FS2.prototype.rename=function rename(oldPath,newPath,cb){var this$1=this;var semaphore=2;var successCount=0;var root2=this.fs.root;var currentPath=oldPath;var error=function(err){if(--semaphore<=0){cb(convertError$1(err,currentPath,false))}};var success=function(file){if(++successCount===2){return cb(new ApiError(ErrorCode.EINVAL,"Something was identified as both a file and a directory. This should never happen."))}if(oldPath===newPath){return cb()}currentPath=path.dirname(newPath);root2.getDirectory(currentPath,{},function(parentDir){currentPath=path.basename(newPath);file.moveTo(parentDir,currentPath,function(entry){cb()},function(err){if(file.isDirectory){currentPath=newPath;this$1.unlink(newPath,function(e){if(e){error(err)}else{this$1.rename(oldPath,newPath,cb)}})}else{error(err)}})},error)};root2.getFile(oldPath,{},success,error);root2.getDirectory(oldPath,{},success,error)};HTML5FS2.prototype.stat=function stat(path$$1,isLstat,cb){var this$1=this;var opts={create:false};var loadAsFile=function(entry){var fileFromEntry=function(file){var stat2=new Stats(FileType.FILE,file.size);cb(null,stat2)};entry.file(fileFromEntry,failedToLoad)};var loadAsDir=function(dir$$1){var size=4096;var stat2=new Stats(FileType.DIRECTORY,size);cb(null,stat2)};var failedToLoad=function(err){cb(convertError$1(err,path$$1,false))};var failedToLoadAsFile=function(){this$1.fs.root.getDirectory(path$$1,opts,loadAsDir,failedToLoad)};this.fs.root.getFile(path$$1,opts,loadAsFile,failedToLoadAsFile)};HTML5FS2.prototype.open=function open(p,flags,mode,cb){var this$1=this;var error=function(err){if(err.name==="InvalidModificationError"&&flags.isExclusive()){cb(ApiError.EEXIST(p))}else{cb(convertError$1(err,p,false))}};this.fs.root.getFile(p,{create:flags.pathNotExistsAction()===ActionType.CREATE_FILE,exclusive:flags.isExclusive()},function(entry){entry.file(function(file){var reader=new FileReader;reader.onloadend=function(event){var bfsFile=this$1._makeFile(p,entry,flags,file,reader.result);cb(null,bfsFile)};reader.onerror=function(ev2){error(reader.error)};reader.readAsArrayBuffer(file)},error)},error)};HTML5FS2.prototype.unlink=function unlink(path$$1,cb){this._remove(path$$1,cb,true)};HTML5FS2.prototype.rmdir=function rmdir(path$$1,cb){var this$1=this;this.readdir(path$$1,function(e,files){if(e){cb(e)}else if(files.length>0){cb(ApiError.ENOTEMPTY(path$$1))}else{this$1._remove(path$$1,cb,false)}})};HTML5FS2.prototype.mkdir=function mkdir(path$$1,mode,cb){var opts={create:true,exclusive:true};var success=function(dir$$1){cb()};var error=function(err){cb(convertError$1(err,path$$1,true))};this.fs.root.getDirectory(path$$1,opts,success,error)};HTML5FS2.prototype.readdir=function readdir(path$$1,cb){this._readdir(path$$1,function(e,entries){if(entries){var rv=[];for(var i2=0,list2=entries;i2<list2.length;i2+=1){var entry=list2[i2];rv.push(entry.name)}cb(null,rv)}else{return cb(e)}})};HTML5FS2.prototype._makeFile=function _makeFile(path$$1,entry,flag,stat,data){if(data===void 0)data=new ArrayBuffer(0);var stats=new Stats(FileType.FILE,stat.size);var buffer$$1=arrayBuffer2Buffer(data);return new HTML5FSFile(this,entry,path$$1,flag,stats,buffer$$1)};HTML5FS2.prototype._readdir=function _readdir(path$$1,cb){var error=function(err){cb(convertError$1(err,path$$1,true))};this.fs.root.getDirectory(path$$1,{create:false},function(dirEntry){var reader=dirEntry.createReader();var entries=[];var readEntries=function(){reader.readEntries(function(results){if(results.length){entries=entries.concat(_toArray(results));readEntries()}else{cb(null,entries)}},error)};readEntries()},error)};HTML5FS2.prototype._remove=function _remove(path$$1,cb,isFile){var success=function(entry){var succ=function(){cb()};var err=function(err2){cb(convertError$1(err2,path$$1,!isFile))};entry.remove(succ,err)};var error=function(err){cb(convertError$1(err,path$$1,!isFile))};var opts={create:false};if(isFile){this.fs.root.getFile(path$$1,opts,success,error)}else{this.fs.root.getDirectory(path$$1,opts,success,error)}};return HTML5FS2}(BaseFileSystem);HTML5FS.Name="HTML5FS";HTML5FS.Options={size:{type:"number",optional:true,description:"Storage quota to request, in megabytes. Allocated value may be less. Defaults to 5."},type:{type:"number",optional:true,description:"window.PERSISTENT or window.TEMPORARY. Defaults to PERSISTENT."}};var Inode=function Inode2(id,size,mode,atime,mtime,ctime){this.id=id;this.size=size;this.mode=mode;this.atime=atime;this.mtime=mtime;this.ctime=ctime};Inode.fromBuffer=function fromBuffer(buffer$$1){if(buffer$$1===void 0){throw new Error("NO")}return new Inode(buffer$$1.toString("ascii",30),buffer$$1.readUInt32LE(0),buffer$$1.readUInt16LE(4),buffer$$1.readDoubleLE(6),buffer$$1.readDoubleLE(14),buffer$$1.readDoubleLE(22))};Inode.prototype.toStats=function toStats(){return new Stats((this.mode&61440)===FileType.DIRECTORY?FileType.DIRECTORY:FileType.FILE,this.size,this.mode,new Date(this.atime),new Date(this.mtime),new Date(this.ctime))};Inode.prototype.getSize=function getSize(){return 30+this.id.length};Inode.prototype.toBuffer=function toBuffer(buff){if(buff===void 0)buff=Buffer2.alloc(this.getSize());buff.writeUInt32LE(this.size,0);buff.writeUInt16LE(this.mode,4);buff.writeDoubleLE(this.atime,6);buff.writeDoubleLE(this.mtime,14);buff.writeDoubleLE(this.ctime,22);buff.write(this.id,30,this.id.length,"ascii");return buff};Inode.prototype.update=function update(stats){var hasChanged=false;if(this.size!==stats.size){this.size=stats.size;hasChanged=true}if(this.mode!==stats.mode){this.mode=stats.mode;hasChanged=true}var atimeMs=stats.atime.getTime();if(this.atime!==atimeMs){this.atime=atimeMs;hasChanged=true}var mtimeMs=stats.mtime.getTime();if(this.mtime!==mtimeMs){this.mtime=mtimeMs;hasChanged=true}var ctimeMs=stats.ctime.getTime();if(this.ctime!==ctimeMs){this.ctime=ctimeMs;hasChanged=true}return hasChanged};Inode.prototype.isFile=function isFile(){return(this.mode&61440)===FileType.FILE};Inode.prototype.isDirectory=function isDirectory(){return(this.mode&61440)===FileType.DIRECTORY};var ROOT_NODE_ID="/";var emptyDirNode=null;function getEmptyDirNode(){if(emptyDirNode){return emptyDirNode}return emptyDirNode=Buffer2.from("{}")}function GenerateRandomID(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c2){var r=Math.random()*16|0;var v3=c2==="x"?r:r&3|8;return v3.toString(16)})}function noError(e,cb){if(e){cb(e);return false}return true}function noErrorTx(e,tx,cb){if(e){tx.abort(function(){cb(e)});return false}return true}var SimpleSyncRWTransaction=function SimpleSyncRWTransaction2(store){this.store=store;this.originalData={};this.modifiedKeys=[]};SimpleSyncRWTransaction.prototype.get=function get(key){var val=this.store.get(key);this.stashOldValue(key,val);return val};SimpleSyncRWTransaction.prototype.put=function put(key,data,overwrite){this.markModified(key);return this.store.put(key,data,overwrite)};SimpleSyncRWTransaction.prototype.del=function del(key){this.markModified(key);this.store.del(key)};SimpleSyncRWTransaction.prototype.commit=function commit(){};SimpleSyncRWTransaction.prototype.abort=function abort(){var this$1=this;for(var i2=0,list2=this$1.modifiedKeys;i2<list2.length;i2+=1){var key=list2[i2];var value2=this$1.originalData[key];if(!value2){this$1.store.del(key)}else{this$1.store.put(key,value2,true)}}};SimpleSyncRWTransaction.prototype.stashOldValue=function stashOldValue(key,value2){if(!this.originalData.hasOwnProperty(key)){this.originalData[key]=value2}};SimpleSyncRWTransaction.prototype.markModified=function markModified(key){if(this.modifiedKeys.indexOf(key)===-1){this.modifiedKeys.push(key);if(!this.originalData.hasOwnProperty(key)){this.originalData[key]=this.store.get(key)}}};var SyncKeyValueFile=function(PreloadFile$$1){function SyncKeyValueFile2(_fs,_path,_flag,_stat,contents){PreloadFile$$1.call(this,_fs,_path,_flag,_stat,contents)}if(PreloadFile$$1)SyncKeyValueFile2.__proto__=PreloadFile$$1;SyncKeyValueFile2.prototype=Object.create(PreloadFile$$1&&PreloadFile$$1.prototype);SyncKeyValueFile2.prototype.constructor=SyncKeyValueFile2;SyncKeyValueFile2.prototype.syncSync=function syncSync(){if(this.isDirty()){this._fs._syncSync(this.getPath(),this.getBuffer(),this.getStats());this.resetDirty()}};SyncKeyValueFile2.prototype.closeSync=function closeSync(){this.syncSync()};return SyncKeyValueFile2}(PreloadFile);var SyncKeyValueFileSystem=function(SynchronousFileSystem$$1){function SyncKeyValueFileSystem2(options){SynchronousFileSystem$$1.call(this);this.store=options.store;this.makeRootDirectory()}if(SynchronousFileSystem$$1)SyncKeyValueFileSystem2.__proto__=SynchronousFileSystem$$1;SyncKeyValueFileSystem2.prototype=Object.create(SynchronousFileSystem$$1&&SynchronousFileSystem$$1.prototype);SyncKeyValueFileSystem2.prototype.constructor=SyncKeyValueFileSystem2;SyncKeyValueFileSystem2.isAvailable=function isAvailable(){return true};SyncKeyValueFileSystem2.prototype.getName=function getName(){return this.store.name()};SyncKeyValueFileSystem2.prototype.isReadOnly=function isReadOnly(){return false};SyncKeyValueFileSystem2.prototype.supportsSymlinks=function supportsSymlinks(){return false};SyncKeyValueFileSystem2.prototype.supportsProps=function supportsProps(){return false};SyncKeyValueFileSystem2.prototype.supportsSynch=function supportsSynch(){return true};SyncKeyValueFileSystem2.prototype.empty=function empty(){this.store.clear();this.makeRootDirectory()};SyncKeyValueFileSystem2.prototype.renameSync=function renameSync(oldPath,newPath){var tx=this.store.beginTransaction("readwrite"),oldParent=path.dirname(oldPath),oldName=path.basename(oldPath),newParent=path.dirname(newPath),newName=path.basename(newPath),oldDirNode=this.findINode(tx,oldParent),oldDirList=this.getDirListing(tx,oldParent,oldDirNode);if(!oldDirList[oldName]){throw ApiError.ENOENT(oldPath)}var nodeId=oldDirList[oldName];delete oldDirList[oldName];if((newParent+"/").indexOf(oldPath+"/")===0){throw new ApiError(ErrorCode.EBUSY,oldParent)}var newDirNode,newDirList;if(newParent===oldParent){newDirNode=oldDirNode;newDirList=oldDirList}else{newDirNode=this.findINode(tx,newParent);newDirList=this.getDirListing(tx,newParent,newDirNode)}if(newDirList[newName]){var newNameNode=this.getINode(tx,newPath,newDirList[newName]);if(newNameNode.isFile()){try{tx.del(newNameNode.id);tx.del(newDirList[newName])}catch(e){tx.abort();throw e}}else{throw ApiError.EPERM(newPath)}}newDirList[newName]=nodeId;try{tx.put(oldDirNode.id,Buffer2.from(JSON.stringify(oldDirList)),true);tx.put(newDirNode.id,Buffer2.from(JSON.stringify(newDirList)),true)}catch(e){tx.abort();throw e}tx.commit()};SyncKeyValueFileSystem2.prototype.statSync=function statSync(p,isLstat){return this.findINode(this.store.beginTransaction("readonly"),p).toStats()};SyncKeyValueFileSystem2.prototype.createFileSync=function createFileSync(p,flag,mode){var tx=this.store.beginTransaction("readwrite"),data=emptyBuffer(),newFile=this.commitNewFile(tx,p,FileType.FILE,mode,data);return new SyncKeyValueFile(this,p,flag,newFile.toStats(),data)};SyncKeyValueFileSystem2.prototype.openFileSync=function openFileSync(p,flag){var tx=this.store.beginTransaction("readonly"),node=this.findINode(tx,p),data=tx.get(node.id);if(data===void 0){throw ApiError.ENOENT(p)}return new SyncKeyValueFile(this,p,flag,node.toStats(),data)};SyncKeyValueFileSystem2.prototype.unlinkSync=function unlinkSync(p){this.removeEntry(p,false)};SyncKeyValueFileSystem2.prototype.rmdirSync=function rmdirSync(p){if(this.readdirSync(p).length>0){throw ApiError.ENOTEMPTY(p)}else{this.removeEntry(p,true)}};SyncKeyValueFileSystem2.prototype.mkdirSync=function mkdirSync(p,mode){var tx=this.store.beginTransaction("readwrite"),data=Buffer2.from("{}");this.commitNewFile(tx,p,FileType.DIRECTORY,mode,data)};SyncKeyValueFileSystem2.prototype.readdirSync=function readdirSync(p){var tx=this.store.beginTransaction("readonly");return Object.keys(this.getDirListing(tx,p,this.findINode(tx,p)))};SyncKeyValueFileSystem2.prototype._syncSync=function _syncSync(p,data,stats){var tx=this.store.beginTransaction("readwrite"),fileInodeId=this._findINode(tx,path.dirname(p),path.basename(p)),fileInode=this.getINode(tx,p,fileInodeId),inodeChanged=fileInode.update(stats);try{tx.put(fileInode.id,data,true);if(inodeChanged){tx.put(fileInodeId,fileInode.toBuffer(),true)}}catch(e){tx.abort();throw e}tx.commit()};SyncKeyValueFileSystem2.prototype.makeRootDirectory=function makeRootDirectory(){var tx=this.store.beginTransaction("readwrite");if(tx.get(ROOT_NODE_ID)===void 0){var currTime=new Date().getTime(),dirInode=new Inode(GenerateRandomID(),4096,511|FileType.DIRECTORY,currTime,currTime,currTime);tx.put(dirInode.id,getEmptyDirNode(),false);tx.put(ROOT_NODE_ID,dirInode.toBuffer(),false);tx.commit()}};SyncKeyValueFileSystem2.prototype._findINode=function _findINode(tx,parent,filename){var this$1=this;var readDirectory=function(inode){var dirList=this$1.getDirListing(tx,parent,inode);if(dirList[filename]){return dirList[filename]}else{throw ApiError.ENOENT(path.resolve(parent,filename))}};if(parent==="/"){if(filename===""){return ROOT_NODE_ID}else{return readDirectory(this.getINode(tx,parent,ROOT_NODE_ID))}}else{return readDirectory(this.getINode(tx,parent+path.sep+filename,this._findINode(tx,path.dirname(parent),path.basename(parent))))}};SyncKeyValueFileSystem2.prototype.findINode=function findINode(tx,p){return this.getINode(tx,p,this._findINode(tx,path.dirname(p),path.basename(p)))};SyncKeyValueFileSystem2.prototype.getINode=function getINode(tx,p,id){var inode=tx.get(id);if(inode===void 0){throw ApiError.ENOENT(p)}return Inode.fromBuffer(inode)};SyncKeyValueFileSystem2.prototype.getDirListing=function getDirListing(tx,p,inode){if(!inode.isDirectory()){throw ApiError.ENOTDIR(p)}var data=tx.get(inode.id);if(data===void 0){throw ApiError.ENOENT(p)}return JSON.parse(data.toString())};SyncKeyValueFileSystem2.prototype.addNewNode=function addNewNode(tx,data){var retries=0;var currId;while(retries<5){try{currId=GenerateRandomID();tx.put(currId,data,false);return currId}catch(e){}}throw new ApiError(ErrorCode.EIO,"Unable to commit data to key-value store.")};SyncKeyValueFileSystem2.prototype.commitNewFile=function commitNewFile(tx,p,type,mode,data){var parentDir=path.dirname(p),fname=path.basename(p),parentNode=this.findINode(tx,parentDir),dirListing=this.getDirListing(tx,parentDir,parentNode),currTime=new Date().getTime();if(p==="/"){throw ApiError.EEXIST(p)}if(dirListing[fname]){throw ApiError.EEXIST(p)}var fileNode;try{var dataId=this.addNewNode(tx,data);fileNode=new Inode(dataId,data.length,mode|type,currTime,currTime,currTime);var fileNodeId=this.addNewNode(tx,fileNode.toBuffer());dirListing[fname]=fileNodeId;tx.put(parentNode.id,Buffer2.from(JSON.stringify(dirListing)),true)}catch(e){tx.abort();throw e}tx.commit();return fileNode};SyncKeyValueFileSystem2.prototype.removeEntry=function removeEntry(p,isDir){var tx=this.store.beginTransaction("readwrite"),parent=path.dirname(p),parentNode=this.findINode(tx,parent),parentListing=this.getDirListing(tx,parent,parentNode),fileName=path.basename(p);if(!parentListing[fileName]){throw ApiError.ENOENT(p)}var fileNodeId=parentListing[fileName];delete parentListing[fileName];var fileNode=this.getINode(tx,p,fileNodeId);if(!isDir&&fileNode.isDirectory()){throw ApiError.EISDIR(p)}else if(isDir&&!fileNode.isDirectory()){throw ApiError.ENOTDIR(p)}try{tx.del(fileNode.id);tx.del(fileNodeId);tx.put(parentNode.id,Buffer2.from(JSON.stringify(parentListing)),true)}catch(e){tx.abort();throw e}tx.commit()};return SyncKeyValueFileSystem2}(SynchronousFileSystem);var AsyncKeyValueFile=function(PreloadFile$$1){function AsyncKeyValueFile2(_fs,_path,_flag,_stat,contents){PreloadFile$$1.call(this,_fs,_path,_flag,_stat,contents)}if(PreloadFile$$1)AsyncKeyValueFile2.__proto__=PreloadFile$$1;AsyncKeyValueFile2.prototype=Object.create(PreloadFile$$1&&PreloadFile$$1.prototype);AsyncKeyValueFile2.prototype.constructor=AsyncKeyValueFile2;AsyncKeyValueFile2.prototype.sync=function sync(cb){var this$1=this;if(this.isDirty()){this._fs._sync(this.getPath(),this.getBuffer(),this.getStats(),function(e){if(!e){this$1.resetDirty()}cb(e)})}else{cb()}};AsyncKeyValueFile2.prototype.close=function close(cb){this.sync(cb)};return AsyncKeyValueFile2}(PreloadFile);var AsyncKeyValueFileSystem=function(BaseFileSystem$$1){function AsyncKeyValueFileSystem2(){BaseFileSystem$$1.apply(this,arguments)}if(BaseFileSystem$$1)AsyncKeyValueFileSystem2.__proto__=BaseFileSystem$$1;AsyncKeyValueFileSystem2.prototype=Object.create(BaseFileSystem$$1&&BaseFileSystem$$1.prototype);AsyncKeyValueFileSystem2.prototype.constructor=AsyncKeyValueFileSystem2;AsyncKeyValueFileSystem2.isAvailable=function isAvailable(){return true};AsyncKeyValueFileSystem2.prototype.init=function init(store,cb){this.store=store;this.makeRootDirectory(cb)};AsyncKeyValueFileSystem2.prototype.getName=function getName(){return this.store.name()};AsyncKeyValueFileSystem2.prototype.isReadOnly=function isReadOnly(){return false};AsyncKeyValueFileSystem2.prototype.supportsSymlinks=function supportsSymlinks(){return false};AsyncKeyValueFileSystem2.prototype.supportsProps=function supportsProps(){return false};AsyncKeyValueFileSystem2.prototype.supportsSynch=function supportsSynch(){return false};AsyncKeyValueFileSystem2.prototype.empty=function empty(cb){var this$1=this;this.store.clear(function(e){if(noError(e,cb)){this$1.makeRootDirectory(cb)}})};AsyncKeyValueFileSystem2.prototype.rename=function rename(oldPath,newPath,cb){var this$1=this;var tx=this.store.beginTransaction("readwrite");var oldParent=path.dirname(oldPath),oldName=path.basename(oldPath);var newParent=path.dirname(newPath),newName=path.basename(newPath);var inodes={};var lists={};var errorOccurred=false;if((newParent+"/").indexOf(oldPath+"/")===0){return cb(new ApiError(ErrorCode.EBUSY,oldParent))}var theOleSwitcharoo=function(){if(errorOccurred||!lists.hasOwnProperty(oldParent)||!lists.hasOwnProperty(newParent)){return}var oldParentList=lists[oldParent],oldParentINode=inodes[oldParent],newParentList=lists[newParent],newParentINode=inodes[newParent];if(!oldParentList[oldName]){cb(ApiError.ENOENT(oldPath))}else{var fileId=oldParentList[oldName];delete oldParentList[oldName];var completeRename=function(){newParentList[newName]=fileId;tx.put(oldParentINode.id,Buffer2.from(JSON.stringify(oldParentList)),true,function(e){if(noErrorTx(e,tx,cb)){if(oldParent===newParent){tx.commit(cb)}else{tx.put(newParentINode.id,Buffer2.from(JSON.stringify(newParentList)),true,function(e2){if(noErrorTx(e2,tx,cb)){tx.commit(cb)}})}}})};if(newParentList[newName]){this$1.getINode(tx,newPath,newParentList[newName],function(e,inode){if(noErrorTx(e,tx,cb)){if(inode.isFile()){tx.del(inode.id,function(e2){if(noErrorTx(e2,tx,cb)){tx.del(newParentList[newName],function(e3){if(noErrorTx(e3,tx,cb)){completeRename()}})}})}else{tx.abort(function(e2){cb(ApiError.EPERM(newPath))})}}})}else{completeRename()}}};var processInodeAndListings=function(p){this$1.findINodeAndDirListing(tx,p,function(e,node,dirList){if(e){if(!errorOccurred){errorOccurred=true;tx.abort(function(){cb(e)})}}else{inodes[p]=node;lists[p]=dirList;theOleSwitcharoo()}})};processInodeAndListings(oldParent);if(oldParent!==newParent){processInodeAndListings(newParent)}};AsyncKeyValueFileSystem2.prototype.stat=function stat(p,isLstat,cb){var tx=this.store.beginTransaction("readonly");this.findINode(tx,p,function(e,inode){if(noError(e,cb)){cb(null,inode.toStats())}})};AsyncKeyValueFileSystem2.prototype.createFile=function createFile(p,flag,mode,cb){var this$1=this;var tx=this.store.beginTransaction("readwrite"),data=emptyBuffer();this.commitNewFile(tx,p,FileType.FILE,mode,data,function(e,newFile){if(noError(e,cb)){cb(null,new AsyncKeyValueFile(this$1,p,flag,newFile.toStats(),data))}})};AsyncKeyValueFileSystem2.prototype.openFile=function openFile(p,flag,cb){var this$1=this;var tx=this.store.beginTransaction("readonly");this.findINode(tx,p,function(e,inode){if(noError(e,cb)){tx.get(inode.id,function(e2,data){if(noError(e2,cb)){if(data===void 0){cb(ApiError.ENOENT(p))}else{cb(null,new AsyncKeyValueFile(this$1,p,flag,inode.toStats(),data))}}})}})};AsyncKeyValueFileSystem2.prototype.unlink=function unlink(p,cb){this.removeEntry(p,false,cb)};AsyncKeyValueFileSystem2.prototype.rmdir=function rmdir(p,cb){var this$1=this;this.readdir(p,function(err,files){if(err){cb(err)}else if(files.length>0){cb(ApiError.ENOTEMPTY(p))}else{this$1.removeEntry(p,true,cb)}})};AsyncKeyValueFileSystem2.prototype.mkdir=function mkdir(p,mode,cb){var tx=this.store.beginTransaction("readwrite"),data=Buffer2.from("{}");this.commitNewFile(tx,p,FileType.DIRECTORY,mode,data,cb)};AsyncKeyValueFileSystem2.prototype.readdir=function readdir(p,cb){var this$1=this;var tx=this.store.beginTransaction("readonly");this.findINode(tx,p,function(e,inode){if(noError(e,cb)){this$1.getDirListing(tx,p,inode,function(e2,dirListing){if(noError(e2,cb)){cb(null,Object.keys(dirListing))}})}})};AsyncKeyValueFileSystem2.prototype._sync=function _sync(p,data,stats,cb){var this$1=this;var tx=this.store.beginTransaction("readwrite");this._findINode(tx,path.dirname(p),path.basename(p),function(e,fileInodeId){if(noErrorTx(e,tx,cb)){this$1.getINode(tx,p,fileInodeId,function(e2,fileInode){if(noErrorTx(e2,tx,cb)){var inodeChanged=fileInode.update(stats);tx.put(fileInode.id,data,true,function(e3){if(noErrorTx(e3,tx,cb)){if(inodeChanged){tx.put(fileInodeId,fileInode.toBuffer(),true,function(e4){if(noErrorTx(e4,tx,cb)){tx.commit(cb)}})}else{tx.commit(cb)}}})}})}})};AsyncKeyValueFileSystem2.prototype.makeRootDirectory=function makeRootDirectory(cb){var tx=this.store.beginTransaction("readwrite");tx.get(ROOT_NODE_ID,function(e,data){if(e||data===void 0){var currTime=new Date().getTime(),dirInode=new Inode(GenerateRandomID(),4096,511|FileType.DIRECTORY,currTime,currTime,currTime);tx.put(dirInode.id,getEmptyDirNode(),false,function(e2){if(noErrorTx(e2,tx,cb)){tx.put(ROOT_NODE_ID,dirInode.toBuffer(),false,function(e3){if(e3){tx.abort(function(){cb(e3)})}else{tx.commit(cb)}})}})}else{tx.commit(cb)}})};AsyncKeyValueFileSystem2.prototype._findINode=function _findINode(tx,parent,filename,cb){var this$1=this;var handleDirectoryListings=function(e,inode,dirList){if(e){cb(e)}else if(dirList[filename]){cb(null,dirList[filename])}else{cb(ApiError.ENOENT(path.resolve(parent,filename)))}};if(parent==="/"){if(filename===""){cb(null,ROOT_NODE_ID)}else{this.getINode(tx,parent,ROOT_NODE_ID,function(e,inode){if(noError(e,cb)){this$1.getDirListing(tx,parent,inode,function(e2,dirList){handleDirectoryListings(e2,inode,dirList)})}})}}else{this.findINodeAndDirListing(tx,parent,handleDirectoryListings)}};AsyncKeyValueFileSystem2.prototype.findINode=function findINode(tx,p,cb){var this$1=this;this._findINode(tx,path.dirname(p),path.basename(p),function(e,id){if(noError(e,cb)){this$1.getINode(tx,p,id,cb)}})};AsyncKeyValueFileSystem2.prototype.getINode=function getINode(tx,p,id,cb){tx.get(id,function(e,data){if(noError(e,cb)){if(data===void 0){cb(ApiError.ENOENT(p))}else{cb(null,Inode.fromBuffer(data))}}})};AsyncKeyValueFileSystem2.prototype.getDirListing=function getDirListing(tx,p,inode,cb){if(!inode.isDirectory()){cb(ApiError.ENOTDIR(p))}else{tx.get(inode.id,function(e,data){if(noError(e,cb)){try{cb(null,JSON.parse(data.toString()))}catch(e2){cb(ApiError.ENOENT(p))}}})}};AsyncKeyValueFileSystem2.prototype.findINodeAndDirListing=function findINodeAndDirListing(tx,p,cb){var this$1=this;this.findINode(tx,p,function(e,inode){if(noError(e,cb)){this$1.getDirListing(tx,p,inode,function(e2,listing){if(noError(e2,cb)){cb(null,inode,listing)}})}})};AsyncKeyValueFileSystem2.prototype.addNewNode=function addNewNode(tx,data,cb){var retries=0,currId;var reroll=function(){if(++retries===5){cb(new ApiError(ErrorCode.EIO,"Unable to commit data to key-value store."))}else{currId=GenerateRandomID();tx.put(currId,data,false,function(e,committed){if(e||!committed){reroll()}else{cb(null,currId)}})}};reroll()};AsyncKeyValueFileSystem2.prototype.commitNewFile=function commitNewFile(tx,p,type,mode,data,cb){var this$1=this;var parentDir=path.dirname(p),fname=path.basename(p),currTime=new Date().getTime();if(p==="/"){return cb(ApiError.EEXIST(p))}this.findINodeAndDirListing(tx,parentDir,function(e,parentNode,dirListing){if(noErrorTx(e,tx,cb)){if(dirListing[fname]){tx.abort(function(){cb(ApiError.EEXIST(p))})}else{this$1.addNewNode(tx,data,function(e2,dataId){if(noErrorTx(e2,tx,cb)){var fileInode=new Inode(dataId,data.length,mode|type,currTime,currTime,currTime);this$1.addNewNode(tx,fileInode.toBuffer(),function(e3,fileInodeId){if(noErrorTx(e3,tx,cb)){dirListing[fname]=fileInodeId;tx.put(parentNode.id,Buffer2.from(JSON.stringify(dirListing)),true,function(e4){if(noErrorTx(e4,tx,cb)){tx.commit(function(e5){if(noErrorTx(e5,tx,cb)){cb(null,fileInode)}})}})}})}})}}})};AsyncKeyValueFileSystem2.prototype.removeEntry=function removeEntry(p,isDir,cb){var this$1=this;var tx=this.store.beginTransaction("readwrite"),parent=path.dirname(p),fileName=path.basename(p);this.findINodeAndDirListing(tx,parent,function(e,parentNode,parentListing){if(noErrorTx(e,tx,cb)){if(!parentListing[fileName]){tx.abort(function(){cb(ApiError.ENOENT(p))})}else{var fileNodeId=parentListing[fileName];delete parentListing[fileName];this$1.getINode(tx,p,fileNodeId,function(e2,fileNode){if(noErrorTx(e2,tx,cb)){if(!isDir&&fileNode.isDirectory()){tx.abort(function(){cb(ApiError.EISDIR(p))})}else if(isDir&&!fileNode.isDirectory()){tx.abort(function(){cb(ApiError.ENOTDIR(p))})}else{tx.del(fileNode.id,function(e3){if(noErrorTx(e3,tx,cb)){tx.del(fileNodeId,function(e4){if(noErrorTx(e4,tx,cb)){tx.put(parentNode.id,Buffer2.from(JSON.stringify(parentListing)),true,function(e5){if(noErrorTx(e5,tx,cb)){tx.commit(cb)}})}})}})}}})}}})};return AsyncKeyValueFileSystem2}(BaseFileSystem);var InMemoryStore=function InMemoryStore2(){this.store={}};InMemoryStore.prototype.name=function name2(){return InMemoryFileSystem.Name};InMemoryStore.prototype.clear=function clear(){this.store={}};InMemoryStore.prototype.beginTransaction=function beginTransaction(type){return new SimpleSyncRWTransaction(this)};InMemoryStore.prototype.get=function get(key){return this.store[key]};InMemoryStore.prototype.put=function put(key,data,overwrite){if(!overwrite&&this.store.hasOwnProperty(key)){return false}this.store[key]=data;return true};InMemoryStore.prototype.del=function del(key){delete this.store[key]};var InMemoryFileSystem=function(SyncKeyValueFileSystem$$1){function InMemoryFileSystem2(){SyncKeyValueFileSystem$$1.call(this,{store:new InMemoryStore})}if(SyncKeyValueFileSystem$$1)InMemoryFileSystem2.__proto__=SyncKeyValueFileSystem$$1;InMemoryFileSystem2.prototype=Object.create(SyncKeyValueFileSystem$$1&&SyncKeyValueFileSystem$$1.prototype);InMemoryFileSystem2.prototype.constructor=InMemoryFileSystem2;InMemoryFileSystem2.Create=function Create(options,cb){cb(null,new InMemoryFileSystem2)};return InMemoryFileSystem2}(SyncKeyValueFileSystem);InMemoryFileSystem.Name="InMemory";InMemoryFileSystem.Options={};var indexedDB=global$1.indexedDB||global$1.mozIndexedDB||global$1.webkitIndexedDB||global$1.msIndexedDB;function convertError$2(e,message){if(message===void 0)message=e.toString();switch(e.name){case"NotFoundError":return new ApiError(ErrorCode.ENOENT,message);case"QuotaExceededError":return new ApiError(ErrorCode.ENOSPC,message);default:return new ApiError(ErrorCode.EIO,message)}}function onErrorHandler(cb,code,message){if(code===void 0)code=ErrorCode.EIO;if(message===void 0)message=null;return function(e){e.preventDefault();cb(new ApiError(code,message!==null?message:void 0))}}var IndexedDBROTransaction=function IndexedDBROTransaction2(tx,store){this.tx=tx;this.store=store};IndexedDBROTransaction.prototype.get=function get(key,cb){try{var r=this.store.get(key);r.onerror=onErrorHandler(cb);r.onsuccess=function(event){var result=event.target.result;if(result===void 0){cb(null,result)}else{cb(null,arrayBuffer2Buffer(result))}}}catch(e){cb(convertError$2(e))}};var IndexedDBRWTransaction=function(IndexedDBROTransaction2){function IndexedDBRWTransaction2(tx,store){IndexedDBROTransaction2.call(this,tx,store)}if(IndexedDBROTransaction2)IndexedDBRWTransaction2.__proto__=IndexedDBROTransaction2;IndexedDBRWTransaction2.prototype=Object.create(IndexedDBROTransaction2&&IndexedDBROTransaction2.prototype);IndexedDBRWTransaction2.prototype.constructor=IndexedDBRWTransaction2;IndexedDBRWTransaction2.prototype.put=function put(key,data,overwrite,cb){try{var arraybuffer=buffer2ArrayBuffer(data);var r;if(overwrite){r=this.store.put(arraybuffer,key)}else{r=this.store.add(arraybuffer,key)}r.onerror=onErrorHandler(cb);r.onsuccess=function(event){cb(null,true)}}catch(e){cb(convertError$2(e))}};IndexedDBRWTransaction2.prototype.del=function del(key,cb){try{var r=this.store["delete"](key);r.onerror=onErrorHandler(cb);r.onsuccess=function(event){cb()}}catch(e){cb(convertError$2(e))}};IndexedDBRWTransaction2.prototype.commit=function commit(cb){setTimeout(cb,0)};IndexedDBRWTransaction2.prototype.abort=function abort(cb){var _e3=null;try{this.tx.abort()}catch(e){_e3=convertError$2(e)}finally{cb(_e3)}};return IndexedDBRWTransaction2}(IndexedDBROTransaction);var IndexedDBStore=function IndexedDBStore2(cb,storeName){var this$1=this;if(storeName===void 0)storeName="browserfs";this.storeName=storeName;var openReq=indexedDB.open(this.storeName,1);openReq.onupgradeneeded=function(event){var db=event.target.result;if(db.objectStoreNames.contains(this$1.storeName)){db.deleteObjectStore(this$1.storeName)}db.createObjectStore(this$1.storeName)};openReq.onsuccess=function(event){this$1.db=event.target.result;cb(null,this$1)};openReq.onerror=onErrorHandler(cb,ErrorCode.EACCES)};IndexedDBStore.prototype.name=function name2(){return IndexedDBFileSystem.Name+" - "+this.storeName};IndexedDBStore.prototype.clear=function clear(cb){try{var tx=this.db.transaction(this.storeName,"readwrite"),objectStore=tx.objectStore(this.storeName),r=objectStore.clear();r.onsuccess=function(event){setTimeout(cb,0)};r.onerror=onErrorHandler(cb)}catch(e){cb(convertError$2(e))}};IndexedDBStore.prototype.beginTransaction=function beginTransaction(type){if(type===void 0)type="readonly";var tx=this.db.transaction(this.storeName,type),objectStore=tx.objectStore(this.storeName);if(type==="readwrite"){return new IndexedDBRWTransaction(tx,objectStore)}else if(type==="readonly"){return new IndexedDBROTransaction(tx,objectStore)}else{throw new ApiError(ErrorCode.EINVAL,"Invalid transaction type.")}};var IndexedDBFileSystem=function(AsyncKeyValueFileSystem$$1){function IndexedDBFileSystem2(cb,storeName,deprecateMsg){var this$1=this;if(deprecateMsg===void 0)deprecateMsg=true;AsyncKeyValueFileSystem$$1.call(this);this.store=new IndexedDBStore(function(e){if(e){cb(e)}else{this$1.init(this$1.store,function(e2){cb(e2,this$1)})}},storeName);deprecationMessage(deprecateMsg,IndexedDBFileSystem2.Name,{storeName})}if(AsyncKeyValueFileSystem$$1)IndexedDBFileSystem2.__proto__=AsyncKeyValueFileSystem$$1;IndexedDBFileSystem2.prototype=Object.create(AsyncKeyValueFileSystem$$1&&AsyncKeyValueFileSystem$$1.prototype);IndexedDBFileSystem2.prototype.constructor=IndexedDBFileSystem2;IndexedDBFileSystem2.Create=function Create(opts,cb){new IndexedDBFileSystem2(cb,opts.storeName,false)};IndexedDBFileSystem2.isAvailable=function isAvailable(){try{return typeof indexedDB!=="undefined"&&null!==indexedDB.open("__browserfs_test__")}catch(e){return false}};return IndexedDBFileSystem2}(AsyncKeyValueFileSystem);IndexedDBFileSystem.Name="IndexedDB";IndexedDBFileSystem.Options={storeName:{type:"string",optional:true,description:"The name of this file system. You can have multiple IndexedDB file systems operating at once, but each must have a different name."}};var supportsBinaryString=false;var binaryEncoding;try{global$1.localStorage.setItem("__test__",String.fromCharCode(55296));supportsBinaryString=global$1.localStorage.getItem("__test__")===String.fromCharCode(55296)}catch(e){supportsBinaryString=false}binaryEncoding=supportsBinaryString?"binary_string":"binary_string_ie";if(!Buffer2.isEncoding(binaryEncoding)){binaryEncoding="base64"}var LocalStorageStore=function LocalStorageStore2(){};LocalStorageStore.prototype.name=function name2(){return LocalStorageFileSystem.Name};LocalStorageStore.prototype.clear=function clear(){global$1.localStorage.clear()};LocalStorageStore.prototype.beginTransaction=function beginTransaction(type){return new SimpleSyncRWTransaction(this)};LocalStorageStore.prototype.get=function get(key){try{var data=global$1.localStorage.getItem(key);if(data!==null){return Buffer2.from(data,binaryEncoding)}}catch(e){}return void 0};LocalStorageStore.prototype.put=function put(key,data,overwrite){try{if(!overwrite&&global$1.localStorage.getItem(key)!==null){return false}global$1.localStorage.setItem(key,data.toString(binaryEncoding));return true}catch(e){throw new ApiError(ErrorCode.ENOSPC,"LocalStorage is full.")}};LocalStorageStore.prototype.del=function del(key){try{global$1.localStorage.removeItem(key)}catch(e){throw new ApiError(ErrorCode.EIO,"Unable to delete key "+key+": "+e)}};var LocalStorageFileSystem=function(SyncKeyValueFileSystem$$1){function LocalStorageFileSystem2(){SyncKeyValueFileSystem$$1.call(this,{store:new LocalStorageStore})}if(SyncKeyValueFileSystem$$1)LocalStorageFileSystem2.__proto__=SyncKeyValueFileSystem$$1;LocalStorageFileSystem2.prototype=Object.create(SyncKeyValueFileSystem$$1&&SyncKeyValueFileSystem$$1.prototype);LocalStorageFileSystem2.prototype.constructor=LocalStorageFileSystem2;LocalStorageFileSystem2.Create=function Create(options,cb){cb(null,new LocalStorageFileSystem2)};LocalStorageFileSystem2.isAvailable=function isAvailable(){return typeof global$1.localStorage!=="undefined"};return LocalStorageFileSystem2}(SyncKeyValueFileSystem);LocalStorageFileSystem.Name="LocalStorage";LocalStorageFileSystem.Options={};var MountableFileSystem=function(BaseFileSystem$$1){function MountableFileSystem2(){BaseFileSystem$$1.call(this);this.mountList=[];this.mntMap={};this.rootFs=new InMemoryFileSystem}if(BaseFileSystem$$1)MountableFileSystem2.__proto__=BaseFileSystem$$1;MountableFileSystem2.prototype=Object.create(BaseFileSystem$$1&&BaseFileSystem$$1.prototype);MountableFileSystem2.prototype.constructor=MountableFileSystem2;MountableFileSystem2.Create=function Create(opts,cb){var fs4=new MountableFileSystem2;Object.keys(opts).forEach(function(mountPoint){fs4.mount(mountPoint,opts[mountPoint])});cb(null,fs4)};MountableFileSystem2.isAvailable=function isAvailable(){return true};MountableFileSystem2.prototype.mount=function mount(mountPoint,fs4){if(mountPoint[0]!=="/"){mountPoint="/"+mountPoint}mountPoint=path.resolve(mountPoint);if(this.mntMap[mountPoint]){throw new ApiError(ErrorCode.EINVAL,"Mount point "+mountPoint+" is already taken.")}mkdirpSync(mountPoint,511,this.rootFs);this.mntMap[mountPoint]=fs4;this.mountList.push(mountPoint);this.mountList=this.mountList.sort(function(a,b2){return b2.length-a.length})};MountableFileSystem2.prototype.umount=function umount(mountPoint){var this$1=this;if(mountPoint[0]!=="/"){mountPoint="/"+mountPoint}mountPoint=path.resolve(mountPoint);if(!this.mntMap[mountPoint]){throw new ApiError(ErrorCode.EINVAL,"Mount point "+mountPoint+" is already unmounted.")}delete this.mntMap[mountPoint];this.mountList.splice(this.mountList.indexOf(mountPoint),1);while(mountPoint!=="/"){if(this$1.rootFs.readdirSync(mountPoint).length===0){this$1.rootFs.rmdirSync(mountPoint);mountPoint=path.dirname(mountPoint)}else{break}}};MountableFileSystem2.prototype._getFs=function _getFs(path$$1){var this$1=this;var mountList=this.mountList,len=mountList.length;for(var i2=0;i2<len;i2++){var mountPoint=mountList[i2];if(mountPoint.length<=path$$1.length&&path$$1.indexOf(mountPoint)===0){path$$1=path$$1.substr(mountPoint.length>1?mountPoint.length:0);if(path$$1===""){path$$1="/"}return{fs:this$1.mntMap[mountPoint],path:path$$1}}}return{fs:this.rootFs,path:path$$1}};MountableFileSystem2.prototype.getName=function getName(){return MountableFileSystem2.Name};MountableFileSystem2.prototype.diskSpace=function diskSpace(path$$1,cb){cb(0,0)};MountableFileSystem2.prototype.isReadOnly=function isReadOnly(){return false};MountableFileSystem2.prototype.supportsLinks=function supportsLinks(){return false};MountableFileSystem2.prototype.supportsProps=function supportsProps(){return false};MountableFileSystem2.prototype.supportsSynch=function supportsSynch(){return true};MountableFileSystem2.prototype.standardizeError=function standardizeError(err,path$$1,realPath){var index=err.message.indexOf(path$$1);if(index!==-1){err.message=err.message.substr(0,index)+realPath+err.message.substr(index+path$$1.length);err.path=realPath}return err};MountableFileSystem2.prototype.rename=function rename(oldPath,newPath,cb){var this$1=this;var fs1rv=this._getFs(oldPath);var fs2rv=this._getFs(newPath);if(fs1rv.fs===fs2rv.fs){return fs1rv.fs.rename(fs1rv.path,fs2rv.path,function(e){if(e){this$1.standardizeError(this$1.standardizeError(e,fs1rv.path,oldPath),fs2rv.path,newPath)}cb(e)})}return _fsMock.readFile(oldPath,function(err,data){if(err){return cb(err)}_fsMock.writeFile(newPath,data,function(err2){if(err2){return cb(err2)}_fsMock.unlink(oldPath,cb)})})};MountableFileSystem2.prototype.renameSync=function renameSync(oldPath,newPath){var fs1rv=this._getFs(oldPath);var fs2rv=this._getFs(newPath);if(fs1rv.fs===fs2rv.fs){try{return fs1rv.fs.renameSync(fs1rv.path,fs2rv.path)}catch(e){this.standardizeError(this.standardizeError(e,fs1rv.path,oldPath),fs2rv.path,newPath);throw e}}var data=_fsMock.readFileSync(oldPath);_fsMock.writeFileSync(newPath,data);return _fsMock.unlinkSync(oldPath)};MountableFileSystem2.prototype.readdirSync=function readdirSync(p){var fsInfo=this._getFs(p);var rv=null;if(fsInfo.fs!==this.rootFs){try{rv=this.rootFs.readdirSync(p)}catch(e){}}try{var rv2=fsInfo.fs.readdirSync(fsInfo.path);if(rv===null){return rv2}else{return rv2.concat(rv.filter(function(val){return rv2.indexOf(val)===-1}))}}catch(e){if(rv===null){throw this.standardizeError(e,fsInfo.path,p)}else{return rv}}};MountableFileSystem2.prototype.readdir=function readdir(p,cb){var this$1=this;var fsInfo=this._getFs(p);fsInfo.fs.readdir(fsInfo.path,function(err,files){if(fsInfo.fs!==this$1.rootFs){try{var rv=this$1.rootFs.readdirSync(p);if(files){files=files.concat(rv.filter(function(val){return files.indexOf(val)===-1}))}else{files=rv}}catch(e){if(err){return cb(this$1.standardizeError(err,fsInfo.path,p))}}}else if(err){return cb(this$1.standardizeError(err,fsInfo.path,p))}cb(null,files)})};MountableFileSystem2.prototype.rmdirSync=function rmdirSync(p){var fsInfo=this._getFs(p);if(this._containsMountPt(p)){throw ApiError.ENOTEMPTY(p)}else{try{fsInfo.fs.rmdirSync(fsInfo.path)}catch(e){throw this.standardizeError(e,fsInfo.path,p)}}};MountableFileSystem2.prototype.rmdir=function rmdir(p,cb){var this$1=this;var fsInfo=this._getFs(p);if(this._containsMountPt(p)){cb(ApiError.ENOTEMPTY(p))}else{fsInfo.fs.rmdir(fsInfo.path,function(err){cb(err?this$1.standardizeError(err,fsInfo.path,p):null)})}};MountableFileSystem2.prototype._containsMountPt=function _containsMountPt(p){var mountPoints=this.mountList,len=mountPoints.length;for(var i2=0;i2<len;i2++){var pt2=mountPoints[i2];if(pt2.length>=p.length&&pt2.slice(0,p.length)===p){return true}}return false};return MountableFileSystem2}(BaseFileSystem);MountableFileSystem.Name="MountableFileSystem";MountableFileSystem.Options={};function defineFcn(name2,isSync,numArgs){if(isSync){return function(){var args=[],len=arguments.length;while(len--)args[len]=arguments[len];var path$$1=args[0];var rv=this._getFs(path$$1);args[0]=rv.path;try{return rv.fs[name2].apply(rv.fs,args)}catch(e){this.standardizeError(e,rv.path,path$$1);throw e}}}else{return function(){var this$1=this;var args=[],len=arguments.length;while(len--)args[len]=arguments[len];var path$$1=args[0];var rv=this._getFs(path$$1);args[0]=rv.path;if(typeof args[args.length-1]==="function"){var cb=args[args.length-1];args[args.length-1]=function(){var args2=[],len2=arguments.length;while(len2--)args2[len2]=arguments[len2];if(args2.length>0&&args2[0]instanceof ApiError){this$1.standardizeError(args2[0],rv.path,path$$1)}cb.apply(null,args2)}}return rv.fs[name2].apply(rv.fs,args)}}}var fsCmdMap=[["exists","unlink","readlink"],["stat","mkdir","realpath","truncate"],["open","readFile","chmod","utimes"],["chown"],["writeFile","appendFile"]];for(var i=0;i<fsCmdMap.length;i++){var cmds=fsCmdMap[i];for(var i$1=0,list=cmds;i$1<list.length;i$1+=1){var fnName=list[i$1];MountableFileSystem.prototype[fnName]=defineFcn(fnName,false,i+1);MountableFileSystem.prototype[fnName+"Sync"]=defineFcn(fnName+"Sync",true,i+1)}}var bfsSetImmediate;if(typeof setImmediate!=="undefined"){bfsSetImmediate=setImmediate}else{var gScope=global$1;var timeouts=[];var messageName="zero-timeout-message";var canUsePostMessage=function(){if(typeof gScope.importScripts!=="undefined"||!gScope.postMessage){return false}var postMessageIsAsync=true;var oldOnMessage=gScope.onmessage;gScope.onmessage=function(){postMessageIsAsync=false};gScope.postMessage("","*");gScope.onmessage=oldOnMessage;return postMessageIsAsync};if(canUsePostMessage()){bfsSetImmediate=function(fn2){timeouts.push(fn2);gScope.postMessage(messageName,"*")};var handleMessage=function(event){if(event.source===self&&event.data===messageName){if(event.stopPropagation){event.stopPropagation()}else{event.cancelBubble=true}if(timeouts.length>0){var fn2=timeouts.shift();return fn2()}}};if(gScope.addEventListener){gScope.addEventListener("message",handleMessage,true)}else{gScope.attachEvent("onmessage",handleMessage)}}else if(gScope.MessageChannel){var channel=new gScope.MessageChannel;channel.port1.onmessage=function(event){if(timeouts.length>0){return timeouts.shift()()}};bfsSetImmediate=function(fn2){timeouts.push(fn2);channel.port2.postMessage("")}}else{bfsSetImmediate=function(fn2){return setTimeout(fn2,0)}}}var setImmediate$3=bfsSetImmediate;var Mutex=function Mutex2(){this._locked=false;this._waiters=[]};Mutex.prototype.lock=function lock(cb){if(this._locked){this._waiters.push(cb);return}this._locked=true;cb()};Mutex.prototype.unlock=function unlock(){if(!this._locked){throw new Error("unlock of a non-locked mutex")}var next=this._waiters.shift();if(next){setImmediate$3(next);return}this._locked=false};Mutex.prototype.tryLock=function tryLock(){if(this._locked){return false}this._locked=true;return true};Mutex.prototype.isLocked=function isLocked(){return this._locked};var LockedFS=function LockedFS2(fs4){this._fs=fs4;this._mu=new Mutex};LockedFS.prototype.getName=function getName(){return"LockedFS<"+this._fs.getName()+">"};LockedFS.prototype.getFSUnlocked=function getFSUnlocked(){return this._fs};LockedFS.prototype.initialize=function initialize3(cb){this._fs.initialize(cb)};LockedFS.prototype.diskSpace=function diskSpace(p,cb){this._fs.diskSpace(p,cb)};LockedFS.prototype.isReadOnly=function isReadOnly(){return this._fs.isReadOnly()};LockedFS.prototype.supportsLinks=function supportsLinks(){return this._fs.supportsLinks()};LockedFS.prototype.supportsProps=function supportsProps(){return this._fs.supportsProps()};LockedFS.prototype.supportsSynch=function supportsSynch(){return this._fs.supportsSynch()};LockedFS.prototype.rename=function rename(oldPath,newPath,cb){var this$1=this;this._mu.lock(function(){this$1._fs.rename(oldPath,newPath,function(err){this$1._mu.unlock();cb(err)})})};LockedFS.prototype.renameSync=function renameSync(oldPath,newPath){if(this._mu.isLocked()){throw new Error("invalid sync call")}return this._fs.renameSync(oldPath,newPath)};LockedFS.prototype.stat=function stat(p,isLstat,cb){var this$1=this;this._mu.lock(function(){this$1._fs.stat(p,isLstat,function(err,stat2){this$1._mu.unlock();cb(err,stat2)})})};LockedFS.prototype.statSync=function statSync(p,isLstat){if(this._mu.isLocked()){throw new Error("invalid sync call")}return this._fs.statSync(p,isLstat)};LockedFS.prototype.open=function open(p,flag,mode,cb){var this$1=this;this._mu.lock(function(){this$1._fs.open(p,flag,mode,function(err,fd){this$1._mu.unlock();cb(err,fd)})})};LockedFS.prototype.openSync=function openSync(p,flag,mode){if(this._mu.isLocked()){throw new Error("invalid sync call")}return this._fs.openSync(p,flag,mode)};LockedFS.prototype.unlink=function unlink(p,cb){var this$1=this;this._mu.lock(function(){this$1._fs.unlink(p,function(err){this$1._mu.unlock();cb(err)})})};LockedFS.prototype.unlinkSync=function unlinkSync(p){if(this._mu.isLocked()){throw new Error("invalid sync call")}return this._fs.unlinkSync(p)};LockedFS.prototype.rmdir=function rmdir(p,cb){var this$1=this;this._mu.lock(function(){this$1._fs.rmdir(p,function(err){this$1._mu.unlock();cb(err)})})};LockedFS.prototype.rmdirSync=function rmdirSync(p){if(this._mu.isLocked()){throw new Error("invalid sync call")}return this._fs.rmdirSync(p)};LockedFS.prototype.mkdir=function mkdir(p,mode,cb){var this$1=this;this._mu.lock(function(){this$1._fs.mkdir(p,mode,function(err){this$1._mu.unlock();cb(err)})})};LockedFS.prototype.mkdirSync=function mkdirSync(p,mode){if(this._mu.isLocked()){throw new Error("invalid sync call")}return this._fs.mkdirSync(p,mode)};LockedFS.prototype.readdir=function readdir(p,cb){var this$1=this;this._mu.lock(function(){this$1._fs.readdir(p,function(err,files){this$1._mu.unlock();cb(err,files)})})};LockedFS.prototype.readdirSync=function readdirSync(p){if(this._mu.isLocked()){throw new Error("invalid sync call")}return this._fs.readdirSync(p)};LockedFS.prototype.exists=function exists2(p,cb){var this$1=this;this._mu.lock(function(){this$1._fs.exists(p,function(exists3){this$1._mu.unlock();cb(exists3)})})};LockedFS.prototype.existsSync=function existsSync(p){if(this._mu.isLocked()){throw new Error("invalid sync call")}return this._fs.existsSync(p)};LockedFS.prototype.realpath=function realpath(p,cache,cb){var this$1=this;this._mu.lock(function(){this$1._fs.realpath(p,cache,function(err,resolvedPath){this$1._mu.unlock();cb(err,resolvedPath)})})};LockedFS.prototype.realpathSync=function realpathSync(p,cache){if(this._mu.isLocked()){throw new Error("invalid sync call")}return this._fs.realpathSync(p,cache)};LockedFS.prototype.truncate=function truncate(p,len,cb){var this$1=this;this._mu.lock(function(){this$1._fs.truncate(p,len,function(err){this$1._mu.unlock();cb(err)})})};LockedFS.prototype.truncateSync=function truncateSync(p,len){if(this._mu.isLocked()){throw new Error("invalid sync call")}return this._fs.truncateSync(p,len)};LockedFS.prototype.readFile=function readFile2(fname,encoding,flag,cb){var this$1=this;this._mu.lock(function(){this$1._fs.readFile(fname,encoding,flag,function(err,data){this$1._mu.unlock();cb(err,data)})})};LockedFS.prototype.readFileSync=function readFileSync(fname,encoding,flag){if(this._mu.isLocked()){throw new Error("invalid sync call")}return this._fs.readFileSync(fname,encoding,flag)};LockedFS.prototype.writeFile=function writeFile2(fname,data,encoding,flag,mode,cb){var this$1=this;this._mu.lock(function(){this$1._fs.writeFile(fname,data,encoding,flag,mode,function(err){this$1._mu.unlock();cb(err)})})};LockedFS.prototype.writeFileSync=function writeFileSync(fname,data,encoding,flag,mode){if(this._mu.isLocked()){throw new Error("invalid sync call")}return this._fs.writeFileSync(fname,data,encoding,flag,mode)};LockedFS.prototype.appendFile=function appendFile3(fname,data,encoding,flag,mode,cb){var this$1=this;this._mu.lock(function(){this$1._fs.appendFile(fname,data,encoding,flag,mode,function(err){this$1._mu.unlock();cb(err)})})};LockedFS.prototype.appendFileSync=function appendFileSync(fname,data,encoding,flag,mode){if(this._mu.isLocked()){throw new Error("invalid sync call")}return this._fs.appendFileSync(fname,data,encoding,flag,mode)};LockedFS.prototype.chmod=function chmod(p,isLchmod,mode,cb){var this$1=this;this._mu.lock(function(){this$1._fs.chmod(p,isLchmod,mode,function(err){this$1._mu.unlock();cb(err)})})};LockedFS.prototype.chmodSync=function chmodSync(p,isLchmod,mode){if(this._mu.isLocked()){throw new Error("invalid sync call")}return this._fs.chmodSync(p,isLchmod,mode)};LockedFS.prototype.chown=function chown(p,isLchown,uid,gid,cb){var this$1=this;this._mu.lock(function(){this$1._fs.chown(p,isLchown,uid,gid,function(err){this$1._mu.unlock();cb(err)})})};LockedFS.prototype.chownSync=function chownSync(p,isLchown,uid,gid){if(this._mu.isLocked()){throw new Error("invalid sync call")}return this._fs.chownSync(p,isLchown,uid,gid)};LockedFS.prototype.utimes=function utimes(p,atime,mtime,cb){var this$1=this;this._mu.lock(function(){this$1._fs.utimes(p,atime,mtime,function(err){this$1._mu.unlock();cb(err)})})};LockedFS.prototype.utimesSync=function utimesSync(p,atime,mtime){if(this._mu.isLocked()){throw new Error("invalid sync call")}return this._fs.utimesSync(p,atime,mtime)};LockedFS.prototype.link=function link(srcpath,dstpath,cb){var this$1=this;this._mu.lock(function(){this$1._fs.link(srcpath,dstpath,function(err){this$1._mu.unlock();cb(err)})})};LockedFS.prototype.linkSync=function linkSync(srcpath,dstpath){if(this._mu.isLocked()){throw new Error("invalid sync call")}return this._fs.linkSync(srcpath,dstpath)};LockedFS.prototype.symlink=function symlink(srcpath,dstpath,type,cb){var this$1=this;this._mu.lock(function(){this$1._fs.symlink(srcpath,dstpath,type,function(err){this$1._mu.unlock();cb(err)})})};LockedFS.prototype.symlinkSync=function symlinkSync(srcpath,dstpath,type){if(this._mu.isLocked()){throw new Error("invalid sync call")}return this._fs.symlinkSync(srcpath,dstpath,type)};LockedFS.prototype.readlink=function readlink(p,cb){var this$1=this;this._mu.lock(function(){this$1._fs.readlink(p,function(err,linkString){this$1._mu.unlock();cb(err,linkString)})})};LockedFS.prototype.readlinkSync=function readlinkSync(p){if(this._mu.isLocked()){throw new Error("invalid sync call")}return this._fs.readlinkSync(p)};var deletionLogPath="/.deletedFiles.log";function makeModeWritable(mode){return 146|mode}function getFlag(f){return FileFlag.getFileFlag(f)}var OverlayFile=function(PreloadFile$$1){function OverlayFile2(fs4,path$$1,flag,stats,data){PreloadFile$$1.call(this,fs4,path$$1,flag,stats,data)}if(PreloadFile$$1)OverlayFile2.__proto__=PreloadFile$$1;OverlayFile2.prototype=Object.create(PreloadFile$$1&&PreloadFile$$1.prototype);OverlayFile2.prototype.constructor=OverlayFile2;OverlayFile2.prototype.sync=function sync(cb){var this$1=this;if(!this.isDirty()){cb(null);return}this._fs._syncAsync(this,function(err){this$1.resetDirty();cb(err)})};OverlayFile2.prototype.syncSync=function syncSync(){if(this.isDirty()){this._fs._syncSync(this);this.resetDirty()}};OverlayFile2.prototype.close=function close(cb){this.sync(cb)};OverlayFile2.prototype.closeSync=function closeSync(){this.syncSync()};return OverlayFile2}(PreloadFile);var UnlockedOverlayFS=function(BaseFileSystem$$1){function UnlockedOverlayFS2(writable,readable){BaseFileSystem$$1.call(this);this._isInitialized=false;this._initializeCallbacks=[];this._deletedFiles={};this._deleteLog="";this._deleteLogUpdatePending=false;this._deleteLogUpdateNeeded=false;this._deleteLogError=null;this._writable=writable;this._readable=readable;if(this._writable.isReadOnly()){throw new ApiError(ErrorCode.EINVAL,"Writable file system must be writable.")}}if(BaseFileSystem$$1)UnlockedOverlayFS2.__proto__=BaseFileSystem$$1;UnlockedOverlayFS2.prototype=Object.create(BaseFileSystem$$1&&BaseFileSystem$$1.prototype);UnlockedOverlayFS2.prototype.constructor=UnlockedOverlayFS2;UnlockedOverlayFS2.isAvailable=function isAvailable(){return true};UnlockedOverlayFS2.prototype.getOverlayedFileSystems=function getOverlayedFileSystems(){return{readable:this._readable,writable:this._writable}};UnlockedOverlayFS2.prototype._syncAsync=function _syncAsync(file,cb){var this$1=this;this.createParentDirectoriesAsync(file.getPath(),function(err){if(err){return cb(err)}this$1._writable.writeFile(file.getPath(),file.getBuffer(),null,getFlag("w"),file.getStats().mode,cb)})};UnlockedOverlayFS2.prototype._syncSync=function _syncSync(file){this.createParentDirectories(file.getPath());this._writable.writeFileSync(file.getPath(),file.getBuffer(),null,getFlag("w"),file.getStats().mode)};UnlockedOverlayFS2.prototype.getName=function getName(){return OverlayFS.Name};UnlockedOverlayFS2.prototype.initialize=function initialize3(cb){var this$1=this;var callbackArray=this._initializeCallbacks;var end=function(e){this$1._isInitialized=!e;this$1._initializeCallbacks=[];callbackArray.forEach(function(cb2){return cb2(e)})};if(this._isInitialized){return cb()}callbackArray.push(cb);if(callbackArray.length!==1){return}this._writable.readFile(deletionLogPath,"utf8",getFlag("r"),function(err,data){if(err){if(err.errno!==ErrorCode.ENOENT){return end(err)}}else{this$1._deleteLog=data}this$1._reparseDeletionLog();end()})};UnlockedOverlayFS2.prototype.isReadOnly=function isReadOnly(){return false};UnlockedOverlayFS2.prototype.supportsSynch=function supportsSynch(){return this._readable.supportsSynch()&&this._writable.supportsSynch()};UnlockedOverlayFS2.prototype.supportsLinks=function supportsLinks(){return false};UnlockedOverlayFS2.prototype.supportsProps=function supportsProps(){return this._readable.supportsProps()&&this._writable.supportsProps()};UnlockedOverlayFS2.prototype.getDeletionLog=function getDeletionLog(){return this._deleteLog};UnlockedOverlayFS2.prototype.restoreDeletionLog=function restoreDeletionLog(log){this._deleteLog=log;this._reparseDeletionLog();this.updateLog("")};UnlockedOverlayFS2.prototype.rename=function rename(oldPath,newPath,cb){var this$1=this;if(!this.checkInitAsync(cb)||this.checkPathAsync(oldPath,cb)||this.checkPathAsync(newPath,cb)){return}if(oldPath===deletionLogPath||newPath===deletionLogPath){return cb(ApiError.EPERM("Cannot rename deletion log."))}if(oldPath===newPath){return cb()}this.stat(oldPath,false,function(oldErr,oldStats){if(oldErr){return cb(oldErr)}return this$1.stat(newPath,false,function(newErr,newStats){var self2=this$1;function copyDirContents(files){var file=files.shift();if(!file){return cb()}var oldFile=path.resolve(oldPath,file);var newFile=path.resolve(newPath,file);self2.rename(oldFile,newFile,function(err){if(err){return cb(err)}copyDirContents(files)})}var mode=511;if(oldStats.isDirectory()){if(newErr){if(newErr.errno!==ErrorCode.ENOENT){return cb(newErr)}return this$1._writable.exists(oldPath,function(exists2){if(exists2){return this$1._writable.rename(oldPath,newPath,cb)}this$1._writable.mkdir(newPath,mode,function(mkdirErr){if(mkdirErr){return cb(mkdirErr)}this$1._readable.readdir(oldPath,function(err,files){if(err){return cb()}copyDirContents(files)})})})}mode=newStats.mode;if(!newStats.isDirectory()){return cb(ApiError.ENOTDIR(newPath))}this$1.readdir(newPath,function(readdirErr,files){if(files&&files.length){return cb(ApiError.ENOTEMPTY(newPath))}this$1._readable.readdir(oldPath,function(err,files2){if(err){return cb()}copyDirContents(files2)})})}if(newStats&&newStats.isDirectory()){return cb(ApiError.EISDIR(newPath))}this$1.readFile(oldPath,null,getFlag("r"),function(err,data){if(err){return cb(err)}return this$1.writeFile(newPath,data,null,getFlag("w"),oldStats.mode,function(err2){if(err2){return cb(err2)}return this$1.unlink(oldPath,cb)})})})})};UnlockedOverlayFS2.prototype.renameSync=function renameSync(oldPath,newPath){var this$1=this;this.checkInitialized();this.checkPath(oldPath);this.checkPath(newPath);if(oldPath===deletionLogPath||newPath===deletionLogPath){throw ApiError.EPERM("Cannot rename deletion log.")}var oldStats=this.statSync(oldPath,false);if(oldStats.isDirectory()){if(oldPath===newPath){return}var mode=511;if(this.existsSync(newPath)){var stats=this.statSync(newPath,false);mode=stats.mode;if(stats.isDirectory()){if(this.readdirSync(newPath).length>0){throw ApiError.ENOTEMPTY(newPath)}}else{throw ApiError.ENOTDIR(newPath)}}if(this._writable.existsSync(oldPath)){this._writable.renameSync(oldPath,newPath)}else if(!this._writable.existsSync(newPath)){this._writable.mkdirSync(newPath,mode)}if(this._readable.existsSync(oldPath)){this._readable.readdirSync(oldPath).forEach(function(name2){this$1.renameSync(path.resolve(oldPath,name2),path.resolve(newPath,name2))})}}else{if(this.existsSync(newPath)&&this.statSync(newPath,false).isDirectory()){throw ApiError.EISDIR(newPath)}this.writeFileSync(newPath,this.readFileSync(oldPath,null,getFlag("r")),null,getFlag("w"),oldStats.mode)}if(oldPath!==newPath&&this.existsSync(oldPath)){this.unlinkSync(oldPath)}};UnlockedOverlayFS2.prototype.stat=function stat(p,isLstat,cb){var this$1=this;if(!this.checkInitAsync(cb)){return}this._writable.stat(p,isLstat,function(err,stat2){if(err&&err.errno===ErrorCode.ENOENT){if(this$1._deletedFiles[p]){cb(ApiError.ENOENT(p))}this$1._readable.stat(p,isLstat,function(err2,stat3){if(stat3){stat3=stat3.clone();stat3.mode=makeModeWritable(stat3.mode)}cb(err2,stat3)})}else{cb(err,stat2)}})};UnlockedOverlayFS2.prototype.statSync=function statSync(p,isLstat){this.checkInitialized();try{return this._writable.statSync(p,isLstat)}catch(e){if(this._deletedFiles[p]){throw ApiError.ENOENT(p)}var oldStat=this._readable.statSync(p,isLstat).clone();oldStat.mode=makeModeWritable(oldStat.mode);return oldStat}};UnlockedOverlayFS2.prototype.open=function open(p,flag,mode,cb){var this$1=this;if(!this.checkInitAsync(cb)||this.checkPathAsync(p,cb)){return}this.stat(p,false,function(err,stats){if(stats){switch(flag.pathExistsAction()){case ActionType.TRUNCATE_FILE:return this$1.createParentDirectoriesAsync(p,function(err2){if(err2){return cb(err2)}this$1._writable.open(p,flag,mode,cb)});case ActionType.NOP:return this$1._writable.exists(p,function(exists2){if(exists2){this$1._writable.open(p,flag,mode,cb)}else{stats=stats.clone();stats.mode=mode;this$1._readable.readFile(p,null,getFlag("r"),function(readFileErr,data){if(readFileErr){return cb(readFileErr)}if(stats.size===-1){stats.size=data.length}var f=new OverlayFile(this$1,p,flag,stats,data);cb(null,f)})}});default:return cb(ApiError.EEXIST(p))}}else{switch(flag.pathNotExistsAction()){case ActionType.CREATE_FILE:return this$1.createParentDirectoriesAsync(p,function(err2){if(err2){return cb(err2)}return this$1._writable.open(p,flag,mode,cb)});default:return cb(ApiError.ENOENT(p))}}})};UnlockedOverlayFS2.prototype.openSync=function openSync(p,flag,mode){this.checkInitialized();this.checkPath(p);if(p===deletionLogPath){throw ApiError.EPERM("Cannot open deletion log.")}if(this.existsSync(p)){switch(flag.pathExistsAction()){case ActionType.TRUNCATE_FILE:this.createParentDirectories(p);return this._writable.openSync(p,flag,mode);case ActionType.NOP:if(this._writable.existsSync(p)){return this._writable.openSync(p,flag,mode)}else{var buf=this._readable.readFileSync(p,null,getFlag("r"));var stats=this._readable.statSync(p,false).clone();stats.mode=mode;return new OverlayFile(this,p,flag,stats,buf)}default:throw ApiError.EEXIST(p)}}else{switch(flag.pathNotExistsAction()){case ActionType.CREATE_FILE:this.createParentDirectories(p);return this._writable.openSync(p,flag,mode);default:throw ApiError.ENOENT(p)}}};UnlockedOverlayFS2.prototype.unlink=function unlink(p,cb){var this$1=this;if(!this.checkInitAsync(cb)||this.checkPathAsync(p,cb)){return}this.exists(p,function(exists2){if(!exists2){return cb(ApiError.ENOENT(p))}this$1._writable.exists(p,function(writableExists){if(writableExists){return this$1._writable.unlink(p,function(err){if(err){return cb(err)}this$1.exists(p,function(readableExists){if(readableExists){this$1.deletePath(p)}cb(null)})})}else{this$1.deletePath(p);cb(null)}})})};UnlockedOverlayFS2.prototype.unlinkSync=function unlinkSync(p){this.checkInitialized();this.checkPath(p);if(this.existsSync(p)){if(this._writable.existsSync(p)){this._writable.unlinkSync(p)}if(this.existsSync(p)){this.deletePath(p)}}else{throw ApiError.ENOENT(p)}};UnlockedOverlayFS2.prototype.rmdir=function rmdir(p,cb){var this$1=this;if(!this.checkInitAsync(cb)){return}var rmdirLower=function(){this$1.readdir(p,function(err,files){if(err){return cb(err)}if(files.length){return cb(ApiError.ENOTEMPTY(p))}this$1.deletePath(p);cb(null)})};this.exists(p,function(exists2){if(!exists2){return cb(ApiError.ENOENT(p))}this$1._writable.exists(p,function(writableExists){if(writableExists){this$1._writable.rmdir(p,function(err){if(err){return cb(err)}this$1._readable.exists(p,function(readableExists){if(readableExists){rmdirLower()}else{cb()}})})}else{rmdirLower()}})})};UnlockedOverlayFS2.prototype.rmdirSync=function rmdirSync(p){this.checkInitialized();if(this.existsSync(p)){if(this._writable.existsSync(p)){this._writable.rmdirSync(p)}if(this.existsSync(p)){if(this.readdirSync(p).length>0){throw ApiError.ENOTEMPTY(p)}else{this.deletePath(p)}}}else{throw ApiError.ENOENT(p)}};UnlockedOverlayFS2.prototype.mkdir=function mkdir(p,mode,cb){var this$1=this;if(!this.checkInitAsync(cb)){return}this.exists(p,function(exists2){if(exists2){return cb(ApiError.EEXIST(p))}this$1.createParentDirectoriesAsync(p,function(err){if(err){return cb(err)}this$1._writable.mkdir(p,mode,cb)})})};UnlockedOverlayFS2.prototype.mkdirSync=function mkdirSync(p,mode){this.checkInitialized();if(this.existsSync(p)){throw ApiError.EEXIST(p)}else{this.createParentDirectories(p);this._writable.mkdirSync(p,mode)}};UnlockedOverlayFS2.prototype.readdir=function readdir(p,cb){var this$1=this;if(!this.checkInitAsync(cb)){return}this.stat(p,false,function(err,dirStats){if(err){return cb(err)}if(!dirStats.isDirectory()){return cb(ApiError.ENOTDIR(p))}this$1._writable.readdir(p,function(err2,wFiles){if(err2&&err2.code!=="ENOENT"){return cb(err2)}else if(err2||!wFiles){wFiles=[]}this$1._readable.readdir(p,function(err3,rFiles){if(err3||!rFiles){rFiles=[]}var seenMap={};var filtered=wFiles.concat(rFiles.filter(function(fPath){return!this$1._deletedFiles[p+"/"+fPath]})).filter(function(fPath){var result=!seenMap[fPath];seenMap[fPath]=true;return result});cb(null,filtered)})})})};UnlockedOverlayFS2.prototype.readdirSync=function readdirSync(p){var this$1=this;this.checkInitialized();var dirStats=this.statSync(p,false);if(!dirStats.isDirectory()){throw ApiError.ENOTDIR(p)}var contents=[];try{contents=contents.concat(this._writable.readdirSync(p))}catch(e){}try{contents=contents.concat(this._readable.readdirSync(p).filter(function(fPath){return!this$1._deletedFiles[p+"/"+fPath]}))}catch(e){}var seenMap={};return contents.filter(function(fileP){var result=!seenMap[fileP];seenMap[fileP]=true;return result})};UnlockedOverlayFS2.prototype.exists=function exists2(p,cb){var this$1=this;this.checkInitialized();this._writable.exists(p,function(existsWritable){if(existsWritable){return cb(true)}this$1._readable.exists(p,function(existsReadable){cb(existsReadable&&this$1._deletedFiles[p]!==true)})})};UnlockedOverlayFS2.prototype.existsSync=function existsSync(p){this.checkInitialized();return this._writable.existsSync(p)||this._readable.existsSync(p)&&this._deletedFiles[p]!==true};UnlockedOverlayFS2.prototype.chmod=function chmod(p,isLchmod,mode,cb){var this$1=this;if(!this.checkInitAsync(cb)){return}this.operateOnWritableAsync(p,function(err){if(err){return cb(err)}else{this$1._writable.chmod(p,isLchmod,mode,cb)}})};UnlockedOverlayFS2.prototype.chmodSync=function chmodSync(p,isLchmod,mode){var this$1=this;this.checkInitialized();this.operateOnWritable(p,function(){this$1._writable.chmodSync(p,isLchmod,mode)})};UnlockedOverlayFS2.prototype.chown=function chown(p,isLchmod,uid,gid,cb){var this$1=this;if(!this.checkInitAsync(cb)){return}this.operateOnWritableAsync(p,function(err){if(err){return cb(err)}else{this$1._writable.chown(p,isLchmod,uid,gid,cb)}})};UnlockedOverlayFS2.prototype.chownSync=function chownSync(p,isLchown,uid,gid){var this$1=this;this.checkInitialized();this.operateOnWritable(p,function(){this$1._writable.chownSync(p,isLchown,uid,gid)})};UnlockedOverlayFS2.prototype.utimes=function utimes(p,atime,mtime,cb){var this$1=this;if(!this.checkInitAsync(cb)){return}this.operateOnWritableAsync(p,function(err){if(err){return cb(err)}else{this$1._writable.utimes(p,atime,mtime,cb)}})};UnlockedOverlayFS2.prototype.utimesSync=function utimesSync(p,atime,mtime){var this$1=this;this.checkInitialized();this.operateOnWritable(p,function(){this$1._writable.utimesSync(p,atime,mtime)})};UnlockedOverlayFS2.prototype.deletePath=function deletePath(p){this._deletedFiles[p]=true;this.updateLog("d"+p+"\\n")};UnlockedOverlayFS2.prototype.updateLog=function updateLog(addition){var this$1=this;this._deleteLog+=addition;if(this._deleteLogUpdatePending){this._deleteLogUpdateNeeded=true}else{this._deleteLogUpdatePending=true;this._writable.writeFile(deletionLogPath,this._deleteLog,"utf8",FileFlag.getFileFlag("w"),420,function(e){this$1._deleteLogUpdatePending=false;if(e){this$1._deleteLogError=e}else if(this$1._deleteLogUpdateNeeded){this$1._deleteLogUpdateNeeded=false;this$1.updateLog("")}})}};UnlockedOverlayFS2.prototype._reparseDeletionLog=function _reparseDeletionLog(){var this$1=this;this._deletedFiles={};this._deleteLog.split("\\n").forEach(function(path$$1){this$1._deletedFiles[path$$1.slice(1)]=path$$1.slice(0,1)==="d"})};UnlockedOverlayFS2.prototype.checkInitialized=function checkInitialized(){if(!this._isInitialized){throw new ApiError(ErrorCode.EPERM,"OverlayFS is not initialized. Please initialize OverlayFS using its initialize() method before using it.")}else if(this._deleteLogError!==null){var e=this._deleteLogError;this._deleteLogError=null;throw e}};UnlockedOverlayFS2.prototype.checkInitAsync=function checkInitAsync(cb){if(!this._isInitialized){cb(new ApiError(ErrorCode.EPERM,"OverlayFS is not initialized. Please initialize OverlayFS using its initialize() method before using it."));return false}else if(this._deleteLogError!==null){var e=this._deleteLogError;this._deleteLogError=null;cb(e);return false}return true};UnlockedOverlayFS2.prototype.checkPath=function checkPath(p){if(p===deletionLogPath){throw ApiError.EPERM(p)}};UnlockedOverlayFS2.prototype.checkPathAsync=function checkPathAsync(p,cb){if(p===deletionLogPath){cb(ApiError.EPERM(p));return true}return false};UnlockedOverlayFS2.prototype.createParentDirectoriesAsync=function createParentDirectoriesAsync(p,cb){var parent=path.dirname(p);var toCreate=[];var self2=this;this._writable.stat(parent,false,statDone);function statDone(err,stat){if(err){toCreate.push(parent);parent=path.dirname(parent);self2._writable.stat(parent,false,statDone)}else{createParents()}}function createParents(){if(!toCreate.length){return cb()}var dir2=toCreate.pop();self2._readable.stat(dir2,false,function(err,stats){if(!stats){return cb()}self2._writable.mkdir(dir2,stats.mode,function(err2){if(err2){return cb(err2)}createParents()})})}};UnlockedOverlayFS2.prototype.createParentDirectories=function createParentDirectories(p){var this$1=this;var parent=path.dirname(p),toCreate=[];while(!this._writable.existsSync(parent)){toCreate.push(parent);parent=path.dirname(parent)}toCreate=toCreate.reverse();toCreate.forEach(function(p2){this$1._writable.mkdirSync(p2,this$1.statSync(p2,false).mode)})};UnlockedOverlayFS2.prototype.operateOnWritable=function operateOnWritable(p,f){if(this.existsSync(p)){if(!this._writable.existsSync(p)){this.copyToWritable(p)}f()}else{throw ApiError.ENOENT(p)}};UnlockedOverlayFS2.prototype.operateOnWritableAsync=function operateOnWritableAsync(p,cb){var this$1=this;this.exists(p,function(exists2){if(!exists2){return cb(ApiError.ENOENT(p))}this$1._writable.exists(p,function(existsWritable){if(existsWritable){cb()}else{return this$1.copyToWritableAsync(p,cb)}})})};UnlockedOverlayFS2.prototype.copyToWritable=function copyToWritable(p){var pStats=this.statSync(p,false);if(pStats.isDirectory()){this._writable.mkdirSync(p,pStats.mode)}else{this.writeFileSync(p,this._readable.readFileSync(p,null,getFlag("r")),null,getFlag("w"),this.statSync(p,false).mode)}};UnlockedOverlayFS2.prototype.copyToWritableAsync=function copyToWritableAsync(p,cb){var this$1=this;this.stat(p,false,function(err,pStats){if(err){return cb(err)}if(pStats.isDirectory()){return this$1._writable.mkdir(p,pStats.mode,cb)}this$1._readable.readFile(p,null,getFlag("r"),function(err2,data){if(err2){return cb(err2)}this$1.writeFile(p,data,null,getFlag("w"),pStats.mode,cb)})})};return UnlockedOverlayFS2}(BaseFileSystem);var OverlayFS=function(LockedFS$$1){function OverlayFS2(writable,readable,deprecateMsg){if(deprecateMsg===void 0)deprecateMsg=true;LockedFS$$1.call(this,new UnlockedOverlayFS(writable,readable));deprecationMessage(deprecateMsg,OverlayFS2.Name,{readable:"readable file system",writable:"writable file system"})}if(LockedFS$$1)OverlayFS2.__proto__=LockedFS$$1;OverlayFS2.prototype=Object.create(LockedFS$$1&&LockedFS$$1.prototype);OverlayFS2.prototype.constructor=OverlayFS2;OverlayFS2.Create=function Create(opts,cb){try{var fs4=new OverlayFS2(opts.writable,opts.readable,false);fs4.initialize(function(e){cb(e,fs4)},false)}catch(e){cb(e)}};OverlayFS2.isAvailable=function isAvailable(){return UnlockedOverlayFS.isAvailable()};OverlayFS2.prototype.initialize=function initialize3(cb,deprecateMsg){if(deprecateMsg===void 0)deprecateMsg=true;if(deprecateMsg){console.warn("[OverlayFS] OverlayFS.initialize() is deprecated and will be removed in the next major release. Please use \'OverlayFS.Create({readable: readable file system instance, writable: writable file system instance}, cb)\' to create and initialize OverlayFS instances.")}LockedFS$$1.prototype.initialize.call(this,cb)};OverlayFS2.prototype.getOverlayedFileSystems=function getOverlayedFileSystems(){return LockedFS$$1.prototype.getFSUnlocked.call(this).getOverlayedFileSystems()};OverlayFS2.prototype.unwrap=function unwrap(){return LockedFS$$1.prototype.getFSUnlocked.call(this)};return OverlayFS2}(LockedFS);OverlayFS.Name="OverlayFS";OverlayFS.Options={writable:{type:"object",description:"The file system to write modified files to."},readable:{type:"object",description:"The file system that initially populates this file system."}};var SpecialArgType;(function(SpecialArgType2){SpecialArgType2[SpecialArgType2["CB"]=0]="CB";SpecialArgType2[SpecialArgType2["FD"]=1]="FD";SpecialArgType2[SpecialArgType2["API_ERROR"]=2]="API_ERROR";SpecialArgType2[SpecialArgType2["STATS"]=3]="STATS";SpecialArgType2[SpecialArgType2["PROBE"]=4]="PROBE";SpecialArgType2[SpecialArgType2["FILEFLAG"]=5]="FILEFLAG";SpecialArgType2[SpecialArgType2["BUFFER"]=6]="BUFFER";SpecialArgType2[SpecialArgType2["ERROR"]=7]="ERROR"})(SpecialArgType||(SpecialArgType={}));var CallbackArgumentConverter=function CallbackArgumentConverter2(){this._callbacks={};this._nextId=0};CallbackArgumentConverter.prototype.toRemoteArg=function toRemoteArg(cb){var id=this._nextId++;this._callbacks[id]=cb;return{type:SpecialArgType.CB,id}};CallbackArgumentConverter.prototype.toLocalArg=function toLocalArg(id){var cb=this._callbacks[id];delete this._callbacks[id];return cb};var FileDescriptorArgumentConverter=function FileDescriptorArgumentConverter2(){this._fileDescriptors={};this._nextId=0};FileDescriptorArgumentConverter.prototype.toRemoteArg=function toRemoteArg(fd,p,flag,cb){var id=this._nextId++;var data;var stat;this._fileDescriptors[id]=fd;fd.stat(function(err,stats){if(err){cb(err)}else{stat=bufferToTransferrableObject(stats.toBuffer());if(flag.isReadable()){fd.read(Buffer2.alloc(stats.size),0,stats.size,0,function(err2,bytesRead,buff){if(err2){cb(err2)}else{data=bufferToTransferrableObject(buff);cb(null,{type:SpecialArgType.FD,id,data,stat,path:p,flag:flag.getFlagString()})}})}else{cb(null,{type:SpecialArgType.FD,id,data:new ArrayBuffer(0),stat,path:p,flag:flag.getFlagString()})}}})};FileDescriptorArgumentConverter.prototype.applyFdAPIRequest=function applyFdAPIRequest(request,cb){var this$1=this;var fdArg=request.args[0];this._applyFdChanges(fdArg,function(err,fd){if(err){cb(err)}else{fd[request.method](function(e){if(request.method==="close"){delete this$1._fileDescriptors[fdArg.id]}cb(e)})}})};FileDescriptorArgumentConverter.prototype._applyFdChanges=function _applyFdChanges(remoteFd,cb){var fd=this._fileDescriptors[remoteFd.id],data=transferrableObjectToBuffer(remoteFd.data),remoteStats=Stats.fromBuffer(transferrableObjectToBuffer(remoteFd.stat));var flag=FileFlag.getFileFlag(remoteFd.flag);if(flag.isWriteable()){fd.write(data,0,data.length,flag.isAppendable()?fd.getPos():0,function(e){function applyStatChanges(){fd.stat(function(e2,stats){if(e2){cb(e2)}else{if(stats.mode!==remoteStats.mode){fd.chmod(remoteStats.mode,function(e3){cb(e3,fd)})}else{cb(e2,fd)}}})}if(e){cb(e)}else{if(!flag.isAppendable()){fd.truncate(data.length,function(){applyStatChanges()})}else{applyStatChanges()}}})}else{cb(null,fd)}};function apiErrorLocal2Remote(e){return{type:SpecialArgType.API_ERROR,errorData:bufferToTransferrableObject(e.writeToBuffer())}}function apiErrorRemote2Local(e){return ApiError.fromBuffer(transferrableObjectToBuffer(e.errorData))}function errorLocal2Remote(e){return{type:SpecialArgType.ERROR,name:e.name,message:e.message,stack:e.stack}}function errorRemote2Local(e){var cnstr=global$1[e.name];if(typeof cnstr!=="function"){cnstr=Error}var err=new cnstr(e.message);err.stack=e.stack;return err}function statsLocal2Remote(stats){return{type:SpecialArgType.STATS,statsData:bufferToTransferrableObject(stats.toBuffer())}}function statsRemote2Local(stats){return Stats.fromBuffer(transferrableObjectToBuffer(stats.statsData))}function fileFlagLocal2Remote(flag){return{type:SpecialArgType.FILEFLAG,flagStr:flag.getFlagString()}}function fileFlagRemote2Local(remoteFlag){return FileFlag.getFileFlag(remoteFlag.flagStr)}function bufferToTransferrableObject(buff){return buffer2ArrayBuffer(buff)}function transferrableObjectToBuffer(buff){return arrayBuffer2Buffer(buff)}function bufferLocal2Remote(buff){return{type:SpecialArgType.BUFFER,data:bufferToTransferrableObject(buff)}}function bufferRemote2Local(buffArg){return transferrableObjectToBuffer(buffArg.data)}function isAPIRequest(data){return data&&typeof data==="object"&&data.hasOwnProperty("browserfsMessage")&&data["browserfsMessage"]}function isAPIResponse(data){return data&&typeof data==="object"&&data.hasOwnProperty("browserfsMessage")&&data["browserfsMessage"]}var WorkerFile=function(PreloadFile$$1){function WorkerFile2(_fs,_path,_flag,_stat,remoteFdId,contents){PreloadFile$$1.call(this,_fs,_path,_flag,_stat,contents);this._remoteFdId=remoteFdId}if(PreloadFile$$1)WorkerFile2.__proto__=PreloadFile$$1;WorkerFile2.prototype=Object.create(PreloadFile$$1&&PreloadFile$$1.prototype);WorkerFile2.prototype.constructor=WorkerFile2;WorkerFile2.prototype.getRemoteFdId=function getRemoteFdId(){return this._remoteFdId};WorkerFile2.prototype.toRemoteArg=function toRemoteArg(){return{type:SpecialArgType.FD,id:this._remoteFdId,data:bufferToTransferrableObject(this.getBuffer()),stat:bufferToTransferrableObject(this.getStats().toBuffer()),path:this.getPath(),flag:this.getFlag().getFlagString()}};WorkerFile2.prototype.sync=function sync(cb){this._syncClose("sync",cb)};WorkerFile2.prototype.close=function close(cb){this._syncClose("close",cb)};WorkerFile2.prototype._syncClose=function _syncClose(type,cb){var this$1=this;if(this.isDirty()){this._fs.syncClose(type,this,function(e){if(!e){this$1.resetDirty()}cb(e)})}else{cb()}};return WorkerFile2}(PreloadFile);var WorkerFS=function(BaseFileSystem$$1){function WorkerFS2(worker,deprecateMsg){var this$1=this;if(deprecateMsg===void 0)deprecateMsg=true;BaseFileSystem$$1.call(this);this._callbackConverter=new CallbackArgumentConverter;this._isInitialized=false;this._isReadOnly=false;this._supportLinks=false;this._supportProps=false;this._worker=worker;deprecationMessage(deprecateMsg,WorkerFS2.Name,{worker:"Web Worker instance"});this._worker.addEventListener("message",function(e){var resp=e.data;if(isAPIResponse(resp)){var i2;var args=resp.args;var fixedArgs=new Array(args.length);for(i2=0;i2<fixedArgs.length;i2++){fixedArgs[i2]=this$1._argRemote2Local(args[i2])}this$1._callbackConverter.toLocalArg(resp.cbId).apply(null,fixedArgs)}})}if(BaseFileSystem$$1)WorkerFS2.__proto__=BaseFileSystem$$1;WorkerFS2.prototype=Object.create(BaseFileSystem$$1&&BaseFileSystem$$1.prototype);WorkerFS2.prototype.constructor=WorkerFS2;WorkerFS2.Create=function Create(opts,cb){var fs4=new WorkerFS2(opts.worker,false);fs4.initialize(function(){cb(null,fs4)})};WorkerFS2.isAvailable=function isAvailable(){return typeof importScripts!=="undefined"||typeof Worker!=="undefined"};WorkerFS2.attachRemoteListener=function attachRemoteListener(worker){var fdConverter=new FileDescriptorArgumentConverter;function argLocal2Remote(arg,requestArgs,cb){switch(typeof arg){case"object":if(arg instanceof Stats){cb(null,statsLocal2Remote(arg))}else if(arg instanceof ApiError){cb(null,apiErrorLocal2Remote(arg))}else if(arg instanceof BaseFile){cb(null,fdConverter.toRemoteArg(arg,requestArgs[0],requestArgs[1],cb))}else if(arg instanceof FileFlag){cb(null,fileFlagLocal2Remote(arg))}else if(arg instanceof Buffer2){cb(null,bufferLocal2Remote(arg))}else if(arg instanceof Error){cb(null,errorLocal2Remote(arg))}else{cb(null,arg)}break;default:cb(null,arg);break}}function argRemote2Local(arg,fixedRequestArgs){if(!arg){return arg}switch(typeof arg){case"object":if(typeof arg["type"]==="number"){var specialArg=arg;switch(specialArg.type){case SpecialArgType.CB:var cbId=arg.id;return function(){var arguments$1=arguments;var i2;var fixedArgs=new Array(arguments.length);var message,countdown=arguments.length;function abortAndSendError(err){if(countdown>0){countdown=-1;message={browserfsMessage:true,cbId,args:[apiErrorLocal2Remote(err)]};worker.postMessage(message)}}for(i2=0;i2<arguments.length;i2++){(function(i3,arg2){argLocal2Remote(arg2,fixedRequestArgs,function(err,fixedArg){fixedArgs[i3]=fixedArg;if(err){abortAndSendError(err)}else if(--countdown===0){message={browserfsMessage:true,cbId,args:fixedArgs};worker.postMessage(message)}})})(i2,arguments$1[i2])}if(arguments.length===0){message={browserfsMessage:true,cbId,args:fixedArgs};worker.postMessage(message)}};case SpecialArgType.API_ERROR:return apiErrorRemote2Local(specialArg);case SpecialArgType.STATS:return statsRemote2Local(specialArg);case SpecialArgType.FILEFLAG:return fileFlagRemote2Local(specialArg);case SpecialArgType.BUFFER:return bufferRemote2Local(specialArg);case SpecialArgType.ERROR:return errorRemote2Local(specialArg);default:return arg}}else{return arg}default:return arg}}worker.addEventListener("message",function(e){var request=e.data;if(isAPIRequest(request)){var args=request.args,fixedArgs=new Array(args.length);switch(request.method){case"close":case"sync":(function(){var remoteCb=args[1];fdConverter.applyFdAPIRequest(request,function(err){var response={browserfsMessage:true,cbId:remoteCb.id,args:err?[apiErrorLocal2Remote(err)]:[]};worker.postMessage(response)})})();break;case"probe":(function(){var rootFs=_fsMock.getRootFS(),remoteCb=args[1],probeResponse={type:SpecialArgType.PROBE,isReadOnly:rootFs.isReadOnly(),supportsLinks:rootFs.supportsLinks(),supportsProps:rootFs.supportsProps()},response={browserfsMessage:true,cbId:remoteCb.id,args:[probeResponse]};worker.postMessage(response)})();break;default:for(var i2=0;i2<args.length;i2++){fixedArgs[i2]=argRemote2Local(args[i2],fixedArgs)}var rootFS=_fsMock.getRootFS();rootFS[request.method].apply(rootFS,fixedArgs);break}}})};WorkerFS2.prototype.getName=function getName(){return WorkerFS2.Name};WorkerFS2.prototype.initialize=function initialize3(cb){var this$1=this;if(!this._isInitialized){var message={browserfsMessage:true,method:"probe",args:[this._argLocal2Remote(emptyBuffer()),this._callbackConverter.toRemoteArg(function(probeResponse){this$1._isInitialized=true;this$1._isReadOnly=probeResponse.isReadOnly;this$1._supportLinks=probeResponse.supportsLinks;this$1._supportProps=probeResponse.supportsProps;cb()})]};this._worker.postMessage(message)}else{cb()}};WorkerFS2.prototype.isReadOnly=function isReadOnly(){return this._isReadOnly};WorkerFS2.prototype.supportsSynch=function supportsSynch(){return false};WorkerFS2.prototype.supportsLinks=function supportsLinks(){return this._supportLinks};WorkerFS2.prototype.supportsProps=function supportsProps(){return this._supportProps};WorkerFS2.prototype.rename=function rename(oldPath,newPath,cb){this._rpc("rename",arguments)};WorkerFS2.prototype.stat=function stat(p,isLstat,cb){this._rpc("stat",arguments)};WorkerFS2.prototype.open=function open(p,flag,mode,cb){this._rpc("open",arguments)};WorkerFS2.prototype.unlink=function unlink(p,cb){this._rpc("unlink",arguments)};WorkerFS2.prototype.rmdir=function rmdir(p,cb){this._rpc("rmdir",arguments)};WorkerFS2.prototype.mkdir=function mkdir(p,mode,cb){this._rpc("mkdir",arguments)};WorkerFS2.prototype.readdir=function readdir(p,cb){this._rpc("readdir",arguments)};WorkerFS2.prototype.exists=function exists2(p,cb){this._rpc("exists",arguments)};WorkerFS2.prototype.realpath=function realpath(p,cache,cb){this._rpc("realpath",arguments)};WorkerFS2.prototype.truncate=function truncate(p,len,cb){this._rpc("truncate",arguments)};WorkerFS2.prototype.readFile=function readFile2(fname,encoding,flag,cb){this._rpc("readFile",arguments)};WorkerFS2.prototype.writeFile=function writeFile2(fname,data,encoding,flag,mode,cb){this._rpc("writeFile",arguments)};WorkerFS2.prototype.appendFile=function appendFile3(fname,data,encoding,flag,mode,cb){this._rpc("appendFile",arguments)};WorkerFS2.prototype.chmod=function chmod(p,isLchmod,mode,cb){this._rpc("chmod",arguments)};WorkerFS2.prototype.chown=function chown(p,isLchown,uid,gid,cb){this._rpc("chown",arguments)};WorkerFS2.prototype.utimes=function utimes(p,atime,mtime,cb){this._rpc("utimes",arguments)};WorkerFS2.prototype.link=function link(srcpath,dstpath,cb){this._rpc("link",arguments)};WorkerFS2.prototype.symlink=function symlink(srcpath,dstpath,type,cb){this._rpc("symlink",arguments)};WorkerFS2.prototype.readlink=function readlink(p,cb){this._rpc("readlink",arguments)};WorkerFS2.prototype.syncClose=function syncClose(method,fd,cb){this._worker.postMessage({browserfsMessage:true,method,args:[fd.toRemoteArg(),this._callbackConverter.toRemoteArg(cb)]})};WorkerFS2.prototype._argRemote2Local=function _argRemote2Local(arg){if(!arg){return arg}switch(typeof arg){case"object":if(typeof arg["type"]==="number"){var specialArg=arg;switch(specialArg.type){case SpecialArgType.API_ERROR:return apiErrorRemote2Local(specialArg);case SpecialArgType.FD:var fdArg=specialArg;return new WorkerFile(this,fdArg.path,FileFlag.getFileFlag(fdArg.flag),Stats.fromBuffer(transferrableObjectToBuffer(fdArg.stat)),fdArg.id,transferrableObjectToBuffer(fdArg.data));case SpecialArgType.STATS:return statsRemote2Local(specialArg);case SpecialArgType.FILEFLAG:return fileFlagRemote2Local(specialArg);case SpecialArgType.BUFFER:return bufferRemote2Local(specialArg);case SpecialArgType.ERROR:return errorRemote2Local(specialArg);default:return arg}}else{return arg}default:return arg}};WorkerFS2.prototype._rpc=function _rpc(methodName,args){var this$1=this;var fixedArgs=new Array(args.length);for(var i2=0;i2<args.length;i2++){fixedArgs[i2]=this$1._argLocal2Remote(args[i2])}var message={browserfsMessage:true,method:methodName,args:fixedArgs};this._worker.postMessage(message)};WorkerFS2.prototype._argLocal2Remote=function _argLocal2Remote(arg){if(!arg){return arg}switch(typeof arg){case"object":if(arg instanceof Stats){return statsLocal2Remote(arg)}else if(arg instanceof ApiError){return apiErrorLocal2Remote(arg)}else if(arg instanceof WorkerFile){return arg.toRemoteArg()}else if(arg instanceof FileFlag){return fileFlagLocal2Remote(arg)}else if(arg instanceof Buffer2){return bufferLocal2Remote(arg)}else if(arg instanceof Error){return errorLocal2Remote(arg)}else{return"Unknown argument"}case"function":return this._callbackConverter.toRemoteArg(arg);default:return arg}};return WorkerFS2}(BaseFileSystem);WorkerFS.Name="WorkerFS";WorkerFS.Options={worker:{type:"object",description:"The target worker that you want to connect to, or the current worker if in a worker context.",validator:function(v3,cb){if(v3["postMessage"]){cb()}else{cb(new ApiError(ErrorCode.EINVAL,"option must be a Web Worker instance."))}}}};function asyncDownloadFileModern(p,type,cb){var req=new XMLHttpRequest;req.open("GET",p,true);var jsonSupported=true;switch(type){case"buffer":req.responseType="arraybuffer";break;case"json":try{req.responseType="json";jsonSupported=req.responseType==="json"}catch(e){jsonSupported=false}break;default:return cb(new ApiError(ErrorCode.EINVAL,"Invalid download type: "+type))}req.onreadystatechange=function(e){if(req.readyState===4){if(req.status===200){switch(type){case"buffer":return cb(null,req.response?Buffer2.from(req.response):emptyBuffer());case"json":if(jsonSupported){return cb(null,req.response)}else{return cb(null,JSON.parse(req.responseText))}}}else{return cb(new ApiError(req.status,"XHR error."))}}};req.send()}function syncDownloadFileModern(p,type){var req=new XMLHttpRequest;req.open("GET",p,false);var data=null;var err=null;req.overrideMimeType("text/plain; charset=x-user-defined");req.onreadystatechange=function(e){if(req.readyState===4){if(req.status===200){switch(type){case"buffer":var text=req.responseText;data=Buffer2.alloc(text.length);for(var i2=0;i2<text.length;i2++){data[i2]=text.charCodeAt(i2)}return;case"json":data=JSON.parse(req.responseText);return}}else{err=new ApiError(req.status,"XHR error.");return}}};req.send();if(err){throw err}return data}function syncDownloadFileIE10(p,type){var req=new XMLHttpRequest;req.open("GET",p,false);switch(type){case"buffer":req.responseType="arraybuffer";break;case"json":break;default:throw new ApiError(ErrorCode.EINVAL,"Invalid download type: "+type)}var data;var err;req.onreadystatechange=function(e){if(req.readyState===4){if(req.status===200){switch(type){case"buffer":data=Buffer2.from(req.response);break;case"json":data=JSON.parse(req.response);break}}else{err=new ApiError(req.status,"XHR error.")}}};req.send();if(err){throw err}return data}function getFileSize2(async,p,cb){var req=new XMLHttpRequest;req.open("HEAD",p,async);req.onreadystatechange=function(e){if(req.readyState===4){if(req.status===200){try{return cb(null,parseInt(req.getResponseHeader("Content-Length")||"-1",10))}catch(e2){return cb(new ApiError(ErrorCode.EIO,"XHR HEAD error: Could not read content-length."))}}else{return cb(new ApiError(req.status,"XHR HEAD error."))}}};req.send()}var asyncDownloadFile=asyncDownloadFileModern;var syncDownloadFile=isIE&&typeof Blob!=="undefined"?syncDownloadFileIE10:syncDownloadFileModern;function getFileSizeSync(p){var rv=-1;getFileSize2(false,p,function(err,size){if(err){throw err}rv=size});return rv}function getFileSizeAsync(p,cb){getFileSize2(true,p,cb)}var FileIndex=function FileIndex2(){this._index={};this.addPath("/",new DirInode)};FileIndex.fromListing=function fromListing(listing){var idx=new FileIndex;var rootInode=new DirInode;idx._index["/"]=rootInode;var queue=[["",listing,rootInode]];while(queue.length>0){var inode=void 0;var next=queue.pop();var pwd=next[0];var tree=next[1];var parent=next[2];for(var node in tree){if(tree.hasOwnProperty(node)){var children=tree[node];var name2=pwd+"/"+node;if(children){idx._index[name2]=inode=new DirInode;queue.push([name2,children,inode])}else{inode=new FileInode(new Stats(FileType.FILE,-1,365))}if(parent){parent._ls[node]=inode}}}}return idx};FileIndex.prototype.fileIterator=function fileIterator(cb){var this$1=this;for(var path$$1 in this$1._index){if(this$1._index.hasOwnProperty(path$$1)){var dir2=this$1._index[path$$1];var files=dir2.getListing();for(var i2=0,list2=files;i2<list2.length;i2+=1){var file=list2[i2];var item=dir2.getItem(file);if(isFileInode(item)){cb(item.getData())}}}}};FileIndex.prototype.addPath=function addPath(path$$1,inode){if(!inode){throw new Error("Inode must be specified")}if(path$$1[0]!=="/"){throw new Error("Path must be absolute, got: "+path$$1)}if(this._index.hasOwnProperty(path$$1)){return this._index[path$$1]===inode}var splitPath=this._split_path(path$$1);var dirpath=splitPath[0];var itemname=splitPath[1];var parent=this._index[dirpath];if(parent===void 0&&path$$1!=="/"){parent=new DirInode;if(!this.addPath(dirpath,parent)){return false}}if(path$$1!=="/"){if(!parent.addItem(itemname,inode)){return false}}if(isDirInode(inode)){this._index[path$$1]=inode}return true};FileIndex.prototype.addPathFast=function addPathFast(path$$1,inode){var itemNameMark=path$$1.lastIndexOf("/");var parentPath=itemNameMark===0?"/":path$$1.substring(0,itemNameMark);var itemName=path$$1.substring(itemNameMark+1);var parent=this._index[parentPath];if(parent===void 0){parent=new DirInode;this.addPathFast(parentPath,parent)}if(!parent.addItem(itemName,inode)){return false}if(inode.isDir()){this._index[path$$1]=inode}return true};FileIndex.prototype.removePath=function removePath(path$$1){var this$1=this;var splitPath=this._split_path(path$$1);var dirpath=splitPath[0];var itemname=splitPath[1];var parent=this._index[dirpath];if(parent===void 0){return null}var inode=parent.remItem(itemname);if(inode===null){return null}if(isDirInode(inode)){var children=inode.getListing();for(var i2=0,list2=children;i2<list2.length;i2+=1){var child=list2[i2];this$1.removePath(path$$1+"/"+child)}if(path$$1!=="/"){delete this._index[path$$1]}}return inode};FileIndex.prototype.ls=function ls3(path$$1){var item=this._index[path$$1];if(item===void 0){return null}return item.getListing()};FileIndex.prototype.getInode=function getInode(path$$1){var splitPath=this._split_path(path$$1);var dirpath=splitPath[0];var itemname=splitPath[1];var parent=this._index[dirpath];if(parent===void 0){return null}if(dirpath===path$$1){return parent}return parent.getItem(itemname)};FileIndex.prototype._split_path=function _split_path(p){var dirpath=path.dirname(p);var itemname=p.substr(dirpath.length+(dirpath==="/"?0:1));return[dirpath,itemname]};var FileInode=function FileInode2(data){this.data=data};FileInode.prototype.isFile=function isFile(){return true};FileInode.prototype.isDir=function isDir(){return false};FileInode.prototype.getData=function getData(){return this.data};FileInode.prototype.setData=function setData(data){this.data=data};var DirInode=function DirInode2(data){if(data===void 0)data=null;this.data=data;this._ls={}};DirInode.prototype.isFile=function isFile(){return false};DirInode.prototype.isDir=function isDir(){return true};DirInode.prototype.getData=function getData(){return this.data};DirInode.prototype.getStats=function getStats(){return new Stats(FileType.DIRECTORY,4096,365)};DirInode.prototype.getListing=function getListing(){return Object.keys(this._ls)};DirInode.prototype.getItem=function getItem(p){var item=this._ls[p];return item?item:null};DirInode.prototype.addItem=function addItem(p,inode){if(p in this._ls){return false}this._ls[p]=inode;return true};DirInode.prototype.remItem=function remItem(p){var item=this._ls[p];if(item===void 0){return null}delete this._ls[p];return item};function isFileInode(inode){return!!inode&&inode.isFile()}function isDirInode(inode){return!!inode&&inode.isDir()}function tryToString(buff,encoding,cb){try{cb(null,buff.toString(encoding))}catch(e){cb(e)}}var XmlHttpRequest=function(BaseFileSystem$$1){function XmlHttpRequest2(listingUrlOrObj,prefixUrl,deprecateMsg){if(prefixUrl===void 0)prefixUrl="";if(deprecateMsg===void 0)deprecateMsg=true;BaseFileSystem$$1.call(this);if(!listingUrlOrObj){listingUrlOrObj="index.json"}if(prefixUrl.length>0&&prefixUrl.charAt(prefixUrl.length-1)!=="/"){prefixUrl=prefixUrl+"/"}this.prefixUrl=prefixUrl;var listing=null;if(typeof listingUrlOrObj==="string"){listing=this._requestFileSync(listingUrlOrObj,"json");if(!listing){throw new Error("Unable to find listing at URL: ${listingUrlOrObj}")}}else{listing=listingUrlOrObj}deprecationMessage(deprecateMsg,XmlHttpRequest2.Name,{index:typeof listingUrlOrObj==="string"?listingUrlOrObj:"file index as an object",baseUrl:prefixUrl});this._index=FileIndex.fromListing(listing)}if(BaseFileSystem$$1)XmlHttpRequest2.__proto__=BaseFileSystem$$1;XmlHttpRequest2.prototype=Object.create(BaseFileSystem$$1&&BaseFileSystem$$1.prototype);XmlHttpRequest2.prototype.constructor=XmlHttpRequest2;XmlHttpRequest2.Create=function Create(opts,cb){if(opts.index===void 0){opts.index="index.json"}if(typeof opts.index==="string"){XmlHttpRequest2.FromURL(opts.index,cb,opts.baseUrl,false)}else{cb(null,new XmlHttpRequest2(opts.index,opts.baseUrl,false))}};XmlHttpRequest2.isAvailable=function isAvailable(){return typeof XMLHttpRequest!=="undefined"&&XMLHttpRequest!==null};XmlHttpRequest2.FromURL=function FromURL(url2,cb,baseUrl,deprecateMsg){if(baseUrl===void 0)baseUrl=url2.slice(0,url2.lastIndexOf("/")+1);if(deprecateMsg===void 0)deprecateMsg=true;if(deprecateMsg){console.warn(`[XmlHttpRequest] XmlHttpRequest.FromURL() is deprecated and will be removed in the next major release. Please use \'XmlHttpRequest.Create({ index: "`+url2+\'", baseUrl: "\'+baseUrl+`" }, cb)\' instead.`)}asyncDownloadFile(url2,"json",function(e,data){if(e){cb(e)}else{cb(null,new XmlHttpRequest2(data,baseUrl,false))}})};XmlHttpRequest2.prototype.empty=function empty(){this._index.fileIterator(function(file){file.fileData=null})};XmlHttpRequest2.prototype.getName=function getName(){return XmlHttpRequest2.Name};XmlHttpRequest2.prototype.diskSpace=function diskSpace(path$$1,cb){cb(0,0)};XmlHttpRequest2.prototype.isReadOnly=function isReadOnly(){return true};XmlHttpRequest2.prototype.supportsLinks=function supportsLinks(){return false};XmlHttpRequest2.prototype.supportsProps=function supportsProps(){return false};XmlHttpRequest2.prototype.supportsSynch=function supportsSynch(){return true};XmlHttpRequest2.prototype.preloadFile=function preloadFile(path$$1,buffer$$1){var inode=this._index.getInode(path$$1);if(isFileInode(inode)){if(inode===null){throw ApiError.ENOENT(path$$1)}var stats=inode.getData();stats.size=buffer$$1.length;stats.fileData=buffer$$1}else{throw ApiError.EISDIR(path$$1)}};XmlHttpRequest2.prototype.stat=function stat(path$$1,isLstat,cb){var inode=this._index.getInode(path$$1);if(inode===null){return cb(ApiError.ENOENT(path$$1))}var stats;if(isFileInode(inode)){stats=inode.getData();if(stats.size<0){this._requestFileSizeAsync(path$$1,function(e,size){if(e){return cb(e)}stats.size=size;cb(null,stats.clone())})}else{cb(null,stats.clone())}}else if(isDirInode(inode)){stats=inode.getStats();cb(null,stats)}else{cb(ApiError.FileError(ErrorCode.EINVAL,path$$1))}};XmlHttpRequest2.prototype.statSync=function statSync(path$$1,isLstat){var inode=this._index.getInode(path$$1);if(inode===null){throw ApiError.ENOENT(path$$1)}var stats;if(isFileInode(inode)){stats=inode.getData();if(stats.size<0){stats.size=this._requestFileSizeSync(path$$1)}}else if(isDirInode(inode)){stats=inode.getStats()}else{throw ApiError.FileError(ErrorCode.EINVAL,path$$1)}return stats};XmlHttpRequest2.prototype.open=function open(path$$1,flags,mode,cb){if(flags.isWriteable()){return cb(new ApiError(ErrorCode.EPERM,path$$1))}var self2=this;var inode=this._index.getInode(path$$1);if(inode===null){return cb(ApiError.ENOENT(path$$1))}if(isFileInode(inode)){var stats=inode.getData();switch(flags.pathExistsAction()){case ActionType.THROW_EXCEPTION:case ActionType.TRUNCATE_FILE:return cb(ApiError.EEXIST(path$$1));case ActionType.NOP:if(stats.fileData){return cb(null,new NoSyncFile(self2,path$$1,flags,stats.clone(),stats.fileData))}this._requestFileAsync(path$$1,"buffer",function(err,buffer$$1){if(err){return cb(err)}stats.size=buffer$$1.length;stats.fileData=buffer$$1;return cb(null,new NoSyncFile(self2,path$$1,flags,stats.clone(),buffer$$1))});break;default:return cb(new ApiError(ErrorCode.EINVAL,"Invalid FileMode object."))}}else{return cb(ApiError.EISDIR(path$$1))}};XmlHttpRequest2.prototype.openSync=function openSync(path$$1,flags,mode){if(flags.isWriteable()){throw new ApiError(ErrorCode.EPERM,path$$1)}var inode=this._index.getInode(path$$1);if(inode===null){throw ApiError.ENOENT(path$$1)}if(isFileInode(inode)){var stats=inode.getData();switch(flags.pathExistsAction()){case ActionType.THROW_EXCEPTION:case ActionType.TRUNCATE_FILE:throw ApiError.EEXIST(path$$1);case ActionType.NOP:if(stats.fileData){return new NoSyncFile(this,path$$1,flags,stats.clone(),stats.fileData)}var buffer$$1=this._requestFileSync(path$$1,"buffer");stats.size=buffer$$1.length;stats.fileData=buffer$$1;return new NoSyncFile(this,path$$1,flags,stats.clone(),buffer$$1);default:throw new ApiError(ErrorCode.EINVAL,"Invalid FileMode object.")}}else{throw ApiError.EISDIR(path$$1)}};XmlHttpRequest2.prototype.readdir=function readdir(path$$1,cb){try{cb(null,this.readdirSync(path$$1))}catch(e){cb(e)}};XmlHttpRequest2.prototype.readdirSync=function readdirSync(path$$1){var inode=this._index.getInode(path$$1);if(inode===null){throw ApiError.ENOENT(path$$1)}else if(isDirInode(inode)){return inode.getListing()}else{throw ApiError.ENOTDIR(path$$1)}};XmlHttpRequest2.prototype.readFile=function readFile2(fname,encoding,flag,cb){var oldCb=cb;this.open(fname,flag,420,function(err,fd){if(err){return cb(err)}cb=function(err2,arg){fd.close(function(err22){if(!err2){err2=err22}return oldCb(err2,arg)})};var fdCast=fd;var fdBuff=fdCast.getBuffer();if(encoding===null){cb(err,copyingSlice(fdBuff))}else{tryToString(fdBuff,encoding,cb)}})};XmlHttpRequest2.prototype.readFileSync=function readFileSync(fname,encoding,flag){var fd=this.openSync(fname,flag,420);try{var fdCast=fd;var fdBuff=fdCast.getBuffer();if(encoding===null){return copyingSlice(fdBuff)}return fdBuff.toString(encoding)}finally{fd.closeSync()}};XmlHttpRequest2.prototype.getXhrPath=function getXhrPath(filePath){if(filePath.charAt(0)==="/"){filePath=filePath.slice(1)}return this.prefixUrl+filePath};XmlHttpRequest2.prototype._requestFileAsync=function _requestFileAsync(p,type,cb){asyncDownloadFile(this.getXhrPath(p),type,cb)};XmlHttpRequest2.prototype._requestFileSync=function _requestFileSync(p,type){return syncDownloadFile(this.getXhrPath(p),type)};XmlHttpRequest2.prototype._requestFileSizeAsync=function _requestFileSizeAsync(path$$1,cb){getFileSizeAsync(this.getXhrPath(path$$1),cb)};XmlHttpRequest2.prototype._requestFileSizeSync=function _requestFileSizeSync(path$$1){return getFileSizeSync(this.getXhrPath(path$$1))};return XmlHttpRequest2}(BaseFileSystem);XmlHttpRequest.Name="XmlHttpRequest";XmlHttpRequest.Options={index:{type:["string","object"],optional:true,description:"URL to a file index as a JSON file or the file index object itself, generated with the make_xhrfs_index script. Defaults to `index.json`."},baseUrl:{type:"string",optional:true,description:"Used as the URL prefix for fetched files. Default: Fetch files relative to the index."}};var ExtendedASCII=function ExtendedASCII2(){};ExtendedASCII.str2byte=function str2byte(str3,buf){var length=str3.length>buf.length?buf.length:str3.length;for(var i2=0;i2<length;i2++){var charCode=str3.charCodeAt(i2);if(charCode>127){var charIdx=ExtendedASCII.extendedChars.indexOf(str3.charAt(i2));if(charIdx>-1){charCode=charIdx+128}}buf[charCode]=i2}return length};ExtendedASCII.byte2str=function byte2str(buff){var chars=new Array(buff.length);for(var i2=0;i2<buff.length;i2++){var charCode=buff[i2];if(charCode>127){chars[i2]=ExtendedASCII.extendedChars[charCode-128]}else{chars[i2]=String.fromCharCode(charCode)}}return chars.join("")};ExtendedASCII.byteLength=function byteLength(str3){return str3.length};ExtendedASCII.extendedChars=["\\xC7","\\xFC","\\xE9","\\xE2","\\xE4","\\xE0","\\xE5","\\xE7","\\xEA","\\xEB","\\xE8","\\xEF","\\xEE","\\xEC","\\xC4","\\xC5","\\xC9","\\xE6","\\xC6","\\xF4","\\xF6","\\xF2","\\xFB","\\xF9","\\xFF","\\xD6","\\xDC","\\xF8","\\xA3","\\xD8","\\xD7","\\u0192","\\xE1","\\xED","\\xF3","\\xFA","\\xF1","\\xD1","\\xAA","\\xBA","\\xBF","\\xAE","\\xAC","\\xBD","\\xBC","\\xA1","\\xAB","\\xBB","_","_","_","\\xA6","\\xA6","\\xC1","\\xC2","\\xC0","\\xA9","\\xA6","\\xA6","+","+","\\xA2","\\xA5","+","+","-","-","+","-","+","\\xE3","\\xC3","+","+","-","-","\\xA6","-","+","\\xA4","\\xF0","\\xD0","\\xCA","\\xCB","\\xC8","i","\\xCD","\\xCE","\\xCF","+","+","_","_","\\xA6","\\xCC","_","\\xD3","\\xDF","\\xD4","\\xD2","\\xF5","\\xD5","\\xB5","\\xFE","\\xDE","\\xDA","\\xDB","\\xD9","\\xFD","\\xDD","\\xAF","\\xB4","\\xAD","\\xB1","_","\\xBE","\\xB6","\\xA7","\\xF7","\\xB8","\\xB0","\\xA8","\\xB7","\\xB9","\\xB3","\\xB2","_"," "];var inflateRaw=__webpack_require__(31).inflateRaw;var decompressionMethods={};var ExternalFileAttributeType;(function(ExternalFileAttributeType2){ExternalFileAttributeType2[ExternalFileAttributeType2["MSDOS"]=0]="MSDOS";ExternalFileAttributeType2[ExternalFileAttributeType2["AMIGA"]=1]="AMIGA";ExternalFileAttributeType2[ExternalFileAttributeType2["OPENVMS"]=2]="OPENVMS";ExternalFileAttributeType2[ExternalFileAttributeType2["UNIX"]=3]="UNIX";ExternalFileAttributeType2[ExternalFileAttributeType2["VM_CMS"]=4]="VM_CMS";ExternalFileAttributeType2[ExternalFileAttributeType2["ATARI_ST"]=5]="ATARI_ST";ExternalFileAttributeType2[ExternalFileAttributeType2["OS2_HPFS"]=6]="OS2_HPFS";ExternalFileAttributeType2[ExternalFileAttributeType2["MAC"]=7]="MAC";ExternalFileAttributeType2[ExternalFileAttributeType2["Z_SYSTEM"]=8]="Z_SYSTEM";ExternalFileAttributeType2[ExternalFileAttributeType2["CP_M"]=9]="CP_M";ExternalFileAttributeType2[ExternalFileAttributeType2["NTFS"]=10]="NTFS";ExternalFileAttributeType2[ExternalFileAttributeType2["MVS"]=11]="MVS";ExternalFileAttributeType2[ExternalFileAttributeType2["VSE"]=12]="VSE";ExternalFileAttributeType2[ExternalFileAttributeType2["ACORN_RISC"]=13]="ACORN_RISC";ExternalFileAttributeType2[ExternalFileAttributeType2["VFAT"]=14]="VFAT";ExternalFileAttributeType2[ExternalFileAttributeType2["ALT_MVS"]=15]="ALT_MVS";ExternalFileAttributeType2[ExternalFileAttributeType2["BEOS"]=16]="BEOS";ExternalFileAttributeType2[ExternalFileAttributeType2["TANDEM"]=17]="TANDEM";ExternalFileAttributeType2[ExternalFileAttributeType2["OS_400"]=18]="OS_400";ExternalFileAttributeType2[ExternalFileAttributeType2["OSX"]=19]="OSX"})(ExternalFileAttributeType||(ExternalFileAttributeType={}));var CompressionMethod;(function(CompressionMethod2){CompressionMethod2[CompressionMethod2["STORED"]=0]="STORED";CompressionMethod2[CompressionMethod2["SHRUNK"]=1]="SHRUNK";CompressionMethod2[CompressionMethod2["REDUCED_1"]=2]="REDUCED_1";CompressionMethod2[CompressionMethod2["REDUCED_2"]=3]="REDUCED_2";CompressionMethod2[CompressionMethod2["REDUCED_3"]=4]="REDUCED_3";CompressionMethod2[CompressionMethod2["REDUCED_4"]=5]="REDUCED_4";CompressionMethod2[CompressionMethod2["IMPLODE"]=6]="IMPLODE";CompressionMethod2[CompressionMethod2["DEFLATE"]=8]="DEFLATE";CompressionMethod2[CompressionMethod2["DEFLATE64"]=9]="DEFLATE64";CompressionMethod2[CompressionMethod2["TERSE_OLD"]=10]="TERSE_OLD";CompressionMethod2[CompressionMethod2["BZIP2"]=12]="BZIP2";CompressionMethod2[CompressionMethod2["LZMA"]=14]="LZMA";CompressionMethod2[CompressionMethod2["TERSE_NEW"]=18]="TERSE_NEW";CompressionMethod2[CompressionMethod2["LZ77"]=19]="LZ77";CompressionMethod2[CompressionMethod2["WAVPACK"]=97]="WAVPACK";CompressionMethod2[CompressionMethod2["PPMD"]=98]="PPMD"})(CompressionMethod||(CompressionMethod={}));function msdos2date(time,date){var day=date&31;var month=(date>>5&15)-1;var year=(date>>9)+1980;var second=time&31;var minute=time>>5&63;var hour=time>>11;return new Date(year,month,day,hour,minute,second)}function safeToString(buff,useUTF8,start,length){if(length===0){return""}else if(useUTF8){return buff.toString("utf8",start,start+length)}else{return ExtendedASCII.byte2str(buff.slice(start,start+length))}}var FileHeader=function FileHeader2(data){this.data=data;if(data.readUInt32LE(0)!==67324752){throw new ApiError(ErrorCode.EINVAL,"Invalid Zip file: Local file header has invalid signature: "+this.data.readUInt32LE(0))}};FileHeader.prototype.versionNeeded=function versionNeeded(){return this.data.readUInt16LE(4)};FileHeader.prototype.flags=function flags(){return this.data.readUInt16LE(6)};FileHeader.prototype.compressionMethod=function compressionMethod(){return this.data.readUInt16LE(8)};FileHeader.prototype.lastModFileTime=function lastModFileTime(){return msdos2date(this.data.readUInt16LE(10),this.data.readUInt16LE(12))};FileHeader.prototype.rawLastModFileTime=function rawLastModFileTime(){return this.data.readUInt32LE(10)};FileHeader.prototype.crc32=function crc32(){return this.data.readUInt32LE(14)};FileHeader.prototype.fileNameLength=function fileNameLength(){return this.data.readUInt16LE(26)};FileHeader.prototype.extraFieldLength=function extraFieldLength(){return this.data.readUInt16LE(28)};FileHeader.prototype.fileName=function fileName(){return safeToString(this.data,this.useUTF8(),30,this.fileNameLength())};FileHeader.prototype.extraField=function extraField(){var start=30+this.fileNameLength();return this.data.slice(start,start+this.extraFieldLength())};FileHeader.prototype.totalSize=function totalSize(){return 30+this.fileNameLength()+this.extraFieldLength()};FileHeader.prototype.useUTF8=function useUTF8(){return(this.flags()&2048)===2048};var FileData=function FileData2(header,record,data){this.header=header;this.record=record;this.data=data};FileData.prototype.decompress=function decompress(){var compressionMethod=this.header.compressionMethod();var fcn=decompressionMethods[compressionMethod];if(fcn){return fcn(this.data,this.record.compressedSize(),this.record.uncompressedSize(),this.record.flag())}else{var name2=CompressionMethod[compressionMethod];if(!name2){name2="Unknown: "+compressionMethod}throw new ApiError(ErrorCode.EINVAL,"Invalid compression method on file \'"+this.header.fileName()+"\': "+name2)}};FileData.prototype.getHeader=function getHeader(){return this.header};FileData.prototype.getRecord=function getRecord(){return this.record};FileData.prototype.getRawData=function getRawData(){return this.data};var DataDescriptor=function DataDescriptor2(data){this.data=data};DataDescriptor.prototype.crc32=function crc32(){return this.data.readUInt32LE(0)};DataDescriptor.prototype.compressedSize=function compressedSize(){return this.data.readUInt32LE(4)};DataDescriptor.prototype.uncompressedSize=function uncompressedSize(){return this.data.readUInt32LE(8)};var ArchiveExtraDataRecord=function ArchiveExtraDataRecord2(data){this.data=data;if(this.data.readUInt32LE(0)!==134630224){throw new ApiError(ErrorCode.EINVAL,"Invalid archive extra data record signature: "+this.data.readUInt32LE(0))}};ArchiveExtraDataRecord.prototype.length=function length(){return this.data.readUInt32LE(4)};ArchiveExtraDataRecord.prototype.extraFieldData=function extraFieldData(){return this.data.slice(8,8+this.length())};var DigitalSignature=function DigitalSignature2(data){this.data=data;if(this.data.readUInt32LE(0)!==84233040){throw new ApiError(ErrorCode.EINVAL,"Invalid digital signature signature: "+this.data.readUInt32LE(0))}};DigitalSignature.prototype.size=function size(){return this.data.readUInt16LE(4)};DigitalSignature.prototype.signatureData=function signatureData(){return this.data.slice(6,6+this.size())};var CentralDirectory=function CentralDirectory2(zipData,data){this.zipData=zipData;this.data=data;if(this.data.readUInt32LE(0)!==33639248){throw new ApiError(ErrorCode.EINVAL,"Invalid Zip file: Central directory record has invalid signature: "+this.data.readUInt32LE(0))}this._filename=this.produceFilename()};CentralDirectory.prototype.versionMadeBy=function versionMadeBy(){return this.data.readUInt16LE(4)};CentralDirectory.prototype.versionNeeded=function versionNeeded(){return this.data.readUInt16LE(6)};CentralDirectory.prototype.flag=function flag(){return this.data.readUInt16LE(8)};CentralDirectory.prototype.compressionMethod=function compressionMethod(){return this.data.readUInt16LE(10)};CentralDirectory.prototype.lastModFileTime=function lastModFileTime(){return msdos2date(this.data.readUInt16LE(12),this.data.readUInt16LE(14))};CentralDirectory.prototype.rawLastModFileTime=function rawLastModFileTime(){return this.data.readUInt32LE(12)};CentralDirectory.prototype.crc32=function crc32(){return this.data.readUInt32LE(16)};CentralDirectory.prototype.compressedSize=function compressedSize(){return this.data.readUInt32LE(20)};CentralDirectory.prototype.uncompressedSize=function uncompressedSize(){return this.data.readUInt32LE(24)};CentralDirectory.prototype.fileNameLength=function fileNameLength(){return this.data.readUInt16LE(28)};CentralDirectory.prototype.extraFieldLength=function extraFieldLength(){return this.data.readUInt16LE(30)};CentralDirectory.prototype.fileCommentLength=function fileCommentLength(){return this.data.readUInt16LE(32)};CentralDirectory.prototype.diskNumberStart=function diskNumberStart(){return this.data.readUInt16LE(34)};CentralDirectory.prototype.internalAttributes=function internalAttributes(){return this.data.readUInt16LE(36)};CentralDirectory.prototype.externalAttributes=function externalAttributes(){return this.data.readUInt32LE(38)};CentralDirectory.prototype.headerRelativeOffset=function headerRelativeOffset(){return this.data.readUInt32LE(42)};CentralDirectory.prototype.produceFilename=function produceFilename(){var fileName=safeToString(this.data,this.useUTF8(),46,this.fileNameLength());return fileName.replace(/\\\\/g,"/")};CentralDirectory.prototype.fileName=function fileName(){return this._filename};CentralDirectory.prototype.rawFileName=function rawFileName(){return this.data.slice(46,46+this.fileNameLength())};CentralDirectory.prototype.extraField=function extraField(){var start=44+this.fileNameLength();return this.data.slice(start,start+this.extraFieldLength())};CentralDirectory.prototype.fileComment=function fileComment(){var start=46+this.fileNameLength()+this.extraFieldLength();return safeToString(this.data,this.useUTF8(),start,this.fileCommentLength())};CentralDirectory.prototype.rawFileComment=function rawFileComment(){var start=46+this.fileNameLength()+this.extraFieldLength();return this.data.slice(start,start+this.fileCommentLength())};CentralDirectory.prototype.totalSize=function totalSize(){return 46+this.fileNameLength()+this.extraFieldLength()+this.fileCommentLength()};CentralDirectory.prototype.isDirectory=function isDirectory(){var fileName=this.fileName();return(this.externalAttributes()&16?true:false)||fileName.charAt(fileName.length-1)==="/"};CentralDirectory.prototype.isFile=function isFile(){return!this.isDirectory()};CentralDirectory.prototype.useUTF8=function useUTF8(){return(this.flag()&2048)===2048};CentralDirectory.prototype.isEncrypted=function isEncrypted(){return(this.flag()&1)===1};CentralDirectory.prototype.getFileData=function getFileData(){var start=this.headerRelativeOffset();var header=new FileHeader(this.zipData.slice(start));return new FileData(header,this,this.zipData.slice(start+header.totalSize()))};CentralDirectory.prototype.getData=function getData(){return this.getFileData().decompress()};CentralDirectory.prototype.getRawData=function getRawData(){return this.getFileData().getRawData()};CentralDirectory.prototype.getStats=function getStats(){return new Stats(FileType.FILE,this.uncompressedSize(),365,new Date,this.lastModFileTime())};var EndOfCentralDirectory=function EndOfCentralDirectory2(data){this.data=data;if(this.data.readUInt32LE(0)!==101010256){throw new ApiError(ErrorCode.EINVAL,"Invalid Zip file: End of central directory record has invalid signature: "+this.data.readUInt32LE(0))}};EndOfCentralDirectory.prototype.diskNumber=function diskNumber(){return this.data.readUInt16LE(4)};EndOfCentralDirectory.prototype.cdDiskNumber=function cdDiskNumber(){return this.data.readUInt16LE(6)};EndOfCentralDirectory.prototype.cdDiskEntryCount=function cdDiskEntryCount(){return this.data.readUInt16LE(8)};EndOfCentralDirectory.prototype.cdTotalEntryCount=function cdTotalEntryCount(){return this.data.readUInt16LE(10)};EndOfCentralDirectory.prototype.cdSize=function cdSize(){return this.data.readUInt32LE(12)};EndOfCentralDirectory.prototype.cdOffset=function cdOffset(){return this.data.readUInt32LE(16)};EndOfCentralDirectory.prototype.cdZipCommentLength=function cdZipCommentLength(){return this.data.readUInt16LE(20)};EndOfCentralDirectory.prototype.cdZipComment=function cdZipComment(){return safeToString(this.data,true,22,this.cdZipCommentLength())};EndOfCentralDirectory.prototype.rawCdZipComment=function rawCdZipComment(){return this.data.slice(22,22+this.cdZipCommentLength())};var ZipTOC=function ZipTOC2(index,directoryEntries,eocd,data){this.index=index;this.directoryEntries=directoryEntries;this.eocd=eocd;this.data=data};var ZipFS=function(SynchronousFileSystem$$1){function ZipFS2(input,name2,deprecateMsg){if(name2===void 0)name2="";if(deprecateMsg===void 0)deprecateMsg=true;SynchronousFileSystem$$1.call(this);this.name=name2;this._index=new FileIndex;this._directoryEntries=[];this._eocd=null;deprecationMessage(deprecateMsg,ZipFS2.Name,{zipData:"zip data as a Buffer",name:name2});if(input instanceof ZipTOC){this._index=input.index;this._directoryEntries=input.directoryEntries;this._eocd=input.eocd;this.data=input.data}else{this.data=input;this.populateIndex()}}if(SynchronousFileSystem$$1)ZipFS2.__proto__=SynchronousFileSystem$$1;ZipFS2.prototype=Object.create(SynchronousFileSystem$$1&&SynchronousFileSystem$$1.prototype);ZipFS2.prototype.constructor=ZipFS2;ZipFS2.Create=function Create(opts,cb){try{ZipFS2.computeIndex(opts.zipData,function(zipTOC){var fs4=new ZipFS2(zipTOC,opts.name,false);cb(null,fs4)},false)}catch(e){cb(e)}};ZipFS2.isAvailable=function isAvailable(){return true};ZipFS2.RegisterDecompressionMethod=function RegisterDecompressionMethod(m,fcn){decompressionMethods[m]=fcn};ZipFS2.computeIndex=function computeIndex(data,cb,deprecateMsg){if(deprecateMsg===void 0)deprecateMsg=true;if(deprecateMsg){console.warn("[ZipFS] ZipFS.computeIndex is now deprecated, and will be removed in the next major release. Please update your code to use \'ZipFS.Create({ zipData: zip file as a Buffer}, cb)\' instead.")}var index=new FileIndex;var eocd=ZipFS2.getEOCD(data);if(eocd.diskNumber()!==eocd.cdDiskNumber()){throw new ApiError(ErrorCode.EINVAL,"ZipFS does not support spanned zip files.")}var cdPtr=eocd.cdOffset();if(cdPtr===4294967295){throw new ApiError(ErrorCode.EINVAL,"ZipFS does not support Zip64.")}var cdEnd=cdPtr+eocd.cdSize();ZipFS2.computeIndexResponsive(data,index,cdPtr,cdEnd,cb,[],eocd)};ZipFS2.getEOCD=function getEOCD(data){var startOffset=22;var endOffset=Math.min(startOffset+65535,data.length-1);for(var i2=startOffset;i2<endOffset;i2++){if(data.readUInt32LE(data.length-i2)===101010256){return new EndOfCentralDirectory(data.slice(data.length-i2))}}throw new ApiError(ErrorCode.EINVAL,"Invalid ZIP file: Could not locate End of Central Directory signature.")};ZipFS2.addToIndex=function addToIndex(cd,index){var filename=cd.fileName();if(filename.charAt(0)==="/"){throw new Error("WHY IS THIS ABSOLUTE")}if(filename.charAt(filename.length-1)==="/"){filename=filename.substr(0,filename.length-1)}if(cd.isDirectory()){index.addPathFast("/"+filename,new DirInode(cd))}else{index.addPathFast("/"+filename,new FileInode(cd))}};ZipFS2.computeIndexResponsive=function computeIndexResponsive(data,index,cdPtr,cdEnd,cb,cdEntries,eocd){if(cdPtr<cdEnd){var count=0;while(count++<200&&cdPtr<cdEnd){var cd=new CentralDirectory(data,data.slice(cdPtr));ZipFS2.addToIndex(cd,index);cdPtr+=cd.totalSize();cdEntries.push(cd)}setImmediate$3(function(){ZipFS2.computeIndexResponsive(data,index,cdPtr,cdEnd,cb,cdEntries,eocd)})}else{cb(new ZipTOC(index,cdEntries,eocd,data))}};ZipFS2.prototype.getName=function getName(){return ZipFS2.Name+(this.name!==""?" "+this.name:"")};ZipFS2.prototype.getCentralDirectoryEntry=function getCentralDirectoryEntry(path$$1){var inode=this._index.getInode(path$$1);if(inode===null){throw ApiError.ENOENT(path$$1)}if(isFileInode(inode)){return inode.getData()}else if(isDirInode(inode)){return inode.getData()}else{throw ApiError.EPERM("Invalid inode: "+inode)}};ZipFS2.prototype.getCentralDirectoryEntryAt=function getCentralDirectoryEntryAt(index){var dirEntry=this._directoryEntries[index];if(!dirEntry){throw new RangeError("Invalid directory index: "+index+".")}return dirEntry};ZipFS2.prototype.getNumberOfCentralDirectoryEntries=function getNumberOfCentralDirectoryEntries(){return this._directoryEntries.length};ZipFS2.prototype.getEndOfCentralDirectory=function getEndOfCentralDirectory(){return this._eocd};ZipFS2.prototype.diskSpace=function diskSpace(path$$1,cb){cb(this.data.length,0)};ZipFS2.prototype.isReadOnly=function isReadOnly(){return true};ZipFS2.prototype.supportsLinks=function supportsLinks(){return false};ZipFS2.prototype.supportsProps=function supportsProps(){return false};ZipFS2.prototype.supportsSynch=function supportsSynch(){return true};ZipFS2.prototype.statSync=function statSync(path$$1,isLstat){var inode=this._index.getInode(path$$1);if(inode===null){throw ApiError.ENOENT(path$$1)}var stats;if(isFileInode(inode)){stats=inode.getData().getStats()}else if(isDirInode(inode)){stats=inode.getStats()}else{throw new ApiError(ErrorCode.EINVAL,"Invalid inode.")}return stats};ZipFS2.prototype.openSync=function openSync(path$$1,flags,mode){if(flags.isWriteable()){throw new ApiError(ErrorCode.EPERM,path$$1)}var inode=this._index.getInode(path$$1);if(!inode){throw ApiError.ENOENT(path$$1)}else if(isFileInode(inode)){var cdRecord=inode.getData();var stats=cdRecord.getStats();switch(flags.pathExistsAction()){case ActionType.THROW_EXCEPTION:case ActionType.TRUNCATE_FILE:throw ApiError.EEXIST(path$$1);case ActionType.NOP:return new NoSyncFile(this,path$$1,flags,stats,cdRecord.getData());default:throw new ApiError(ErrorCode.EINVAL,"Invalid FileMode object.")}}else{throw ApiError.EISDIR(path$$1)}};ZipFS2.prototype.readdirSync=function readdirSync(path$$1){var inode=this._index.getInode(path$$1);if(!inode){throw ApiError.ENOENT(path$$1)}else if(isDirInode(inode)){return inode.getListing()}else{throw ApiError.ENOTDIR(path$$1)}};ZipFS2.prototype.readFileSync=function readFileSync(fname,encoding,flag){var fd=this.openSync(fname,flag,420);try{var fdCast=fd;var fdBuff=fdCast.getBuffer();if(encoding===null){return copyingSlice(fdBuff)}return fdBuff.toString(encoding)}finally{fd.closeSync()}};ZipFS2.prototype.populateIndex=function populateIndex(){var this$1=this;var eocd=this._eocd=ZipFS2.getEOCD(this.data);if(eocd.diskNumber()!==eocd.cdDiskNumber()){throw new ApiError(ErrorCode.EINVAL,"ZipFS does not support spanned zip files.")}var cdPtr=eocd.cdOffset();if(cdPtr===4294967295){throw new ApiError(ErrorCode.EINVAL,"ZipFS does not support Zip64.")}var cdEnd=cdPtr+eocd.cdSize();while(cdPtr<cdEnd){var cd=new CentralDirectory(this$1.data,this$1.data.slice(cdPtr));cdPtr+=cd.totalSize();ZipFS2.addToIndex(cd,this$1._index);this$1._directoryEntries.push(cd)}};return ZipFS2}(SynchronousFileSystem);ZipFS.Name="ZipFS";ZipFS.Options={zipData:{type:"object",description:"The zip file as a Buffer object.",validator:bufferValidator},name:{type:"string",optional:true,description:"The name of the zip file (optional)."}};ZipFS.CompressionMethod=CompressionMethod;ZipFS.RegisterDecompressionMethod(CompressionMethod.DEFLATE,function(data,compressedSize,uncompressedSize){return arrayish2Buffer(inflateRaw(data.slice(0,compressedSize),{chunkSize:uncompressedSize}))});ZipFS.RegisterDecompressionMethod(CompressionMethod.STORED,function(data,compressedSize,uncompressedSize){return copyingSlice(data,0,uncompressedSize)});var rockRidgeIdentifier="IEEE_P1282";function getASCIIString(data,startIndex,length){return data.toString("ascii",startIndex,startIndex+length).trim()}function getJolietString(data,startIndex,length){if(length===1){return String.fromCharCode(data[startIndex])}var pairs=Math.floor(length/2);var chars=new Array(pairs);for(var i2=0;i2<pairs;i2++){var pos=startIndex+(i2<<1);chars[i2]=String.fromCharCode(data[pos+1]|data[pos]<<8)}return chars.join("")}function getDate(data,startIndex){var year=parseInt(getASCIIString(data,startIndex,4),10);var mon=parseInt(getASCIIString(data,startIndex+4,2),10);var day=parseInt(getASCIIString(data,startIndex+6,2),10);var hour=parseInt(getASCIIString(data,startIndex+8,2),10);var min=parseInt(getASCIIString(data,startIndex+10,2),10);var sec=parseInt(getASCIIString(data,startIndex+12,2),10);var hundrethsSec=parseInt(getASCIIString(data,startIndex+14,2),10);return new Date(year,mon,day,hour,min,sec,hundrethsSec*100)}function getShortFormDate(data,startIndex){var yearsSince1900=data[startIndex];var month=data[startIndex+1];var day=data[startIndex+2];var hour=data[startIndex+3];var minute=data[startIndex+4];var second=data[startIndex+5];return new Date(yearsSince1900,month-1,day,hour,minute,second)}function constructSystemUseEntry(bigData,i2){var data=bigData.slice(i2);var sue=new SystemUseEntry(data);switch(sue.signatureWord()){case 17221:return new CEEntry(data);case 20548:return new PDEntry(data);case 21328:return new SPEntry(data);case 21332:return new STEntry(data);case 17746:return new EREntry(data);case 17747:return new ESEntry(data);case 20568:return new PXEntry(data);case 20558:return new PNEntry(data);case 21324:return new SLEntry(data);case 20045:return new NMEntry(data);case 17228:return new CLEntry(data);case 20556:return new PLEntry(data);case 21061:return new REEntry(data);case 21574:return new TFEntry(data);case 21318:return new SFEntry(data);case 21074:return new RREntry(data);default:return sue}}function constructSystemUseEntries(data,i2,len,isoData){len=len-4;var entries=new Array;while(i2<len){var entry=constructSystemUseEntry(data,i2);var length=entry.length();if(length===0){return entries}i2+=length;if(entry instanceof STEntry){break}if(entry instanceof CEEntry){entries=entries.concat(entry.getEntries(isoData))}else{entries.push(entry)}}return entries}var VolumeDescriptor=function VolumeDescriptor2(data){this._data=data};VolumeDescriptor.prototype.type=function type(){return this._data[0]};VolumeDescriptor.prototype.standardIdentifier=function standardIdentifier(){return getASCIIString(this._data,1,5)};VolumeDescriptor.prototype.version=function version(){return this._data[6]};VolumeDescriptor.prototype.data=function data(){return this._data.slice(7,2048)};var PrimaryOrSupplementaryVolumeDescriptor=function(VolumeDescriptor2){function PrimaryOrSupplementaryVolumeDescriptor2(data){VolumeDescriptor2.call(this,data);this._root=null}if(VolumeDescriptor2)PrimaryOrSupplementaryVolumeDescriptor2.__proto__=VolumeDescriptor2;PrimaryOrSupplementaryVolumeDescriptor2.prototype=Object.create(VolumeDescriptor2&&VolumeDescriptor2.prototype);PrimaryOrSupplementaryVolumeDescriptor2.prototype.constructor=PrimaryOrSupplementaryVolumeDescriptor2;PrimaryOrSupplementaryVolumeDescriptor2.prototype.systemIdentifier=function systemIdentifier(){return this._getString32(8)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.volumeIdentifier=function volumeIdentifier(){return this._getString32(40)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.volumeSpaceSize=function volumeSpaceSize(){return this._data.readUInt32LE(80)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.volumeSetSize=function volumeSetSize(){return this._data.readUInt16LE(120)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.volumeSequenceNumber=function volumeSequenceNumber(){return this._data.readUInt16LE(124)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.logicalBlockSize=function logicalBlockSize(){return this._data.readUInt16LE(128)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.pathTableSize=function pathTableSize(){return this._data.readUInt32LE(132)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.locationOfTypeLPathTable=function locationOfTypeLPathTable(){return this._data.readUInt32LE(140)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.locationOfOptionalTypeLPathTable=function locationOfOptionalTypeLPathTable(){return this._data.readUInt32LE(144)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.locationOfTypeMPathTable=function locationOfTypeMPathTable(){return this._data.readUInt32BE(148)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.locationOfOptionalTypeMPathTable=function locationOfOptionalTypeMPathTable(){return this._data.readUInt32BE(152)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.rootDirectoryEntry=function rootDirectoryEntry(isoData){if(this._root===null){this._root=this._constructRootDirectoryRecord(this._data.slice(156));this._root.rootCheckForRockRidge(isoData)}return this._root};PrimaryOrSupplementaryVolumeDescriptor2.prototype.volumeSetIdentifier=function volumeSetIdentifier(){return this._getString(190,128)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.publisherIdentifier=function publisherIdentifier(){return this._getString(318,128)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.dataPreparerIdentifier=function dataPreparerIdentifier(){return this._getString(446,128)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.applicationIdentifier=function applicationIdentifier(){return this._getString(574,128)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.copyrightFileIdentifier=function copyrightFileIdentifier(){return this._getString(702,38)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.abstractFileIdentifier=function abstractFileIdentifier(){return this._getString(740,36)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.bibliographicFileIdentifier=function bibliographicFileIdentifier(){return this._getString(776,37)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.volumeCreationDate=function volumeCreationDate(){return getDate(this._data,813)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.volumeModificationDate=function volumeModificationDate(){return getDate(this._data,830)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.volumeExpirationDate=function volumeExpirationDate(){return getDate(this._data,847)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.volumeEffectiveDate=function volumeEffectiveDate(){return getDate(this._data,864)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.fileStructureVersion=function fileStructureVersion(){return this._data[881]};PrimaryOrSupplementaryVolumeDescriptor2.prototype.applicationUsed=function applicationUsed(){return this._data.slice(883,883+512)};PrimaryOrSupplementaryVolumeDescriptor2.prototype.reserved=function reserved(){return this._data.slice(1395,1395+653)};PrimaryOrSupplementaryVolumeDescriptor2.prototype._getString32=function _getString32(idx){return this._getString(idx,32)};return PrimaryOrSupplementaryVolumeDescriptor2}(VolumeDescriptor);var PrimaryVolumeDescriptor=function(PrimaryOrSupplementaryVolumeDescriptor2){function PrimaryVolumeDescriptor2(data){PrimaryOrSupplementaryVolumeDescriptor2.call(this,data);if(this.type()!==1){throw new ApiError(ErrorCode.EIO,"Invalid primary volume descriptor.")}}if(PrimaryOrSupplementaryVolumeDescriptor2)PrimaryVolumeDescriptor2.__proto__=PrimaryOrSupplementaryVolumeDescriptor2;PrimaryVolumeDescriptor2.prototype=Object.create(PrimaryOrSupplementaryVolumeDescriptor2&&PrimaryOrSupplementaryVolumeDescriptor2.prototype);PrimaryVolumeDescriptor2.prototype.constructor=PrimaryVolumeDescriptor2;PrimaryVolumeDescriptor2.prototype.name=function name2(){return"ISO9660"};PrimaryVolumeDescriptor2.prototype._constructRootDirectoryRecord=function _constructRootDirectoryRecord(data){return new ISODirectoryRecord(data,-1)};PrimaryVolumeDescriptor2.prototype._getString=function _getString(idx,len){return this._getString(idx,len)};return PrimaryVolumeDescriptor2}(PrimaryOrSupplementaryVolumeDescriptor);var SupplementaryVolumeDescriptor=function(PrimaryOrSupplementaryVolumeDescriptor2){function SupplementaryVolumeDescriptor2(data){PrimaryOrSupplementaryVolumeDescriptor2.call(this,data);if(this.type()!==2){throw new ApiError(ErrorCode.EIO,"Invalid supplementary volume descriptor.")}var escapeSequence=this.escapeSequence();var third=escapeSequence[2];if(escapeSequence[0]!==37||escapeSequence[1]!==47||third!==64&&third!==67&&third!==69){throw new ApiError(ErrorCode.EIO,"Unrecognized escape sequence for SupplementaryVolumeDescriptor: "+escapeSequence.toString())}}if(PrimaryOrSupplementaryVolumeDescriptor2)SupplementaryVolumeDescriptor2.__proto__=PrimaryOrSupplementaryVolumeDescriptor2;SupplementaryVolumeDescriptor2.prototype=Object.create(PrimaryOrSupplementaryVolumeDescriptor2&&PrimaryOrSupplementaryVolumeDescriptor2.prototype);SupplementaryVolumeDescriptor2.prototype.constructor=SupplementaryVolumeDescriptor2;SupplementaryVolumeDescriptor2.prototype.name=function name2(){return"Joliet"};SupplementaryVolumeDescriptor2.prototype.escapeSequence=function escapeSequence(){return this._data.slice(88,120)};SupplementaryVolumeDescriptor2.prototype._constructRootDirectoryRecord=function _constructRootDirectoryRecord(data){return new JolietDirectoryRecord(data,-1)};SupplementaryVolumeDescriptor2.prototype._getString=function _getString(idx,len){return getJolietString(this._data,idx,len)};return SupplementaryVolumeDescriptor2}(PrimaryOrSupplementaryVolumeDescriptor);var DirectoryRecord=function DirectoryRecord2(data,rockRidgeOffset){this._suEntries=null;this._fileOrDir=null;this._data=data;this._rockRidgeOffset=rockRidgeOffset};DirectoryRecord.prototype.hasRockRidge=function hasRockRidge(){return this._rockRidgeOffset>-1};DirectoryRecord.prototype.getRockRidgeOffset=function getRockRidgeOffset(){return this._rockRidgeOffset};DirectoryRecord.prototype.rootCheckForRockRidge=function rootCheckForRockRidge(isoData){var dir2=this.getDirectory(isoData);this._rockRidgeOffset=dir2.getDotEntry(isoData)._getRockRidgeOffset(isoData);if(this._rockRidgeOffset>-1){this._fileOrDir=null}};DirectoryRecord.prototype.length=function length(){return this._data[0]};DirectoryRecord.prototype.extendedAttributeRecordLength=function extendedAttributeRecordLength(){return this._data[1]};DirectoryRecord.prototype.lba=function lba(){return this._data.readUInt32LE(2)*2048};DirectoryRecord.prototype.dataLength=function dataLength(){return this._data.readUInt32LE(10)};DirectoryRecord.prototype.recordingDate=function recordingDate(){return getShortFormDate(this._data,18)};DirectoryRecord.prototype.fileFlags=function fileFlags(){return this._data[25]};DirectoryRecord.prototype.fileUnitSize=function fileUnitSize(){return this._data[26]};DirectoryRecord.prototype.interleaveGapSize=function interleaveGapSize(){return this._data[27]};DirectoryRecord.prototype.volumeSequenceNumber=function volumeSequenceNumber(){return this._data.readUInt16LE(28)};DirectoryRecord.prototype.identifier=function identifier(){return this._getString(33,this._data[32])};DirectoryRecord.prototype.fileName=function fileName(isoData){if(this.hasRockRidge()){var fn2=this._rockRidgeFilename(isoData);if(fn2!==null){return fn2}}var ident=this.identifier();if(this.isDirectory(isoData)){return ident}var versionSeparator=ident.indexOf(";");if(versionSeparator===-1){return ident}else if(ident[versionSeparator-1]==="."){return ident.slice(0,versionSeparator-1)}else{return ident.slice(0,versionSeparator)}};DirectoryRecord.prototype.isDirectory=function isDirectory(isoData){var rv=!!(this.fileFlags()&2);if(!rv&&this.hasRockRidge()){rv=this.getSUEntries(isoData).filter(function(e){return e instanceof CLEntry}).length>0}return rv};DirectoryRecord.prototype.isSymlink=function isSymlink(isoData){return this.hasRockRidge()&&this.getSUEntries(isoData).filter(function(e){return e instanceof SLEntry}).length>0};DirectoryRecord.prototype.getSymlinkPath=function getSymlinkPath(isoData){var p="";var entries=this.getSUEntries(isoData);var getStr=this._getGetString();for(var i2=0,list2=entries;i2<list2.length;i2+=1){var entry=list2[i2];if(entry instanceof SLEntry){var components=entry.componentRecords();for(var i$12=0,list$1=components;i$12<list$1.length;i$12+=1){var component=list$1[i$12];var flags=component.flags();if(flags&2){p+="./"}else if(flags&4){p+="../"}else if(flags&8){p+="/"}else{p+=component.content(getStr);if(!(flags&1)){p+="/"}}}if(!entry.continueFlag()){break}}}if(p.length>1&&p[p.length-1]==="/"){return p.slice(0,p.length-1)}else{return p}};DirectoryRecord.prototype.getFile=function getFile(isoData){if(this.isDirectory(isoData)){throw new Error("Tried to get a File from a directory.")}if(this._fileOrDir===null){this._fileOrDir=isoData.slice(this.lba(),this.lba()+this.dataLength())}return this._fileOrDir};DirectoryRecord.prototype.getDirectory=function getDirectory(isoData){if(!this.isDirectory(isoData)){throw new Error("Tried to get a Directory from a file.")}if(this._fileOrDir===null){this._fileOrDir=this._constructDirectory(isoData)}return this._fileOrDir};DirectoryRecord.prototype.getSUEntries=function getSUEntries(isoData){if(!this._suEntries){this._constructSUEntries(isoData)}return this._suEntries};DirectoryRecord.prototype._rockRidgeFilename=function _rockRidgeFilename(isoData){var nmEntries=this.getSUEntries(isoData).filter(function(e2){return e2 instanceof NMEntry});if(nmEntries.length===0||nmEntries[0].flags()&(2|4)){return null}var str3="";var getString=this._getGetString();for(var i2=0,list2=nmEntries;i2<list2.length;i2+=1){var e=list2[i2];str3+=e.name(getString);if(!(e.flags()&1)){break}}return str3};DirectoryRecord.prototype._constructSUEntries=function _constructSUEntries(isoData){var i2=33+this._data[32];if(i2%2===1){i2++}i2+=this._rockRidgeOffset;this._suEntries=constructSystemUseEntries(this._data,i2,this.length(),isoData)};DirectoryRecord.prototype._getRockRidgeOffset=function _getRockRidgeOffset(isoData){this._rockRidgeOffset=0;var suEntries=this.getSUEntries(isoData);if(suEntries.length>0){var spEntry=suEntries[0];if(spEntry instanceof SPEntry&&spEntry.checkBytesPass()){for(var i2=1;i2<suEntries.length;i2++){var entry=suEntries[i2];if(entry instanceof RREntry||entry instanceof EREntry&&entry.extensionIdentifier()===rockRidgeIdentifier){return spEntry.bytesSkipped()}}}}this._rockRidgeOffset=-1;return-1};var ISODirectoryRecord=function(DirectoryRecord2){function ISODirectoryRecord2(data,rockRidgeOffset){DirectoryRecord2.call(this,data,rockRidgeOffset)}if(DirectoryRecord2)ISODirectoryRecord2.__proto__=DirectoryRecord2;ISODirectoryRecord2.prototype=Object.create(DirectoryRecord2&&DirectoryRecord2.prototype);ISODirectoryRecord2.prototype.constructor=ISODirectoryRecord2;ISODirectoryRecord2.prototype._getString=function _getString(i2,len){return getASCIIString(this._data,i2,len)};ISODirectoryRecord2.prototype._constructDirectory=function _constructDirectory(isoData){return new ISODirectory(this,isoData)};ISODirectoryRecord2.prototype._getGetString=function _getGetString(){return getASCIIString};return ISODirectoryRecord2}(DirectoryRecord);var JolietDirectoryRecord=function(DirectoryRecord2){function JolietDirectoryRecord2(data,rockRidgeOffset){DirectoryRecord2.call(this,data,rockRidgeOffset)}if(DirectoryRecord2)JolietDirectoryRecord2.__proto__=DirectoryRecord2;JolietDirectoryRecord2.prototype=Object.create(DirectoryRecord2&&DirectoryRecord2.prototype);JolietDirectoryRecord2.prototype.constructor=JolietDirectoryRecord2;JolietDirectoryRecord2.prototype._getString=function _getString(i2,len){return getJolietString(this._data,i2,len)};JolietDirectoryRecord2.prototype._constructDirectory=function _constructDirectory(isoData){return new JolietDirectory(this,isoData)};JolietDirectoryRecord2.prototype._getGetString=function _getGetString(){return getJolietString};return JolietDirectoryRecord2}(DirectoryRecord);var SystemUseEntry=function SystemUseEntry2(data){this._data=data};SystemUseEntry.prototype.signatureWord=function signatureWord(){return this._data.readUInt16BE(0)};SystemUseEntry.prototype.signatureWordString=function signatureWordString(){return getASCIIString(this._data,0,2)};SystemUseEntry.prototype.length=function length(){return this._data[2]};SystemUseEntry.prototype.suVersion=function suVersion(){return this._data[3]};var CEEntry=function(SystemUseEntry2){function CEEntry2(data){SystemUseEntry2.call(this,data);this._entries=null}if(SystemUseEntry2)CEEntry2.__proto__=SystemUseEntry2;CEEntry2.prototype=Object.create(SystemUseEntry2&&SystemUseEntry2.prototype);CEEntry2.prototype.constructor=CEEntry2;CEEntry2.prototype.continuationLba=function continuationLba(){return this._data.readUInt32LE(4)};CEEntry2.prototype.continuationLbaOffset=function continuationLbaOffset(){return this._data.readUInt32LE(12)};CEEntry2.prototype.continuationLength=function continuationLength(){return this._data.readUInt32LE(20)};CEEntry2.prototype.getEntries=function getEntries(isoData){if(!this._entries){var start=this.continuationLba()*2048+this.continuationLbaOffset();this._entries=constructSystemUseEntries(isoData,start,this.continuationLength(),isoData)}return this._entries};return CEEntry2}(SystemUseEntry);var PDEntry=function(SystemUseEntry2){function PDEntry2(data){SystemUseEntry2.call(this,data)}if(SystemUseEntry2)PDEntry2.__proto__=SystemUseEntry2;PDEntry2.prototype=Object.create(SystemUseEntry2&&SystemUseEntry2.prototype);PDEntry2.prototype.constructor=PDEntry2;return PDEntry2}(SystemUseEntry);var SPEntry=function(SystemUseEntry2){function SPEntry2(data){SystemUseEntry2.call(this,data)}if(SystemUseEntry2)SPEntry2.__proto__=SystemUseEntry2;SPEntry2.prototype=Object.create(SystemUseEntry2&&SystemUseEntry2.prototype);SPEntry2.prototype.constructor=SPEntry2;SPEntry2.prototype.checkBytesPass=function checkBytesPass(){return this._data[4]===190&&this._data[5]===239};SPEntry2.prototype.bytesSkipped=function bytesSkipped(){return this._data[6]};return SPEntry2}(SystemUseEntry);var STEntry=function(SystemUseEntry2){function STEntry2(data){SystemUseEntry2.call(this,data)}if(SystemUseEntry2)STEntry2.__proto__=SystemUseEntry2;STEntry2.prototype=Object.create(SystemUseEntry2&&SystemUseEntry2.prototype);STEntry2.prototype.constructor=STEntry2;return STEntry2}(SystemUseEntry);var EREntry=function(SystemUseEntry2){function EREntry2(data){SystemUseEntry2.call(this,data)}if(SystemUseEntry2)EREntry2.__proto__=SystemUseEntry2;EREntry2.prototype=Object.create(SystemUseEntry2&&SystemUseEntry2.prototype);EREntry2.prototype.constructor=EREntry2;EREntry2.prototype.identifierLength=function identifierLength(){return this._data[4]};EREntry2.prototype.descriptorLength=function descriptorLength(){return this._data[5]};EREntry2.prototype.sourceLength=function sourceLength(){return this._data[6]};EREntry2.prototype.extensionVersion=function extensionVersion(){return this._data[7]};EREntry2.prototype.extensionIdentifier=function extensionIdentifier(){return getASCIIString(this._data,8,this.identifierLength())};EREntry2.prototype.extensionDescriptor=function extensionDescriptor(){return getASCIIString(this._data,8+this.identifierLength(),this.descriptorLength())};EREntry2.prototype.extensionSource=function extensionSource(){return getASCIIString(this._data,8+this.identifierLength()+this.descriptorLength(),this.sourceLength())};return EREntry2}(SystemUseEntry);var ESEntry=function(SystemUseEntry2){function ESEntry2(data){SystemUseEntry2.call(this,data)}if(SystemUseEntry2)ESEntry2.__proto__=SystemUseEntry2;ESEntry2.prototype=Object.create(SystemUseEntry2&&SystemUseEntry2.prototype);ESEntry2.prototype.constructor=ESEntry2;ESEntry2.prototype.extensionSequence=function extensionSequence(){return this._data[4]};return ESEntry2}(SystemUseEntry);var RREntry=function(SystemUseEntry2){function RREntry2(data){SystemUseEntry2.call(this,data)}if(SystemUseEntry2)RREntry2.__proto__=SystemUseEntry2;RREntry2.prototype=Object.create(SystemUseEntry2&&SystemUseEntry2.prototype);RREntry2.prototype.constructor=RREntry2;return RREntry2}(SystemUseEntry);var PXEntry=function(SystemUseEntry2){function PXEntry2(data){SystemUseEntry2.call(this,data)}if(SystemUseEntry2)PXEntry2.__proto__=SystemUseEntry2;PXEntry2.prototype=Object.create(SystemUseEntry2&&SystemUseEntry2.prototype);PXEntry2.prototype.constructor=PXEntry2;PXEntry2.prototype.mode=function mode(){return this._data.readUInt32LE(4)};PXEntry2.prototype.fileLinks=function fileLinks(){return this._data.readUInt32LE(12)};PXEntry2.prototype.uid=function uid(){return this._data.readUInt32LE(20)};PXEntry2.prototype.gid=function gid(){return this._data.readUInt32LE(28)};PXEntry2.prototype.inode=function inode(){return this._data.readUInt32LE(36)};return PXEntry2}(SystemUseEntry);var PNEntry=function(SystemUseEntry2){function PNEntry2(data){SystemUseEntry2.call(this,data)}if(SystemUseEntry2)PNEntry2.__proto__=SystemUseEntry2;PNEntry2.prototype=Object.create(SystemUseEntry2&&SystemUseEntry2.prototype);PNEntry2.prototype.constructor=PNEntry2;PNEntry2.prototype.devTHigh=function devTHigh(){return this._data.readUInt32LE(4)};PNEntry2.prototype.devTLow=function devTLow(){return this._data.readUInt32LE(12)};return PNEntry2}(SystemUseEntry);var SLEntry=function(SystemUseEntry2){function SLEntry2(data){SystemUseEntry2.call(this,data)}if(SystemUseEntry2)SLEntry2.__proto__=SystemUseEntry2;SLEntry2.prototype=Object.create(SystemUseEntry2&&SystemUseEntry2.prototype);SLEntry2.prototype.constructor=SLEntry2;SLEntry2.prototype.flags=function flags(){return this._data[4]};SLEntry2.prototype.continueFlag=function continueFlag(){return this.flags()&1};SLEntry2.prototype.componentRecords=function componentRecords(){var this$1=this;var records=new Array;var i2=5;while(i2<this.length()){var record=new SLComponentRecord(this$1._data.slice(i2));records.push(record);i2+=record.length()}return records};return SLEntry2}(SystemUseEntry);var SLComponentRecord=function SLComponentRecord2(data){this._data=data};SLComponentRecord.prototype.flags=function flags(){return this._data[0]};SLComponentRecord.prototype.length=function length(){return 2+this.componentLength()};SLComponentRecord.prototype.componentLength=function componentLength(){return this._data[1]};SLComponentRecord.prototype.content=function content(getString){return getString(this._data,2,this.componentLength())};var NMEntry=function(SystemUseEntry2){function NMEntry2(data){SystemUseEntry2.call(this,data)}if(SystemUseEntry2)NMEntry2.__proto__=SystemUseEntry2;NMEntry2.prototype=Object.create(SystemUseEntry2&&SystemUseEntry2.prototype);NMEntry2.prototype.constructor=NMEntry2;NMEntry2.prototype.flags=function flags(){return this._data[4]};NMEntry2.prototype.name=function name2(getString){return getString(this._data,5,this.length()-5)};return NMEntry2}(SystemUseEntry);var CLEntry=function(SystemUseEntry2){function CLEntry2(data){SystemUseEntry2.call(this,data)}if(SystemUseEntry2)CLEntry2.__proto__=SystemUseEntry2;CLEntry2.prototype=Object.create(SystemUseEntry2&&SystemUseEntry2.prototype);CLEntry2.prototype.constructor=CLEntry2;CLEntry2.prototype.childDirectoryLba=function childDirectoryLba(){return this._data.readUInt32LE(4)};return CLEntry2}(SystemUseEntry);var PLEntry=function(SystemUseEntry2){function PLEntry2(data){SystemUseEntry2.call(this,data)}if(SystemUseEntry2)PLEntry2.__proto__=SystemUseEntry2;PLEntry2.prototype=Object.create(SystemUseEntry2&&SystemUseEntry2.prototype);PLEntry2.prototype.constructor=PLEntry2;PLEntry2.prototype.parentDirectoryLba=function parentDirectoryLba(){return this._data.readUInt32LE(4)};return PLEntry2}(SystemUseEntry);var REEntry=function(SystemUseEntry2){function REEntry2(data){SystemUseEntry2.call(this,data)}if(SystemUseEntry2)REEntry2.__proto__=SystemUseEntry2;REEntry2.prototype=Object.create(SystemUseEntry2&&SystemUseEntry2.prototype);REEntry2.prototype.constructor=REEntry2;return REEntry2}(SystemUseEntry);var TFEntry=function(SystemUseEntry2){function TFEntry2(data){SystemUseEntry2.call(this,data)}if(SystemUseEntry2)TFEntry2.__proto__=SystemUseEntry2;TFEntry2.prototype=Object.create(SystemUseEntry2&&SystemUseEntry2.prototype);TFEntry2.prototype.constructor=TFEntry2;TFEntry2.prototype.flags=function flags(){return this._data[4]};TFEntry2.prototype.creation=function creation(){if(this.flags()&1){if(this._longFormDates()){return getDate(this._data,5)}else{return getShortFormDate(this._data,5)}}else{return null}};TFEntry2.prototype.modify=function modify(){if(this.flags()&2){var previousDates=this.flags()&1?1:0;if(this._longFormDates){return getDate(this._data,5+previousDates*17)}else{return getShortFormDate(this._data,5+previousDates*7)}}else{return null}};TFEntry2.prototype.access=function access(){if(this.flags()&4){var previousDates=this.flags()&1?1:0;previousDates+=this.flags()&2?1:0;if(this._longFormDates){return getDate(this._data,5+previousDates*17)}else{return getShortFormDate(this._data,5+previousDates*7)}}else{return null}};TFEntry2.prototype.backup=function backup(){if(this.flags()&16){var previousDates=this.flags()&1?1:0;previousDates+=this.flags()&2?1:0;previousDates+=this.flags()&4?1:0;if(this._longFormDates){return getDate(this._data,5+previousDates*17)}else{return getShortFormDate(this._data,5+previousDates*7)}}else{return null}};TFEntry2.prototype.expiration=function expiration(){if(this.flags()&32){var previousDates=this.flags()&1?1:0;previousDates+=this.flags()&2?1:0;previousDates+=this.flags()&4?1:0;previousDates+=this.flags()&16?1:0;if(this._longFormDates){return getDate(this._data,5+previousDates*17)}else{return getShortFormDate(this._data,5+previousDates*7)}}else{return null}};TFEntry2.prototype.effective=function effective(){if(this.flags()&64){var previousDates=this.flags()&1?1:0;previousDates+=this.flags()&2?1:0;previousDates+=this.flags()&4?1:0;previousDates+=this.flags()&16?1:0;previousDates+=this.flags()&32?1:0;if(this._longFormDates){return getDate(this._data,5+previousDates*17)}else{return getShortFormDate(this._data,5+previousDates*7)}}else{return null}};TFEntry2.prototype._longFormDates=function _longFormDates(){return!!(this.flags()&&128)};return TFEntry2}(SystemUseEntry);var SFEntry=function(SystemUseEntry2){function SFEntry2(data){SystemUseEntry2.call(this,data)}if(SystemUseEntry2)SFEntry2.__proto__=SystemUseEntry2;SFEntry2.prototype=Object.create(SystemUseEntry2&&SystemUseEntry2.prototype);SFEntry2.prototype.constructor=SFEntry2;SFEntry2.prototype.virtualSizeHigh=function virtualSizeHigh(){return this._data.readUInt32LE(4)};SFEntry2.prototype.virtualSizeLow=function virtualSizeLow(){return this._data.readUInt32LE(12)};SFEntry2.prototype.tableDepth=function tableDepth(){return this._data[20]};return SFEntry2}(SystemUseEntry);var Directory=function Directory2(record,isoData){var this$1=this;this._fileList=[];this._fileMap={};this._record=record;var i2=record.lba();var iLimit=i2+record.dataLength();if(!(record.fileFlags()&2)){var cl=record.getSUEntries(isoData).filter(function(e){return e instanceof CLEntry})[0];i2=cl.childDirectoryLba()*2048;iLimit=Infinity}while(i2<iLimit){var len=isoData[i2];if(len===0){i2++;continue}var r=this$1._constructDirectoryRecord(isoData.slice(i2));var fname=r.fileName(isoData);if(fname!=="\\0"&&fname!==""){if(!r.hasRockRidge()||r.getSUEntries(isoData).filter(function(e){return e instanceof REEntry}).length===0){this$1._fileMap[fname]=r;this$1._fileList.push(fname)}}else if(iLimit===Infinity){iLimit=i2+r.dataLength()}i2+=r.length()}};Directory.prototype.getRecord=function getRecord(name2){return this._fileMap[name2]};Directory.prototype.getFileList=function getFileList(){return this._fileList};Directory.prototype.getDotEntry=function getDotEntry(isoData){return this._constructDirectoryRecord(isoData.slice(this._record.lba()))};var ISODirectory=function(Directory2){function ISODirectory2(record,isoData){Directory2.call(this,record,isoData)}if(Directory2)ISODirectory2.__proto__=Directory2;ISODirectory2.prototype=Object.create(Directory2&&Directory2.prototype);ISODirectory2.prototype.constructor=ISODirectory2;ISODirectory2.prototype._constructDirectoryRecord=function _constructDirectoryRecord(data){return new ISODirectoryRecord(data,this._record.getRockRidgeOffset())};return ISODirectory2}(Directory);var JolietDirectory=function(Directory2){function JolietDirectory2(record,isoData){Directory2.call(this,record,isoData)}if(Directory2)JolietDirectory2.__proto__=Directory2;JolietDirectory2.prototype=Object.create(Directory2&&Directory2.prototype);JolietDirectory2.prototype.constructor=JolietDirectory2;JolietDirectory2.prototype._constructDirectoryRecord=function _constructDirectoryRecord(data){return new JolietDirectoryRecord(data,this._record.getRockRidgeOffset())};return JolietDirectory2}(Directory);var IsoFS=function(SynchronousFileSystem$$1){function IsoFS2(data,name2,deprecateMsg){var this$1=this;if(name2===void 0)name2="";if(deprecateMsg===void 0)deprecateMsg=true;SynchronousFileSystem$$1.call(this);this._data=data;deprecationMessage(deprecateMsg,IsoFS2.Name,{data:"ISO data as a Buffer",name:name2});var vdTerminatorFound=false;var i2=16*2048;var candidateVDs=new Array;while(!vdTerminatorFound){var slice=data.slice(i2);var vd=new VolumeDescriptor(slice);switch(vd.type()){case 1:candidateVDs.push(new PrimaryVolumeDescriptor(slice));break;case 2:candidateVDs.push(new SupplementaryVolumeDescriptor(slice));break;case 255:vdTerminatorFound=true;break}i2+=2048}if(candidateVDs.length===0){throw new ApiError(ErrorCode.EIO,"Unable to find a suitable volume descriptor.")}candidateVDs.forEach(function(v3){if(!this$1._pvd||this$1._pvd.type()!==2){this$1._pvd=v3}});this._root=this._pvd.rootDirectoryEntry(data);this._name=name2}if(SynchronousFileSystem$$1)IsoFS2.__proto__=SynchronousFileSystem$$1;IsoFS2.prototype=Object.create(SynchronousFileSystem$$1&&SynchronousFileSystem$$1.prototype);IsoFS2.prototype.constructor=IsoFS2;IsoFS2.Create=function Create(opts,cb){var fs4;var e;try{fs4=new IsoFS2(opts.data,opts.name,false)}catch(e2){e2=e2}finally{cb(e,fs4)}};IsoFS2.isAvailable=function isAvailable(){return true};IsoFS2.prototype.getName=function getName(){var name2="IsoFS"+this._name+(this._pvd?"-"+this._pvd.name():"");if(this._root&&this._root.hasRockRidge()){name2+="-RockRidge"}return name2};IsoFS2.prototype.diskSpace=function diskSpace(path$$1,cb){cb(this._data.length,0)};IsoFS2.prototype.isReadOnly=function isReadOnly(){return true};IsoFS2.prototype.supportsLinks=function supportsLinks(){return false};IsoFS2.prototype.supportsProps=function supportsProps(){return false};IsoFS2.prototype.supportsSynch=function supportsSynch(){return true};IsoFS2.prototype.statSync=function statSync(p,isLstat){var record=this._getDirectoryRecord(p);if(record===null){throw ApiError.ENOENT(p)}return this._getStats(p,record)};IsoFS2.prototype.openSync=function openSync(p,flags,mode){if(flags.isWriteable()){throw new ApiError(ErrorCode.EPERM,p)}var record=this._getDirectoryRecord(p);if(!record){throw ApiError.ENOENT(p)}else if(record.isSymlink(this._data)){return this.openSync(path.resolve(p,record.getSymlinkPath(this._data)),flags,mode)}else if(!record.isDirectory(this._data)){var data=record.getFile(this._data);var stats=this._getStats(p,record);switch(flags.pathExistsAction()){case ActionType.THROW_EXCEPTION:case ActionType.TRUNCATE_FILE:throw ApiError.EEXIST(p);case ActionType.NOP:return new NoSyncFile(this,p,flags,stats,data);default:throw new ApiError(ErrorCode.EINVAL,"Invalid FileMode object.")}}else{throw ApiError.EISDIR(p)}};IsoFS2.prototype.readdirSync=function readdirSync(path$$1){var record=this._getDirectoryRecord(path$$1);if(!record){throw ApiError.ENOENT(path$$1)}else if(record.isDirectory(this._data)){return record.getDirectory(this._data).getFileList().slice(0)}else{throw ApiError.ENOTDIR(path$$1)}};IsoFS2.prototype.readFileSync=function readFileSync(fname,encoding,flag){var fd=this.openSync(fname,flag,420);try{var fdCast=fd;var fdBuff=fdCast.getBuffer();if(encoding===null){return copyingSlice(fdBuff)}return fdBuff.toString(encoding)}finally{fd.closeSync()}};IsoFS2.prototype._getDirectoryRecord=function _getDirectoryRecord(path$$1){var this$1=this;if(path$$1==="/"){return this._root}var components=path$$1.split("/").slice(1);var dir2=this._root;for(var i2=0,list2=components;i2<list2.length;i2+=1){var component=list2[i2];if(dir2.isDirectory(this$1._data)){dir2=dir2.getDirectory(this$1._data).getRecord(component);if(!dir2){return null}}else{return null}}return dir2};IsoFS2.prototype._getStats=function _getStats(p,record){if(record.isSymlink(this._data)){var newP=path.resolve(p,record.getSymlinkPath(this._data));var dirRec=this._getDirectoryRecord(newP);if(!dirRec){return null}return this._getStats(newP,dirRec)}else{var len=record.dataLength();var mode=365;var date=record.recordingDate();var atime=date;var mtime=date;var ctime=date;if(record.hasRockRidge()){var entries=record.getSUEntries(this._data);for(var i2=0,list2=entries;i2<list2.length;i2+=1){var entry=list2[i2];if(entry instanceof PXEntry){mode=entry.mode()}else if(entry instanceof TFEntry){var flags=entry.flags();if(flags&4){atime=entry.access()}if(flags&2){mtime=entry.modify()}if(flags&1){ctime=entry.creation()}}}}mode=mode&365;return new Stats(record.isDirectory(this._data)?FileType.DIRECTORY:FileType.FILE,len,mode,atime,mtime,ctime)}};return IsoFS2}(SynchronousFileSystem);IsoFS.Name="IsoFS";IsoFS.Options={data:{type:"object",description:"The ISO file in a buffer",validator:bufferValidator}};[AsyncMirror,DropboxFileSystem,EmscriptenFileSystem,FolderAdapter,HTML5FS,InMemoryFileSystem,IndexedDBFileSystem,IsoFS,LocalStorageFileSystem,MountableFileSystem,OverlayFS,WorkerFS,XmlHttpRequest,ZipFS].forEach(function(fsType){var create=fsType.Create;fsType.Create=function(opts,cb){var oneArg=typeof opts==="function";var normalizedCb=oneArg?opts:cb;var normalizedOpts=oneArg?{}:opts;function wrappedCb(e){if(e){normalizedCb(e)}else{create.call(fsType,normalizedOpts,normalizedCb)}}checkOptions(fsType,normalizedOpts,wrappedCb)}});var Backends={AsyncMirror,Dropbox:DropboxFileSystem,Emscripten:EmscriptenFileSystem,FolderAdapter,HTML5FS,InMemory:InMemoryFileSystem,IndexedDB:IndexedDBFileSystem,IsoFS,LocalStorage:LocalStorageFileSystem,MountableFileSystem,OverlayFS,WorkerFS,XmlHttpRequest,ZipFS};if(process2["initializeTTYs"]){process2["initializeTTYs"]()}function install(obj){obj.Buffer=Buffer2;obj.process=process2;var oldRequire=obj.require?obj.require:null;obj.require=function(arg){var rv=BFSRequire2(arg);if(!rv){return oldRequire.apply(null,Array.prototype.slice.call(arguments,0))}else{return rv}}}function registerFileSystem(name2,fs4){Backends[name2]=fs4}function BFSRequire2(module4){switch(module4){case"fs":return _fsMock;case"path":return path;case"buffer":return buffer;case"process":return process2;case"bfs_utils":return BFSUtils;default:return Backends[module4]}}function initialize2(rootfs){return _fsMock.initialize(rootfs)}function configure(config,cb){getFileSystem(config,function(e,fs4){if(fs4){initialize2(fs4);cb()}else{cb(e)}})}function getFileSystem(config,cb){var fsName=config["fs"];if(!fsName){return cb(new ApiError(ErrorCode.EPERM,\'Missing "fs" property on configuration object.\'))}var options=config["options"];var waitCount=0;var called=false;function finish(){if(!called){called=true;var fsc=Backends[fsName];if(!fsc){cb(new ApiError(ErrorCode.EPERM,"File system "+fsName+" is not available in BrowserFS."))}else{fsc.Create(options,cb)}}}if(options!==null&&typeof options==="object"){var finishedIterating=false;var props=Object.keys(options).filter(function(k2){return k2!=="fs"});props.forEach(function(p){var d4=options[p];if(d4!==null&&typeof d4==="object"&&d4["fs"]){waitCount++;getFileSystem(d4,function(e,fs4){waitCount--;if(e){if(called){return}called=true;cb(e)}else{options[p]=fs4;if(waitCount===0&&finishedIterating){finish()}}})}});finishedIterating=true}if(waitCount===0){finish()}}if("ab".substr(-1)!=="b"){String.prototype.substr=function(substr){return function(start,length){if(start<0){start=this.length+start}return substr.call(this,start,length)}}(String.prototype.substr)}if(typeof ArrayBuffer!=="undefined"&&typeof Uint8Array!=="undefined"){if(!Uint8Array.prototype["slice"]){Uint8Array.prototype.slice=function(start,end){if(start===void 0)start=0;if(end===void 0)end=this.length;var self2=this;if(start<0){start=this.length+start;if(start<0){start=0}}if(end<0){end=this.length+end;if(end<0){end=0}}if(end<start){end=start}return new Uint8Array(self2.buffer,self2.byteOffset+start,end-start)}}}exports2.install=install;exports2.registerFileSystem=registerFileSystem;exports2.BFSRequire=BFSRequire2;exports2.initialize=initialize2;exports2.configure=configure;exports2.getFileSystem=getFileSystem;exports2.EmscriptenFS=BFSEmscriptenFS;exports2.FileSystem=Backends;exports2.Errors=api_error;exports2.setImmediate=setImmediate$3}).call(exports2,__webpack_require__(1),function(){return this}(),__webpack_require__(5)(module22),__webpack_require__(6))},function(module22,exports2,__webpack_require__){module22.exports=__webpack_require__(2).Buffer},function(module22,exports2,__webpack_require__){(function(Buffer2){"use strict";var base64=__webpack_require__(3);var ieee754=__webpack_require__(4);exports2.Buffer=Buffer2;exports2.SlowBuffer=SlowBuffer;exports2.INSPECT_MAX_BYTES=50;var K_MAX_LENGTH=2147483647;exports2.kMaxLength=K_MAX_LENGTH;Buffer2.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer2.TYPED_ARRAY_SUPPORT&&typeof console!=="undefined"&&typeof console.error==="function"){console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.")}function typedArraySupport(){try{var arr=new Uint8Array(1);arr.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}};return arr.foo()===42}catch(e){return false}}function createBuffer(length){if(length>K_MAX_LENGTH){throw new RangeError("Invalid typed array length")}var buf=new Uint8Array(length);buf.__proto__=Buffer2.prototype;return buf}function Buffer2(arg,encodingOrOffset,length){if(typeof arg==="number"){if(typeof encodingOrOffset==="string"){throw new Error("If encoding is specified then the first argument must be a string")}return allocUnsafe(arg)}return from(arg,encodingOrOffset,length)}if(typeof Symbol!=="undefined"&&Symbol.species&&Buffer2[Symbol.species]===Buffer2){Object.defineProperty(Buffer2,Symbol.species,{value:null,configurable:true,enumerable:false,writable:false})}Buffer2.poolSize=8192;function from(value2,encodingOrOffset,length){if(typeof value2==="number"){throw new TypeError(\'"value" argument must not be a number\')}if(isArrayBuffer(value2)){return fromArrayBuffer(value2,encodingOrOffset,length)}if(typeof value2==="string"){return fromString(value2,encodingOrOffset)}return fromObject(value2)}Buffer2.from=function(value2,encodingOrOffset,length){return from(value2,encodingOrOffset,length)};Buffer2.prototype.__proto__=Uint8Array.prototype;Buffer2.__proto__=Uint8Array;function assertSize(size){if(typeof size!=="number"){throw new TypeError(\'"size" argument must be a number\')}else if(size<0){throw new RangeError(\'"size" argument must not be negative\')}}function alloc(size,fill,encoding){assertSize(size);if(size<=0){return createBuffer(size)}if(fill!==void 0){return typeof encoding==="string"?createBuffer(size).fill(fill,encoding):createBuffer(size).fill(fill)}return createBuffer(size)}Buffer2.alloc=function(size,fill,encoding){return alloc(size,fill,encoding)};function allocUnsafe(size){assertSize(size);return createBuffer(size<0?0:checked(size)|0)}Buffer2.allocUnsafe=function(size){return allocUnsafe(size)};Buffer2.allocUnsafeSlow=function(size){return allocUnsafe(size)};function fromString(string,encoding){if(typeof encoding!=="string"||encoding===""){encoding="utf8"}if(!Buffer2.isEncoding(encoding)){throw new TypeError(\'"encoding" must be a valid string encoding\')}var length=byteLength(string,encoding)|0;var buf=createBuffer(length);var actual=buf.write(string,encoding);if(actual!==length){buf=buf.slice(0,actual)}return buf}function fromArrayLike(array){var length=array.length<0?0:checked(array.length)|0;var buf=createBuffer(length);for(var i=0;i<length;i+=1){buf[i]=array[i]&255}return buf}function fromArrayBuffer(array,byteOffset,length){if(byteOffset<0||array.byteLength<byteOffset){throw new RangeError("\'offset\' is out of bounds")}if(array.byteLength<byteOffset+(length||0)){throw new RangeError("\'length\' is out of bounds")}var buf;if(byteOffset===void 0&&length===void 0){buf=new Uint8Array(array)}else if(length===void 0){buf=new Uint8Array(array,byteOffset)}else{buf=new Uint8Array(array,byteOffset,length)}buf.__proto__=Buffer2.prototype;return buf}function fromObject(obj){if(Buffer2.isBuffer(obj)){var len=checked(obj.length)|0;var buf=createBuffer(len);if(buf.length===0){return buf}obj.copy(buf,0,0,len);return buf}if(obj){if(isArrayBufferView(obj)||"length"in obj){if(typeof obj.length!=="number"||numberIsNaN(obj.length)){return createBuffer(0)}return fromArrayLike(obj)}if(obj.type==="Buffer"&&Array.isArray(obj.data)){return fromArrayLike(obj.data)}}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}function checked(length){if(length>=K_MAX_LENGTH){throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+K_MAX_LENGTH.toString(16)+" bytes")}return length|0}function SlowBuffer(length){if(+length!=length){length=0}return Buffer2.alloc(+length)}Buffer2.isBuffer=function isBuffer(b2){return b2!=null&&b2._isBuffer===true};Buffer2.compare=function compare(a,b2){if(!Buffer2.isBuffer(a)||!Buffer2.isBuffer(b2)){throw new TypeError("Arguments must be Buffers")}if(a===b2)return 0;var x4=a.length;var y5=b2.length;for(var i=0,len=Math.min(x4,y5);i<len;++i){if(a[i]!==b2[i]){x4=a[i];y5=b2[i];break}}if(x4<y5)return-1;if(y5<x4)return 1;return 0};Buffer2.isEncoding=function isEncoding(encoding){switch(String(encoding).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return true;default:return false}};Buffer2.concat=function concat(list,length){if(!Array.isArray(list)){throw new TypeError(\'"list" argument must be an Array of Buffers\')}if(list.length===0){return Buffer2.alloc(0)}var i;if(length===void 0){length=0;for(i=0;i<list.length;++i){length+=list[i].length}}var buffer=Buffer2.allocUnsafe(length);var pos=0;for(i=0;i<list.length;++i){var buf=list[i];if(!Buffer2.isBuffer(buf)){throw new TypeError(\'"list" argument must be an Array of Buffers\')}buf.copy(buffer,pos);pos+=buf.length}return buffer};function byteLength(string,encoding){if(Buffer2.isBuffer(string)){return string.length}if(isArrayBufferView(string)||isArrayBuffer(string)){return string.byteLength}if(typeof string!=="string"){string=""+string}var len=string.length;if(len===0)return 0;var loweredCase=false;for(;;){switch(encoding){case"ascii":case"latin1":case"binary":return len;case"utf8":case"utf-8":case void 0:return utf8ToBytes(string).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return len*2;case"hex":return len>>>1;case"base64":return base64ToBytes(string).length;default:if(loweredCase)return utf8ToBytes(string).length;encoding=(""+encoding).toLowerCase();loweredCase=true}}}Buffer2.byteLength=byteLength;function slowToString(encoding,start,end){var loweredCase=false;if(start===void 0||start<0){start=0}if(start>this.length){return""}if(end===void 0||end>this.length){end=this.length}if(end<=0){return""}end>>>=0;start>>>=0;if(end<=start){return""}if(!encoding)encoding="utf8";while(true){switch(encoding){case"hex":return hexSlice(this,start,end);case"utf8":case"utf-8":return utf8Slice(this,start,end);case"ascii":return asciiSlice(this,start,end);case"latin1":case"binary":return latin1Slice(this,start,end);case"base64":return base64Slice(this,start,end);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return utf16leSlice(this,start,end);default:if(loweredCase)throw new TypeError("Unknown encoding: "+encoding);encoding=(encoding+"").toLowerCase();loweredCase=true}}}Buffer2.prototype._isBuffer=true;function swap(b2,n,m){var i=b2[n];b2[n]=b2[m];b2[m]=i}Buffer2.prototype.swap16=function swap16(){var len=this.length;if(len%2!==0){throw new RangeError("Buffer size must be a multiple of 16-bits")}for(var i=0;i<len;i+=2){swap(this,i,i+1)}return this};Buffer2.prototype.swap32=function swap32(){var len=this.length;if(len%4!==0){throw new RangeError("Buffer size must be a multiple of 32-bits")}for(var i=0;i<len;i+=4){swap(this,i,i+3);swap(this,i+1,i+2)}return this};Buffer2.prototype.swap64=function swap64(){var len=this.length;if(len%8!==0){throw new RangeError("Buffer size must be a multiple of 64-bits")}for(var i=0;i<len;i+=8){swap(this,i,i+7);swap(this,i+1,i+6);swap(this,i+2,i+5);swap(this,i+3,i+4)}return this};Buffer2.prototype.toString=function toString(){var length=this.length;if(length===0)return"";if(arguments.length===0)return utf8Slice(this,0,length);return slowToString.apply(this,arguments)};Buffer2.prototype.equals=function equals(b2){if(!Buffer2.isBuffer(b2))throw new TypeError("Argument must be a Buffer");if(this===b2)return true;return Buffer2.compare(this,b2)===0};Buffer2.prototype.inspect=function inspect(){var str3="";var max=exports2.INSPECT_MAX_BYTES;if(this.length>0){str3=this.toString("hex",0,max).match(/.{2}/g).join(" ");if(this.length>max)str3+=" ... "}return"<Buffer "+str3+">"};Buffer2.prototype.compare=function compare(target,start,end,thisStart,thisEnd){if(!Buffer2.isBuffer(target)){throw new TypeError("Argument must be a Buffer")}if(start===void 0){start=0}if(end===void 0){end=target?target.length:0}if(thisStart===void 0){thisStart=0}if(thisEnd===void 0){thisEnd=this.length}if(start<0||end>target.length||thisStart<0||thisEnd>this.length){throw new RangeError("out of range index")}if(thisStart>=thisEnd&&start>=end){return 0}if(thisStart>=thisEnd){return-1}if(start>=end){return 1}start>>>=0;end>>>=0;thisStart>>>=0;thisEnd>>>=0;if(this===target)return 0;var x4=thisEnd-thisStart;var y5=end-start;var len=Math.min(x4,y5);var thisCopy=this.slice(thisStart,thisEnd);var targetCopy=target.slice(start,end);for(var i=0;i<len;++i){if(thisCopy[i]!==targetCopy[i]){x4=thisCopy[i];y5=targetCopy[i];break}}if(x4<y5)return-1;if(y5<x4)return 1;return 0};function bidirectionalIndexOf(buffer,val,byteOffset,encoding,dir2){if(buffer.length===0)return-1;if(typeof byteOffset==="string"){encoding=byteOffset;byteOffset=0}else if(byteOffset>2147483647){byteOffset=2147483647}else if(byteOffset<-2147483648){byteOffset=-2147483648}byteOffset=+byteOffset;if(numberIsNaN(byteOffset)){byteOffset=dir2?0:buffer.length-1}if(byteOffset<0)byteOffset=buffer.length+byteOffset;if(byteOffset>=buffer.length){if(dir2)return-1;else byteOffset=buffer.length-1}else if(byteOffset<0){if(dir2)byteOffset=0;else return-1}if(typeof val==="string"){val=Buffer2.from(val,encoding)}if(Buffer2.isBuffer(val)){if(val.length===0){return-1}return arrayIndexOf(buffer,val,byteOffset,encoding,dir2)}else if(typeof val==="number"){val=val&255;if(typeof Uint8Array.prototype.indexOf==="function"){if(dir2){return Uint8Array.prototype.indexOf.call(buffer,val,byteOffset)}else{return Uint8Array.prototype.lastIndexOf.call(buffer,val,byteOffset)}}return arrayIndexOf(buffer,[val],byteOffset,encoding,dir2)}throw new TypeError("val must be string, number or Buffer")}function arrayIndexOf(arr,val,byteOffset,encoding,dir2){var indexSize=1;var arrLength=arr.length;var valLength=val.length;if(encoding!==void 0){encoding=String(encoding).toLowerCase();if(encoding==="ucs2"||encoding==="ucs-2"||encoding==="utf16le"||encoding==="utf-16le"){if(arr.length<2||val.length<2){return-1}indexSize=2;arrLength/=2;valLength/=2;byteOffset/=2}}function read(buf,i2){if(indexSize===1){return buf[i2]}else{return buf.readUInt16BE(i2*indexSize)}}var i;if(dir2){var foundIndex=-1;for(i=byteOffset;i<arrLength;i++){if(read(arr,i)===read(val,foundIndex===-1?0:i-foundIndex)){if(foundIndex===-1)foundIndex=i;if(i-foundIndex+1===valLength)return foundIndex*indexSize}else{if(foundIndex!==-1)i-=i-foundIndex;foundIndex=-1}}}else{if(byteOffset+valLength>arrLength)byteOffset=arrLength-valLength;for(i=byteOffset;i>=0;i--){var found=true;for(var j3=0;j3<valLength;j3++){if(read(arr,i+j3)!==read(val,j3)){found=false;break}}if(found)return i}}return-1}Buffer2.prototype.includes=function includes(val,byteOffset,encoding){return this.indexOf(val,byteOffset,encoding)!==-1};Buffer2.prototype.indexOf=function indexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,true)};Buffer2.prototype.lastIndexOf=function lastIndexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,false)};function hexWrite(buf,string,offset,length){offset=Number(offset)||0;var remaining=buf.length-offset;if(!length){length=remaining}else{length=Number(length);if(length>remaining){length=remaining}}var strLen=string.length;if(strLen%2!==0)throw new TypeError("Invalid hex string");if(length>strLen/2){length=strLen/2}for(var i=0;i<length;++i){var parsed=parseInt(string.substr(i*2,2),16);if(numberIsNaN(parsed))return i;buf[offset+i]=parsed}return i}function utf8Write(buf,string,offset,length){return blitBuffer(utf8ToBytes(string,buf.length-offset),buf,offset,length)}function asciiWrite(buf,string,offset,length){return blitBuffer(asciiToBytes(string),buf,offset,length)}function latin1Write(buf,string,offset,length){return asciiWrite(buf,string,offset,length)}function base64Write(buf,string,offset,length){return blitBuffer(base64ToBytes(string),buf,offset,length)}function ucs2Write(buf,string,offset,length){return blitBuffer(utf16leToBytes(string,buf.length-offset),buf,offset,length)}Buffer2.prototype.write=function write(string,offset,length,encoding){if(offset===void 0){encoding="utf8";length=this.length;offset=0}else if(length===void 0&&typeof offset==="string"){encoding=offset;length=this.length;offset=0}else if(isFinite(offset)){offset=offset>>>0;if(isFinite(length)){length=length>>>0;if(encoding===void 0)encoding="utf8"}else{encoding=length;length=void 0}}else{throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported")}var remaining=this.length-offset;if(length===void 0||length>remaining)length=remaining;if(string.length>0&&(length<0||offset<0)||offset>this.length){throw new RangeError("Attempt to write outside buffer bounds")}if(!encoding)encoding="utf8";var loweredCase=false;for(;;){switch(encoding){case"hex":return hexWrite(this,string,offset,length);case"utf8":case"utf-8":return utf8Write(this,string,offset,length);case"ascii":return asciiWrite(this,string,offset,length);case"latin1":case"binary":return latin1Write(this,string,offset,length);case"base64":return base64Write(this,string,offset,length);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ucs2Write(this,string,offset,length);default:if(loweredCase)throw new TypeError("Unknown encoding: "+encoding);encoding=(""+encoding).toLowerCase();loweredCase=true}}};Buffer2.prototype.toJSON=function toJSON(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function base64Slice(buf,start,end){if(start===0&&end===buf.length){return base64.fromByteArray(buf)}else{return base64.fromByteArray(buf.slice(start,end))}}function utf8Slice(buf,start,end){end=Math.min(buf.length,end);var res=[];var i=start;while(i<end){var firstByte=buf[i];var codePoint=null;var bytesPerSequence=firstByte>239?4:firstByte>223?3:firstByte>191?2:1;if(i+bytesPerSequence<=end){var secondByte,thirdByte,fourthByte,tempCodePoint;switch(bytesPerSequence){case 1:if(firstByte<128){codePoint=firstByte}break;case 2:secondByte=buf[i+1];if((secondByte&192)===128){tempCodePoint=(firstByte&31)<<6|secondByte&63;if(tempCodePoint>127){codePoint=tempCodePoint}}break;case 3:secondByte=buf[i+1];thirdByte=buf[i+2];if((secondByte&192)===128&&(thirdByte&192)===128){tempCodePoint=(firstByte&15)<<12|(secondByte&63)<<6|thirdByte&63;if(tempCodePoint>2047&&(tempCodePoint<55296||tempCodePoint>57343)){codePoint=tempCodePoint}}break;case 4:secondByte=buf[i+1];thirdByte=buf[i+2];fourthByte=buf[i+3];if((secondByte&192)===128&&(thirdByte&192)===128&&(fourthByte&192)===128){tempCodePoint=(firstByte&15)<<18|(secondByte&63)<<12|(thirdByte&63)<<6|fourthByte&63;if(tempCodePoint>65535&&tempCodePoint<1114112){codePoint=tempCodePoint}}}}if(codePoint===null){codePoint=65533;bytesPerSequence=1}else if(codePoint>65535){codePoint-=65536;res.push(codePoint>>>10&1023|55296);codePoint=56320|codePoint&1023}res.push(codePoint);i+=bytesPerSequence}return decodeCodePointsArray(res)}var MAX_ARGUMENTS_LENGTH=4096;function decodeCodePointsArray(codePoints){var len=codePoints.length;if(len<=MAX_ARGUMENTS_LENGTH){return String.fromCharCode.apply(String,codePoints)}var res="";var i=0;while(i<len){res+=String.fromCharCode.apply(String,codePoints.slice(i,i+=MAX_ARGUMENTS_LENGTH))}return res}function asciiSlice(buf,start,end){var ret="";end=Math.min(buf.length,end);for(var i=start;i<end;++i){ret+=String.fromCharCode(buf[i]&127)}return ret}function latin1Slice(buf,start,end){var ret="";end=Math.min(buf.length,end);for(var i=start;i<end;++i){ret+=String.fromCharCode(buf[i])}return ret}function hexSlice(buf,start,end){var len=buf.length;if(!start||start<0)start=0;if(!end||end<0||end>len)end=len;var out="";for(var i=start;i<end;++i){out+=toHex(buf[i])}return out}function utf16leSlice(buf,start,end){var bytes=buf.slice(start,end);var res="";for(var i=0;i<bytes.length;i+=2){res+=String.fromCharCode(bytes[i]+bytes[i+1]*256)}return res}Buffer2.prototype.slice=function slice(start,end){var len=this.length;start=~~start;end=end===void 0?len:~~end;if(start<0){start+=len;if(start<0)start=0}else if(start>len){start=len}if(end<0){end+=len;if(end<0)end=0}else if(end>len){end=len}if(end<start)end=start;var newBuf=this.subarray(start,end);newBuf.__proto__=Buffer2.prototype;return newBuf};function checkOffset(offset,ext,length){if(offset%1!==0||offset<0)throw new RangeError("offset is not uint");if(offset+ext>length)throw new RangeError("Trying to access beyond buffer length")}Buffer2.prototype.readUIntLE=function readUIntLE(offset,byteLength2,noAssert){offset=offset>>>0;byteLength2=byteLength2>>>0;if(!noAssert)checkOffset(offset,byteLength2,this.length);var val=this[offset];var mul2=1;var i=0;while(++i<byteLength2&&(mul2*=256)){val+=this[offset+i]*mul2}return val};Buffer2.prototype.readUIntBE=function readUIntBE(offset,byteLength2,noAssert){offset=offset>>>0;byteLength2=byteLength2>>>0;if(!noAssert){checkOffset(offset,byteLength2,this.length)}var val=this[offset+--byteLength2];var mul2=1;while(byteLength2>0&&(mul2*=256)){val+=this[offset+--byteLength2]*mul2}return val};Buffer2.prototype.readUInt8=function readUInt8(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,1,this.length);return this[offset]};Buffer2.prototype.readUInt16LE=function readUInt16LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);return this[offset]|this[offset+1]<<8};Buffer2.prototype.readUInt16BE=function readUInt16BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);return this[offset]<<8|this[offset+1]};Buffer2.prototype.readUInt32LE=function readUInt32LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return(this[offset]|this[offset+1]<<8|this[offset+2]<<16)+this[offset+3]*16777216};Buffer2.prototype.readUInt32BE=function readUInt32BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return this[offset]*16777216+(this[offset+1]<<16|this[offset+2]<<8|this[offset+3])};Buffer2.prototype.readIntLE=function readIntLE(offset,byteLength2,noAssert){offset=offset>>>0;byteLength2=byteLength2>>>0;if(!noAssert)checkOffset(offset,byteLength2,this.length);var val=this[offset];var mul2=1;var i=0;while(++i<byteLength2&&(mul2*=256)){val+=this[offset+i]*mul2}mul2*=128;if(val>=mul2)val-=Math.pow(2,8*byteLength2);return val};Buffer2.prototype.readIntBE=function readIntBE(offset,byteLength2,noAssert){offset=offset>>>0;byteLength2=byteLength2>>>0;if(!noAssert)checkOffset(offset,byteLength2,this.length);var i=byteLength2;var mul2=1;var val=this[offset+--i];while(i>0&&(mul2*=256)){val+=this[offset+--i]*mul2}mul2*=128;if(val>=mul2)val-=Math.pow(2,8*byteLength2);return val};Buffer2.prototype.readInt8=function readInt8(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,1,this.length);if(!(this[offset]&128))return this[offset];return(255-this[offset]+1)*-1};Buffer2.prototype.readInt16LE=function readInt16LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);var val=this[offset]|this[offset+1]<<8;return val&32768?val|4294901760:val};Buffer2.prototype.readInt16BE=function readInt16BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);var val=this[offset+1]|this[offset]<<8;return val&32768?val|4294901760:val};Buffer2.prototype.readInt32LE=function readInt32LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return this[offset]|this[offset+1]<<8|this[offset+2]<<16|this[offset+3]<<24};Buffer2.prototype.readInt32BE=function readInt32BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return this[offset]<<24|this[offset+1]<<16|this[offset+2]<<8|this[offset+3]};Buffer2.prototype.readFloatLE=function readFloatLE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return ieee754.read(this,offset,true,23,4)};Buffer2.prototype.readFloatBE=function readFloatBE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return ieee754.read(this,offset,false,23,4)};Buffer2.prototype.readDoubleLE=function readDoubleLE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,8,this.length);return ieee754.read(this,offset,true,52,8)};Buffer2.prototype.readDoubleBE=function readDoubleBE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,8,this.length);return ieee754.read(this,offset,false,52,8)};function checkInt(buf,value2,offset,ext,max,min){if(!Buffer2.isBuffer(buf))throw new TypeError(\'"buffer" argument must be a Buffer instance\');if(value2>max||value2<min)throw new RangeError(\'"value" argument is out of bounds\');if(offset+ext>buf.length)throw new RangeError("Index out of range")}Buffer2.prototype.writeUIntLE=function writeUIntLE(value2,offset,byteLength2,noAssert){value2=+value2;offset=offset>>>0;byteLength2=byteLength2>>>0;if(!noAssert){var maxBytes=Math.pow(2,8*byteLength2)-1;checkInt(this,value2,offset,byteLength2,maxBytes,0)}var mul2=1;var i=0;this[offset]=value2&255;while(++i<byteLength2&&(mul2*=256)){this[offset+i]=value2/mul2&255}return offset+byteLength2};Buffer2.prototype.writeUIntBE=function writeUIntBE(value2,offset,byteLength2,noAssert){value2=+value2;offset=offset>>>0;byteLength2=byteLength2>>>0;if(!noAssert){var maxBytes=Math.pow(2,8*byteLength2)-1;checkInt(this,value2,offset,byteLength2,maxBytes,0)}var i=byteLength2-1;var mul2=1;this[offset+i]=value2&255;while(--i>=0&&(mul2*=256)){this[offset+i]=value2/mul2&255}return offset+byteLength2};Buffer2.prototype.writeUInt8=function writeUInt8(value2,offset,noAssert){value2=+value2;offset=offset>>>0;if(!noAssert)checkInt(this,value2,offset,1,255,0);this[offset]=value2&255;return offset+1};Buffer2.prototype.writeUInt16LE=function writeUInt16LE(value2,offset,noAssert){value2=+value2;offset=offset>>>0;if(!noAssert)checkInt(this,value2,offset,2,65535,0);this[offset]=value2&255;this[offset+1]=value2>>>8;return offset+2};Buffer2.prototype.writeUInt16BE=function writeUInt16BE(value2,offset,noAssert){value2=+value2;offset=offset>>>0;if(!noAssert)checkInt(this,value2,offset,2,65535,0);this[offset]=value2>>>8;this[offset+1]=value2&255;return offset+2};Buffer2.prototype.writeUInt32LE=function writeUInt32LE(value2,offset,noAssert){value2=+value2;offset=offset>>>0;if(!noAssert)checkInt(this,value2,offset,4,4294967295,0);this[offset+3]=value2>>>24;this[offset+2]=value2>>>16;this[offset+1]=value2>>>8;this[offset]=value2&255;return offset+4};Buffer2.prototype.writeUInt32BE=function writeUInt32BE(value2,offset,noAssert){value2=+value2;offset=offset>>>0;if(!noAssert)checkInt(this,value2,offset,4,4294967295,0);this[offset]=value2>>>24;this[offset+1]=value2>>>16;this[offset+2]=value2>>>8;this[offset+3]=value2&255;return offset+4};Buffer2.prototype.writeIntLE=function writeIntLE(value2,offset,byteLength2,noAssert){value2=+value2;offset=offset>>>0;if(!noAssert){var limit=Math.pow(2,8*byteLength2-1);checkInt(this,value2,offset,byteLength2,limit-1,-limit)}var i=0;var mul2=1;var sub2=0;this[offset]=value2&255;while(++i<byteLength2&&(mul2*=256)){if(value2<0&&sub2===0&&this[offset+i-1]!==0){sub2=1}this[offset+i]=(value2/mul2>>0)-sub2&255}return offset+byteLength2};Buffer2.prototype.writeIntBE=function writeIntBE(value2,offset,byteLength2,noAssert){value2=+value2;offset=offset>>>0;if(!noAssert){var limit=Math.pow(2,8*byteLength2-1);checkInt(this,value2,offset,byteLength2,limit-1,-limit)}var i=byteLength2-1;var mul2=1;var sub2=0;this[offset+i]=value2&255;while(--i>=0&&(mul2*=256)){if(value2<0&&sub2===0&&this[offset+i+1]!==0){sub2=1}this[offset+i]=(value2/mul2>>0)-sub2&255}return offset+byteLength2};Buffer2.prototype.writeInt8=function writeInt8(value2,offset,noAssert){value2=+value2;offset=offset>>>0;if(!noAssert)checkInt(this,value2,offset,1,127,-128);if(value2<0)value2=255+value2+1;this[offset]=value2&255;return offset+1};Buffer2.prototype.writeInt16LE=function writeInt16LE(value2,offset,noAssert){value2=+value2;offset=offset>>>0;if(!noAssert)checkInt(this,value2,offset,2,32767,-32768);this[offset]=value2&255;this[offset+1]=value2>>>8;return offset+2};Buffer2.prototype.writeInt16BE=function writeInt16BE(value2,offset,noAssert){value2=+value2;offset=offset>>>0;if(!noAssert)checkInt(this,value2,offset,2,32767,-32768);this[offset]=value2>>>8;this[offset+1]=value2&255;return offset+2};Buffer2.prototype.writeInt32LE=function writeInt32LE(value2,offset,noAssert){value2=+value2;offset=offset>>>0;if(!noAssert)checkInt(this,value2,offset,4,2147483647,-2147483648);this[offset]=value2&255;this[offset+1]=value2>>>8;this[offset+2]=value2>>>16;this[offset+3]=value2>>>24;return offset+4};Buffer2.prototype.writeInt32BE=function writeInt32BE(value2,offset,noAssert){value2=+value2;offset=offset>>>0;if(!noAssert)checkInt(this,value2,offset,4,2147483647,-2147483648);if(value2<0)value2=4294967295+value2+1;this[offset]=value2>>>24;this[offset+1]=value2>>>16;this[offset+2]=value2>>>8;this[offset+3]=value2&255;return offset+4};function checkIEEE754(buf,value2,offset,ext,max,min){if(offset+ext>buf.length)throw new RangeError("Index out of range");if(offset<0)throw new RangeError("Index out of range")}function writeFloat(buf,value2,offset,littleEndian,noAssert){value2=+value2;offset=offset>>>0;if(!noAssert){checkIEEE754(buf,value2,offset,4,34028234663852886e22,-34028234663852886e22)}ieee754.write(buf,value2,offset,littleEndian,23,4);return offset+4}Buffer2.prototype.writeFloatLE=function writeFloatLE(value2,offset,noAssert){return writeFloat(this,value2,offset,true,noAssert)};Buffer2.prototype.writeFloatBE=function writeFloatBE(value2,offset,noAssert){return writeFloat(this,value2,offset,false,noAssert)};function writeDouble(buf,value2,offset,littleEndian,noAssert){value2=+value2;offset=offset>>>0;if(!noAssert){checkIEEE754(buf,value2,offset,8,17976931348623157e292,-17976931348623157e292)}ieee754.write(buf,value2,offset,littleEndian,52,8);return offset+8}Buffer2.prototype.writeDoubleLE=function writeDoubleLE(value2,offset,noAssert){return writeDouble(this,value2,offset,true,noAssert)};Buffer2.prototype.writeDoubleBE=function writeDoubleBE(value2,offset,noAssert){return writeDouble(this,value2,offset,false,noAssert)};Buffer2.prototype.copy=function copy(target,targetStart,start,end){if(!start)start=0;if(!end&&end!==0)end=this.length;if(targetStart>=target.length)targetStart=target.length;if(!targetStart)targetStart=0;if(end>0&&end<start)end=start;if(end===start)return 0;if(target.length===0||this.length===0)return 0;if(targetStart<0){throw new RangeError("targetStart out of bounds")}if(start<0||start>=this.length)throw new RangeError("sourceStart out of bounds");if(end<0)throw new RangeError("sourceEnd out of bounds");if(end>this.length)end=this.length;if(target.length-targetStart<end-start){end=target.length-targetStart+start}var len=end-start;var i;if(this===target&&start<targetStart&&targetStart<end){for(i=len-1;i>=0;--i){target[i+targetStart]=this[i+start]}}else if(len<1e3){for(i=0;i<len;++i){target[i+targetStart]=this[i+start]}}else{Uint8Array.prototype.set.call(target,this.subarray(start,start+len),targetStart)}return len};Buffer2.prototype.fill=function fill(val,start,end,encoding){if(typeof val==="string"){if(typeof start==="string"){encoding=start;start=0;end=this.length}else if(typeof end==="string"){encoding=end;end=this.length}if(val.length===1){var code=val.charCodeAt(0);if(code<256){val=code}}if(encoding!==void 0&&typeof encoding!=="string"){throw new TypeError("encoding must be a string")}if(typeof encoding==="string"&&!Buffer2.isEncoding(encoding)){throw new TypeError("Unknown encoding: "+encoding)}}else if(typeof val==="number"){val=val&255}if(start<0||this.length<start||this.length<end){throw new RangeError("Out of range index")}if(end<=start){return this}start=start>>>0;end=end===void 0?this.length:end>>>0;if(!val)val=0;var i;if(typeof val==="number"){for(i=start;i<end;++i){this[i]=val}}else{var bytes=Buffer2.isBuffer(val)?val:new Buffer2(val,encoding);var len=bytes.length;for(i=0;i<end-start;++i){this[i+start]=bytes[i%len]}}return this};var INVALID_BASE64_RE=/[^+/0-9A-Za-z-_]/g;function base64clean(str3){str3=str3.trim().replace(INVALID_BASE64_RE,"");if(str3.length<2)return"";while(str3.length%4!==0){str3=str3+"="}return str3}function toHex(n){if(n<16)return"0"+n.toString(16);return n.toString(16)}function utf8ToBytes(string,units){units=units||Infinity;var codePoint;var length=string.length;var leadSurrogate=null;var bytes=[];for(var i=0;i<length;++i){codePoint=string.charCodeAt(i);if(codePoint>55295&&codePoint<57344){if(!leadSurrogate){if(codePoint>56319){if((units-=3)>-1)bytes.push(239,191,189);continue}else if(i+1===length){if((units-=3)>-1)bytes.push(239,191,189);continue}leadSurrogate=codePoint;continue}if(codePoint<56320){if((units-=3)>-1)bytes.push(239,191,189);leadSurrogate=codePoint;continue}codePoint=(leadSurrogate-55296<<10|codePoint-56320)+65536}else if(leadSurrogate){if((units-=3)>-1)bytes.push(239,191,189)}leadSurrogate=null;if(codePoint<128){if((units-=1)<0)break;bytes.push(codePoint)}else if(codePoint<2048){if((units-=2)<0)break;bytes.push(codePoint>>6|192,codePoint&63|128)}else if(codePoint<65536){if((units-=3)<0)break;bytes.push(codePoint>>12|224,codePoint>>6&63|128,codePoint&63|128)}else if(codePoint<1114112){if((units-=4)<0)break;bytes.push(codePoint>>18|240,codePoint>>12&63|128,codePoint>>6&63|128,codePoint&63|128)}else{throw new Error("Invalid code point")}}return bytes}function asciiToBytes(str3){var byteArray=[];for(var i=0;i<str3.length;++i){byteArray.push(str3.charCodeAt(i)&255)}return byteArray}function utf16leToBytes(str3,units){var c2,hi3,lo2;var byteArray=[];for(var i=0;i<str3.length;++i){if((units-=2)<0)break;c2=str3.charCodeAt(i);hi3=c2>>8;lo2=c2%256;byteArray.push(lo2);byteArray.push(hi3)}return byteArray}function base64ToBytes(str3){return base64.toByteArray(base64clean(str3))}function blitBuffer(src,dst,offset,length){for(var i=0;i<length;++i){if(i+offset>=dst.length||i>=src.length)break;dst[i+offset]=src[i]}return i}function isArrayBuffer(obj){return obj instanceof ArrayBuffer||obj!=null&&obj.constructor!=null&&obj.constructor.name==="ArrayBuffer"&&typeof obj.byteLength==="number"}function isArrayBufferView(obj){return typeof ArrayBuffer.isView==="function"&&ArrayBuffer.isView(obj)}function numberIsNaN(obj){return obj!==obj}}).call(exports2,__webpack_require__(1))},function(module22,exports2){"use strict";exports2.byteLength=byteLength;exports2.toByteArray=toByteArray;exports2.fromByteArray=fromByteArray;var lookup=[];var revLookup=[];var Arr=typeof Uint8Array!=="undefined"?Uint8Array:Array;var code="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(var i=0,len=code.length;i<len;++i){lookup[i]=code[i];revLookup[code.charCodeAt(i)]=i}revLookup["-".charCodeAt(0)]=62;revLookup["_".charCodeAt(0)]=63;function placeHoldersCount(b64){var len2=b64.length;if(len2%4>0){throw new Error("Invalid string. Length must be a multiple of 4")}return b64[len2-2]==="="?2:b64[len2-1]==="="?1:0}function byteLength(b64){return b64.length*3/4-placeHoldersCount(b64)}function toByteArray(b64){var i2,j3,l,tmp,placeHolders,arr;var len2=b64.length;placeHolders=placeHoldersCount(b64);arr=new Arr(len2*3/4-placeHolders);l=placeHolders>0?len2-4:len2;var L=0;for(i2=0,j3=0;i2<l;i2+=4,j3+=3){tmp=revLookup[b64.charCodeAt(i2)]<<18|revLookup[b64.charCodeAt(i2+1)]<<12|revLookup[b64.charCodeAt(i2+2)]<<6|revLookup[b64.charCodeAt(i2+3)];arr[L++]=tmp>>16&255;arr[L++]=tmp>>8&255;arr[L++]=tmp&255}if(placeHolders===2){tmp=revLookup[b64.charCodeAt(i2)]<<2|revLookup[b64.charCodeAt(i2+1)]>>4;arr[L++]=tmp&255}else if(placeHolders===1){tmp=revLookup[b64.charCodeAt(i2)]<<10|revLookup[b64.charCodeAt(i2+1)]<<4|revLookup[b64.charCodeAt(i2+2)]>>2;arr[L++]=tmp>>8&255;arr[L++]=tmp&255}return arr}function tripletToBase64(num){return lookup[num>>18&63]+lookup[num>>12&63]+lookup[num>>6&63]+lookup[num&63]}function encodeChunk(uint8,start,end){var tmp;var output=[];for(var i2=start;i2<end;i2+=3){tmp=(uint8[i2]<<16)+(uint8[i2+1]<<8)+uint8[i2+2];output.push(tripletToBase64(tmp))}return output.join("")}function fromByteArray(uint8){var tmp;var len2=uint8.length;var extraBytes=len2%3;var output="";var parts=[];var maxChunkLength=16383;for(var i2=0,len22=len2-extraBytes;i2<len22;i2+=maxChunkLength){parts.push(encodeChunk(uint8,i2,i2+maxChunkLength>len22?len22:i2+maxChunkLength))}if(extraBytes===1){tmp=uint8[len2-1];output+=lookup[tmp>>2];output+=lookup[tmp<<4&63];output+="=="}else if(extraBytes===2){tmp=(uint8[len2-2]<<8)+uint8[len2-1];output+=lookup[tmp>>10];output+=lookup[tmp>>4&63];output+=lookup[tmp<<2&63];output+="="}parts.push(output);return parts.join("")}},function(module22,exports2){exports2.read=function(buffer,offset,isLE,mLen,nBytes){var e,m;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var nBits=-7;var i=isLE?nBytes-1:0;var d4=isLE?-1:1;var s=buffer[offset+i];i+=d4;e=s&(1<<-nBits)-1;s>>=-nBits;nBits+=eLen;for(;nBits>0;e=e*256+buffer[offset+i],i+=d4,nBits-=8){}m=e&(1<<-nBits)-1;e>>=-nBits;nBits+=mLen;for(;nBits>0;m=m*256+buffer[offset+i],i+=d4,nBits-=8){}if(e===0){e=1-eBias}else if(e===eMax){return m?NaN:(s?-1:1)*Infinity}else{m=m+Math.pow(2,mLen);e=e-eBias}return(s?-1:1)*m*Math.pow(2,e-mLen)};exports2.write=function(buffer,value2,offset,isLE,mLen,nBytes){var e,m,c2;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var rt2=mLen===23?Math.pow(2,-24)-Math.pow(2,-77):0;var i=isLE?0:nBytes-1;var d4=isLE?1:-1;var s=value2<0||value2===0&&1/value2<0?1:0;value2=Math.abs(value2);if(isNaN(value2)||value2===Infinity){m=isNaN(value2)?1:0;e=eMax}else{e=Math.floor(Math.log(value2)/Math.LN2);if(value2*(c2=Math.pow(2,-e))<1){e--;c2*=2}if(e+eBias>=1){value2+=rt2/c2}else{value2+=rt2*Math.pow(2,1-eBias)}if(value2*c2>=2){e++;c2/=2}if(e+eBias>=eMax){m=0;e=eMax}else if(e+eBias>=1){m=(value2*c2-1)*Math.pow(2,mLen);e=e+eBias}else{m=value2*Math.pow(2,eBias-1)*Math.pow(2,mLen);e=0}}for(;mLen>=8;buffer[offset+i]=m&255,i+=d4,m/=256,mLen-=8){}e=e<<mLen|m;eLen+=mLen;for(;eLen>0;buffer[offset+i]=e&255,i+=d4,e/=256,eLen-=8){}buffer[offset+i-d4]|=s*128}},function(module22,exports2){module22.exports=function(module3){if(!module3.webpackPolyfill){module3.deprecate=function(){};module3.paths=[];module3.children=[];module3.webpackPolyfill=1}return module3}},function(module22,exports2,__webpack_require__){"use strict";var Process=__webpack_require__(7);var process2=new Process,processProxy={};function defineKey(key2){if(processProxy[key2]){return}if(typeof process2[key2]==="function"){processProxy[key2]=function(){return process2[key2].apply(process2,arguments)}}else{processProxy[key2]=process2[key2]}}for(var key in process2){defineKey(key)}processProxy.initializeTTYs=function(){if(process2.stdin===null){process2.initializeTTYs();processProxy.stdin=process2.stdin;processProxy.stdout=process2.stdout;processProxy.stderr=process2.stderr}};process2.nextTick(function(){processProxy.initializeTTYs()});module22.exports=processProxy},function(module22,exports2,__webpack_require__){(function(__dirname){"use strict";var __extends=this&&this.__extends||function(d4,b2){for(var p in b2)if(b2.hasOwnProperty(p))d4[p]=b2[p];function __(){this.constructor=d4}d4.prototype=b2===null?Object.create(b2):(__.prototype=b2.prototype,new __)};var events=__webpack_require__(8);var path=null;var Item=function(){function Item2(fun,array){this.fun=fun;this.array=array}Item2.prototype.run=function(){this.fun.apply(null,this.array)};return Item2}();var NextTickQueue=function(){function NextTickQueue2(){this._queue=[];this._draining=false;this._currentQueue=null;this._queueIndex=-1}NextTickQueue2.prototype.push=function(item){var _this=this;if(this._queue.push(item)===1&&!this._draining){setTimeout(function(){return _this._drainQueue()},0)}};NextTickQueue2.prototype._cleanUpNextTick=function(){this._draining=false;if(this._currentQueue&&this._currentQueue.length){this._queue=this._currentQueue.concat(this._queue)}else{this._queueIndex=-1}if(this._queue.length){this._drainQueue()}};NextTickQueue2.prototype._drainQueue=function(){var _this=this;if(this._draining){return}var timeout=setTimeout(function(){return _this._cleanUpNextTick()});this._draining=true;var len=this._queue.length;while(len){this._currentQueue=this._queue;this._queue=[];while(++this._queueIndex<len){if(this._currentQueue){this._currentQueue[this._queueIndex].run()}}this._queueIndex=-1;len=this._queue.length}this._currentQueue=null;this._draining=false;clearTimeout(timeout)};return NextTickQueue2}();var Process=function(_super){__extends(Process2,_super);function Process2(){_super.apply(this,arguments);this.startTime=Date.now();this._cwd="/";this.platform="browser";this.argv=[];this.execArgv=[];this.stdout=null;this.stderr=null;this.stdin=null;this.domain=null;this._queue=new NextTickQueue;this.execPath=__dirname;this.env={};this.exitCode=0;this._gid=1;this._uid=1;this.version="v5.0";this.versions={http_parser:"0.0",node:"5.0",v8:"0.0",uv:"0.0",zlib:"0.0",ares:"0.0",icu:"0.0",modules:"0",openssl:"0.0"};this.config={target_defaults:{cflags:[],default_configuration:"Release",defines:[],include_dirs:[],libraries:[]},variables:{clang:0,host_arch:"x32",node_install_npm:false,node_install_waf:false,node_prefix:"",node_shared_cares:false,node_shared_http_parser:false,node_shared_libuv:false,node_shared_zlib:false,node_shared_v8:false,node_use_dtrace:false,node_use_etw:false,node_use_openssl:false,node_shared_openssl:false,strict_aliasing:false,target_arch:"x32",v8_use_snapshot:false,v8_no_strict_aliasing:0,visibility:""}};this.pid=Math.random()*1e3|0;this.title="node";this.arch="x32";this._mask=18;this.connected=void 0}Process2.prototype.chdir=function(dir2){if(path===null){path=__webpack_require__(9)}this._cwd=path.resolve(dir2)};Process2.prototype.cwd=function(){return this._cwd};Process2.prototype.uptime=function(){return(Date.now()-this.startTime)/1e3|0};Process2.prototype.nextTick=function(fun){var args=[];for(var _i2=1;_i2<arguments.length;_i2++){args[_i2-1]=arguments[_i2]}this._queue.push(new Item(fun,args))};Process2.prototype.abort=function(){this.emit("abort")};Process2.prototype.exit=function(code){this.exitCode=code;this.emit("exit",[code])};Process2.prototype.getgid=function(){return this._gid};Process2.prototype.setgid=function(gid){if(typeof gid==="number"){this._gid=gid}else{this._gid=1}};Process2.prototype.getuid=function(){return this._uid};Process2.prototype.setuid=function(uid){if(typeof uid==="number"){this._uid=uid}else{this._uid=1}};Process2.prototype.kill=function(pid,signal){this.emit("kill",[pid,signal])};Process2.prototype.memoryUsage=function(){return{rss:0,heapTotal:0,heapUsed:0}};Process2.prototype.umask=function(mask){if(mask===void 0){mask=this._mask}var oldMask=this._mask;this._mask=mask;this.emit("umask",[mask]);return oldMask};Process2.prototype.hrtime=function(){var timeinfo;if(typeof performance!=="undefined"){timeinfo=performance.now()}else if(Date["now"]){timeinfo=Date.now()}else{timeinfo=new Date().getTime()}var secs=timeinfo/1e3|0;timeinfo-=secs*1e3;timeinfo=timeinfo*1e6|0;return[secs,timeinfo]};Process2.prototype.initializeTTYs=function(){if(this.stdout===null){var TTY=__webpack_require__(10);this.stdout=new TTY;this.stderr=new TTY;this.stdin=new TTY}};Process2.prototype.disconnect=function(){};return Process2}(events.EventEmitter);module22.exports=Process}).call(exports2,"/")},function(module22,exports2){function EventEmitter(){this._events=this._events||{};this._maxListeners=this._maxListeners||void 0}module22.exports=EventEmitter;EventEmitter.EventEmitter=EventEmitter;EventEmitter.prototype._events=void 0;EventEmitter.prototype._maxListeners=void 0;EventEmitter.defaultMaxListeners=10;EventEmitter.prototype.setMaxListeners=function(n){if(!isNumber(n)||n<0||isNaN(n))throw TypeError("n must be a positive number");this._maxListeners=n;return this};EventEmitter.prototype.emit=function(type){var er2,handler,len,args,i,listeners;if(!this._events)this._events={};if(type==="error"){if(!this._events.error||isObject(this._events.error)&&!this._events.error.length){er2=arguments[1];if(er2 instanceof Error){throw er2}else{var err=new Error(\'Uncaught, unspecified "error" event. (\'+er2+")");err.context=er2;throw err}}}handler=this._events[type];if(isUndefined(handler))return false;if(isFunction(handler)){switch(arguments.length){case 1:handler.call(this);break;case 2:handler.call(this,arguments[1]);break;case 3:handler.call(this,arguments[1],arguments[2]);break;default:args=Array.prototype.slice.call(arguments,1);handler.apply(this,args)}}else if(isObject(handler)){args=Array.prototype.slice.call(arguments,1);listeners=handler.slice();len=listeners.length;for(i=0;i<len;i++)listeners[i].apply(this,args)}return true};EventEmitter.prototype.addListener=function(type,listener){var m;if(!isFunction(listener))throw TypeError("listener must be a function");if(!this._events)this._events={};if(this._events.newListener)this.emit("newListener",type,isFunction(listener.listener)?listener.listener:listener);if(!this._events[type])this._events[type]=listener;else if(isObject(this._events[type]))this._events[type].push(listener);else this._events[type]=[this._events[type],listener];if(isObject(this._events[type])&&!this._events[type].warned){if(!isUndefined(this._maxListeners)){m=this._maxListeners}else{m=EventEmitter.defaultMaxListeners}if(m&&m>0&&this._events[type].length>m){this._events[type].warned=true;console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[type].length);if(typeof console.trace==="function"){console.trace()}}}return this};EventEmitter.prototype.on=EventEmitter.prototype.addListener;EventEmitter.prototype.once=function(type,listener){if(!isFunction(listener))throw TypeError("listener must be a function");var fired=false;function g3(){this.removeListener(type,g3);if(!fired){fired=true;listener.apply(this,arguments)}}g3.listener=listener;this.on(type,g3);return this};EventEmitter.prototype.removeListener=function(type,listener){var list,position,length,i;if(!isFunction(listener))throw TypeError("listener must be a function");if(!this._events||!this._events[type])return this;list=this._events[type];length=list.length;position=-1;if(list===listener||isFunction(list.listener)&&list.listener===listener){delete this._events[type];if(this._events.removeListener)this.emit("removeListener",type,listener)}else if(isObject(list)){for(i=length;i-- >0;){if(list[i]===listener||list[i].listener&&list[i].listener===listener){position=i;break}}if(position<0)return this;if(list.length===1){list.length=0;delete this._events[type]}else{list.splice(position,1)}if(this._events.removeListener)this.emit("removeListener",type,listener)}return this};EventEmitter.prototype.removeAllListeners=function(type){var key,listeners;if(!this._events)return this;if(!this._events.removeListener){if(arguments.length===0)this._events={};else if(this._events[type])delete this._events[type];return this}if(arguments.length===0){for(key in this._events){if(key==="removeListener")continue;this.removeAllListeners(key)}this.removeAllListeners("removeListener");this._events={};return this}listeners=this._events[type];if(isFunction(listeners)){this.removeListener(type,listeners)}else if(listeners){while(listeners.length)this.removeListener(type,listeners[listeners.length-1])}delete this._events[type];return this};EventEmitter.prototype.listeners=function(type){var ret;if(!this._events||!this._events[type])ret=[];else if(isFunction(this._events[type]))ret=[this._events[type]];else ret=this._events[type].slice();return ret};EventEmitter.prototype.listenerCount=function(type){if(this._events){var evlistener=this._events[type];if(isFunction(evlistener))return 1;else if(evlistener)return evlistener.length}return 0};EventEmitter.listenerCount=function(emitter,type){return emitter.listenerCount(type)};function isFunction(arg){return typeof arg==="function"}function isNumber(arg){return typeof arg==="number"}function isObject(arg){return typeof arg==="object"&&arg!==null}function isUndefined(arg){return arg===void 0}},function(module22,exports2,__webpack_require__){(function(process2){"use strict";var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;function posixSplitPath(filename){var out=splitPathRe.exec(filename);out.shift();return out}var path=function(){function path2(){}path2.normalize=function(p){if(p===""){p="."}var absolute=p.charAt(0)===path2.sep;p=path2._removeDuplicateSeps(p);var components=p.split(path2.sep);var goodComponents=[];for(var idx=0;idx<components.length;idx++){var c2=components[idx];if(c2==="."){continue}else if(c2===".."&&(absolute||!absolute&&goodComponents.length>0&&goodComponents[0]!=="..")){goodComponents.pop()}else{goodComponents.push(c2)}}if(!absolute&&goodComponents.length<2){switch(goodComponents.length){case 1:if(goodComponents[0]===""){goodComponents.unshift(".")}break;default:goodComponents.push(".")}}p=goodComponents.join(path2.sep);if(absolute&&p.charAt(0)!==path2.sep){p=path2.sep+p}return p};path2.join=function(){var paths=[];for(var _i2=0;_i2<arguments.length;_i2++){paths[_i2-0]=arguments[_i2]}var processed=[];for(var i=0;i<paths.length;i++){var segment=paths[i];if(typeof segment!=="string"){throw new TypeError("Invalid argument type to path.join: "+typeof segment)}else if(segment!==""){processed.push(segment)}}return path2.normalize(processed.join(path2.sep))};path2.resolve=function(){var paths=[];for(var _i2=0;_i2<arguments.length;_i2++){paths[_i2-0]=arguments[_i2]}var processed=[];for(var i=0;i<paths.length;i++){var p=paths[i];if(typeof p!=="string"){throw new TypeError("Invalid argument type to path.join: "+typeof p)}else if(p!==""){if(p.charAt(0)===path2.sep){processed=[]}processed.push(p)}}var resolved=path2.normalize(processed.join(path2.sep));if(resolved.length>1&&resolved.charAt(resolved.length-1)===path2.sep){return resolved.substr(0,resolved.length-1)}if(resolved.charAt(0)!==path2.sep){if(resolved.charAt(0)==="."&&(resolved.length===1||resolved.charAt(1)===path2.sep)){resolved=resolved.length===1?"":resolved.substr(2)}var cwd=process2.cwd();if(resolved!==""){resolved=this.normalize(cwd+(cwd!=="/"?path2.sep:"")+resolved)}else{resolved=cwd}}return resolved};path2.relative=function(from,to2){var i;from=path2.resolve(from);to2=path2.resolve(to2);var fromSegs=from.split(path2.sep);var toSegs=to2.split(path2.sep);toSegs.shift();fromSegs.shift();var upCount=0;var downSegs=[];for(i=0;i<fromSegs.length;i++){var seg=fromSegs[i];if(seg===toSegs[i]){continue}upCount=fromSegs.length-i;break}downSegs=toSegs.slice(i);if(fromSegs.length===1&&fromSegs[0]===""){upCount=0}if(upCount>fromSegs.length){upCount=fromSegs.length}var rv="";for(i=0;i<upCount;i++){rv+="../"}rv+=downSegs.join(path2.sep);if(rv.length>1&&rv.charAt(rv.length-1)===path2.sep){rv=rv.substr(0,rv.length-1)}return rv};path2.dirname=function(p){p=path2._removeDuplicateSeps(p);var absolute=p.charAt(0)===path2.sep;var sections=p.split(path2.sep);if(sections.pop()===""&&sections.length>0){sections.pop()}if(sections.length>1||sections.length===1&&!absolute){return sections.join(path2.sep)}else if(absolute){return path2.sep}else{return"."}};path2.basename=function(p,ext){if(ext===void 0){ext=""}if(p===""){return p}p=path2.normalize(p);var sections=p.split(path2.sep);var lastPart=sections[sections.length-1];if(lastPart===""&&sections.length>1){return sections[sections.length-2]}if(ext.length>0){var lastPartExt=lastPart.substr(lastPart.length-ext.length);if(lastPartExt===ext){return lastPart.substr(0,lastPart.length-ext.length)}}return lastPart};path2.extname=function(p){p=path2.normalize(p);var sections=p.split(path2.sep);p=sections.pop();if(p===""&&sections.length>0){p=sections.pop()}if(p===".."){return""}var i=p.lastIndexOf(".");if(i===-1||i===0){return""}return p.substr(i)};path2.isAbsolute=function(p){return p.length>0&&p.charAt(0)===path2.sep};path2._makeLong=function(p){return p};path2.parse=function(p){var allParts=posixSplitPath(p);return{root:allParts[0],dir:allParts[0]+allParts[1].slice(0,-1),base:allParts[2],ext:allParts[3],name:allParts[2].slice(0,allParts[2].length-allParts[3].length)}};path2.format=function(pathObject){if(pathObject===null||typeof pathObject!=="object"){throw new TypeError("Parameter \'pathObject\' must be an object, not "+typeof pathObject)}var root=pathObject.root||"";if(typeof root!=="string"){throw new TypeError("\'pathObject.root\' must be a string or undefined, not "+typeof pathObject.root)}var dir2=pathObject.dir?pathObject.dir+path2.sep:"";var base=pathObject.base||"";return dir2+base};path2._removeDuplicateSeps=function(p){p=p.replace(this._replaceRegex,this.sep);return p};path2.sep="/";path2._replaceRegex=new RegExp("//+","g");path2.delimiter=":";path2.posix=path2;path2.win32=path2;return path2}();var _4=path;module22.exports=path}).call(exports2,__webpack_require__(6))},function(module22,exports2,__webpack_require__){(function(Buffer2){"use strict";var __extends=this&&this.__extends||function(d4,b2){for(var p in b2)if(b2.hasOwnProperty(p))d4[p]=b2[p];function __(){this.constructor=d4}d4.prototype=b2===null?Object.create(b2):(__.prototype=b2.prototype,new __)};var stream=__webpack_require__(11);var TTY=function(_super){__extends(TTY2,_super);function TTY2(){_super.call(this);this.isRaw=false;this.columns=80;this.rows=120;this.isTTY=true;this._bufferedWrites=[];this._waitingForWrites=false}TTY2.prototype.setRawMode=function(mode){if(this.isRaw!==mode){this.isRaw=mode;this.emit("modeChange")}};TTY2.prototype.changeColumns=function(columns){if(columns!==this.columns){this.columns=columns;this.emit("resize")}};TTY2.prototype.changeRows=function(rows){if(rows!==this.rows){this.rows=rows;this.emit("resize")}};TTY2.isatty=function(fd){return fd&&fd instanceof TTY2};TTY2.prototype._write=function(chunk,encoding,cb){var error;try{var data;if(typeof chunk==="string"){data=new Buffer2(chunk,encoding)}else{data=chunk}this._bufferedWrites.push(data);if(this._waitingForWrites){this._read(1024)}}catch(e){error=e}finally{cb(error)}};TTY2.prototype._read=function(size){if(this._bufferedWrites.length===0){this._waitingForWrites=true}else{while(this._bufferedWrites.length>0){this._waitingForWrites=this.push(this._bufferedWrites.shift());if(!this._waitingForWrites){break}}}};return TTY2}(stream.Duplex);module22.exports=TTY}).call(exports2,__webpack_require__(1))},function(module22,exports2,__webpack_require__){module22.exports=Stream;var EE=__webpack_require__(8).EventEmitter;var inherits=__webpack_require__(12);inherits(Stream,EE);Stream.Readable=__webpack_require__(13);Stream.Writable=__webpack_require__(27);Stream.Duplex=__webpack_require__(28);Stream.Transform=__webpack_require__(29);Stream.PassThrough=__webpack_require__(30);Stream.Stream=Stream;function Stream(){EE.call(this)}Stream.prototype.pipe=function(dest,options){var source=this;function ondata(chunk){if(dest.writable){if(false===dest.write(chunk)&&source.pause){source.pause()}}}source.on("data",ondata);function ondrain(){if(source.readable&&source.resume){source.resume()}}dest.on("drain",ondrain);if(!dest._isStdio&&(!options||options.end!==false)){source.on("end",onend);source.on("close",onclose)}var didOnEnd=false;function onend(){if(didOnEnd)return;didOnEnd=true;dest.end()}function onclose(){if(didOnEnd)return;didOnEnd=true;if(typeof dest.destroy==="function")dest.destroy()}function onerror(er2){cleanup();if(EE.listenerCount(this,"error")===0){throw er2}}source.on("error",onerror);dest.on("error",onerror);function cleanup(){source.removeListener("data",ondata);dest.removeListener("drain",ondrain);source.removeListener("end",onend);source.removeListener("close",onclose);source.removeListener("error",onerror);dest.removeListener("error",onerror);source.removeListener("end",cleanup);source.removeListener("close",cleanup);dest.removeListener("close",cleanup)}source.on("end",cleanup);source.on("close",cleanup);dest.on("close",cleanup);dest.emit("pipe",source);return dest}},function(module22,exports2){if(typeof Object.create==="function"){module22.exports=function inherits(ctor,superCtor){ctor.super_=superCtor;ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:false,writable:true,configurable:true}})}}else{module22.exports=function inherits(ctor,superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor;ctor.prototype.constructor=ctor}}},function(module22,exports2,__webpack_require__){(function(process2){var Stream=function(){try{return __webpack_require__(11)}catch(_4){}}();exports2=module22.exports=__webpack_require__(14);exports2.Stream=Stream||exports2;exports2.Readable=exports2;exports2.Writable=__webpack_require__(22);exports2.Duplex=__webpack_require__(21);exports2.Transform=__webpack_require__(25);exports2.PassThrough=__webpack_require__(26);if(!process2.browser&&process2.env.READABLE_STREAM==="disable"&&Stream){module22.exports=Stream}}).call(exports2,__webpack_require__(6))},function(module22,exports2,__webpack_require__){(function(process2){"use strict";module22.exports=Readable;var processNextTick=__webpack_require__(15);var isArray=__webpack_require__(16);var Duplex;Readable.ReadableState=ReadableState;var EE=__webpack_require__(8).EventEmitter;var EElistenerCount=function(emitter,type){return emitter.listeners(type).length};var Stream;(function(){try{Stream=__webpack_require__(11)}catch(_4){}finally{if(!Stream)Stream=__webpack_require__(8).EventEmitter}})();var Buffer2=__webpack_require__(2).Buffer;var bufferShim=__webpack_require__(17);var util=__webpack_require__(18);util.inherits=__webpack_require__(12);var debugUtil=__webpack_require__(19);var debug=void 0;if(debugUtil&&debugUtil.debuglog){debug=debugUtil.debuglog("stream")}else{debug=function(){}}var BufferList=__webpack_require__(20);var StringDecoder;util.inherits(Readable,Stream);function prependListener(emitter,event,fn2){if(typeof emitter.prependListener==="function"){return emitter.prependListener(event,fn2)}else{if(!emitter._events||!emitter._events[event])emitter.on(event,fn2);else if(isArray(emitter._events[event]))emitter._events[event].unshift(fn2);else emitter._events[event]=[fn2,emitter._events[event]]}}function ReadableState(options,stream){Duplex=Duplex||__webpack_require__(21);options=options||{};this.objectMode=!!options.objectMode;if(stream instanceof Duplex)this.objectMode=this.objectMode||!!options.readableObjectMode;var hwm=options.highWaterMark;var defaultHwm=this.objectMode?16:16*1024;this.highWaterMark=hwm||hwm===0?hwm:defaultHwm;this.highWaterMark=~~this.highWaterMark;this.buffer=new BufferList;this.length=0;this.pipes=null;this.pipesCount=0;this.flowing=null;this.ended=false;this.endEmitted=false;this.reading=false;this.sync=true;this.needReadable=false;this.emittedReadable=false;this.readableListening=false;this.resumeScheduled=false;this.defaultEncoding=options.defaultEncoding||"utf8";this.ranOut=false;this.awaitDrain=0;this.readingMore=false;this.decoder=null;this.encoding=null;if(options.encoding){if(!StringDecoder)StringDecoder=__webpack_require__(24).StringDecoder;this.decoder=new StringDecoder(options.encoding);this.encoding=options.encoding}}function Readable(options){Duplex=Duplex||__webpack_require__(21);if(!(this instanceof Readable))return new Readable(options);this._readableState=new ReadableState(options,this);this.readable=true;if(options&&typeof options.read==="function")this._read=options.read;Stream.call(this)}Readable.prototype.push=function(chunk,encoding){var state4=this._readableState;if(!state4.objectMode&&typeof chunk==="string"){encoding=encoding||state4.defaultEncoding;if(encoding!==state4.encoding){chunk=bufferShim.from(chunk,encoding);encoding=""}}return readableAddChunk(this,state4,chunk,encoding,false)};Readable.prototype.unshift=function(chunk){var state4=this._readableState;return readableAddChunk(this,state4,chunk,"",true)};Readable.prototype.isPaused=function(){return this._readableState.flowing===false};function readableAddChunk(stream,state4,chunk,encoding,addToFront){var er2=chunkInvalid(state4,chunk);if(er2){stream.emit("error",er2)}else if(chunk===null){state4.reading=false;onEofChunk(stream,state4)}else if(state4.objectMode||chunk&&chunk.length>0){if(state4.ended&&!addToFront){var e=new Error("stream.push() after EOF");stream.emit("error",e)}else if(state4.endEmitted&&addToFront){var _e3=new Error("stream.unshift() after end event");stream.emit("error",_e3)}else{var skipAdd;if(state4.decoder&&!addToFront&&!encoding){chunk=state4.decoder.write(chunk);skipAdd=!state4.objectMode&&chunk.length===0}if(!addToFront)state4.reading=false;if(!skipAdd){if(state4.flowing&&state4.length===0&&!state4.sync){stream.emit("data",chunk);stream.read(0)}else{state4.length+=state4.objectMode?1:chunk.length;if(addToFront)state4.buffer.unshift(chunk);else state4.buffer.push(chunk);if(state4.needReadable)emitReadable(stream)}}maybeReadMore(stream,state4)}}else if(!addToFront){state4.reading=false}return needMoreData(state4)}function needMoreData(state4){return!state4.ended&&(state4.needReadable||state4.length<state4.highWaterMark||state4.length===0)}Readable.prototype.setEncoding=function(enc){if(!StringDecoder)StringDecoder=__webpack_require__(24).StringDecoder;this._readableState.decoder=new StringDecoder(enc);this._readableState.encoding=enc;return this};var MAX_HWM=8388608;function computeNewHighWaterMark(n){if(n>=MAX_HWM){n=MAX_HWM}else{n--;n|=n>>>1;n|=n>>>2;n|=n>>>4;n|=n>>>8;n|=n>>>16;n++}return n}function howMuchToRead(n,state4){if(n<=0||state4.length===0&&state4.ended)return 0;if(state4.objectMode)return 1;if(n!==n){if(state4.flowing&&state4.length)return state4.buffer.head.data.length;else return state4.length}if(n>state4.highWaterMark)state4.highWaterMark=computeNewHighWaterMark(n);if(n<=state4.length)return n;if(!state4.ended){state4.needReadable=true;return 0}return state4.length}Readable.prototype.read=function(n){debug("read",n);n=parseInt(n,10);var state4=this._readableState;var nOrig=n;if(n!==0)state4.emittedReadable=false;if(n===0&&state4.needReadable&&(state4.length>=state4.highWaterMark||state4.ended)){debug("read: emitReadable",state4.length,state4.ended);if(state4.length===0&&state4.ended)endReadable(this);else emitReadable(this);return null}n=howMuchToRead(n,state4);if(n===0&&state4.ended){if(state4.length===0)endReadable(this);return null}var doRead=state4.needReadable;debug("need readable",doRead);if(state4.length===0||state4.length-n<state4.highWaterMark){doRead=true;debug("length less than watermark",doRead)}if(state4.ended||state4.reading){doRead=false;debug("reading or ended",doRead)}else if(doRead){debug("do read");state4.reading=true;state4.sync=true;if(state4.length===0)state4.needReadable=true;this._read(state4.highWaterMark);state4.sync=false;if(!state4.reading)n=howMuchToRead(nOrig,state4)}var ret;if(n>0)ret=fromList(n,state4);else ret=null;if(ret===null){state4.needReadable=true;n=0}else{state4.length-=n}if(state4.length===0){if(!state4.ended)state4.needReadable=true;if(nOrig!==n&&state4.ended)endReadable(this)}if(ret!==null)this.emit("data",ret);return ret};function chunkInvalid(state4,chunk){var er2=null;if(!Buffer2.isBuffer(chunk)&&typeof chunk!=="string"&&chunk!==null&&chunk!==void 0&&!state4.objectMode){er2=new TypeError("Invalid non-string/buffer chunk")}return er2}function onEofChunk(stream,state4){if(state4.ended)return;if(state4.decoder){var chunk=state4.decoder.end();if(chunk&&chunk.length){state4.buffer.push(chunk);state4.length+=state4.objectMode?1:chunk.length}}state4.ended=true;emitReadable(stream)}function emitReadable(stream){var state4=stream._readableState;state4.needReadable=false;if(!state4.emittedReadable){debug("emitReadable",state4.flowing);state4.emittedReadable=true;if(state4.sync)processNextTick(emitReadable_,stream);else emitReadable_(stream)}}function emitReadable_(stream){debug("emit readable");stream.emit("readable");flow(stream)}function maybeReadMore(stream,state4){if(!state4.readingMore){state4.readingMore=true;processNextTick(maybeReadMore_,stream,state4)}}function maybeReadMore_(stream,state4){var len=state4.length;while(!state4.reading&&!state4.flowing&&!state4.ended&&state4.length<state4.highWaterMark){debug("maybeReadMore read 0");stream.read(0);if(len===state4.length)break;else len=state4.length}state4.readingMore=false}Readable.prototype._read=function(n){this.emit("error",new Error("_read() is not implemented"))};Readable.prototype.pipe=function(dest,pipeOpts){var src=this;var state4=this._readableState;switch(state4.pipesCount){case 0:state4.pipes=dest;break;case 1:state4.pipes=[state4.pipes,dest];break;default:state4.pipes.push(dest);break}state4.pipesCount+=1;debug("pipe count=%d opts=%j",state4.pipesCount,pipeOpts);var doEnd=(!pipeOpts||pipeOpts.end!==false)&&dest!==process2.stdout&&dest!==process2.stderr;var endFn=doEnd?onend:cleanup;if(state4.endEmitted)processNextTick(endFn);else src.once("end",endFn);dest.on("unpipe",onunpipe);function onunpipe(readable){debug("onunpipe");if(readable===src){cleanup()}}function onend(){debug("onend");dest.end()}var ondrain=pipeOnDrain(src);dest.on("drain",ondrain);var cleanedUp=false;function cleanup(){debug("cleanup");dest.removeListener("close",onclose);dest.removeListener("finish",onfinish);dest.removeListener("drain",ondrain);dest.removeListener("error",onerror);dest.removeListener("unpipe",onunpipe);src.removeListener("end",onend);src.removeListener("end",cleanup);src.removeListener("data",ondata);cleanedUp=true;if(state4.awaitDrain&&(!dest._writableState||dest._writableState.needDrain))ondrain()}var increasedAwaitDrain=false;src.on("data",ondata);function ondata(chunk){debug("ondata");increasedAwaitDrain=false;var ret=dest.write(chunk);if(false===ret&&!increasedAwaitDrain){if((state4.pipesCount===1&&state4.pipes===dest||state4.pipesCount>1&&indexOf(state4.pipes,dest)!==-1)&&!cleanedUp){debug("false write response, pause",src._readableState.awaitDrain);src._readableState.awaitDrain++;increasedAwaitDrain=true}src.pause()}}function onerror(er2){debug("onerror",er2);unpipe();dest.removeListener("error",onerror);if(EElistenerCount(dest,"error")===0)dest.emit("error",er2)}prependListener(dest,"error",onerror);function onclose(){dest.removeListener("finish",onfinish);unpipe()}dest.once("close",onclose);function onfinish(){debug("onfinish");dest.removeListener("close",onclose);unpipe()}dest.once("finish",onfinish);function unpipe(){debug("unpipe");src.unpipe(dest)}dest.emit("pipe",src);if(!state4.flowing){debug("pipe resume");src.resume()}return dest};function pipeOnDrain(src){return function(){var state4=src._readableState;debug("pipeOnDrain",state4.awaitDrain);if(state4.awaitDrain)state4.awaitDrain--;if(state4.awaitDrain===0&&EElistenerCount(src,"data")){state4.flowing=true;flow(src)}}}Readable.prototype.unpipe=function(dest){var state4=this._readableState;if(state4.pipesCount===0)return this;if(state4.pipesCount===1){if(dest&&dest!==state4.pipes)return this;if(!dest)dest=state4.pipes;state4.pipes=null;state4.pipesCount=0;state4.flowing=false;if(dest)dest.emit("unpipe",this);return this}if(!dest){var dests=state4.pipes;var len=state4.pipesCount;state4.pipes=null;state4.pipesCount=0;state4.flowing=false;for(var i=0;i<len;i++){dests[i].emit("unpipe",this)}return this}var index=indexOf(state4.pipes,dest);if(index===-1)return this;state4.pipes.splice(index,1);state4.pipesCount-=1;if(state4.pipesCount===1)state4.pipes=state4.pipes[0];dest.emit("unpipe",this);return this};Readable.prototype.on=function(ev2,fn2){var res=Stream.prototype.on.call(this,ev2,fn2);if(ev2==="data"){if(this._readableState.flowing!==false)this.resume()}else if(ev2==="readable"){var state4=this._readableState;if(!state4.endEmitted&&!state4.readableListening){state4.readableListening=state4.needReadable=true;state4.emittedReadable=false;if(!state4.reading){processNextTick(nReadingNextTick,this)}else if(state4.length){emitReadable(this,state4)}}}return res};Readable.prototype.addListener=Readable.prototype.on;function nReadingNextTick(self2){debug("readable nexttick read 0");self2.read(0)}Readable.prototype.resume=function(){var state4=this._readableState;if(!state4.flowing){debug("resume");state4.flowing=true;resume(this,state4)}return this};function resume(stream,state4){if(!state4.resumeScheduled){state4.resumeScheduled=true;processNextTick(resume_,stream,state4)}}function resume_(stream,state4){if(!state4.reading){debug("resume read 0");stream.read(0)}state4.resumeScheduled=false;state4.awaitDrain=0;stream.emit("resume");flow(stream);if(state4.flowing&&!state4.reading)stream.read(0)}Readable.prototype.pause=function(){debug("call pause flowing=%j",this._readableState.flowing);if(false!==this._readableState.flowing){debug("pause");this._readableState.flowing=false;this.emit("pause")}return this};function flow(stream){var state4=stream._readableState;debug("flow",state4.flowing);while(state4.flowing&&stream.read()!==null){}}Readable.prototype.wrap=function(stream){var state4=this._readableState;var paused=false;var self2=this;stream.on("end",function(){debug("wrapped end");if(state4.decoder&&!state4.ended){var chunk=state4.decoder.end();if(chunk&&chunk.length)self2.push(chunk)}self2.push(null)});stream.on("data",function(chunk){debug("wrapped data");if(state4.decoder)chunk=state4.decoder.write(chunk);if(state4.objectMode&&(chunk===null||chunk===void 0))return;else if(!state4.objectMode&&(!chunk||!chunk.length))return;var ret=self2.push(chunk);if(!ret){paused=true;stream.pause()}});for(var i in stream){if(this[i]===void 0&&typeof stream[i]==="function"){this[i]=function(method){return function(){return stream[method].apply(stream,arguments)}}(i)}}var events=["error","close","destroy","pause","resume"];forEach(events,function(ev2){stream.on(ev2,self2.emit.bind(self2,ev2))});self2._read=function(n){debug("wrapped _read",n);if(paused){paused=false;stream.resume()}};return self2};Readable._fromList=fromList;function fromList(n,state4){if(state4.length===0)return null;var ret;if(state4.objectMode)ret=state4.buffer.shift();else if(!n||n>=state4.length){if(state4.decoder)ret=state4.buffer.join("");else if(state4.buffer.length===1)ret=state4.buffer.head.data;else ret=state4.buffer.concat(state4.length);state4.buffer.clear()}else{ret=fromListPartial(n,state4.buffer,state4.decoder)}return ret}function fromListPartial(n,list,hasStrings){var ret;if(n<list.head.data.length){ret=list.head.data.slice(0,n);list.head.data=list.head.data.slice(n)}else if(n===list.head.data.length){ret=list.shift()}else{ret=hasStrings?copyFromBufferString(n,list):copyFromBuffer(n,list)}return ret}function copyFromBufferString(n,list){var p=list.head;var c2=1;var ret=p.data;n-=ret.length;while(p=p.next){var str3=p.data;var nb=n>str3.length?str3.length:n;if(nb===str3.length)ret+=str3;else ret+=str3.slice(0,n);n-=nb;if(n===0){if(nb===str3.length){++c2;if(p.next)list.head=p.next;else list.head=list.tail=null}else{list.head=p;p.data=str3.slice(nb)}break}++c2}list.length-=c2;return ret}function copyFromBuffer(n,list){var ret=bufferShim.allocUnsafe(n);var p=list.head;var c2=1;p.data.copy(ret);n-=p.data.length;while(p=p.next){var buf=p.data;var nb=n>buf.length?buf.length:n;buf.copy(ret,ret.length-n,0,nb);n-=nb;if(n===0){if(nb===buf.length){++c2;if(p.next)list.head=p.next;else list.head=list.tail=null}else{list.head=p;p.data=buf.slice(nb)}break}++c2}list.length-=c2;return ret}function endReadable(stream){var state4=stream._readableState;if(state4.length>0)throw new Error(\'"endReadable()" called on non-empty stream\');if(!state4.endEmitted){state4.ended=true;processNextTick(endReadableNT,state4,stream)}}function endReadableNT(state4,stream){if(!state4.endEmitted&&state4.length===0){state4.endEmitted=true;stream.readable=false;stream.emit("end")}}function forEach(xs2,f){for(var i=0,l=xs2.length;i<l;i++){f(xs2[i],i)}}function indexOf(xs2,x4){for(var i=0,l=xs2.length;i<l;i++){if(xs2[i]===x4)return i}return-1}}).call(exports2,__webpack_require__(6))},function(module22,exports2,__webpack_require__){(function(process2){"use strict";if(!process2.version||process2.version.indexOf("v0.")===0||process2.version.indexOf("v1.")===0&&process2.version.indexOf("v1.8.")!==0){module22.exports=nextTick}else{module22.exports=process2.nextTick}function nextTick(fn2,arg1,arg2,arg3){if(typeof fn2!=="function"){throw new TypeError(\'"callback" argument must be a function\')}var len=arguments.length;var args,i;switch(len){case 0:case 1:return process2.nextTick(fn2);case 2:return process2.nextTick(function afterTickOne(){fn2.call(null,arg1)});case 3:return process2.nextTick(function afterTickTwo(){fn2.call(null,arg1,arg2)});case 4:return process2.nextTick(function afterTickThree(){fn2.call(null,arg1,arg2,arg3)});default:args=new Array(len-1);i=0;while(i<args.length){args[i++]=arguments[i]}return process2.nextTick(function afterTick(){fn2.apply(null,args)})}}}).call(exports2,__webpack_require__(6))},function(module22,exports2){var toString={}.toString;module22.exports=Array.isArray||function(arr){return toString.call(arr)=="[object Array]"}},function(module22,exports2,__webpack_require__){(function(global2){"use strict";var buffer=__webpack_require__(2);var Buffer2=buffer.Buffer;var SlowBuffer=buffer.SlowBuffer;var MAX_LEN=buffer.kMaxLength||2147483647;exports2.alloc=function alloc(size,fill,encoding){if(typeof Buffer2.alloc==="function"){return Buffer2.alloc(size,fill,encoding)}if(typeof encoding==="number"){throw new TypeError("encoding must not be number")}if(typeof size!=="number"){throw new TypeError("size must be a number")}if(size>MAX_LEN){throw new RangeError("size is too large")}var enc=encoding;var _fill=fill;if(_fill===void 0){enc=void 0;_fill=0}var buf=new Buffer2(size);if(typeof _fill==="string"){var fillBuf=new Buffer2(_fill,enc);var flen=fillBuf.length;var i=-1;while(++i<size){buf[i]=fillBuf[i%flen]}}else{buf.fill(_fill)}return buf};exports2.allocUnsafe=function allocUnsafe(size){if(typeof Buffer2.allocUnsafe==="function"){return Buffer2.allocUnsafe(size)}if(typeof size!=="number"){throw new TypeError("size must be a number")}if(size>MAX_LEN){throw new RangeError("size is too large")}return new Buffer2(size)};exports2.from=function from(value2,encodingOrOffset,length){if(typeof Buffer2.from==="function"&&(!global2.Uint8Array||Uint8Array.from!==Buffer2.from)){return Buffer2.from(value2,encodingOrOffset,length)}if(typeof value2==="number"){throw new TypeError(\'"value" argument must not be a number\')}if(typeof value2==="string"){return new Buffer2(value2,encodingOrOffset)}if(typeof ArrayBuffer!=="undefined"&&value2 instanceof ArrayBuffer){var offset=encodingOrOffset;if(arguments.length===1){return new Buffer2(value2)}if(typeof offset==="undefined"){offset=0}var len=length;if(typeof len==="undefined"){len=value2.byteLength-offset}if(offset>=value2.byteLength){throw new RangeError("\'offset\' is out of bounds")}if(len>value2.byteLength-offset){throw new RangeError("\'length\' is out of bounds")}return new Buffer2(value2.slice(offset,offset+len))}if(Buffer2.isBuffer(value2)){var out=new Buffer2(value2.length);value2.copy(out,0,0,value2.length);return out}if(value2){if(Array.isArray(value2)||typeof ArrayBuffer!=="undefined"&&value2.buffer instanceof ArrayBuffer||"length"in value2){return new Buffer2(value2)}if(value2.type==="Buffer"&&Array.isArray(value2.data)){return new Buffer2(value2.data)}}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")};exports2.allocUnsafeSlow=function allocUnsafeSlow(size){if(typeof Buffer2.allocUnsafeSlow==="function"){return Buffer2.allocUnsafeSlow(size)}if(typeof size!=="number"){throw new TypeError("size must be a number")}if(size>=MAX_LEN){throw new RangeError("size is too large")}return new SlowBuffer(size)}}).call(exports2,function(){return this}())},function(module22,exports2,__webpack_require__){(function(Buffer2){function isArray(arg){if(Array.isArray){return Array.isArray(arg)}return objectToString(arg)==="[object Array]"}exports2.isArray=isArray;function isBoolean(arg){return typeof arg==="boolean"}exports2.isBoolean=isBoolean;function isNull(arg){return arg===null}exports2.isNull=isNull;function isNullOrUndefined(arg){return arg==null}exports2.isNullOrUndefined=isNullOrUndefined;function isNumber(arg){return typeof arg==="number"}exports2.isNumber=isNumber;function isString(arg){return typeof arg==="string"}exports2.isString=isString;function isSymbol(arg){return typeof arg==="symbol"}exports2.isSymbol=isSymbol;function isUndefined(arg){return arg===void 0}exports2.isUndefined=isUndefined;function isRegExp(re2){return objectToString(re2)==="[object RegExp]"}exports2.isRegExp=isRegExp;function isObject(arg){return typeof arg==="object"&&arg!==null}exports2.isObject=isObject;function isDate(d4){return objectToString(d4)==="[object Date]"}exports2.isDate=isDate;function isError(e){return objectToString(e)==="[object Error]"||e instanceof Error}exports2.isError=isError;function isFunction(arg){return typeof arg==="function"}exports2.isFunction=isFunction;function isPrimitive(arg){return arg===null||typeof arg==="boolean"||typeof arg==="number"||typeof arg==="string"||typeof arg==="symbol"||typeof arg==="undefined"}exports2.isPrimitive=isPrimitive;exports2.isBuffer=Buffer2.isBuffer;function objectToString(o2){return Object.prototype.toString.call(o2)}}).call(exports2,__webpack_require__(1))},function(module22,exports2){},function(module22,exports2,__webpack_require__){"use strict";var Buffer2=__webpack_require__(2).Buffer;var bufferShim=__webpack_require__(17);module22.exports=BufferList;function BufferList(){this.head=null;this.tail=null;this.length=0}BufferList.prototype.push=function(v3){var entry={data:v3,next:null};if(this.length>0)this.tail.next=entry;else this.head=entry;this.tail=entry;++this.length};BufferList.prototype.unshift=function(v3){var entry={data:v3,next:this.head};if(this.length===0)this.tail=entry;this.head=entry;++this.length};BufferList.prototype.shift=function(){if(this.length===0)return;var ret=this.head.data;if(this.length===1)this.head=this.tail=null;else this.head=this.head.next;--this.length;return ret};BufferList.prototype.clear=function(){this.head=this.tail=null;this.length=0};BufferList.prototype.join=function(s){if(this.length===0)return"";var p=this.head;var ret=""+p.data;while(p=p.next){ret+=s+p.data}return ret};BufferList.prototype.concat=function(n){if(this.length===0)return bufferShim.alloc(0);if(this.length===1)return this.head.data;var ret=bufferShim.allocUnsafe(n>>>0);var p=this.head;var i=0;while(p){p.data.copy(ret,i);i+=p.data.length;p=p.next}return ret}},function(module22,exports2,__webpack_require__){"use strict";var objectKeys=Object.keys||function(obj){var keys2=[];for(var key in obj){keys2.push(key)}return keys2};module22.exports=Duplex;var processNextTick=__webpack_require__(15);var util=__webpack_require__(18);util.inherits=__webpack_require__(12);var Readable=__webpack_require__(14);var Writable=__webpack_require__(22);util.inherits(Duplex,Readable);var keys=objectKeys(Writable.prototype);for(var v3=0;v3<keys.length;v3++){var method=keys[v3];if(!Duplex.prototype[method])Duplex.prototype[method]=Writable.prototype[method]}function Duplex(options){if(!(this instanceof Duplex))return new Duplex(options);Readable.call(this,options);Writable.call(this,options);if(options&&options.readable===false)this.readable=false;if(options&&options.writable===false)this.writable=false;this.allowHalfOpen=true;if(options&&options.allowHalfOpen===false)this.allowHalfOpen=false;this.once("end",onend)}function onend(){if(this.allowHalfOpen||this._writableState.ended)return;processNextTick(onEndNT,this)}function onEndNT(self2){self2.end()}function forEach(xs2,f){for(var i=0,l=xs2.length;i<l;i++){f(xs2[i],i)}}},function(module22,exports2,__webpack_require__){(function(process2){"use strict";module22.exports=Writable;var processNextTick=__webpack_require__(15);var asyncWrite=!process2.browser&&["v0.10","v0.9."].indexOf(process2.version.slice(0,5))>-1?setImmediate:processNextTick;var Duplex;Writable.WritableState=WritableState;var util=__webpack_require__(18);util.inherits=__webpack_require__(12);var internalUtil={deprecate:__webpack_require__(23)};var Stream;(function(){try{Stream=__webpack_require__(11)}catch(_4){}finally{if(!Stream)Stream=__webpack_require__(8).EventEmitter}})();var Buffer2=__webpack_require__(2).Buffer;var bufferShim=__webpack_require__(17);util.inherits(Writable,Stream);function nop(){}function WriteReq(chunk,encoding,cb){this.chunk=chunk;this.encoding=encoding;this.callback=cb;this.next=null}function WritableState(options,stream){Duplex=Duplex||__webpack_require__(21);options=options||{};this.objectMode=!!options.objectMode;if(stream instanceof Duplex)this.objectMode=this.objectMode||!!options.writableObjectMode;var hwm=options.highWaterMark;var defaultHwm=this.objectMode?16:16*1024;this.highWaterMark=hwm||hwm===0?hwm:defaultHwm;this.highWaterMark=~~this.highWaterMark;this.needDrain=false;this.ending=false;this.ended=false;this.finished=false;var noDecode=options.decodeStrings===false;this.decodeStrings=!noDecode;this.defaultEncoding=options.defaultEncoding||"utf8";this.length=0;this.writing=false;this.corked=0;this.sync=true;this.bufferProcessing=false;this.onwrite=function(er2){onwrite(stream,er2)};this.writecb=null;this.writelen=0;this.bufferedRequest=null;this.lastBufferedRequest=null;this.pendingcb=0;this.prefinished=false;this.errorEmitted=false;this.bufferedRequestCount=0;this.corkedRequestsFree=new CorkedRequest(this)}WritableState.prototype.getBuffer=function getBuffer(){var current=this.bufferedRequest;var out=[];while(current){out.push(current);current=current.next}return out};(function(){try{Object.defineProperty(WritableState.prototype,"buffer",{get:internalUtil.deprecate(function(){return this.getBuffer()},"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.")})}catch(_4){}})();var realHasInstance;if(typeof Symbol==="function"&&Symbol.hasInstance&&typeof Function.prototype[Symbol.hasInstance]==="function"){realHasInstance=Function.prototype[Symbol.hasInstance];Object.defineProperty(Writable,Symbol.hasInstance,{value:function(object){if(realHasInstance.call(this,object))return true;return object&&object._writableState instanceof WritableState}})}else{realHasInstance=function(object){return object instanceof this}}function Writable(options){Duplex=Duplex||__webpack_require__(21);if(!realHasInstance.call(Writable,this)&&!(this instanceof Duplex)){return new Writable(options)}this._writableState=new WritableState(options,this);this.writable=true;if(options){if(typeof options.write==="function")this._write=options.write;if(typeof options.writev==="function")this._writev=options.writev}Stream.call(this)}Writable.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe, not readable"))};function writeAfterEnd(stream,cb){var er2=new Error("write after end");stream.emit("error",er2);processNextTick(cb,er2)}function validChunk(stream,state4,chunk,cb){var valid=true;var er2=false;if(chunk===null){er2=new TypeError("May not write null values to stream")}else if(typeof chunk!=="string"&&chunk!==void 0&&!state4.objectMode){er2=new TypeError("Invalid non-string/buffer chunk")}if(er2){stream.emit("error",er2);processNextTick(cb,er2);valid=false}return valid}Writable.prototype.write=function(chunk,encoding,cb){var state4=this._writableState;var ret=false;var isBuf=Buffer2.isBuffer(chunk);if(typeof encoding==="function"){cb=encoding;encoding=null}if(isBuf)encoding="buffer";else if(!encoding)encoding=state4.defaultEncoding;if(typeof cb!=="function")cb=nop;if(state4.ended)writeAfterEnd(this,cb);else if(isBuf||validChunk(this,state4,chunk,cb)){state4.pendingcb++;ret=writeOrBuffer(this,state4,isBuf,chunk,encoding,cb)}return ret};Writable.prototype.cork=function(){var state4=this._writableState;state4.corked++};Writable.prototype.uncork=function(){var state4=this._writableState;if(state4.corked){state4.corked--;if(!state4.writing&&!state4.corked&&!state4.finished&&!state4.bufferProcessing&&state4.bufferedRequest)clearBuffer(this,state4)}};Writable.prototype.setDefaultEncoding=function setDefaultEncoding(encoding){if(typeof encoding==="string")encoding=encoding.toLowerCase();if(!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((encoding+"").toLowerCase())>-1))throw new TypeError("Unknown encoding: "+encoding);this._writableState.defaultEncoding=encoding;return this};function decodeChunk(state4,chunk,encoding){if(!state4.objectMode&&state4.decodeStrings!==false&&typeof chunk==="string"){chunk=bufferShim.from(chunk,encoding)}return chunk}function writeOrBuffer(stream,state4,isBuf,chunk,encoding,cb){if(!isBuf){chunk=decodeChunk(state4,chunk,encoding);if(Buffer2.isBuffer(chunk))encoding="buffer"}var len=state4.objectMode?1:chunk.length;state4.length+=len;var ret=state4.length<state4.highWaterMark;if(!ret)state4.needDrain=true;if(state4.writing||state4.corked){var last=state4.lastBufferedRequest;state4.lastBufferedRequest=new WriteReq(chunk,encoding,cb);if(last){last.next=state4.lastBufferedRequest}else{state4.bufferedRequest=state4.lastBufferedRequest}state4.bufferedRequestCount+=1}else{doWrite(stream,state4,false,len,chunk,encoding,cb)}return ret}function doWrite(stream,state4,writev,len,chunk,encoding,cb){state4.writelen=len;state4.writecb=cb;state4.writing=true;state4.sync=true;if(writev)stream._writev(chunk,state4.onwrite);else stream._write(chunk,encoding,state4.onwrite);state4.sync=false}function onwriteError(stream,state4,sync,er2,cb){--state4.pendingcb;if(sync)processNextTick(cb,er2);else cb(er2);stream._writableState.errorEmitted=true;stream.emit("error",er2)}function onwriteStateUpdate(state4){state4.writing=false;state4.writecb=null;state4.length-=state4.writelen;state4.writelen=0}function onwrite(stream,er2){var state4=stream._writableState;var sync=state4.sync;var cb=state4.writecb;onwriteStateUpdate(state4);if(er2)onwriteError(stream,state4,sync,er2,cb);else{var finished=needFinish(state4);if(!finished&&!state4.corked&&!state4.bufferProcessing&&state4.bufferedRequest){clearBuffer(stream,state4)}if(sync){asyncWrite(afterWrite,stream,state4,finished,cb)}else{afterWrite(stream,state4,finished,cb)}}}function afterWrite(stream,state4,finished,cb){if(!finished)onwriteDrain(stream,state4);state4.pendingcb--;cb();finishMaybe(stream,state4)}function onwriteDrain(stream,state4){if(state4.length===0&&state4.needDrain){state4.needDrain=false;stream.emit("drain")}}function clearBuffer(stream,state4){state4.bufferProcessing=true;var entry=state4.bufferedRequest;if(stream._writev&&entry&&entry.next){var l=state4.bufferedRequestCount;var buffer=new Array(l);var holder=state4.corkedRequestsFree;holder.entry=entry;var count=0;while(entry){buffer[count]=entry;entry=entry.next;count+=1}doWrite(stream,state4,true,state4.length,buffer,"",holder.finish);state4.pendingcb++;state4.lastBufferedRequest=null;if(holder.next){state4.corkedRequestsFree=holder.next;holder.next=null}else{state4.corkedRequestsFree=new CorkedRequest(state4)}}else{while(entry){var chunk=entry.chunk;var encoding=entry.encoding;var cb=entry.callback;var len=state4.objectMode?1:chunk.length;doWrite(stream,state4,false,len,chunk,encoding,cb);entry=entry.next;if(state4.writing){break}}if(entry===null)state4.lastBufferedRequest=null}state4.bufferedRequestCount=0;state4.bufferedRequest=entry;state4.bufferProcessing=false}Writable.prototype._write=function(chunk,encoding,cb){cb(new Error("_write() is not implemented"))};Writable.prototype._writev=null;Writable.prototype.end=function(chunk,encoding,cb){var state4=this._writableState;if(typeof chunk==="function"){cb=chunk;chunk=null;encoding=null}else if(typeof encoding==="function"){cb=encoding;encoding=null}if(chunk!==null&&chunk!==void 0)this.write(chunk,encoding);if(state4.corked){state4.corked=1;this.uncork()}if(!state4.ending&&!state4.finished)endWritable(this,state4,cb)};function needFinish(state4){return state4.ending&&state4.length===0&&state4.bufferedRequest===null&&!state4.finished&&!state4.writing}function prefinish(stream,state4){if(!state4.prefinished){state4.prefinished=true;stream.emit("prefinish")}}function finishMaybe(stream,state4){var need=needFinish(state4);if(need){if(state4.pendingcb===0){prefinish(stream,state4);state4.finished=true;stream.emit("finish")}else{prefinish(stream,state4)}}return need}function endWritable(stream,state4,cb){state4.ending=true;finishMaybe(stream,state4);if(cb){if(state4.finished)processNextTick(cb);else stream.once("finish",cb)}state4.ended=true;stream.writable=false}function CorkedRequest(state4){var _this=this;this.next=null;this.entry=null;this.finish=function(err){var entry=_this.entry;_this.entry=null;while(entry){var cb=entry.callback;state4.pendingcb--;cb(err);entry=entry.next}if(state4.corkedRequestsFree){state4.corkedRequestsFree.next=_this}else{state4.corkedRequestsFree=_this}}}}).call(exports2,__webpack_require__(6))},function(module22,exports2){(function(global2){module22.exports=deprecate;function deprecate(fn2,msg){if(config("noDeprecation")){return fn2}var warned=false;function deprecated(){if(!warned){if(config("throwDeprecation")){throw new Error(msg)}else if(config("traceDeprecation")){console.trace(msg)}else{console.warn(msg)}warned=true}return fn2.apply(this,arguments)}return deprecated}function config(name2){try{if(!global2.localStorage)return false}catch(_4){return false}var val=global2.localStorage[name2];if(null==val)return false;return String(val).toLowerCase()==="true"}}).call(exports2,function(){return this}())},function(module22,exports2,__webpack_require__){var Buffer2=__webpack_require__(2).Buffer;var isBufferEncoding=Buffer2.isEncoding||function(encoding){switch(encoding&&encoding.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return true;default:return false}};function assertEncoding(encoding){if(encoding&&!isBufferEncoding(encoding)){throw new Error("Unknown encoding: "+encoding)}}var StringDecoder=exports2.StringDecoder=function(encoding){this.encoding=(encoding||"utf8").toLowerCase().replace(/[-_]/,"");assertEncoding(encoding);switch(this.encoding){case"utf8":this.surrogateSize=3;break;case"ucs2":case"utf16le":this.surrogateSize=2;this.detectIncompleteChar=utf16DetectIncompleteChar;break;case"base64":this.surrogateSize=3;this.detectIncompleteChar=base64DetectIncompleteChar;break;default:this.write=passThroughWrite;return}this.charBuffer=new Buffer2(6);this.charReceived=0;this.charLength=0};StringDecoder.prototype.write=function(buffer){var charStr="";while(this.charLength){var available=buffer.length>=this.charLength-this.charReceived?this.charLength-this.charReceived:buffer.length;buffer.copy(this.charBuffer,this.charReceived,0,available);this.charReceived+=available;if(this.charReceived<this.charLength){return""}buffer=buffer.slice(available,buffer.length);charStr=this.charBuffer.slice(0,this.charLength).toString(this.encoding);var charCode=charStr.charCodeAt(charStr.length-1);if(charCode>=55296&&charCode<=56319){this.charLength+=this.surrogateSize;charStr="";continue}this.charReceived=this.charLength=0;if(buffer.length===0){return charStr}break}this.detectIncompleteChar(buffer);var end=buffer.length;if(this.charLength){buffer.copy(this.charBuffer,0,buffer.length-this.charReceived,end);end-=this.charReceived}charStr+=buffer.toString(this.encoding,0,end);var end=charStr.length-1;var charCode=charStr.charCodeAt(end);if(charCode>=55296&&charCode<=56319){var size=this.surrogateSize;this.charLength+=size;this.charReceived+=size;this.charBuffer.copy(this.charBuffer,size,0,size);buffer.copy(this.charBuffer,0,0,size);return charStr.substring(0,end)}return charStr};StringDecoder.prototype.detectIncompleteChar=function(buffer){var i=buffer.length>=3?3:buffer.length;for(;i>0;i--){var c2=buffer[buffer.length-i];if(i==1&&c2>>5==6){this.charLength=2;break}if(i<=2&&c2>>4==14){this.charLength=3;break}if(i<=3&&c2>>3==30){this.charLength=4;break}}this.charReceived=i};StringDecoder.prototype.end=function(buffer){var res="";if(buffer&&buffer.length)res=this.write(buffer);if(this.charReceived){var cr2=this.charReceived;var buf=this.charBuffer;var enc=this.encoding;res+=buf.slice(0,cr2).toString(enc)}return res};function passThroughWrite(buffer){return buffer.toString(this.encoding)}function utf16DetectIncompleteChar(buffer){this.charReceived=buffer.length%2;this.charLength=this.charReceived?2:0}function base64DetectIncompleteChar(buffer){this.charReceived=buffer.length%3;this.charLength=this.charReceived?3:0}},function(module22,exports2,__webpack_require__){"use strict";module22.exports=Transform;var Duplex=__webpack_require__(21);var util=__webpack_require__(18);util.inherits=__webpack_require__(12);util.inherits(Transform,Duplex);function TransformState(stream){this.afterTransform=function(er2,data){return afterTransform(stream,er2,data)};this.needTransform=false;this.transforming=false;this.writecb=null;this.writechunk=null;this.writeencoding=null}function afterTransform(stream,er2,data){var ts3=stream._transformState;ts3.transforming=false;var cb=ts3.writecb;if(!cb)return stream.emit("error",new Error("no writecb in Transform class"));ts3.writechunk=null;ts3.writecb=null;if(data!==null&&data!==void 0)stream.push(data);cb(er2);var rs3=stream._readableState;rs3.reading=false;if(rs3.needReadable||rs3.length<rs3.highWaterMark){stream._read(rs3.highWaterMark)}}function Transform(options){if(!(this instanceof Transform))return new Transform(options);Duplex.call(this,options);this._transformState=new TransformState(this);var stream=this;this._readableState.needReadable=true;this._readableState.sync=false;if(options){if(typeof options.transform==="function")this._transform=options.transform;if(typeof options.flush==="function")this._flush=options.flush}this.once("prefinish",function(){if(typeof this._flush==="function")this._flush(function(er2,data){done(stream,er2,data)});else done(stream)})}Transform.prototype.push=function(chunk,encoding){this._transformState.needTransform=false;return Duplex.prototype.push.call(this,chunk,encoding)};Transform.prototype._transform=function(chunk,encoding,cb){throw new Error("_transform() is not implemented")};Transform.prototype._write=function(chunk,encoding,cb){var ts3=this._transformState;ts3.writecb=cb;ts3.writechunk=chunk;ts3.writeencoding=encoding;if(!ts3.transforming){var rs3=this._readableState;if(ts3.needTransform||rs3.needReadable||rs3.length<rs3.highWaterMark)this._read(rs3.highWaterMark)}};Transform.prototype._read=function(n){var ts3=this._transformState;if(ts3.writechunk!==null&&ts3.writecb&&!ts3.transforming){ts3.transforming=true;this._transform(ts3.writechunk,ts3.writeencoding,ts3.afterTransform)}else{ts3.needTransform=true}};function done(stream,er2,data){if(er2)return stream.emit("error",er2);if(data!==null&&data!==void 0)stream.push(data);var ws2=stream._writableState;var ts3=stream._transformState;if(ws2.length)throw new Error("Calling transform done when ws.length != 0");if(ts3.transforming)throw new Error("Calling transform done when still transforming");return stream.push(null)}},function(module22,exports2,__webpack_require__){"use strict";module22.exports=PassThrough;var Transform=__webpack_require__(25);var util=__webpack_require__(18);util.inherits=__webpack_require__(12);util.inherits(PassThrough,Transform);function PassThrough(options){if(!(this instanceof PassThrough))return new PassThrough(options);Transform.call(this,options)}PassThrough.prototype._transform=function(chunk,encoding,cb){cb(null,chunk)}},function(module22,exports2,__webpack_require__){module22.exports=__webpack_require__(22)},function(module22,exports2,__webpack_require__){module22.exports=__webpack_require__(21)},function(module22,exports2,__webpack_require__){module22.exports=__webpack_require__(25)},function(module22,exports2,__webpack_require__){module22.exports=__webpack_require__(26)},function(module22,exports2,__webpack_require__){"use strict";var zlib_inflate=__webpack_require__(32);var utils=__webpack_require__(33);var strings=__webpack_require__(38);var c2=__webpack_require__(39);var msg=__webpack_require__(40);var ZStream=__webpack_require__(41);var GZheader=__webpack_require__(42);var toString=Object.prototype.toString;function Inflate(options){if(!(this instanceof Inflate))return new Inflate(options);this.options=utils.assign({chunkSize:16384,windowBits:0,to:""},options||{});var opt=this.options;if(opt.raw&&opt.windowBits>=0&&opt.windowBits<16){opt.windowBits=-opt.windowBits;if(opt.windowBits===0){opt.windowBits=-15}}if(opt.windowBits>=0&&opt.windowBits<16&&!(options&&options.windowBits)){opt.windowBits+=32}if(opt.windowBits>15&&opt.windowBits<48){if((opt.windowBits&15)===0){opt.windowBits|=15}}this.err=0;this.msg="";this.ended=false;this.chunks=[];this.strm=new ZStream;this.strm.avail_out=0;var status=zlib_inflate.inflateInit2(this.strm,opt.windowBits);if(status!==c2.Z_OK){throw new Error(msg[status])}this.header=new GZheader;zlib_inflate.inflateGetHeader(this.strm,this.header)}Inflate.prototype.push=function(data,mode){var strm=this.strm;var chunkSize=this.options.chunkSize;var dictionary=this.options.dictionary;var status,_mode;var next_out_utf8,tail,utf8str;var dict;var allowBufError=false;if(this.ended){return false}_mode=mode===~~mode?mode:mode===true?c2.Z_FINISH:c2.Z_NO_FLUSH;if(typeof data==="string"){strm.input=strings.binstring2buf(data)}else if(toString.call(data)==="[object ArrayBuffer]"){strm.input=new Uint8Array(data)}else{strm.input=data}strm.next_in=0;strm.avail_in=strm.input.length;do{if(strm.avail_out===0){strm.output=new utils.Buf8(chunkSize);strm.next_out=0;strm.avail_out=chunkSize}status=zlib_inflate.inflate(strm,c2.Z_NO_FLUSH);if(status===c2.Z_NEED_DICT&&dictionary){if(typeof dictionary==="string"){dict=strings.string2buf(dictionary)}else if(toString.call(dictionary)==="[object ArrayBuffer]"){dict=new Uint8Array(dictionary)}else{dict=dictionary}status=zlib_inflate.inflateSetDictionary(this.strm,dict)}if(status===c2.Z_BUF_ERROR&&allowBufError===true){status=c2.Z_OK;allowBufError=false}if(status!==c2.Z_STREAM_END&&status!==c2.Z_OK){this.onEnd(status);this.ended=true;return false}if(strm.next_out){if(strm.avail_out===0||status===c2.Z_STREAM_END||strm.avail_in===0&&(_mode===c2.Z_FINISH||_mode===c2.Z_SYNC_FLUSH)){if(this.options.to==="string"){next_out_utf8=strings.utf8border(strm.output,strm.next_out);tail=strm.next_out-next_out_utf8;utf8str=strings.buf2string(strm.output,next_out_utf8);strm.next_out=tail;strm.avail_out=chunkSize-tail;if(tail){utils.arraySet(strm.output,strm.output,next_out_utf8,tail,0)}this.onData(utf8str)}else{this.onData(utils.shrinkBuf(strm.output,strm.next_out))}}}if(strm.avail_in===0&&strm.avail_out===0){allowBufError=true}}while((strm.avail_in>0||strm.avail_out===0)&&status!==c2.Z_STREAM_END);if(status===c2.Z_STREAM_END){_mode=c2.Z_FINISH}if(_mode===c2.Z_FINISH){status=zlib_inflate.inflateEnd(this.strm);this.onEnd(status);this.ended=true;return status===c2.Z_OK}if(_mode===c2.Z_SYNC_FLUSH){this.onEnd(c2.Z_OK);strm.avail_out=0;return true}return true};Inflate.prototype.onData=function(chunk){this.chunks.push(chunk)};Inflate.prototype.onEnd=function(status){if(status===c2.Z_OK){if(this.options.to==="string"){this.result=this.chunks.join("")}else{this.result=utils.flattenChunks(this.chunks)}}this.chunks=[];this.err=status;this.msg=this.strm.msg};function inflate(input,options){var inflator=new Inflate(options);inflator.push(input,true);if(inflator.err){throw inflator.msg||msg[inflator.err]}return inflator.result}function inflateRaw(input,options){options=options||{};options.raw=true;return inflate(input,options)}exports2.Inflate=Inflate;exports2.inflate=inflate;exports2.inflateRaw=inflateRaw;exports2.ungzip=inflate},function(module22,exports2,__webpack_require__){"use strict";var utils=__webpack_require__(33);var adler32=__webpack_require__(34);var crc32=__webpack_require__(35);var inflate_fast=__webpack_require__(36);var inflate_table=__webpack_require__(37);var CODES=0;var LENS=1;var DISTS=2;var Z_FINISH=4;var Z_BLOCK=5;var Z_TREES=6;var Z_OK=0;var Z_STREAM_END=1;var Z_NEED_DICT=2;var Z_STREAM_ERROR=-2;var Z_DATA_ERROR=-3;var Z_MEM_ERROR=-4;var Z_BUF_ERROR=-5;var Z_DEFLATED=8;var HEAD=1;var FLAGS=2;var TIME=3;var OS=4;var EXLEN=5;var EXTRA=6;var NAME=7;var COMMENT=8;var HCRC=9;var DICTID=10;var DICT=11;var TYPE=12;var TYPEDO=13;var STORED=14;var COPY_=15;var COPY=16;var TABLE=17;var LENLENS=18;var CODELENS=19;var LEN_=20;var LEN=21;var LENEXT=22;var DIST=23;var DISTEXT=24;var MATCH=25;var LIT=26;var CHECK=27;var LENGTH=28;var DONE=29;var BAD=30;var MEM=31;var SYNC=32;var ENOUGH_LENS=852;var ENOUGH_DISTS=592;var MAX_WBITS=15;var DEF_WBITS=MAX_WBITS;function zswap32(q2){return(q2>>>24&255)+(q2>>>8&65280)+((q2&65280)<<8)+((q2&255)<<24)}function InflateState(){this.mode=0;this.last=false;this.wrap=0;this.havedict=false;this.flags=0;this.dmax=0;this.check=0;this.total=0;this.head=null;this.wbits=0;this.wsize=0;this.whave=0;this.wnext=0;this.window=null;this.hold=0;this.bits=0;this.length=0;this.offset=0;this.extra=0;this.lencode=null;this.distcode=null;this.lenbits=0;this.distbits=0;this.ncode=0;this.nlen=0;this.ndist=0;this.have=0;this.next=null;this.lens=new utils.Buf16(320);this.work=new utils.Buf16(288);this.lendyn=null;this.distdyn=null;this.sane=0;this.back=0;this.was=0}function inflateResetKeep(strm){var state4;if(!strm||!strm.state){return Z_STREAM_ERROR}state4=strm.state;strm.total_in=strm.total_out=state4.total=0;strm.msg="";if(state4.wrap){strm.adler=state4.wrap&1}state4.mode=HEAD;state4.last=0;state4.havedict=0;state4.dmax=32768;state4.head=null;state4.hold=0;state4.bits=0;state4.lencode=state4.lendyn=new utils.Buf32(ENOUGH_LENS);state4.distcode=state4.distdyn=new utils.Buf32(ENOUGH_DISTS);state4.sane=1;state4.back=-1;return Z_OK}function inflateReset(strm){var state4;if(!strm||!strm.state){return Z_STREAM_ERROR}state4=strm.state;state4.wsize=0;state4.whave=0;state4.wnext=0;return inflateResetKeep(strm)}function inflateReset2(strm,windowBits){var wrap;var state4;if(!strm||!strm.state){return Z_STREAM_ERROR}state4=strm.state;if(windowBits<0){wrap=0;windowBits=-windowBits}else{wrap=(windowBits>>4)+1;if(windowBits<48){windowBits&=15}}if(windowBits&&(windowBits<8||windowBits>15)){return Z_STREAM_ERROR}if(state4.window!==null&&state4.wbits!==windowBits){state4.window=null}state4.wrap=wrap;state4.wbits=windowBits;return inflateReset(strm)}function inflateInit2(strm,windowBits){var ret;var state4;if(!strm){return Z_STREAM_ERROR}state4=new InflateState;strm.state=state4;state4.window=null;ret=inflateReset2(strm,windowBits);if(ret!==Z_OK){strm.state=null}return ret}function inflateInit(strm){return inflateInit2(strm,DEF_WBITS)}var virgin=true;var lenfix,distfix;function fixedtables(state4){if(virgin){var sym;lenfix=new utils.Buf32(512);distfix=new utils.Buf32(32);sym=0;while(sym<144){state4.lens[sym++]=8}while(sym<256){state4.lens[sym++]=9}while(sym<280){state4.lens[sym++]=7}while(sym<288){state4.lens[sym++]=8}inflate_table(LENS,state4.lens,0,288,lenfix,0,state4.work,{bits:9});sym=0;while(sym<32){state4.lens[sym++]=5}inflate_table(DISTS,state4.lens,0,32,distfix,0,state4.work,{bits:5});virgin=false}state4.lencode=lenfix;state4.lenbits=9;state4.distcode=distfix;state4.distbits=5}function updatewindow(strm,src,end,copy){var dist;var state4=strm.state;if(state4.window===null){state4.wsize=1<<state4.wbits;state4.wnext=0;state4.whave=0;state4.window=new utils.Buf8(state4.wsize)}if(copy>=state4.wsize){utils.arraySet(state4.window,src,end-state4.wsize,state4.wsize,0);state4.wnext=0;state4.whave=state4.wsize}else{dist=state4.wsize-state4.wnext;if(dist>copy){dist=copy}utils.arraySet(state4.window,src,end-copy,dist,state4.wnext);copy-=dist;if(copy){utils.arraySet(state4.window,src,end-copy,copy,0);state4.wnext=copy;state4.whave=state4.wsize}else{state4.wnext+=dist;if(state4.wnext===state4.wsize){state4.wnext=0}if(state4.whave<state4.wsize){state4.whave+=dist}}}return 0}function inflate(strm,flush){var state4;var input,output;var next;var put;var have,left;var hold;var bits;var _in,_out;var copy;var from;var from_source;var here=0;var here_bits,here_op,here_val;var last_bits,last_op,last_val;var len;var ret;var hbuf=new utils.Buf8(4);var opts;var n;var order=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!strm||!strm.state||!strm.output||!strm.input&&strm.avail_in!==0){return Z_STREAM_ERROR}state4=strm.state;if(state4.mode===TYPE){state4.mode=TYPEDO}put=strm.next_out;output=strm.output;left=strm.avail_out;next=strm.next_in;input=strm.input;have=strm.avail_in;hold=state4.hold;bits=state4.bits;_in=have;_out=left;ret=Z_OK;inf_leave:for(;;){switch(state4.mode){case HEAD:if(state4.wrap===0){state4.mode=TYPEDO;break}while(bits<16){if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}if(state4.wrap&2&&hold===35615){state4.check=0;hbuf[0]=hold&255;hbuf[1]=hold>>>8&255;state4.check=crc32(state4.check,hbuf,2,0);hold=0;bits=0;state4.mode=FLAGS;break}state4.flags=0;if(state4.head){state4.head.done=false}if(!(state4.wrap&1)||(((hold&255)<<8)+(hold>>8))%31){strm.msg="incorrect header check";state4.mode=BAD;break}if((hold&15)!==Z_DEFLATED){strm.msg="unknown compression method";state4.mode=BAD;break}hold>>>=4;bits-=4;len=(hold&15)+8;if(state4.wbits===0){state4.wbits=len}else if(len>state4.wbits){strm.msg="invalid window size";state4.mode=BAD;break}state4.dmax=1<<len;strm.adler=state4.check=1;state4.mode=hold&512?DICTID:TYPE;hold=0;bits=0;break;case FLAGS:while(bits<16){if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}state4.flags=hold;if((state4.flags&255)!==Z_DEFLATED){strm.msg="unknown compression method";state4.mode=BAD;break}if(state4.flags&57344){strm.msg="unknown header flags set";state4.mode=BAD;break}if(state4.head){state4.head.text=hold>>8&1}if(state4.flags&512){hbuf[0]=hold&255;hbuf[1]=hold>>>8&255;state4.check=crc32(state4.check,hbuf,2,0)}hold=0;bits=0;state4.mode=TIME;case TIME:while(bits<32){if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}if(state4.head){state4.head.time=hold}if(state4.flags&512){hbuf[0]=hold&255;hbuf[1]=hold>>>8&255;hbuf[2]=hold>>>16&255;hbuf[3]=hold>>>24&255;state4.check=crc32(state4.check,hbuf,4,0)}hold=0;bits=0;state4.mode=OS;case OS:while(bits<16){if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}if(state4.head){state4.head.xflags=hold&255;state4.head.os=hold>>8}if(state4.flags&512){hbuf[0]=hold&255;hbuf[1]=hold>>>8&255;state4.check=crc32(state4.check,hbuf,2,0)}hold=0;bits=0;state4.mode=EXLEN;case EXLEN:if(state4.flags&1024){while(bits<16){if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}state4.length=hold;if(state4.head){state4.head.extra_len=hold}if(state4.flags&512){hbuf[0]=hold&255;hbuf[1]=hold>>>8&255;state4.check=crc32(state4.check,hbuf,2,0)}hold=0;bits=0}else if(state4.head){state4.head.extra=null}state4.mode=EXTRA;case EXTRA:if(state4.flags&1024){copy=state4.length;if(copy>have){copy=have}if(copy){if(state4.head){len=state4.head.extra_len-state4.length;if(!state4.head.extra){state4.head.extra=new Array(state4.head.extra_len)}utils.arraySet(state4.head.extra,input,next,copy,len)}if(state4.flags&512){state4.check=crc32(state4.check,input,copy,next)}have-=copy;next+=copy;state4.length-=copy}if(state4.length){break inf_leave}}state4.length=0;state4.mode=NAME;case NAME:if(state4.flags&2048){if(have===0){break inf_leave}copy=0;do{len=input[next+copy++];if(state4.head&&len&&state4.length<65536){state4.head.name+=String.fromCharCode(len)}}while(len&&copy<have);if(state4.flags&512){state4.check=crc32(state4.check,input,copy,next)}have-=copy;next+=copy;if(len){break inf_leave}}else if(state4.head){state4.head.name=null}state4.length=0;state4.mode=COMMENT;case COMMENT:if(state4.flags&4096){if(have===0){break inf_leave}copy=0;do{len=input[next+copy++];if(state4.head&&len&&state4.length<65536){state4.head.comment+=String.fromCharCode(len)}}while(len&&copy<have);if(state4.flags&512){state4.check=crc32(state4.check,input,copy,next)}have-=copy;next+=copy;if(len){break inf_leave}}else if(state4.head){state4.head.comment=null}state4.mode=HCRC;case HCRC:if(state4.flags&512){while(bits<16){if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}if(hold!==(state4.check&65535)){strm.msg="header crc mismatch";state4.mode=BAD;break}hold=0;bits=0}if(state4.head){state4.head.hcrc=state4.flags>>9&1;state4.head.done=true}strm.adler=state4.check=0;state4.mode=TYPE;break;case DICTID:while(bits<32){if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}strm.adler=state4.check=zswap32(hold);hold=0;bits=0;state4.mode=DICT;case DICT:if(state4.havedict===0){strm.next_out=put;strm.avail_out=left;strm.next_in=next;strm.avail_in=have;state4.hold=hold;state4.bits=bits;return Z_NEED_DICT}strm.adler=state4.check=1;state4.mode=TYPE;case TYPE:if(flush===Z_BLOCK||flush===Z_TREES){break inf_leave}case TYPEDO:if(state4.last){hold>>>=bits&7;bits-=bits&7;state4.mode=CHECK;break}while(bits<3){if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}state4.last=hold&1;hold>>>=1;bits-=1;switch(hold&3){case 0:state4.mode=STORED;break;case 1:fixedtables(state4);state4.mode=LEN_;if(flush===Z_TREES){hold>>>=2;bits-=2;break inf_leave}break;case 2:state4.mode=TABLE;break;case 3:strm.msg="invalid block type";state4.mode=BAD}hold>>>=2;bits-=2;break;case STORED:hold>>>=bits&7;bits-=bits&7;while(bits<32){if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}if((hold&65535)!==(hold>>>16^65535)){strm.msg="invalid stored block lengths";state4.mode=BAD;break}state4.length=hold&65535;hold=0;bits=0;state4.mode=COPY_;if(flush===Z_TREES){break inf_leave}case COPY_:state4.mode=COPY;case COPY:copy=state4.length;if(copy){if(copy>have){copy=have}if(copy>left){copy=left}if(copy===0){break inf_leave}utils.arraySet(output,input,next,copy,put);have-=copy;next+=copy;left-=copy;put+=copy;state4.length-=copy;break}state4.mode=TYPE;break;case TABLE:while(bits<14){if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}state4.nlen=(hold&31)+257;hold>>>=5;bits-=5;state4.ndist=(hold&31)+1;hold>>>=5;bits-=5;state4.ncode=(hold&15)+4;hold>>>=4;bits-=4;if(state4.nlen>286||state4.ndist>30){strm.msg="too many length or distance symbols";state4.mode=BAD;break}state4.have=0;state4.mode=LENLENS;case LENLENS:while(state4.have<state4.ncode){while(bits<3){if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}state4.lens[order[state4.have++]]=hold&7;hold>>>=3;bits-=3}while(state4.have<19){state4.lens[order[state4.have++]]=0}state4.lencode=state4.lendyn;state4.lenbits=7;opts={bits:state4.lenbits};ret=inflate_table(CODES,state4.lens,0,19,state4.lencode,0,state4.work,opts);state4.lenbits=opts.bits;if(ret){strm.msg="invalid code lengths set";state4.mode=BAD;break}state4.have=0;state4.mode=CODELENS;case CODELENS:while(state4.have<state4.nlen+state4.ndist){for(;;){here=state4.lencode[hold&(1<<state4.lenbits)-1];here_bits=here>>>24;here_op=here>>>16&255;here_val=here&65535;if(here_bits<=bits){break}if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}if(here_val<16){hold>>>=here_bits;bits-=here_bits;state4.lens[state4.have++]=here_val}else{if(here_val===16){n=here_bits+2;while(bits<n){if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}hold>>>=here_bits;bits-=here_bits;if(state4.have===0){strm.msg="invalid bit length repeat";state4.mode=BAD;break}len=state4.lens[state4.have-1];copy=3+(hold&3);hold>>>=2;bits-=2}else if(here_val===17){n=here_bits+3;while(bits<n){if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}hold>>>=here_bits;bits-=here_bits;len=0;copy=3+(hold&7);hold>>>=3;bits-=3}else{n=here_bits+7;while(bits<n){if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}hold>>>=here_bits;bits-=here_bits;len=0;copy=11+(hold&127);hold>>>=7;bits-=7}if(state4.have+copy>state4.nlen+state4.ndist){strm.msg="invalid bit length repeat";state4.mode=BAD;break}while(copy--){state4.lens[state4.have++]=len}}}if(state4.mode===BAD){break}if(state4.lens[256]===0){strm.msg="invalid code -- missing end-of-block";state4.mode=BAD;break}state4.lenbits=9;opts={bits:state4.lenbits};ret=inflate_table(LENS,state4.lens,0,state4.nlen,state4.lencode,0,state4.work,opts);state4.lenbits=opts.bits;if(ret){strm.msg="invalid literal/lengths set";state4.mode=BAD;break}state4.distbits=6;state4.distcode=state4.distdyn;opts={bits:state4.distbits};ret=inflate_table(DISTS,state4.lens,state4.nlen,state4.ndist,state4.distcode,0,state4.work,opts);state4.distbits=opts.bits;if(ret){strm.msg="invalid distances set";state4.mode=BAD;break}state4.mode=LEN_;if(flush===Z_TREES){break inf_leave}case LEN_:state4.mode=LEN;case LEN:if(have>=6&&left>=258){strm.next_out=put;strm.avail_out=left;strm.next_in=next;strm.avail_in=have;state4.hold=hold;state4.bits=bits;inflate_fast(strm,_out);put=strm.next_out;output=strm.output;left=strm.avail_out;next=strm.next_in;input=strm.input;have=strm.avail_in;hold=state4.hold;bits=state4.bits;if(state4.mode===TYPE){state4.back=-1}break}state4.back=0;for(;;){here=state4.lencode[hold&(1<<state4.lenbits)-1];here_bits=here>>>24;here_op=here>>>16&255;here_val=here&65535;if(here_bits<=bits){break}if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}if(here_op&&(here_op&240)===0){last_bits=here_bits;last_op=here_op;last_val=here_val;for(;;){here=state4.lencode[last_val+((hold&(1<<last_bits+last_op)-1)>>last_bits)];here_bits=here>>>24;here_op=here>>>16&255;here_val=here&65535;if(last_bits+here_bits<=bits){break}if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}hold>>>=last_bits;bits-=last_bits;state4.back+=last_bits}hold>>>=here_bits;bits-=here_bits;state4.back+=here_bits;state4.length=here_val;if(here_op===0){state4.mode=LIT;break}if(here_op&32){state4.back=-1;state4.mode=TYPE;break}if(here_op&64){strm.msg="invalid literal/length code";state4.mode=BAD;break}state4.extra=here_op&15;state4.mode=LENEXT;case LENEXT:if(state4.extra){n=state4.extra;while(bits<n){if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}state4.length+=hold&(1<<state4.extra)-1;hold>>>=state4.extra;bits-=state4.extra;state4.back+=state4.extra}state4.was=state4.length;state4.mode=DIST;case DIST:for(;;){here=state4.distcode[hold&(1<<state4.distbits)-1];here_bits=here>>>24;here_op=here>>>16&255;here_val=here&65535;if(here_bits<=bits){break}if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}if((here_op&240)===0){last_bits=here_bits;last_op=here_op;last_val=here_val;for(;;){here=state4.distcode[last_val+((hold&(1<<last_bits+last_op)-1)>>last_bits)];here_bits=here>>>24;here_op=here>>>16&255;here_val=here&65535;if(last_bits+here_bits<=bits){break}if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}hold>>>=last_bits;bits-=last_bits;state4.back+=last_bits}hold>>>=here_bits;bits-=here_bits;state4.back+=here_bits;if(here_op&64){strm.msg="invalid distance code";state4.mode=BAD;break}state4.offset=here_val;state4.extra=here_op&15;state4.mode=DISTEXT;case DISTEXT:if(state4.extra){n=state4.extra;while(bits<n){if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}state4.offset+=hold&(1<<state4.extra)-1;hold>>>=state4.extra;bits-=state4.extra;state4.back+=state4.extra}if(state4.offset>state4.dmax){strm.msg="invalid distance too far back";state4.mode=BAD;break}state4.mode=MATCH;case MATCH:if(left===0){break inf_leave}copy=_out-left;if(state4.offset>copy){copy=state4.offset-copy;if(copy>state4.whave){if(state4.sane){strm.msg="invalid distance too far back";state4.mode=BAD;break}}if(copy>state4.wnext){copy-=state4.wnext;from=state4.wsize-copy}else{from=state4.wnext-copy}if(copy>state4.length){copy=state4.length}from_source=state4.window}else{from_source=output;from=put-state4.offset;copy=state4.length}if(copy>left){copy=left}left-=copy;state4.length-=copy;do{output[put++]=from_source[from++]}while(--copy);if(state4.length===0){state4.mode=LEN}break;case LIT:if(left===0){break inf_leave}output[put++]=state4.length;left--;state4.mode=LEN;break;case CHECK:if(state4.wrap){while(bits<32){if(have===0){break inf_leave}have--;hold|=input[next++]<<bits;bits+=8}_out-=left;strm.total_out+=_out;state4.total+=_out;if(_out){strm.adler=state4.check=state4.flags?crc32(state4.check,output,_out,put-_out):adler32(state4.check,output,_out,put-_out)}_out=left;if((state4.flags?hold:zswap32(hold))!==state4.check){strm.msg="incorrect data check";state4.mode=BAD;break}hold=0;bits=0}state4.mode=LENGTH;case LENGTH:if(state4.wrap&&state4.flags){while(bits<32){if(have===0){break inf_leave}have--;hold+=input[next++]<<bits;bits+=8}if(hold!==(state4.total&4294967295)){strm.msg="incorrect length check";state4.mode=BAD;break}hold=0;bits=0}state4.mode=DONE;case DONE:ret=Z_STREAM_END;break inf_leave;case BAD:ret=Z_DATA_ERROR;break inf_leave;case MEM:return Z_MEM_ERROR;case SYNC:default:return Z_STREAM_ERROR}}strm.next_out=put;strm.avail_out=left;strm.next_in=next;strm.avail_in=have;state4.hold=hold;state4.bits=bits;if(state4.wsize||_out!==strm.avail_out&&state4.mode<BAD&&(state4.mode<CHECK||flush!==Z_FINISH)){if(updatewindow(strm,strm.output,strm.next_out,_out-strm.avail_out)){state4.mode=MEM;return Z_MEM_ERROR}}_in-=strm.avail_in;_out-=strm.avail_out;strm.total_in+=_in;strm.total_out+=_out;state4.total+=_out;if(state4.wrap&&_out){strm.adler=state4.check=state4.flags?crc32(state4.check,output,_out,strm.next_out-_out):adler32(state4.check,output,_out,strm.next_out-_out)}strm.data_type=state4.bits+(state4.last?64:0)+(state4.mode===TYPE?128:0)+(state4.mode===LEN_||state4.mode===COPY_?256:0);if((_in===0&&_out===0||flush===Z_FINISH)&&ret===Z_OK){ret=Z_BUF_ERROR}return ret}function inflateEnd(strm){if(!strm||!strm.state){return Z_STREAM_ERROR}var state4=strm.state;if(state4.window){state4.window=null}strm.state=null;return Z_OK}function inflateGetHeader(strm,head){var state4;if(!strm||!strm.state){return Z_STREAM_ERROR}state4=strm.state;if((state4.wrap&2)===0){return Z_STREAM_ERROR}state4.head=head;head.done=false;return Z_OK}function inflateSetDictionary(strm,dictionary){var dictLength=dictionary.length;var state4;var dictid;var ret;if(!strm||!strm.state){return Z_STREAM_ERROR}state4=strm.state;if(state4.wrap!==0&&state4.mode!==DICT){return Z_STREAM_ERROR}if(state4.mode===DICT){dictid=1;dictid=adler32(dictid,dictionary,dictLength,0);if(dictid!==state4.check){return Z_DATA_ERROR}}ret=updatewindow(strm,dictionary,dictLength,dictLength);if(ret){state4.mode=MEM;return Z_MEM_ERROR}state4.havedict=1;return Z_OK}exports2.inflateReset=inflateReset;exports2.inflateReset2=inflateReset2;exports2.inflateResetKeep=inflateResetKeep;exports2.inflateInit=inflateInit;exports2.inflateInit2=inflateInit2;exports2.inflate=inflate;exports2.inflateEnd=inflateEnd;exports2.inflateGetHeader=inflateGetHeader;exports2.inflateSetDictionary=inflateSetDictionary;exports2.inflateInfo="pako inflate (from Nodeca project)"},function(module22,exports2){"use strict";var TYPED_OK=typeof Uint8Array!=="undefined"&&typeof Uint16Array!=="undefined"&&typeof Int32Array!=="undefined";exports2.assign=function(obj){var sources=Array.prototype.slice.call(arguments,1);while(sources.length){var source=sources.shift();if(!source){continue}if(typeof source!=="object"){throw new TypeError(source+"must be non-object")}for(var p in source){if(source.hasOwnProperty(p)){obj[p]=source[p]}}}return obj};exports2.shrinkBuf=function(buf,size){if(buf.length===size){return buf}if(buf.subarray){return buf.subarray(0,size)}buf.length=size;return buf};var fnTyped={arraySet:function(dest,src,src_offs,len,dest_offs){if(src.subarray&&dest.subarray){dest.set(src.subarray(src_offs,src_offs+len),dest_offs);return}for(var i=0;i<len;i++){dest[dest_offs+i]=src[src_offs+i]}},flattenChunks:function(chunks){var i,l,len,pos,chunk,result;len=0;for(i=0,l=chunks.length;i<l;i++){len+=chunks[i].length}result=new Uint8Array(len);pos=0;for(i=0,l=chunks.length;i<l;i++){chunk=chunks[i];result.set(chunk,pos);pos+=chunk.length}return result}};var fnUntyped={arraySet:function(dest,src,src_offs,len,dest_offs){for(var i=0;i<len;i++){dest[dest_offs+i]=src[src_offs+i]}},flattenChunks:function(chunks){return[].concat.apply([],chunks)}};exports2.setTyped=function(on2){if(on2){exports2.Buf8=Uint8Array;exports2.Buf16=Uint16Array;exports2.Buf32=Int32Array;exports2.assign(exports2,fnTyped)}else{exports2.Buf8=Array;exports2.Buf16=Array;exports2.Buf32=Array;exports2.assign(exports2,fnUntyped)}};exports2.setTyped(TYPED_OK)},function(module22,exports2){"use strict";function adler32(adler,buf,len,pos){var s1=adler&65535|0,s2=adler>>>16&65535|0,n=0;while(len!==0){n=len>2e3?2e3:len;len-=n;do{s1=s1+buf[pos++]|0;s2=s2+s1|0}while(--n);s1%=65521;s2%=65521}return s1|s2<<16|0}module22.exports=adler32},function(module22,exports2){"use strict";function makeTable(){var c2,table=[];for(var n=0;n<256;n++){c2=n;for(var k2=0;k2<8;k2++){c2=c2&1?3988292384^c2>>>1:c2>>>1}table[n]=c2}return table}var crcTable=makeTable();function crc32(crc,buf,len,pos){var t2=crcTable,end=pos+len;crc^=-1;for(var i=pos;i<end;i++){crc=crc>>>8^t2[(crc^buf[i])&255]}return crc^-1}module22.exports=crc32},function(module22,exports2){"use strict";var BAD=30;var TYPE=12;module22.exports=function inflate_fast(strm,start){var state4;var _in;var last;var _out;var beg;var end;var dmax;var wsize;var whave;var wnext;var s_window;var hold;var bits;var lcode;var dcode;var lmask;var dmask;var here;var op;var len;var dist;var from;var from_source;var input,output;state4=strm.state;_in=strm.next_in;input=strm.input;last=_in+(strm.avail_in-5);_out=strm.next_out;output=strm.output;beg=_out-(start-strm.avail_out);end=_out+(strm.avail_out-257);dmax=state4.dmax;wsize=state4.wsize;whave=state4.whave;wnext=state4.wnext;s_window=state4.window;hold=state4.hold;bits=state4.bits;lcode=state4.lencode;dcode=state4.distcode;lmask=(1<<state4.lenbits)-1;dmask=(1<<state4.distbits)-1;top:do{if(bits<15){hold+=input[_in++]<<bits;bits+=8;hold+=input[_in++]<<bits;bits+=8}here=lcode[hold&lmask];dolen:for(;;){op=here>>>24;hold>>>=op;bits-=op;op=here>>>16&255;if(op===0){output[_out++]=here&65535}else if(op&16){len=here&65535;op&=15;if(op){if(bits<op){hold+=input[_in++]<<bits;bits+=8}len+=hold&(1<<op)-1;hold>>>=op;bits-=op}if(bits<15){hold+=input[_in++]<<bits;bits+=8;hold+=input[_in++]<<bits;bits+=8}here=dcode[hold&dmask];dodist:for(;;){op=here>>>24;hold>>>=op;bits-=op;op=here>>>16&255;if(op&16){dist=here&65535;op&=15;if(bits<op){hold+=input[_in++]<<bits;bits+=8;if(bits<op){hold+=input[_in++]<<bits;bits+=8}}dist+=hold&(1<<op)-1;if(dist>dmax){strm.msg="invalid distance too far back";state4.mode=BAD;break top}hold>>>=op;bits-=op;op=_out-beg;if(dist>op){op=dist-op;if(op>whave){if(state4.sane){strm.msg="invalid distance too far back";state4.mode=BAD;break top}}from=0;from_source=s_window;if(wnext===0){from+=wsize-op;if(op<len){len-=op;do{output[_out++]=s_window[from++]}while(--op);from=_out-dist;from_source=output}}else if(wnext<op){from+=wsize+wnext-op;op-=wnext;if(op<len){len-=op;do{output[_out++]=s_window[from++]}while(--op);from=0;if(wnext<len){op=wnext;len-=op;do{output[_out++]=s_window[from++]}while(--op);from=_out-dist;from_source=output}}}else{from+=wnext-op;if(op<len){len-=op;do{output[_out++]=s_window[from++]}while(--op);from=_out-dist;from_source=output}}while(len>2){output[_out++]=from_source[from++];output[_out++]=from_source[from++];output[_out++]=from_source[from++];len-=3}if(len){output[_out++]=from_source[from++];if(len>1){output[_out++]=from_source[from++]}}}else{from=_out-dist;do{output[_out++]=output[from++];output[_out++]=output[from++];output[_out++]=output[from++];len-=3}while(len>2);if(len){output[_out++]=output[from++];if(len>1){output[_out++]=output[from++]}}}}else if((op&64)===0){here=dcode[(here&65535)+(hold&(1<<op)-1)];continue dodist}else{strm.msg="invalid distance code";state4.mode=BAD;break top}break}}else if((op&64)===0){here=lcode[(here&65535)+(hold&(1<<op)-1)];continue dolen}else if(op&32){state4.mode=TYPE;break top}else{strm.msg="invalid literal/length code";state4.mode=BAD;break top}break}}while(_in<last&&_out<end);len=bits>>3;_in-=len;bits-=len<<3;hold&=(1<<bits)-1;strm.next_in=_in;strm.next_out=_out;strm.avail_in=_in<last?5+(last-_in):5-(_in-last);strm.avail_out=_out<end?257+(end-_out):257-(_out-end);state4.hold=hold;state4.bits=bits;return}},function(module22,exports2,__webpack_require__){"use strict";var utils=__webpack_require__(33);var MAXBITS=15;var ENOUGH_LENS=852;var ENOUGH_DISTS=592;var CODES=0;var LENS=1;var DISTS=2;var lbase=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0];var lext=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78];var dbase=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0];var dext=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];module22.exports=function inflate_table(type,lens,lens_index,codes,table,table_index,work,opts){var bits=opts.bits;var len=0;var sym=0;var min=0,max=0;var root=0;var curr=0;var drop=0;var left=0;var used=0;var huff=0;var incr;var fill;var low;var mask;var next;var base=null;var base_index=0;var end;var count=new utils.Buf16(MAXBITS+1);var offs=new utils.Buf16(MAXBITS+1);var extra=null;var extra_index=0;var here_bits,here_op,here_val;for(len=0;len<=MAXBITS;len++){count[len]=0}for(sym=0;sym<codes;sym++){count[lens[lens_index+sym]]++}root=bits;for(max=MAXBITS;max>=1;max--){if(count[max]!==0){break}}if(root>max){root=max}if(max===0){table[table_index++]=1<<24|64<<16|0;table[table_index++]=1<<24|64<<16|0;opts.bits=1;return 0}for(min=1;min<max;min++){if(count[min]!==0){break}}if(root<min){root=min}left=1;for(len=1;len<=MAXBITS;len++){left<<=1;left-=count[len];if(left<0){return-1}}if(left>0&&(type===CODES||max!==1)){return-1}offs[1]=0;for(len=1;len<MAXBITS;len++){offs[len+1]=offs[len]+count[len]}for(sym=0;sym<codes;sym++){if(lens[lens_index+sym]!==0){work[offs[lens[lens_index+sym]]++]=sym}}if(type===CODES){base=extra=work;end=19}else if(type===LENS){base=lbase;base_index-=257;extra=lext;extra_index-=257;end=256}else{base=dbase;extra=dext;end=-1}huff=0;sym=0;len=min;next=table_index;curr=root;drop=0;low=-1;used=1<<root;mask=used-1;if(type===LENS&&used>ENOUGH_LENS||type===DISTS&&used>ENOUGH_DISTS){return 1}for(;;){here_bits=len-drop;if(work[sym]<end){here_op=0;here_val=work[sym]}else if(work[sym]>end){here_op=extra[extra_index+work[sym]];here_val=base[base_index+work[sym]]}else{here_op=32+64;here_val=0}incr=1<<len-drop;fill=1<<curr;min=fill;do{fill-=incr;table[next+(huff>>drop)+fill]=here_bits<<24|here_op<<16|here_val|0}while(fill!==0);incr=1<<len-1;while(huff&incr){incr>>=1}if(incr!==0){huff&=incr-1;huff+=incr}else{huff=0}sym++;if(--count[len]===0){if(len===max){break}len=lens[lens_index+work[sym]]}if(len>root&&(huff&mask)!==low){if(drop===0){drop=root}next+=min;curr=len-drop;left=1<<curr;while(curr+drop<max){left-=count[curr+drop];if(left<=0){break}curr++;left<<=1}used+=1<<curr;if(type===LENS&&used>ENOUGH_LENS||type===DISTS&&used>ENOUGH_DISTS){return 1}low=huff&mask;table[low]=root<<24|curr<<16|next-table_index|0}}if(huff!==0){table[next+huff]=len-drop<<24|64<<16|0}opts.bits=root;return 0}},function(module22,exports2,__webpack_require__){"use strict";var utils=__webpack_require__(33);var STR_APPLY_OK=true;var STR_APPLY_UIA_OK=true;try{String.fromCharCode.apply(null,[0])}catch(__){STR_APPLY_OK=false}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(__){STR_APPLY_UIA_OK=false}var _utf8len=new utils.Buf8(256);for(var q2=0;q2<256;q2++){_utf8len[q2]=q2>=252?6:q2>=248?5:q2>=240?4:q2>=224?3:q2>=192?2:1}_utf8len[254]=_utf8len[254]=1;exports2.string2buf=function(str3){var buf,c2,c22,m_pos,i,str_len=str3.length,buf_len=0;for(m_pos=0;m_pos<str_len;m_pos++){c2=str3.charCodeAt(m_pos);if((c2&64512)===55296&&m_pos+1<str_len){c22=str3.charCodeAt(m_pos+1);if((c22&64512)===56320){c2=65536+(c2-55296<<10)+(c22-56320);m_pos++}}buf_len+=c2<128?1:c2<2048?2:c2<65536?3:4}buf=new utils.Buf8(buf_len);for(i=0,m_pos=0;i<buf_len;m_pos++){c2=str3.charCodeAt(m_pos);if((c2&64512)===55296&&m_pos+1<str_len){c22=str3.charCodeAt(m_pos+1);if((c22&64512)===56320){c2=65536+(c2-55296<<10)+(c22-56320);m_pos++}}if(c2<128){buf[i++]=c2}else if(c2<2048){buf[i++]=192|c2>>>6;buf[i++]=128|c2&63}else if(c2<65536){buf[i++]=224|c2>>>12;buf[i++]=128|c2>>>6&63;buf[i++]=128|c2&63}else{buf[i++]=240|c2>>>18;buf[i++]=128|c2>>>12&63;buf[i++]=128|c2>>>6&63;buf[i++]=128|c2&63}}return buf};function buf2binstring(buf,len){if(len<65537){if(buf.subarray&&STR_APPLY_UIA_OK||!buf.subarray&&STR_APPLY_OK){return String.fromCharCode.apply(null,utils.shrinkBuf(buf,len))}}var result="";for(var i=0;i<len;i++){result+=String.fromCharCode(buf[i])}return result}exports2.buf2binstring=function(buf){return buf2binstring(buf,buf.length)};exports2.binstring2buf=function(str3){var buf=new utils.Buf8(str3.length);for(var i=0,len=buf.length;i<len;i++){buf[i]=str3.charCodeAt(i)}return buf};exports2.buf2string=function(buf,max){var i,out,c2,c_len;var len=max||buf.length;var utf16buf=new Array(len*2);for(out=0,i=0;i<len;){c2=buf[i++];if(c2<128){utf16buf[out++]=c2;continue}c_len=_utf8len[c2];if(c_len>4){utf16buf[out++]=65533;i+=c_len-1;continue}c2&=c_len===2?31:c_len===3?15:7;while(c_len>1&&i<len){c2=c2<<6|buf[i++]&63;c_len--}if(c_len>1){utf16buf[out++]=65533;continue}if(c2<65536){utf16buf[out++]=c2}else{c2-=65536;utf16buf[out++]=55296|c2>>10&1023;utf16buf[out++]=56320|c2&1023}}return buf2binstring(utf16buf,out)};exports2.utf8border=function(buf,max){var pos;max=max||buf.length;if(max>buf.length){max=buf.length}pos=max-1;while(pos>=0&&(buf[pos]&192)===128){pos--}if(pos<0){return max}if(pos===0){return max}return pos+_utf8len[buf[pos]]>max?pos:max}},function(module22,exports2){"use strict";module22.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},function(module22,exports2){"use strict";module22.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},function(module22,exports2){"use strict";function ZStream(){this.input=null;this.next_in=0;this.avail_in=0;this.total_in=0;this.output=null;this.next_out=0;this.avail_out=0;this.total_out=0;this.msg="";this.state=null;this.data_type=2;this.adler=0}module22.exports=ZStream},function(module22,exports2){"use strict";function GZheader(){this.text=0;this.time=0;this.xflags=0;this.os=0;this.extra=null;this.extra_len=0;this.name="";this.comment="";this.hcrc=0;this.done=false}module22.exports=GZheader}])})}});var CSV=class{constructor(onOpen=this.onOpen,saveButtonId=null,openButtonId=null){this.onOpen=onOpen;this.notes=[{idx:0,text:"comment"}];if(saveButtonId!==null){document.getElementById(saveButtonId).addEventListener("click",this.saveCSV)}if(openButtonId!==null){document.getElementById(openButtonId).addEventListener("click",this.openCSV)}}processArraysForCSV(data=["1|2|3","3|2|1"],delimiter="|",header="a,b,c",saveNotes=false){let csvDat=header+"\\n";let noteIdx=0;data.forEach((line,i)=>{if(data[i]==="string"&&delimiter!==","){csvDat+=line.split(delimiter).join(",")}else{csvData+=line.join(",")}if(saveNotes===true){if(this.notes[noteIdx].idx===i){line+=this.notes[noteIdx].text;noteIdx++}}if(line.indexOf("\\n")<0){csvDat+="\\n"}});return csvDat}static saveCSV(csvDat="a,b,c\\n1,2,3\\n3,2,1\\n",name2=new Date().toISOString()){var hiddenElement=document.createElement("a");hiddenElement.href="data:text/csv;charset=utf-8,"+encodeURI(csvDat);hiddenElement.target="_blank";if(name2!==""){hiddenElement.download=name2}else{hiddenElement.download=Date().toISOString()}hiddenElement.click()}static openCSV(delimiter=",",onOpen=(csvDat,header,path)=>{return csvDat,header,path}){var input=document.createElement("input");input.accept=".csv";input.type="file";input.onchange=e=>{var file=e.target.files[0];var reader=new FileReader;reader.onload=event=>{var tempcsvData=event.target.result;var tempcsvArr=tempcsvData.split("\\n");let header=[];var csvDat=[];tempcsvArr.pop();tempcsvArr.forEach((row,i)=>{if(i==0){header=row.split(delimiter)}else{var temp=row.split(delimiter);csvDat.push(temp)}});onOpen(csvDat,header,input.value);input.value=""};reader.readAsText(file)};input.click()}static openCSVRaw(onOpen=(csvDat,path)=>{return csvDat,path}){var input=document.createElement("input");input.accept=".csv";input.type="file";input.onchange=e=>{var file=e.target.files[0];var reader=new FileReader;reader.onload=event=>{var tempcsvData=event.target.result;onOpen(tempcsvData,input.value);input.value=""};reader.readAsText(file)};input.click()}onOpen(csvDat=[],header=[]){console.log("CSV Opened!",header,csvDat)}};var parseCSVData=(data,filename,head,hasend=true,parser=(lines,filename2,head2)=>{let result={filename:filename2};let header=head2;if(typeof head2==="string")header=head2.split(",");result.header=header;for(let i=0;i<lines.length;i++){let line=lines[i].split(",");for(let j3=0;j3<line.length;j3++){if(!result[header[j3]])result[header[j3]];result[header[j3]]=line[j3]}}return result})=>{let lines=data.split("\\n");if(!head)head=lines[0];lines.shift();if(hasend===false)lines.pop();let result=parser(lines,filename,head);return result};function toISOLocal(d4){d4=new Date(d4);var z3=n=>("0"+n).slice(-2);var zz=n=>("00"+n).slice(-3);var off=d4.getTimezoneOffset();var sign=off<0?"+":"-";off=Math.abs(off);return d4.getFullYear()+"-"+z3(d4.getMonth()+1)+"-"+z3(d4.getDate())+"T"+z3(d4.getHours())+":"+z3(d4.getMinutes())+":"+z3(d4.getSeconds())+"."+zz(d4.getMilliseconds())+"(UTC"+sign+z3(off/60|0)+":00)"}var BrowserFS=__toESM3(require_browserfs());var fsInited=false;var fs22=BrowserFS.BFSRequire("fs");var BFSBuffer=BrowserFS.BFSRequire("buffer").Buffer;var initFS=async(dirs=["data"],oninit=(exists2=[])=>{},onerror=e=>{},filesystem="IndexedDB")=>{if(fsInited)return true;else{fsInited=true;return new Promise(resolve=>{let oldmfs=fs22.getRootFS();BrowserFS.FileSystem[filesystem].Create({},(e,mountableFileSystem)=>{if(e)throw e;if(!mountableFileSystem){onerror(e);throw new Error(`Error creating BrowserFS`)}BrowserFS.initialize(mountableFileSystem);let promises=[];dirs.forEach(async dir2=>{promises.push(dirExists(fs22,dir2))});Promise.all(promises).then(values=>{oninit(values);fsInited=true;resolve(true)})})})}};var exists=async(path="")=>{if(!fsInited)await initFS([path.split("/")[0]]);else await dirExists(fs22,path.split("/")[0]);return new Promise(resolve=>{fs22.exists("/"+path,function(exists2){resolve(exists2)})})};var readFile=async(path="data")=>{if(!fsInited)await initFS([path.split("/")[0]]);else await dirExists(fs22,path.split("/")[0]);return new Promise(resolve=>{fs22.readFile("/"+path,function(e,output){resolve(output)})})};async function readFileChunk(path="data",begin=0,end=5120,onread=data=>{}){if(!fsInited)await initFS([path.split("/")[0]]);else await dirExists(fs22,path.split("/")[0]);if(path!=""){return new Promise(async resolve=>{fs22.open("/"+path,"r",(e,fd)=>{if(e)throw e;fs22.read(fd,end,begin,"utf-8",(er2,output,bytesRead)=>{if(er2)throw er2;if(bytesRead!==0){let data=output.toString();fs22.close(fd,()=>{onread(data,path);resolve(data)})}else resolve(void 0)})})})}else{console.error("Path name is not defined");return void 0}}var getFilenames=async(directory="data",onload=directory2=>{})=>{if(!fsInited)await initFS([directory]);else await dirExists(fs22,directory);return new Promise(resolve=>{fs22.readdir("/"+directory,(e,dir2)=>{if(e)throw e;if(dir2){onload(dir2);resolve(dir2)}else resolve(void 0)})})};var writeFile=async(path,data,onwrite=data2=>{})=>{if(!fsInited)await initFS([path.split("/")[0]]);else await dirExists(fs22,path.split("/")[0]);return new Promise(resolve=>{fs22.writeFile("/"+path,data,err=>{if(err)throw err;onwrite(data);resolve(true)})})};var appendFile2=async(path,data,onwrite=data2=>{})=>{if(!fsInited)await initFS([path.split("/")[0]]);else await dirExists(fs22,path.split("/")[0]);return new Promise(resolve=>{fs22.appendFile("/"+path,data,err=>{if(err)throw err;onwrite(data);resolve(true)})})};var deleteFile=async(path="data",ondelete=()=>{})=>{if(!fsInited)await initFS([path.split("/")[0]]);else await dirExists(fs22,path.split("/")[0]);return new Promise(resolve=>{if(path!=""){fs22.unlink("/"+path,e=>{if(e)console.error(e);ondelete();resolve(true)})}else{console.error("Path name is not defined");resolve(false)}})};var readFileAsText=async(path="data",end="end",begin=0,onread=(data,filename)=>{})=>{if(!fsInited)await initFS([path.split("/")[0]]);else await dirExists(fs22,path.split("/")[0]);return new Promise(async resolve=>{let size=await getFileSize(path,dir);if(end==="end"){end=size}else if(typeof end==="number"){if(end>size)end=size}fs22.open("/"+path,"r",(e,fd)=>{if(e)throw e;fs22.read(fd,end,begin,"utf-8",(er2,output,bytesRead)=>{if(er2)throw er2;if(bytesRead!==0){let data=output.toString();fs22.close(fd,()=>{onread(data,path);resolve(data)})}else resolve(void 0)})})})};var listFiles=async(dir2="data",onload=directory=>{})=>{if(!fsInited)await initFS([dir2]);else await dirExists(fs22,dir2);return new Promise(resolve=>{fs22.readdir("/"+dir2,(e,directory)=>{if(e)throw e;if(directory){onload(directory)}resolve(directory)})})};var getFileSize=async(path="data",onread=size=>{console.log(size)})=>{if(!fsInited)await initFS([path.split("/")[0]]);else await dirExists(fs22,path.split("/")[0]);return new Promise(resolve=>{fs22.stat("/"+path,(e,stats)=>{if(e)throw e;let filesize=stats.size;onread(filesize);resolve(filesize)})})};var getCSVHeader=async(path="data",onopen=(header,filename)=>{console.log(header,filename)})=>{if(!fsInited)await initFS([path.split("/")[0]]);else await dirExists(fs22,path.split("/")[0]);return new Promise(resolve=>{fs22.open("/"+path,"r",(e,fd)=>{if(e)throw e;fs22.read(fd,65535,0,"utf-8",(er2,output,bytesRead)=>{if(er2)throw er2;if(bytesRead!==0){let data=output.toString();let lines=data.split("\\n");let header=lines[0];fs22.close(fd,()=>{onopen(header,path);resolve(header)})}else resolve(void 0)})})})};var writeToCSVFromDB=async(path="data",fileSizeLimitMb=10)=>{if(!fsInited)await initFS([path.split("/")[0]]);else await dirExists(fs22,path.split("/")[0]);return new Promise(resolve=>{if(path!=""){fs22.stat("/"+path,(e,stats)=>{if(e)throw e;let filesize=stats.size;console.log(filesize);fs22.open(path,"r",(e2,fd)=>{if(e2)throw e2;let i=0;let maxFileSize=fileSizeLimitMb*1024*1024;let end=maxFileSize;if(filesize<maxFileSize){end=filesize;fs22.read(fd,end,0,"utf-8",(e3,output,bytesRead)=>{if(e3)throw e3;if(bytesRead!==0)CSV.saveCSV(output.toString(),path);fs22.close(fd);resolve(true)})}else{const writeChunkToFile=async()=>{if(i<filesize){if(i+end>filesize){end=filesize-i}let chunk=0;fs22.read(fd,end,i,"utf-8",(e3,output,bytesRead)=>{if(e3)throw e3;if(bytesRead!==0){CSV.saveCSV(output.toString(),path+"_"+chunk);i+=maxFileSize;chunk++;writeChunkToFile();fs22.close(fd);resolve(true)}})}}}})})}else{console.error("File name is not defined.");resolve(false)}})};async function readCSVChunkFromDB(path="data",start=0,end="end"){if(!fsInited)await initFS([path.split("/")[0]]);else await dirExists(fs22,path.split("/")[0]);let head=await getCSVHeader(path);if(head)head=head.split(",");else return void 0;let resultLengths=[];let resultNames=[];let results={};head.forEach(v3=>{if(v3){resultNames.push(v3);resultLengths.push(1)}else resultLengths[resultLengths.length-1]++});let size=await getFileSize(path);if(end==="end")end=size;else if(end>size){start=size-(end-start);end=size}let data=await readFileChunk(path,start,end);let headeridx=0;let lastIdx=0;data.forEach((r,i)=>{let row=r.split(",");while(lastIdx<row.length-1){let l=resultLengths[headeridx];if(l===1){results[resultNames[headeridx]].push(row[lastIdx]);lastIdx++}else{results[resultNames[headeridx]].push(row[lastIdx].slice(lastIdx,l));lastIdx+=l}}});return results}var directories={};var dirExists=async(fs32,directory)=>{return new Promise((resolve,reject)=>{if(directories[directory]==="exists"||directories[directory]==="created"){resolve()}else{fs32.exists(`/${directory}`,exists2=>{if(exists2){directories[directory]="exists";console.log(`/${directory} exists!`);resolve()}else if(directories[directory]==="creating"){console.log(directory+" is still being created.");resolve()}else{console.log(`creating /${directory}`,fs32);directories[directory]="creating";fs32.mkdir(`/${directory}`,1,err=>{if(err){throw err}directories[directory]="created";setTimeout(resolve,500)})}})}})};var BFSRoutes={initFS,dirExists,exists,readFile,readFileChunk,getFilenames,writeFile,appendFile:appendFile2,deleteFile,readFileAsText,getFileSize,getCSVHeader,listFiles};var CSV_REFERENCE={};function lerp(v0,v1,t2){return(1-t2)*v0+t2*v1}function interpolerp(v0,v1,fit,floor=true){if(fit<=2)return[v0,v1];let a=1/fit;let result=new Array(fit);result[0]=v0;for(let i=1;i<=fit;i++){result[i]=lerp(v0,v1,a*i);if(floor)result[i]=Math.floor(result[i])}return result}var appendCSV=async(newData,filename,header)=>{if(!filename){let keys=Object.keys(CSV_REFERENCE);if(keys.length>0)filename=keys[keys.length-1];else filename=`csv${new Date().toISOString()}`}let csv=CSV_REFERENCE[filename];if(!csv){let keys=Array.from(Object.keys(newData));if(keys.indexOf("timestamp")>-1)keys.splice(keys.indexOf("timestamp"),1);CSV_REFERENCE[filename]={header:header?header:["timestamp","localized",...keys],lastX:void 0,buffer:"",buffered:0,bufferSize:0,toFixed:0,xIncrement:void 0};csv=CSV_REFERENCE[filename];header=csv.header}if(!csv.header||csv.header?.length===0){let keys=Array.from(Object.keys(newData));if(keys.indexOf("timestamp")>-1)keys.splice(keys.indexOf("timestamp"),1);csv.header=header?header:["timestamp","localized",...keys]}else if(header)csv.header=header;let maxLen=1;for(const key in newData){if(csv.header.indexOf(key)>-1&&newData[key]?.length>maxLen){maxLen=newData[key]?.length}}let x4;if(csv.xIncrement){if(!csv.lastX){if(typeof newData[csv.header[0]]!=="undefined"){x4=newData[csv.header[0]]}else if(csv.header[0].toLowerCase().includes("time")||csv.header[0].toLowerCase().includes("unix"))x4=Date.now()}else{if(newData[csv.header[2]]){if(Array.isArray(newData[csv.header[2]]))x4=csv.lastX+csv.xIncrement*newData[csv.header[2]].length;else x4=csv.lastX+csv.xIncrement}else if(newData[csv.header[0]]){if(Array.isArray(newData[csv.header[0]]))x4=csv.lastX+csv.xIncrement*newData[csv.header[0]].length;else x4=csv.lastX+csv.xIncrement}else x4=csv.lastX+csv.xIncrement}}else x4=newData[csv.header[0]];if(typeof csv.lastX==="undefined")csv.lastX=Array.isArray(x4)?x4[0]:x4;if(typeof x4==="undefined"){if(csv.header[0].includes("time")){let now=Date.now();if(maxLen===1)x4=Date.now();else{x4=interpolerp(csv.lastX,now,maxLen);x4.shift()}}else{let newX=csv.lastX+1;if(maxLen>1){x4=new Array(maxLen).fill("");x4[maxLen-1]=newX}else x4=newX}}else if(maxLen>1&&x4?.length!==maxLen){if(!Array.isArray(x4)||x4.length===1){x4=interpolerp(csv.lastX,x4,maxLen);x4.shift()}else{x4=interpolerp(x4[0],x4[x4.length-1],maxLen);x4.shift()}}let toAppend2=[];if(Array.isArray(x4)){let curIdcs={};for(let i=0;i<x4.length;i++){toAppend2.push([]);for(let j3=0;j3<csv.header.length;j3++){let d4=newData[csv.header[j3]];if(j3===0){toAppend2[i][0]=x4[i];if(csv.header[j3+1]==="localized"){j3++;toAppend2[i][j3]=toISOLocal(x4[i])}continue}if(d4===void 0){toAppend2[i][j3]=""}else if(Array.isArray(d4)){if(d4.length===x4.length)toAppend2[i][j3]=d4[i];else{if(!(csv.header[j3]in curIdcs)){curIdcs[csv.header[j3]]=i;if(d4.length!==1)toAppend2[i][j3]=d4[i]}else{if(d4.length===1&&i===x4.length-1){toAppend2[i][j3]=d4[curIdcs[csv.header[j3]]]}else if(Math.floor(d4.length*i/x4.length)>curIdcs[csv.header[j3]]){curIdcs[csv.header[j3]]++;toAppend2[i][j3]=d4[curIdcs[csv.header[j3]]]}else{toAppend2[i][j3]=""}}}}else{if(i===x4.length-1){toAppend2[i][j3]=d4}else{toAppend2[i][j3]=""}}if(typeof toAppend2[i][j3]==="number"&&Math.floor(toAppend2[i][j3])!==toAppend2[i][j3])toAppend2[i][j3]=toAppend2[i][j3].toFixed(CSV_REFERENCE[filename].toFixed)}}}else{toAppend2.push([]);for(let j3=0;j3<csv.header.length;j3++){if(j3===0){toAppend2[0][0]=x4;if(csv.header[j3+1]==="localized"){j3++;toAppend2[0][j3]=toISOLocal(x4)}continue}if(csv.header[j3]in newData)toAppend2[0][j3]=newData[csv.header[j3]];else toAppend2[0][j3]="";if(typeof toAppend2[0][j3]==="number"&&Math.floor(toAppend2[0][j3])!==toAppend2[0][j3])toAppend2[0][j3]=toAppend2[0][j3].toFixed(CSV_REFERENCE[filename].toFixed)}}let csvProcessed="";if(header)csvProcessed+=header.join(",")+"\\n";toAppend2.forEach(arr=>{csvProcessed+=arr.join(",")+"\\n";if(csv.bufferSize)csv.buffered++});csv.lastX=toAppend2[toAppend2.length-1][0];if(csv.bufferSize){csv.buffer+=csvProcessed;if(csv.buffered>csv.bufferSize){let r=new Promise((res,rej)=>{exists(filename).then(fileExists=>{if(!fileExists){writeFile(filename,csv.buffer,written=>{res(written)})}else{appendFile2(filename,csv.buffer,written=>{res(written)})}})});await r;csv.buffer="";csv.buffered=0;return r}else return Promise.resolve(true)}else{return new Promise((res,rej)=>{exists(filename).then(fileExists=>{if(!fileExists){writeFile(filename,csvProcessed,written=>{res(written)})}else{appendFile2(filename,csvProcessed,written=>{res(written)})}})})}};var updateCSVHeader=(header,filename)=>{if(CSV_REFERENCE[filename]){CSV_REFERENCE[filename].header=header}};var createCSV=(filename,header,toFixed=5,bufferSize=0,xIncrement)=>{if(header?.indexOf("timestamp")>1){header.splice(header.indexOf("timestamp"),1);header.unshift("timestamp")}if((header?.[0].toLowerCase().includes("time")||header?.[0].toLowerCase().includes("unix"))&&header[1]!=="localized"){header.splice(1,0,"localized")}CSV_REFERENCE[filename]={header,lastX:header[1]==="localized"?Date.now():0,bufferSize,buffer:"",buffered:0,toFixed,xIncrement};return new Promise((res,rej)=>{writeFile(filename,CSV_REFERENCE[filename].header?CSV_REFERENCE[filename].header.join(",")+"\\n":"",written=>{res(written)}).catch(rej)})};var visualizeDirectory=(dir2,parentNode=document.body)=>{return new Promise(async(res,rej)=>{if(parentNode.querySelector("#bfs"+dir2))parentNode.querySelector("#bfs"+dir2)?.remove();parentNode.insertAdjacentHTML("beforeend",`<div id=\'bfs${dir2}\' class=\'bfs${dir2}\'></div>`);let div2=parentNode.querySelector("#bfs"+dir2);await listFiles(dir2).then(directory=>{if(directory.length===0)div2.innerHTML="No Files!";else directory.forEach(listing=>{div2?.insertAdjacentHTML("beforeend",`<div id=\'${listing}\' class=\'bfsfilediv\'>\n                        <span class=\'bfsfiletitle\'>Data: </span>\n                        <span>${listing}</span>\n                        <button class=\'bfsdownloadbtn\' id=\'download${listing}\'>Download CSV</button>\n                        ${listing.indexOf(".")>-1?`<button class=\'bfsdeletebtn\' id=\'delete${listing}\'>Delete</button>`:""}\n                    </div>`);if(document.getElementById(`delete${listing}`)){document.getElementById(`delete${listing}`).onclick=()=>{deleteFile(dir2+"/"+listing,()=>{visualizeDirectory(dir2,parentNode)})}}if(document.getElementById(`download${listing}`)){document.getElementById(`download${listing}`).onclick=()=>{writeToCSVFromDB(dir2+"/"+listing,10)}}});res(directory)}).catch(rej)})};var csvRoutes={appendCSV,updateCSVHeader,createCSV,visualizeDirectory,openCSV:CSV.openCSV,saveCSV:CSV.saveCSV,openCSVRaw:CSV.openCSVRaw,parseCSVData,getCSVHeader,writeToCSVFromDB,readCSVChunkFromDB,toISOLocal};var __require3=(x22=>typeof __require!=="undefined"?__require:typeof Proxy!=="undefined"?new Proxy(x22,{get:(a,b2)=>(typeof __require!=="undefined"?__require:a)[b2]}):x22)(function(x22){if(typeof __require!=="undefined")return __require.apply(this,arguments);throw new Error(\'Dynamic require of "\'+x22+\'" is not supported\')});var EventHandler3=class{constructor(data){this.pushToState={};this.data={};this.triggers={};this.setState=updateObj=>{Object.assign(this.data,updateObj);let props=Object.getOwnPropertyNames(updateObj);for(const prop of props){if(this.triggers[prop]){let fn2=obj=>{obj.onchange(this.data[prop])};this.triggers[prop].forEach(fn2)}}return this.data};this.setValue=(key,value2)=>{this.data[key]=value2;this.triggerEvent(key,value2)};this.triggerEvent=(key,value2)=>{if(this.triggers[key]){let fn2=obj=>{obj.onchange(value2)};this.triggers[key].forEach(fn2)}};this.subscribeEvent=(key,onchange,refObject,refKey)=>{if(key){if(refObject&&refKey&&!this.triggers[key]){Object.defineProperty(this.data,key,{get:()=>{return refObject[refKey]},set:value2=>{refObject[refKey]=value2},enumerable:true,configurable:true})}if(!this.triggers[key]){this.triggers[key]=[]}let l=this.triggers[key].length;this.triggers[key].push({sub:l,onchange});return this.triggers[key].length-1}else return void 0};this.unsubscribeEvent=(key,sub2)=>{let triggers=this.triggers[key];if(triggers){if(!sub2){delete this.triggers[key];delete this.data[key]}else{let sub3=void 0;let obj=triggers.find((o2,i)=>{if(o2.sub===sub3){sub3=i;return true}});if(obj)triggers.splice(sub3,1);if(Object.keys(triggers).length===0){delete this.triggers[key];delete this.data[key]}if(this.onRemoved)this.onRemoved(obj);return true}}};this.subscribeEventOnce=(key,onchange)=>{let sub2;let changed=value2=>{onchange(value2);this.unsubscribeEvent(key,sub2)};sub2=this.subscribeEvent(key,changed)};this.getEvent=(key,sub2)=>{for(const s in this.triggers[key]){if(this.triggers[key][s].sub===sub2)return this.triggers[key][s]}};this.getSnapshot=()=>{const snapshot={};for(const key in this.data){snapshot[key]=this.data[key]}};if(typeof data==="object")this.data=data}};var state3=new EventHandler3;var GraphNode2=class{constructor(properties,parent,graph){this.__node={tag:`node${Math.floor(Math.random()*1e15)}`,unique:`${Math.floor(Math.random()*1e15)}`,state:state3};this.__setProperties=(properties2,parent2,graph2)=>{let enforceProperties=()=>{let orig=properties2;if(typeof properties2==="function"){if(isNativeClass2(properties2)){properties2=new properties2}else properties2={__operator:properties2,__node:{forward:true,tag:properties2.name}}}else if(typeof properties2==="string"){if(graph2?.get(properties2)){properties2=graph2.get(properties2)}}if(!properties2.__node.initial)properties2.__node.initial=orig};enforceProperties();if(typeof properties2==="object"){let assignState=()=>{if(properties2.__node?.state)this.__node.state=properties2.__node.state};let setProps2=()=>{if(properties2.__props){if(typeof properties2.__props==="function")properties2.__props=new properties2.__props;if(typeof properties2.__props==="object"){this.__proxyObject(properties2.__props)}}};let setTag=()=>{if(!properties2.__node.tag){if(properties2.__operator?.name)properties2.__node.tag=properties2.__operator.name;else properties2.__node.tag=`node${Math.floor(Math.random()*1e15)}`}};let setNode=()=>{if(typeof properties2.__node==="string"){if(graph2?.get(properties2.__node.tag)){properties2=graph2.get(properties2.__node.tag)}else properties2.__node={}}else if(!properties2.__node)properties2.__node={};if(graph2){properties2.__node.graph=graph2}if(properties2 instanceof Graph2)properties2.__node.source=properties2};let setParent=()=>{if(!properties2.__parent&&parent2)properties2.__parent=parent2;if(parent2?.__node&&!(parent2 instanceof Graph2||properties2 instanceof Graph2))properties2.__node.tag=parent2.__node.tag+"."+properties2.__node.tag;if(parent2 instanceof Graph2&&properties2 instanceof Graph2){if(properties2.__node.loaders)Object.assign(parent2.__node.loaders?parent2.__node.loaders:{},properties2.__node.loaders);if(parent2.__node.mapGraphs){properties2.__node.nodes.forEach(n=>{parent2.set(properties2.__node.tag+"."+n.__node.tag,n)});let ondelete=()=>{properties2.__node.nodes.forEach(n=>{parent2.__node.nodes.delete(properties2.__node.tag+"."+n.__node.tag)})};this.__addOndisconnected(ondelete)}}};let setOp=()=>{if(typeof properties2.default==="function"&&!properties2.__operator){properties2.__operator=properties2.default}if(properties2.__operator){if(typeof properties2.__operator==="string"){if(graph2){let n=graph2.get(properties2.__operator);if(n)properties2.__operator=n.__operator;if(!properties2.__node.tag&&properties2.__operator.name)properties2.__node.tag=properties2.__operator.name}}if(typeof properties2.__operator==="function")properties2.__operator=this.__setOperator(properties2.__operator);if(properties2.default)properties2.default=properties2.__operator}};let assignProps=()=>{properties2.__node=Object.assign(this.__node,properties2.__node);let keys=Object.getOwnPropertyNames(properties2);for(const key of keys){this[key]=properties2[key]}};assignState();setTag();setProps2();setNode();setParent();assignProps();setOp()}};this.__subscribe=(callback,key,subInput,bound,target)=>{const subscribeToFunction=(k2,setTarget=(callback2,target2)=>callback2,triggerCallback=callback)=>{let sub2=this.__node.state.subscribeEvent(k2,triggerCallback,this,key);let trigger=this.__node.state.getEvent(k2,sub2);trigger.source=this.__node.tag;if(key)trigger.key=key;trigger.target=setTarget(callback);if(bound)trigger.bound=bound;return sub2};const subscribeToGraph=callback2=>{let fn2=this.__node.graph.get(callback2);if(!fn2&&callback2.includes(".")){let n=this.__node.graph.get(callback2.substring(0,callback2.lastIndexOf(".")));let key2=callback2.substring(callback2.lastIndexOf(".")+1);if(n&&typeof n[key2]==="function")callback2=(...args)=>{return n[key2](...args)}}};if(key){if(!this.__node.localState||!this.__node.localState[key]){this.__addLocalState(this,key)}if(typeof callback==="string"){if(target){if(this.__node.graph?.get(target)){let n=this.__node.graph?.get(target);if(typeof n[callback]==="function"){let fn2=n[callback];callback=(...inp)=>{fn2(...inp)}}else{let k22=callback;let setter=inp=>{n[k22]=inp};callback=setter}}}else if(typeof this[callback]==="function"){let fn2=this[callback];callback=(...inp)=>{fn2(...inp)}}else if(this.__node.graph?.get(callback))subscribeToGraph(callback);if(typeof callback!=="function")return void 0}let sub2;let k2=subInput?this.__node.unique+"."+key+"input":this.__node.unique+"."+key;if(typeof callback==="function")sub2=subscribeToFunction(k2);else if(callback?.__node)sub2=subscribeToFunction(k2,(callback2,target2)=>target2?target2:callback2.__node.unique,(...inp)=>{if(callback.__operator)callback.__operator(...inp)});return sub2}else{if(typeof callback==="string"){if(this.__node.graph.get(callback))callback=this.__node.graph.get(callback);if(typeof callback!=="object")return void 0}let sub2;let k2=subInput?this.__node.unique+"input":this.__node.unique;if(typeof callback==="function")sub2=subscribeToFunction(k2);else if(callback?.__node)sub2=subscribeToFunction(k2,(callback2,target2)=>target2?target2:callback2.__node.unique,(...inp)=>{if(callback.__operator)callback.__operator(...inp)});return sub2}};this.__unsubscribe=(sub2,key,unsubInput)=>{if(key)return this.__node.state.unsubscribeEvent(unsubInput?this.__node.unique+"."+key+"input":this.__node.unique+"."+key,sub2);else return this.__node.state.unsubscribeEvent(unsubInput?this.__node.unique+"input":this.__node.unique,sub2)};this.__setOperator=fn2=>{fn2=fn2.bind(this);if(this.__args&&this.__node.graph){fn2=wrapArgs2(fn2,this.__args,this.__node.graph)}let inpstr=`${this.__node.unique}input`;this.__operator=(...args)=>{if(this.__node.state.triggers[inpstr])this.__node.state.setValue(inpstr,args);let result=fn2(...args);if(this.__node.state.triggers[this.__node.unique]){if(typeof result?.then==="function"){result.then(res=>{if(res!==void 0)this.__node.state.setValue(this.__node.unique,res)}).catch(console.error)}else if(result!==void 0)this.__node.state.setValue(this.__node.unique,result)}return result};if(this.__parent instanceof GraphNode2&&!this.__subscribedToParent){if(this.__parent.__operator){let sub2=this.__parent.__subscribe(this);let ondelete=()=>{this.__parent?.__unsubscribe(sub2);delete this.__subscribedToParent};this.__addOndisconnected(ondelete);this.__subscribedToParent=true}}return this.__operator};this.__addLocalState=(props,key)=>{if(!props)return;if(!this.__node.localState){this.__node.localState={}}const localState=this.__node.localState;const initState=(props2,k2)=>{let str3=this.__node.unique+"."+k2;let inpstr=`${str3}input`;if(typeof props2[k2]==="function"&&k2!=="__operator"){let fn2=props2[k2].bind(this);props2[k2]=(...args)=>{if(this.__node.state.triggers[inpstr])this.__node.state.setValue(inpstr,args);let result=fn2(...args);if(this.__node.state.triggers[str3]){if(typeof result?.then==="function"){result.then(res=>{this.__node.state.triggerEvent(str3,res)}).catch(console.error)}else this.__node.state.triggerEvent(str3,result)}return result}}else{let get,set;if(this.__props?.[k2]){get=()=>{return this.__props[k2]};set=v3=>{this.__props[k2]=v3;if(this.__node.state.triggers[str3])this.__node.state.triggerEvent(str3,v3)}}else{localState[k2]=props2[k2];get=()=>{return localState[k2]};set=v3=>{localState[k2]=v3;if(this.__node.state.triggers[str3])this.__node.state.triggerEvent(str3,v3)}}const descriptor={get,set,enumerable:true,configurable:true};Object.defineProperty(props2,k2,descriptor);if(typeof this.__node.initial==="object"){let dec=Object.getOwnPropertyDescriptor(this.__node.initial,k2);if(dec===void 0||dec?.configurable){Object.defineProperty(this.__node.initial,k2,descriptor)}}}};if(key)initState(props,key);else{for(let k2 in props){initState(props,k2)}}};this.__proxyObject=obj=>{const allProps=getAllProperties2(obj);for(const k2 of allProps){if(typeof obj[k2]==="function"){this[k2]=(...args)=>{return obj[k2](...args)}}else{const descriptor={get:()=>{return obj[k2]},set:value2=>{obj[k2]=value2},enumerable:true,configurable:true};Object.defineProperty(this,k2,descriptor)}}};this.__setProperties(properties,parent,graph)}__addOnconnected(callback){if(Array.isArray(this.__onconnected)){this.__onconnected.push(callback)}else if(typeof this.__onconnected==="function"){this.__onconnected=[callback,this.__onconnected]}else this.__onconnected=callback}__addOndisconnected(callback){if(Array.isArray(this.__ondisconnected)){this.__ondisconnected.push(callback)}else if(typeof this.__ondisconnected==="function"){this.__ondisconnected=[callback,this.__ondisconnected]}else this.__ondisconnected=callback}__callConnected(node=this){if(typeof this.__onconnected==="function"){this.__onconnected(this)}else if(Array.isArray(this.__onconnected)){let fn2=o2=>{o2(this)};this.__onconnected.forEach(fn2)}}__callDisconnected(node=this){if(typeof this.__ondisconnected==="function")this.__ondisconnected(this);else if(Array.isArray(this.__ondisconnected)){let fn2=o2=>{o2(this)};this.__ondisconnected.forEach(fn2)}}};var Graph2=class{constructor(options){this.__node={tag:`graph${Math.floor(Math.random()*1e15)}`,unique:`${Math.random()}`,nodes:new Map,state:state3,roots:{}};this.init=options2=>{if(options2){let cpy=Object.assign({},options2);delete cpy.roots;recursivelyAssign4(this.__node,cpy);if(options2.roots)this.load(options2.roots)}};this.load=roots=>{function recursivelyAssignChildren(target,obj,inChildren=true,top=true){if(top){if(target)Object.assign(target,obj);else target=Object.assign({},obj);recursivelyAssignChildren(target,obj,true,false)}if(obj.__children&&!inChildren){if(obj.__children?.constructor.name==="Object"){if(target.__children?.constructor.name==="Object")recursivelyAssignChildren(target.__children,obj.__children,true,false);else target.__children=recursivelyAssignChildren({},obj.__children,true,false)}else{target.__children=obj.__children}}else if(inChildren){for(const key in obj){target[key]=Object.assign({},obj[key]);if(obj[key].__children){recursivelyAssignChildren({},obj[key].__children,false,false)}}}return target}this.__node.roots=recursivelyAssignChildren(this.__node.roots?this.__node.roots:{},roots);let cpy=Object.assign({},roots);if(cpy.__node)delete cpy.__node;let listeners=this.recursiveSet(cpy,this,void 0,roots);if(roots.__node){if(!roots.__node.tag)roots.__node._tag=`roots${Math.floor(Math.random()*1e15)}`;else if(!this.get(roots.__node.tag)){let node=new GraphNode2(roots,this,this);this.set(node.__node.tag,node);this.runLoaders(node,this,roots,roots.__node.tag);if(node.__listeners){listeners[node.__node.tag]=node.__listeners}}}else if(roots.__listeners){this.setListeners(roots.__listeners)}this.setListeners(listeners);return cpy};this.setLoaders=(loaders22,replace)=>{if(replace)this.__node.loaders=loaders22;else Object.assign(this.__node.loaders,loaders22);return this.__node.loaders};this.runLoaders=(node,parent,properties,key)=>{for(const l in this.__node.loaders){if(typeof this.__node.loaders[l]==="object"){if(this.__node.loaders[l].init)this.__node.loaders[l](node,parent,this,this.__node.roots,properties,key);if(this.__node.loaders[l].connected)node.__addOnconnected(this.__node.loaders[l].connect);if(this.__node.loaders[l].disconnected)node.__addOndisconnected(this.__node.loaders[l].disconnect)}else if(typeof this.__node.loaders[l]==="function")this.__node.loaders[l](node,parent,this,this.__node.roots,properties,key)}};this.add=(properties,parent)=>{let listeners={};if(typeof parent==="string")parent=this.get(parent);let instanced;if(typeof properties==="function"){if(isNativeClass2(properties)){if(properties.prototype instanceof GraphNode2){properties=properties.prototype.constructor(properties,parent,this);instanced=true}else properties=new properties}else properties={__operator:properties}}else if(typeof properties==="string"){properties=this.__node.roots[properties]}if(!properties)return;if(!instanced){let keys=Object.getOwnPropertyNames(properties);let cpy={};for(const key of keys){cpy[key]=properties[key]}properties=cpy}if(!properties.__node)properties.__node={};properties.__node.initial=properties;if(typeof properties==="object"&&(!properties?.__node?.tag||!this.get(properties.__node.tag))){let node;if(instanced)node=properties;else node=new GraphNode2(properties,parent,this);this.set(node.__node.tag,node);this.runLoaders(node,parent,properties,node.__node.tag);this.__node.roots[node.__node.tag]=properties;if(node.__listeners){listeners[node.__node.tag]=node.__listeners}if(node.__children){node.__children=Object.assign({},node.__children);this.recursiveSet(node.__children,node,listeners,node.__children)}this.setListeners(listeners);node.__callConnected();return node}return};this.recursiveSet=(t2,parent,listeners={},origin)=>{let keys=Object.getOwnPropertyNames(origin);for(const key of keys){if(key.includes("__"))continue;let p=origin[key];if(Array.isArray(p))continue;let instanced;if(typeof p==="function"){if(isNativeClass2(p)){p=new p;if(p instanceof GraphNode2){p=p.prototype.constructor(p,parent,this);instanced=true}}else p={__operator:p}}else if(typeof p==="string"){if(this.__node.nodes.get(p))p=this.__node.nodes.get(p);else p=this.__node.roots[p]}else if(typeof p==="boolean"){if(this.__node.nodes.get(key))p=this.__node.nodes.get(key);else p=this.__node.roots[key]}if(typeof p==="object"){if(!instanced&&!(p instanceof GraphNode2)){let keys2=Object.getOwnPropertyNames(p);let cpy={};for(const key2 of keys2){cpy[key2]=p[key2]}p=cpy}if(!p.__node)p.__node={};if(!p.__node.tag)p.__node.tag=key;if(!p.__node.initial)p.__node.initial=t2[key];if(this.get(p.__node.tag)&&!(!(parent instanceof Graph2)&&parent?.__node)||parent?.__node&&this.get(parent.__node.tag+"."+p.__node.tag))continue;let node;if(instanced||p instanceof GraphNode2){node=p}else node=new GraphNode2(p,parent,this);if(p instanceof GraphNode2&&!instanced&&parent instanceof GraphNode2){let sub2=this.subscribe(parent.__node.tag,node.__node.tag);let ondelete=node2=>{this.unsubscribe(parent.__node.tag,sub2)};node.__addOndisconnected(ondelete)}else{this.set(node.__node.tag,node);this.runLoaders(node,parent,t2[key],key);t2[key]=node;this.__node.roots[node.__node.tag]=p;if(node.__listeners){listeners[node.__node.tag]=node.__listeners}if(node.__children){node.__children=Object.assign({},node.__children);this.recursiveSet(node.__children,node,listeners,node.__children)}node.__callConnected()}}}return listeners};this.remove=(node,clearListeners=true)=>{this.unsubscribe(node);if(typeof node==="string")node=this.get(node);if(node instanceof GraphNode2){this.delete(node.__node.tag);delete this.__node.roots[node.__node.tag];if(clearListeners){this.clearListeners(node)}node.__callDisconnected();const recursiveRemove=t2=>{for(const key in t2){this.unsubscribe(t2[key]);this.delete(t2[key].__node.tag);delete this.__node.roots[t2[key].__node.tag];this.delete(key);delete this.__node.roots[key];t2[key].__node.tag=t2[key].__node.tag.substring(t2[key].__node.tag.lastIndexOf(".")+1);if(clearListeners){this.clearListeners(t2[key])}t2[key].__callDisconnected();if(t2[key].__children){recursiveRemove(t2[key].__children)}}};if(node.__children){recursiveRemove(node.__children)}}if(node?.__node.tag&&node?.__parent){delete node?.__parent;node.__node.tag=node.__node.tag.substring(node.__node.tag.indexOf(".")+1)}return node};this.run=(node,...args)=>{if(typeof node==="string"){let nd=this.get(node);if(!nd&&node.includes(".")){nd=this.get(node.substring(0,node.lastIndexOf(".")));if(typeof nd?.[node.substring(node.lastIndexOf(".")+1)]==="function")return nd[node.substring(node.lastIndexOf(".")+1)](...args)}else if(nd?.__operator)return nd.__operator(...args)}if(node?.__operator){return node?.__operator(...args)}};this.setListeners=listeners=>{for(const key in listeners){let node=this.get(key);if(typeof listeners[key]==="object"){for(const k2 in listeners[key]){let n=this.get(k2);let sub2;if(typeof listeners[key][k2]!=="object")listeners[key][k2]={__callback:listeners[key][k2]};else if(!listeners[key][k2].__callback){for(const kk in listeners[key][k2]){if(typeof listeners[key][k2][kk]!=="object"){listeners[key][k2][kk]={__callback:listeners[key][k2][kk]};if(listeners[key][k2][kk].__callback===true||typeof listeners[key][k2][kk].__callback==="undefined")listeners[key][k2][kk].__callback=node.__operator}let nn2=this.get(kk);if(nn2){if(!nn2){let tag=k2.substring(0,k2.lastIndexOf("."));nn2=this.get(tag);if(n){sub2=this.subscribe(nn2,listeners[key][k2][kk].__callback,listeners[key][k2][kk].__args,k2.substring(k2.lastIndexOf(".")+1),listeners[key][k2][kk].inputState,key,k2);if(typeof node.__listeners[k2][kk]!=="object")node.__listeners[k2][kk]={__callback:listeners[key][k2][kk].__callback,inputState:listeners[key][k2][kk]?.inputState};node.__listeners[k2][kk].sub=sub2}}else{sub2=this.subscribe(nn2,listeners[key][k2][kk].__callback,listeners[key][k2].__args,void 0,listeners[key][k2].inputState,key,k2);if(typeof node.__listeners[k2][kk]!=="object")node.__listeners[k2][kk]={__callback:listeners[key][k2][kk].__callback,inputState:listeners[key][k2][kk]?.inputState};node.__listeners[k2][kk].sub=sub2}}}}if("__callback"in listeners[key][k2]){if(listeners[key][k2].__callback===true||typeof listeners[key][k2].__callback==="undefined")listeners[key][k2].__callback=node.__operator;if(typeof listeners[key][k2].__callback==="function")listeners[key][k2].__callback=listeners[key][k2].__callback.bind(node);if(typeof node.__listeners!=="object")node.__listeners={};if(!n){let tag=k2.substring(0,k2.lastIndexOf("."));n=this.get(tag);if(n){sub2=this.subscribe(n,listeners[key][k2].__callback,listeners[key][k2].__args,k2.substring(k2.lastIndexOf(".")+1),listeners[key][k2].inputState,key,k2);if(typeof node.__listeners[k2]!=="object")node.__listeners[k2]={__callback:listeners[key][k2].__callback,inputState:listeners[key][k2]?.inputState};node.__listeners[k2].sub=sub2}}else{sub2=this.subscribe(n,listeners[key][k2].__callback,listeners[key][k2].__args,void 0,listeners[key][k2].inputState,key,k2);if(typeof node.__listeners[k2]!=="object")node.__listeners[k2]={__callback:listeners[key][k2].__callback,inputState:listeners[key][k2]?.inputState};node.__listeners[k2].sub=sub2}}}}}};this.clearListeners=(node,listener)=>{if(typeof node==="string")node=this.get(node);if(node?.__listeners){for(const key in node.__listeners){if(listener&&key!==listener)continue;if(typeof node.__listeners[key].sub!=="number")continue;let n=this.get(key);if(!n){n=this.get(key.substring(0,key.lastIndexOf(".")));if(n){if(!node.__listeners[key].__callback){for(const k2 in node.__listeners[key]){this.unsubscribe(n,node.__listeners[key][k2].sub,key.substring(key.lastIndexOf(".")+1),node.__listeners[key][k2].inputState)}}else this.unsubscribe(n,node.__listeners[key].sub,key.substring(key.lastIndexOf(".")+1),node.__listeners[key].inputState)}}else{if(!node.__listeners[key].__callback){for(const k2 in node.__listeners[key]){this.unsubscribe(n,node.__listeners[key][k2].sub,void 0,node.__listeners[key][k2].inputState)}}else this.unsubscribe(n,node.__listeners[key].sub,void 0,node.__listeners[key].inputState)}delete node.__listeners[key]}}};this.get=tag=>{return this.__node.nodes.get(tag)};this.set=(tag,node)=>{return this.__node.nodes.set(tag,node)};this.delete=tag=>{return this.__node.nodes.delete(tag)};this.getProps=(node,getInitial)=>{if(typeof node==="string")node=this.get(node);if(node instanceof GraphNode2){let cpy;if(getInitial)cpy=Object.assign({},this.__node.roots[node.__node.tag]);else{cpy=Object.assign({},node);for(const key in cpy){if(key.includes("__"))delete cpy[key]}}}};this.subscribe=(nodeEvent,onEvent,args,key,subInput,target,bound)=>{let nd=nodeEvent;if(typeof nodeEvent==="string"){nd=this.get(nodeEvent);if(!nd&&nodeEvent.includes(".")){nd=this.get(nodeEvent.substring(0,nodeEvent.lastIndexOf(".")));key=nodeEvent.substring(nodeEvent.lastIndexOf(".")+1)}}let sub2;if(target instanceof GraphNode2)target=target.__node.tag;if(typeof onEvent==="string"){let key2=onEvent;if(target){let node=this.get(target);if(typeof node?.[onEvent]==="function"){onEvent=function(...inp){return node[key2](...inp)}}else{onEvent=function(inp){node[key2]=inp;return node[key2]}}}else{if(this.get(onEvent)?.__operator){let node=this.get(onEvent);onEvent=function(...inp){return node.__operator(...inp)}}else if(onEvent.includes(".")){let n=this.get(onEvent.substring(0,onEvent.lastIndexOf(".")));let key3=onEvent.substring(onEvent.lastIndexOf(".")+1);if(typeof n[key3]==="function"){onEvent=function(...inp){return n[key3](...inp)}}else{onEvent=function(inp){n[key3]=inp;return n[key3]}}}}}if((typeof onEvent==="function"||onEvent instanceof GraphNode2)&&args){if(onEvent instanceof GraphNode2&&onEvent.__operator)onEvent=function(inp){return onEvent.__operator(inp)};onEvent=wrapArgs2(onEvent,args,this)}if(nd instanceof GraphNode2){sub2=nd.__subscribe(onEvent,key,subInput,target,bound);let ondelete=()=>{nd.__unsubscribe(sub2,key,subInput)};nd.__addOndisconnected(ondelete)}else if(typeof nodeEvent==="string"){if(this.get(nodeEvent)){if(onEvent instanceof GraphNode2&&onEvent.__operator){sub2=this.get(nodeEvent).__subscribe(onEvent.__operator,key,subInput,target,bound);let ondelete=()=>{this.get(nodeEvent).__unsubscribe(sub2)};onEvent.__addOndisconnected(ondelete)}else if(typeof onEvent==="function"||typeof onEvent==="string"){sub2=this.get(nodeEvent).__subscribe(onEvent,key,subInput,target,bound);this.__node.state.getEvent(this.get(nodeEvent).__node.unique,sub2).source=nodeEvent}}else{if(typeof onEvent==="string")onEvent=this.__node.nodes.get(onEvent).__operator;if(typeof onEvent==="function")sub2=this.__node.state.subscribeEvent(nodeEvent,onEvent)}}return sub2};this.unsubscribe=(node,sub2,key,subInput)=>{if(node instanceof GraphNode2){return node.__unsubscribe(sub2,key,subInput)}else return this.get(node)?.__unsubscribe(sub2,key,subInput)};this.setState=update=>{this.__node.state.setState(update)};this.init(options)}};function recursivelyAssign4(target,obj){for(const key in obj){if(obj[key]?.constructor.name==="Object"&&!Array.isArray(obj[key])){if(target[key]?.constructor.name==="Object"&&!Array.isArray(target[key]))recursivelyAssign4(target[key],obj[key]);else target[key]=recursivelyAssign4({},obj[key])}else{target[key]=obj[key]}}return target}function getAllProperties2(obj){var allProps=[],curr=obj;do{var props=Object.getOwnPropertyNames(curr);let fn2=function(prop){if(allProps.indexOf(prop)===-1)allProps.push(prop)};props.forEach(fn2)}while(curr=Object.getPrototypeOf(curr));return allProps}function isNativeClass2(thing){return typeof thing==="function"&&thing.hasOwnProperty("prototype")&&!thing.hasOwnProperty("arguments")}var wrapArgs2=(callback,argOrder,graph)=>{let args=[];let getCallbackFromString=a=>{if(graph.get(a)?.__operator){let node=graph.get(a);return(...inp)=>{node.__operator(...inp)}}else if(a.includes(".")){let split=a.split(".");let popped=split.pop();let joined=split.join(".");let node=graph.get(joined);if(typeof graph.get(joined)?.[popped]==="function"){return(...inp)=>{return node[popped](...inp)}}else return()=>{return node[popped]}}else if(graph.get(a)){let node=graph.get(a);return()=>{return node}}else{let arg=a;return()=>{return arg}}};let forArg=(a,i)=>{if(a==="__output"){args[i]=inp=>{return inp}}else if(typeof a==="string"){args[i]=getCallbackFromString(a)}else if(typeof a==="function"){let fn22=a;args[i]=(...inp)=>{return fn22(...inp)}}else if(typeof a==="object"&&a.__input){let recursivelyCreateCallback=function(c2){let input=c2.__input;if(typeof c2.__input==="string"){input=getCallbackFromString(c2.__input)}if(c2.__args){input=wrapArgs2(input,c2.__args,graph)}if(c2.__output){let output=c2.__output;if(typeof c2.__output==="string"){output=getCallbackFromString(output)}else if(typeof a.__output==="object"){output=recursivelyCreateCallback(output)}if(typeof output==="function"){let fn22=input;input=(...inp)=>{return output(fn22(...inp))}}}return input};args[i]=recursivelyCreateCallback(a)}else{let arg=a;args[i]=()=>{return arg}}};argOrder.forEach(forArg);if(typeof callback==="string")callback=getCallbackFromString(callback);let fn2=callback;callback=function(...inp){let mapArg=arg=>{return arg(...inp)};return fn2(...args.map(mapArg))};return callback};var backprop2=(node,parent,graph)=>{if(node.__node.backward&&parent instanceof GraphNode2){graph.setListeners({[parent.__node.tag]:{[node.__node.tag]:parent}})}};var loop2=(node,parent,graph)=>{if(node.__operator&&!node.__node.looperSet){if(typeof node.__node.delay==="number"){let fn2=node.__operator;node.__setOperator((...args)=>{return new Promise((res,rej)=>{setTimeout(async()=>{res(await fn2(...args))},node.__node.delay)})})}else if(node.__node.frame===true){let fn2=node.__operator;node.__setOperator((...args)=>{return new Promise((res,rej)=>{requestAnimationFrame(async()=>{res(await fn2(...args))})})})}if(typeof node.__node.repeat==="number"||typeof node.__node.recursive==="number"){let fn2=node.__operator;node.__setOperator(async(...args)=>{let i=node.__node.repeat?node.__node.repeat:node.__node.recursive;let result;let repeater=async(tick,...inp)=>{while(tick>0){if(node.__node.delay||node.__node.frame){fn2(...inp).then(async res=>{if(node.__node.recursive){await repeater(tick,res)}else await repeater(tick,...inp)});break}else result=await fn2(...args);tick--}};await repeater(i,...args);return result})}if(node.__node.loop&&typeof node.__node.loop==="number"){node.__node.looperSet=true;let fn2=node.__operator;node.__setOperator((...args)=>{if(!("looping"in node.__node))node.__node.looping=true;if(node.__node.looping){fn2(...args);setTimeout(()=>{node.__operator(...args)},node.__node.loop)}});if(node.__node.looping)node.__operator();let ondelete=node2=>{if(node2.__node.looping)node2.__node.looping=false};node.__addOndisconnected(ondelete)}}};var animate2=(node,parent,graph)=>{if(node.__node.animate===true||node.__animation){let fn2=node.__operator;node.__setOperator((...args)=>{if(!("animating"in node.__node))node.__node.animating=true;if(node.__node.animating){if(typeof node.__animation==="function")node.__animation(...args);else fn2(...args);requestAnimationFrame(()=>{node.__operator(...args)})}});if(node.__node.animating||(!("animating"in node.__node)||node.__node.animating)&&node.__animation)setTimeout(()=>{requestAnimationFrame(node.__operator)},10);let ondelete=node2=>{if(node2.__node.animating)node2.__node.animating=false};node.__addOndisconnected(ondelete)}};var branching2=(node,parent,graph)=>{if(typeof node.__branch==="object"&&node.__operator&&!node.__branchApplied){let fn2=node.__operator;node.__branchApplied=true;node.__operator=(...args)=>{let result=fn2(...args);for(const key in node.__branch){let triggered=()=>{if(typeof node.__branch[key].then==="function"){node.__branch[key].then(result)}else if(node.__branch[key].then instanceof GraphNode2&&node.__branch[key].then.__operator){node.__branch[key].then.__operator(result)}else result=node.__branch[key].then};if(typeof node.__branch[key].if==="function"){if(node.__branch[key].if(result)==true){triggered()}}else if(node.__branch[key].if===result){triggered()}}return result}}if(node.__listeners){for(const key in node.__listeners){if(typeof node.__listeners[key]==="object"){if(node.__listeners[key].branch&&!node.__listeners[key].branchApplied){let fn2=node.__listeners[key].callback;node.__listeners[key].branchApplied=true;node.__listeners.callback=ret=>{let triggered=()=>{if(typeof node.__listeners[key].branch.then==="function"){ret=node.__listeners[key].branch.then(ret)}else if(node.__listeners[key].branch.then instanceof GraphNode2&&node.__listeners[key].branch.then.__operator){ret=node.__listeners[key].branch.then.__operator(ret)}else ret=node.__listeners[key].branch.then};if(typeof node.__listeners[key].branch.if==="function"){if(node.__listeners[key].branch.if(ret)){triggered()}}else if(node.__listeners[key].branch.if===ret){triggered()}return fn2(ret)}}}}}};var triggerListenerOncreate2=(node,parent,graph)=>{if(node.__listeners){for(const key in node.__listeners){if(typeof node.__listeners[key]==="object"){if(node.__listeners[key].oncreate){node.__listeners[key].callback(node.__listeners[key].oncreate)}}}}};var bindListener2=(node,parent,graph)=>{if(node.__listeners){for(const key in node.__listeners){if(typeof node.__listeners[key]==="object"){if(typeof node.__listeners[key].binding==="object"){node.__listeners.callback=node.__listeners.callback.bind(node.__listeners[key].binding)}}}}};var transformListenerResult2=(node,parent,graph)=>{if(node.__listeners){for(const key in node.__listeners){if(typeof node.__listeners[key]==="object"){if(typeof node.__listeners[key].transform==="function"&&!node.__listeners[key].transformApplied){let fn2=node.__listeners[key].callback;node.__listeners[key].transformApplied=true;node.__listeners.callback=ret=>{ret=node.__listeners[key].transform(ret);return fn2(ret)}}}}}};var substitute__operator2=(node,parent,graph)=>{if(node.post&&!node.__operator){node.__setOperator(node.post)}else if(!node.__operator&&typeof node.get=="function"){node.__setOperator(node.get)}if(!node.get&&node.__operator){node.get=node.__operator}if(node.aliases){node.aliases.forEach(a=>{graph.set(a,node);let ondelete=node2=>{graph.__node.nodes.delete(a)};node.__addOndisconnected(ondelete)})}if(typeof graph.__node.roots?.[node.__node.tag]==="object"&&node.get)graph.__node.roots[node.__node.tag].get=node.get};var loaders2={backprop:backprop2,loop:loop2,animate:animate2,branching:branching2,triggerListenerOncreate:triggerListenerOncreate2,bindListener:bindListener2,transformListenerResult:transformListenerResult2,substitute__operator:substitute__operator2};var Service2=class extends Graph2{constructor(options){super({...options,loaders:options?.loaders?Object.assign({...loaders2},options.loaders):{...loaders2}});this.name=`service${Math.floor(Math.random()*1e15)}`;this.addServices=services=>{for(const s in services){if(typeof services[s]==="function")services[s]=new services[s];if(services[s]?.__node?.loaders)Object.assign(this.__node.loaders,services[s].__node.loaders);if(services[s]?.__node?.nodes){services[s].__node.nodes.forEach((n,tag)=>{if(!this.get(tag)){this.set(tag,n)}else this.set(s+"."+tag,n)});this.__node.nodes.forEach((n,k2)=>{if(!services[s].__node.nodes.get(k2))services[s].__node.nodes.set(k2,n)});let set=this.set;this.set=(tag,node)=>{services[s].set(tag,node);return set(tag,node)};let del=this.delete;this.delete=tag=>{services[s].delete(tag);return del(tag)}}else if(typeof services[s]==="object"){this.load(services[s])}}};this.handleMethod=(route,method,args)=>{let m=method.toLowerCase();let src=this.__node.nodes.get(route);if(!src){src=this.__node.roots[route]}if(src?.[m]){if(typeof src[m]!=="function"){if(args)src[m]=args;return src[m]}else return src[m](args)}else return this.handleServiceMessage({route,args,method})};this.transmit=(...args)=>{if(typeof args[0]==="object"){if(args[0].method){return this.handleMethod(args[0].route,args[0].method,args[0].args)}else if(args[0].route){return this.handleServiceMessage(args[0])}else if(args[0].node){return this.handleGraphNodeCall(args[0].node,args[0].args)}else if(this.__node.keepState){if(args[0].route)this.setState({[args[0].route]:args[0].args});if(args[0].node)this.setState({[args[0].node]:args[0].args})}return args}else return args};this.receive=(...args)=>{if(args[0]){if(typeof args[0]==="string"){let substr=args[0].substring(0,8);if(substr.includes("{")||substr.includes("[")){if(substr.includes("\\\\"))args[0]=args[0].replace(/\\\\/g,"");if(args[0][0]===\'"\'){args[0]=args[0].substring(1,args[0].length-1)};args[0]=JSON.parse(args[0])}}}if(typeof args[0]==="object"){if(args[0].method){return this.handleMethod(args[0].route,args[0].method,args[0].args)}else if(args[0].route){return this.handleServiceMessage(args[0])}else if(args[0].node){return this.handleGraphNodeCall(args[0].node,args[0].args)}else if(this.__node.keepState){if(args[0].route)this.setState({[args[0].route]:args[0].args});if(args[0].node)this.setState({[args[0].node]:args[0].args})}return args}else return args};this.pipe=(source,destination,endpoint,method,callback)=>{if(source instanceof GraphNode2){if(callback)return this.subscribe(source,res=>{let mod=callback(res);if(mod!==void 0)this.transmit({route:destination,args:mod,method});else this.transmit({route:destination,args:res,method},endpoint)});else return this.subscribe(source,res=>{this.transmit({route:destination,args:res,method},endpoint)})}else if(typeof source==="string")return this.subscribe(source,res=>{this.transmit({route:destination,args:res,method},endpoint)})};this.pipeOnce=(source,destination,endpoint,method,callback)=>{if(source instanceof GraphNode2){if(callback)return source.__node.state.subscribeEventOnce(source.__node.unique,res=>{let mod=callback(res);if(mod!==void 0)this.transmit({route:destination,args:mod,method});else this.transmit({route:destination,args:res,method},endpoint)});else return this.__node.state.subscribeEventOnce(source.__node.unique,res=>{this.transmit({route:destination,args:res,method},endpoint)})}else if(typeof source==="string")return this.__node.state.subscribeEventOnce(this.__node.nodes.get(source).__node.unique,res=>{this.transmit({route:destination,args:res,method},endpoint)})};this.terminate=(...args)=>{};this.isTypedArray=isTypedArray2;this.recursivelyAssign=recursivelyAssign22;this.spliceTypedArray=spliceTypedArray2;this.ping=()=>{console.log("pinged!");return"pong"};this.echo=(...args)=>{this.transmit(...args);return args};if(options?.services)this.addServices(options.services);this.load(this)}handleServiceMessage(message){let call;if(typeof message==="object"){if(message.route)call=message.route;else if(message.node)call=message.node}if(call){if(Array.isArray(message.args))return this.run(call,...message.args);else return this.run(call,message.args)}else return message}handleGraphNodeCall(route,args){if(!route)return args;if(args?.args){this.handleServiceMessage(args)}else if(Array.isArray(args))return this.run(route,...args);else return this.run(route,args)}};function isTypedArray2(x22){return ArrayBuffer.isView(x22)&&Object.prototype.toString.call(x22)!=="[object DataView]"}var recursivelyAssign22=(target,obj)=>{for(const key in obj){if(typeof obj[key]==="object"&&!Array.isArray(obj[key])){if(typeof target[key]==="object"&&!Array.isArray(target[key]))recursivelyAssign22(target[key],obj[key]);else target[key]=recursivelyAssign22({},obj[key])}else target[key]=obj[key]}return target};function spliceTypedArray2(arr,start,end){let s=arr.subarray(0,start);let e;if(end){e=arr.subarray(end+1)}let ta2;if(s.length>0||e?.length>0)ta2=new arr.constructor(s.length+e.length);if(ta2){if(s.length>0)ta2.set(s);if(e&&e.length>0)ta2.set(e,s.length)}return ta2}var __create4=Object.create;var __defProp4=Object.defineProperty;var __getOwnPropDesc4=Object.getOwnPropertyDescriptor;var __getOwnPropNames4=Object.getOwnPropertyNames;var __getProtoOf4=Object.getPrototypeOf;var __hasOwnProp4=Object.prototype.hasOwnProperty;var __require22=(x22=>typeof __require3!=="undefined"?__require3:typeof Proxy!=="undefined"?new Proxy(x22,{get:(a,b2)=>(typeof __require3!=="undefined"?__require3:a)[b2]}):x22)(function(x22){if(typeof __require3!=="undefined")return __require3.apply(this,arguments);throw new Error(\'Dynamic require of "\'+x22+\'" is not supported\')});var __commonJS4=(cb,mod)=>function __require222(){return mod||(0,cb[__getOwnPropNames4(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports};var __copyProps4=(to2,from,except,desc)=>{if(from&&typeof from==="object"||typeof from==="function"){for(let key of __getOwnPropNames4(from))if(!__hasOwnProp4.call(to2,key)&&key!==except)__defProp4(to2,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc4(from,key))||desc.enumerable})}return to2};var __toESM4=(mod,isNodeMode,target)=>(target=mod!=null?__create4(__getProtoOf4(mod)):{},__copyProps4(isNodeMode||!mod||!mod.__esModule?__defProp4(target,"default",{value:mod,enumerable:true}):target,mod));var require_gpu_browser_min=__commonJS4({"src/gpu-browser.min.js"(exports,module2){"use strict";(function(f){if(typeof exports==="object"&&typeof module2!=="undefined"){module2.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g3;if(typeof window!=="undefined"){g3=window}else if(typeof global!=="undefined"){g3=global}else if(typeof self!=="undefined"){g3=self}else{g3=this}f()}})(function(){var define2,module22,exports2;return function(){function r(e,n,t2){function o2(i2,f){if(!n[i2]){if(!e[i2]){var c2="function"==typeof __require22&&__require22;if(!f&&c2)return c2(i2,true);if(u2)return u2(i2,true);var a=new Error("Cannot find module \'"+i2+"\'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i2]={exports:{}};e[i2][0].call(p.exports,function(r2){var n2=e[i2][1][r2];return o2(n2||r2)},p,p.exports,r,e,n,t2)}return n[i2].exports}for(var u2="function"==typeof __require22&&__require22,i=0;i<t2.length;i++)o2(t2[i]);return o2}return r}()({1:[function(require2,module3,exports3){(function(global2,factory){typeof exports3==="object"&&typeof module3!=="undefined"?factory(exports3):typeof define2==="function"&&define2.amd?define2(["exports"],factory):(global2=global2||self,factory(global2.acorn={}))})(this,function(exports4){"use strict";var reservedWords={3:"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",5:"class enum extends super const export import",6:"enum",strict:"implements interface let package private protected public static yield",strictBind:"eval arguments"};var ecma5AndLessKeywords="break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this";var keywords={5:ecma5AndLessKeywords,"5module":ecma5AndLessKeywords+" export import",6:ecma5AndLessKeywords+" const class extends export import super"};var keywordRelationalOperator=/^in(stanceof)?$/;var nonASCIIidentifierStartChars="\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC";var nonASCIIidentifierChars="\\u200C\\u200D\\xB7\\u0300-\\u036F\\u0387\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u0669\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07C0-\\u07C9\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09E6-\\u09EF\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AE6-\\u0AEF\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B66-\\u0B6F\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C04\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CE6-\\u0CEF\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D66-\\u0D6F\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0E50-\\u0E59\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1040-\\u1049\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109D\\u135D-\\u135F\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u194F\\u19D0-\\u19DA\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AB0-\\u1ABD\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1C40-\\u1C49\\u1C50-\\u1C59\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u203F\\u2040\\u2054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA620-\\uA629\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F1\\uA8FF-\\uA909\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9D0-\\uA9D9\\uA9E5\\uA9F0-\\uA9F9\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA50-\\uAA59\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F";var nonASCIIidentifierStart=new RegExp("["+nonASCIIidentifierStartChars+"]");var nonASCIIidentifier=new RegExp("["+nonASCIIidentifierStartChars+nonASCIIidentifierChars+"]");nonASCIIidentifierStartChars=nonASCIIidentifierChars=null;var astralIdentifierStartCodes=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,155,22,13,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,0,33,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,0,161,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,754,9486,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];var astralIdentifierCodes=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,232,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,792487,239];function isInAstralSet(code,set){var pos=65536;for(var i=0;i<set.length;i+=2){pos+=set[i];if(pos>code){return false}pos+=set[i+1];if(pos>=code){return true}}}function isIdentifierStart(code,astral){if(code<65){return code===36}if(code<91){return true}if(code<97){return code===95}if(code<123){return true}if(code<=65535){return code>=170&&nonASCIIidentifierStart.test(String.fromCharCode(code))}if(astral===false){return false}return isInAstralSet(code,astralIdentifierStartCodes)}function isIdentifierChar(code,astral){if(code<48){return code===36}if(code<58){return true}if(code<65){return false}if(code<91){return true}if(code<97){return code===95}if(code<123){return true}if(code<=65535){return code>=170&&nonASCIIidentifier.test(String.fromCharCode(code))}if(astral===false){return false}return isInAstralSet(code,astralIdentifierStartCodes)||isInAstralSet(code,astralIdentifierCodes)}var TokenType=function TokenType2(label,conf){if(conf===void 0)conf={};this.label=label;this.keyword=conf.keyword;this.beforeExpr=!!conf.beforeExpr;this.startsExpr=!!conf.startsExpr;this.isLoop=!!conf.isLoop;this.isAssign=!!conf.isAssign;this.prefix=!!conf.prefix;this.postfix=!!conf.postfix;this.binop=conf.binop||null;this.updateContext=null};function binop(name2,prec){return new TokenType(name2,{beforeExpr:true,binop:prec})}var beforeExpr={beforeExpr:true},startsExpr={startsExpr:true};var keywords$1={};function kw(name2,options){if(options===void 0)options={};options.keyword=name2;return keywords$1[name2]=new TokenType(name2,options)}var types={num:new TokenType("num",startsExpr),regexp:new TokenType("regexp",startsExpr),string:new TokenType("string",startsExpr),name:new TokenType("name",startsExpr),eof:new TokenType("eof"),bracketL:new TokenType("[",{beforeExpr:true,startsExpr:true}),bracketR:new TokenType("]"),braceL:new TokenType("{",{beforeExpr:true,startsExpr:true}),braceR:new TokenType("}"),parenL:new TokenType("(",{beforeExpr:true,startsExpr:true}),parenR:new TokenType(")"),comma:new TokenType(",",beforeExpr),semi:new TokenType(";",beforeExpr),colon:new TokenType(":",beforeExpr),dot:new TokenType("."),question:new TokenType("?",beforeExpr),arrow:new TokenType("=>",beforeExpr),template:new TokenType("template"),invalidTemplate:new TokenType("invalidTemplate"),ellipsis:new TokenType("...",beforeExpr),backQuote:new TokenType("`",startsExpr),dollarBraceL:new TokenType("${",{beforeExpr:true,startsExpr:true}),eq:new TokenType("=",{beforeExpr:true,isAssign:true}),assign:new TokenType("_=",{beforeExpr:true,isAssign:true}),incDec:new TokenType("++/--",{prefix:true,postfix:true,startsExpr:true}),prefix:new TokenType("!/~",{beforeExpr:true,prefix:true,startsExpr:true}),logicalOR:binop("||",1),logicalAND:binop("&&",2),bitwiseOR:binop("|",3),bitwiseXOR:binop("^",4),bitwiseAND:binop("&",5),equality:binop("==/!=/===/!==",6),relational:binop("</>/<=/>=",7),bitShift:binop("<</>>/>>>",8),plusMin:new TokenType("+/-",{beforeExpr:true,binop:9,prefix:true,startsExpr:true}),modulo:binop("%",10),star:binop("*",10),slash:binop("/",10),starstar:new TokenType("**",{beforeExpr:true}),_break:kw("break"),_case:kw("case",beforeExpr),_catch:kw("catch"),_continue:kw("continue"),_debugger:kw("debugger"),_default:kw("default",beforeExpr),_do:kw("do",{isLoop:true,beforeExpr:true}),_else:kw("else",beforeExpr),_finally:kw("finally"),_for:kw("for",{isLoop:true}),_function:kw("function",startsExpr),_if:kw("if"),_return:kw("return",beforeExpr),_switch:kw("switch"),_throw:kw("throw",beforeExpr),_try:kw("try"),_var:kw("var"),_const:kw("const"),_while:kw("while",{isLoop:true}),_with:kw("with"),_new:kw("new",{beforeExpr:true,startsExpr:true}),_this:kw("this",startsExpr),_super:kw("super",startsExpr),_class:kw("class",startsExpr),_extends:kw("extends",beforeExpr),_export:kw("export"),_import:kw("import",startsExpr),_null:kw("null",startsExpr),_true:kw("true",startsExpr),_false:kw("false",startsExpr),_in:kw("in",{beforeExpr:true,binop:7}),_instanceof:kw("instanceof",{beforeExpr:true,binop:7}),_typeof:kw("typeof",{beforeExpr:true,prefix:true,startsExpr:true}),_void:kw("void",{beforeExpr:true,prefix:true,startsExpr:true}),_delete:kw("delete",{beforeExpr:true,prefix:true,startsExpr:true})};var lineBreak=/\\r\\n?|\\n|\\u2028|\\u2029/;var lineBreakG=new RegExp(lineBreak.source,"g");function isNewLine(code,ecma2019String){return code===10||code===13||!ecma2019String&&(code===8232||code===8233)}var nonASCIIwhitespace=/[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;var skipWhiteSpace=/(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;var ref=Object.prototype;var hasOwnProperty=ref.hasOwnProperty;var toString=ref.toString;function has(obj,propName){return hasOwnProperty.call(obj,propName)}var isArray=Array.isArray||function(obj){return toString.call(obj)==="[object Array]"};function wordsRegexp(words){return new RegExp("^(?:"+words.replace(/ /g,"|")+")$")}var Position=function Position2(line,col){this.line=line;this.column=col};Position.prototype.offset=function offset(n){return new Position(this.line,this.column+n)};var SourceLocation=function SourceLocation2(p,start,end){this.start=start;this.end=end;if(p.sourceFile!==null){this.source=p.sourceFile}};function getLineInfo(input,offset){for(var line=1,cur=0;;){lineBreakG.lastIndex=cur;var match=lineBreakG.exec(input);if(match&&match.index<offset){++line;cur=match.index+match[0].length}else{return new Position(line,offset-cur)}}}var defaultOptions={ecmaVersion:10,sourceType:"script",onInsertedSemicolon:null,onTrailingComma:null,allowReserved:null,allowReturnOutsideFunction:false,allowImportExportEverywhere:false,allowAwaitOutsideFunction:false,allowHashBang:false,locations:false,onToken:null,onComment:null,ranges:false,program:null,sourceFile:null,directSourceFile:null,preserveParens:false};function getOptions(opts){var options={};for(var opt in defaultOptions){options[opt]=opts&&has(opts,opt)?opts[opt]:defaultOptions[opt]}if(options.ecmaVersion>=2015){options.ecmaVersion-=2009}if(options.allowReserved==null){options.allowReserved=options.ecmaVersion<5}if(isArray(options.onToken)){var tokens=options.onToken;options.onToken=function(token){return tokens.push(token)}}if(isArray(options.onComment)){options.onComment=pushComment(options,options.onComment)}return options}function pushComment(options,array){return function(block,text,start,end,startLoc,endLoc){var comment={type:block?"Block":"Line",value:text,start,end};if(options.locations){comment.loc=new SourceLocation(this,startLoc,endLoc)}if(options.ranges){comment.range=[start,end]}array.push(comment)}}var SCOPE_TOP=1,SCOPE_FUNCTION=2,SCOPE_VAR=SCOPE_TOP|SCOPE_FUNCTION,SCOPE_ASYNC=4,SCOPE_GENERATOR=8,SCOPE_ARROW=16,SCOPE_SIMPLE_CATCH=32,SCOPE_SUPER=64,SCOPE_DIRECT_SUPER=128;function functionFlags(async,generator){return SCOPE_FUNCTION|(async?SCOPE_ASYNC:0)|(generator?SCOPE_GENERATOR:0)}var BIND_NONE=0,BIND_VAR=1,BIND_LEXICAL=2,BIND_FUNCTION=3,BIND_SIMPLE_CATCH=4,BIND_OUTSIDE=5;var Parser=function Parser2(options,input,startPos){this.options=options=getOptions(options);this.sourceFile=options.sourceFile;this.keywords=wordsRegexp(keywords[options.ecmaVersion>=6?6:options.sourceType==="module"?"5module":5]);var reserved="";if(options.allowReserved!==true){for(var v3=options.ecmaVersion;;v3--){if(reserved=reservedWords[v3]){break}}if(options.sourceType==="module"){reserved+=" await"}}this.reservedWords=wordsRegexp(reserved);var reservedStrict=(reserved?reserved+" ":"")+reservedWords.strict;this.reservedWordsStrict=wordsRegexp(reservedStrict);this.reservedWordsStrictBind=wordsRegexp(reservedStrict+" "+reservedWords.strictBind);this.input=String(input);this.containsEsc=false;if(startPos){this.pos=startPos;this.lineStart=this.input.lastIndexOf("\\n",startPos-1)+1;this.curLine=this.input.slice(0,this.lineStart).split(lineBreak).length}else{this.pos=this.lineStart=0;this.curLine=1}this.type=types.eof;this.value=null;this.start=this.end=this.pos;this.startLoc=this.endLoc=this.curPosition();this.lastTokEndLoc=this.lastTokStartLoc=null;this.lastTokStart=this.lastTokEnd=this.pos;this.context=this.initialContext();this.exprAllowed=true;this.inModule=options.sourceType==="module";this.strict=this.inModule||this.strictDirective(this.pos);this.potentialArrowAt=-1;this.yieldPos=this.awaitPos=this.awaitIdentPos=0;this.labels=[];this.undefinedExports={};if(this.pos===0&&options.allowHashBang&&this.input.slice(0,2)==="#!"){this.skipLineComment(2)}this.scopeStack=[];this.enterScope(SCOPE_TOP);this.regexpState=null};var prototypeAccessors={inFunction:{configurable:true},inGenerator:{configurable:true},inAsync:{configurable:true},allowSuper:{configurable:true},allowDirectSuper:{configurable:true},treatFunctionsAsVar:{configurable:true}};Parser.prototype.parse=function parse2(){var node=this.options.program||this.startNode();this.nextToken();return this.parseTopLevel(node)};prototypeAccessors.inFunction.get=function(){return(this.currentVarScope().flags&SCOPE_FUNCTION)>0};prototypeAccessors.inGenerator.get=function(){return(this.currentVarScope().flags&SCOPE_GENERATOR)>0};prototypeAccessors.inAsync.get=function(){return(this.currentVarScope().flags&SCOPE_ASYNC)>0};prototypeAccessors.allowSuper.get=function(){return(this.currentThisScope().flags&SCOPE_SUPER)>0};prototypeAccessors.allowDirectSuper.get=function(){return(this.currentThisScope().flags&SCOPE_DIRECT_SUPER)>0};prototypeAccessors.treatFunctionsAsVar.get=function(){return this.treatFunctionsAsVarInScope(this.currentScope())};Parser.prototype.inNonArrowFunction=function inNonArrowFunction(){return(this.currentThisScope().flags&SCOPE_FUNCTION)>0};Parser.extend=function extend(){var plugins=[],len=arguments.length;while(len--)plugins[len]=arguments[len];var cls=this;for(var i=0;i<plugins.length;i++){cls=plugins[i](cls)}return cls};Parser.parse=function parse2(input,options){return new this(options,input).parse()};Parser.parseExpressionAt=function parseExpressionAt2(input,pos,options){var parser=new this(options,input,pos);parser.nextToken();return parser.parseExpression()};Parser.tokenizer=function tokenizer2(input,options){return new this(options,input)};Object.defineProperties(Parser.prototype,prototypeAccessors);var pp=Parser.prototype;var literal=/^(?:\'((?:\\\\.|[^\'])*?)\'|"((?:\\\\.|[^"])*?)")/;pp.strictDirective=function(start){for(;;){skipWhiteSpace.lastIndex=start;start+=skipWhiteSpace.exec(this.input)[0].length;var match=literal.exec(this.input.slice(start));if(!match){return false}if((match[1]||match[2])==="use strict"){return true}start+=match[0].length;skipWhiteSpace.lastIndex=start;start+=skipWhiteSpace.exec(this.input)[0].length;if(this.input[start]===";"){start++}}};pp.eat=function(type){if(this.type===type){this.next();return true}else{return false}};pp.isContextual=function(name2){return this.type===types.name&&this.value===name2&&!this.containsEsc};pp.eatContextual=function(name2){if(!this.isContextual(name2)){return false}this.next();return true};pp.expectContextual=function(name2){if(!this.eatContextual(name2)){this.unexpected()}};pp.canInsertSemicolon=function(){return this.type===types.eof||this.type===types.braceR||lineBreak.test(this.input.slice(this.lastTokEnd,this.start))};pp.insertSemicolon=function(){if(this.canInsertSemicolon()){if(this.options.onInsertedSemicolon){this.options.onInsertedSemicolon(this.lastTokEnd,this.lastTokEndLoc)}return true}};pp.semicolon=function(){if(!this.eat(types.semi)&&!this.insertSemicolon()){this.unexpected()}};pp.afterTrailingComma=function(tokType,notNext){if(this.type===tokType){if(this.options.onTrailingComma){this.options.onTrailingComma(this.lastTokStart,this.lastTokStartLoc)}if(!notNext){this.next()}return true}};pp.expect=function(type){this.eat(type)||this.unexpected()};pp.unexpected=function(pos){this.raise(pos!=null?pos:this.start,"Unexpected token")};function DestructuringErrors(){this.shorthandAssign=this.trailingComma=this.parenthesizedAssign=this.parenthesizedBind=this.doubleProto=-1}pp.checkPatternErrors=function(refDestructuringErrors,isAssign){if(!refDestructuringErrors){return}if(refDestructuringErrors.trailingComma>-1){this.raiseRecoverable(refDestructuringErrors.trailingComma,"Comma is not permitted after the rest element")}var parens=isAssign?refDestructuringErrors.parenthesizedAssign:refDestructuringErrors.parenthesizedBind;if(parens>-1){this.raiseRecoverable(parens,"Parenthesized pattern")}};pp.checkExpressionErrors=function(refDestructuringErrors,andThrow){if(!refDestructuringErrors){return false}var shorthandAssign=refDestructuringErrors.shorthandAssign;var doubleProto=refDestructuringErrors.doubleProto;if(!andThrow){return shorthandAssign>=0||doubleProto>=0}if(shorthandAssign>=0){this.raise(shorthandAssign,"Shorthand property assignments are valid only in destructuring patterns")}if(doubleProto>=0){this.raiseRecoverable(doubleProto,"Redefinition of __proto__ property")}};pp.checkYieldAwaitInDefaultParams=function(){if(this.yieldPos&&(!this.awaitPos||this.yieldPos<this.awaitPos)){this.raise(this.yieldPos,"Yield expression cannot be a default value")}if(this.awaitPos){this.raise(this.awaitPos,"Await expression cannot be a default value")}};pp.isSimpleAssignTarget=function(expr){if(expr.type==="ParenthesizedExpression"){return this.isSimpleAssignTarget(expr.expression)}return expr.type==="Identifier"||expr.type==="MemberExpression"};var pp$1=Parser.prototype;pp$1.parseTopLevel=function(node){var exports5={};if(!node.body){node.body=[]}while(this.type!==types.eof){var stmt=this.parseStatement(null,true,exports5);node.body.push(stmt)}if(this.inModule){for(var i=0,list=Object.keys(this.undefinedExports);i<list.length;i+=1){var name2=list[i];this.raiseRecoverable(this.undefinedExports[name2].start,"Export \'"+name2+"\' is not defined")}}this.adaptDirectivePrologue(node.body);this.next();node.sourceType=this.options.sourceType;return this.finishNode(node,"Program")};var loopLabel={kind:"loop"},switchLabel={kind:"switch"};pp$1.isLet=function(context){if(this.options.ecmaVersion<6||!this.isContextual("let")){return false}skipWhiteSpace.lastIndex=this.pos;var skip=skipWhiteSpace.exec(this.input);var next=this.pos+skip[0].length,nextCh=this.input.charCodeAt(next);if(nextCh===91){return true}if(context){return false}if(nextCh===123){return true}if(isIdentifierStart(nextCh,true)){var pos=next+1;while(isIdentifierChar(this.input.charCodeAt(pos),true)){++pos}var ident=this.input.slice(next,pos);if(!keywordRelationalOperator.test(ident)){return true}}return false};pp$1.isAsyncFunction=function(){if(this.options.ecmaVersion<8||!this.isContextual("async")){return false}skipWhiteSpace.lastIndex=this.pos;var skip=skipWhiteSpace.exec(this.input);var next=this.pos+skip[0].length;return!lineBreak.test(this.input.slice(this.pos,next))&&this.input.slice(next,next+8)==="function"&&(next+8===this.input.length||!isIdentifierChar(this.input.charAt(next+8)))};pp$1.parseStatement=function(context,topLevel,exports5){var starttype=this.type,node=this.startNode(),kind;if(this.isLet(context)){starttype=types._var;kind="let"}switch(starttype){case types._break:case types._continue:return this.parseBreakContinueStatement(node,starttype.keyword);case types._debugger:return this.parseDebuggerStatement(node);case types._do:return this.parseDoStatement(node);case types._for:return this.parseForStatement(node);case types._function:if(context&&(this.strict||context!=="if"&&context!=="label")&&this.options.ecmaVersion>=6){this.unexpected()}return this.parseFunctionStatement(node,false,!context);case types._class:if(context){this.unexpected()}return this.parseClass(node,true);case types._if:return this.parseIfStatement(node);case types._return:return this.parseReturnStatement(node);case types._switch:return this.parseSwitchStatement(node);case types._throw:return this.parseThrowStatement(node);case types._try:return this.parseTryStatement(node);case types._const:case types._var:kind=kind||this.value;if(context&&kind!=="var"){this.unexpected()}return this.parseVarStatement(node,kind);case types._while:return this.parseWhileStatement(node);case types._with:return this.parseWithStatement(node);case types.braceL:return this.parseBlock(true,node);case types.semi:return this.parseEmptyStatement(node);case types._export:case types._import:if(this.options.ecmaVersion>10&&starttype===types._import){skipWhiteSpace.lastIndex=this.pos;var skip=skipWhiteSpace.exec(this.input);var next=this.pos+skip[0].length,nextCh=this.input.charCodeAt(next);if(nextCh===40){return this.parseExpressionStatement(node,this.parseExpression())}}if(!this.options.allowImportExportEverywhere){if(!topLevel){this.raise(this.start,"\'import\' and \'export\' may only appear at the top level")}if(!this.inModule){this.raise(this.start,"\'import\' and \'export\' may appear only with \'sourceType: module\'")}}return starttype===types._import?this.parseImport(node):this.parseExport(node,exports5);default:if(this.isAsyncFunction()){if(context){this.unexpected()}this.next();return this.parseFunctionStatement(node,true,!context)}var maybeName=this.value,expr=this.parseExpression();if(starttype===types.name&&expr.type==="Identifier"&&this.eat(types.colon)){return this.parseLabeledStatement(node,maybeName,expr,context)}else{return this.parseExpressionStatement(node,expr)}}};pp$1.parseBreakContinueStatement=function(node,keyword){var isBreak=keyword==="break";this.next();if(this.eat(types.semi)||this.insertSemicolon()){node.label=null}else if(this.type!==types.name){this.unexpected()}else{node.label=this.parseIdent();this.semicolon()}var i=0;for(;i<this.labels.length;++i){var lab=this.labels[i];if(node.label==null||lab.name===node.label.name){if(lab.kind!=null&&(isBreak||lab.kind==="loop")){break}if(node.label&&isBreak){break}}}if(i===this.labels.length){this.raise(node.start,"Unsyntactic "+keyword)}return this.finishNode(node,isBreak?"BreakStatement":"ContinueStatement")};pp$1.parseDebuggerStatement=function(node){this.next();this.semicolon();return this.finishNode(node,"DebuggerStatement")};pp$1.parseDoStatement=function(node){this.next();this.labels.push(loopLabel);node.body=this.parseStatement("do");this.labels.pop();this.expect(types._while);node.test=this.parseParenExpression();if(this.options.ecmaVersion>=6){this.eat(types.semi)}else{this.semicolon()}return this.finishNode(node,"DoWhileStatement")};pp$1.parseForStatement=function(node){this.next();var awaitAt=this.options.ecmaVersion>=9&&(this.inAsync||!this.inFunction&&this.options.allowAwaitOutsideFunction)&&this.eatContextual("await")?this.lastTokStart:-1;this.labels.push(loopLabel);this.enterScope(0);this.expect(types.parenL);if(this.type===types.semi){if(awaitAt>-1){this.unexpected(awaitAt)}return this.parseFor(node,null)}var isLet=this.isLet();if(this.type===types._var||this.type===types._const||isLet){var init$1=this.startNode(),kind=isLet?"let":this.value;this.next();this.parseVar(init$1,true,kind);this.finishNode(init$1,"VariableDeclaration");if((this.type===types._in||this.options.ecmaVersion>=6&&this.isContextual("of"))&&init$1.declarations.length===1){if(this.options.ecmaVersion>=9){if(this.type===types._in){if(awaitAt>-1){this.unexpected(awaitAt)}}else{node.await=awaitAt>-1}}return this.parseForIn(node,init$1)}if(awaitAt>-1){this.unexpected(awaitAt)}return this.parseFor(node,init$1)}var refDestructuringErrors=new DestructuringErrors;var init=this.parseExpression(true,refDestructuringErrors);if(this.type===types._in||this.options.ecmaVersion>=6&&this.isContextual("of")){if(this.options.ecmaVersion>=9){if(this.type===types._in){if(awaitAt>-1){this.unexpected(awaitAt)}}else{node.await=awaitAt>-1}}this.toAssignable(init,false,refDestructuringErrors);this.checkLVal(init);return this.parseForIn(node,init)}else{this.checkExpressionErrors(refDestructuringErrors,true)}if(awaitAt>-1){this.unexpected(awaitAt)}return this.parseFor(node,init)};pp$1.parseFunctionStatement=function(node,isAsync,declarationPosition){this.next();return this.parseFunction(node,FUNC_STATEMENT|(declarationPosition?0:FUNC_HANGING_STATEMENT),false,isAsync)};pp$1.parseIfStatement=function(node){this.next();node.test=this.parseParenExpression();node.consequent=this.parseStatement("if");node.alternate=this.eat(types._else)?this.parseStatement("if"):null;return this.finishNode(node,"IfStatement")};pp$1.parseReturnStatement=function(node){if(!this.inFunction&&!this.options.allowReturnOutsideFunction){this.raise(this.start,"\'return\' outside of function")}this.next();if(this.eat(types.semi)||this.insertSemicolon()){node.argument=null}else{node.argument=this.parseExpression();this.semicolon()}return this.finishNode(node,"ReturnStatement")};pp$1.parseSwitchStatement=function(node){this.next();node.discriminant=this.parseParenExpression();node.cases=[];this.expect(types.braceL);this.labels.push(switchLabel);this.enterScope(0);var cur;for(var sawDefault=false;this.type!==types.braceR;){if(this.type===types._case||this.type===types._default){var isCase=this.type===types._case;if(cur){this.finishNode(cur,"SwitchCase")}node.cases.push(cur=this.startNode());cur.consequent=[];this.next();if(isCase){cur.test=this.parseExpression()}else{if(sawDefault){this.raiseRecoverable(this.lastTokStart,"Multiple default clauses")}sawDefault=true;cur.test=null}this.expect(types.colon)}else{if(!cur){this.unexpected()}cur.consequent.push(this.parseStatement(null))}}this.exitScope();if(cur){this.finishNode(cur,"SwitchCase")}this.next();this.labels.pop();return this.finishNode(node,"SwitchStatement")};pp$1.parseThrowStatement=function(node){this.next();if(lineBreak.test(this.input.slice(this.lastTokEnd,this.start))){this.raise(this.lastTokEnd,"Illegal newline after throw")}node.argument=this.parseExpression();this.semicolon();return this.finishNode(node,"ThrowStatement")};var empty=[];pp$1.parseTryStatement=function(node){this.next();node.block=this.parseBlock();node.handler=null;if(this.type===types._catch){var clause=this.startNode();this.next();if(this.eat(types.parenL)){clause.param=this.parseBindingAtom();var simple=clause.param.type==="Identifier";this.enterScope(simple?SCOPE_SIMPLE_CATCH:0);this.checkLVal(clause.param,simple?BIND_SIMPLE_CATCH:BIND_LEXICAL);this.expect(types.parenR)}else{if(this.options.ecmaVersion<10){this.unexpected()}clause.param=null;this.enterScope(0)}clause.body=this.parseBlock(false);this.exitScope();node.handler=this.finishNode(clause,"CatchClause")}node.finalizer=this.eat(types._finally)?this.parseBlock():null;if(!node.handler&&!node.finalizer){this.raise(node.start,"Missing catch or finally clause")}return this.finishNode(node,"TryStatement")};pp$1.parseVarStatement=function(node,kind){this.next();this.parseVar(node,false,kind);this.semicolon();return this.finishNode(node,"VariableDeclaration")};pp$1.parseWhileStatement=function(node){this.next();node.test=this.parseParenExpression();this.labels.push(loopLabel);node.body=this.parseStatement("while");this.labels.pop();return this.finishNode(node,"WhileStatement")};pp$1.parseWithStatement=function(node){if(this.strict){this.raise(this.start,"\'with\' in strict mode")}this.next();node.object=this.parseParenExpression();node.body=this.parseStatement("with");return this.finishNode(node,"WithStatement")};pp$1.parseEmptyStatement=function(node){this.next();return this.finishNode(node,"EmptyStatement")};pp$1.parseLabeledStatement=function(node,maybeName,expr,context){for(var i$1=0,list=this.labels;i$1<list.length;i$1+=1){var label=list[i$1];if(label.name===maybeName){this.raise(expr.start,"Label \'"+maybeName+"\' is already declared")}}var kind=this.type.isLoop?"loop":this.type===types._switch?"switch":null;for(var i=this.labels.length-1;i>=0;i--){var label$1=this.labels[i];if(label$1.statementStart===node.start){label$1.statementStart=this.start;label$1.kind=kind}else{break}}this.labels.push({name:maybeName,kind,statementStart:this.start});node.body=this.parseStatement(context?context.indexOf("label")===-1?context+"label":context:"label");this.labels.pop();node.label=expr;return this.finishNode(node,"LabeledStatement")};pp$1.parseExpressionStatement=function(node,expr){node.expression=expr;this.semicolon();return this.finishNode(node,"ExpressionStatement")};pp$1.parseBlock=function(createNewLexicalScope,node){if(createNewLexicalScope===void 0)createNewLexicalScope=true;if(node===void 0)node=this.startNode();node.body=[];this.expect(types.braceL);if(createNewLexicalScope){this.enterScope(0)}while(!this.eat(types.braceR)){var stmt=this.parseStatement(null);node.body.push(stmt)}if(createNewLexicalScope){this.exitScope()}return this.finishNode(node,"BlockStatement")};pp$1.parseFor=function(node,init){node.init=init;this.expect(types.semi);node.test=this.type===types.semi?null:this.parseExpression();this.expect(types.semi);node.update=this.type===types.parenR?null:this.parseExpression();this.expect(types.parenR);node.body=this.parseStatement("for");this.exitScope();this.labels.pop();return this.finishNode(node,"ForStatement")};pp$1.parseForIn=function(node,init){var isForIn=this.type===types._in;this.next();if(init.type==="VariableDeclaration"&&init.declarations[0].init!=null&&(!isForIn||this.options.ecmaVersion<8||this.strict||init.kind!=="var"||init.declarations[0].id.type!=="Identifier")){this.raise(init.start,(isForIn?"for-in":"for-of")+" loop variable declaration may not have an initializer")}else if(init.type==="AssignmentPattern"){this.raise(init.start,"Invalid left-hand side in for-loop")}node.left=init;node.right=isForIn?this.parseExpression():this.parseMaybeAssign();this.expect(types.parenR);node.body=this.parseStatement("for");this.exitScope();this.labels.pop();return this.finishNode(node,isForIn?"ForInStatement":"ForOfStatement")};pp$1.parseVar=function(node,isFor,kind){node.declarations=[];node.kind=kind;for(;;){var decl=this.startNode();this.parseVarId(decl,kind);if(this.eat(types.eq)){decl.init=this.parseMaybeAssign(isFor)}else if(kind==="const"&&!(this.type===types._in||this.options.ecmaVersion>=6&&this.isContextual("of"))){this.unexpected()}else if(decl.id.type!=="Identifier"&&!(isFor&&(this.type===types._in||this.isContextual("of")))){this.raise(this.lastTokEnd,"Complex binding patterns require an initialization value")}else{decl.init=null}node.declarations.push(this.finishNode(decl,"VariableDeclarator"));if(!this.eat(types.comma)){break}}return node};pp$1.parseVarId=function(decl,kind){decl.id=this.parseBindingAtom();this.checkLVal(decl.id,kind==="var"?BIND_VAR:BIND_LEXICAL,false)};var FUNC_STATEMENT=1,FUNC_HANGING_STATEMENT=2,FUNC_NULLABLE_ID=4;pp$1.parseFunction=function(node,statement,allowExpressionBody,isAsync){this.initFunction(node);if(this.options.ecmaVersion>=9||this.options.ecmaVersion>=6&&!isAsync){if(this.type===types.star&&statement&FUNC_HANGING_STATEMENT){this.unexpected()}node.generator=this.eat(types.star)}if(this.options.ecmaVersion>=8){node.async=!!isAsync}if(statement&FUNC_STATEMENT){node.id=statement&FUNC_NULLABLE_ID&&this.type!==types.name?null:this.parseIdent();if(node.id&&!(statement&FUNC_HANGING_STATEMENT)){this.checkLVal(node.id,this.strict||node.generator||node.async?this.treatFunctionsAsVar?BIND_VAR:BIND_LEXICAL:BIND_FUNCTION)}}var oldYieldPos=this.yieldPos,oldAwaitPos=this.awaitPos,oldAwaitIdentPos=this.awaitIdentPos;this.yieldPos=0;this.awaitPos=0;this.awaitIdentPos=0;this.enterScope(functionFlags(node.async,node.generator));if(!(statement&FUNC_STATEMENT)){node.id=this.type===types.name?this.parseIdent():null}this.parseFunctionParams(node);this.parseFunctionBody(node,allowExpressionBody,false);this.yieldPos=oldYieldPos;this.awaitPos=oldAwaitPos;this.awaitIdentPos=oldAwaitIdentPos;return this.finishNode(node,statement&FUNC_STATEMENT?"FunctionDeclaration":"FunctionExpression")};pp$1.parseFunctionParams=function(node){this.expect(types.parenL);node.params=this.parseBindingList(types.parenR,false,this.options.ecmaVersion>=8);this.checkYieldAwaitInDefaultParams()};pp$1.parseClass=function(node,isStatement){this.next();var oldStrict=this.strict;this.strict=true;this.parseClassId(node,isStatement);this.parseClassSuper(node);var classBody=this.startNode();var hadConstructor=false;classBody.body=[];this.expect(types.braceL);while(!this.eat(types.braceR)){var element=this.parseClassElement(node.superClass!==null);if(element){classBody.body.push(element);if(element.type==="MethodDefinition"&&element.kind==="constructor"){if(hadConstructor){this.raise(element.start,"Duplicate constructor in the same class")}hadConstructor=true}}}node.body=this.finishNode(classBody,"ClassBody");this.strict=oldStrict;return this.finishNode(node,isStatement?"ClassDeclaration":"ClassExpression")};pp$1.parseClassElement=function(constructorAllowsSuper){var this$1=this;if(this.eat(types.semi)){return null}var method=this.startNode();var tryContextual=function(k2,noLineBreak){if(noLineBreak===void 0)noLineBreak=false;var start=this$1.start,startLoc=this$1.startLoc;if(!this$1.eatContextual(k2)){return false}if(this$1.type!==types.parenL&&(!noLineBreak||!this$1.canInsertSemicolon())){return true}if(method.key){this$1.unexpected()}method.computed=false;method.key=this$1.startNodeAt(start,startLoc);method.key.name=k2;this$1.finishNode(method.key,"Identifier");return false};method.kind="method";method.static=tryContextual("static");var isGenerator=this.eat(types.star);var isAsync=false;if(!isGenerator){if(this.options.ecmaVersion>=8&&tryContextual("async",true)){isAsync=true;isGenerator=this.options.ecmaVersion>=9&&this.eat(types.star)}else if(tryContextual("get")){method.kind="get"}else if(tryContextual("set")){method.kind="set"}}if(!method.key){this.parsePropertyName(method)}var key=method.key;var allowsDirectSuper=false;if(!method.computed&&!method.static&&(key.type==="Identifier"&&key.name==="constructor"||key.type==="Literal"&&key.value==="constructor")){if(method.kind!=="method"){this.raise(key.start,"Constructor can\'t have get/set modifier")}if(isGenerator){this.raise(key.start,"Constructor can\'t be a generator")}if(isAsync){this.raise(key.start,"Constructor can\'t be an async method")}method.kind="constructor";allowsDirectSuper=constructorAllowsSuper}else if(method.static&&key.type==="Identifier"&&key.name==="prototype"){this.raise(key.start,"Classes may not have a static property named prototype")}this.parseClassMethod(method,isGenerator,isAsync,allowsDirectSuper);if(method.kind==="get"&&method.value.params.length!==0){this.raiseRecoverable(method.value.start,"getter should have no params")}if(method.kind==="set"&&method.value.params.length!==1){this.raiseRecoverable(method.value.start,"setter should have exactly one param")}if(method.kind==="set"&&method.value.params[0].type==="RestElement"){this.raiseRecoverable(method.value.params[0].start,"Setter cannot use rest params")}return method};pp$1.parseClassMethod=function(method,isGenerator,isAsync,allowsDirectSuper){method.value=this.parseMethod(isGenerator,isAsync,allowsDirectSuper);return this.finishNode(method,"MethodDefinition")};pp$1.parseClassId=function(node,isStatement){if(this.type===types.name){node.id=this.parseIdent();if(isStatement){this.checkLVal(node.id,BIND_LEXICAL,false)}}else{if(isStatement===true){this.unexpected()}node.id=null}};pp$1.parseClassSuper=function(node){node.superClass=this.eat(types._extends)?this.parseExprSubscripts():null};pp$1.parseExport=function(node,exports5){this.next();if(this.eat(types.star)){this.expectContextual("from");if(this.type!==types.string){this.unexpected()}node.source=this.parseExprAtom();this.semicolon();return this.finishNode(node,"ExportAllDeclaration")}if(this.eat(types._default)){this.checkExport(exports5,"default",this.lastTokStart);var isAsync;if(this.type===types._function||(isAsync=this.isAsyncFunction())){var fNode=this.startNode();this.next();if(isAsync){this.next()}node.declaration=this.parseFunction(fNode,FUNC_STATEMENT|FUNC_NULLABLE_ID,false,isAsync)}else if(this.type===types._class){var cNode=this.startNode();node.declaration=this.parseClass(cNode,"nullableID")}else{node.declaration=this.parseMaybeAssign();this.semicolon()}return this.finishNode(node,"ExportDefaultDeclaration")}if(this.shouldParseExportStatement()){node.declaration=this.parseStatement(null);if(node.declaration.type==="VariableDeclaration"){this.checkVariableExport(exports5,node.declaration.declarations)}else{this.checkExport(exports5,node.declaration.id.name,node.declaration.id.start)}node.specifiers=[];node.source=null}else{node.declaration=null;node.specifiers=this.parseExportSpecifiers(exports5);if(this.eatContextual("from")){if(this.type!==types.string){this.unexpected()}node.source=this.parseExprAtom()}else{for(var i=0,list=node.specifiers;i<list.length;i+=1){var spec=list[i];this.checkUnreserved(spec.local);this.checkLocalExport(spec.local)}node.source=null}this.semicolon()}return this.finishNode(node,"ExportNamedDeclaration")};pp$1.checkExport=function(exports5,name2,pos){if(!exports5){return}if(has(exports5,name2)){this.raiseRecoverable(pos,"Duplicate export \'"+name2+"\'")}exports5[name2]=true};pp$1.checkPatternExport=function(exports5,pat){var type=pat.type;if(type==="Identifier"){this.checkExport(exports5,pat.name,pat.start)}else if(type==="ObjectPattern"){for(var i=0,list=pat.properties;i<list.length;i+=1){var prop=list[i];this.checkPatternExport(exports5,prop)}}else if(type==="ArrayPattern"){for(var i$1=0,list$1=pat.elements;i$1<list$1.length;i$1+=1){var elt=list$1[i$1];if(elt){this.checkPatternExport(exports5,elt)}}}else if(type==="Property"){this.checkPatternExport(exports5,pat.value)}else if(type==="AssignmentPattern"){this.checkPatternExport(exports5,pat.left)}else if(type==="RestElement"){this.checkPatternExport(exports5,pat.argument)}else if(type==="ParenthesizedExpression"){this.checkPatternExport(exports5,pat.expression)}};pp$1.checkVariableExport=function(exports5,decls){if(!exports5){return}for(var i=0,list=decls;i<list.length;i+=1){var decl=list[i];this.checkPatternExport(exports5,decl.id)}};pp$1.shouldParseExportStatement=function(){return this.type.keyword==="var"||this.type.keyword==="const"||this.type.keyword==="class"||this.type.keyword==="function"||this.isLet()||this.isAsyncFunction()};pp$1.parseExportSpecifiers=function(exports5){var nodes=[],first=true;this.expect(types.braceL);while(!this.eat(types.braceR)){if(!first){this.expect(types.comma);if(this.afterTrailingComma(types.braceR)){break}}else{first=false}var node=this.startNode();node.local=this.parseIdent(true);node.exported=this.eatContextual("as")?this.parseIdent(true):node.local;this.checkExport(exports5,node.exported.name,node.exported.start);nodes.push(this.finishNode(node,"ExportSpecifier"))}return nodes};pp$1.parseImport=function(node){this.next();if(this.type===types.string){node.specifiers=empty;node.source=this.parseExprAtom()}else{node.specifiers=this.parseImportSpecifiers();this.expectContextual("from");node.source=this.type===types.string?this.parseExprAtom():this.unexpected()}this.semicolon();return this.finishNode(node,"ImportDeclaration")};pp$1.parseImportSpecifiers=function(){var nodes=[],first=true;if(this.type===types.name){var node=this.startNode();node.local=this.parseIdent();this.checkLVal(node.local,BIND_LEXICAL);nodes.push(this.finishNode(node,"ImportDefaultSpecifier"));if(!this.eat(types.comma)){return nodes}}if(this.type===types.star){var node$1=this.startNode();this.next();this.expectContextual("as");node$1.local=this.parseIdent();this.checkLVal(node$1.local,BIND_LEXICAL);nodes.push(this.finishNode(node$1,"ImportNamespaceSpecifier"));return nodes}this.expect(types.braceL);while(!this.eat(types.braceR)){if(!first){this.expect(types.comma);if(this.afterTrailingComma(types.braceR)){break}}else{first=false}var node$2=this.startNode();node$2.imported=this.parseIdent(true);if(this.eatContextual("as")){node$2.local=this.parseIdent()}else{this.checkUnreserved(node$2.imported);node$2.local=node$2.imported}this.checkLVal(node$2.local,BIND_LEXICAL);nodes.push(this.finishNode(node$2,"ImportSpecifier"))}return nodes};pp$1.adaptDirectivePrologue=function(statements){for(var i=0;i<statements.length&&this.isDirectiveCandidate(statements[i]);++i){statements[i].directive=statements[i].expression.raw.slice(1,-1)}};pp$1.isDirectiveCandidate=function(statement){return statement.type==="ExpressionStatement"&&statement.expression.type==="Literal"&&typeof statement.expression.value==="string"&&(this.input[statement.start]===\'"\'||this.input[statement.start]==="\'")};var pp$2=Parser.prototype;pp$2.toAssignable=function(node,isBinding,refDestructuringErrors){if(this.options.ecmaVersion>=6&&node){switch(node.type){case"Identifier":if(this.inAsync&&node.name==="await"){this.raise(node.start,"Cannot use \'await\' as identifier inside an async function")}break;case"ObjectPattern":case"ArrayPattern":case"RestElement":break;case"ObjectExpression":node.type="ObjectPattern";if(refDestructuringErrors){this.checkPatternErrors(refDestructuringErrors,true)}for(var i=0,list=node.properties;i<list.length;i+=1){var prop=list[i];this.toAssignable(prop,isBinding);if(prop.type==="RestElement"&&(prop.argument.type==="ArrayPattern"||prop.argument.type==="ObjectPattern")){this.raise(prop.argument.start,"Unexpected token")}}break;case"Property":if(node.kind!=="init"){this.raise(node.key.start,"Object pattern can\'t contain getter or setter")}this.toAssignable(node.value,isBinding);break;case"ArrayExpression":node.type="ArrayPattern";if(refDestructuringErrors){this.checkPatternErrors(refDestructuringErrors,true)}this.toAssignableList(node.elements,isBinding);break;case"SpreadElement":node.type="RestElement";this.toAssignable(node.argument,isBinding);if(node.argument.type==="AssignmentPattern"){this.raise(node.argument.start,"Rest elements cannot have a default value")}break;case"AssignmentExpression":if(node.operator!=="="){this.raise(node.left.end,"Only \'=\' operator can be used for specifying default value.")}node.type="AssignmentPattern";delete node.operator;this.toAssignable(node.left,isBinding);case"AssignmentPattern":break;case"ParenthesizedExpression":this.toAssignable(node.expression,isBinding,refDestructuringErrors);break;case"MemberExpression":if(!isBinding){break}default:this.raise(node.start,"Assigning to rvalue")}}else if(refDestructuringErrors){this.checkPatternErrors(refDestructuringErrors,true)}return node};pp$2.toAssignableList=function(exprList,isBinding){var end=exprList.length;for(var i=0;i<end;i++){var elt=exprList[i];if(elt){this.toAssignable(elt,isBinding)}}if(end){var last=exprList[end-1];if(this.options.ecmaVersion===6&&isBinding&&last&&last.type==="RestElement"&&last.argument.type!=="Identifier"){this.unexpected(last.argument.start)}}return exprList};pp$2.parseSpread=function(refDestructuringErrors){var node=this.startNode();this.next();node.argument=this.parseMaybeAssign(false,refDestructuringErrors);return this.finishNode(node,"SpreadElement")};pp$2.parseRestBinding=function(){var node=this.startNode();this.next();if(this.options.ecmaVersion===6&&this.type!==types.name){this.unexpected()}node.argument=this.parseBindingAtom();return this.finishNode(node,"RestElement")};pp$2.parseBindingAtom=function(){if(this.options.ecmaVersion>=6){switch(this.type){case types.bracketL:var node=this.startNode();this.next();node.elements=this.parseBindingList(types.bracketR,true,true);return this.finishNode(node,"ArrayPattern");case types.braceL:return this.parseObj(true)}}return this.parseIdent()};pp$2.parseBindingList=function(close,allowEmpty,allowTrailingComma){var elts=[],first=true;while(!this.eat(close)){if(first){first=false}else{this.expect(types.comma)}if(allowEmpty&&this.type===types.comma){elts.push(null)}else if(allowTrailingComma&&this.afterTrailingComma(close)){break}else if(this.type===types.ellipsis){var rest=this.parseRestBinding();this.parseBindingListItem(rest);elts.push(rest);if(this.type===types.comma){this.raise(this.start,"Comma is not permitted after the rest element")}this.expect(close);break}else{var elem=this.parseMaybeDefault(this.start,this.startLoc);this.parseBindingListItem(elem);elts.push(elem)}}return elts};pp$2.parseBindingListItem=function(param){return param};pp$2.parseMaybeDefault=function(startPos,startLoc,left){left=left||this.parseBindingAtom();if(this.options.ecmaVersion<6||!this.eat(types.eq)){return left}var node=this.startNodeAt(startPos,startLoc);node.left=left;node.right=this.parseMaybeAssign();return this.finishNode(node,"AssignmentPattern")};pp$2.checkLVal=function(expr,bindingType,checkClashes){if(bindingType===void 0)bindingType=BIND_NONE;switch(expr.type){case"Identifier":if(bindingType===BIND_LEXICAL&&expr.name==="let"){this.raiseRecoverable(expr.start,"let is disallowed as a lexically bound name")}if(this.strict&&this.reservedWordsStrictBind.test(expr.name)){this.raiseRecoverable(expr.start,(bindingType?"Binding ":"Assigning to ")+expr.name+" in strict mode")}if(checkClashes){if(has(checkClashes,expr.name)){this.raiseRecoverable(expr.start,"Argument name clash")}checkClashes[expr.name]=true}if(bindingType!==BIND_NONE&&bindingType!==BIND_OUTSIDE){this.declareName(expr.name,bindingType,expr.start)}break;case"MemberExpression":if(bindingType){this.raiseRecoverable(expr.start,"Binding member expression")}break;case"ObjectPattern":for(var i=0,list=expr.properties;i<list.length;i+=1){var prop=list[i];this.checkLVal(prop,bindingType,checkClashes)}break;case"Property":this.checkLVal(expr.value,bindingType,checkClashes);break;case"ArrayPattern":for(var i$1=0,list$1=expr.elements;i$1<list$1.length;i$1+=1){var elem=list$1[i$1];if(elem){this.checkLVal(elem,bindingType,checkClashes)}}break;case"AssignmentPattern":this.checkLVal(expr.left,bindingType,checkClashes);break;case"RestElement":this.checkLVal(expr.argument,bindingType,checkClashes);break;case"ParenthesizedExpression":this.checkLVal(expr.expression,bindingType,checkClashes);break;default:this.raise(expr.start,(bindingType?"Binding":"Assigning to")+" rvalue")}};var pp$3=Parser.prototype;pp$3.checkPropClash=function(prop,propHash,refDestructuringErrors){if(this.options.ecmaVersion>=9&&prop.type==="SpreadElement"){return}if(this.options.ecmaVersion>=6&&(prop.computed||prop.method||prop.shorthand)){return}var key=prop.key;var name2;switch(key.type){case"Identifier":name2=key.name;break;case"Literal":name2=String(key.value);break;default:return}var kind=prop.kind;if(this.options.ecmaVersion>=6){if(name2==="__proto__"&&kind==="init"){if(propHash.proto){if(refDestructuringErrors){if(refDestructuringErrors.doubleProto<0){refDestructuringErrors.doubleProto=key.start}}else{this.raiseRecoverable(key.start,"Redefinition of __proto__ property")}}propHash.proto=true}return}name2="$"+name2;var other=propHash[name2];if(other){var redefinition;if(kind==="init"){redefinition=this.strict&&other.init||other.get||other.set}else{redefinition=other.init||other[kind]}if(redefinition){this.raiseRecoverable(key.start,"Redefinition of property")}}else{other=propHash[name2]={init:false,get:false,set:false}}other[kind]=true};pp$3.parseExpression=function(noIn,refDestructuringErrors){var startPos=this.start,startLoc=this.startLoc;var expr=this.parseMaybeAssign(noIn,refDestructuringErrors);if(this.type===types.comma){var node=this.startNodeAt(startPos,startLoc);node.expressions=[expr];while(this.eat(types.comma)){node.expressions.push(this.parseMaybeAssign(noIn,refDestructuringErrors))}return this.finishNode(node,"SequenceExpression")}return expr};pp$3.parseMaybeAssign=function(noIn,refDestructuringErrors,afterLeftParse){if(this.isContextual("yield")){if(this.inGenerator){return this.parseYield(noIn)}else{this.exprAllowed=false}}var ownDestructuringErrors=false,oldParenAssign=-1,oldTrailingComma=-1;if(refDestructuringErrors){oldParenAssign=refDestructuringErrors.parenthesizedAssign;oldTrailingComma=refDestructuringErrors.trailingComma;refDestructuringErrors.parenthesizedAssign=refDestructuringErrors.trailingComma=-1}else{refDestructuringErrors=new DestructuringErrors;ownDestructuringErrors=true}var startPos=this.start,startLoc=this.startLoc;if(this.type===types.parenL||this.type===types.name){this.potentialArrowAt=this.start}var left=this.parseMaybeConditional(noIn,refDestructuringErrors);if(afterLeftParse){left=afterLeftParse.call(this,left,startPos,startLoc)}if(this.type.isAssign){var node=this.startNodeAt(startPos,startLoc);node.operator=this.value;node.left=this.type===types.eq?this.toAssignable(left,false,refDestructuringErrors):left;if(!ownDestructuringErrors){refDestructuringErrors.parenthesizedAssign=refDestructuringErrors.trailingComma=refDestructuringErrors.doubleProto=-1}if(refDestructuringErrors.shorthandAssign>=node.left.start){refDestructuringErrors.shorthandAssign=-1}this.checkLVal(left);this.next();node.right=this.parseMaybeAssign(noIn);return this.finishNode(node,"AssignmentExpression")}else{if(ownDestructuringErrors){this.checkExpressionErrors(refDestructuringErrors,true)}}if(oldParenAssign>-1){refDestructuringErrors.parenthesizedAssign=oldParenAssign}if(oldTrailingComma>-1){refDestructuringErrors.trailingComma=oldTrailingComma}return left};pp$3.parseMaybeConditional=function(noIn,refDestructuringErrors){var startPos=this.start,startLoc=this.startLoc;var expr=this.parseExprOps(noIn,refDestructuringErrors);if(this.checkExpressionErrors(refDestructuringErrors)){return expr}if(this.eat(types.question)){var node=this.startNodeAt(startPos,startLoc);node.test=expr;node.consequent=this.parseMaybeAssign();this.expect(types.colon);node.alternate=this.parseMaybeAssign(noIn);return this.finishNode(node,"ConditionalExpression")}return expr};pp$3.parseExprOps=function(noIn,refDestructuringErrors){var startPos=this.start,startLoc=this.startLoc;var expr=this.parseMaybeUnary(refDestructuringErrors,false);if(this.checkExpressionErrors(refDestructuringErrors)){return expr}return expr.start===startPos&&expr.type==="ArrowFunctionExpression"?expr:this.parseExprOp(expr,startPos,startLoc,-1,noIn)};pp$3.parseExprOp=function(left,leftStartPos,leftStartLoc,minPrec,noIn){var prec=this.type.binop;if(prec!=null&&(!noIn||this.type!==types._in)){if(prec>minPrec){var logical=this.type===types.logicalOR||this.type===types.logicalAND;var op=this.value;this.next();var startPos=this.start,startLoc=this.startLoc;var right=this.parseExprOp(this.parseMaybeUnary(null,false),startPos,startLoc,prec,noIn);var node=this.buildBinary(leftStartPos,leftStartLoc,left,right,op,logical);return this.parseExprOp(node,leftStartPos,leftStartLoc,minPrec,noIn)}}return left};pp$3.buildBinary=function(startPos,startLoc,left,right,op,logical){var node=this.startNodeAt(startPos,startLoc);node.left=left;node.operator=op;node.right=right;return this.finishNode(node,logical?"LogicalExpression":"BinaryExpression")};pp$3.parseMaybeUnary=function(refDestructuringErrors,sawUnary){var startPos=this.start,startLoc=this.startLoc,expr;if(this.isContextual("await")&&(this.inAsync||!this.inFunction&&this.options.allowAwaitOutsideFunction)){expr=this.parseAwait();sawUnary=true}else if(this.type.prefix){var node=this.startNode(),update=this.type===types.incDec;node.operator=this.value;node.prefix=true;this.next();node.argument=this.parseMaybeUnary(null,true);this.checkExpressionErrors(refDestructuringErrors,true);if(update){this.checkLVal(node.argument)}else if(this.strict&&node.operator==="delete"&&node.argument.type==="Identifier"){this.raiseRecoverable(node.start,"Deleting local variable in strict mode")}else{sawUnary=true}expr=this.finishNode(node,update?"UpdateExpression":"UnaryExpression")}else{expr=this.parseExprSubscripts(refDestructuringErrors);if(this.checkExpressionErrors(refDestructuringErrors)){return expr}while(this.type.postfix&&!this.canInsertSemicolon()){var node$1=this.startNodeAt(startPos,startLoc);node$1.operator=this.value;node$1.prefix=false;node$1.argument=expr;this.checkLVal(expr);this.next();expr=this.finishNode(node$1,"UpdateExpression")}}if(!sawUnary&&this.eat(types.starstar)){return this.buildBinary(startPos,startLoc,expr,this.parseMaybeUnary(null,false),"**",false)}else{return expr}};pp$3.parseExprSubscripts=function(refDestructuringErrors){var startPos=this.start,startLoc=this.startLoc;var expr=this.parseExprAtom(refDestructuringErrors);if(expr.type==="ArrowFunctionExpression"&&this.input.slice(this.lastTokStart,this.lastTokEnd)!==")"){return expr}var result=this.parseSubscripts(expr,startPos,startLoc);if(refDestructuringErrors&&result.type==="MemberExpression"){if(refDestructuringErrors.parenthesizedAssign>=result.start){refDestructuringErrors.parenthesizedAssign=-1}if(refDestructuringErrors.parenthesizedBind>=result.start){refDestructuringErrors.parenthesizedBind=-1}}return result};pp$3.parseSubscripts=function(base,startPos,startLoc,noCalls){var maybeAsyncArrow=this.options.ecmaVersion>=8&&base.type==="Identifier"&&base.name==="async"&&this.lastTokEnd===base.end&&!this.canInsertSemicolon()&&this.input.slice(base.start,base.end)==="async";while(true){var element=this.parseSubscript(base,startPos,startLoc,noCalls,maybeAsyncArrow);if(element===base||element.type==="ArrowFunctionExpression"){return element}base=element}};pp$3.parseSubscript=function(base,startPos,startLoc,noCalls,maybeAsyncArrow){var computed=this.eat(types.bracketL);if(computed||this.eat(types.dot)){var node=this.startNodeAt(startPos,startLoc);node.object=base;node.property=computed?this.parseExpression():this.parseIdent(this.options.allowReserved!=="never");node.computed=!!computed;if(computed){this.expect(types.bracketR)}base=this.finishNode(node,"MemberExpression")}else if(!noCalls&&this.eat(types.parenL)){var refDestructuringErrors=new DestructuringErrors,oldYieldPos=this.yieldPos,oldAwaitPos=this.awaitPos,oldAwaitIdentPos=this.awaitIdentPos;this.yieldPos=0;this.awaitPos=0;this.awaitIdentPos=0;var exprList=this.parseExprList(types.parenR,this.options.ecmaVersion>=8,false,refDestructuringErrors);if(maybeAsyncArrow&&!this.canInsertSemicolon()&&this.eat(types.arrow)){this.checkPatternErrors(refDestructuringErrors,false);this.checkYieldAwaitInDefaultParams();if(this.awaitIdentPos>0){this.raise(this.awaitIdentPos,"Cannot use \'await\' as identifier inside an async function")}this.yieldPos=oldYieldPos;this.awaitPos=oldAwaitPos;this.awaitIdentPos=oldAwaitIdentPos;return this.parseArrowExpression(this.startNodeAt(startPos,startLoc),exprList,true)}this.checkExpressionErrors(refDestructuringErrors,true);this.yieldPos=oldYieldPos||this.yieldPos;this.awaitPos=oldAwaitPos||this.awaitPos;this.awaitIdentPos=oldAwaitIdentPos||this.awaitIdentPos;var node$1=this.startNodeAt(startPos,startLoc);node$1.callee=base;node$1.arguments=exprList;base=this.finishNode(node$1,"CallExpression")}else if(this.type===types.backQuote){var node$2=this.startNodeAt(startPos,startLoc);node$2.tag=base;node$2.quasi=this.parseTemplate({isTagged:true});base=this.finishNode(node$2,"TaggedTemplateExpression")}return base};pp$3.parseExprAtom=function(refDestructuringErrors){if(this.type===types.slash){this.readRegexp()}var node,canBeArrow=this.potentialArrowAt===this.start;switch(this.type){case types._super:if(!this.allowSuper){this.raise(this.start,"\'super\' keyword outside a method")}node=this.startNode();this.next();if(this.type===types.parenL&&!this.allowDirectSuper){this.raise(node.start,"super() call outside constructor of a subclass")}if(this.type!==types.dot&&this.type!==types.bracketL&&this.type!==types.parenL){this.unexpected()}return this.finishNode(node,"Super");case types._this:node=this.startNode();this.next();return this.finishNode(node,"ThisExpression");case types.name:var startPos=this.start,startLoc=this.startLoc,containsEsc=this.containsEsc;var id=this.parseIdent(false);if(this.options.ecmaVersion>=8&&!containsEsc&&id.name==="async"&&!this.canInsertSemicolon()&&this.eat(types._function)){return this.parseFunction(this.startNodeAt(startPos,startLoc),0,false,true)}if(canBeArrow&&!this.canInsertSemicolon()){if(this.eat(types.arrow)){return this.parseArrowExpression(this.startNodeAt(startPos,startLoc),[id],false)}if(this.options.ecmaVersion>=8&&id.name==="async"&&this.type===types.name&&!containsEsc){id=this.parseIdent(false);if(this.canInsertSemicolon()||!this.eat(types.arrow)){this.unexpected()}return this.parseArrowExpression(this.startNodeAt(startPos,startLoc),[id],true)}}return id;case types.regexp:var value2=this.value;node=this.parseLiteral(value2.value);node.regex={pattern:value2.pattern,flags:value2.flags};return node;case types.num:case types.string:return this.parseLiteral(this.value);case types._null:case types._true:case types._false:node=this.startNode();node.value=this.type===types._null?null:this.type===types._true;node.raw=this.type.keyword;this.next();return this.finishNode(node,"Literal");case types.parenL:var start=this.start,expr=this.parseParenAndDistinguishExpression(canBeArrow);if(refDestructuringErrors){if(refDestructuringErrors.parenthesizedAssign<0&&!this.isSimpleAssignTarget(expr)){refDestructuringErrors.parenthesizedAssign=start}if(refDestructuringErrors.parenthesizedBind<0){refDestructuringErrors.parenthesizedBind=start}}return expr;case types.bracketL:node=this.startNode();this.next();node.elements=this.parseExprList(types.bracketR,true,true,refDestructuringErrors);return this.finishNode(node,"ArrayExpression");case types.braceL:return this.parseObj(false,refDestructuringErrors);case types._function:node=this.startNode();this.next();return this.parseFunction(node,0);case types._class:return this.parseClass(this.startNode(),false);case types._new:return this.parseNew();case types.backQuote:return this.parseTemplate();case types._import:if(this.options.ecmaVersion>=11){return this.parseExprImport()}else{return this.unexpected()}default:this.unexpected()}};pp$3.parseExprImport=function(){var node=this.startNode();this.next();switch(this.type){case types.parenL:return this.parseDynamicImport(node);default:this.unexpected()}};pp$3.parseDynamicImport=function(node){this.next();node.source=this.parseMaybeAssign();if(!this.eat(types.parenR)){var errorPos=this.start;if(this.eat(types.comma)&&this.eat(types.parenR)){this.raiseRecoverable(errorPos,"Trailing comma is not allowed in import()")}else{this.unexpected(errorPos)}}return this.finishNode(node,"ImportExpression")};pp$3.parseLiteral=function(value2){var node=this.startNode();node.value=value2;node.raw=this.input.slice(this.start,this.end);if(node.raw.charCodeAt(node.raw.length-1)===110){node.bigint=node.raw.slice(0,-1)}this.next();return this.finishNode(node,"Literal")};pp$3.parseParenExpression=function(){this.expect(types.parenL);var val=this.parseExpression();this.expect(types.parenR);return val};pp$3.parseParenAndDistinguishExpression=function(canBeArrow){var startPos=this.start,startLoc=this.startLoc,val,allowTrailingComma=this.options.ecmaVersion>=8;if(this.options.ecmaVersion>=6){this.next();var innerStartPos=this.start,innerStartLoc=this.startLoc;var exprList=[],first=true,lastIsComma=false;var refDestructuringErrors=new DestructuringErrors,oldYieldPos=this.yieldPos,oldAwaitPos=this.awaitPos,spreadStart;this.yieldPos=0;this.awaitPos=0;while(this.type!==types.parenR){first?first=false:this.expect(types.comma);if(allowTrailingComma&&this.afterTrailingComma(types.parenR,true)){lastIsComma=true;break}else if(this.type===types.ellipsis){spreadStart=this.start;exprList.push(this.parseParenItem(this.parseRestBinding()));if(this.type===types.comma){this.raise(this.start,"Comma is not permitted after the rest element")}break}else{exprList.push(this.parseMaybeAssign(false,refDestructuringErrors,this.parseParenItem))}}var innerEndPos=this.start,innerEndLoc=this.startLoc;this.expect(types.parenR);if(canBeArrow&&!this.canInsertSemicolon()&&this.eat(types.arrow)){this.checkPatternErrors(refDestructuringErrors,false);this.checkYieldAwaitInDefaultParams();this.yieldPos=oldYieldPos;this.awaitPos=oldAwaitPos;return this.parseParenArrowList(startPos,startLoc,exprList)}if(!exprList.length||lastIsComma){this.unexpected(this.lastTokStart)}if(spreadStart){this.unexpected(spreadStart)}this.checkExpressionErrors(refDestructuringErrors,true);this.yieldPos=oldYieldPos||this.yieldPos;this.awaitPos=oldAwaitPos||this.awaitPos;if(exprList.length>1){val=this.startNodeAt(innerStartPos,innerStartLoc);val.expressions=exprList;this.finishNodeAt(val,"SequenceExpression",innerEndPos,innerEndLoc)}else{val=exprList[0]}}else{val=this.parseParenExpression()}if(this.options.preserveParens){var par=this.startNodeAt(startPos,startLoc);par.expression=val;return this.finishNode(par,"ParenthesizedExpression")}else{return val}};pp$3.parseParenItem=function(item){return item};pp$3.parseParenArrowList=function(startPos,startLoc,exprList){return this.parseArrowExpression(this.startNodeAt(startPos,startLoc),exprList)};var empty$1=[];pp$3.parseNew=function(){if(this.containsEsc){this.raiseRecoverable(this.start,"Escape sequence in keyword new")}var node=this.startNode();var meta=this.parseIdent(true);if(this.options.ecmaVersion>=6&&this.eat(types.dot)){node.meta=meta;var containsEsc=this.containsEsc;node.property=this.parseIdent(true);if(node.property.name!=="target"||containsEsc){this.raiseRecoverable(node.property.start,"The only valid meta property for new is new.target")}if(!this.inNonArrowFunction()){this.raiseRecoverable(node.start,"new.target can only be used in functions")}return this.finishNode(node,"MetaProperty")}var startPos=this.start,startLoc=this.startLoc,isImport=this.type===types._import;node.callee=this.parseSubscripts(this.parseExprAtom(),startPos,startLoc,true);if(isImport&&node.callee.type==="ImportExpression"){this.raise(startPos,"Cannot use new with import()")}if(this.eat(types.parenL)){node.arguments=this.parseExprList(types.parenR,this.options.ecmaVersion>=8,false)}else{node.arguments=empty$1}return this.finishNode(node,"NewExpression")};pp$3.parseTemplateElement=function(ref2){var isTagged=ref2.isTagged;var elem=this.startNode();if(this.type===types.invalidTemplate){if(!isTagged){this.raiseRecoverable(this.start,"Bad escape sequence in untagged template literal")}elem.value={raw:this.value,cooked:null}}else{elem.value={raw:this.input.slice(this.start,this.end).replace(/\\r\\n?/g,"\\n"),cooked:this.value}}this.next();elem.tail=this.type===types.backQuote;return this.finishNode(elem,"TemplateElement")};pp$3.parseTemplate=function(ref2){if(ref2===void 0)ref2={};var isTagged=ref2.isTagged;if(isTagged===void 0)isTagged=false;var node=this.startNode();this.next();node.expressions=[];var curElt=this.parseTemplateElement({isTagged});node.quasis=[curElt];while(!curElt.tail){if(this.type===types.eof){this.raise(this.pos,"Unterminated template literal")}this.expect(types.dollarBraceL);node.expressions.push(this.parseExpression());this.expect(types.braceR);node.quasis.push(curElt=this.parseTemplateElement({isTagged}))}this.next();return this.finishNode(node,"TemplateLiteral")};pp$3.isAsyncProp=function(prop){return!prop.computed&&prop.key.type==="Identifier"&&prop.key.name==="async"&&(this.type===types.name||this.type===types.num||this.type===types.string||this.type===types.bracketL||this.type.keyword||this.options.ecmaVersion>=9&&this.type===types.star)&&!lineBreak.test(this.input.slice(this.lastTokEnd,this.start))};pp$3.parseObj=function(isPattern,refDestructuringErrors){var node=this.startNode(),first=true,propHash={};node.properties=[];this.next();while(!this.eat(types.braceR)){if(!first){this.expect(types.comma);if(this.options.ecmaVersion>=5&&this.afterTrailingComma(types.braceR)){break}}else{first=false}var prop=this.parseProperty(isPattern,refDestructuringErrors);if(!isPattern){this.checkPropClash(prop,propHash,refDestructuringErrors)}node.properties.push(prop)}return this.finishNode(node,isPattern?"ObjectPattern":"ObjectExpression")};pp$3.parseProperty=function(isPattern,refDestructuringErrors){var prop=this.startNode(),isGenerator,isAsync,startPos,startLoc;if(this.options.ecmaVersion>=9&&this.eat(types.ellipsis)){if(isPattern){prop.argument=this.parseIdent(false);if(this.type===types.comma){this.raise(this.start,"Comma is not permitted after the rest element")}return this.finishNode(prop,"RestElement")}if(this.type===types.parenL&&refDestructuringErrors){if(refDestructuringErrors.parenthesizedAssign<0){refDestructuringErrors.parenthesizedAssign=this.start}if(refDestructuringErrors.parenthesizedBind<0){refDestructuringErrors.parenthesizedBind=this.start}}prop.argument=this.parseMaybeAssign(false,refDestructuringErrors);if(this.type===types.comma&&refDestructuringErrors&&refDestructuringErrors.trailingComma<0){refDestructuringErrors.trailingComma=this.start}return this.finishNode(prop,"SpreadElement")}if(this.options.ecmaVersion>=6){prop.method=false;prop.shorthand=false;if(isPattern||refDestructuringErrors){startPos=this.start;startLoc=this.startLoc}if(!isPattern){isGenerator=this.eat(types.star)}}var containsEsc=this.containsEsc;this.parsePropertyName(prop);if(!isPattern&&!containsEsc&&this.options.ecmaVersion>=8&&!isGenerator&&this.isAsyncProp(prop)){isAsync=true;isGenerator=this.options.ecmaVersion>=9&&this.eat(types.star);this.parsePropertyName(prop,refDestructuringErrors)}else{isAsync=false}this.parsePropertyValue(prop,isPattern,isGenerator,isAsync,startPos,startLoc,refDestructuringErrors,containsEsc);return this.finishNode(prop,"Property")};pp$3.parsePropertyValue=function(prop,isPattern,isGenerator,isAsync,startPos,startLoc,refDestructuringErrors,containsEsc){if((isGenerator||isAsync)&&this.type===types.colon){this.unexpected()}if(this.eat(types.colon)){prop.value=isPattern?this.parseMaybeDefault(this.start,this.startLoc):this.parseMaybeAssign(false,refDestructuringErrors);prop.kind="init"}else if(this.options.ecmaVersion>=6&&this.type===types.parenL){if(isPattern){this.unexpected()}prop.kind="init";prop.method=true;prop.value=this.parseMethod(isGenerator,isAsync)}else if(!isPattern&&!containsEsc&&this.options.ecmaVersion>=5&&!prop.computed&&prop.key.type==="Identifier"&&(prop.key.name==="get"||prop.key.name==="set")&&(this.type!==types.comma&&this.type!==types.braceR)){if(isGenerator||isAsync){this.unexpected()}prop.kind=prop.key.name;this.parsePropertyName(prop);prop.value=this.parseMethod(false);var paramCount=prop.kind==="get"?0:1;if(prop.value.params.length!==paramCount){var start=prop.value.start;if(prop.kind==="get"){this.raiseRecoverable(start,"getter should have no params")}else{this.raiseRecoverable(start,"setter should have exactly one param")}}else{if(prop.kind==="set"&&prop.value.params[0].type==="RestElement"){this.raiseRecoverable(prop.value.params[0].start,"Setter cannot use rest params")}}}else if(this.options.ecmaVersion>=6&&!prop.computed&&prop.key.type==="Identifier"){if(isGenerator||isAsync){this.unexpected()}this.checkUnreserved(prop.key);if(prop.key.name==="await"&&!this.awaitIdentPos){this.awaitIdentPos=startPos}prop.kind="init";if(isPattern){prop.value=this.parseMaybeDefault(startPos,startLoc,prop.key)}else if(this.type===types.eq&&refDestructuringErrors){if(refDestructuringErrors.shorthandAssign<0){refDestructuringErrors.shorthandAssign=this.start}prop.value=this.parseMaybeDefault(startPos,startLoc,prop.key)}else{prop.value=prop.key}prop.shorthand=true}else{this.unexpected()}};pp$3.parsePropertyName=function(prop){if(this.options.ecmaVersion>=6){if(this.eat(types.bracketL)){prop.computed=true;prop.key=this.parseMaybeAssign();this.expect(types.bracketR);return prop.key}else{prop.computed=false}}return prop.key=this.type===types.num||this.type===types.string?this.parseExprAtom():this.parseIdent(this.options.allowReserved!=="never")};pp$3.initFunction=function(node){node.id=null;if(this.options.ecmaVersion>=6){node.generator=node.expression=false}if(this.options.ecmaVersion>=8){node.async=false}};pp$3.parseMethod=function(isGenerator,isAsync,allowDirectSuper){var node=this.startNode(),oldYieldPos=this.yieldPos,oldAwaitPos=this.awaitPos,oldAwaitIdentPos=this.awaitIdentPos;this.initFunction(node);if(this.options.ecmaVersion>=6){node.generator=isGenerator}if(this.options.ecmaVersion>=8){node.async=!!isAsync}this.yieldPos=0;this.awaitPos=0;this.awaitIdentPos=0;this.enterScope(functionFlags(isAsync,node.generator)|SCOPE_SUPER|(allowDirectSuper?SCOPE_DIRECT_SUPER:0));this.expect(types.parenL);node.params=this.parseBindingList(types.parenR,false,this.options.ecmaVersion>=8);this.checkYieldAwaitInDefaultParams();this.parseFunctionBody(node,false,true);this.yieldPos=oldYieldPos;this.awaitPos=oldAwaitPos;this.awaitIdentPos=oldAwaitIdentPos;return this.finishNode(node,"FunctionExpression")};pp$3.parseArrowExpression=function(node,params,isAsync){var oldYieldPos=this.yieldPos,oldAwaitPos=this.awaitPos,oldAwaitIdentPos=this.awaitIdentPos;this.enterScope(functionFlags(isAsync,false)|SCOPE_ARROW);this.initFunction(node);if(this.options.ecmaVersion>=8){node.async=!!isAsync}this.yieldPos=0;this.awaitPos=0;this.awaitIdentPos=0;node.params=this.toAssignableList(params,true);this.parseFunctionBody(node,true,false);this.yieldPos=oldYieldPos;this.awaitPos=oldAwaitPos;this.awaitIdentPos=oldAwaitIdentPos;return this.finishNode(node,"ArrowFunctionExpression")};pp$3.parseFunctionBody=function(node,isArrowFunction,isMethod){var isExpression=isArrowFunction&&this.type!==types.braceL;var oldStrict=this.strict,useStrict=false;if(isExpression){node.body=this.parseMaybeAssign();node.expression=true;this.checkParams(node,false)}else{var nonSimple=this.options.ecmaVersion>=7&&!this.isSimpleParamList(node.params);if(!oldStrict||nonSimple){useStrict=this.strictDirective(this.end);if(useStrict&&nonSimple){this.raiseRecoverable(node.start,"Illegal \'use strict\' directive in function with non-simple parameter list")}}var oldLabels=this.labels;this.labels=[];if(useStrict){this.strict=true}this.checkParams(node,!oldStrict&&!useStrict&&!isArrowFunction&&!isMethod&&this.isSimpleParamList(node.params));node.body=this.parseBlock(false);node.expression=false;this.adaptDirectivePrologue(node.body.body);this.labels=oldLabels}this.exitScope();if(this.strict&&node.id){this.checkLVal(node.id,BIND_OUTSIDE)}this.strict=oldStrict};pp$3.isSimpleParamList=function(params){for(var i=0,list=params;i<list.length;i+=1){var param=list[i];if(param.type!=="Identifier"){return false}}return true};pp$3.checkParams=function(node,allowDuplicates){var nameHash={};for(var i=0,list=node.params;i<list.length;i+=1){var param=list[i];this.checkLVal(param,BIND_VAR,allowDuplicates?null:nameHash)}};pp$3.parseExprList=function(close,allowTrailingComma,allowEmpty,refDestructuringErrors){var elts=[],first=true;while(!this.eat(close)){if(!first){this.expect(types.comma);if(allowTrailingComma&&this.afterTrailingComma(close)){break}}else{first=false}var elt=void 0;if(allowEmpty&&this.type===types.comma){elt=null}else if(this.type===types.ellipsis){elt=this.parseSpread(refDestructuringErrors);if(refDestructuringErrors&&this.type===types.comma&&refDestructuringErrors.trailingComma<0){refDestructuringErrors.trailingComma=this.start}}else{elt=this.parseMaybeAssign(false,refDestructuringErrors)}elts.push(elt)}return elts};pp$3.checkUnreserved=function(ref2){var start=ref2.start;var end=ref2.end;var name2=ref2.name;if(this.inGenerator&&name2==="yield"){this.raiseRecoverable(start,"Cannot use \'yield\' as identifier inside a generator")}if(this.inAsync&&name2==="await"){this.raiseRecoverable(start,"Cannot use \'await\' as identifier inside an async function")}if(this.keywords.test(name2)){this.raise(start,"Unexpected keyword \'"+name2+"\'")}if(this.options.ecmaVersion<6&&this.input.slice(start,end).indexOf("\\\\")!==-1){return}var re2=this.strict?this.reservedWordsStrict:this.reservedWords;if(re2.test(name2)){if(!this.inAsync&&name2==="await"){this.raiseRecoverable(start,"Cannot use keyword \'await\' outside an async function")}this.raiseRecoverable(start,"The keyword \'"+name2+"\' is reserved")}};pp$3.parseIdent=function(liberal,isBinding){var node=this.startNode();if(this.type===types.name){node.name=this.value}else if(this.type.keyword){node.name=this.type.keyword;if((node.name==="class"||node.name==="function")&&(this.lastTokEnd!==this.lastTokStart+1||this.input.charCodeAt(this.lastTokStart)!==46)){this.context.pop()}}else{this.unexpected()}this.next(!!liberal);this.finishNode(node,"Identifier");if(!liberal){this.checkUnreserved(node);if(node.name==="await"&&!this.awaitIdentPos){this.awaitIdentPos=node.start}}return node};pp$3.parseYield=function(noIn){if(!this.yieldPos){this.yieldPos=this.start}var node=this.startNode();this.next();if(this.type===types.semi||this.canInsertSemicolon()||this.type!==types.star&&!this.type.startsExpr){node.delegate=false;node.argument=null}else{node.delegate=this.eat(types.star);node.argument=this.parseMaybeAssign(noIn)}return this.finishNode(node,"YieldExpression")};pp$3.parseAwait=function(){if(!this.awaitPos){this.awaitPos=this.start}var node=this.startNode();this.next();node.argument=this.parseMaybeUnary(null,false);return this.finishNode(node,"AwaitExpression")};var pp$4=Parser.prototype;pp$4.raise=function(pos,message){var loc=getLineInfo(this.input,pos);message+=" ("+loc.line+":"+loc.column+")";var err=new SyntaxError(message);err.pos=pos;err.loc=loc;err.raisedAt=this.pos;throw err};pp$4.raiseRecoverable=pp$4.raise;pp$4.curPosition=function(){if(this.options.locations){return new Position(this.curLine,this.pos-this.lineStart)}};var pp$5=Parser.prototype;var Scope=function Scope2(flags){this.flags=flags;this.var=[];this.lexical=[];this.functions=[]};pp$5.enterScope=function(flags){this.scopeStack.push(new Scope(flags))};pp$5.exitScope=function(){this.scopeStack.pop()};pp$5.treatFunctionsAsVarInScope=function(scope){return scope.flags&SCOPE_FUNCTION||!this.inModule&&scope.flags&SCOPE_TOP};pp$5.declareName=function(name2,bindingType,pos){var redeclared=false;if(bindingType===BIND_LEXICAL){var scope=this.currentScope();redeclared=scope.lexical.indexOf(name2)>-1||scope.functions.indexOf(name2)>-1||scope.var.indexOf(name2)>-1;scope.lexical.push(name2);if(this.inModule&&scope.flags&SCOPE_TOP){delete this.undefinedExports[name2]}}else if(bindingType===BIND_SIMPLE_CATCH){var scope$1=this.currentScope();scope$1.lexical.push(name2)}else if(bindingType===BIND_FUNCTION){var scope$2=this.currentScope();if(this.treatFunctionsAsVar){redeclared=scope$2.lexical.indexOf(name2)>-1}else{redeclared=scope$2.lexical.indexOf(name2)>-1||scope$2.var.indexOf(name2)>-1}scope$2.functions.push(name2)}else{for(var i=this.scopeStack.length-1;i>=0;--i){var scope$3=this.scopeStack[i];if(scope$3.lexical.indexOf(name2)>-1&&!(scope$3.flags&SCOPE_SIMPLE_CATCH&&scope$3.lexical[0]===name2)||!this.treatFunctionsAsVarInScope(scope$3)&&scope$3.functions.indexOf(name2)>-1){redeclared=true;break}scope$3.var.push(name2);if(this.inModule&&scope$3.flags&SCOPE_TOP){delete this.undefinedExports[name2]}if(scope$3.flags&SCOPE_VAR){break}}}if(redeclared){this.raiseRecoverable(pos,"Identifier \'"+name2+"\' has already been declared")}};pp$5.checkLocalExport=function(id){if(this.scopeStack[0].lexical.indexOf(id.name)===-1&&this.scopeStack[0].var.indexOf(id.name)===-1){this.undefinedExports[id.name]=id}};pp$5.currentScope=function(){return this.scopeStack[this.scopeStack.length-1]};pp$5.currentVarScope=function(){for(var i=this.scopeStack.length-1;;i--){var scope=this.scopeStack[i];if(scope.flags&SCOPE_VAR){return scope}}};pp$5.currentThisScope=function(){for(var i=this.scopeStack.length-1;;i--){var scope=this.scopeStack[i];if(scope.flags&SCOPE_VAR&&!(scope.flags&SCOPE_ARROW)){return scope}}};var Node=function Node2(parser,pos,loc){this.type="";this.start=pos;this.end=0;if(parser.options.locations){this.loc=new SourceLocation(parser,loc)}if(parser.options.directSourceFile){this.sourceFile=parser.options.directSourceFile}if(parser.options.ranges){this.range=[pos,0]}};var pp$6=Parser.prototype;pp$6.startNode=function(){return new Node(this,this.start,this.startLoc)};pp$6.startNodeAt=function(pos,loc){return new Node(this,pos,loc)};function finishNodeAt(node,type,pos,loc){node.type=type;node.end=pos;if(this.options.locations){node.loc.end=loc}if(this.options.ranges){node.range[1]=pos}return node}pp$6.finishNode=function(node,type){return finishNodeAt.call(this,node,type,this.lastTokEnd,this.lastTokEndLoc)};pp$6.finishNodeAt=function(node,type,pos,loc){return finishNodeAt.call(this,node,type,pos,loc)};var TokContext=function TokContext2(token,isExpr,preserveSpace,override,generator){this.token=token;this.isExpr=!!isExpr;this.preserveSpace=!!preserveSpace;this.override=override;this.generator=!!generator};var types$1={b_stat:new TokContext("{",false),b_expr:new TokContext("{",true),b_tmpl:new TokContext("${",false),p_stat:new TokContext("(",false),p_expr:new TokContext("(",true),q_tmpl:new TokContext("`",true,true,function(p){return p.tryReadTemplateToken()}),f_stat:new TokContext("function",false),f_expr:new TokContext("function",true),f_expr_gen:new TokContext("function",true,false,null,true),f_gen:new TokContext("function",false,false,null,true)};var pp$7=Parser.prototype;pp$7.initialContext=function(){return[types$1.b_stat]};pp$7.braceIsBlock=function(prevType){var parent=this.curContext();if(parent===types$1.f_expr||parent===types$1.f_stat){return true}if(prevType===types.colon&&(parent===types$1.b_stat||parent===types$1.b_expr)){return!parent.isExpr}if(prevType===types._return||prevType===types.name&&this.exprAllowed){return lineBreak.test(this.input.slice(this.lastTokEnd,this.start))}if(prevType===types._else||prevType===types.semi||prevType===types.eof||prevType===types.parenR||prevType===types.arrow){return true}if(prevType===types.braceL){return parent===types$1.b_stat}if(prevType===types._var||prevType===types._const||prevType===types.name){return false}return!this.exprAllowed};pp$7.inGeneratorContext=function(){for(var i=this.context.length-1;i>=1;i--){var context=this.context[i];if(context.token==="function"){return context.generator}}return false};pp$7.updateContext=function(prevType){var update,type=this.type;if(type.keyword&&prevType===types.dot){this.exprAllowed=false}else if(update=type.updateContext){update.call(this,prevType)}else{this.exprAllowed=type.beforeExpr}};types.parenR.updateContext=types.braceR.updateContext=function(){if(this.context.length===1){this.exprAllowed=true;return}var out=this.context.pop();if(out===types$1.b_stat&&this.curContext().token==="function"){out=this.context.pop()}this.exprAllowed=!out.isExpr};types.braceL.updateContext=function(prevType){this.context.push(this.braceIsBlock(prevType)?types$1.b_stat:types$1.b_expr);this.exprAllowed=true};types.dollarBraceL.updateContext=function(){this.context.push(types$1.b_tmpl);this.exprAllowed=true};types.parenL.updateContext=function(prevType){var statementParens=prevType===types._if||prevType===types._for||prevType===types._with||prevType===types._while;this.context.push(statementParens?types$1.p_stat:types$1.p_expr);this.exprAllowed=true};types.incDec.updateContext=function(){};types._function.updateContext=types._class.updateContext=function(prevType){if(prevType.beforeExpr&&prevType!==types.semi&&prevType!==types._else&&!(prevType===types._return&&lineBreak.test(this.input.slice(this.lastTokEnd,this.start)))&&!((prevType===types.colon||prevType===types.braceL)&&this.curContext()===types$1.b_stat)){this.context.push(types$1.f_expr)}else{this.context.push(types$1.f_stat)}this.exprAllowed=false};types.backQuote.updateContext=function(){if(this.curContext()===types$1.q_tmpl){this.context.pop()}else{this.context.push(types$1.q_tmpl)}this.exprAllowed=false};types.star.updateContext=function(prevType){if(prevType===types._function){var index=this.context.length-1;if(this.context[index]===types$1.f_expr){this.context[index]=types$1.f_expr_gen}else{this.context[index]=types$1.f_gen}}this.exprAllowed=true};types.name.updateContext=function(prevType){var allowed=false;if(this.options.ecmaVersion>=6&&prevType!==types.dot){if(this.value==="of"&&!this.exprAllowed||this.value==="yield"&&this.inGeneratorContext()){allowed=true}}this.exprAllowed=allowed};var ecma9BinaryProperties="ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS";var ecma10BinaryProperties=ecma9BinaryProperties+" Extended_Pictographic";var ecma11BinaryProperties=ecma10BinaryProperties;var unicodeBinaryProperties={9:ecma9BinaryProperties,10:ecma10BinaryProperties,11:ecma11BinaryProperties};var unicodeGeneralCategoryValues="Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu";var ecma9ScriptValues="Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb";var ecma10ScriptValues=ecma9ScriptValues+" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd";var ecma11ScriptValues=ecma10ScriptValues+" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho";var unicodeScriptValues={9:ecma9ScriptValues,10:ecma10ScriptValues,11:ecma11ScriptValues};var data={};function buildUnicodeData(ecmaVersion){var d4=data[ecmaVersion]={binary:wordsRegexp(unicodeBinaryProperties[ecmaVersion]+" "+unicodeGeneralCategoryValues),nonBinary:{General_Category:wordsRegexp(unicodeGeneralCategoryValues),Script:wordsRegexp(unicodeScriptValues[ecmaVersion])}};d4.nonBinary.Script_Extensions=d4.nonBinary.Script;d4.nonBinary.gc=d4.nonBinary.General_Category;d4.nonBinary.sc=d4.nonBinary.Script;d4.nonBinary.scx=d4.nonBinary.Script_Extensions}buildUnicodeData(9);buildUnicodeData(10);buildUnicodeData(11);var pp$8=Parser.prototype;var RegExpValidationState=function RegExpValidationState2(parser){this.parser=parser;this.validFlags="gim"+(parser.options.ecmaVersion>=6?"uy":"")+(parser.options.ecmaVersion>=9?"s":"");this.unicodeProperties=data[parser.options.ecmaVersion>=11?11:parser.options.ecmaVersion];this.source="";this.flags="";this.start=0;this.switchU=false;this.switchN=false;this.pos=0;this.lastIntValue=0;this.lastStringValue="";this.lastAssertionIsQuantifiable=false;this.numCapturingParens=0;this.maxBackReference=0;this.groupNames=[];this.backReferenceNames=[]};RegExpValidationState.prototype.reset=function reset(start,pattern,flags){var unicode=flags.indexOf("u")!==-1;this.start=start|0;this.source=pattern+"";this.flags=flags;this.switchU=unicode&&this.parser.options.ecmaVersion>=6;this.switchN=unicode&&this.parser.options.ecmaVersion>=9};RegExpValidationState.prototype.raise=function raise(message){this.parser.raiseRecoverable(this.start,"Invalid regular expression: /"+this.source+"/: "+message)};RegExpValidationState.prototype.at=function at2(i){var s=this.source;var l=s.length;if(i>=l){return-1}var c2=s.charCodeAt(i);if(!this.switchU||c2<=55295||c2>=57344||i+1>=l){return c2}var next=s.charCodeAt(i+1);return next>=56320&&next<=57343?(c2<<10)+next-56613888:c2};RegExpValidationState.prototype.nextIndex=function nextIndex(i){var s=this.source;var l=s.length;if(i>=l){return l}var c2=s.charCodeAt(i),next;if(!this.switchU||c2<=55295||c2>=57344||i+1>=l||(next=s.charCodeAt(i+1))<56320||next>57343){return i+1}return i+2};RegExpValidationState.prototype.current=function current(){return this.at(this.pos)};RegExpValidationState.prototype.lookahead=function lookahead(){return this.at(this.nextIndex(this.pos))};RegExpValidationState.prototype.advance=function advance(){this.pos=this.nextIndex(this.pos)};RegExpValidationState.prototype.eat=function eat(ch){if(this.current()===ch){this.advance();return true}return false};function codePointToString(ch){if(ch<=65535){return String.fromCharCode(ch)}ch-=65536;return String.fromCharCode((ch>>10)+55296,(ch&1023)+56320)}pp$8.validateRegExpFlags=function(state22){var validFlags=state22.validFlags;var flags=state22.flags;for(var i=0;i<flags.length;i++){var flag=flags.charAt(i);if(validFlags.indexOf(flag)===-1){this.raise(state22.start,"Invalid regular expression flag")}if(flags.indexOf(flag,i+1)>-1){this.raise(state22.start,"Duplicate regular expression flag")}}};pp$8.validateRegExpPattern=function(state22){this.regexp_pattern(state22);if(!state22.switchN&&this.options.ecmaVersion>=9&&state22.groupNames.length>0){state22.switchN=true;this.regexp_pattern(state22)}};pp$8.regexp_pattern=function(state22){state22.pos=0;state22.lastIntValue=0;state22.lastStringValue="";state22.lastAssertionIsQuantifiable=false;state22.numCapturingParens=0;state22.maxBackReference=0;state22.groupNames.length=0;state22.backReferenceNames.length=0;this.regexp_disjunction(state22);if(state22.pos!==state22.source.length){if(state22.eat(41)){state22.raise("Unmatched \')\'")}if(state22.eat(93)||state22.eat(125)){state22.raise("Lone quantifier brackets")}}if(state22.maxBackReference>state22.numCapturingParens){state22.raise("Invalid escape")}for(var i=0,list=state22.backReferenceNames;i<list.length;i+=1){var name2=list[i];if(state22.groupNames.indexOf(name2)===-1){state22.raise("Invalid named capture referenced")}}};pp$8.regexp_disjunction=function(state22){this.regexp_alternative(state22);while(state22.eat(124)){this.regexp_alternative(state22)}if(this.regexp_eatQuantifier(state22,true)){state22.raise("Nothing to repeat")}if(state22.eat(123)){state22.raise("Lone quantifier brackets")}};pp$8.regexp_alternative=function(state22){while(state22.pos<state22.source.length&&this.regexp_eatTerm(state22)){}};pp$8.regexp_eatTerm=function(state22){if(this.regexp_eatAssertion(state22)){if(state22.lastAssertionIsQuantifiable&&this.regexp_eatQuantifier(state22)){if(state22.switchU){state22.raise("Invalid quantifier")}}return true}if(state22.switchU?this.regexp_eatAtom(state22):this.regexp_eatExtendedAtom(state22)){this.regexp_eatQuantifier(state22);return true}return false};pp$8.regexp_eatAssertion=function(state22){var start=state22.pos;state22.lastAssertionIsQuantifiable=false;if(state22.eat(94)||state22.eat(36)){return true}if(state22.eat(92)){if(state22.eat(66)||state22.eat(98)){return true}state22.pos=start}if(state22.eat(40)&&state22.eat(63)){var lookbehind=false;if(this.options.ecmaVersion>=9){lookbehind=state22.eat(60)}if(state22.eat(61)||state22.eat(33)){this.regexp_disjunction(state22);if(!state22.eat(41)){state22.raise("Unterminated group")}state22.lastAssertionIsQuantifiable=!lookbehind;return true}}state22.pos=start;return false};pp$8.regexp_eatQuantifier=function(state22,noError){if(noError===void 0)noError=false;if(this.regexp_eatQuantifierPrefix(state22,noError)){state22.eat(63);return true}return false};pp$8.regexp_eatQuantifierPrefix=function(state22,noError){return state22.eat(42)||state22.eat(43)||state22.eat(63)||this.regexp_eatBracedQuantifier(state22,noError)};pp$8.regexp_eatBracedQuantifier=function(state22,noError){var start=state22.pos;if(state22.eat(123)){var min=0,max=-1;if(this.regexp_eatDecimalDigits(state22)){min=state22.lastIntValue;if(state22.eat(44)&&this.regexp_eatDecimalDigits(state22)){max=state22.lastIntValue}if(state22.eat(125)){if(max!==-1&&max<min&&!noError){state22.raise("numbers out of order in {} quantifier")}return true}}if(state22.switchU&&!noError){state22.raise("Incomplete quantifier")}state22.pos=start}return false};pp$8.regexp_eatAtom=function(state22){return this.regexp_eatPatternCharacters(state22)||state22.eat(46)||this.regexp_eatReverseSolidusAtomEscape(state22)||this.regexp_eatCharacterClass(state22)||this.regexp_eatUncapturingGroup(state22)||this.regexp_eatCapturingGroup(state22)};pp$8.regexp_eatReverseSolidusAtomEscape=function(state22){var start=state22.pos;if(state22.eat(92)){if(this.regexp_eatAtomEscape(state22)){return true}state22.pos=start}return false};pp$8.regexp_eatUncapturingGroup=function(state22){var start=state22.pos;if(state22.eat(40)){if(state22.eat(63)&&state22.eat(58)){this.regexp_disjunction(state22);if(state22.eat(41)){return true}state22.raise("Unterminated group")}state22.pos=start}return false};pp$8.regexp_eatCapturingGroup=function(state22){if(state22.eat(40)){if(this.options.ecmaVersion>=9){this.regexp_groupSpecifier(state22)}else if(state22.current()===63){state22.raise("Invalid group")}this.regexp_disjunction(state22);if(state22.eat(41)){state22.numCapturingParens+=1;return true}state22.raise("Unterminated group")}return false};pp$8.regexp_eatExtendedAtom=function(state22){return state22.eat(46)||this.regexp_eatReverseSolidusAtomEscape(state22)||this.regexp_eatCharacterClass(state22)||this.regexp_eatUncapturingGroup(state22)||this.regexp_eatCapturingGroup(state22)||this.regexp_eatInvalidBracedQuantifier(state22)||this.regexp_eatExtendedPatternCharacter(state22)};pp$8.regexp_eatInvalidBracedQuantifier=function(state22){if(this.regexp_eatBracedQuantifier(state22,true)){state22.raise("Nothing to repeat")}return false};pp$8.regexp_eatSyntaxCharacter=function(state22){var ch=state22.current();if(isSyntaxCharacter(ch)){state22.lastIntValue=ch;state22.advance();return true}return false};function isSyntaxCharacter(ch){return ch===36||ch>=40&&ch<=43||ch===46||ch===63||ch>=91&&ch<=94||ch>=123&&ch<=125}pp$8.regexp_eatPatternCharacters=function(state22){var start=state22.pos;var ch=0;while((ch=state22.current())!==-1&&!isSyntaxCharacter(ch)){state22.advance()}return state22.pos!==start};pp$8.regexp_eatExtendedPatternCharacter=function(state22){var ch=state22.current();if(ch!==-1&&ch!==36&&!(ch>=40&&ch<=43)&&ch!==46&&ch!==63&&ch!==91&&ch!==94&&ch!==124){state22.advance();return true}return false};pp$8.regexp_groupSpecifier=function(state22){if(state22.eat(63)){if(this.regexp_eatGroupName(state22)){if(state22.groupNames.indexOf(state22.lastStringValue)!==-1){state22.raise("Duplicate capture group name")}state22.groupNames.push(state22.lastStringValue);return}state22.raise("Invalid group")}};pp$8.regexp_eatGroupName=function(state22){state22.lastStringValue="";if(state22.eat(60)){if(this.regexp_eatRegExpIdentifierName(state22)&&state22.eat(62)){return true}state22.raise("Invalid capture group name")}return false};pp$8.regexp_eatRegExpIdentifierName=function(state22){state22.lastStringValue="";if(this.regexp_eatRegExpIdentifierStart(state22)){state22.lastStringValue+=codePointToString(state22.lastIntValue);while(this.regexp_eatRegExpIdentifierPart(state22)){state22.lastStringValue+=codePointToString(state22.lastIntValue)}return true}return false};pp$8.regexp_eatRegExpIdentifierStart=function(state22){var start=state22.pos;var ch=state22.current();state22.advance();if(ch===92&&this.regexp_eatRegExpUnicodeEscapeSequence(state22)){ch=state22.lastIntValue}if(isRegExpIdentifierStart(ch)){state22.lastIntValue=ch;return true}state22.pos=start;return false};function isRegExpIdentifierStart(ch){return isIdentifierStart(ch,true)||ch===36||ch===95}pp$8.regexp_eatRegExpIdentifierPart=function(state22){var start=state22.pos;var ch=state22.current();state22.advance();if(ch===92&&this.regexp_eatRegExpUnicodeEscapeSequence(state22)){ch=state22.lastIntValue}if(isRegExpIdentifierPart(ch)){state22.lastIntValue=ch;return true}state22.pos=start;return false};function isRegExpIdentifierPart(ch){return isIdentifierChar(ch,true)||ch===36||ch===95||ch===8204||ch===8205}pp$8.regexp_eatAtomEscape=function(state22){if(this.regexp_eatBackReference(state22)||this.regexp_eatCharacterClassEscape(state22)||this.regexp_eatCharacterEscape(state22)||state22.switchN&&this.regexp_eatKGroupName(state22)){return true}if(state22.switchU){if(state22.current()===99){state22.raise("Invalid unicode escape")}state22.raise("Invalid escape")}return false};pp$8.regexp_eatBackReference=function(state22){var start=state22.pos;if(this.regexp_eatDecimalEscape(state22)){var n=state22.lastIntValue;if(state22.switchU){if(n>state22.maxBackReference){state22.maxBackReference=n}return true}if(n<=state22.numCapturingParens){return true}state22.pos=start}return false};pp$8.regexp_eatKGroupName=function(state22){if(state22.eat(107)){if(this.regexp_eatGroupName(state22)){state22.backReferenceNames.push(state22.lastStringValue);return true}state22.raise("Invalid named reference")}return false};pp$8.regexp_eatCharacterEscape=function(state22){return this.regexp_eatControlEscape(state22)||this.regexp_eatCControlLetter(state22)||this.regexp_eatZero(state22)||this.regexp_eatHexEscapeSequence(state22)||this.regexp_eatRegExpUnicodeEscapeSequence(state22)||!state22.switchU&&this.regexp_eatLegacyOctalEscapeSequence(state22)||this.regexp_eatIdentityEscape(state22)};pp$8.regexp_eatCControlLetter=function(state22){var start=state22.pos;if(state22.eat(99)){if(this.regexp_eatControlLetter(state22)){return true}state22.pos=start}return false};pp$8.regexp_eatZero=function(state22){if(state22.current()===48&&!isDecimalDigit(state22.lookahead())){state22.lastIntValue=0;state22.advance();return true}return false};pp$8.regexp_eatControlEscape=function(state22){var ch=state22.current();if(ch===116){state22.lastIntValue=9;state22.advance();return true}if(ch===110){state22.lastIntValue=10;state22.advance();return true}if(ch===118){state22.lastIntValue=11;state22.advance();return true}if(ch===102){state22.lastIntValue=12;state22.advance();return true}if(ch===114){state22.lastIntValue=13;state22.advance();return true}return false};pp$8.regexp_eatControlLetter=function(state22){var ch=state22.current();if(isControlLetter(ch)){state22.lastIntValue=ch%32;state22.advance();return true}return false};function isControlLetter(ch){return ch>=65&&ch<=90||ch>=97&&ch<=122}pp$8.regexp_eatRegExpUnicodeEscapeSequence=function(state22){var start=state22.pos;if(state22.eat(117)){if(this.regexp_eatFixedHexDigits(state22,4)){var lead=state22.lastIntValue;if(state22.switchU&&lead>=55296&&lead<=56319){var leadSurrogateEnd=state22.pos;if(state22.eat(92)&&state22.eat(117)&&this.regexp_eatFixedHexDigits(state22,4)){var trail=state22.lastIntValue;if(trail>=56320&&trail<=57343){state22.lastIntValue=(lead-55296)*1024+(trail-56320)+65536;return true}}state22.pos=leadSurrogateEnd;state22.lastIntValue=lead}return true}if(state22.switchU&&state22.eat(123)&&this.regexp_eatHexDigits(state22)&&state22.eat(125)&&isValidUnicode(state22.lastIntValue)){return true}if(state22.switchU){state22.raise("Invalid unicode escape")}state22.pos=start}return false};function isValidUnicode(ch){return ch>=0&&ch<=1114111}pp$8.regexp_eatIdentityEscape=function(state22){if(state22.switchU){if(this.regexp_eatSyntaxCharacter(state22)){return true}if(state22.eat(47)){state22.lastIntValue=47;return true}return false}var ch=state22.current();if(ch!==99&&(!state22.switchN||ch!==107)){state22.lastIntValue=ch;state22.advance();return true}return false};pp$8.regexp_eatDecimalEscape=function(state22){state22.lastIntValue=0;var ch=state22.current();if(ch>=49&&ch<=57){do{state22.lastIntValue=10*state22.lastIntValue+(ch-48);state22.advance()}while((ch=state22.current())>=48&&ch<=57);return true}return false};pp$8.regexp_eatCharacterClassEscape=function(state22){var ch=state22.current();if(isCharacterClassEscape(ch)){state22.lastIntValue=-1;state22.advance();return true}if(state22.switchU&&this.options.ecmaVersion>=9&&(ch===80||ch===112)){state22.lastIntValue=-1;state22.advance();if(state22.eat(123)&&this.regexp_eatUnicodePropertyValueExpression(state22)&&state22.eat(125)){return true}state22.raise("Invalid property name")}return false};function isCharacterClassEscape(ch){return ch===100||ch===68||ch===115||ch===83||ch===119||ch===87}pp$8.regexp_eatUnicodePropertyValueExpression=function(state22){var start=state22.pos;if(this.regexp_eatUnicodePropertyName(state22)&&state22.eat(61)){var name2=state22.lastStringValue;if(this.regexp_eatUnicodePropertyValue(state22)){var value2=state22.lastStringValue;this.regexp_validateUnicodePropertyNameAndValue(state22,name2,value2);return true}}state22.pos=start;if(this.regexp_eatLoneUnicodePropertyNameOrValue(state22)){var nameOrValue=state22.lastStringValue;this.regexp_validateUnicodePropertyNameOrValue(state22,nameOrValue);return true}return false};pp$8.regexp_validateUnicodePropertyNameAndValue=function(state22,name2,value2){if(!has(state22.unicodeProperties.nonBinary,name2)){state22.raise("Invalid property name")}if(!state22.unicodeProperties.nonBinary[name2].test(value2)){state22.raise("Invalid property value")}};pp$8.regexp_validateUnicodePropertyNameOrValue=function(state22,nameOrValue){if(!state22.unicodeProperties.binary.test(nameOrValue)){state22.raise("Invalid property name")}};pp$8.regexp_eatUnicodePropertyName=function(state22){var ch=0;state22.lastStringValue="";while(isUnicodePropertyNameCharacter(ch=state22.current())){state22.lastStringValue+=codePointToString(ch);state22.advance()}return state22.lastStringValue!==""};function isUnicodePropertyNameCharacter(ch){return isControlLetter(ch)||ch===95}pp$8.regexp_eatUnicodePropertyValue=function(state22){var ch=0;state22.lastStringValue="";while(isUnicodePropertyValueCharacter(ch=state22.current())){state22.lastStringValue+=codePointToString(ch);state22.advance()}return state22.lastStringValue!==""};function isUnicodePropertyValueCharacter(ch){return isUnicodePropertyNameCharacter(ch)||isDecimalDigit(ch)}pp$8.regexp_eatLoneUnicodePropertyNameOrValue=function(state22){return this.regexp_eatUnicodePropertyValue(state22)};pp$8.regexp_eatCharacterClass=function(state22){if(state22.eat(91)){state22.eat(94);this.regexp_classRanges(state22);if(state22.eat(93)){return true}state22.raise("Unterminated character class")}return false};pp$8.regexp_classRanges=function(state22){while(this.regexp_eatClassAtom(state22)){var left=state22.lastIntValue;if(state22.eat(45)&&this.regexp_eatClassAtom(state22)){var right=state22.lastIntValue;if(state22.switchU&&(left===-1||right===-1)){state22.raise("Invalid character class")}if(left!==-1&&right!==-1&&left>right){state22.raise("Range out of order in character class")}}}};pp$8.regexp_eatClassAtom=function(state22){var start=state22.pos;if(state22.eat(92)){if(this.regexp_eatClassEscape(state22)){return true}if(state22.switchU){var ch$1=state22.current();if(ch$1===99||isOctalDigit(ch$1)){state22.raise("Invalid class escape")}state22.raise("Invalid escape")}state22.pos=start}var ch=state22.current();if(ch!==93){state22.lastIntValue=ch;state22.advance();return true}return false};pp$8.regexp_eatClassEscape=function(state22){var start=state22.pos;if(state22.eat(98)){state22.lastIntValue=8;return true}if(state22.switchU&&state22.eat(45)){state22.lastIntValue=45;return true}if(!state22.switchU&&state22.eat(99)){if(this.regexp_eatClassControlLetter(state22)){return true}state22.pos=start}return this.regexp_eatCharacterClassEscape(state22)||this.regexp_eatCharacterEscape(state22)};pp$8.regexp_eatClassControlLetter=function(state22){var ch=state22.current();if(isDecimalDigit(ch)||ch===95){state22.lastIntValue=ch%32;state22.advance();return true}return false};pp$8.regexp_eatHexEscapeSequence=function(state22){var start=state22.pos;if(state22.eat(120)){if(this.regexp_eatFixedHexDigits(state22,2)){return true}if(state22.switchU){state22.raise("Invalid escape")}state22.pos=start}return false};pp$8.regexp_eatDecimalDigits=function(state22){var start=state22.pos;var ch=0;state22.lastIntValue=0;while(isDecimalDigit(ch=state22.current())){state22.lastIntValue=10*state22.lastIntValue+(ch-48);state22.advance()}return state22.pos!==start};function isDecimalDigit(ch){return ch>=48&&ch<=57}pp$8.regexp_eatHexDigits=function(state22){var start=state22.pos;var ch=0;state22.lastIntValue=0;while(isHexDigit(ch=state22.current())){state22.lastIntValue=16*state22.lastIntValue+hexToInt(ch);state22.advance()}return state22.pos!==start};function isHexDigit(ch){return ch>=48&&ch<=57||ch>=65&&ch<=70||ch>=97&&ch<=102}function hexToInt(ch){if(ch>=65&&ch<=70){return 10+(ch-65)}if(ch>=97&&ch<=102){return 10+(ch-97)}return ch-48}pp$8.regexp_eatLegacyOctalEscapeSequence=function(state22){if(this.regexp_eatOctalDigit(state22)){var n1=state22.lastIntValue;if(this.regexp_eatOctalDigit(state22)){var n2=state22.lastIntValue;if(n1<=3&&this.regexp_eatOctalDigit(state22)){state22.lastIntValue=n1*64+n2*8+state22.lastIntValue}else{state22.lastIntValue=n1*8+n2}}else{state22.lastIntValue=n1}return true}return false};pp$8.regexp_eatOctalDigit=function(state22){var ch=state22.current();if(isOctalDigit(ch)){state22.lastIntValue=ch-48;state22.advance();return true}state22.lastIntValue=0;return false};function isOctalDigit(ch){return ch>=48&&ch<=55}pp$8.regexp_eatFixedHexDigits=function(state22,length){var start=state22.pos;state22.lastIntValue=0;for(var i=0;i<length;++i){var ch=state22.current();if(!isHexDigit(ch)){state22.pos=start;return false}state22.lastIntValue=16*state22.lastIntValue+hexToInt(ch);state22.advance()}return true};var Token=function Token2(p){this.type=p.type;this.value=p.value;this.start=p.start;this.end=p.end;if(p.options.locations){this.loc=new SourceLocation(p,p.startLoc,p.endLoc)}if(p.options.ranges){this.range=[p.start,p.end]}};var pp$9=Parser.prototype;pp$9.next=function(ignoreEscapeSequenceInKeyword){if(!ignoreEscapeSequenceInKeyword&&this.type.keyword&&this.containsEsc){this.raiseRecoverable(this.start,"Escape sequence in keyword "+this.type.keyword)}if(this.options.onToken){this.options.onToken(new Token(this))}this.lastTokEnd=this.end;this.lastTokStart=this.start;this.lastTokEndLoc=this.endLoc;this.lastTokStartLoc=this.startLoc;this.nextToken()};pp$9.getToken=function(){this.next();return new Token(this)};if(typeof Symbol!=="undefined"){pp$9[Symbol.iterator]=function(){var this$1=this;return{next:function(){var token=this$1.getToken();return{done:token.type===types.eof,value:token}}}}}pp$9.curContext=function(){return this.context[this.context.length-1]};pp$9.nextToken=function(){var curContext=this.curContext();if(!curContext||!curContext.preserveSpace){this.skipSpace()}this.start=this.pos;if(this.options.locations){this.startLoc=this.curPosition()}if(this.pos>=this.input.length){return this.finishToken(types.eof)}if(curContext.override){return curContext.override(this)}else{this.readToken(this.fullCharCodeAtPos())}};pp$9.readToken=function(code){if(isIdentifierStart(code,this.options.ecmaVersion>=6)||code===92){return this.readWord()}return this.getTokenFromCode(code)};pp$9.fullCharCodeAtPos=function(){var code=this.input.charCodeAt(this.pos);if(code<=55295||code>=57344){return code}var next=this.input.charCodeAt(this.pos+1);return(code<<10)+next-56613888};pp$9.skipBlockComment=function(){var startLoc=this.options.onComment&&this.curPosition();var start=this.pos,end=this.input.indexOf("*/",this.pos+=2);if(end===-1){this.raise(this.pos-2,"Unterminated comment")}this.pos=end+2;if(this.options.locations){lineBreakG.lastIndex=start;var match;while((match=lineBreakG.exec(this.input))&&match.index<this.pos){++this.curLine;this.lineStart=match.index+match[0].length}}if(this.options.onComment){this.options.onComment(true,this.input.slice(start+2,end),start,this.pos,startLoc,this.curPosition())}};pp$9.skipLineComment=function(startSkip){var start=this.pos;var startLoc=this.options.onComment&&this.curPosition();var ch=this.input.charCodeAt(this.pos+=startSkip);while(this.pos<this.input.length&&!isNewLine(ch)){ch=this.input.charCodeAt(++this.pos)}if(this.options.onComment){this.options.onComment(false,this.input.slice(start+startSkip,this.pos),start,this.pos,startLoc,this.curPosition())}};pp$9.skipSpace=function(){loop:while(this.pos<this.input.length){var ch=this.input.charCodeAt(this.pos);switch(ch){case 32:case 160:++this.pos;break;case 13:if(this.input.charCodeAt(this.pos+1)===10){++this.pos}case 10:case 8232:case 8233:++this.pos;if(this.options.locations){++this.curLine;this.lineStart=this.pos}break;case 47:switch(this.input.charCodeAt(this.pos+1)){case 42:this.skipBlockComment();break;case 47:this.skipLineComment(2);break;default:break loop}break;default:if(ch>8&&ch<14||ch>=5760&&nonASCIIwhitespace.test(String.fromCharCode(ch))){++this.pos}else{break loop}}}};pp$9.finishToken=function(type,val){this.end=this.pos;if(this.options.locations){this.endLoc=this.curPosition()}var prevType=this.type;this.type=type;this.value=val;this.updateContext(prevType)};pp$9.readToken_dot=function(){var next=this.input.charCodeAt(this.pos+1);if(next>=48&&next<=57){return this.readNumber(true)}var next2=this.input.charCodeAt(this.pos+2);if(this.options.ecmaVersion>=6&&next===46&&next2===46){this.pos+=3;return this.finishToken(types.ellipsis)}else{++this.pos;return this.finishToken(types.dot)}};pp$9.readToken_slash=function(){var next=this.input.charCodeAt(this.pos+1);if(this.exprAllowed){++this.pos;return this.readRegexp()}if(next===61){return this.finishOp(types.assign,2)}return this.finishOp(types.slash,1)};pp$9.readToken_mult_modulo_exp=function(code){var next=this.input.charCodeAt(this.pos+1);var size=1;var tokentype=code===42?types.star:types.modulo;if(this.options.ecmaVersion>=7&&code===42&&next===42){++size;tokentype=types.starstar;next=this.input.charCodeAt(this.pos+2)}if(next===61){return this.finishOp(types.assign,size+1)}return this.finishOp(tokentype,size)};pp$9.readToken_pipe_amp=function(code){var next=this.input.charCodeAt(this.pos+1);if(next===code){return this.finishOp(code===124?types.logicalOR:types.logicalAND,2)}if(next===61){return this.finishOp(types.assign,2)}return this.finishOp(code===124?types.bitwiseOR:types.bitwiseAND,1)};pp$9.readToken_caret=function(){var next=this.input.charCodeAt(this.pos+1);if(next===61){return this.finishOp(types.assign,2)}return this.finishOp(types.bitwiseXOR,1)};pp$9.readToken_plus_min=function(code){var next=this.input.charCodeAt(this.pos+1);if(next===code){if(next===45&&!this.inModule&&this.input.charCodeAt(this.pos+2)===62&&(this.lastTokEnd===0||lineBreak.test(this.input.slice(this.lastTokEnd,this.pos)))){this.skipLineComment(3);this.skipSpace();return this.nextToken()}return this.finishOp(types.incDec,2)}if(next===61){return this.finishOp(types.assign,2)}return this.finishOp(types.plusMin,1)};pp$9.readToken_lt_gt=function(code){var next=this.input.charCodeAt(this.pos+1);var size=1;if(next===code){size=code===62&&this.input.charCodeAt(this.pos+2)===62?3:2;if(this.input.charCodeAt(this.pos+size)===61){return this.finishOp(types.assign,size+1)}return this.finishOp(types.bitShift,size)}if(next===33&&code===60&&!this.inModule&&this.input.charCodeAt(this.pos+2)===45&&this.input.charCodeAt(this.pos+3)===45){this.skipLineComment(4);this.skipSpace();return this.nextToken()}if(next===61){size=2}return this.finishOp(types.relational,size)};pp$9.readToken_eq_excl=function(code){var next=this.input.charCodeAt(this.pos+1);if(next===61){return this.finishOp(types.equality,this.input.charCodeAt(this.pos+2)===61?3:2)}if(code===61&&next===62&&this.options.ecmaVersion>=6){this.pos+=2;return this.finishToken(types.arrow)}return this.finishOp(code===61?types.eq:types.prefix,1)};pp$9.getTokenFromCode=function(code){switch(code){case 46:return this.readToken_dot();case 40:++this.pos;return this.finishToken(types.parenL);case 41:++this.pos;return this.finishToken(types.parenR);case 59:++this.pos;return this.finishToken(types.semi);case 44:++this.pos;return this.finishToken(types.comma);case 91:++this.pos;return this.finishToken(types.bracketL);case 93:++this.pos;return this.finishToken(types.bracketR);case 123:++this.pos;return this.finishToken(types.braceL);case 125:++this.pos;return this.finishToken(types.braceR);case 58:++this.pos;return this.finishToken(types.colon);case 63:++this.pos;return this.finishToken(types.question);case 96:if(this.options.ecmaVersion<6){break}++this.pos;return this.finishToken(types.backQuote);case 48:var next=this.input.charCodeAt(this.pos+1);if(next===120||next===88){return this.readRadixNumber(16)}if(this.options.ecmaVersion>=6){if(next===111||next===79){return this.readRadixNumber(8)}if(next===98||next===66){return this.readRadixNumber(2)}}case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return this.readNumber(false);case 34:case 39:return this.readString(code);case 47:return this.readToken_slash();case 37:case 42:return this.readToken_mult_modulo_exp(code);case 124:case 38:return this.readToken_pipe_amp(code);case 94:return this.readToken_caret();case 43:case 45:return this.readToken_plus_min(code);case 60:case 62:return this.readToken_lt_gt(code);case 61:case 33:return this.readToken_eq_excl(code);case 126:return this.finishOp(types.prefix,1)}this.raise(this.pos,"Unexpected character \'"+codePointToString$1(code)+"\'")};pp$9.finishOp=function(type,size){var str3=this.input.slice(this.pos,this.pos+size);this.pos+=size;return this.finishToken(type,str3)};pp$9.readRegexp=function(){var escaped,inClass,start=this.pos;for(;;){if(this.pos>=this.input.length){this.raise(start,"Unterminated regular expression")}var ch=this.input.charAt(this.pos);if(lineBreak.test(ch)){this.raise(start,"Unterminated regular expression")}if(!escaped){if(ch==="["){inClass=true}else if(ch==="]"&&inClass){inClass=false}else if(ch==="/"&&!inClass){break}escaped=ch==="\\\\"}else{escaped=false}++this.pos}var pattern=this.input.slice(start,this.pos);++this.pos;var flagsStart=this.pos;var flags=this.readWord1();if(this.containsEsc){this.unexpected(flagsStart)}var state22=this.regexpState||(this.regexpState=new RegExpValidationState(this));state22.reset(start,pattern,flags);this.validateRegExpFlags(state22);this.validateRegExpPattern(state22);var value2=null;try{value2=new RegExp(pattern,flags)}catch(e){}return this.finishToken(types.regexp,{pattern,flags,value:value2})};pp$9.readInt=function(radix,len){var start=this.pos,total=0;for(var i=0,e=len==null?Infinity:len;i<e;++i){var code=this.input.charCodeAt(this.pos),val=void 0;if(code>=97){val=code-97+10}else if(code>=65){val=code-65+10}else if(code>=48&&code<=57){val=code-48}else{val=Infinity}if(val>=radix){break}++this.pos;total=total*radix+val}if(this.pos===start||len!=null&&this.pos-start!==len){return null}return total};pp$9.readRadixNumber=function(radix){var start=this.pos;this.pos+=2;var val=this.readInt(radix);if(val==null){this.raise(this.start+2,"Expected number in radix "+radix)}if(this.options.ecmaVersion>=11&&this.input.charCodeAt(this.pos)===110){val=typeof BigInt!=="undefined"?BigInt(this.input.slice(start,this.pos)):null;++this.pos}else if(isIdentifierStart(this.fullCharCodeAtPos())){this.raise(this.pos,"Identifier directly after number")}return this.finishToken(types.num,val)};pp$9.readNumber=function(startsWithDot){var start=this.pos;if(!startsWithDot&&this.readInt(10)===null){this.raise(start,"Invalid number")}var octal=this.pos-start>=2&&this.input.charCodeAt(start)===48;if(octal&&this.strict){this.raise(start,"Invalid number")}var next=this.input.charCodeAt(this.pos);if(!octal&&!startsWithDot&&this.options.ecmaVersion>=11&&next===110){var str$1=this.input.slice(start,this.pos);var val$1=typeof BigInt!=="undefined"?BigInt(str$1):null;++this.pos;if(isIdentifierStart(this.fullCharCodeAtPos())){this.raise(this.pos,"Identifier directly after number")}return this.finishToken(types.num,val$1)}if(octal&&/[89]/.test(this.input.slice(start,this.pos))){octal=false}if(next===46&&!octal){++this.pos;this.readInt(10);next=this.input.charCodeAt(this.pos)}if((next===69||next===101)&&!octal){next=this.input.charCodeAt(++this.pos);if(next===43||next===45){++this.pos}if(this.readInt(10)===null){this.raise(start,"Invalid number")}}if(isIdentifierStart(this.fullCharCodeAtPos())){this.raise(this.pos,"Identifier directly after number")}var str3=this.input.slice(start,this.pos);var val=octal?parseInt(str3,8):parseFloat(str3);return this.finishToken(types.num,val)};pp$9.readCodePoint=function(){var ch=this.input.charCodeAt(this.pos),code;if(ch===123){if(this.options.ecmaVersion<6){this.unexpected()}var codePos=++this.pos;code=this.readHexChar(this.input.indexOf("}",this.pos)-this.pos);++this.pos;if(code>1114111){this.invalidStringToken(codePos,"Code point out of bounds")}}else{code=this.readHexChar(4)}return code};function codePointToString$1(code){if(code<=65535){return String.fromCharCode(code)}code-=65536;return String.fromCharCode((code>>10)+55296,(code&1023)+56320)}pp$9.readString=function(quote){var out="",chunkStart=++this.pos;for(;;){if(this.pos>=this.input.length){this.raise(this.start,"Unterminated string constant")}var ch=this.input.charCodeAt(this.pos);if(ch===quote){break}if(ch===92){out+=this.input.slice(chunkStart,this.pos);out+=this.readEscapedChar(false);chunkStart=this.pos}else{if(isNewLine(ch,this.options.ecmaVersion>=10)){this.raise(this.start,"Unterminated string constant")}++this.pos}}out+=this.input.slice(chunkStart,this.pos++);return this.finishToken(types.string,out)};var INVALID_TEMPLATE_ESCAPE_ERROR={};pp$9.tryReadTemplateToken=function(){this.inTemplateElement=true;try{this.readTmplToken()}catch(err){if(err===INVALID_TEMPLATE_ESCAPE_ERROR){this.readInvalidTemplateToken()}else{throw err}}this.inTemplateElement=false};pp$9.invalidStringToken=function(position,message){if(this.inTemplateElement&&this.options.ecmaVersion>=9){throw INVALID_TEMPLATE_ESCAPE_ERROR}else{this.raise(position,message)}};pp$9.readTmplToken=function(){var out="",chunkStart=this.pos;for(;;){if(this.pos>=this.input.length){this.raise(this.start,"Unterminated template")}var ch=this.input.charCodeAt(this.pos);if(ch===96||ch===36&&this.input.charCodeAt(this.pos+1)===123){if(this.pos===this.start&&(this.type===types.template||this.type===types.invalidTemplate)){if(ch===36){this.pos+=2;return this.finishToken(types.dollarBraceL)}else{++this.pos;return this.finishToken(types.backQuote)}}out+=this.input.slice(chunkStart,this.pos);return this.finishToken(types.template,out)}if(ch===92){out+=this.input.slice(chunkStart,this.pos);out+=this.readEscapedChar(true);chunkStart=this.pos}else if(isNewLine(ch)){out+=this.input.slice(chunkStart,this.pos);++this.pos;switch(ch){case 13:if(this.input.charCodeAt(this.pos)===10){++this.pos}case 10:out+="\\n";break;default:out+=String.fromCharCode(ch);break}if(this.options.locations){++this.curLine;this.lineStart=this.pos}chunkStart=this.pos}else{++this.pos}}};pp$9.readInvalidTemplateToken=function(){for(;this.pos<this.input.length;this.pos++){switch(this.input[this.pos]){case"\\\\":++this.pos;break;case"$":if(this.input[this.pos+1]!=="{"){break}case"`":return this.finishToken(types.invalidTemplate,this.input.slice(this.start,this.pos))}}this.raise(this.start,"Unterminated template")};pp$9.readEscapedChar=function(inTemplate){var ch=this.input.charCodeAt(++this.pos);++this.pos;switch(ch){case 110:return"\\n";case 114:return"\\r";case 120:return String.fromCharCode(this.readHexChar(2));case 117:return codePointToString$1(this.readCodePoint());case 116:return"	";case 98:return"\\b";case 118:return"\\v";case 102:return"\\f";case 13:if(this.input.charCodeAt(this.pos)===10){++this.pos}case 10:if(this.options.locations){this.lineStart=this.pos;++this.curLine}return"";case 56:case 57:if(inTemplate){var codePos=this.pos-1;this.invalidStringToken(codePos,"Invalid escape sequence in template string");return null}default:if(ch>=48&&ch<=55){var octalStr=this.input.substr(this.pos-1,3).match(/^[0-7]+/)[0];var octal=parseInt(octalStr,8);if(octal>255){octalStr=octalStr.slice(0,-1);octal=parseInt(octalStr,8)}this.pos+=octalStr.length-1;ch=this.input.charCodeAt(this.pos);if((octalStr!=="0"||ch===56||ch===57)&&(this.strict||inTemplate)){this.invalidStringToken(this.pos-1-octalStr.length,inTemplate?"Octal literal in template string":"Octal literal in strict mode")}return String.fromCharCode(octal)}if(isNewLine(ch)){return""}return String.fromCharCode(ch)}};pp$9.readHexChar=function(len){var codePos=this.pos;var n=this.readInt(16,len);if(n===null){this.invalidStringToken(codePos,"Bad character escape sequence")}return n};pp$9.readWord1=function(){this.containsEsc=false;var word="",first=true,chunkStart=this.pos;var astral=this.options.ecmaVersion>=6;while(this.pos<this.input.length){var ch=this.fullCharCodeAtPos();if(isIdentifierChar(ch,astral)){this.pos+=ch<=65535?1:2}else if(ch===92){this.containsEsc=true;word+=this.input.slice(chunkStart,this.pos);var escStart=this.pos;if(this.input.charCodeAt(++this.pos)!==117){this.invalidStringToken(this.pos,"Expecting Unicode escape sequence \\\\uXXXX")}++this.pos;var esc=this.readCodePoint();if(!(first?isIdentifierStart:isIdentifierChar)(esc,astral)){this.invalidStringToken(escStart,"Invalid Unicode escape")}word+=codePointToString$1(esc);chunkStart=this.pos}else{break}first=false}return word+this.input.slice(chunkStart,this.pos)};pp$9.readWord=function(){var word=this.readWord1();var type=types.name;if(this.keywords.test(word)){type=keywords$1[word]}return this.finishToken(type,word)};var version="7.1.0";Parser.acorn={Parser,version,defaultOptions,Position,SourceLocation,getLineInfo,Node,TokenType,tokTypes:types,keywordTypes:keywords$1,TokContext,tokContexts:types$1,isIdentifierChar,isIdentifierStart,Token,isNewLine,lineBreak,lineBreakG,nonASCIIwhitespace};function parse(input,options){return Parser.parse(input,options)}function parseExpressionAt(input,pos,options){return Parser.parseExpressionAt(input,pos,options)}function tokenizer(input,options){return Parser.tokenizer(input,options)}exports4.Node=Node;exports4.Parser=Parser;exports4.Position=Position;exports4.SourceLocation=SourceLocation;exports4.TokContext=TokContext;exports4.Token=Token;exports4.TokenType=TokenType;exports4.defaultOptions=defaultOptions;exports4.getLineInfo=getLineInfo;exports4.isIdentifierChar=isIdentifierChar;exports4.isIdentifierStart=isIdentifierStart;exports4.isNewLine=isNewLine;exports4.keywordTypes=keywords$1;exports4.lineBreak=lineBreak;exports4.lineBreakG=lineBreakG;exports4.nonASCIIwhitespace=nonASCIIwhitespace;exports4.parse=parse;exports4.parseExpressionAt=parseExpressionAt;exports4.tokContexts=types$1;exports4.tokTypes=types;exports4.tokenizer=tokenizer;exports4.version=version;Object.defineProperty(exports4,"__esModule",{value:true})})},{}],2:[function(require2,module3,exports3){},{}],3:[function(require2,module3,exports3){function glWiretap(gl2,options={}){const{contextName="gl",throwGetError,useTrackablePrimitives,readPixelsFile,recording=[],variables={},onReadPixels,onUnrecognizedArgumentLookup}=options;const proxy=new Proxy(gl2,{get:listen});const contextVariables=[];const entityNames={};let imageCount=0;let indent="";let readPixelsVariableName;return proxy;function listen(obj,property){switch(property){case"addComment":return addComment;case"checkThrowError":return checkThrowError;case"getReadPixelsVariableName":return readPixelsVariableName;case"insertVariable":return insertVariable;case"reset":return reset;case"setIndent":return setIndent;case"toString":return toString;case"getContextVariableName":return getContextVariableName}if(typeof gl2[property]==="function"){return function(){switch(property){case"getError":if(throwGetError){recording.push(`${indent}if (${contextName}.getError() !== ${contextName}.NONE) throw new Error(\'error\');`)}else{recording.push(`${indent}${contextName}.getError();`)}return gl2.getError();case"getExtension":{const variableName=`${contextName}Variables${contextVariables.length}`;recording.push(`${indent}const ${variableName} = ${contextName}.getExtension(\'${arguments[0]}\');`);const extension=gl2.getExtension(arguments[0]);if(extension&&typeof extension==="object"){const tappedExtension=glExtensionWiretap(extension,{getEntity,useTrackablePrimitives,recording,contextName:variableName,contextVariables,variables,indent,onUnrecognizedArgumentLookup});contextVariables.push(tappedExtension);return tappedExtension}else{contextVariables.push(null)}return extension}case"readPixels":const i=contextVariables.indexOf(arguments[6]);let targetVariableName;if(i===-1){const variableName=getVariableName(arguments[6]);if(variableName){targetVariableName=variableName;recording.push(`${indent}${variableName}`)}else{targetVariableName=`${contextName}Variable${contextVariables.length}`;contextVariables.push(arguments[6]);recording.push(`${indent}const ${targetVariableName} = new ${arguments[6].constructor.name}(${arguments[6].length});`)}}else{targetVariableName=`${contextName}Variable${i}`}readPixelsVariableName=targetVariableName;const argumentAsStrings=[arguments[0],arguments[1],arguments[2],arguments[3],getEntity(arguments[4]),getEntity(arguments[5]),targetVariableName];recording.push(`${indent}${contextName}.readPixels(${argumentAsStrings.join(", ")});`);if(readPixelsFile){writePPM(arguments[2],arguments[3])}if(onReadPixels){onReadPixels(targetVariableName,argumentAsStrings)}return gl2.readPixels.apply(gl2,arguments);case"drawBuffers":recording.push(`${indent}${contextName}.drawBuffers([${argumentsToString(arguments[0],{contextName,contextVariables,getEntity,addVariable,variables,onUnrecognizedArgumentLookup})}]);`);return gl2.drawBuffers(arguments[0])}let result=gl2[property].apply(gl2,arguments);switch(typeof result){case"undefined":recording.push(`${indent}${methodCallToString(property,arguments)};`);return;case"number":case"boolean":if(useTrackablePrimitives&&contextVariables.indexOf(trackablePrimitive(result))===-1){recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property,arguments)};`);contextVariables.push(result=trackablePrimitive(result));break}default:if(result===null){recording.push(`${methodCallToString(property,arguments)};`)}else{recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property,arguments)};`)}contextVariables.push(result)}return result}}entityNames[gl2[property]]=property;return gl2[property]}function toString(){return recording.join("\\n")}function reset(){while(recording.length>0){recording.pop()}}function insertVariable(name2,value2){variables[name2]=value2}function getEntity(value2){const name2=entityNames[value2];if(name2){return contextName+"."+name2}return value2}function setIndent(spaces){indent=" ".repeat(spaces)}function addVariable(value2,source){const variableName=`${contextName}Variable${contextVariables.length}`;recording.push(`${indent}const ${variableName} = ${source};`);contextVariables.push(value2);return variableName}function writePPM(width,height){const sourceVariable=`${contextName}Variable${contextVariables.length}`;const imageVariable=`imageDatum${imageCount}`;recording.push(`${indent}let ${imageVariable} = ["P3\\\\n# ${readPixelsFile}.ppm\\\\n", ${width}, \' \', ${height}, "\\\\n255\\\\n"].join("");`);recording.push(`${indent}for (let i = 0; i < ${imageVariable}.length; i += 4) {`);recording.push(`${indent}  ${imageVariable} += ${sourceVariable}[i] + \' \' + ${sourceVariable}[i + 1] + \' \' + ${sourceVariable}[i + 2] + \' \';`);recording.push(`${indent}}`);recording.push(`${indent}if (typeof require !== "undefined") {`);recording.push(`${indent}  require(\'fs\').writeFileSync(\'./${readPixelsFile}.ppm\', ${imageVariable});`);recording.push(`${indent}}`);imageCount++}function addComment(value2){recording.push(`${indent}// ${value2}`)}function checkThrowError(){recording.push(`${indent}(() => {\n      ${indent}const error = ${contextName}.getError();\n      ${indent}if (error !== ${contextName}.NONE) {\n      ${indent}  const names = Object.getOwnPropertyNames(gl);\n      ${indent}  for (let i = 0; i < names.length; i++) {\n      ${indent}    const name = names[i];\n      ${indent}    if (${contextName}[name] === error) {\n      ${indent}      throw new Error(\'${contextName} threw \' + name);\n      ${indent}    }\n      ${indent}  }\n      ${indent}}\n      ${indent}})();`)}function methodCallToString(method,args){return`${contextName}.${method}(${argumentsToString(args,{contextName,contextVariables,getEntity,addVariable,variables,onUnrecognizedArgumentLookup})})`}function getVariableName(value2){if(variables){for(const name2 in variables){if(variables[name2]===value2){return name2}}}return null}function getContextVariableName(value2){const i=contextVariables.indexOf(value2);if(i!==-1){return`${contextName}Variable${i}`}return null}}function glExtensionWiretap(extension,options){const proxy=new Proxy(extension,{get:listen});const extensionEntityNames={};const{contextName,contextVariables,getEntity,useTrackablePrimitives,recording,variables,indent,onUnrecognizedArgumentLookup}=options;return proxy;function listen(obj,property){if(typeof obj[property]==="function"){return function(){switch(property){case"drawBuffersWEBGL":recording.push(`${indent}${contextName}.drawBuffersWEBGL([${argumentsToString(arguments[0],{contextName,contextVariables,getEntity:getExtensionEntity,addVariable,variables,onUnrecognizedArgumentLookup})}]);`);return extension.drawBuffersWEBGL(arguments[0])}let result=extension[property].apply(extension,arguments);switch(typeof result){case"undefined":recording.push(`${indent}${methodCallToString(property,arguments)};`);return;case"number":case"boolean":if(useTrackablePrimitives&&contextVariables.indexOf(trackablePrimitive(result))===-1){recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property,arguments)};`);contextVariables.push(result=trackablePrimitive(result))}else{recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property,arguments)};`);contextVariables.push(result)}break;default:if(result===null){recording.push(`${methodCallToString(property,arguments)};`)}else{recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property,arguments)};`)}contextVariables.push(result)}return result}}extensionEntityNames[extension[property]]=property;return extension[property]}function getExtensionEntity(value2){if(extensionEntityNames.hasOwnProperty(value2)){return`${contextName}.${extensionEntityNames[value2]}`}return getEntity(value2)}function methodCallToString(method,args){return`${contextName}.${method}(${argumentsToString(args,{contextName,contextVariables,getEntity:getExtensionEntity,addVariable,variables,onUnrecognizedArgumentLookup})})`}function addVariable(value2,source){const variableName=`${contextName}Variable${contextVariables.length}`;contextVariables.push(value2);recording.push(`${indent}const ${variableName} = ${source};`);return variableName}}function argumentsToString(args,options){const{variables,onUnrecognizedArgumentLookup}=options;return Array.from(args).map(arg=>{const variableName=getVariableName(arg);if(variableName){return variableName}return argumentToString(arg,options)}).join(", ");function getVariableName(value2){if(variables){for(const name2 in variables){if(!variables.hasOwnProperty(name2))continue;if(variables[name2]===value2){return name2}}}if(onUnrecognizedArgumentLookup){return onUnrecognizedArgumentLookup(value2)}return null}}function argumentToString(arg,options){const{contextName,contextVariables,getEntity,addVariable,onUnrecognizedArgumentLookup}=options;if(typeof arg==="undefined"){return"undefined"}if(arg===null){return"null"}const i=contextVariables.indexOf(arg);if(i>-1){return`${contextName}Variable${i}`}switch(arg.constructor.name){case"String":const hasLines=/\\n/.test(arg);const hasSingleQuotes=/\'/.test(arg);const hasDoubleQuotes=/"/.test(arg);if(hasLines){return"`"+arg+"`"}else if(hasSingleQuotes&&!hasDoubleQuotes){return\'"\'+arg+\'"\'}else if(!hasSingleQuotes&&hasDoubleQuotes){return"\'"+arg+"\'"}else{return"\'"+arg+"\'"}case"Number":return getEntity(arg);case"Boolean":return getEntity(arg);case"Array":return addVariable(arg,`new ${arg.constructor.name}([${Array.from(arg).join(",")}])`);case"Float32Array":case"Uint8Array":case"Uint16Array":case"Int32Array":return addVariable(arg,`new ${arg.constructor.name}(${JSON.stringify(Array.from(arg))})`);default:if(onUnrecognizedArgumentLookup){const instantiationString=onUnrecognizedArgumentLookup(arg);if(instantiationString){return instantiationString}}throw new Error(`unrecognized argument type ${arg.constructor.name}`)}}function trackablePrimitive(value2){return new value2.constructor(value2)}if(typeof module3!=="undefined"){module3.exports={glWiretap,glExtensionWiretap}}if(typeof window!=="undefined"){glWiretap.glExtensionWiretap=glExtensionWiretap;window.glWiretap=glWiretap}},{}],4:[function(require2,module3,exports3){function setupArguments(args){const newArguments=new Array(args.length);for(let i=0;i<args.length;i++){const arg=args[i];if(arg.toArray){newArguments[i]=arg.toArray()}else{newArguments[i]=arg}}return newArguments}function mock1D(){const args=setupArguments(arguments);const row=new Float32Array(this.output.x);for(let x22=0;x22<this.output.x;x22++){this.thread.x=x22;this.thread.y=0;this.thread.z=0;row[x22]=this._fn.apply(this,args)}return row}function mock2D(){const args=setupArguments(arguments);const matrix=new Array(this.output.y);for(let y5=0;y5<this.output.y;y5++){const row=new Float32Array(this.output.x);for(let x22=0;x22<this.output.x;x22++){this.thread.x=x22;this.thread.y=y5;this.thread.z=0;row[x22]=this._fn.apply(this,args)}matrix[y5]=row}return matrix}function mock2DGraphical(){const args=setupArguments(arguments);for(let y5=0;y5<this.output.y;y5++){for(let x22=0;x22<this.output.x;x22++){this.thread.x=x22;this.thread.y=y5;this.thread.z=0;this._fn.apply(this,args)}}}function mock3D(){const args=setupArguments(arguments);const cube=new Array(this.output.z);for(let z3=0;z3<this.output.z;z3++){const matrix=new Array(this.output.y);for(let y5=0;y5<this.output.y;y5++){const row=new Float32Array(this.output.x);for(let x22=0;x22<this.output.x;x22++){this.thread.x=x22;this.thread.y=y5;this.thread.z=z3;row[x22]=this._fn.apply(this,args)}matrix[y5]=row}cube[z3]=matrix}return cube}function apiDecorate(kernel){kernel.setOutput=output=>{kernel.output=setupOutput(output);if(kernel.graphical){setupGraphical(kernel)}};kernel.toJSON=()=>{throw new Error("Not usable with gpuMock")};kernel.setConstants=flag=>{kernel.constants=flag;return kernel};kernel.setGraphical=flag=>{kernel.graphical=flag;return kernel};kernel.setCanvas=flag=>{kernel.canvas=flag;return kernel};kernel.setContext=flag=>{kernel.context=flag;return kernel};kernel.destroy=()=>{};kernel.validateSettings=()=>{};if(kernel.graphical&&kernel.output){setupGraphical(kernel)}kernel.exec=function(){return new Promise((resolve,reject)=>{try{resolve(kernel.apply(kernel,arguments))}catch(e){reject(e)}})};kernel.getPixels=flip=>{const{x:x22,y:y5}=kernel.output;return flip?flipPixels(kernel._imageData.data,x22,y5):kernel._imageData.data.slice(0)};kernel.color=function(r,g3,b2,a){if(typeof a==="undefined"){a=1}r=Math.floor(r*255);g3=Math.floor(g3*255);b2=Math.floor(b2*255);a=Math.floor(a*255);const width=kernel.output.x;const height=kernel.output.y;const x22=kernel.thread.x;const y5=height-kernel.thread.y-1;const index=x22+y5*width;kernel._colorData[index*4+0]=r;kernel._colorData[index*4+1]=g3;kernel._colorData[index*4+2]=b2;kernel._colorData[index*4+3]=a};const mockMethod=()=>kernel;const methods=["setWarnVarUsage","setArgumentTypes","setTactic","setOptimizeFloatMemory","setDebug","setLoopMaxIterations","setConstantTypes","setFunctions","setNativeFunctions","setInjectedNative","setPipeline","setPrecision","setOutputToTexture","setImmutable","setStrictIntegers","setDynamicOutput","setHardcodeConstants","setDynamicArguments","setUseLegacyEncoder","setWarnVarUsage","addSubKernel"];for(let i=0;i<methods.length;i++){kernel[methods[i]]=mockMethod}return kernel}function setupGraphical(kernel){const{x:x22,y:y5}=kernel.output;if(kernel.context&&kernel.context.createImageData){const data=new Uint8ClampedArray(x22*y5*4);kernel._imageData=kernel.context.createImageData(x22,y5);kernel._colorData=data}else{const data=new Uint8ClampedArray(x22*y5*4);kernel._imageData={data};kernel._colorData=data}}function setupOutput(output){let result=null;if(output.length){if(output.length===3){const[x22,y5,z3]=output;result={x:x22,y:y5,z:z3}}else if(output.length===2){const[x22,y5]=output;result={x:x22,y:y5}}else{const[x22]=output;result={x:x22}}}else{result=output}return result}function gpuMock(fn2,settings={}){const output=settings.output?setupOutput(settings.output):null;function kernel(){if(kernel.output.z){return mock3D.apply(kernel,arguments)}else if(kernel.output.y){if(kernel.graphical){return mock2DGraphical.apply(kernel,arguments)}return mock2D.apply(kernel,arguments)}else{return mock1D.apply(kernel,arguments)}}kernel._fn=fn2;kernel.constants=settings.constants||null;kernel.context=settings.context||null;kernel.canvas=settings.canvas||null;kernel.graphical=settings.graphical||false;kernel._imageData=null;kernel._colorData=null;kernel.output=output;kernel.thread={x:0,y:0,z:0};return apiDecorate(kernel)}function flipPixels(pixels,width,height){const halfHeight=height/2|0;const bytesPerRow=width*4;const temp=new Uint8ClampedArray(width*4);const result=pixels.slice(0);for(let y5=0;y5<halfHeight;++y5){const topOffset=y5*bytesPerRow;const bottomOffset=(height-y5-1)*bytesPerRow;temp.set(result.subarray(topOffset,topOffset+bytesPerRow));result.copyWithin(topOffset,bottomOffset,bottomOffset+bytesPerRow);result.set(temp,bottomOffset)}return result}module3.exports={gpuMock}},{}],5:[function(require2,module3,exports3){const{utils}=require2("./utils");function alias(name2,source){const fnString=source.toString();return new Function(`return function ${name2} (${utils.getArgumentNamesFromString(fnString).join(", ")}) {\n        ${utils.getFunctionBodyFromString(fnString)}\n      }`)()}module3.exports={alias}},{"./utils":114}],6:[function(require2,module3,exports3){const{FunctionNode}=require2("../function-node");class CPUFunctionNode extends FunctionNode{astFunction(ast,retArr){if(!this.isRootKernel){retArr.push("function");retArr.push(" ");retArr.push(this.name);retArr.push("(");for(let i=0;i<this.argumentNames.length;++i){const argumentName=this.argumentNames[i];if(i>0){retArr.push(", ")}retArr.push("user_");retArr.push(argumentName)}retArr.push(") {\\n")}for(let i=0;i<ast.body.body.length;++i){this.astGeneric(ast.body.body[i],retArr);retArr.push("\\n")}if(!this.isRootKernel){retArr.push("}\\n")}return retArr}astReturnStatement(ast,retArr){const type=this.returnType||this.getType(ast.argument);if(!this.returnType){this.returnType=type}if(this.isRootKernel){retArr.push(this.leadingReturnStatement);this.astGeneric(ast.argument,retArr);retArr.push(";\\n");retArr.push(this.followingReturnStatement);retArr.push("continue;\\n")}else if(this.isSubKernel){retArr.push(`subKernelResult_${this.name} = `);this.astGeneric(ast.argument,retArr);retArr.push(";");retArr.push(`return subKernelResult_${this.name};`)}else{retArr.push("return ");this.astGeneric(ast.argument,retArr);retArr.push(";")}return retArr}astLiteral(ast,retArr){if(isNaN(ast.value)){throw this.astErrorOutput("Non-numeric literal not supported : "+ast.value,ast)}retArr.push(ast.value);return retArr}astBinaryExpression(ast,retArr){retArr.push("(");this.astGeneric(ast.left,retArr);retArr.push(ast.operator);this.astGeneric(ast.right,retArr);retArr.push(")");return retArr}astIdentifierExpression(idtNode,retArr){if(idtNode.type!=="Identifier"){throw this.astErrorOutput("IdentifierExpression - not an Identifier",idtNode)}switch(idtNode.name){case"Infinity":retArr.push("Infinity");break;default:if(this.constants&&this.constants.hasOwnProperty(idtNode.name)){retArr.push("constants_"+idtNode.name)}else{retArr.push("user_"+idtNode.name)}}return retArr}astForStatement(forNode,retArr){if(forNode.type!=="ForStatement"){throw this.astErrorOutput("Invalid for statement",forNode)}const initArr=[];const testArr=[];const updateArr=[];const bodyArr=[];let isSafe=null;if(forNode.init){this.pushState("in-for-loop-init");this.astGeneric(forNode.init,initArr);for(let i=0;i<initArr.length;i++){if(initArr[i].includes&&initArr[i].includes(",")){isSafe=false}}this.popState("in-for-loop-init")}else{isSafe=false}if(forNode.test){this.astGeneric(forNode.test,testArr)}else{isSafe=false}if(forNode.update){this.astGeneric(forNode.update,updateArr)}else{isSafe=false}if(forNode.body){this.pushState("loop-body");this.astGeneric(forNode.body,bodyArr);this.popState("loop-body")}if(isSafe===null){isSafe=this.isSafe(forNode.init)&&this.isSafe(forNode.test)}if(isSafe){retArr.push(`for (${initArr.join("")};${testArr.join("")};${updateArr.join("")}){\n`);retArr.push(bodyArr.join(""));retArr.push("}\\n")}else{const iVariableName=this.getInternalVariableName("safeI");if(initArr.length>0){retArr.push(initArr.join(""),";\\n")}retArr.push(`for (let ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\n`);if(testArr.length>0){retArr.push(`if (!${testArr.join("")}) break;\n`)}retArr.push(bodyArr.join(""));retArr.push(`\n${updateArr.join("")};`);retArr.push("}\\n")}return retArr}astWhileStatement(whileNode,retArr){if(whileNode.type!=="WhileStatement"){throw this.astErrorOutput("Invalid while statement",whileNode)}retArr.push("for (let i = 0; i < LOOP_MAX; i++) {");retArr.push("if (");this.astGeneric(whileNode.test,retArr);retArr.push(") {\\n");this.astGeneric(whileNode.body,retArr);retArr.push("} else {\\n");retArr.push("break;\\n");retArr.push("}\\n");retArr.push("}\\n");return retArr}astDoWhileStatement(doWhileNode,retArr){if(doWhileNode.type!=="DoWhileStatement"){throw this.astErrorOutput("Invalid while statement",doWhileNode)}retArr.push("for (let i = 0; i < LOOP_MAX; i++) {");this.astGeneric(doWhileNode.body,retArr);retArr.push("if (!");this.astGeneric(doWhileNode.test,retArr);retArr.push(") {\\n");retArr.push("break;\\n");retArr.push("}\\n");retArr.push("}\\n");return retArr}astAssignmentExpression(assNode,retArr){const declaration=this.getDeclaration(assNode.left);if(declaration&&!declaration.assignable){throw this.astErrorOutput(`Variable ${assNode.left.name} is not assignable here`,assNode)}this.astGeneric(assNode.left,retArr);retArr.push(assNode.operator);this.astGeneric(assNode.right,retArr);return retArr}astBlockStatement(bNode,retArr){if(this.isState("loop-body")){this.pushState("block-body");for(let i=0;i<bNode.body.length;i++){this.astGeneric(bNode.body[i],retArr)}this.popState("block-body")}else{retArr.push("{\\n");for(let i=0;i<bNode.body.length;i++){this.astGeneric(bNode.body[i],retArr)}retArr.push("}\\n")}return retArr}astVariableDeclaration(varDecNode,retArr){retArr.push(`${varDecNode.kind} `);const{declarations}=varDecNode;for(let i=0;i<declarations.length;i++){if(i>0){retArr.push(",")}const declaration=declarations[i];const info=this.getDeclaration(declaration.id);if(!info.valueType){info.valueType=this.getType(declaration.init)}this.astGeneric(declaration,retArr)}if(!this.isState("in-for-loop-init")){retArr.push(";")}return retArr}astIfStatement(ifNode,retArr){retArr.push("if (");this.astGeneric(ifNode.test,retArr);retArr.push(")");if(ifNode.consequent.type==="BlockStatement"){this.astGeneric(ifNode.consequent,retArr)}else{retArr.push(" {\\n");this.astGeneric(ifNode.consequent,retArr);retArr.push("\\n}\\n")}if(ifNode.alternate){retArr.push("else ");if(ifNode.alternate.type==="BlockStatement"||ifNode.alternate.type==="IfStatement"){this.astGeneric(ifNode.alternate,retArr)}else{retArr.push(" {\\n");this.astGeneric(ifNode.alternate,retArr);retArr.push("\\n}\\n")}}return retArr}astSwitchStatement(ast,retArr){const{discriminant,cases}=ast;retArr.push("switch (");this.astGeneric(discriminant,retArr);retArr.push(") {\\n");for(let i=0;i<cases.length;i++){if(cases[i].test===null){retArr.push("default:\\n");this.astGeneric(cases[i].consequent,retArr);if(cases[i].consequent&&cases[i].consequent.length>0){retArr.push("break;\\n")}continue}retArr.push("case ");this.astGeneric(cases[i].test,retArr);retArr.push(":\\n");if(cases[i].consequent&&cases[i].consequent.length>0){this.astGeneric(cases[i].consequent,retArr);retArr.push("break;\\n")}}retArr.push("\\n}")}astThisExpression(tNode,retArr){retArr.push("_this");return retArr}astMemberExpression(mNode,retArr){const{signature,type,property,xProperty,yProperty,zProperty,name:name2,origin}=this.getMemberExpressionDetails(mNode);switch(signature){case"this.thread.value":retArr.push(`_this.thread.${name2}`);return retArr;case"this.output.value":switch(name2){case"x":retArr.push("outputX");break;case"y":retArr.push("outputY");break;case"z":retArr.push("outputZ");break;default:throw this.astErrorOutput("Unexpected expression",mNode)}return retArr;case"value":throw this.astErrorOutput("Unexpected expression",mNode);case"value[]":case"value[][]":case"value[][][]":case"value.value":if(origin==="Math"){retArr.push(Math[name2]);return retArr}switch(property){case"r":retArr.push(`user_${name2}[0]`);return retArr;case"g":retArr.push(`user_${name2}[1]`);return retArr;case"b":retArr.push(`user_${name2}[2]`);return retArr;case"a":retArr.push(`user_${name2}[3]`);return retArr}break;case"this.constants.value":case"this.constants.value[]":case"this.constants.value[][]":case"this.constants.value[][][]":break;case"fn()[]":this.astGeneric(mNode.object,retArr);retArr.push("[");this.astGeneric(mNode.property,retArr);retArr.push("]");return retArr;case"fn()[][]":this.astGeneric(mNode.object.object,retArr);retArr.push("[");this.astGeneric(mNode.object.property,retArr);retArr.push("]");retArr.push("[");this.astGeneric(mNode.property,retArr);retArr.push("]");return retArr;default:throw this.astErrorOutput("Unexpected expression",mNode)}if(!mNode.computed){switch(type){case"Number":case"Integer":case"Float":case"Boolean":retArr.push(`${origin}_${name2}`);return retArr}}const markupName=`${origin}_${name2}`;switch(type){case"Array(2)":case"Array(3)":case"Array(4)":case"Matrix(2)":case"Matrix(3)":case"Matrix(4)":case"HTMLImageArray":case"ArrayTexture(1)":case"ArrayTexture(2)":case"ArrayTexture(3)":case"ArrayTexture(4)":case"HTMLImage":default:let size;let isInput;if(origin==="constants"){const constant=this.constants[name2];isInput=this.constantTypes[name2]==="Input";size=isInput?constant.size:null}else{isInput=this.isInput(name2);size=isInput?this.argumentSizes[this.argumentNames.indexOf(name2)]:null}retArr.push(`${markupName}`);if(zProperty&&yProperty){if(isInput){retArr.push("[(");this.astGeneric(zProperty,retArr);retArr.push(`*${this.dynamicArguments?"(outputY * outputX)":size[1]*size[0]})+(`);this.astGeneric(yProperty,retArr);retArr.push(`*${this.dynamicArguments?"outputX":size[0]})+`);this.astGeneric(xProperty,retArr);retArr.push("]")}else{retArr.push("[");this.astGeneric(zProperty,retArr);retArr.push("]");retArr.push("[");this.astGeneric(yProperty,retArr);retArr.push("]");retArr.push("[");this.astGeneric(xProperty,retArr);retArr.push("]")}}else if(yProperty){if(isInput){retArr.push("[(");this.astGeneric(yProperty,retArr);retArr.push(`*${this.dynamicArguments?"outputX":size[0]})+`);this.astGeneric(xProperty,retArr);retArr.push("]")}else{retArr.push("[");this.astGeneric(yProperty,retArr);retArr.push("]");retArr.push("[");this.astGeneric(xProperty,retArr);retArr.push("]")}}else if(typeof xProperty!=="undefined"){retArr.push("[");this.astGeneric(xProperty,retArr);retArr.push("]")}}return retArr}astCallExpression(ast,retArr){if(ast.type!=="CallExpression"){throw this.astErrorOutput("Unknown CallExpression",ast)}let functionName=this.astMemberExpressionUnroll(ast.callee);if(this.calledFunctions.indexOf(functionName)<0){this.calledFunctions.push(functionName)}const isMathFunction=this.isAstMathFunction(ast);if(this.onFunctionCall){this.onFunctionCall(this.name,functionName,ast.arguments)}retArr.push(functionName);retArr.push("(");const targetTypes=this.lookupFunctionArgumentTypes(functionName)||[];for(let i=0;i<ast.arguments.length;++i){const argument=ast.arguments[i];let argumentType=this.getType(argument);if(!targetTypes[i]){this.triggerImplyArgumentType(functionName,i,argumentType,this)}if(i>0){retArr.push(", ")}this.astGeneric(argument,retArr)}retArr.push(")");return retArr}astArrayExpression(arrNode,retArr){const returnType=this.getType(arrNode);const arrLen=arrNode.elements.length;const elements=[];for(let i=0;i<arrLen;++i){const element=[];this.astGeneric(arrNode.elements[i],element);elements.push(element.join(""))}switch(returnType){case"Matrix(2)":case"Matrix(3)":case"Matrix(4)":retArr.push(`[${elements.join(", ")}]`);break;default:retArr.push(`new Float32Array([${elements.join(", ")}])`)}return retArr}astDebuggerStatement(arrNode,retArr){retArr.push("debugger;");return retArr}}module3.exports={CPUFunctionNode}},{"../function-node":10}],7:[function(require2,module3,exports3){const{utils}=require2("../../utils");function constantsToString(constants,types){const results=[];for(const name2 in types){if(!types.hasOwnProperty(name2))continue;const type=types[name2];const constant=constants[name2];switch(type){case"Number":case"Integer":case"Float":case"Boolean":results.push(`${name2}:${constant}`);break;case"Array(2)":case"Array(3)":case"Array(4)":case"Matrix(2)":case"Matrix(3)":case"Matrix(4)":results.push(`${name2}:new ${constant.constructor.name}(${JSON.stringify(Array.from(constant))})`);break}}return`{ ${results.join()} }`}function cpuKernelString(cpuKernel,name2){const header=[];const thisProperties=[];const beforeReturn=[];const useFunctionKeyword=!/^function/.test(cpuKernel.color.toString());header.push("  const { context, canvas, constants: incomingConstants } = settings;",`  const output = new Int32Array(${JSON.stringify(Array.from(cpuKernel.output))});`,`  const _constantTypes = ${JSON.stringify(cpuKernel.constantTypes)};`,`  const _constants = ${constantsToString(cpuKernel.constants,cpuKernel.constantTypes)};`);thisProperties.push("    constants: _constants,","    context,","    output,","    thread: {x: 0, y: 0, z: 0},");if(cpuKernel.graphical){header.push(`  const _imageData = context.createImageData(${cpuKernel.output[0]}, ${cpuKernel.output[1]});`);header.push(`  const _colorData = new Uint8ClampedArray(${cpuKernel.output[0]} * ${cpuKernel.output[1]} * 4);`);const colorFn=utils.flattenFunctionToString((useFunctionKeyword?"function ":"")+cpuKernel.color.toString(),{thisLookup:propertyName=>{switch(propertyName){case"_colorData":return"_colorData";case"_imageData":return"_imageData";case"output":return"output";case"thread":return"this.thread"}return JSON.stringify(cpuKernel[propertyName])},findDependency:(object,name3)=>{return null}});const getPixelsFn=utils.flattenFunctionToString((useFunctionKeyword?"function ":"")+cpuKernel.getPixels.toString(),{thisLookup:propertyName=>{switch(propertyName){case"_colorData":return"_colorData";case"_imageData":return"_imageData";case"output":return"output";case"thread":return"this.thread"}return JSON.stringify(cpuKernel[propertyName])},findDependency:()=>{return null}});thisProperties.push("    _imageData,","    _colorData,",`    color: ${colorFn},`);beforeReturn.push(`  kernel.getPixels = ${getPixelsFn};`)}const constantTypes=[];const constantKeys=Object.keys(cpuKernel.constantTypes);for(let i=0;i<constantKeys.length;i++){constantTypes.push(cpuKernel.constantTypes[constantKeys])}if(cpuKernel.argumentTypes.indexOf("HTMLImageArray")!==-1||constantTypes.indexOf("HTMLImageArray")!==-1){const flattenedImageTo3DArray=utils.flattenFunctionToString((useFunctionKeyword?"function ":"")+cpuKernel._imageTo3DArray.toString(),{doNotDefine:["canvas"],findDependency:(object,name3)=>{if(object==="this"){return(useFunctionKeyword?"function ":"")+cpuKernel[name3].toString()}return null},thisLookup:propertyName=>{switch(propertyName){case"canvas":return;case"context":return"context"}}});beforeReturn.push(flattenedImageTo3DArray);thisProperties.push(`    _mediaTo2DArray,`);thisProperties.push(`    _imageTo3DArray,`)}else if(cpuKernel.argumentTypes.indexOf("HTMLImage")!==-1||constantTypes.indexOf("HTMLImage")!==-1){const flattenedImageTo2DArray=utils.flattenFunctionToString((useFunctionKeyword?"function ":"")+cpuKernel._mediaTo2DArray.toString(),{findDependency:(object,name3)=>{return null},thisLookup:propertyName=>{switch(propertyName){case"canvas":return"settings.canvas";case"context":return"settings.context"}throw new Error("unhandled thisLookup")}});beforeReturn.push(flattenedImageTo2DArray);thisProperties.push(`    _mediaTo2DArray,`)}return`function(settings) {\n      ${header.join("\\n")}\n        for (const p in _constantTypes) {\n          if (!_constantTypes.hasOwnProperty(p)) continue;\n          const type = _constantTypes[p];\n          switch (type) {\n            case \'Number\':\n            case \'Integer\':\n            case \'Float\':\n            case \'Boolean\':\n            case \'Array(2)\':\n            case \'Array(3)\':\n            case \'Array(4)\':\n            case \'Matrix(2)\':\n            case \'Matrix(3)\':\n            case \'Matrix(4)\':\n              if (incomingConstants.hasOwnProperty(p)) {\n                console.warn(\'constant \' + p + \' of type \' + type + \' cannot be resigned\');\n              }\n              continue;\n          }\n          if (!incomingConstants.hasOwnProperty(p)) {\n            throw new Error(\'constant \' + p + \' not found\');\n          }\n          _constants[p] = incomingConstants[p];\n        }\n        const kernel = (function() {\n      ${cpuKernel._kernelString}\n        })\n          .apply({ ${thisProperties.join("\\n")} });\n        ${beforeReturn.join("\\n")}\n        return kernel;\n      }`}module3.exports={cpuKernelString}},{"../../utils":114}],8:[function(require2,module3,exports3){const{Kernel}=require2("../kernel");const{FunctionBuilder}=require2("../function-builder");const{CPUFunctionNode}=require2("./function-node");const{utils}=require2("../../utils");const{cpuKernelString}=require2("./kernel-string");class CPUKernel extends Kernel{static getFeatures(){return this.features}static get features(){return Object.freeze({kernelMap:true,isIntegerDivisionAccurate:true})}static get isSupported(){return true}static isContextMatch(context){return false}static get mode(){return"cpu"}static nativeFunctionArguments(){return null}static nativeFunctionReturnType(){throw new Error(`Looking up native function return type not supported on ${this.name}`)}static combineKernels(combinedKernel){return combinedKernel}static getSignature(kernel,argumentTypes){return"cpu"+(argumentTypes.length>0?":"+argumentTypes.join(","):"")}constructor(source,settings){super(source,settings);this.mergeSettings(source.settings||settings);this._imageData=null;this._colorData=null;this._kernelString=null;this._prependedString=[];this.thread={x:0,y:0,z:0};this.translatedSources=null}initCanvas(){if(typeof document!=="undefined"){return document.createElement("canvas")}else if(typeof OffscreenCanvas!=="undefined"){return new OffscreenCanvas(0,0)}}initContext(){if(!this.canvas)return null;return this.canvas.getContext("2d")}initPlugins(settings){return[]}validateSettings(args){if(!this.output||this.output.length===0){if(args.length!==1){throw new Error("Auto output only supported for kernels with only one input")}const argType=utils.getVariableType(args[0],this.strictIntegers);if(argType==="Array"){this.output=utils.getDimensions(argType)}else if(argType==="NumberTexture"||argType==="ArrayTexture(4)"){this.output=args[0].output}else{throw new Error("Auto output not supported for input type: "+argType)}}if(this.graphical){if(this.output.length!==2){throw new Error("Output must have 2 dimensions on graphical mode")}}this.checkOutput()}translateSource(){this.leadingReturnStatement=this.output.length>1?"resultX[x] = ":"result[x] = ";if(this.subKernels){const followingReturnStatement=[];for(let i=0;i<this.subKernels.length;i++){const{name:name2}=this.subKernels[i];followingReturnStatement.push(this.output.length>1?`resultX_${name2}[x] = subKernelResult_${name2};\n`:`result_${name2}[x] = subKernelResult_${name2};\n`)}this.followingReturnStatement=followingReturnStatement.join("")}const functionBuilder=FunctionBuilder.fromKernel(this,CPUFunctionNode);this.translatedSources=functionBuilder.getPrototypes("kernel");if(!this.graphical&&!this.returnType){this.returnType=functionBuilder.getKernelResultType()}}build(){if(this.built)return;this.setupConstants();this.setupArguments(arguments);this.validateSettings(arguments);this.translateSource();if(this.graphical){const{canvas,output}=this;if(!canvas){throw new Error("no canvas available for using graphical output")}const width=output[0];const height=output[1]||1;canvas.width=width;canvas.height=height;this._imageData=this.context.createImageData(width,height);this._colorData=new Uint8ClampedArray(width*height*4)}const kernelString=this.getKernelString();this.kernelString=kernelString;if(this.debug){console.log("Function output:");console.log(kernelString)}try{this.run=new Function([],kernelString).bind(this)()}catch(e){console.error("An error occurred compiling the javascript: ",e)}this.buildSignature(arguments);this.built=true}color(r,g3,b2,a){if(typeof a==="undefined"){a=1}r=Math.floor(r*255);g3=Math.floor(g3*255);b2=Math.floor(b2*255);a=Math.floor(a*255);const width=this.output[0];const height=this.output[1];const x22=this.thread.x;const y5=height-this.thread.y-1;const index=x22+y5*width;this._colorData[index*4+0]=r;this._colorData[index*4+1]=g3;this._colorData[index*4+2]=b2;this._colorData[index*4+3]=a}getKernelString(){if(this._kernelString!==null)return this._kernelString;let kernelThreadString=null;let{translatedSources}=this;if(translatedSources.length>1){translatedSources=translatedSources.filter(fn2=>{if(/^function/.test(fn2))return fn2;kernelThreadString=fn2;return false})}else{kernelThreadString=translatedSources.shift()}return this._kernelString=`  const LOOP_MAX = ${this._getLoopMaxString()};\n        ${this.injectedNative||""}\n        const _this = this;\n        ${this._resultKernelHeader()}\n        ${this._processConstants()}\n        return (${this.argumentNames.map(argumentName=>"user_"+argumentName).join(", ")}) => {\n          ${this._prependedString.join("")}\n          ${this._earlyThrows()}\n          ${this._processArguments()}\n          ${this.graphical?this._graphicalKernelBody(kernelThreadString):this._resultKernelBody(kernelThreadString)}\n          ${translatedSources.length>0?translatedSources.join("\\n"):""}\n        };`}toString(){return cpuKernelString(this)}_getLoopMaxString(){return this.loopMaxIterations?` ${parseInt(this.loopMaxIterations)};`:" 1000;"}_processConstants(){if(!this.constants)return"";const result=[];for(let p in this.constants){const type=this.constantTypes[p];switch(type){case"HTMLCanvas":case"HTMLImage":case"HTMLVideo":result.push(`    const constants_${p} = this._mediaTo2DArray(this.constants.${p});\n`);break;case"HTMLImageArray":result.push(`    const constants_${p} = this._imageTo3DArray(this.constants.${p});\n`);break;case"Input":result.push(`    const constants_${p} = this.constants.${p}.value;\n`);break;default:result.push(`    const constants_${p} = this.constants.${p};\n`)}}return result.join("")}_earlyThrows(){if(this.graphical)return"";if(this.immutable)return"";if(!this.pipeline)return"";const arrayArguments=[];for(let i=0;i<this.argumentTypes.length;i++){if(this.argumentTypes[i]==="Array"){arrayArguments.push(this.argumentNames[i])}}if(arrayArguments.length===0)return"";const checks=[];for(let i=0;i<arrayArguments.length;i++){const argumentName=arrayArguments[i];const checkSubKernels=this._mapSubKernels(subKernel=>`user_${argumentName} === result_${subKernel.name}`).join(" || ");checks.push(`user_${argumentName} === result${checkSubKernels?` || ${checkSubKernels}`:""}`)}return`if (${checks.join(" || ")}) throw new Error(\'Source and destination arrays are the same.  Use immutable = true\');`}_processArguments(){const result=[];for(let i=0;i<this.argumentTypes.length;i++){const variableName=`user_${this.argumentNames[i]}`;switch(this.argumentTypes[i]){case"HTMLCanvas":case"HTMLImage":case"HTMLVideo":result.push(`    ${variableName} = this._mediaTo2DArray(${variableName});\n`);break;case"HTMLImageArray":result.push(`    ${variableName} = this._imageTo3DArray(${variableName});\n`);break;case"Input":result.push(`    ${variableName} = ${variableName}.value;\n`);break;case"ArrayTexture(1)":case"ArrayTexture(2)":case"ArrayTexture(3)":case"ArrayTexture(4)":case"NumberTexture":case"MemoryOptimizedNumberTexture":result.push(`\n          if (${variableName}.toArray) {\n            if (!_this.textureCache) {\n              _this.textureCache = [];\n              _this.arrayCache = [];\n            }\n            const textureIndex = _this.textureCache.indexOf(${variableName});\n            if (textureIndex !== -1) {\n              ${variableName} = _this.arrayCache[textureIndex];\n            } else {\n              _this.textureCache.push(${variableName});\n              ${variableName} = ${variableName}.toArray();\n              _this.arrayCache.push(${variableName});\n            }\n          }`);break}}return result.join("")}_mediaTo2DArray(media){const canvas=this.canvas;const width=media.width>0?media.width:media.videoWidth;const height=media.height>0?media.height:media.videoHeight;if(canvas.width<width){canvas.width=width}if(canvas.height<height){canvas.height=height}const ctx=this.context;ctx.drawImage(media,0,0,width,height);const pixelsData=ctx.getImageData(0,0,width,height).data;const imageArray=new Array(height);let index=0;for(let y5=height-1;y5>=0;y5--){const row=imageArray[y5]=new Array(width);for(let x22=0;x22<width;x22++){const pixel=new Float32Array(4);pixel[0]=pixelsData[index++]/255;pixel[1]=pixelsData[index++]/255;pixel[2]=pixelsData[index++]/255;pixel[3]=pixelsData[index++]/255;row[x22]=pixel}}return imageArray}getPixels(flip){const[width,height]=this.output;return flip?utils.flipPixels(this._imageData.data,width,height):this._imageData.data.slice(0)}_imageTo3DArray(images){const imagesArray=new Array(images.length);for(let i=0;i<images.length;i++){imagesArray[i]=this._mediaTo2DArray(images[i])}return imagesArray}_resultKernelHeader(){if(this.graphical)return"";if(this.immutable)return"";if(!this.pipeline)return"";switch(this.output.length){case 1:return this._mutableKernel1DResults();case 2:return this._mutableKernel2DResults();case 3:return this._mutableKernel3DResults()}}_resultKernelBody(kernelString){switch(this.output.length){case 1:return(!this.immutable&&this.pipeline?this._resultMutableKernel1DLoop(kernelString):this._resultImmutableKernel1DLoop(kernelString))+this._kernelOutput();case 2:return(!this.immutable&&this.pipeline?this._resultMutableKernel2DLoop(kernelString):this._resultImmutableKernel2DLoop(kernelString))+this._kernelOutput();case 3:return(!this.immutable&&this.pipeline?this._resultMutableKernel3DLoop(kernelString):this._resultImmutableKernel3DLoop(kernelString))+this._kernelOutput();default:throw new Error("unsupported size kernel")}}_graphicalKernelBody(kernelThreadString){switch(this.output.length){case 2:return this._graphicalKernel2DLoop(kernelThreadString)+this._graphicalOutput();default:throw new Error("unsupported size kernel")}}_graphicalOutput(){return`\n          this._imageData.data.set(this._colorData);\n          this.context.putImageData(this._imageData, 0, 0);\n          return;`}_getKernelResultTypeConstructorString(){switch(this.returnType){case"LiteralInteger":case"Number":case"Integer":case"Float":return"Float32Array";case"Array(2)":case"Array(3)":case"Array(4)":return"Array";default:if(this.graphical){return"Float32Array"}throw new Error(`unhandled returnType ${this.returnType}`)}}_resultImmutableKernel1DLoop(kernelString){const constructorString=this._getKernelResultTypeConstructorString();return`  const outputX = _this.output[0];\n          const result = new ${constructorString}(outputX);\n          ${this._mapSubKernels(subKernel=>`const result_${subKernel.name} = new ${constructorString}(outputX);\n`).join("    ")}\n          ${this._mapSubKernels(subKernel=>`let subKernelResult_${subKernel.name};\n`).join("    ")}\n          for (let x = 0; x < outputX; x++) {\n            this.thread.x = x;\n            this.thread.y = 0;\n            this.thread.z = 0;\n            ${kernelString}\n          }`}_mutableKernel1DResults(){const constructorString=this._getKernelResultTypeConstructorString();return`  const outputX = _this.output[0];\n          const result = new ${constructorString}(outputX);\n          ${this._mapSubKernels(subKernel=>`const result_${subKernel.name} = new ${constructorString}(outputX);\n`).join("    ")}\n          ${this._mapSubKernels(subKernel=>`let subKernelResult_${subKernel.name};\n`).join("    ")}`}_resultMutableKernel1DLoop(kernelString){return`  const outputX = _this.output[0];\n          for (let x = 0; x < outputX; x++) {\n            this.thread.x = x;\n            this.thread.y = 0;\n            this.thread.z = 0;\n            ${kernelString}\n          }`}_resultImmutableKernel2DLoop(kernelString){const constructorString=this._getKernelResultTypeConstructorString();return`  const outputX = _this.output[0];\n          const outputY = _this.output[1];\n          const result = new Array(outputY);\n          ${this._mapSubKernels(subKernel=>`const result_${subKernel.name} = new Array(outputY);\n`).join("    ")}\n          ${this._mapSubKernels(subKernel=>`let subKernelResult_${subKernel.name};\n`).join("    ")}\n          for (let y = 0; y < outputY; y++) {\n            this.thread.z = 0;\n            this.thread.y = y;\n            const resultX = result[y] = new ${constructorString}(outputX);\n            ${this._mapSubKernels(subKernel=>`const resultX_${subKernel.name} = result_${subKernel.name}[y] = new ${constructorString}(outputX);\n`).join("")}\n            for (let x = 0; x < outputX; x++) {\n              this.thread.x = x;\n              ${kernelString}\n            }\n          }`}_mutableKernel2DResults(){const constructorString=this._getKernelResultTypeConstructorString();return`  const outputX = _this.output[0];\n          const outputY = _this.output[1];\n          const result = new Array(outputY);\n          ${this._mapSubKernels(subKernel=>`const result_${subKernel.name} = new Array(outputY);\n`).join("    ")}\n          ${this._mapSubKernels(subKernel=>`let subKernelResult_${subKernel.name};\n`).join("    ")}\n          for (let y = 0; y < outputY; y++) {\n            const resultX = result[y] = new ${constructorString}(outputX);\n            ${this._mapSubKernels(subKernel=>`const resultX_${subKernel.name} = result_${subKernel.name}[y] = new ${constructorString}(outputX);\n`).join("")}\n          }`}_resultMutableKernel2DLoop(kernelString){const constructorString=this._getKernelResultTypeConstructorString();return`  const outputX = _this.output[0];\n          const outputY = _this.output[1];\n          for (let y = 0; y < outputY; y++) {\n            this.thread.z = 0;\n            this.thread.y = y;\n            const resultX = result[y];\n            ${this._mapSubKernels(subKernel=>`const resultX_${subKernel.name} = result_${subKernel.name}[y] = new ${constructorString}(outputX);\n`).join("")}\n            for (let x = 0; x < outputX; x++) {\n              this.thread.x = x;\n              ${kernelString}\n            }\n          }`}_graphicalKernel2DLoop(kernelString){return`  const outputX = _this.output[0];\n          const outputY = _this.output[1];\n          for (let y = 0; y < outputY; y++) {\n            this.thread.z = 0;\n            this.thread.y = y;\n            for (let x = 0; x < outputX; x++) {\n              this.thread.x = x;\n              ${kernelString}\n            }\n          }`}_resultImmutableKernel3DLoop(kernelString){const constructorString=this._getKernelResultTypeConstructorString();return`  const outputX = _this.output[0];\n          const outputY = _this.output[1];\n          const outputZ = _this.output[2];\n          const result = new Array(outputZ);\n          ${this._mapSubKernels(subKernel=>`const result_${subKernel.name} = new Array(outputZ);\n`).join("    ")}\n          ${this._mapSubKernels(subKernel=>`let subKernelResult_${subKernel.name};\n`).join("    ")}\n          for (let z = 0; z < outputZ; z++) {\n            this.thread.z = z;\n            const resultY = result[z] = new Array(outputY);\n            ${this._mapSubKernels(subKernel=>`const resultY_${subKernel.name} = result_${subKernel.name}[z] = new Array(outputY);\n`).join("      ")}\n            for (let y = 0; y < outputY; y++) {\n              this.thread.y = y;\n              const resultX = resultY[y] = new ${constructorString}(outputX);\n              ${this._mapSubKernels(subKernel=>`const resultX_${subKernel.name} = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\n`).join("        ")}\n              for (let x = 0; x < outputX; x++) {\n                this.thread.x = x;\n                ${kernelString}\n              }\n            }\n          }`}_mutableKernel3DResults(){const constructorString=this._getKernelResultTypeConstructorString();return`  const outputX = _this.output[0];\n          const outputY = _this.output[1];\n          const outputZ = _this.output[2];\n          const result = new Array(outputZ);\n          ${this._mapSubKernels(subKernel=>`const result_${subKernel.name} = new Array(outputZ);\n`).join("    ")}\n          ${this._mapSubKernels(subKernel=>`let subKernelResult_${subKernel.name};\n`).join("    ")}\n          for (let z = 0; z < outputZ; z++) {\n            const resultY = result[z] = new Array(outputY);\n            ${this._mapSubKernels(subKernel=>`const resultY_${subKernel.name} = result_${subKernel.name}[z] = new Array(outputY);\n`).join("      ")}\n            for (let y = 0; y < outputY; y++) {\n              const resultX = resultY[y] = new ${constructorString}(outputX);\n              ${this._mapSubKernels(subKernel=>`const resultX_${subKernel.name} = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\n`).join("        ")}\n            }\n          }`}_resultMutableKernel3DLoop(kernelString){return`  const outputX = _this.output[0];\n          const outputY = _this.output[1];\n          const outputZ = _this.output[2];\n          for (let z = 0; z < outputZ; z++) {\n            this.thread.z = z;\n            const resultY = result[z];\n            for (let y = 0; y < outputY; y++) {\n              this.thread.y = y;\n              const resultX = resultY[y];\n              for (let x = 0; x < outputX; x++) {\n                this.thread.x = x;\n                ${kernelString}\n              }\n            }\n          }`}_kernelOutput(){if(!this.subKernels){return"\\n    return result;"}return`\n    return {\n            result: result,\n            ${this.subKernels.map(subKernel=>`${subKernel.property}: result_${subKernel.name}`).join(",\\n      ")}\n          };`}_mapSubKernels(fn2){return this.subKernels===null?[""]:this.subKernels.map(fn2)}destroy(removeCanvasReference){if(removeCanvasReference){delete this.canvas}}static destroyContext(context){}toJSON(){const json=super.toJSON();json.functionNodes=FunctionBuilder.fromKernel(this,CPUFunctionNode).toJSON();return json}setOutput(output){super.setOutput(output);const[width,height]=this.output;if(this.graphical){this._imageData=this.context.createImageData(width,height);this._colorData=new Uint8ClampedArray(width*height*4)}}prependString(value2){if(this._kernelString)throw new Error("Kernel already built");this._prependedString.push(value2)}hasPrependString(value2){return this._prependedString.indexOf(value2)>-1}}module3.exports={CPUKernel}},{"../../utils":114,"../function-builder":9,"../kernel":36,"./function-node":6,"./kernel-string":7}],9:[function(require2,module3,exports3){class FunctionBuilder{static fromKernel(kernel,FunctionNode,extraNodeOptions){const{kernelArguments,kernelConstants,argumentNames,argumentSizes,argumentBitRatios,constants,constantBitRatios,debug,loopMaxIterations,nativeFunctions,output,optimizeFloatMemory,precision,plugins,source,subKernels,functions,leadingReturnStatement,followingReturnStatement,dynamicArguments,dynamicOutput}=kernel;const argumentTypes=new Array(kernelArguments.length);const constantTypes={};for(let i=0;i<kernelArguments.length;i++){argumentTypes[i]=kernelArguments[i].type}for(let i=0;i<kernelConstants.length;i++){const kernelConstant=kernelConstants[i];constantTypes[kernelConstant.name]=kernelConstant.type}const needsArgumentType=(functionName,index)=>{return functionBuilder.needsArgumentType(functionName,index)};const assignArgumentType=(functionName,index,type)=>{functionBuilder.assignArgumentType(functionName,index,type)};const lookupReturnType=(functionName,ast,requestingNode)=>{return functionBuilder.lookupReturnType(functionName,ast,requestingNode)};const lookupFunctionArgumentTypes=functionName=>{return functionBuilder.lookupFunctionArgumentTypes(functionName)};const lookupFunctionArgumentName=(functionName,argumentIndex)=>{return functionBuilder.lookupFunctionArgumentName(functionName,argumentIndex)};const lookupFunctionArgumentBitRatio=(functionName,argumentName)=>{return functionBuilder.lookupFunctionArgumentBitRatio(functionName,argumentName)};const triggerImplyArgumentType=(functionName,i,argumentType,requestingNode)=>{functionBuilder.assignArgumentType(functionName,i,argumentType,requestingNode)};const triggerImplyArgumentBitRatio=(functionName,argumentName,calleeFunctionName,argumentIndex)=>{functionBuilder.assignArgumentBitRatio(functionName,argumentName,calleeFunctionName,argumentIndex)};const onFunctionCall=(functionName,calleeFunctionName,args)=>{functionBuilder.trackFunctionCall(functionName,calleeFunctionName,args)};const onNestedFunction=(ast,source2)=>{const argumentNames2=[];for(let i=0;i<ast.params.length;i++){argumentNames2.push(ast.params[i].name)}const nestedFunction=new FunctionNode(source2,Object.assign({},nodeOptions,{returnType:null,ast,name:ast.id.name,argumentNames:argumentNames2,lookupReturnType,lookupFunctionArgumentTypes,lookupFunctionArgumentName,lookupFunctionArgumentBitRatio,needsArgumentType,assignArgumentType,triggerImplyArgumentType,triggerImplyArgumentBitRatio,onFunctionCall}));nestedFunction.traceFunctionAST(ast);functionBuilder.addFunctionNode(nestedFunction)};const nodeOptions=Object.assign({isRootKernel:false,onNestedFunction,lookupReturnType,lookupFunctionArgumentTypes,lookupFunctionArgumentName,lookupFunctionArgumentBitRatio,needsArgumentType,assignArgumentType,triggerImplyArgumentType,triggerImplyArgumentBitRatio,onFunctionCall,optimizeFloatMemory,precision,constants,constantTypes,constantBitRatios,debug,loopMaxIterations,output,plugins,dynamicArguments,dynamicOutput},extraNodeOptions||{});const rootNodeOptions=Object.assign({},nodeOptions,{isRootKernel:true,name:"kernel",argumentNames,argumentTypes,argumentSizes,argumentBitRatios,leadingReturnStatement,followingReturnStatement});if(typeof source==="object"&&source.functionNodes){return new FunctionBuilder().fromJSON(source.functionNodes,FunctionNode)}const rootNode=new FunctionNode(source,rootNodeOptions);let functionNodes=null;if(functions){functionNodes=functions.map(fn2=>new FunctionNode(fn2.source,{returnType:fn2.returnType,argumentTypes:fn2.argumentTypes,output,plugins,constants,constantTypes,constantBitRatios,optimizeFloatMemory,precision,lookupReturnType,lookupFunctionArgumentTypes,lookupFunctionArgumentName,lookupFunctionArgumentBitRatio,needsArgumentType,assignArgumentType,triggerImplyArgumentType,triggerImplyArgumentBitRatio,onFunctionCall,onNestedFunction}))}let subKernelNodes=null;if(subKernels){subKernelNodes=subKernels.map(subKernel=>{const{name:name2,source:source2}=subKernel;return new FunctionNode(source2,Object.assign({},nodeOptions,{name:name2,isSubKernel:true,isRootKernel:false}))})}const functionBuilder=new FunctionBuilder({kernel,rootNode,functionNodes,nativeFunctions,subKernelNodes});return functionBuilder}constructor(settings){settings=settings||{};this.kernel=settings.kernel;this.rootNode=settings.rootNode;this.functionNodes=settings.functionNodes||[];this.subKernelNodes=settings.subKernelNodes||[];this.nativeFunctions=settings.nativeFunctions||[];this.functionMap={};this.nativeFunctionNames=[];this.lookupChain=[];this.functionNodeDependencies={};this.functionCalls={};if(this.rootNode){this.functionMap["kernel"]=this.rootNode}if(this.functionNodes){for(let i=0;i<this.functionNodes.length;i++){this.functionMap[this.functionNodes[i].name]=this.functionNodes[i]}}if(this.subKernelNodes){for(let i=0;i<this.subKernelNodes.length;i++){this.functionMap[this.subKernelNodes[i].name]=this.subKernelNodes[i]}}if(this.nativeFunctions){for(let i=0;i<this.nativeFunctions.length;i++){const nativeFunction=this.nativeFunctions[i];this.nativeFunctionNames.push(nativeFunction.name)}}}addFunctionNode(functionNode){if(!functionNode.name)throw new Error("functionNode.name needs set");this.functionMap[functionNode.name]=functionNode;if(functionNode.isRootKernel){this.rootNode=functionNode}}traceFunctionCalls(functionName,retList){functionName=functionName||"kernel";retList=retList||[];if(this.nativeFunctionNames.indexOf(functionName)>-1){const nativeFunctionIndex=retList.indexOf(functionName);if(nativeFunctionIndex===-1){retList.push(functionName)}else{const dependantNativeFunctionName=retList.splice(nativeFunctionIndex,1)[0];retList.push(dependantNativeFunctionName)}return retList}const functionNode=this.functionMap[functionName];if(functionNode){const functionIndex=retList.indexOf(functionName);if(functionIndex===-1){retList.push(functionName);functionNode.toString();for(let i=0;i<functionNode.calledFunctions.length;++i){this.traceFunctionCalls(functionNode.calledFunctions[i],retList)}}else{const dependantFunctionName=retList.splice(functionIndex,1)[0];retList.push(dependantFunctionName)}}return retList}getPrototypeString(functionName){return this.getPrototypes(functionName).join("\\n")}getPrototypes(functionName){if(this.rootNode){this.rootNode.toString()}if(functionName){return this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName,[]).reverse())}return this.getPrototypesFromFunctionNames(Object.keys(this.functionMap))}getStringFromFunctionNames(functionList){const ret=[];for(let i=0;i<functionList.length;++i){const node=this.functionMap[functionList[i]];if(node){ret.push(this.functionMap[functionList[i]].toString())}}return ret.join("\\n")}getPrototypesFromFunctionNames(functionList){const ret=[];for(let i=0;i<functionList.length;++i){const functionName=functionList[i];const functionIndex=this.nativeFunctionNames.indexOf(functionName);if(functionIndex>-1){ret.push(this.nativeFunctions[functionIndex].source);continue}const node=this.functionMap[functionName];if(node){ret.push(node.toString())}}return ret}toJSON(){return this.traceFunctionCalls(this.rootNode.name).reverse().map(name2=>{const nativeIndex=this.nativeFunctions.indexOf(name2);if(nativeIndex>-1){return{name:name2,source:this.nativeFunctions[nativeIndex].source}}else if(this.functionMap[name2]){return this.functionMap[name2].toJSON()}else{throw new Error(`function ${name2} not found`)}})}fromJSON(jsonFunctionNodes,FunctionNode){this.functionMap={};for(let i=0;i<jsonFunctionNodes.length;i++){const jsonFunctionNode=jsonFunctionNodes[i];this.functionMap[jsonFunctionNode.settings.name]=new FunctionNode(jsonFunctionNode.ast,jsonFunctionNode.settings)}return this}getString(functionName){if(functionName){return this.getStringFromFunctionNames(this.traceFunctionCalls(functionName).reverse())}return this.getStringFromFunctionNames(Object.keys(this.functionMap))}lookupReturnType(functionName,ast,requestingNode){if(ast.type!=="CallExpression"){throw new Error(`expected ast type of "CallExpression", but is ${ast.type}`)}if(this._isNativeFunction(functionName)){return this._lookupNativeFunctionReturnType(functionName)}else if(this._isFunction(functionName)){const node=this._getFunction(functionName);if(node.returnType){return node.returnType}else{for(let i=0;i<this.lookupChain.length;i++){if(this.lookupChain[i].ast===ast){if(node.argumentTypes.length===0&&ast.arguments.length>0){const args=ast.arguments;for(let j3=0;j3<args.length;j3++){this.lookupChain.push({name:requestingNode.name,ast:args[i],requestingNode});node.argumentTypes[j3]=requestingNode.getType(args[j3]);this.lookupChain.pop()}return node.returnType=node.getType(node.getJsAST())}throw new Error("circlical logic detected!")}}this.lookupChain.push({name:requestingNode.name,ast,requestingNode});const type=node.getType(node.getJsAST());this.lookupChain.pop();return node.returnType=type}}return null}_getFunction(functionName){if(!this._isFunction(functionName)){new Error(`Function ${functionName} not found`)}return this.functionMap[functionName]}_isFunction(functionName){return Boolean(this.functionMap[functionName])}_getNativeFunction(functionName){for(let i=0;i<this.nativeFunctions.length;i++){if(this.nativeFunctions[i].name===functionName)return this.nativeFunctions[i]}return null}_isNativeFunction(functionName){return Boolean(this._getNativeFunction(functionName))}_lookupNativeFunctionReturnType(functionName){let nativeFunction=this._getNativeFunction(functionName);if(nativeFunction){return nativeFunction.returnType}throw new Error(`Native function ${functionName} not found`)}lookupFunctionArgumentTypes(functionName){if(this._isNativeFunction(functionName)){return this._getNativeFunction(functionName).argumentTypes}else if(this._isFunction(functionName)){return this._getFunction(functionName).argumentTypes}return null}lookupFunctionArgumentName(functionName,argumentIndex){return this._getFunction(functionName).argumentNames[argumentIndex]}lookupFunctionArgumentBitRatio(functionName,argumentName){if(!this._isFunction(functionName)){throw new Error("function not found")}if(this.rootNode.name===functionName){const i2=this.rootNode.argumentNames.indexOf(argumentName);if(i2!==-1){return this.rootNode.argumentBitRatios[i2]}}const node=this._getFunction(functionName);const i=node.argumentNames.indexOf(argumentName);if(i===-1){throw new Error("argument not found")}const bitRatio=node.argumentBitRatios[i];if(typeof bitRatio!=="number"){throw new Error("argument bit ratio not found")}return bitRatio}needsArgumentType(functionName,i){if(!this._isFunction(functionName))return false;const fnNode=this._getFunction(functionName);return!fnNode.argumentTypes[i]}assignArgumentType(functionName,i,argumentType,requestingNode){if(!this._isFunction(functionName))return;const fnNode=this._getFunction(functionName);if(!fnNode.argumentTypes[i]){fnNode.argumentTypes[i]=argumentType}}assignArgumentBitRatio(functionName,argumentName,calleeFunctionName,argumentIndex){const node=this._getFunction(functionName);if(this._isNativeFunction(calleeFunctionName))return null;const calleeNode=this._getFunction(calleeFunctionName);const i=node.argumentNames.indexOf(argumentName);if(i===-1){throw new Error(`Argument ${argumentName} not found in arguments from function ${functionName}`)}const bitRatio=node.argumentBitRatios[i];if(typeof bitRatio!=="number"){throw new Error(`Bit ratio for argument ${argumentName} not found in function ${functionName}`)}if(!calleeNode.argumentBitRatios){calleeNode.argumentBitRatios=new Array(calleeNode.argumentNames.length)}const calleeBitRatio=calleeNode.argumentBitRatios[i];if(typeof calleeBitRatio==="number"){if(calleeBitRatio!==bitRatio){throw new Error(`Incompatible bit ratio found at function ${functionName} at argument ${argumentName}`)}return calleeBitRatio}calleeNode.argumentBitRatios[i]=bitRatio;return bitRatio}trackFunctionCall(functionName,calleeFunctionName,args){if(!this.functionNodeDependencies[functionName]){this.functionNodeDependencies[functionName]=new Set;this.functionCalls[functionName]=[]}this.functionNodeDependencies[functionName].add(calleeFunctionName);this.functionCalls[functionName].push(args)}getKernelResultType(){return this.rootNode.returnType||this.rootNode.getType(this.rootNode.ast)}getSubKernelResultType(index){const subKernelNode=this.subKernelNodes[index];let called=false;for(let functionCallIndex=0;functionCallIndex<this.rootNode.functionCalls.length;functionCallIndex++){const functionCall=this.rootNode.functionCalls[functionCallIndex];if(functionCall.ast.callee.name===subKernelNode.name){called=true}}if(!called){throw new Error(`SubKernel ${subKernelNode.name} never called by kernel`)}return subKernelNode.returnType||subKernelNode.getType(subKernelNode.getJsAST())}getReturnTypes(){const result={[this.rootNode.name]:this.rootNode.getType(this.rootNode.ast)};const list=this.traceFunctionCalls(this.rootNode.name);for(let i=0;i<list.length;i++){const functionName=list[i];const functionNode=this.functionMap[functionName];result[functionName]=functionNode.getType(functionNode.ast)}return result}}module3.exports={FunctionBuilder}},{}],10:[function(require2,module3,exports3){const acorn=require2("acorn");const{utils}=require2("../utils");const{FunctionTracer}=require2("./function-tracer");class FunctionNode{constructor(source,settings){if(!source&&!settings.ast){throw new Error("source parameter is missing")}settings=settings||{};this.source=source;this.ast=null;this.name=typeof source==="string"?settings.isRootKernel?"kernel":settings.name||utils.getFunctionNameFromString(source):null;this.calledFunctions=[];this.constants={};this.constantTypes={};this.constantBitRatios={};this.isRootKernel=false;this.isSubKernel=false;this.debug=null;this.functions=null;this.identifiers=null;this.contexts=null;this.functionCalls=null;this.states=[];this.needsArgumentType=null;this.assignArgumentType=null;this.lookupReturnType=null;this.lookupFunctionArgumentTypes=null;this.lookupFunctionArgumentBitRatio=null;this.triggerImplyArgumentType=null;this.triggerImplyArgumentBitRatio=null;this.onNestedFunction=null;this.onFunctionCall=null;this.optimizeFloatMemory=null;this.precision=null;this.loopMaxIterations=null;this.argumentNames=typeof this.source==="string"?utils.getArgumentNamesFromString(this.source):null;this.argumentTypes=[];this.argumentSizes=[];this.argumentBitRatios=null;this.returnType=null;this.output=[];this.plugins=null;this.leadingReturnStatement=null;this.followingReturnStatement=null;this.dynamicOutput=null;this.dynamicArguments=null;this.strictTypingChecking=false;this.fixIntegerDivisionAccuracy=null;if(settings){for(const p in settings){if(!settings.hasOwnProperty(p))continue;if(!this.hasOwnProperty(p))continue;this[p]=settings[p]}}this.literalTypes={};this.validate();this._string=null;this._internalVariableNames={}}validate(){if(typeof this.source!=="string"&&!this.ast){throw new Error("this.source not a string")}if(!this.ast&&!utils.isFunctionString(this.source)){throw new Error("this.source not a function string")}if(!this.name){throw new Error("this.name could not be set")}if(this.argumentTypes.length>0&&this.argumentTypes.length!==this.argumentNames.length){throw new Error(`argumentTypes count of ${this.argumentTypes.length} exceeds ${this.argumentNames.length}`)}if(this.output.length<1){throw new Error("this.output is not big enough")}}isIdentifierConstant(name2){if(!this.constants)return false;return this.constants.hasOwnProperty(name2)}isInput(argumentName){return this.argumentTypes[this.argumentNames.indexOf(argumentName)]==="Input"}pushState(state22){this.states.push(state22)}popState(state22){if(this.state!==state22){throw new Error(`Cannot popState ${state22} when in ${this.state}`)}this.states.pop()}isState(state22){return this.state===state22}get state(){return this.states[this.states.length-1]}astMemberExpressionUnroll(ast){if(ast.type==="Identifier"){return ast.name}else if(ast.type==="ThisExpression"){return"this"}if(ast.type==="MemberExpression"){if(ast.object&&ast.property){if(ast.object.hasOwnProperty("name")&&ast.object.name!=="Math"){return this.astMemberExpressionUnroll(ast.property)}return this.astMemberExpressionUnroll(ast.object)+"."+this.astMemberExpressionUnroll(ast.property)}}if(ast.hasOwnProperty("expressions")){const firstExpression=ast.expressions[0];if(firstExpression.type==="Literal"&&firstExpression.value===0&&ast.expressions.length===2){return this.astMemberExpressionUnroll(ast.expressions[1])}}throw this.astErrorOutput("Unknown astMemberExpressionUnroll",ast)}getJsAST(inParser){if(this.ast){return this.ast}if(typeof this.source==="object"){this.traceFunctionAST(this.source);return this.ast=this.source}inParser=inParser||acorn;if(inParser===null){throw new Error("Missing JS to AST parser")}const ast=Object.freeze(inParser.parse(`const parser_${this.name} = ${this.source};`,{locations:true}));const functionAST=ast.body[0].declarations[0].init;this.traceFunctionAST(functionAST);if(!ast){throw new Error("Failed to parse JS code")}return this.ast=functionAST}traceFunctionAST(ast){const{contexts,declarations,functions,identifiers,functionCalls}=new FunctionTracer(ast);this.contexts=contexts;this.identifiers=identifiers;this.functionCalls=functionCalls;this.functions=functions;for(let i=0;i<declarations.length;i++){const declaration=declarations[i];const{ast:ast2,inForLoopInit,inForLoopTest}=declaration;const{init}=ast2;const dependencies=this.getDependencies(init);let valueType=null;if(inForLoopInit&&inForLoopTest){valueType="Integer"}else{if(init){const realType=this.getType(init);switch(realType){case"Integer":case"Float":case"Number":if(init.type==="MemberExpression"){valueType=realType}else{valueType="Number"}break;case"LiteralInteger":valueType="Number";break;default:valueType=realType}}}declaration.valueType=valueType;declaration.dependencies=dependencies;declaration.isSafe=this.isSafeDependencies(dependencies)}for(let i=0;i<functions.length;i++){this.onNestedFunction(functions[i],this.source)}}getDeclaration(ast){for(let i=0;i<this.identifiers.length;i++){const identifier=this.identifiers[i];if(ast===identifier.ast){return identifier.declaration}}return null}getVariableType(ast){if(ast.type!=="Identifier"){throw new Error(`ast of ${ast.type} not "Identifier"`)}let type=null;const argumentIndex=this.argumentNames.indexOf(ast.name);if(argumentIndex===-1){const declaration=this.getDeclaration(ast);if(declaration){return declaration.valueType}}else{const argumentType=this.argumentTypes[argumentIndex];if(argumentType){type=argumentType}}if(!type&&this.strictTypingChecking){throw new Error(`Declaration of ${name} not found`)}return type}getLookupType(type){if(!typeLookupMap.hasOwnProperty(type)){throw new Error(`unknown typeLookupMap ${type}`)}return typeLookupMap[type]}getConstantType(constantName){if(this.constantTypes[constantName]){const type=this.constantTypes[constantName];if(type==="Float"){return"Number"}else{return type}}throw new Error(`Type for constant "${constantName}" not declared`)}toString(){if(this._string)return this._string;return this._string=this.astGeneric(this.getJsAST(),[]).join("").trim()}toJSON(){const settings={source:this.source,name:this.name,constants:this.constants,constantTypes:this.constantTypes,isRootKernel:this.isRootKernel,isSubKernel:this.isSubKernel,debug:this.debug,output:this.output,loopMaxIterations:this.loopMaxIterations,argumentNames:this.argumentNames,argumentTypes:this.argumentTypes,argumentSizes:this.argumentSizes,returnType:this.returnType,leadingReturnStatement:this.leadingReturnStatement,followingReturnStatement:this.followingReturnStatement};return{ast:this.ast,settings}}getType(ast){if(Array.isArray(ast)){return this.getType(ast[ast.length-1])}switch(ast.type){case"BlockStatement":return this.getType(ast.body);case"ArrayExpression":const childType=this.getType(ast.elements[0]);switch(childType){case"Array(2)":case"Array(3)":case"Array(4)":return`Matrix(${ast.elements.length})`}return`Array(${ast.elements.length})`;case"Literal":const literalKey=this.astKey(ast);if(this.literalTypes[literalKey]){return this.literalTypes[literalKey]}if(Number.isInteger(ast.value)){return"LiteralInteger"}else if(ast.value===true||ast.value===false){return"Boolean"}else{return"Number"}case"AssignmentExpression":return this.getType(ast.left);case"CallExpression":if(this.isAstMathFunction(ast)){return"Number"}if(!ast.callee||!ast.callee.name){if(ast.callee.type==="SequenceExpression"&&ast.callee.expressions[ast.callee.expressions.length-1].property.name){const functionName=ast.callee.expressions[ast.callee.expressions.length-1].property.name;this.inferArgumentTypesIfNeeded(functionName,ast.arguments);return this.lookupReturnType(functionName,ast,this)}if(this.getVariableSignature(ast.callee,true)==="this.color"){return null}if(ast.callee.type==="MemberExpression"&&ast.callee.object&&ast.callee.property&&ast.callee.property.name&&ast.arguments){const functionName=ast.callee.property.name;this.inferArgumentTypesIfNeeded(functionName,ast.arguments);return this.lookupReturnType(functionName,ast,this)}throw this.astErrorOutput("Unknown call expression",ast)}if(ast.callee&&ast.callee.name){const functionName=ast.callee.name;this.inferArgumentTypesIfNeeded(functionName,ast.arguments);return this.lookupReturnType(functionName,ast,this)}throw this.astErrorOutput(`Unhandled getType Type "${ast.type}"`,ast);case"LogicalExpression":return"Boolean";case"BinaryExpression":switch(ast.operator){case"%":case"/":if(this.fixIntegerDivisionAccuracy){return"Number"}else{break}case">":case"<":return"Boolean";case"&":case"|":case"^":case"<<":case">>":case">>>":return"Integer"}const type=this.getType(ast.left);if(this.isState("skip-literal-correction"))return type;if(type==="LiteralInteger"){const rightType=this.getType(ast.right);if(rightType==="LiteralInteger"){if(ast.left.value%1===0){return"Integer"}else{return"Float"}}return rightType}return typeLookupMap[type]||type;case"UpdateExpression":return this.getType(ast.argument);case"UnaryExpression":if(ast.operator==="~"){return"Integer"}return this.getType(ast.argument);case"VariableDeclaration":{const declarations=ast.declarations;let lastType;for(let i=0;i<declarations.length;i++){const declaration2=declarations[i];lastType=this.getType(declaration2)}if(!lastType){throw this.astErrorOutput(`Unable to find type for declaration`,ast)}return lastType}case"VariableDeclarator":const declaration=this.getDeclaration(ast.id);if(!declaration){throw this.astErrorOutput(`Unable to find declarator`,ast)}if(!declaration.valueType){throw this.astErrorOutput(`Unable to find declarator valueType`,ast)}return declaration.valueType;case"Identifier":if(ast.name==="Infinity"){return"Number"}if(this.isAstVariable(ast)){const signature=this.getVariableSignature(ast);if(signature==="value"){return this.getCheckVariableType(ast)}}const origin=this.findIdentifierOrigin(ast);if(origin&&origin.init){return this.getType(origin.init)}return null;case"ReturnStatement":return this.getType(ast.argument);case"MemberExpression":if(this.isAstMathFunction(ast)){switch(ast.property.name){case"ceil":return"Integer";case"floor":return"Integer";case"round":return"Integer"}return"Number"}if(this.isAstVariable(ast)){const variableSignature=this.getVariableSignature(ast);switch(variableSignature){case"value[]":return this.getLookupType(this.getCheckVariableType(ast.object));case"value[][]":return this.getLookupType(this.getCheckVariableType(ast.object.object));case"value[][][]":return this.getLookupType(this.getCheckVariableType(ast.object.object.object));case"value[][][][]":return this.getLookupType(this.getCheckVariableType(ast.object.object.object.object));case"value.thread.value":case"this.thread.value":return"Integer";case"this.output.value":return this.dynamicOutput?"Integer":"LiteralInteger";case"this.constants.value":return this.getConstantType(ast.property.name);case"this.constants.value[]":return this.getLookupType(this.getConstantType(ast.object.property.name));case"this.constants.value[][]":return this.getLookupType(this.getConstantType(ast.object.object.property.name));case"this.constants.value[][][]":return this.getLookupType(this.getConstantType(ast.object.object.object.property.name));case"this.constants.value[][][][]":return this.getLookupType(this.getConstantType(ast.object.object.object.object.property.name));case"fn()[]":case"fn()[][]":case"fn()[][][]":return this.getLookupType(this.getType(ast.object));case"value.value":if(this.isAstMathVariable(ast)){return"Number"}switch(ast.property.name){case"r":case"g":case"b":case"a":return this.getLookupType(this.getCheckVariableType(ast.object))}case"[][]":return"Number"}throw this.astErrorOutput("Unhandled getType MemberExpression",ast)}throw this.astErrorOutput("Unhandled getType MemberExpression",ast);case"ConditionalExpression":return this.getType(ast.consequent);case"FunctionDeclaration":case"FunctionExpression":const lastReturn=this.findLastReturn(ast.body);if(lastReturn){return this.getType(lastReturn)}return null;case"IfStatement":return this.getType(ast.consequent);case"SequenceExpression":return this.getType(ast.expressions[ast.expressions.length-1]);default:throw this.astErrorOutput(`Unhandled getType Type "${ast.type}"`,ast)}}getCheckVariableType(ast){const type=this.getVariableType(ast);if(!type){throw this.astErrorOutput(`${ast.type} is not defined`,ast)}return type}inferArgumentTypesIfNeeded(functionName,args){for(let i=0;i<args.length;i++){if(!this.needsArgumentType(functionName,i))continue;const type=this.getType(args[i]);if(!type){throw this.astErrorOutput(`Unable to infer argument ${i}`,args[i])}this.assignArgumentType(functionName,i,type)}}isAstMathVariable(ast){const mathProperties=["E","PI","SQRT2","SQRT1_2","LN2","LN10","LOG2E","LOG10E"];return ast.type==="MemberExpression"&&ast.object&&ast.object.type==="Identifier"&&ast.object.name==="Math"&&ast.property&&ast.property.type==="Identifier"&&mathProperties.indexOf(ast.property.name)>-1}isAstMathFunction(ast){const mathFunctions=["abs","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","clz32","cos","cosh","expm1","exp","floor","fround","imul","log","log2","log10","log1p","max","min","pow","random","round","sign","sin","sinh","sqrt","tan","tanh","trunc"];return ast.type==="CallExpression"&&ast.callee&&ast.callee.type==="MemberExpression"&&ast.callee.object&&ast.callee.object.type==="Identifier"&&ast.callee.object.name==="Math"&&ast.callee.property&&ast.callee.property.type==="Identifier"&&mathFunctions.indexOf(ast.callee.property.name)>-1}isAstVariable(ast){return ast.type==="Identifier"||ast.type==="MemberExpression"}isSafe(ast){return this.isSafeDependencies(this.getDependencies(ast))}isSafeDependencies(dependencies){return dependencies&&dependencies.every?dependencies.every(dependency=>dependency.isSafe):true}getDependencies(ast,dependencies,isNotSafe){if(!dependencies){dependencies=[]}if(!ast)return null;if(Array.isArray(ast)){for(let i=0;i<ast.length;i++){this.getDependencies(ast[i],dependencies,isNotSafe)}return dependencies}switch(ast.type){case"AssignmentExpression":this.getDependencies(ast.left,dependencies,isNotSafe);this.getDependencies(ast.right,dependencies,isNotSafe);return dependencies;case"ConditionalExpression":this.getDependencies(ast.test,dependencies,isNotSafe);this.getDependencies(ast.alternate,dependencies,isNotSafe);this.getDependencies(ast.consequent,dependencies,isNotSafe);return dependencies;case"Literal":dependencies.push({origin:"literal",value:ast.value,isSafe:isNotSafe===true?false:ast.value>-Infinity&&ast.value<Infinity&&!isNaN(ast.value)});break;case"VariableDeclarator":return this.getDependencies(ast.init,dependencies,isNotSafe);case"Identifier":const declaration=this.getDeclaration(ast);if(declaration){dependencies.push({name:ast.name,origin:"declaration",isSafe:isNotSafe?false:this.isSafeDependencies(declaration.dependencies)})}else if(this.argumentNames.indexOf(ast.name)>-1){dependencies.push({name:ast.name,origin:"argument",isSafe:false})}else if(this.strictTypingChecking){throw new Error(`Cannot find identifier origin "${ast.name}"`)}break;case"FunctionDeclaration":return this.getDependencies(ast.body.body[ast.body.body.length-1],dependencies,isNotSafe);case"ReturnStatement":return this.getDependencies(ast.argument,dependencies);case"BinaryExpression":case"LogicalExpression":isNotSafe=ast.operator==="/"||ast.operator==="*";this.getDependencies(ast.left,dependencies,isNotSafe);this.getDependencies(ast.right,dependencies,isNotSafe);return dependencies;case"UnaryExpression":case"UpdateExpression":return this.getDependencies(ast.argument,dependencies,isNotSafe);case"VariableDeclaration":return this.getDependencies(ast.declarations,dependencies,isNotSafe);case"ArrayExpression":dependencies.push({origin:"declaration",isSafe:true});return dependencies;case"CallExpression":dependencies.push({origin:"function",isSafe:true});return dependencies;case"MemberExpression":const details=this.getMemberExpressionDetails(ast);switch(details.signature){case"value[]":this.getDependencies(ast.object,dependencies,isNotSafe);break;case"value[][]":this.getDependencies(ast.object.object,dependencies,isNotSafe);break;case"value[][][]":this.getDependencies(ast.object.object.object,dependencies,isNotSafe);break;case"this.output.value":if(this.dynamicOutput){dependencies.push({name:details.name,origin:"output",isSafe:false})}break}if(details){if(details.property){this.getDependencies(details.property,dependencies,isNotSafe)}if(details.xProperty){this.getDependencies(details.xProperty,dependencies,isNotSafe)}if(details.yProperty){this.getDependencies(details.yProperty,dependencies,isNotSafe)}if(details.zProperty){this.getDependencies(details.zProperty,dependencies,isNotSafe)}return dependencies}case"SequenceExpression":return this.getDependencies(ast.expressions,dependencies,isNotSafe);default:throw this.astErrorOutput(`Unhandled type ${ast.type} in getDependencies`,ast)}return dependencies}getVariableSignature(ast,returnRawValue){if(!this.isAstVariable(ast)){throw new Error(`ast of type "${ast.type}" is not a variable signature`)}if(ast.type==="Identifier"){return"value"}const signature=[];while(true){if(!ast)break;if(ast.computed){signature.push("[]")}else if(ast.type==="ThisExpression"){signature.unshift("this")}else if(ast.property&&ast.property.name){if(ast.property.name==="x"||ast.property.name==="y"||ast.property.name==="z"){signature.unshift(returnRawValue?"."+ast.property.name:".value")}else if(ast.property.name==="constants"||ast.property.name==="thread"||ast.property.name==="output"){signature.unshift("."+ast.property.name)}else{signature.unshift(returnRawValue?"."+ast.property.name:".value")}}else if(ast.name){signature.unshift(returnRawValue?ast.name:"value")}else if(ast.callee&&ast.callee.name){signature.unshift(returnRawValue?ast.callee.name+"()":"fn()")}else if(ast.elements){signature.unshift("[]")}else{signature.unshift("unknown")}ast=ast.object}const signatureString=signature.join("");if(returnRawValue){return signatureString}const allowedExpressions=["value","value[]","value[][]","value[][][]","value[][][][]","value.value","value.thread.value","this.thread.value","this.output.value","this.constants.value","this.constants.value[]","this.constants.value[][]","this.constants.value[][][]","this.constants.value[][][][]","fn()[]","fn()[][]","fn()[][][]","[][]"];if(allowedExpressions.indexOf(signatureString)>-1){return signatureString}return null}build(){return this.toString().length>0}astGeneric(ast,retArr){if(ast===null){throw this.astErrorOutput("NULL ast",ast)}else{if(Array.isArray(ast)){for(let i=0;i<ast.length;i++){this.astGeneric(ast[i],retArr)}return retArr}switch(ast.type){case"FunctionDeclaration":return this.astFunctionDeclaration(ast,retArr);case"FunctionExpression":return this.astFunctionExpression(ast,retArr);case"ReturnStatement":return this.astReturnStatement(ast,retArr);case"Literal":return this.astLiteral(ast,retArr);case"BinaryExpression":return this.astBinaryExpression(ast,retArr);case"Identifier":return this.astIdentifierExpression(ast,retArr);case"AssignmentExpression":return this.astAssignmentExpression(ast,retArr);case"ExpressionStatement":return this.astExpressionStatement(ast,retArr);case"EmptyStatement":return this.astEmptyStatement(ast,retArr);case"BlockStatement":return this.astBlockStatement(ast,retArr);case"IfStatement":return this.astIfStatement(ast,retArr);case"SwitchStatement":return this.astSwitchStatement(ast,retArr);case"BreakStatement":return this.astBreakStatement(ast,retArr);case"ContinueStatement":return this.astContinueStatement(ast,retArr);case"ForStatement":return this.astForStatement(ast,retArr);case"WhileStatement":return this.astWhileStatement(ast,retArr);case"DoWhileStatement":return this.astDoWhileStatement(ast,retArr);case"VariableDeclaration":return this.astVariableDeclaration(ast,retArr);case"VariableDeclarator":return this.astVariableDeclarator(ast,retArr);case"ThisExpression":return this.astThisExpression(ast,retArr);case"SequenceExpression":return this.astSequenceExpression(ast,retArr);case"UnaryExpression":return this.astUnaryExpression(ast,retArr);case"UpdateExpression":return this.astUpdateExpression(ast,retArr);case"LogicalExpression":return this.astLogicalExpression(ast,retArr);case"MemberExpression":return this.astMemberExpression(ast,retArr);case"CallExpression":return this.astCallExpression(ast,retArr);case"ArrayExpression":return this.astArrayExpression(ast,retArr);case"DebuggerStatement":return this.astDebuggerStatement(ast,retArr);case"ConditionalExpression":return this.astConditionalExpression(ast,retArr)}throw this.astErrorOutput("Unknown ast type : "+ast.type,ast)}}astErrorOutput(error,ast){if(typeof this.source!=="string"){return new Error(error)}const debugString=utils.getAstString(this.source,ast);const leadingSource=this.source.substr(ast.start);const splitLines=leadingSource.split(/\\n/);const lineBefore=splitLines.length>0?splitLines[splitLines.length-1]:0;return new Error(`${error} on line ${splitLines.length}, position ${lineBefore.length}:\n ${debugString}`)}astDebuggerStatement(arrNode,retArr){return retArr}astConditionalExpression(ast,retArr){if(ast.type!=="ConditionalExpression"){throw this.astErrorOutput("Not a conditional expression",ast)}retArr.push("(");this.astGeneric(ast.test,retArr);retArr.push("?");this.astGeneric(ast.consequent,retArr);retArr.push(":");this.astGeneric(ast.alternate,retArr);retArr.push(")");return retArr}astFunction(ast,retArr){throw new Error(`"astFunction" not defined on ${this.constructor.name}`)}astFunctionDeclaration(ast,retArr){if(this.isChildFunction(ast)){return retArr}return this.astFunction(ast,retArr)}astFunctionExpression(ast,retArr){if(this.isChildFunction(ast)){return retArr}return this.astFunction(ast,retArr)}isChildFunction(ast){for(let i=0;i<this.functions.length;i++){if(this.functions[i]===ast){return true}}return false}astReturnStatement(ast,retArr){return retArr}astLiteral(ast,retArr){this.literalTypes[this.astKey(ast)]="Number";return retArr}astBinaryExpression(ast,retArr){return retArr}astIdentifierExpression(ast,retArr){return retArr}astAssignmentExpression(ast,retArr){return retArr}astExpressionStatement(esNode,retArr){this.astGeneric(esNode.expression,retArr);retArr.push(";");return retArr}astEmptyStatement(eNode,retArr){return retArr}astBlockStatement(ast,retArr){return retArr}astIfStatement(ast,retArr){return retArr}astSwitchStatement(ast,retArr){return retArr}astBreakStatement(brNode,retArr){retArr.push("break;");return retArr}astContinueStatement(crNode,retArr){retArr.push("continue;\\n");return retArr}astForStatement(ast,retArr){return retArr}astWhileStatement(ast,retArr){return retArr}astDoWhileStatement(ast,retArr){return retArr}astVariableDeclarator(iVarDecNode,retArr){this.astGeneric(iVarDecNode.id,retArr);if(iVarDecNode.init!==null){retArr.push("=");this.astGeneric(iVarDecNode.init,retArr)}return retArr}astThisExpression(ast,retArr){return retArr}astSequenceExpression(sNode,retArr){const{expressions}=sNode;const sequenceResult=[];for(let i=0;i<expressions.length;i++){const expression=expressions[i];const expressionResult=[];this.astGeneric(expression,expressionResult);sequenceResult.push(expressionResult.join(""))}if(sequenceResult.length>1){retArr.push("(",sequenceResult.join(","),")")}else{retArr.push(sequenceResult[0])}return retArr}astUnaryExpression(uNode,retArr){const unaryResult=this.checkAndUpconvertBitwiseUnary(uNode,retArr);if(unaryResult){return retArr}if(uNode.prefix){retArr.push(uNode.operator);this.astGeneric(uNode.argument,retArr)}else{this.astGeneric(uNode.argument,retArr);retArr.push(uNode.operator)}return retArr}checkAndUpconvertBitwiseUnary(uNode,retArr){}astUpdateExpression(uNode,retArr){if(uNode.prefix){retArr.push(uNode.operator);this.astGeneric(uNode.argument,retArr)}else{this.astGeneric(uNode.argument,retArr);retArr.push(uNode.operator)}return retArr}astLogicalExpression(logNode,retArr){retArr.push("(");this.astGeneric(logNode.left,retArr);retArr.push(logNode.operator);this.astGeneric(logNode.right,retArr);retArr.push(")");return retArr}astMemberExpression(ast,retArr){return retArr}astCallExpression(ast,retArr){return retArr}astArrayExpression(ast,retArr){return retArr}getMemberExpressionDetails(ast){if(ast.type!=="MemberExpression"){throw this.astErrorOutput(`Expression ${ast.type} not a MemberExpression`,ast)}let name2=null;let type=null;const variableSignature=this.getVariableSignature(ast);switch(variableSignature){case"value":return null;case"value.thread.value":case"this.thread.value":case"this.output.value":return{signature:variableSignature,type:"Integer",name:ast.property.name};case"value[]":if(typeof ast.object.name!=="string"){throw this.astErrorOutput("Unexpected expression",ast)}name2=ast.object.name;return{name:name2,origin:"user",signature:variableSignature,type:this.getVariableType(ast.object),xProperty:ast.property};case"value[][]":if(typeof ast.object.object.name!=="string"){throw this.astErrorOutput("Unexpected expression",ast)}name2=ast.object.object.name;return{name:name2,origin:"user",signature:variableSignature,type:this.getVariableType(ast.object.object),yProperty:ast.object.property,xProperty:ast.property};case"value[][][]":if(typeof ast.object.object.object.name!=="string"){throw this.astErrorOutput("Unexpected expression",ast)}name2=ast.object.object.object.name;return{name:name2,origin:"user",signature:variableSignature,type:this.getVariableType(ast.object.object.object),zProperty:ast.object.object.property,yProperty:ast.object.property,xProperty:ast.property};case"value[][][][]":if(typeof ast.object.object.object.object.name!=="string"){throw this.astErrorOutput("Unexpected expression",ast)}name2=ast.object.object.object.object.name;return{name:name2,origin:"user",signature:variableSignature,type:this.getVariableType(ast.object.object.object.object),zProperty:ast.object.object.property,yProperty:ast.object.property,xProperty:ast.property};case"value.value":if(typeof ast.property.name!=="string"){throw this.astErrorOutput("Unexpected expression",ast)}if(this.isAstMathVariable(ast)){name2=ast.property.name;return{name:name2,origin:"Math",type:"Number",signature:variableSignature}}switch(ast.property.name){case"r":case"g":case"b":case"a":name2=ast.object.name;return{name:name2,property:ast.property.name,origin:"user",signature:variableSignature,type:"Number"};default:throw this.astErrorOutput("Unexpected expression",ast)}case"this.constants.value":if(typeof ast.property.name!=="string"){throw this.astErrorOutput("Unexpected expression",ast)}name2=ast.property.name;type=this.getConstantType(name2);if(!type){throw this.astErrorOutput("Constant has no type",ast)}return{name:name2,type,origin:"constants",signature:variableSignature};case"this.constants.value[]":if(typeof ast.object.property.name!=="string"){throw this.astErrorOutput("Unexpected expression",ast)}name2=ast.object.property.name;type=this.getConstantType(name2);if(!type){throw this.astErrorOutput("Constant has no type",ast)}return{name:name2,type,origin:"constants",signature:variableSignature,xProperty:ast.property};case"this.constants.value[][]":{if(typeof ast.object.object.property.name!=="string"){throw this.astErrorOutput("Unexpected expression",ast)}name2=ast.object.object.property.name;type=this.getConstantType(name2);if(!type){throw this.astErrorOutput("Constant has no type",ast)}return{name:name2,type,origin:"constants",signature:variableSignature,yProperty:ast.object.property,xProperty:ast.property}}case"this.constants.value[][][]":{if(typeof ast.object.object.object.property.name!=="string"){throw this.astErrorOutput("Unexpected expression",ast)}name2=ast.object.object.object.property.name;type=this.getConstantType(name2);if(!type){throw this.astErrorOutput("Constant has no type",ast)}return{name:name2,type,origin:"constants",signature:variableSignature,zProperty:ast.object.object.property,yProperty:ast.object.property,xProperty:ast.property}}case"fn()[]":case"fn()[][]":case"[][]":return{signature:variableSignature,property:ast.property};default:throw this.astErrorOutput("Unexpected expression",ast)}}findIdentifierOrigin(astToFind){const stack=[this.ast];while(stack.length>0){const atNode=stack[0];if(atNode.type==="VariableDeclarator"&&atNode.id&&atNode.id.name&&atNode.id.name===astToFind.name){return atNode}stack.shift();if(atNode.argument){stack.push(atNode.argument)}else if(atNode.body){stack.push(atNode.body)}else if(atNode.declarations){stack.push(atNode.declarations)}else if(Array.isArray(atNode)){for(let i=0;i<atNode.length;i++){stack.push(atNode[i])}}}return null}findLastReturn(ast){const stack=[ast||this.ast];while(stack.length>0){const atNode=stack.pop();if(atNode.type==="ReturnStatement"){return atNode}if(atNode.type==="FunctionDeclaration"){continue}if(atNode.argument){stack.push(atNode.argument)}else if(atNode.body){stack.push(atNode.body)}else if(atNode.declarations){stack.push(atNode.declarations)}else if(Array.isArray(atNode)){for(let i=0;i<atNode.length;i++){stack.push(atNode[i])}}else if(atNode.consequent){stack.push(atNode.consequent)}else if(atNode.cases){stack.push(atNode.cases)}}return null}getInternalVariableName(name2){if(!this._internalVariableNames.hasOwnProperty(name2)){this._internalVariableNames[name2]=0}this._internalVariableNames[name2]++;if(this._internalVariableNames[name2]===1){return name2}return name2+this._internalVariableNames[name2]}astKey(ast,separator=","){if(!ast.start||!ast.end)throw new Error("AST start and end needed");return`${ast.start}${separator}${ast.end}`}}const typeLookupMap={"Number":"Number","Float":"Float","Integer":"Integer","Array":"Number","Array(2)":"Number","Array(3)":"Number","Array(4)":"Number","Matrix(2)":"Number","Matrix(3)":"Number","Matrix(4)":"Number","Array2D":"Number","Array3D":"Number","Input":"Number","HTMLCanvas":"Array(4)","HTMLImage":"Array(4)","HTMLVideo":"Array(4)","HTMLImageArray":"Array(4)","NumberTexture":"Number","MemoryOptimizedNumberTexture":"Number","Array1D(2)":"Array(2)","Array1D(3)":"Array(3)","Array1D(4)":"Array(4)","Array2D(2)":"Array(2)","Array2D(3)":"Array(3)","Array2D(4)":"Array(4)","Array3D(2)":"Array(2)","Array3D(3)":"Array(3)","Array3D(4)":"Array(4)","ArrayTexture(1)":"Number","ArrayTexture(2)":"Array(2)","ArrayTexture(3)":"Array(3)","ArrayTexture(4)":"Array(4)"};module3.exports={FunctionNode}},{"../utils":114,"./function-tracer":11,"acorn":1}],11:[function(require2,module3,exports3){const{utils}=require2("../utils");function last(array){return array.length>0?array[array.length-1]:null}const states={trackIdentifiers:"trackIdentifiers",memberExpression:"memberExpression",inForLoopInit:"inForLoopInit"};class FunctionTracer{constructor(ast){this.runningContexts=[];this.functionContexts=[];this.contexts=[];this.functionCalls=[];this.declarations=[];this.identifiers=[];this.functions=[];this.returnStatements=[];this.trackedIdentifiers=null;this.states=[];this.newFunctionContext();this.scan(ast)}isState(state22){return this.states[this.states.length-1]===state22}hasState(state22){return this.states.indexOf(state22)>-1}pushState(state22){this.states.push(state22)}popState(state22){if(this.isState(state22)){this.states.pop()}else{throw new Error(`Cannot pop the non-active state "${state22}"`)}}get currentFunctionContext(){return last(this.functionContexts)}get currentContext(){return last(this.runningContexts)}newFunctionContext(){const newContext={"@contextType":"function"};this.contexts.push(newContext);this.functionContexts.push(newContext)}newContext(run){const newContext=Object.assign({"@contextType":"const/let"},this.currentContext);this.contexts.push(newContext);this.runningContexts.push(newContext);run();const{currentFunctionContext}=this;for(const p in currentFunctionContext){if(!currentFunctionContext.hasOwnProperty(p)||newContext.hasOwnProperty(p))continue;newContext[p]=currentFunctionContext[p]}this.runningContexts.pop();return newContext}useFunctionContext(run){const functionContext=last(this.functionContexts);this.runningContexts.push(functionContext);run();this.runningContexts.pop()}getIdentifiers(run){const trackedIdentifiers=this.trackedIdentifiers=[];this.pushState(states.trackIdentifiers);run();this.trackedIdentifiers=null;this.popState(states.trackIdentifiers);return trackedIdentifiers}getDeclaration(name2){const{currentContext,currentFunctionContext,runningContexts}=this;const declaration=currentContext[name2]||currentFunctionContext[name2]||null;if(!declaration&&currentContext===currentFunctionContext&&runningContexts.length>0){const previousRunningContext=runningContexts[runningContexts.length-2];if(previousRunningContext[name2]){return previousRunningContext[name2]}}return declaration}scan(ast){if(!ast)return;if(Array.isArray(ast)){for(let i=0;i<ast.length;i++){this.scan(ast[i])}return}switch(ast.type){case"Program":this.useFunctionContext(()=>{this.scan(ast.body)});break;case"BlockStatement":this.newContext(()=>{this.scan(ast.body)});break;case"AssignmentExpression":case"LogicalExpression":this.scan(ast.left);this.scan(ast.right);break;case"BinaryExpression":this.scan(ast.left);this.scan(ast.right);break;case"UpdateExpression":if(ast.operator==="++"){const declaration=this.getDeclaration(ast.argument.name);if(declaration){declaration.suggestedType="Integer"}}this.scan(ast.argument);break;case"UnaryExpression":this.scan(ast.argument);break;case"VariableDeclaration":if(ast.kind==="var"){this.useFunctionContext(()=>{ast.declarations=utils.normalizeDeclarations(ast);this.scan(ast.declarations)})}else{ast.declarations=utils.normalizeDeclarations(ast);this.scan(ast.declarations)}break;case"VariableDeclarator":{const{currentContext}=this;const inForLoopInit=this.hasState(states.inForLoopInit);const declaration={ast,context:currentContext,name:ast.id.name,origin:"declaration",inForLoopInit,inForLoopTest:null,assignable:currentContext===this.currentFunctionContext||!inForLoopInit&&!currentContext.hasOwnProperty(ast.id.name),suggestedType:null,valueType:null,dependencies:null,isSafe:null};if(!currentContext[ast.id.name]){currentContext[ast.id.name]=declaration}this.declarations.push(declaration);this.scan(ast.id);this.scan(ast.init);break}case"FunctionExpression":case"FunctionDeclaration":if(this.runningContexts.length===0){this.scan(ast.body)}else{this.functions.push(ast)}break;case"IfStatement":this.scan(ast.test);this.scan(ast.consequent);if(ast.alternate)this.scan(ast.alternate);break;case"ForStatement":{let testIdentifiers;const context=this.newContext(()=>{this.pushState(states.inForLoopInit);this.scan(ast.init);this.popState(states.inForLoopInit);testIdentifiers=this.getIdentifiers(()=>{this.scan(ast.test)});this.scan(ast.update);this.newContext(()=>{this.scan(ast.body)})});if(testIdentifiers){for(const p in context){if(p==="@contextType")continue;if(testIdentifiers.indexOf(p)>-1){context[p].inForLoopTest=true}}}break}case"DoWhileStatement":case"WhileStatement":this.newContext(()=>{this.scan(ast.body);this.scan(ast.test)});break;case"Identifier":{if(this.isState(states.trackIdentifiers)){this.trackedIdentifiers.push(ast.name)}this.identifiers.push({context:this.currentContext,declaration:this.getDeclaration(ast.name),ast});break}case"ReturnStatement":this.returnStatements.push(ast);this.scan(ast.argument);break;case"MemberExpression":this.pushState(states.memberExpression);this.scan(ast.object);this.scan(ast.property);this.popState(states.memberExpression);break;case"ExpressionStatement":this.scan(ast.expression);break;case"SequenceExpression":this.scan(ast.expressions);break;case"CallExpression":this.functionCalls.push({context:this.currentContext,ast});this.scan(ast.arguments);break;case"ArrayExpression":this.scan(ast.elements);break;case"ConditionalExpression":this.scan(ast.test);this.scan(ast.alternate);this.scan(ast.consequent);break;case"SwitchStatement":this.scan(ast.discriminant);this.scan(ast.cases);break;case"SwitchCase":this.scan(ast.test);this.scan(ast.consequent);break;case"ThisExpression":case"Literal":case"DebuggerStatement":case"EmptyStatement":case"BreakStatement":case"ContinueStatement":break;default:throw new Error(`unhandled type "${ast.type}"`)}}}module3.exports={FunctionTracer}},{"../utils":114}],12:[function(require2,module3,exports3){const{glWiretap}=require2("gl-wiretap");const{utils}=require2("../../utils");function toStringWithoutUtils(fn2){return fn2.toString().replace("=>","").replace(/^function /,"").replace(/utils[.]/g,"/*utils.*/")}function glKernelString(Kernel,args,originKernel,setupContextString,destroyContextString){if(!originKernel.built){originKernel.build.apply(originKernel,args)}args=args?Array.from(args).map(arg=>{switch(typeof arg){case"boolean":return new Boolean(arg);case"number":return new Number(arg);default:return arg}}):null;const uploadedValues=[];const postResult=[];const context=glWiretap(originKernel.context,{useTrackablePrimitives:true,onReadPixels:targetName=>{if(kernel.subKernels){if(!subKernelsResultVariableSetup){postResult.push(`    const result = { result: ${getRenderString(targetName,kernel)} };`);subKernelsResultVariableSetup=true}else{const property=kernel.subKernels[subKernelsResultIndex++].property;postResult.push(`    result${isNaN(property)?"."+property:`[${property}]`} = ${getRenderString(targetName,kernel)};`)}if(subKernelsResultIndex===kernel.subKernels.length){postResult.push("    return result;")}return}if(targetName){postResult.push(`    return ${getRenderString(targetName,kernel)};`)}else{postResult.push(`    return null;`)}},onUnrecognizedArgumentLookup:argument=>{const argumentName=findKernelValue(argument,kernel.kernelArguments,[],context,uploadedValues);if(argumentName){return argumentName}const constantName=findKernelValue(argument,kernel.kernelConstants,constants?Object.keys(constants).map(key=>constants[key]):[],context,uploadedValues);if(constantName){return constantName}return null}});let subKernelsResultVariableSetup=false;let subKernelsResultIndex=0;const{source,canvas,output,pipeline,graphical,loopMaxIterations,constants,optimizeFloatMemory,precision,fixIntegerDivisionAccuracy,functions,nativeFunctions,subKernels,immutable,argumentTypes,constantTypes,kernelArguments,kernelConstants,tactic}=originKernel;const kernel=new Kernel(source,{canvas,context,checkContext:false,output,pipeline,graphical,loopMaxIterations,constants,optimizeFloatMemory,precision,fixIntegerDivisionAccuracy,functions,nativeFunctions,subKernels,immutable,argumentTypes,constantTypes,tactic});let result=[];context.setIndent(2);kernel.build.apply(kernel,args);result.push(context.toString());context.reset();kernel.kernelArguments.forEach((kernelArgument,i)=>{switch(kernelArgument.type){case"Integer":case"Boolean":case"Number":case"Float":case"Array":case"Array(2)":case"Array(3)":case"Array(4)":case"HTMLCanvas":case"HTMLImage":case"HTMLVideo":context.insertVariable(`uploadValue_${kernelArgument.name}`,kernelArgument.uploadValue);break;case"HTMLImageArray":for(let imageIndex=0;imageIndex<args[i].length;imageIndex++){const arg=args[i];context.insertVariable(`uploadValue_${kernelArgument.name}[${imageIndex}]`,arg[imageIndex])}break;case"Input":context.insertVariable(`uploadValue_${kernelArgument.name}`,kernelArgument.uploadValue);break;case"MemoryOptimizedNumberTexture":case"NumberTexture":case"Array1D(2)":case"Array1D(3)":case"Array1D(4)":case"Array2D(2)":case"Array2D(3)":case"Array2D(4)":case"Array3D(2)":case"Array3D(3)":case"Array3D(4)":case"ArrayTexture(1)":case"ArrayTexture(2)":case"ArrayTexture(3)":case"ArrayTexture(4)":context.insertVariable(`uploadValue_${kernelArgument.name}`,args[i].texture);break;default:throw new Error(`unhandled kernelArgumentType insertion for glWiretap of type ${kernelArgument.type}`)}});result.push("/** start of injected functions **/");result.push(`function ${toStringWithoutUtils(utils.flattenTo)}`);result.push(`function ${toStringWithoutUtils(utils.flatten2dArrayTo)}`);result.push(`function ${toStringWithoutUtils(utils.flatten3dArrayTo)}`);result.push(`function ${toStringWithoutUtils(utils.flatten4dArrayTo)}`);result.push(`function ${toStringWithoutUtils(utils.isArray)}`);if(kernel.renderOutput!==kernel.renderTexture&&kernel.formatValues){result.push(`  const renderOutput = function ${toStringWithoutUtils(kernel.formatValues)};`)}result.push("/** end of injected functions **/");result.push(`  const innerKernel = function (${kernel.kernelArguments.map(kernelArgument=>kernelArgument.varName).join(", ")}) {`);context.setIndent(4);kernel.run.apply(kernel,args);if(kernel.renderKernels){kernel.renderKernels()}else if(kernel.renderOutput){kernel.renderOutput()}result.push("    /** start setup uploads for kernel values **/");kernel.kernelArguments.forEach(kernelArgument=>{result.push("    "+kernelArgument.getStringValueHandler().split("\\n").join("\\n    "))});result.push("    /** end setup uploads for kernel values **/");result.push(context.toString());if(kernel.renderOutput===kernel.renderTexture){context.reset();const framebufferName=context.getContextVariableName(kernel.framebuffer);if(kernel.renderKernels){const results=kernel.renderKernels();const textureName=context.getContextVariableName(kernel.texture.texture);result.push(`    return {\n            result: {\n              texture: ${textureName},\n              type: \'${results.result.type}\',\n              toArray: ${getToArrayString(results.result,textureName,framebufferName)}\n            },`);const{subKernels:subKernels2,mappedTextures}=kernel;for(let i=0;i<subKernels2.length;i++){const texture=mappedTextures[i];const subKernel=subKernels2[i];const subKernelResult=results[subKernel.property];const subKernelTextureName=context.getContextVariableName(texture.texture);result.push(`\n            ${subKernel.property}: {\n              texture: ${subKernelTextureName},\n              type: \'${subKernelResult.type}\',\n              toArray: ${getToArrayString(subKernelResult,subKernelTextureName,framebufferName)}\n            },`)}result.push(`    };`)}else{const rendered=kernel.renderOutput();const textureName=context.getContextVariableName(kernel.texture.texture);result.push(`    return {\n              texture: ${textureName},\n              type: \'${rendered.type}\',\n              toArray: ${getToArrayString(rendered,textureName,framebufferName)}\n            };`)}}result.push(`    ${destroyContextString?"\\n"+destroyContextString+"    ":""}`);result.push(postResult.join("\\n"));result.push("  };");if(kernel.graphical){result.push(getGetPixelsString(kernel));result.push(`  innerKernel.getPixels = getPixels;`)}result.push("  return innerKernel;");let constantsUpload=[];kernelConstants.forEach(kernelConstant=>{constantsUpload.push(`${kernelConstant.getStringValueHandler()}`)});return`function kernel(settings) {\n        const { context, constants } = settings;\n        ${constantsUpload.join("")}\n        ${setupContextString?setupContextString:""}\n      ${result.join("\\n")}\n      }`}function getRenderString(targetName,kernel){const readBackValue=kernel.precision==="single"?targetName:`new Float32Array(${targetName}.buffer)`;if(kernel.output[2]){return`renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]}, ${kernel.output[2]})`}if(kernel.output[1]){return`renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]})`}return`renderOutput(${readBackValue}, ${kernel.output[0]})`}function getGetPixelsString(kernel){const getPixels=kernel.getPixels.toString();const useFunctionKeyword=!/^function/.test(getPixels);return utils.flattenFunctionToString(`${useFunctionKeyword?"function ":""}${getPixels}`,{findDependency:(object,name2)=>{if(object==="utils"){return`const ${name2} = ${utils[name2].toString()};`}return null},thisLookup:property=>{if(property==="context"){return null}if(kernel.hasOwnProperty(property)){return JSON.stringify(kernel[property])}throw new Error(`unhandled thisLookup ${property}`)}})}function getToArrayString(kernelResult,textureName,framebufferName){const toArray=kernelResult.toArray.toString();const useFunctionKeyword=!/^function/.test(toArray);const flattenedFunctions=utils.flattenFunctionToString(`${useFunctionKeyword?"function ":""}${toArray}`,{findDependency:(object,name2)=>{if(object==="utils"){return`const ${name2} = ${utils[name2].toString()};`}else if(object==="this"){if(name2==="framebuffer"){return""}return`${useFunctionKeyword?"function ":""}${kernelResult[name2].toString()}`}else{throw new Error("unhandled fromObject")}},thisLookup:(property,isDeclaration)=>{if(property==="texture"){return textureName}if(property==="context"){if(isDeclaration)return null;return"gl"}if(kernelResult.hasOwnProperty(property)){return JSON.stringify(kernelResult[property])}throw new Error(`unhandled thisLookup ${property}`)}});return`() => {\n        function framebuffer() { return ${framebufferName}; };\n        ${flattenedFunctions}\n        return toArray();\n        }`}function findKernelValue(argument,kernelValues,values,context,uploadedValues){if(argument===null)return null;if(kernelValues===null)return null;switch(typeof argument){case"boolean":case"number":return null}if(typeof HTMLImageElement!=="undefined"&&argument instanceof HTMLImageElement){for(let i=0;i<kernelValues.length;i++){const kernelValue=kernelValues[i];if(kernelValue.type!=="HTMLImageArray"&&kernelValue)continue;if(kernelValue.uploadValue!==argument)continue;const variableIndex=values[i].indexOf(argument);if(variableIndex===-1)continue;const variableName=`uploadValue_${kernelValue.name}[${variableIndex}]`;context.insertVariable(variableName,argument);return variableName}}for(let i=0;i<kernelValues.length;i++){const kernelValue=kernelValues[i];if(argument!==kernelValue.uploadValue)continue;const variable=`uploadValue_${kernelValue.name}`;context.insertVariable(variable,kernelValue);return variable}return null}module3.exports={glKernelString}},{"../../utils":114,"gl-wiretap":3}],13:[function(require2,module3,exports3){const{Kernel}=require2("../kernel");const{utils}=require2("../../utils");const{GLTextureArray2Float}=require2("./texture/array-2-float");const{GLTextureArray2Float2D}=require2("./texture/array-2-float-2d");const{GLTextureArray2Float3D}=require2("./texture/array-2-float-3d");const{GLTextureArray3Float}=require2("./texture/array-3-float");const{GLTextureArray3Float2D}=require2("./texture/array-3-float-2d");const{GLTextureArray3Float3D}=require2("./texture/array-3-float-3d");const{GLTextureArray4Float}=require2("./texture/array-4-float");const{GLTextureArray4Float2D}=require2("./texture/array-4-float-2d");const{GLTextureArray4Float3D}=require2("./texture/array-4-float-3d");const{GLTextureFloat}=require2("./texture/float");const{GLTextureFloat2D}=require2("./texture/float-2d");const{GLTextureFloat3D}=require2("./texture/float-3d");const{GLTextureMemoryOptimized}=require2("./texture/memory-optimized");const{GLTextureMemoryOptimized2D}=require2("./texture/memory-optimized-2d");const{GLTextureMemoryOptimized3D}=require2("./texture/memory-optimized-3d");const{GLTextureUnsigned}=require2("./texture/unsigned");const{GLTextureUnsigned2D}=require2("./texture/unsigned-2d");const{GLTextureUnsigned3D}=require2("./texture/unsigned-3d");const{GLTextureGraphical}=require2("./texture/graphical");class GLKernel extends Kernel{static get mode(){return"gpu"}static getIsFloatRead(){const kernelString=`function kernelFunction() {\n            return 1;\n          }`;const kernel=new this(kernelString,{context:this.testContext,canvas:this.testCanvas,validate:false,output:[1],precision:"single",returnType:"Number",tactic:"speed"});kernel.build();kernel.run();const result=kernel.renderOutput();kernel.destroy(true);return result[0]===1}static getIsIntegerDivisionAccurate(){function kernelFunction(v1,v22){return v1[this.thread.x]/v22[this.thread.x]}const kernel=new this(kernelFunction.toString(),{context:this.testContext,canvas:this.testCanvas,validate:false,output:[2],returnType:"Number",precision:"unsigned",tactic:"speed"});const args=[[6,6030401],[3,3991]];kernel.build.apply(kernel,args);kernel.run.apply(kernel,args);const result=kernel.renderOutput();kernel.destroy(true);return result[0]===2&&result[1]===1511}static getIsSpeedTacticSupported(){function kernelFunction(value2){return value2[this.thread.x]}const kernel=new this(kernelFunction.toString(),{context:this.testContext,canvas:this.testCanvas,validate:false,output:[4],returnType:"Number",precision:"unsigned",tactic:"speed"});const args=[[0,1,2,3]];kernel.build.apply(kernel,args);kernel.run.apply(kernel,args);const result=kernel.renderOutput();kernel.destroy(true);return Math.round(result[0])===0&&Math.round(result[1])===1&&Math.round(result[2])===2&&Math.round(result[3])===3}static get testCanvas(){throw new Error(`"testCanvas" not defined on ${this.name}`)}static get testContext(){throw new Error(`"testContext" not defined on ${this.name}`)}static getFeatures(){const gl2=this.testContext;const isDrawBuffers=this.getIsDrawBuffers();return Object.freeze({isFloatRead:this.getIsFloatRead(),isIntegerDivisionAccurate:this.getIsIntegerDivisionAccurate(),isSpeedTacticSupported:this.getIsSpeedTacticSupported(),isTextureFloat:this.getIsTextureFloat(),isDrawBuffers,kernelMap:isDrawBuffers,channelCount:this.getChannelCount(),maxTextureSize:this.getMaxTextureSize(),lowIntPrecision:gl2.getShaderPrecisionFormat(gl2.FRAGMENT_SHADER,gl2.LOW_INT),lowFloatPrecision:gl2.getShaderPrecisionFormat(gl2.FRAGMENT_SHADER,gl2.LOW_FLOAT),mediumIntPrecision:gl2.getShaderPrecisionFormat(gl2.FRAGMENT_SHADER,gl2.MEDIUM_INT),mediumFloatPrecision:gl2.getShaderPrecisionFormat(gl2.FRAGMENT_SHADER,gl2.MEDIUM_FLOAT),highIntPrecision:gl2.getShaderPrecisionFormat(gl2.FRAGMENT_SHADER,gl2.HIGH_INT),highFloatPrecision:gl2.getShaderPrecisionFormat(gl2.FRAGMENT_SHADER,gl2.HIGH_FLOAT)})}static setupFeatureChecks(){throw new Error(`"setupFeatureChecks" not defined on ${this.name}`)}static getSignature(kernel,argumentTypes){return kernel.getVariablePrecisionString()+(argumentTypes.length>0?":"+argumentTypes.join(","):"")}setFixIntegerDivisionAccuracy(fix){this.fixIntegerDivisionAccuracy=fix;return this}setPrecision(flag){this.precision=flag;return this}setFloatTextures(flag){utils.warnDeprecated("method","setFloatTextures","setOptimizeFloatMemory");this.floatTextures=flag;return this}static nativeFunctionArguments(source){const argumentTypes=[];const argumentNames=[];const states=[];const isStartingVariableName=/^[a-zA-Z_]/;const isVariableChar=/[a-zA-Z_0-9]/;let i=0;let argumentName=null;let argumentType=null;while(i<source.length){const char=source[i];const nextChar=source[i+1];const state22=states.length>0?states[states.length-1]:null;if(state22==="FUNCTION_ARGUMENTS"&&char==="/"&&nextChar==="*"){states.push("MULTI_LINE_COMMENT");i+=2;continue}else if(state22==="MULTI_LINE_COMMENT"&&char==="*"&&nextChar==="/"){states.pop();i+=2;continue}else if(state22==="FUNCTION_ARGUMENTS"&&char==="/"&&nextChar==="/"){states.push("COMMENT");i+=2;continue}else if(state22==="COMMENT"&&char==="\\n"){states.pop();i++;continue}else if(state22===null&&char==="("){states.push("FUNCTION_ARGUMENTS");i++;continue}else if(state22==="FUNCTION_ARGUMENTS"){if(char===")"){states.pop();break}if(char==="f"&&nextChar==="l"&&source[i+2]==="o"&&source[i+3]==="a"&&source[i+4]==="t"&&source[i+5]===" "){states.push("DECLARE_VARIABLE");argumentType="float";argumentName="";i+=6;continue}else if(char==="i"&&nextChar==="n"&&source[i+2]==="t"&&source[i+3]===" "){states.push("DECLARE_VARIABLE");argumentType="int";argumentName="";i+=4;continue}else if(char==="v"&&nextChar==="e"&&source[i+2]==="c"&&source[i+3]==="2"&&source[i+4]===" "){states.push("DECLARE_VARIABLE");argumentType="vec2";argumentName="";i+=5;continue}else if(char==="v"&&nextChar==="e"&&source[i+2]==="c"&&source[i+3]==="3"&&source[i+4]===" "){states.push("DECLARE_VARIABLE");argumentType="vec3";argumentName="";i+=5;continue}else if(char==="v"&&nextChar==="e"&&source[i+2]==="c"&&source[i+3]==="4"&&source[i+4]===" "){states.push("DECLARE_VARIABLE");argumentType="vec4";argumentName="";i+=5;continue}}else if(state22==="DECLARE_VARIABLE"){if(argumentName===""){if(char===" "){i++;continue}if(!isStartingVariableName.test(char)){throw new Error("variable name is not expected string")}}argumentName+=char;if(!isVariableChar.test(nextChar)){states.pop();argumentNames.push(argumentName);argumentTypes.push(typeMap[argumentType])}}i++}if(states.length>0){throw new Error("GLSL function was not parsable")}return{argumentNames,argumentTypes}}static nativeFunctionReturnType(source){return typeMap[source.match(/int|float|vec[2-4]/)[0]]}static combineKernels(combinedKernel,lastKernel){combinedKernel.apply(null,arguments);const{texSize,context,threadDim}=lastKernel.texSize;let result;if(lastKernel.precision==="single"){const w4=texSize[0];const h=Math.ceil(texSize[1]/4);result=new Float32Array(w4*h*4*4);context.readPixels(0,0,w4,h*4,context.RGBA,context.FLOAT,result)}else{const bytes=new Uint8Array(texSize[0]*texSize[1]*4);context.readPixels(0,0,texSize[0],texSize[1],context.RGBA,context.UNSIGNED_BYTE,bytes);result=new Float32Array(bytes.buffer)}result=result.subarray(0,threadDim[0]*threadDim[1]*threadDim[2]);if(lastKernel.output.length===1){return result}else if(lastKernel.output.length===2){return utils.splitArray(result,lastKernel.output[0])}else if(lastKernel.output.length===3){const cube=utils.splitArray(result,lastKernel.output[0]*lastKernel.output[1]);return cube.map(function(x22){return utils.splitArray(x22,lastKernel.output[0])})}}constructor(source,settings){super(source,settings);this.transferValues=null;this.formatValues=null;this.TextureConstructor=null;this.renderOutput=null;this.renderRawOutput=null;this.texSize=null;this.translatedSource=null;this.compiledFragmentShader=null;this.compiledVertexShader=null;this.switchingKernels=null;this._textureSwitched=null;this._mappedTextureSwitched=null}checkTextureSize(){const{features}=this.constructor;if(this.texSize[0]>features.maxTextureSize||this.texSize[1]>features.maxTextureSize){throw new Error(`Texture size [${this.texSize[0]},${this.texSize[1]}] generated by kernel is larger than supported size [${features.maxTextureSize},${features.maxTextureSize}]`)}}translateSource(){throw new Error(`"translateSource" not defined on ${this.constructor.name}`)}pickRenderStrategy(args){if(this.graphical){this.renderRawOutput=this.readPackedPixelsToUint8Array;this.transferValues=pixels=>pixels;this.TextureConstructor=GLTextureGraphical;return null}if(this.precision==="unsigned"){this.renderRawOutput=this.readPackedPixelsToUint8Array;this.transferValues=this.readPackedPixelsToFloat32Array;if(this.pipeline){this.renderOutput=this.renderTexture;if(this.subKernels!==null){this.renderKernels=this.renderKernelsToTextures}switch(this.returnType){case"LiteralInteger":case"Float":case"Number":case"Integer":if(this.output[2]>0){this.TextureConstructor=GLTextureUnsigned3D;return null}else if(this.output[1]>0){this.TextureConstructor=GLTextureUnsigned2D;return null}else{this.TextureConstructor=GLTextureUnsigned;return null}case"Array(2)":case"Array(3)":case"Array(4)":return this.requestFallback(args)}}else{if(this.subKernels!==null){this.renderKernels=this.renderKernelsToArrays}switch(this.returnType){case"LiteralInteger":case"Float":case"Number":case"Integer":this.renderOutput=this.renderValues;if(this.output[2]>0){this.TextureConstructor=GLTextureUnsigned3D;this.formatValues=utils.erect3DPackedFloat;return null}else if(this.output[1]>0){this.TextureConstructor=GLTextureUnsigned2D;this.formatValues=utils.erect2DPackedFloat;return null}else{this.TextureConstructor=GLTextureUnsigned;this.formatValues=utils.erectPackedFloat;return null}case"Array(2)":case"Array(3)":case"Array(4)":return this.requestFallback(args)}}}else if(this.precision==="single"){this.renderRawOutput=this.readFloatPixelsToFloat32Array;this.transferValues=this.readFloatPixelsToFloat32Array;if(this.pipeline){this.renderOutput=this.renderTexture;if(this.subKernels!==null){this.renderKernels=this.renderKernelsToTextures}switch(this.returnType){case"LiteralInteger":case"Float":case"Number":case"Integer":{if(this.optimizeFloatMemory){if(this.output[2]>0){this.TextureConstructor=GLTextureMemoryOptimized3D;return null}else if(this.output[1]>0){this.TextureConstructor=GLTextureMemoryOptimized2D;return null}else{this.TextureConstructor=GLTextureMemoryOptimized;return null}}else{if(this.output[2]>0){this.TextureConstructor=GLTextureFloat3D;return null}else if(this.output[1]>0){this.TextureConstructor=GLTextureFloat2D;return null}else{this.TextureConstructor=GLTextureFloat;return null}}}case"Array(2)":{if(this.output[2]>0){this.TextureConstructor=GLTextureArray2Float3D;return null}else if(this.output[1]>0){this.TextureConstructor=GLTextureArray2Float2D;return null}else{this.TextureConstructor=GLTextureArray2Float;return null}}case"Array(3)":{if(this.output[2]>0){this.TextureConstructor=GLTextureArray3Float3D;return null}else if(this.output[1]>0){this.TextureConstructor=GLTextureArray3Float2D;return null}else{this.TextureConstructor=GLTextureArray3Float;return null}}case"Array(4)":{if(this.output[2]>0){this.TextureConstructor=GLTextureArray4Float3D;return null}else if(this.output[1]>0){this.TextureConstructor=GLTextureArray4Float2D;return null}else{this.TextureConstructor=GLTextureArray4Float;return null}}}}this.renderOutput=this.renderValues;if(this.subKernels!==null){this.renderKernels=this.renderKernelsToArrays}if(this.optimizeFloatMemory){switch(this.returnType){case"LiteralInteger":case"Float":case"Number":case"Integer":{if(this.output[2]>0){this.TextureConstructor=GLTextureMemoryOptimized3D;this.formatValues=utils.erectMemoryOptimized3DFloat;return null}else if(this.output[1]>0){this.TextureConstructor=GLTextureMemoryOptimized2D;this.formatValues=utils.erectMemoryOptimized2DFloat;return null}else{this.TextureConstructor=GLTextureMemoryOptimized;this.formatValues=utils.erectMemoryOptimizedFloat;return null}}case"Array(2)":{if(this.output[2]>0){this.TextureConstructor=GLTextureArray2Float3D;this.formatValues=utils.erect3DArray2;return null}else if(this.output[1]>0){this.TextureConstructor=GLTextureArray2Float2D;this.formatValues=utils.erect2DArray2;return null}else{this.TextureConstructor=GLTextureArray2Float;this.formatValues=utils.erectArray2;return null}}case"Array(3)":{if(this.output[2]>0){this.TextureConstructor=GLTextureArray3Float3D;this.formatValues=utils.erect3DArray3;return null}else if(this.output[1]>0){this.TextureConstructor=GLTextureArray3Float2D;this.formatValues=utils.erect2DArray3;return null}else{this.TextureConstructor=GLTextureArray3Float;this.formatValues=utils.erectArray3;return null}}case"Array(4)":{if(this.output[2]>0){this.TextureConstructor=GLTextureArray4Float3D;this.formatValues=utils.erect3DArray4;return null}else if(this.output[1]>0){this.TextureConstructor=GLTextureArray4Float2D;this.formatValues=utils.erect2DArray4;return null}else{this.TextureConstructor=GLTextureArray4Float;this.formatValues=utils.erectArray4;return null}}}}else{switch(this.returnType){case"LiteralInteger":case"Float":case"Number":case"Integer":{if(this.output[2]>0){this.TextureConstructor=GLTextureFloat3D;this.formatValues=utils.erect3DFloat;return null}else if(this.output[1]>0){this.TextureConstructor=GLTextureFloat2D;this.formatValues=utils.erect2DFloat;return null}else{this.TextureConstructor=GLTextureFloat;this.formatValues=utils.erectFloat;return null}}case"Array(2)":{if(this.output[2]>0){this.TextureConstructor=GLTextureArray2Float3D;this.formatValues=utils.erect3DArray2;return null}else if(this.output[1]>0){this.TextureConstructor=GLTextureArray2Float2D;this.formatValues=utils.erect2DArray2;return null}else{this.TextureConstructor=GLTextureArray2Float;this.formatValues=utils.erectArray2;return null}}case"Array(3)":{if(this.output[2]>0){this.TextureConstructor=GLTextureArray3Float3D;this.formatValues=utils.erect3DArray3;return null}else if(this.output[1]>0){this.TextureConstructor=GLTextureArray3Float2D;this.formatValues=utils.erect2DArray3;return null}else{this.TextureConstructor=GLTextureArray3Float;this.formatValues=utils.erectArray3;return null}}case"Array(4)":{if(this.output[2]>0){this.TextureConstructor=GLTextureArray4Float3D;this.formatValues=utils.erect3DArray4;return null}else if(this.output[1]>0){this.TextureConstructor=GLTextureArray4Float2D;this.formatValues=utils.erect2DArray4;return null}else{this.TextureConstructor=GLTextureArray4Float;this.formatValues=utils.erectArray4;return null}}}}}else{throw new Error(`unhandled precision of "${this.precision}"`)}throw new Error(`unhandled return type "${this.returnType}"`)}getKernelString(){throw new Error(`abstract method call`)}getMainResultTexture(){switch(this.returnType){case"LiteralInteger":case"Float":case"Integer":case"Number":return this.getMainResultNumberTexture();case"Array(2)":return this.getMainResultArray2Texture();case"Array(3)":return this.getMainResultArray3Texture();case"Array(4)":return this.getMainResultArray4Texture();default:throw new Error(`unhandled returnType type ${this.returnType}`)}}getMainResultKernelNumberTexture(){throw new Error(`abstract method call`)}getMainResultSubKernelNumberTexture(){throw new Error(`abstract method call`)}getMainResultKernelArray2Texture(){throw new Error(`abstract method call`)}getMainResultSubKernelArray2Texture(){throw new Error(`abstract method call`)}getMainResultKernelArray3Texture(){throw new Error(`abstract method call`)}getMainResultSubKernelArray3Texture(){throw new Error(`abstract method call`)}getMainResultKernelArray4Texture(){throw new Error(`abstract method call`)}getMainResultSubKernelArray4Texture(){throw new Error(`abstract method call`)}getMainResultGraphical(){throw new Error(`abstract method call`)}getMainResultMemoryOptimizedFloats(){throw new Error(`abstract method call`)}getMainResultPackedPixels(){throw new Error(`abstract method call`)}getMainResultString(){if(this.graphical){return this.getMainResultGraphical()}else if(this.precision==="single"){if(this.optimizeFloatMemory){return this.getMainResultMemoryOptimizedFloats()}return this.getMainResultTexture()}else{return this.getMainResultPackedPixels()}}getMainResultNumberTexture(){return utils.linesToString(this.getMainResultKernelNumberTexture())+utils.linesToString(this.getMainResultSubKernelNumberTexture())}getMainResultArray2Texture(){return utils.linesToString(this.getMainResultKernelArray2Texture())+utils.linesToString(this.getMainResultSubKernelArray2Texture())}getMainResultArray3Texture(){return utils.linesToString(this.getMainResultKernelArray3Texture())+utils.linesToString(this.getMainResultSubKernelArray3Texture())}getMainResultArray4Texture(){return utils.linesToString(this.getMainResultKernelArray4Texture())+utils.linesToString(this.getMainResultSubKernelArray4Texture())}getFloatTacticDeclaration(){const variablePrecision=this.getVariablePrecisionString(this.texSize,this.tactic);return`precision ${variablePrecision} float;\n`}getIntTacticDeclaration(){return`precision ${this.getVariablePrecisionString(this.texSize,this.tactic,true)} int;\n`}getSampler2DTacticDeclaration(){return`precision ${this.getVariablePrecisionString(this.texSize,this.tactic)} sampler2D;\n`}getSampler2DArrayTacticDeclaration(){return`precision ${this.getVariablePrecisionString(this.texSize,this.tactic)} sampler2DArray;\n`}renderTexture(){return this.immutable?this.texture.clone():this.texture}readPackedPixelsToUint8Array(){if(this.precision!=="unsigned")throw new Error(\'Requires this.precision to be "unsigned"\');const{texSize,context:gl2}=this;const result=new Uint8Array(texSize[0]*texSize[1]*4);gl2.readPixels(0,0,texSize[0],texSize[1],gl2.RGBA,gl2.UNSIGNED_BYTE,result);return result}readPackedPixelsToFloat32Array(){return new Float32Array(this.readPackedPixelsToUint8Array().buffer)}readFloatPixelsToFloat32Array(){if(this.precision!=="single")throw new Error(\'Requires this.precision to be "single"\');const{texSize,context:gl2}=this;const w4=texSize[0];const h=texSize[1];const result=new Float32Array(w4*h*4);gl2.readPixels(0,0,w4,h,gl2.RGBA,gl2.FLOAT,result);return result}getPixels(flip){const{context:gl2,output}=this;const[width,height]=output;const pixels=new Uint8Array(width*height*4);gl2.readPixels(0,0,width,height,gl2.RGBA,gl2.UNSIGNED_BYTE,pixels);return new Uint8ClampedArray((flip?pixels:utils.flipPixels(pixels,width,height)).buffer)}renderKernelsToArrays(){const result={result:this.renderOutput()};for(let i=0;i<this.subKernels.length;i++){result[this.subKernels[i].property]=this.mappedTextures[i].toArray()}return result}renderKernelsToTextures(){const result={result:this.renderOutput()};if(this.immutable){for(let i=0;i<this.subKernels.length;i++){result[this.subKernels[i].property]=this.mappedTextures[i].clone()}}else{for(let i=0;i<this.subKernels.length;i++){result[this.subKernels[i].property]=this.mappedTextures[i]}}return result}resetSwitchingKernels(){const existingValue=this.switchingKernels;this.switchingKernels=null;return existingValue}setOutput(output){const newOutput=this.toKernelOutput(output);if(this.program){if(!this.dynamicOutput){throw new Error("Resizing a kernel with dynamicOutput: false is not possible")}const newThreadDim=[newOutput[0],newOutput[1]||1,newOutput[2]||1];const newTexSize=utils.getKernelTextureSize({optimizeFloatMemory:this.optimizeFloatMemory,precision:this.precision},newThreadDim);const oldTexSize=this.texSize;if(oldTexSize){const oldPrecision=this.getVariablePrecisionString(oldTexSize,this.tactic);const newPrecision=this.getVariablePrecisionString(newTexSize,this.tactic);if(oldPrecision!==newPrecision){if(this.debug){console.warn("Precision requirement changed, asking GPU instance to recompile")}this.switchKernels({type:"outputPrecisionMismatch",precision:newPrecision,needed:output});return}}this.output=newOutput;this.threadDim=newThreadDim;this.texSize=newTexSize;const{context:gl2}=this;gl2.bindFramebuffer(gl2.FRAMEBUFFER,this.framebuffer);this.updateMaxTexSize();this.framebuffer.width=this.texSize[0];this.framebuffer.height=this.texSize[1];gl2.viewport(0,0,this.maxTexSize[0],this.maxTexSize[1]);this.canvas.width=this.maxTexSize[0];this.canvas.height=this.maxTexSize[1];if(this.texture){this.texture.delete()}this.texture=null;this._setupOutputTexture();if(this.mappedTextures&&this.mappedTextures.length>0){for(let i=0;i<this.mappedTextures.length;i++){this.mappedTextures[i].delete()}this.mappedTextures=null;this._setupSubOutputTextures()}}else{this.output=newOutput}return this}renderValues(){return this.formatValues(this.transferValues(),this.output[0],this.output[1],this.output[2])}switchKernels(reason){if(this.switchingKernels){this.switchingKernels.push(reason)}else{this.switchingKernels=[reason]}}getVariablePrecisionString(textureSize=this.texSize,tactic=this.tactic,isInt=false){if(!tactic){if(!this.constructor.features.isSpeedTacticSupported)return"highp";const low=this.constructor.features[isInt?"lowIntPrecision":"lowFloatPrecision"];const medium=this.constructor.features[isInt?"mediumIntPrecision":"mediumFloatPrecision"];const high=this.constructor.features[isInt?"highIntPrecision":"highFloatPrecision"];const requiredSize=Math.log2(textureSize[0]*textureSize[1]);if(requiredSize<=low.rangeMax){return"lowp"}else if(requiredSize<=medium.rangeMax){return"mediump"}else if(requiredSize<=high.rangeMax){return"highp"}else{throw new Error(`The required size exceeds that of the ability of your system`)}}switch(tactic){case"speed":return"lowp";case"balanced":return"mediump";case"precision":return"highp";default:throw new Error(`Unknown tactic "${tactic}" use "speed", "balanced", "precision", or empty for auto`)}}updateTextureArgumentRefs(kernelValue,arg){if(!this.immutable)return;if(this.texture.texture===arg.texture){const{prevArg}=kernelValue;if(prevArg){if(prevArg.texture._refs===1){this.texture.delete();this.texture=prevArg.clone();this._textureSwitched=true}prevArg.delete()}kernelValue.prevArg=arg.clone()}else if(this.mappedTextures&&this.mappedTextures.length>0){const{mappedTextures}=this;for(let i=0;i<mappedTextures.length;i++){const mappedTexture=mappedTextures[i];if(mappedTexture.texture===arg.texture){const{prevArg}=kernelValue;if(prevArg){if(prevArg.texture._refs===1){mappedTexture.delete();mappedTextures[i]=prevArg.clone();this._mappedTextureSwitched[i]=true}prevArg.delete()}kernelValue.prevArg=arg.clone();return}}}}onActivate(previousKernel){this._textureSwitched=true;this.texture=previousKernel.texture;if(this.mappedTextures){for(let i=0;i<this.mappedTextures.length;i++){this._mappedTextureSwitched[i]=true}this.mappedTextures=previousKernel.mappedTextures}}initCanvas(){}}const typeMap={int:"Integer",float:"Number",vec2:"Array(2)",vec3:"Array(3)",vec4:"Array(4)"};module3.exports={GLKernel}},{"../../utils":114,"../kernel":36,"./texture/array-2-float":16,"./texture/array-2-float-2d":14,"./texture/array-2-float-3d":15,"./texture/array-3-float":19,"./texture/array-3-float-2d":17,"./texture/array-3-float-3d":18,"./texture/array-4-float":22,"./texture/array-4-float-2d":20,"./texture/array-4-float-3d":21,"./texture/float":25,"./texture/float-2d":23,"./texture/float-3d":24,"./texture/graphical":26,"./texture/memory-optimized":30,"./texture/memory-optimized-2d":28,"./texture/memory-optimized-3d":29,"./texture/unsigned":33,"./texture/unsigned-2d":31,"./texture/unsigned-3d":32}],14:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{GLTextureFloat}=require2("./float");class GLTextureArray2Float2D extends GLTextureFloat{constructor(settings){super(settings);this.type="ArrayTexture(2)"}toArray(){return utils.erect2DArray2(this.renderValues(),this.output[0],this.output[1])}}module3.exports={GLTextureArray2Float2D}},{"../../../utils":114,"./float":25}],15:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{GLTextureFloat}=require2("./float");class GLTextureArray2Float3D extends GLTextureFloat{constructor(settings){super(settings);this.type="ArrayTexture(2)"}toArray(){return utils.erect3DArray2(this.renderValues(),this.output[0],this.output[1],this.output[2])}}module3.exports={GLTextureArray2Float3D}},{"../../../utils":114,"./float":25}],16:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{GLTextureFloat}=require2("./float");class GLTextureArray2Float extends GLTextureFloat{constructor(settings){super(settings);this.type="ArrayTexture(2)"}toArray(){return utils.erectArray2(this.renderValues(),this.output[0],this.output[1])}}module3.exports={GLTextureArray2Float}},{"../../../utils":114,"./float":25}],17:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{GLTextureFloat}=require2("./float");class GLTextureArray3Float2D extends GLTextureFloat{constructor(settings){super(settings);this.type="ArrayTexture(3)"}toArray(){return utils.erect2DArray3(this.renderValues(),this.output[0],this.output[1])}}module3.exports={GLTextureArray3Float2D}},{"../../../utils":114,"./float":25}],18:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{GLTextureFloat}=require2("./float");class GLTextureArray3Float3D extends GLTextureFloat{constructor(settings){super(settings);this.type="ArrayTexture(3)"}toArray(){return utils.erect3DArray3(this.renderValues(),this.output[0],this.output[1],this.output[2])}}module3.exports={GLTextureArray3Float3D}},{"../../../utils":114,"./float":25}],19:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{GLTextureFloat}=require2("./float");class GLTextureArray3Float extends GLTextureFloat{constructor(settings){super(settings);this.type="ArrayTexture(3)"}toArray(){return utils.erectArray3(this.renderValues(),this.output[0])}}module3.exports={GLTextureArray3Float}},{"../../../utils":114,"./float":25}],20:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{GLTextureFloat}=require2("./float");class GLTextureArray4Float2D extends GLTextureFloat{constructor(settings){super(settings);this.type="ArrayTexture(4)"}toArray(){return utils.erect2DArray4(this.renderValues(),this.output[0],this.output[1])}}module3.exports={GLTextureArray4Float2D}},{"../../../utils":114,"./float":25}],21:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{GLTextureFloat}=require2("./float");class GLTextureArray4Float3D extends GLTextureFloat{constructor(settings){super(settings);this.type="ArrayTexture(4)"}toArray(){return utils.erect3DArray4(this.renderValues(),this.output[0],this.output[1],this.output[2])}}module3.exports={GLTextureArray4Float3D}},{"../../../utils":114,"./float":25}],22:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{GLTextureFloat}=require2("./float");class GLTextureArray4Float extends GLTextureFloat{constructor(settings){super(settings);this.type="ArrayTexture(4)"}toArray(){return utils.erectArray4(this.renderValues(),this.output[0])}}module3.exports={GLTextureArray4Float}},{"../../../utils":114,"./float":25}],23:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{GLTextureFloat}=require2("./float");class GLTextureFloat2D extends GLTextureFloat{constructor(settings){super(settings);this.type="ArrayTexture(1)"}toArray(){return utils.erect2DFloat(this.renderValues(),this.output[0],this.output[1])}}module3.exports={GLTextureFloat2D}},{"../../../utils":114,"./float":25}],24:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{GLTextureFloat}=require2("./float");class GLTextureFloat3D extends GLTextureFloat{constructor(settings){super(settings);this.type="ArrayTexture(1)"}toArray(){return utils.erect3DFloat(this.renderValues(),this.output[0],this.output[1],this.output[2])}}module3.exports={GLTextureFloat3D}},{"../../../utils":114,"./float":25}],25:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{GLTexture}=require2("./index");class GLTextureFloat extends GLTexture{get textureType(){return this.context.FLOAT}constructor(settings){super(settings);this.type="ArrayTexture(1)"}renderRawOutput(){const gl2=this.context;const size=this.size;gl2.bindFramebuffer(gl2.FRAMEBUFFER,this.framebuffer());gl2.framebufferTexture2D(gl2.FRAMEBUFFER,gl2.COLOR_ATTACHMENT0,gl2.TEXTURE_2D,this.texture,0);const result=new Float32Array(size[0]*size[1]*4);gl2.readPixels(0,0,size[0],size[1],gl2.RGBA,gl2.FLOAT,result);return result}renderValues(){if(this._deleted)return null;return this.renderRawOutput()}toArray(){return utils.erectFloat(this.renderValues(),this.output[0])}}module3.exports={GLTextureFloat}},{"../../../utils":114,"./index":27}],26:[function(require2,module3,exports3){const{GLTextureUnsigned}=require2("./unsigned");class GLTextureGraphical extends GLTextureUnsigned{constructor(settings){super(settings);this.type="ArrayTexture(4)"}toArray(){return this.renderValues()}}module3.exports={GLTextureGraphical}},{"./unsigned":33}],27:[function(require2,module3,exports3){const{Texture}=require2("../../../texture");class GLTexture extends Texture{get textureType(){throw new Error(`"textureType" not implemented on ${this.name}`)}clone(){return new this.constructor(this)}beforeMutate(){if(this.texture._refs>1){this.newTexture();return true}return false}cloneTexture(){this.texture._refs--;const{context:gl2,size,texture,kernel}=this;if(kernel.debug){console.warn("cloning internal texture")}gl2.bindFramebuffer(gl2.FRAMEBUFFER,this.framebuffer());selectTexture(gl2,texture);gl2.framebufferTexture2D(gl2.FRAMEBUFFER,gl2.COLOR_ATTACHMENT0,gl2.TEXTURE_2D,texture,0);const target=gl2.createTexture();selectTexture(gl2,target);gl2.texImage2D(gl2.TEXTURE_2D,0,this.internalFormat,size[0],size[1],0,this.textureFormat,this.textureType,null);gl2.copyTexSubImage2D(gl2.TEXTURE_2D,0,0,0,0,0,size[0],size[1]);target._refs=1;this.texture=target}newTexture(){this.texture._refs--;const gl2=this.context;const size=this.size;const kernel=this.kernel;if(kernel.debug){console.warn("new internal texture")}const target=gl2.createTexture();selectTexture(gl2,target);gl2.texImage2D(gl2.TEXTURE_2D,0,this.internalFormat,size[0],size[1],0,this.textureFormat,this.textureType,null);target._refs=1;this.texture=target}clear(){if(this.texture._refs){this.texture._refs--;const gl22=this.context;const target=this.texture=gl22.createTexture();selectTexture(gl22,target);const size=this.size;target._refs=1;gl22.texImage2D(gl22.TEXTURE_2D,0,this.internalFormat,size[0],size[1],0,this.textureFormat,this.textureType,null)}const{context:gl2,texture}=this;gl2.bindFramebuffer(gl2.FRAMEBUFFER,this.framebuffer());gl2.bindTexture(gl2.TEXTURE_2D,texture);selectTexture(gl2,texture);gl2.framebufferTexture2D(gl2.FRAMEBUFFER,gl2.COLOR_ATTACHMENT0,gl2.TEXTURE_2D,texture,0);gl2.clearColor(0,0,0,0);gl2.clear(gl2.COLOR_BUFFER_BIT|gl2.DEPTH_BUFFER_BIT)}delete(){if(this._deleted)return;this._deleted=true;if(this.texture._refs){this.texture._refs--;if(this.texture._refs)return}this.context.deleteTexture(this.texture)}framebuffer(){if(!this._framebuffer){this._framebuffer=this.kernel.getRawValueFramebuffer(this.size[0],this.size[1])}return this._framebuffer}}function selectTexture(gl2,texture){gl2.activeTexture(gl2.TEXTURE15);gl2.bindTexture(gl2.TEXTURE_2D,texture);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_WRAP_S,gl2.CLAMP_TO_EDGE);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_WRAP_T,gl2.CLAMP_TO_EDGE);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_MIN_FILTER,gl2.NEAREST);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_MAG_FILTER,gl2.NEAREST)}module3.exports={GLTexture}},{"../../../texture":113}],28:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{GLTextureFloat}=require2("./float");class GLTextureMemoryOptimized2D extends GLTextureFloat{constructor(settings){super(settings);this.type="MemoryOptimizedNumberTexture"}toArray(){return utils.erectMemoryOptimized2DFloat(this.renderValues(),this.output[0],this.output[1])}}module3.exports={GLTextureMemoryOptimized2D}},{"../../../utils":114,"./float":25}],29:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{GLTextureFloat}=require2("./float");class GLTextureMemoryOptimized3D extends GLTextureFloat{constructor(settings){super(settings);this.type="MemoryOptimizedNumberTexture"}toArray(){return utils.erectMemoryOptimized3DFloat(this.renderValues(),this.output[0],this.output[1],this.output[2])}}module3.exports={GLTextureMemoryOptimized3D}},{"../../../utils":114,"./float":25}],30:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{GLTextureFloat}=require2("./float");class GLTextureMemoryOptimized extends GLTextureFloat{constructor(settings){super(settings);this.type="MemoryOptimizedNumberTexture"}toArray(){return utils.erectMemoryOptimizedFloat(this.renderValues(),this.output[0])}}module3.exports={GLTextureMemoryOptimized}},{"../../../utils":114,"./float":25}],31:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{GLTextureUnsigned}=require2("./unsigned");class GLTextureUnsigned2D extends GLTextureUnsigned{constructor(settings){super(settings);this.type="NumberTexture"}toArray(){return utils.erect2DPackedFloat(this.renderValues(),this.output[0],this.output[1])}}module3.exports={GLTextureUnsigned2D}},{"../../../utils":114,"./unsigned":33}],32:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{GLTextureUnsigned}=require2("./unsigned");class GLTextureUnsigned3D extends GLTextureUnsigned{constructor(settings){super(settings);this.type="NumberTexture"}toArray(){return utils.erect3DPackedFloat(this.renderValues(),this.output[0],this.output[1],this.output[2])}}module3.exports={GLTextureUnsigned3D}},{"../../../utils":114,"./unsigned":33}],33:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{GLTexture}=require2("./index");class GLTextureUnsigned extends GLTexture{get textureType(){return this.context.UNSIGNED_BYTE}constructor(settings){super(settings);this.type="NumberTexture"}renderRawOutput(){const{context:gl2}=this;gl2.bindFramebuffer(gl2.FRAMEBUFFER,this.framebuffer());gl2.framebufferTexture2D(gl2.FRAMEBUFFER,gl2.COLOR_ATTACHMENT0,gl2.TEXTURE_2D,this.texture,0);const result=new Uint8Array(this.size[0]*this.size[1]*4);gl2.readPixels(0,0,this.size[0],this.size[1],gl2.RGBA,gl2.UNSIGNED_BYTE,result);return result}renderValues(){if(this._deleted)return null;return new Float32Array(this.renderRawOutput().buffer)}toArray(){return utils.erectPackedFloat(this.renderValues(),this.output[0])}}module3.exports={GLTextureUnsigned}},{"../../../utils":114,"./index":27}],34:[function(require2,module3,exports3){const getContext=require2("gl");const{WebGLKernel}=require2("../web-gl/kernel");const{glKernelString}=require2("../gl/kernel-string");let isSupported=null;let testCanvas=null;let testContext=null;let testExtensions=null;let features=null;class HeadlessGLKernel extends WebGLKernel{static get isSupported(){if(isSupported!==null)return isSupported;this.setupFeatureChecks();isSupported=testContext!==null;return isSupported}static setupFeatureChecks(){testCanvas=null;testExtensions=null;if(typeof getContext!=="function")return;try{testContext=getContext(2,2,{preserveDrawingBuffer:true});if(!testContext||!testContext.getExtension)return;testExtensions={STACKGL_resize_drawingbuffer:testContext.getExtension("STACKGL_resize_drawingbuffer"),STACKGL_destroy_context:testContext.getExtension("STACKGL_destroy_context"),OES_texture_float:testContext.getExtension("OES_texture_float"),OES_texture_float_linear:testContext.getExtension("OES_texture_float_linear"),OES_element_index_uint:testContext.getExtension("OES_element_index_uint"),WEBGL_draw_buffers:testContext.getExtension("WEBGL_draw_buffers"),WEBGL_color_buffer_float:testContext.getExtension("WEBGL_color_buffer_float")};features=this.getFeatures()}catch(e){console.warn(e)}}static isContextMatch(context){try{return context.getParameter(context.RENDERER)==="ANGLE"}catch(e){return false}}static getIsTextureFloat(){return Boolean(testExtensions.OES_texture_float)}static getIsDrawBuffers(){return Boolean(testExtensions.WEBGL_draw_buffers)}static getChannelCount(){return testExtensions.WEBGL_draw_buffers?testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL):1}static getMaxTextureSize(){return testContext.getParameter(testContext.MAX_TEXTURE_SIZE)}static get testCanvas(){return testCanvas}static get testContext(){return testContext}static get features(){return features}initCanvas(){return{}}initContext(){return getContext(2,2,{preserveDrawingBuffer:true})}initExtensions(){this.extensions={STACKGL_resize_drawingbuffer:this.context.getExtension("STACKGL_resize_drawingbuffer"),STACKGL_destroy_context:this.context.getExtension("STACKGL_destroy_context"),OES_texture_float:this.context.getExtension("OES_texture_float"),OES_texture_float_linear:this.context.getExtension("OES_texture_float_linear"),OES_element_index_uint:this.context.getExtension("OES_element_index_uint"),WEBGL_draw_buffers:this.context.getExtension("WEBGL_draw_buffers")}}build(){super.build.apply(this,arguments);if(!this.fallbackRequested){this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0],this.maxTexSize[1])}}destroyExtensions(){this.extensions.STACKGL_resize_drawingbuffer=null;this.extensions.STACKGL_destroy_context=null;this.extensions.OES_texture_float=null;this.extensions.OES_texture_float_linear=null;this.extensions.OES_element_index_uint=null;this.extensions.WEBGL_draw_buffers=null}static destroyContext(context){const extension=context.getExtension("STACKGL_destroy_context");if(extension&&extension.destroy){extension.destroy()}}toString(){const setupContextString=`const gl = context || require(\'gl\')(1, 1);\n`;const destroyContextString=`    if (!context) { gl.getExtension(\'STACKGL_destroy_context\').destroy(); }\n`;return glKernelString(this.constructor,arguments,this,setupContextString,destroyContextString)}setOutput(output){super.setOutput(output);if(this.graphical&&this.extensions.STACKGL_resize_drawingbuffer){this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0],this.maxTexSize[1])}return this}}module3.exports={HeadlessGLKernel}},{"../gl/kernel-string":12,"../web-gl/kernel":70,"gl":2}],35:[function(require2,module3,exports3){class KernelValue{constructor(value2,settings){const{name:name2,kernel,context,checkContext,onRequestContextHandle,onUpdateValueMismatch,origin,strictIntegers,type,tactic}=settings;if(!name2){throw new Error("name not set")}if(!type){throw new Error("type not set")}if(!origin){throw new Error("origin not set")}if(origin!=="user"&&origin!=="constants"){throw new Error(`origin must be "user" or "constants" value is "${origin}"`)}if(!onRequestContextHandle){throw new Error("onRequestContextHandle is not set")}this.name=name2;this.origin=origin;this.tactic=tactic;this.varName=origin==="constants"?`constants.${name2}`:name2;this.kernel=kernel;this.strictIntegers=strictIntegers;this.type=value2.type||type;this.size=value2.size||null;this.index=null;this.context=context;this.checkContext=checkContext!==null&&checkContext!==void 0?checkContext:true;this.contextHandle=null;this.onRequestContextHandle=onRequestContextHandle;this.onUpdateValueMismatch=onUpdateValueMismatch;this.forceUploadEachRun=null}get id(){return`${this.origin}_${name}`}getSource(){throw new Error(`"getSource" not defined on ${this.constructor.name}`)}updateValue(value2){throw new Error(`"updateValue" not defined on ${this.constructor.name}`)}}module3.exports={KernelValue}},{}],36:[function(require2,module3,exports3){const{utils}=require2("../utils");const{Input}=require2("../input");class Kernel{static get isSupported(){throw new Error(`"isSupported" not implemented on ${this.name}`)}static isContextMatch(context){throw new Error(`"isContextMatch" not implemented on ${this.name}`)}static getFeatures(){throw new Error(`"getFeatures" not implemented on ${this.name}`)}static destroyContext(context){throw new Error(`"destroyContext" called on ${this.name}`)}static nativeFunctionArguments(){throw new Error(`"nativeFunctionArguments" called on ${this.name}`)}static nativeFunctionReturnType(){throw new Error(`"nativeFunctionReturnType" called on ${this.name}`)}static combineKernels(){throw new Error(`"combineKernels" called on ${this.name}`)}constructor(source,settings){if(typeof source!=="object"){if(typeof source!=="string"){throw new Error("source not a string")}if(!utils.isFunctionString(source)){throw new Error("source not a function string")}}this.useLegacyEncoder=false;this.fallbackRequested=false;this.onRequestFallback=null;this.argumentNames=typeof source==="string"?utils.getArgumentNamesFromString(source):null;this.argumentTypes=null;this.argumentSizes=null;this.argumentBitRatios=null;this.kernelArguments=null;this.kernelConstants=null;this.forceUploadKernelConstants=null;this.source=source;this.output=null;this.debug=false;this.graphical=false;this.loopMaxIterations=0;this.constants=null;this.constantTypes=null;this.constantBitRatios=null;this.dynamicArguments=false;this.dynamicOutput=false;this.canvas=null;this.context=null;this.checkContext=null;this.gpu=null;this.functions=null;this.nativeFunctions=null;this.injectedNative=null;this.subKernels=null;this.validate=true;this.immutable=false;this.pipeline=false;this.precision=null;this.tactic=null;this.plugins=null;this.returnType=null;this.leadingReturnStatement=null;this.followingReturnStatement=null;this.optimizeFloatMemory=null;this.strictIntegers=false;this.fixIntegerDivisionAccuracy=null;this.built=false;this.signature=null}mergeSettings(settings){for(let p in settings){if(!settings.hasOwnProperty(p)||!this.hasOwnProperty(p))continue;switch(p){case"output":if(!Array.isArray(settings.output)){this.setOutput(settings.output);continue}break;case"functions":this.functions=[];for(let i=0;i<settings.functions.length;i++){this.addFunction(settings.functions[i])}continue;case"graphical":if(settings[p]&&!settings.hasOwnProperty("precision")){this.precision="unsigned"}this[p]=settings[p];continue;case"nativeFunctions":if(!settings.nativeFunctions)continue;this.nativeFunctions=[];for(let i=0;i<settings.nativeFunctions.length;i++){const s=settings.nativeFunctions[i];const{name:name2,source}=s;this.addNativeFunction(name2,source,s)}continue}this[p]=settings[p]}if(!this.canvas)this.canvas=this.initCanvas();if(!this.context)this.context=this.initContext();if(!this.plugins)this.plugins=this.initPlugins(settings)}build(){throw new Error(`"build" not defined on ${this.constructor.name}`)}run(){throw new Error(`"run" not defined on ${this.constructor.name}`)}initCanvas(){throw new Error(`"initCanvas" not defined on ${this.constructor.name}`)}initContext(){throw new Error(`"initContext" not defined on ${this.constructor.name}`)}initPlugins(settings){throw new Error(`"initPlugins" not defined on ${this.constructor.name}`)}addFunction(source,settings={}){if(source.name&&source.source&&source.argumentTypes&&"returnType"in source){this.functions.push(source)}else if("settings"in source&&"source"in source){this.functions.push(this.functionToIGPUFunction(source.source,source.settings))}else if(typeof source==="string"||typeof source==="function"){this.functions.push(this.functionToIGPUFunction(source,settings))}else{throw new Error(`function not properly defined`)}return this}addNativeFunction(name2,source,settings={}){const{argumentTypes,argumentNames}=settings.argumentTypes?splitArgumentTypes(settings.argumentTypes):this.constructor.nativeFunctionArguments(source)||{};this.nativeFunctions.push({name:name2,source,settings,argumentTypes,argumentNames,returnType:settings.returnType||this.constructor.nativeFunctionReturnType(source)});return this}setupArguments(args){this.kernelArguments=[];if(!this.argumentTypes){if(!this.argumentTypes){this.argumentTypes=[];for(let i=0;i<args.length;i++){const argType=utils.getVariableType(args[i],this.strictIntegers);const type=argType==="Integer"?"Number":argType;this.argumentTypes.push(type);this.kernelArguments.push({type})}}}else{for(let i=0;i<this.argumentTypes.length;i++){this.kernelArguments.push({type:this.argumentTypes[i]})}}this.argumentSizes=new Array(args.length);this.argumentBitRatios=new Int32Array(args.length);for(let i=0;i<args.length;i++){const arg=args[i];this.argumentSizes[i]=arg.constructor===Input?arg.size:null;this.argumentBitRatios[i]=this.getBitRatio(arg)}if(this.argumentNames.length!==args.length){throw new Error(`arguments are miss-aligned`)}}setupConstants(){this.kernelConstants=[];let needsConstantTypes=this.constantTypes===null;if(needsConstantTypes){this.constantTypes={}}this.constantBitRatios={};if(this.constants){for(let name2 in this.constants){if(needsConstantTypes){const type=utils.getVariableType(this.constants[name2],this.strictIntegers);this.constantTypes[name2]=type;this.kernelConstants.push({name:name2,type})}else{this.kernelConstants.push({name:name2,type:this.constantTypes[name2]})}this.constantBitRatios[name2]=this.getBitRatio(this.constants[name2])}}}setOptimizeFloatMemory(flag){this.optimizeFloatMemory=flag;return this}toKernelOutput(output){if(output.hasOwnProperty("x")){if(output.hasOwnProperty("y")){if(output.hasOwnProperty("z")){return[output.x,output.y,output.z]}else{return[output.x,output.y]}}else{return[output.x]}}else{return output}}setOutput(output){this.output=this.toKernelOutput(output);return this}setDebug(flag){this.debug=flag;return this}setGraphical(flag){this.graphical=flag;this.precision="unsigned";return this}setLoopMaxIterations(max){this.loopMaxIterations=max;return this}setConstants(constants){this.constants=constants;return this}setConstantTypes(constantTypes){this.constantTypes=constantTypes;return this}setFunctions(functions){for(let i=0;i<functions.length;i++){this.addFunction(functions[i])}return this}setNativeFunctions(nativeFunctions){for(let i=0;i<nativeFunctions.length;i++){const settings=nativeFunctions[i];const{name:name2,source}=settings;this.addNativeFunction(name2,source,settings)}return this}setInjectedNative(injectedNative){this.injectedNative=injectedNative;return this}setPipeline(flag){this.pipeline=flag;return this}setPrecision(flag){this.precision=flag;return this}setDimensions(flag){utils.warnDeprecated("method","setDimensions","setOutput");this.output=flag;return this}setOutputToTexture(flag){utils.warnDeprecated("method","setOutputToTexture","setPipeline");this.pipeline=flag;return this}setImmutable(flag){this.immutable=flag;return this}setCanvas(canvas){this.canvas=canvas;return this}setStrictIntegers(flag){this.strictIntegers=flag;return this}setDynamicOutput(flag){this.dynamicOutput=flag;return this}setHardcodeConstants(flag){utils.warnDeprecated("method","setHardcodeConstants");this.setDynamicOutput(flag);this.setDynamicArguments(flag);return this}setDynamicArguments(flag){this.dynamicArguments=flag;return this}setUseLegacyEncoder(flag){this.useLegacyEncoder=flag;return this}setWarnVarUsage(flag){utils.warnDeprecated("method","setWarnVarUsage");return this}getCanvas(){utils.warnDeprecated("method","getCanvas");return this.canvas}getWebGl(){utils.warnDeprecated("method","getWebGl");return this.context}setContext(context){this.context=context;return this}setArgumentTypes(argumentTypes){if(Array.isArray(argumentTypes)){this.argumentTypes=argumentTypes}else{this.argumentTypes=[];for(const p in argumentTypes){if(!argumentTypes.hasOwnProperty(p))continue;const argumentIndex=this.argumentNames.indexOf(p);if(argumentIndex===-1)throw new Error(`unable to find argument ${p}`);this.argumentTypes[argumentIndex]=argumentTypes[p]}}return this}setTactic(tactic){this.tactic=tactic;return this}requestFallback(args){if(!this.onRequestFallback){throw new Error(`"onRequestFallback" not defined on ${this.constructor.name}`)}this.fallbackRequested=true;return this.onRequestFallback(args)}validateSettings(){throw new Error(`"validateSettings" not defined on ${this.constructor.name}`)}addSubKernel(subKernel){if(this.subKernels===null){this.subKernels=[]}if(!subKernel.source)throw new Error(\'subKernel missing "source" property\');if(!subKernel.property&&isNaN(subKernel.property))throw new Error(\'subKernel missing "property" property\');if(!subKernel.name)throw new Error(\'subKernel missing "name" property\');this.subKernels.push(subKernel);return this}destroy(removeCanvasReferences){throw new Error(`"destroy" called on ${this.constructor.name}`)}getBitRatio(value2){if(this.precision==="single"){return 4}else if(Array.isArray(value2[0])){return this.getBitRatio(value2[0])}else if(value2.constructor===Input){return this.getBitRatio(value2.value)}switch(value2.constructor){case Uint8ClampedArray:case Uint8Array:case Int8Array:return 1;case Uint16Array:case Int16Array:return 2;case Float32Array:case Int32Array:default:return 4}}getPixels(flip){throw new Error(`"getPixels" called on ${this.constructor.name}`)}checkOutput(){if(!this.output||!utils.isArray(this.output))throw new Error("kernel.output not an array");if(this.output.length<1)throw new Error("kernel.output is empty, needs at least 1 value");for(let i=0;i<this.output.length;i++){if(isNaN(this.output[i])||this.output[i]<1){throw new Error(`${this.constructor.name}.output[${i}] incorrectly defined as \\`${this.output[i]}\\`, needs to be numeric, and greater than 0`)}}}prependString(value2){throw new Error(`"prependString" called on ${this.constructor.name}`)}hasPrependString(value2){throw new Error(`"hasPrependString" called on ${this.constructor.name}`)}toJSON(){return{settings:{output:this.output,pipeline:this.pipeline,argumentNames:this.argumentNames,argumentsTypes:this.argumentTypes,constants:this.constants,pluginNames:this.plugins?this.plugins.map(plugin=>plugin.name):null,returnType:this.returnType}}}buildSignature(args){const Constructor=this.constructor;this.signature=Constructor.getSignature(this,Constructor.getArgumentTypes(this,args))}static getArgumentTypes(kernel,args){const argumentTypes=new Array(args.length);for(let i=0;i<args.length;i++){const arg=args[i];const type=kernel.argumentTypes[i];if(arg.type){argumentTypes[i]=arg.type}else{switch(type){case"Number":case"Integer":case"Float":case"ArrayTexture(1)":argumentTypes[i]=utils.getVariableType(arg);break;default:argumentTypes[i]=type}}}return argumentTypes}static getSignature(kernel,argumentTypes){throw new Error(`"getSignature" not implemented on ${this.name}`)}functionToIGPUFunction(source,settings={}){if(typeof source!=="string"&&typeof source!=="function")throw new Error("source not a string or function");const sourceString=typeof source==="string"?source:source.toString();let argumentTypes=[];if(Array.isArray(settings.argumentTypes)){argumentTypes=settings.argumentTypes}else if(typeof settings.argumentTypes==="object"){argumentTypes=utils.getArgumentNamesFromString(sourceString).map(name2=>settings.argumentTypes[name2])||[]}else{argumentTypes=settings.argumentTypes||[]}return{name:utils.getFunctionNameFromString(sourceString)||null,source:sourceString,argumentTypes,returnType:settings.returnType||null}}onActivate(previousKernel){}}function splitArgumentTypes(argumentTypesObject){const argumentNames=Object.keys(argumentTypesObject);const argumentTypes=[];for(let i=0;i<argumentNames.length;i++){const argumentName=argumentNames[i];argumentTypes.push(argumentTypesObject[argumentName])}return{argumentTypes,argumentNames}}module3.exports={Kernel}},{"../input":110,"../utils":114}],37:[function(require2,module3,exports3){const fragmentShader=`__HEADER__;\n      __FLOAT_TACTIC_DECLARATION__;\n      __INT_TACTIC_DECLARATION__;\n      __SAMPLER_2D_TACTIC_DECLARATION__;\n      \n      const int LOOP_MAX = __LOOP_MAX__;\n      \n      __PLUGINS__;\n      __CONSTANTS__;\n      \n      varying vec2 vTexCoord;\n      \n      float acosh(float x) {\n        return log(x + sqrt(x * x - 1.0));\n      }\n      \n      float sinh(float x) {\n        return (pow(${Math.E}, x) - pow(${Math.E}, -x)) / 2.0;\n      }\n      \n      float asinh(float x) {\n        return log(x + sqrt(x * x + 1.0));\n      }\n      \n      float atan2(float v1, float v2) {\n        if (v1 == 0.0 || v2 == 0.0) return 0.0;\n        return atan(v1 / v2);\n      }\n      \n      float atanh(float x) {\n        x = (x + 1.0) / (x - 1.0);\n        if (x < 0.0) {\n          return 0.5 * log(-x);\n        }\n        return 0.5 * log(x);\n      }\n      \n      float cbrt(float x) {\n        if (x >= 0.0) {\n          return pow(x, 1.0 / 3.0);\n        } else {\n          return -pow(x, 1.0 / 3.0);\n        }\n      }\n      \n      float cosh(float x) {\n        return (pow(${Math.E}, x) + pow(${Math.E}, -x)) / 2.0; \n      }\n      \n      float expm1(float x) {\n        return pow(${Math.E}, x) - 1.0; \n      }\n      \n      float fround(highp float x) {\n        return x;\n      }\n      \n      float imul(float v1, float v2) {\n        return float(int(v1) * int(v2));\n      }\n      \n      float log10(float x) {\n        return log2(x) * (1.0 / log2(10.0));\n      }\n      \n      float log1p(float x) {\n        return log(1.0 + x);\n      }\n      \n      float _pow(float v1, float v2) {\n        if (v2 == 0.0) return 1.0;\n        return pow(v1, v2);\n      }\n      \n      float tanh(float x) {\n        float e = exp(2.0 * x);\n        return (e - 1.0) / (e + 1.0);\n      }\n      \n      float trunc(float x) {\n        if (x >= 0.0) {\n          return floor(x); \n        } else {\n          return ceil(x);\n        }\n      }\n      \n      vec4 _round(vec4 x) {\n        return floor(x + 0.5);\n      }\n      \n      float _round(float x) {\n        return floor(x + 0.5);\n      }\n      \n      const int BIT_COUNT = 32;\n      int modi(int x, int y) {\n        return x - y * (x / y);\n      }\n      \n      int bitwiseOr(int a, int b) {\n        int result = 0;\n        int n = 1;\n        \n        for (int i = 0; i < BIT_COUNT; i++) {\n          if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n            result += n;\n          }\n          a = a / 2;\n          b = b / 2;\n          n = n * 2;\n          if(!(a > 0 || b > 0)) {\n            break;\n          }\n        }\n        return result;\n      }\n      int bitwiseXOR(int a, int b) {\n        int result = 0;\n        int n = 1;\n        \n        for (int i = 0; i < BIT_COUNT; i++) {\n          if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n            result += n;\n          }\n          a = a / 2;\n          b = b / 2;\n          n = n * 2;\n          if(!(a > 0 || b > 0)) {\n            break;\n          }\n        }\n        return result;\n      }\n      int bitwiseAnd(int a, int b) {\n        int result = 0;\n        int n = 1;\n        for (int i = 0; i < BIT_COUNT; i++) {\n          if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n            result += n;\n          }\n          a = a / 2;\n          b = b / 2;\n          n = n * 2;\n          if(!(a > 0 && b > 0)) {\n            break;\n          }\n        }\n        return result;\n      }\n      int bitwiseNot(int a) {\n        int result = 0;\n        int n = 1;\n        \n        for (int i = 0; i < BIT_COUNT; i++) {\n          if (modi(a, 2) == 0) {\n            result += n;    \n          }\n          a = a / 2;\n          n = n * 2;\n        }\n        return result;\n      }\n      int bitwiseZeroFillLeftShift(int n, int shift) {\n        int maxBytes = BIT_COUNT;\n        for (int i = 0; i < BIT_COUNT; i++) {\n          if (maxBytes >= n) {\n            break;\n          }\n          maxBytes *= 2;\n        }\n        for (int i = 0; i < BIT_COUNT; i++) {\n          if (i >= shift) {\n            break;\n          }\n          n *= 2;\n        }\n      \n        int result = 0;\n        int byteVal = 1;\n        for (int i = 0; i < BIT_COUNT; i++) {\n          if (i >= maxBytes) break;\n          if (modi(n, 2) > 0) { result += byteVal; }\n          n = int(n / 2);\n          byteVal *= 2;\n        }\n        return result;\n      }\n      \n      int bitwiseSignedRightShift(int num, int shifts) {\n        return int(floor(float(num) / pow(2.0, float(shifts))));\n      }\n      \n      int bitwiseZeroFillRightShift(int n, int shift) {\n        int maxBytes = BIT_COUNT;\n        for (int i = 0; i < BIT_COUNT; i++) {\n          if (maxBytes >= n) {\n            break;\n          }\n          maxBytes *= 2;\n        }\n        for (int i = 0; i < BIT_COUNT; i++) {\n          if (i >= shift) {\n            break;\n          }\n          n /= 2;\n        }\n        int result = 0;\n        int byteVal = 1;\n        for (int i = 0; i < BIT_COUNT; i++) {\n          if (i >= maxBytes) break;\n          if (modi(n, 2) > 0) { result += byteVal; }\n          n = int(n / 2);\n          byteVal *= 2;\n        }\n        return result;\n      }\n      \n      vec2 integerMod(vec2 x, float y) {\n        vec2 res = floor(mod(x, y));\n        return res * step(1.0 - floor(y), -res);\n      }\n      \n      vec3 integerMod(vec3 x, float y) {\n        vec3 res = floor(mod(x, y));\n        return res * step(1.0 - floor(y), -res);\n      }\n      \n      vec4 integerMod(vec4 x, vec4 y) {\n        vec4 res = floor(mod(x, y));\n        return res * step(1.0 - floor(y), -res);\n      }\n      \n      float integerMod(float x, float y) {\n        float res = floor(mod(x, y));\n        return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n      }\n      \n      int integerMod(int x, int y) {\n        return x - (y * int(x / y));\n      }\n      \n      __DIVIDE_WITH_INTEGER_CHECK__;\n      \n      // Here be dragons!\n      // DO NOT OPTIMIZE THIS CODE\n      // YOU WILL BREAK SOMETHING ON SOMEBODY\'S MACHINE\n      // LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\n      const vec2 MAGIC_VEC = vec2(1.0, -256.0);\n      const vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\n      const vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\n      float decode32(vec4 texel) {\n        __DECODE32_ENDIANNESS__;\n        texel *= 255.0;\n        vec2 gte128;\n        gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n        gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n        float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n        float res = exp2(_round(exponent));\n        texel.b = texel.b - 128.0 * gte128.x;\n        res = dot(texel, SCALE_FACTOR) * exp2(_round(exponent-23.0)) + res;\n        res *= gte128.y * -2.0 + 1.0;\n        return res;\n      }\n      \n      float decode16(vec4 texel, int index) {\n        int channel = integerMod(index, 2);\n        if (channel == 0) return texel.r * 255.0 + texel.g * 65280.0;\n        if (channel == 1) return texel.b * 255.0 + texel.a * 65280.0;\n        return 0.0;\n      }\n      \n      float decode8(vec4 texel, int index) {\n        int channel = integerMod(index, 4);\n        if (channel == 0) return texel.r * 255.0;\n        if (channel == 1) return texel.g * 255.0;\n        if (channel == 2) return texel.b * 255.0;\n        if (channel == 3) return texel.a * 255.0;\n        return 0.0;\n      }\n      \n      vec4 legacyEncode32(float f) {\n        float F = abs(f);\n        float sign = f < 0.0 ? 1.0 : 0.0;\n        float exponent = floor(log2(F));\n        float mantissa = (exp2(-exponent) * F);\n        // exponent += floor(log2(mantissa));\n        vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n        texel.rg = integerMod(texel.rg, 256.0);\n        texel.b = integerMod(texel.b, 128.0);\n        texel.a = exponent*0.5 + 63.5;\n        texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n        texel = floor(texel);\n        texel *= 0.003921569; // 1/255\n        __ENCODE32_ENDIANNESS__;\n        return texel;\n      }\n      \n      // https://github.com/gpujs/gpu.js/wiki/Encoder-details\n      vec4 encode32(float value) {\n        if (value == 0.0) return vec4(0, 0, 0, 0);\n      \n        float exponent;\n        float mantissa;\n        vec4  result;\n        float sgn;\n      \n        sgn = step(0.0, -value);\n        value = abs(value);\n      \n        exponent = floor(log2(value));\n      \n        mantissa = value*pow(2.0, -exponent)-1.0;\n        exponent = exponent+127.0;\n        result   = vec4(0,0,0,0);\n      \n        result.a = floor(exponent/2.0);\n        exponent = exponent - result.a*2.0;\n        result.a = result.a + 128.0*sgn;\n      \n        result.b = floor(mantissa * 128.0);\n        mantissa = mantissa - result.b / 128.0;\n        result.b = result.b + exponent*128.0;\n      \n        result.g = floor(mantissa*32768.0);\n        mantissa = mantissa - result.g/32768.0;\n      \n        result.r = floor(mantissa*8388608.0);\n        return result/255.0;\n      }\n      // Dragons end here\n      \n      int index;\n      ivec3 threadId;\n      \n      ivec3 indexTo3D(int idx, ivec3 texDim) {\n        int z = int(idx / (texDim.x * texDim.y));\n        idx -= z * int(texDim.x * texDim.y);\n        int y = int(idx / texDim.x);\n        int x = int(integerMod(idx, texDim.x));\n        return ivec3(x, y, z);\n      }\n      \n      float get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        int index = x + texDim.x * (y + texDim.y * z);\n        int w = texSize.x;\n        vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n        vec4 texel = texture2D(tex, st / vec2(texSize));\n        return decode32(texel);\n      }\n      \n      float get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        int index = x + texDim.x * (y + texDim.y * z);\n        int w = texSize.x * 2;\n        vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n        vec4 texel = texture2D(tex, st / vec2(texSize.x * 2, texSize.y));\n        return decode16(texel, index);\n      }\n      \n      float get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        int index = x + texDim.x * (y + texDim.y * z);\n        int w = texSize.x * 4;\n        vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n        vec4 texel = texture2D(tex, st / vec2(texSize.x * 4, texSize.y));\n        return decode8(texel, index);\n      }\n      \n      float getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        int index = x + texDim.x * (y + texDim.y * z);\n        int channel = integerMod(index, 4);\n        index = index / 4;\n        int w = texSize.x;\n        vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n        vec4 texel = texture2D(tex, st / vec2(texSize));\n        if (channel == 0) return texel.r;\n        if (channel == 1) return texel.g;\n        if (channel == 2) return texel.b;\n        if (channel == 3) return texel.a;\n        return 0.0;\n      }\n      \n      vec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        int index = x + texDim.x * (y + texDim.y * z);\n        int w = texSize.x;\n        vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n        return texture2D(tex, st / vec2(texSize));\n      }\n      \n      float getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n        return result[0];\n      }\n      \n      vec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n        return vec2(result[0], result[1]);\n      }\n      \n      vec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        int index = x + (texDim.x * (y + (texDim.y * z)));\n        int channel = integerMod(index, 2);\n        index = index / 2;\n        int w = texSize.x;\n        vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n        vec4 texel = texture2D(tex, st / vec2(texSize));\n        if (channel == 0) return vec2(texel.r, texel.g);\n        if (channel == 1) return vec2(texel.b, texel.a);\n        return vec2(0.0, 0.0);\n      }\n      \n      vec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n        return vec3(result[0], result[1], result[2]);\n      }\n      \n      vec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n        int vectorIndex = fieldIndex / 4;\n        int vectorOffset = fieldIndex - vectorIndex * 4;\n        int readY = vectorIndex / texSize.x;\n        int readX = vectorIndex - readY * texSize.x;\n        vec4 tex1 = texture2D(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n        \n        if (vectorOffset == 0) {\n          return tex1.xyz;\n        } else if (vectorOffset == 1) {\n          return tex1.yzw;\n        } else {\n          readX++;\n          if (readX >= texSize.x) {\n            readX = 0;\n            readY++;\n          }\n          vec4 tex2 = texture2D(tex, vec2(readX, readY) / vec2(texSize));\n          if (vectorOffset == 2) {\n            return vec3(tex1.z, tex1.w, tex2.x);\n          } else {\n            return vec3(tex1.w, tex2.x, tex2.y);\n          }\n        }\n      }\n      \n      vec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        return getImage2D(tex, texSize, texDim, z, y, x);\n      }\n      \n      vec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        int index = x + texDim.x * (y + texDim.y * z);\n        int channel = integerMod(index, 2);\n        int w = texSize.x;\n        vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n        vec4 texel = texture2D(tex, st / vec2(texSize));\n        return vec4(texel.r, texel.g, texel.b, texel.a);\n      }\n      \n      vec4 actualColor;\n      void color(float r, float g, float b, float a) {\n        actualColor = vec4(r,g,b,a);\n      }\n      \n      void color(float r, float g, float b) {\n        color(r,g,b,1.0);\n      }\n      \n      void color(sampler2D image) {\n        actualColor = texture2D(image, vTexCoord);\n      }\n      \n      float modulo(float number, float divisor) {\n        if (number < 0.0) {\n          number = abs(number);\n          if (divisor < 0.0) {\n            divisor = abs(divisor);\n          }\n          return -mod(number, divisor);\n        }\n        if (divisor < 0.0) {\n          divisor = abs(divisor);\n        }\n        return mod(number, divisor);\n      }\n      \n      __INJECTED_NATIVE__;\n      __MAIN_CONSTANTS__;\n      __MAIN_ARGUMENTS__;\n      __KERNEL__;\n      \n      void main(void) {\n        index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n        __MAIN_RESULT__;\n      }`;module3.exports={fragmentShader}},{}],38:[function(require2,module3,exports3){const{utils}=require2("../../utils");const{FunctionNode}=require2("../function-node");class WebGLFunctionNode extends FunctionNode{constructor(source,settings){super(source,settings);if(settings&&settings.hasOwnProperty("fixIntegerDivisionAccuracy")){this.fixIntegerDivisionAccuracy=settings.fixIntegerDivisionAccuracy}}astConditionalExpression(ast,retArr){if(ast.type!=="ConditionalExpression"){throw this.astErrorOutput("Not a conditional expression",ast)}const consequentType=this.getType(ast.consequent);const alternateType=this.getType(ast.alternate);if(consequentType===null&&alternateType===null){retArr.push("if (");this.astGeneric(ast.test,retArr);retArr.push(") {");this.astGeneric(ast.consequent,retArr);retArr.push(";");retArr.push("} else {");this.astGeneric(ast.alternate,retArr);retArr.push(";");retArr.push("}");return retArr}retArr.push("(");this.astGeneric(ast.test,retArr);retArr.push("?");this.astGeneric(ast.consequent,retArr);retArr.push(":");this.astGeneric(ast.alternate,retArr);retArr.push(")");return retArr}astFunction(ast,retArr){if(this.isRootKernel){retArr.push("void")}else{if(!this.returnType){const lastReturn=this.findLastReturn();if(lastReturn){this.returnType=this.getType(ast.body);if(this.returnType==="LiteralInteger"){this.returnType="Number"}}}const{returnType}=this;if(!returnType){retArr.push("void")}else{const type=typeMap[returnType];if(!type){throw new Error(`unknown type ${returnType}`)}retArr.push(type)}}retArr.push(" ");retArr.push(this.name);retArr.push("(");if(!this.isRootKernel){for(let i=0;i<this.argumentNames.length;++i){const argumentName=this.argumentNames[i];if(i>0){retArr.push(", ")}let argumentType=this.argumentTypes[this.argumentNames.indexOf(argumentName)];if(!argumentType){throw this.astErrorOutput(`Unknown argument ${argumentName} type`,ast)}if(argumentType==="LiteralInteger"){this.argumentTypes[i]=argumentType="Number"}const type=typeMap[argumentType];if(!type){throw this.astErrorOutput("Unexpected expression",ast)}const name2=utils.sanitizeName(argumentName);if(type==="sampler2D"||type==="sampler2DArray"){retArr.push(`${type} user_${name2},ivec2 user_${name2}Size,ivec3 user_${name2}Dim`)}else{retArr.push(`${type} user_${name2}`)}}}retArr.push(") {\\n");for(let i=0;i<ast.body.body.length;++i){this.astGeneric(ast.body.body[i],retArr);retArr.push("\\n")}retArr.push("}\\n");return retArr}astReturnStatement(ast,retArr){if(!ast.argument)throw this.astErrorOutput("Unexpected return statement",ast);this.pushState("skip-literal-correction");const type=this.getType(ast.argument);this.popState("skip-literal-correction");const result=[];if(!this.returnType){if(type==="LiteralInteger"||type==="Integer"){this.returnType="Number"}else{this.returnType=type}}switch(this.returnType){case"LiteralInteger":case"Number":case"Float":switch(type){case"Integer":result.push("float(");this.astGeneric(ast.argument,result);result.push(")");break;case"LiteralInteger":this.castLiteralToFloat(ast.argument,result);if(this.getType(ast)==="Integer"){result.unshift("float(");result.push(")")}break;default:this.astGeneric(ast.argument,result)}break;case"Integer":switch(type){case"Float":case"Number":this.castValueToInteger(ast.argument,result);break;case"LiteralInteger":this.castLiteralToInteger(ast.argument,result);break;default:this.astGeneric(ast.argument,result)}break;case"Array(4)":case"Array(3)":case"Array(2)":case"Matrix(2)":case"Matrix(3)":case"Matrix(4)":case"Input":this.astGeneric(ast.argument,result);break;default:throw this.astErrorOutput(`unhandled return type ${this.returnType}`,ast)}if(this.isRootKernel){retArr.push(`kernelResult = ${result.join("")};`);retArr.push("return;")}else if(this.isSubKernel){retArr.push(`subKernelResult_${this.name} = ${result.join("")};`);retArr.push(`return subKernelResult_${this.name};`)}else{retArr.push(`return ${result.join("")};`)}return retArr}astLiteral(ast,retArr){if(isNaN(ast.value)){throw this.astErrorOutput("Non-numeric literal not supported : "+ast.value,ast)}const key=this.astKey(ast);if(Number.isInteger(ast.value)){if(this.isState("casting-to-integer")||this.isState("building-integer")){this.literalTypes[key]="Integer";retArr.push(`${ast.value}`)}else if(this.isState("casting-to-float")||this.isState("building-float")){this.literalTypes[key]="Number";retArr.push(`${ast.value}.0`)}else{this.literalTypes[key]="Number";retArr.push(`${ast.value}.0`)}}else if(this.isState("casting-to-integer")||this.isState("building-integer")){this.literalTypes[key]="Integer";retArr.push(Math.round(ast.value))}else{this.literalTypes[key]="Number";retArr.push(`${ast.value}`)}return retArr}astBinaryExpression(ast,retArr){if(this.checkAndUpconvertOperator(ast,retArr)){return retArr}if(this.fixIntegerDivisionAccuracy&&ast.operator==="/"){retArr.push("divWithIntCheck(");this.pushState("building-float");switch(this.getType(ast.left)){case"Integer":this.castValueToFloat(ast.left,retArr);break;case"LiteralInteger":this.castLiteralToFloat(ast.left,retArr);break;default:this.astGeneric(ast.left,retArr)}retArr.push(", ");switch(this.getType(ast.right)){case"Integer":this.castValueToFloat(ast.right,retArr);break;case"LiteralInteger":this.castLiteralToFloat(ast.right,retArr);break;default:this.astGeneric(ast.right,retArr)}this.popState("building-float");retArr.push(")");return retArr}retArr.push("(");const leftType=this.getType(ast.left)||"Number";const rightType=this.getType(ast.right)||"Number";if(!leftType||!rightType){throw this.astErrorOutput(`Unhandled binary expression`,ast)}const key=leftType+" & "+rightType;switch(key){case"Integer & Integer":this.pushState("building-integer");this.astGeneric(ast.left,retArr);retArr.push(operatorMap[ast.operator]||ast.operator);this.astGeneric(ast.right,retArr);this.popState("building-integer");break;case"Number & Float":case"Float & Number":case"Float & Float":case"Number & Number":this.pushState("building-float");this.astGeneric(ast.left,retArr);retArr.push(operatorMap[ast.operator]||ast.operator);this.astGeneric(ast.right,retArr);this.popState("building-float");break;case"LiteralInteger & LiteralInteger":if(this.isState("casting-to-integer")||this.isState("building-integer")){this.pushState("building-integer");this.astGeneric(ast.left,retArr);retArr.push(operatorMap[ast.operator]||ast.operator);this.astGeneric(ast.right,retArr);this.popState("building-integer")}else{this.pushState("building-float");this.castLiteralToFloat(ast.left,retArr);retArr.push(operatorMap[ast.operator]||ast.operator);this.castLiteralToFloat(ast.right,retArr);this.popState("building-float")}break;case"Integer & Float":case"Integer & Number":if(ast.operator===">"||ast.operator==="<"&&ast.right.type==="Literal"){if(!Number.isInteger(ast.right.value)){this.pushState("building-float");this.castValueToFloat(ast.left,retArr);retArr.push(operatorMap[ast.operator]||ast.operator);this.astGeneric(ast.right,retArr);this.popState("building-float");break}}this.pushState("building-integer");this.astGeneric(ast.left,retArr);retArr.push(operatorMap[ast.operator]||ast.operator);this.pushState("casting-to-integer");if(ast.right.type==="Literal"){const literalResult=[];this.astGeneric(ast.right,literalResult);const literalType=this.getType(ast.right);if(literalType==="Integer"){retArr.push(literalResult.join(""))}else{throw this.astErrorOutput(`Unhandled binary expression with literal`,ast)}}else{retArr.push("int(");this.astGeneric(ast.right,retArr);retArr.push(")")}this.popState("casting-to-integer");this.popState("building-integer");break;case"Integer & LiteralInteger":this.pushState("building-integer");this.astGeneric(ast.left,retArr);retArr.push(operatorMap[ast.operator]||ast.operator);this.castLiteralToInteger(ast.right,retArr);this.popState("building-integer");break;case"Number & Integer":this.pushState("building-float");this.astGeneric(ast.left,retArr);retArr.push(operatorMap[ast.operator]||ast.operator);this.castValueToFloat(ast.right,retArr);this.popState("building-float");break;case"Float & LiteralInteger":case"Number & LiteralInteger":this.pushState("building-float");this.astGeneric(ast.left,retArr);retArr.push(operatorMap[ast.operator]||ast.operator);this.castLiteralToFloat(ast.right,retArr);this.popState("building-float");break;case"LiteralInteger & Float":case"LiteralInteger & Number":if(this.isState("casting-to-integer")){this.pushState("building-integer");this.castLiteralToInteger(ast.left,retArr);retArr.push(operatorMap[ast.operator]||ast.operator);this.castValueToInteger(ast.right,retArr);this.popState("building-integer")}else{this.pushState("building-float");this.astGeneric(ast.left,retArr);retArr.push(operatorMap[ast.operator]||ast.operator);this.pushState("casting-to-float");this.astGeneric(ast.right,retArr);this.popState("casting-to-float");this.popState("building-float")}break;case"LiteralInteger & Integer":this.pushState("building-integer");this.castLiteralToInteger(ast.left,retArr);retArr.push(operatorMap[ast.operator]||ast.operator);this.astGeneric(ast.right,retArr);this.popState("building-integer");break;case"Boolean & Boolean":this.pushState("building-boolean");this.astGeneric(ast.left,retArr);retArr.push(operatorMap[ast.operator]||ast.operator);this.astGeneric(ast.right,retArr);this.popState("building-boolean");break;case"Float & Integer":this.pushState("building-float");this.astGeneric(ast.left,retArr);retArr.push(operatorMap[ast.operator]||ast.operator);this.castValueToFloat(ast.right,retArr);this.popState("building-float");break;default:throw this.astErrorOutput(`Unhandled binary expression between ${key}`,ast)}retArr.push(")");return retArr}checkAndUpconvertOperator(ast,retArr){const bitwiseResult=this.checkAndUpconvertBitwiseOperators(ast,retArr);if(bitwiseResult){return bitwiseResult}const upconvertableOperators={"%":this.fixIntegerDivisionAccuracy?"integerCorrectionModulo":"modulo","**":"pow"};const foundOperator=upconvertableOperators[ast.operator];if(!foundOperator)return null;retArr.push(foundOperator);retArr.push("(");switch(this.getType(ast.left)){case"Integer":this.castValueToFloat(ast.left,retArr);break;case"LiteralInteger":this.castLiteralToFloat(ast.left,retArr);break;default:this.astGeneric(ast.left,retArr)}retArr.push(",");switch(this.getType(ast.right)){case"Integer":this.castValueToFloat(ast.right,retArr);break;case"LiteralInteger":this.castLiteralToFloat(ast.right,retArr);break;default:this.astGeneric(ast.right,retArr)}retArr.push(")");return retArr}checkAndUpconvertBitwiseOperators(ast,retArr){const upconvertableOperators={"&":"bitwiseAnd","|":"bitwiseOr","^":"bitwiseXOR","<<":"bitwiseZeroFillLeftShift",">>":"bitwiseSignedRightShift",">>>":"bitwiseZeroFillRightShift"};const foundOperator=upconvertableOperators[ast.operator];if(!foundOperator)return null;retArr.push(foundOperator);retArr.push("(");const leftType=this.getType(ast.left);switch(leftType){case"Number":case"Float":this.castValueToInteger(ast.left,retArr);break;case"LiteralInteger":this.castLiteralToInteger(ast.left,retArr);break;default:this.astGeneric(ast.left,retArr)}retArr.push(",");const rightType=this.getType(ast.right);switch(rightType){case"Number":case"Float":this.castValueToInteger(ast.right,retArr);break;case"LiteralInteger":this.castLiteralToInteger(ast.right,retArr);break;default:this.astGeneric(ast.right,retArr)}retArr.push(")");return retArr}checkAndUpconvertBitwiseUnary(ast,retArr){const upconvertableOperators={"~":"bitwiseNot"};const foundOperator=upconvertableOperators[ast.operator];if(!foundOperator)return null;retArr.push(foundOperator);retArr.push("(");switch(this.getType(ast.argument)){case"Number":case"Float":this.castValueToInteger(ast.argument,retArr);break;case"LiteralInteger":this.castLiteralToInteger(ast.argument,retArr);break;default:this.astGeneric(ast.argument,retArr)}retArr.push(")");return retArr}castLiteralToInteger(ast,retArr){this.pushState("casting-to-integer");this.astGeneric(ast,retArr);this.popState("casting-to-integer");return retArr}castLiteralToFloat(ast,retArr){this.pushState("casting-to-float");this.astGeneric(ast,retArr);this.popState("casting-to-float");return retArr}castValueToInteger(ast,retArr){this.pushState("casting-to-integer");retArr.push("int(");this.astGeneric(ast,retArr);retArr.push(")");this.popState("casting-to-integer");return retArr}castValueToFloat(ast,retArr){this.pushState("casting-to-float");retArr.push("float(");this.astGeneric(ast,retArr);retArr.push(")");this.popState("casting-to-float");return retArr}astIdentifierExpression(idtNode,retArr){if(idtNode.type!=="Identifier"){throw this.astErrorOutput("IdentifierExpression - not an Identifier",idtNode)}const type=this.getType(idtNode);const name2=utils.sanitizeName(idtNode.name);if(idtNode.name==="Infinity"){retArr.push("3.402823466e+38")}else if(type==="Boolean"){if(this.argumentNames.indexOf(name2)>-1){retArr.push(`bool(user_${name2})`)}else{retArr.push(`user_${name2}`)}}else{retArr.push(`user_${name2}`)}return retArr}astForStatement(forNode,retArr){if(forNode.type!=="ForStatement"){throw this.astErrorOutput("Invalid for statement",forNode)}const initArr=[];const testArr=[];const updateArr=[];const bodyArr=[];let isSafe=null;if(forNode.init){const{declarations}=forNode.init;if(declarations.length>1){isSafe=false}this.astGeneric(forNode.init,initArr);for(let i=0;i<declarations.length;i++){if(declarations[i].init&&declarations[i].init.type!=="Literal"){isSafe=false}}}else{isSafe=false}if(forNode.test){this.astGeneric(forNode.test,testArr)}else{isSafe=false}if(forNode.update){this.astGeneric(forNode.update,updateArr)}else{isSafe=false}if(forNode.body){this.pushState("loop-body");this.astGeneric(forNode.body,bodyArr);this.popState("loop-body")}if(isSafe===null){isSafe=this.isSafe(forNode.init)&&this.isSafe(forNode.test)}if(isSafe){const initString=initArr.join("");const initNeedsSemiColon=initString[initString.length-1]!==";";retArr.push(`for (${initString}${initNeedsSemiColon?";":""}${testArr.join("")};${updateArr.join("")}){\n`);retArr.push(bodyArr.join(""));retArr.push("}\\n")}else{const iVariableName=this.getInternalVariableName("safeI");if(initArr.length>0){retArr.push(initArr.join(""),"\\n")}retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\n`);if(testArr.length>0){retArr.push(`if (!${testArr.join("")}) break;\n`)}retArr.push(bodyArr.join(""));retArr.push(`\n${updateArr.join("")};`);retArr.push("}\\n")}return retArr}astWhileStatement(whileNode,retArr){if(whileNode.type!=="WhileStatement"){throw this.astErrorOutput("Invalid while statement",whileNode)}const iVariableName=this.getInternalVariableName("safeI");retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\n`);retArr.push("if (!");this.astGeneric(whileNode.test,retArr);retArr.push(") break;\\n");this.astGeneric(whileNode.body,retArr);retArr.push("}\\n");return retArr}astDoWhileStatement(doWhileNode,retArr){if(doWhileNode.type!=="DoWhileStatement"){throw this.astErrorOutput("Invalid while statement",doWhileNode)}const iVariableName=this.getInternalVariableName("safeI");retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\n`);this.astGeneric(doWhileNode.body,retArr);retArr.push("if (!");this.astGeneric(doWhileNode.test,retArr);retArr.push(") break;\\n");retArr.push("}\\n");return retArr}astAssignmentExpression(assNode,retArr){if(assNode.operator==="%="){this.astGeneric(assNode.left,retArr);retArr.push("=");retArr.push("mod(");this.astGeneric(assNode.left,retArr);retArr.push(",");this.astGeneric(assNode.right,retArr);retArr.push(")")}else if(assNode.operator==="**="){this.astGeneric(assNode.left,retArr);retArr.push("=");retArr.push("pow(");this.astGeneric(assNode.left,retArr);retArr.push(",");this.astGeneric(assNode.right,retArr);retArr.push(")")}else{const leftType=this.getType(assNode.left);const rightType=this.getType(assNode.right);this.astGeneric(assNode.left,retArr);retArr.push(assNode.operator);if(leftType!=="Integer"&&rightType==="Integer"){retArr.push("float(");this.astGeneric(assNode.right,retArr);retArr.push(")")}else{this.astGeneric(assNode.right,retArr)}return retArr}}astBlockStatement(bNode,retArr){if(this.isState("loop-body")){this.pushState("block-body");for(let i=0;i<bNode.body.length;i++){this.astGeneric(bNode.body[i],retArr)}this.popState("block-body")}else{retArr.push("{\\n");for(let i=0;i<bNode.body.length;i++){this.astGeneric(bNode.body[i],retArr)}retArr.push("}\\n")}return retArr}astVariableDeclaration(varDecNode,retArr){const declarations=varDecNode.declarations;if(!declarations||!declarations[0]||!declarations[0].init){throw this.astErrorOutput("Unexpected expression",varDecNode)}const result=[];let lastType=null;const declarationSets=[];let declarationSet=[];for(let i=0;i<declarations.length;i++){const declaration=declarations[i];const init=declaration.init;const info=this.getDeclaration(declaration.id);const actualType=this.getType(declaration.init);let type=actualType;if(type==="LiteralInteger"){if(info.suggestedType==="Integer"){type="Integer"}else{type="Number"}}const markupType=typeMap[type];if(!markupType){throw this.astErrorOutput(`Markup type ${type} not handled`,varDecNode)}const declarationResult=[];if(actualType==="Integer"&&type==="Integer"){info.valueType="Number";if(i===0||lastType===null){declarationResult.push("float ")}else if(type!==lastType){throw new Error("Unhandled declaration")}lastType=type;declarationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);declarationResult.push("float(");this.astGeneric(init,declarationResult);declarationResult.push(")")}else{info.valueType=type;if(i===0||lastType===null){declarationResult.push(`${markupType} `)}else if(type!==lastType){declarationSets.push(declarationSet.join(","));declarationSet=[];declarationResult.push(`${markupType} `)}lastType=type;declarationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);if(actualType==="Number"&&type==="Integer"){if(init.left&&init.left.type==="Literal"){this.astGeneric(init,declarationResult)}else{declarationResult.push("int(");this.astGeneric(init,declarationResult);declarationResult.push(")")}}else if(actualType==="LiteralInteger"&&type==="Integer"){this.castLiteralToInteger(init,declarationResult)}else{this.astGeneric(init,declarationResult)}}declarationSet.push(declarationResult.join(""))}if(declarationSet.length>0){declarationSets.push(declarationSet.join(","))}result.push(declarationSets.join(";"));retArr.push(result.join(""));retArr.push(";");return retArr}astIfStatement(ifNode,retArr){retArr.push("if (");this.astGeneric(ifNode.test,retArr);retArr.push(")");if(ifNode.consequent.type==="BlockStatement"){this.astGeneric(ifNode.consequent,retArr)}else{retArr.push(" {\\n");this.astGeneric(ifNode.consequent,retArr);retArr.push("\\n}\\n")}if(ifNode.alternate){retArr.push("else ");if(ifNode.alternate.type==="BlockStatement"||ifNode.alternate.type==="IfStatement"){this.astGeneric(ifNode.alternate,retArr)}else{retArr.push(" {\\n");this.astGeneric(ifNode.alternate,retArr);retArr.push("\\n}\\n")}}return retArr}astSwitchStatement(ast,retArr){if(ast.type!=="SwitchStatement"){throw this.astErrorOutput("Invalid switch statement",ast)}const{discriminant,cases}=ast;const type=this.getType(discriminant);const varName=`switchDiscriminant${this.astKey(ast,"_")}`;switch(type){case"Float":case"Number":retArr.push(`float ${varName} = `);this.astGeneric(discriminant,retArr);retArr.push(";\\n");break;case"Integer":retArr.push(`int ${varName} = `);this.astGeneric(discriminant,retArr);retArr.push(";\\n");break}if(cases.length===1&&!cases[0].test){this.astGeneric(cases[0].consequent,retArr);return retArr}let fallingThrough=false;let defaultResult=[];let movingDefaultToEnd=false;let pastFirstIf=false;for(let i=0;i<cases.length;i++){if(!cases[i].test){if(cases.length>i+1){movingDefaultToEnd=true;this.astGeneric(cases[i].consequent,defaultResult);continue}else{retArr.push(" else {\\n")}}else{if(i===0||!pastFirstIf){pastFirstIf=true;retArr.push(`if (${varName} == `)}else{if(fallingThrough){retArr.push(`${varName} == `);fallingThrough=false}else{retArr.push(` else if (${varName} == `)}}if(type==="Integer"){const testType=this.getType(cases[i].test);switch(testType){case"Number":case"Float":this.castValueToInteger(cases[i].test,retArr);break;case"LiteralInteger":this.castLiteralToInteger(cases[i].test,retArr);break}}else if(type==="Float"){const testType=this.getType(cases[i].test);switch(testType){case"LiteralInteger":this.castLiteralToFloat(cases[i].test,retArr);break;case"Integer":this.castValueToFloat(cases[i].test,retArr);break}}else{throw new Error("unhanlded")}if(!cases[i].consequent||cases[i].consequent.length===0){fallingThrough=true;retArr.push(" || ");continue}retArr.push(`) {\n`)}this.astGeneric(cases[i].consequent,retArr);retArr.push("\\n}")}if(movingDefaultToEnd){retArr.push(" else {");retArr.push(defaultResult.join(""));retArr.push("}")}return retArr}astThisExpression(tNode,retArr){retArr.push("this");return retArr}astMemberExpression(mNode,retArr){const{property,name:name2,signature,origin,type,xProperty,yProperty,zProperty}=this.getMemberExpressionDetails(mNode);switch(signature){case"value.thread.value":case"this.thread.value":if(name2!=="x"&&name2!=="y"&&name2!=="z"){throw this.astErrorOutput("Unexpected expression, expected `this.thread.x`, `this.thread.y`, or `this.thread.z`",mNode)}retArr.push(`threadId.${name2}`);return retArr;case"this.output.value":if(this.dynamicOutput){switch(name2){case"x":if(this.isState("casting-to-float")){retArr.push("float(uOutputDim.x)")}else{retArr.push("uOutputDim.x")}break;case"y":if(this.isState("casting-to-float")){retArr.push("float(uOutputDim.y)")}else{retArr.push("uOutputDim.y")}break;case"z":if(this.isState("casting-to-float")){retArr.push("float(uOutputDim.z)")}else{retArr.push("uOutputDim.z")}break;default:throw this.astErrorOutput("Unexpected expression",mNode)}}else{switch(name2){case"x":if(this.isState("casting-to-integer")){retArr.push(this.output[0])}else{retArr.push(this.output[0],".0")}break;case"y":if(this.isState("casting-to-integer")){retArr.push(this.output[1])}else{retArr.push(this.output[1],".0")}break;case"z":if(this.isState("casting-to-integer")){retArr.push(this.output[2])}else{retArr.push(this.output[2],".0")}break;default:throw this.astErrorOutput("Unexpected expression",mNode)}}return retArr;case"value":throw this.astErrorOutput("Unexpected expression",mNode);case"value[]":case"value[][]":case"value[][][]":case"value[][][][]":case"value.value":if(origin==="Math"){retArr.push(Math[name2]);return retArr}const cleanName=utils.sanitizeName(name2);switch(property){case"r":retArr.push(`user_${cleanName}.r`);return retArr;case"g":retArr.push(`user_${cleanName}.g`);return retArr;case"b":retArr.push(`user_${cleanName}.b`);return retArr;case"a":retArr.push(`user_${cleanName}.a`);return retArr}break;case"this.constants.value":if(typeof xProperty==="undefined"){switch(type){case"Array(2)":case"Array(3)":case"Array(4)":retArr.push(`constants_${utils.sanitizeName(name2)}`);return retArr}}case"this.constants.value[]":case"this.constants.value[][]":case"this.constants.value[][][]":case"this.constants.value[][][][]":break;case"fn()[]":this.astCallExpression(mNode.object,retArr);retArr.push("[");retArr.push(this.memberExpressionPropertyMarkup(property));retArr.push("]");return retArr;case"fn()[][]":this.astCallExpression(mNode.object.object,retArr);retArr.push("[");retArr.push(this.memberExpressionPropertyMarkup(mNode.object.property));retArr.push("]");retArr.push("[");retArr.push(this.memberExpressionPropertyMarkup(mNode.property));retArr.push("]");return retArr;case"[][]":this.astArrayExpression(mNode.object,retArr);retArr.push("[");retArr.push(this.memberExpressionPropertyMarkup(property));retArr.push("]");return retArr;default:throw this.astErrorOutput("Unexpected expression",mNode)}if(mNode.computed===false){switch(type){case"Number":case"Integer":case"Float":case"Boolean":retArr.push(`${origin}_${utils.sanitizeName(name2)}`);return retArr}}const markupName=`${origin}_${utils.sanitizeName(name2)}`;switch(type){case"Array(2)":case"Array(3)":case"Array(4)":this.astGeneric(mNode.object,retArr);retArr.push("[");retArr.push(this.memberExpressionPropertyMarkup(xProperty));retArr.push("]");break;case"HTMLImageArray":retArr.push(`getImage3D(${markupName}, ${markupName}Size, ${markupName}Dim, `);this.memberExpressionXYZ(xProperty,yProperty,zProperty,retArr);retArr.push(")");break;case"ArrayTexture(1)":retArr.push(`getFloatFromSampler2D(${markupName}, ${markupName}Size, ${markupName}Dim, `);this.memberExpressionXYZ(xProperty,yProperty,zProperty,retArr);retArr.push(")");break;case"Array1D(2)":case"Array2D(2)":case"Array3D(2)":retArr.push(`getMemoryOptimizedVec2(${markupName}, ${markupName}Size, ${markupName}Dim, `);this.memberExpressionXYZ(xProperty,yProperty,zProperty,retArr);retArr.push(")");break;case"ArrayTexture(2)":retArr.push(`getVec2FromSampler2D(${markupName}, ${markupName}Size, ${markupName}Dim, `);this.memberExpressionXYZ(xProperty,yProperty,zProperty,retArr);retArr.push(")");break;case"Array1D(3)":case"Array2D(3)":case"Array3D(3)":retArr.push(`getMemoryOptimizedVec3(${markupName}, ${markupName}Size, ${markupName}Dim, `);this.memberExpressionXYZ(xProperty,yProperty,zProperty,retArr);retArr.push(")");break;case"ArrayTexture(3)":retArr.push(`getVec3FromSampler2D(${markupName}, ${markupName}Size, ${markupName}Dim, `);this.memberExpressionXYZ(xProperty,yProperty,zProperty,retArr);retArr.push(")");break;case"Array1D(4)":case"Array2D(4)":case"Array3D(4)":retArr.push(`getMemoryOptimizedVec4(${markupName}, ${markupName}Size, ${markupName}Dim, `);this.memberExpressionXYZ(xProperty,yProperty,zProperty,retArr);retArr.push(")");break;case"ArrayTexture(4)":case"HTMLCanvas":case"HTMLImage":case"HTMLVideo":retArr.push(`getVec4FromSampler2D(${markupName}, ${markupName}Size, ${markupName}Dim, `);this.memberExpressionXYZ(xProperty,yProperty,zProperty,retArr);retArr.push(")");break;case"NumberTexture":case"Array":case"Array2D":case"Array3D":case"Array4D":case"Input":case"Number":case"Float":case"Integer":if(this.precision==="single"){retArr.push(`getMemoryOptimized32(${markupName}, ${markupName}Size, ${markupName}Dim, `);this.memberExpressionXYZ(xProperty,yProperty,zProperty,retArr);retArr.push(")")}else{const bitRatio=origin==="user"?this.lookupFunctionArgumentBitRatio(this.name,name2):this.constantBitRatios[name2];switch(bitRatio){case 1:retArr.push(`get8(${markupName}, ${markupName}Size, ${markupName}Dim, `);break;case 2:retArr.push(`get16(${markupName}, ${markupName}Size, ${markupName}Dim, `);break;case 4:case 0:retArr.push(`get32(${markupName}, ${markupName}Size, ${markupName}Dim, `);break;default:throw new Error(`unhandled bit ratio of ${bitRatio}`)}this.memberExpressionXYZ(xProperty,yProperty,zProperty,retArr);retArr.push(")")}break;case"MemoryOptimizedNumberTexture":retArr.push(`getMemoryOptimized32(${markupName}, ${markupName}Size, ${markupName}Dim, `);this.memberExpressionXYZ(xProperty,yProperty,zProperty,retArr);retArr.push(")");break;case"Matrix(2)":case"Matrix(3)":case"Matrix(4)":retArr.push(`${markupName}[${this.memberExpressionPropertyMarkup(yProperty)}]`);if(yProperty){retArr.push(`[${this.memberExpressionPropertyMarkup(xProperty)}]`)}break;default:throw new Error(`unhandled member expression "${type}"`)}return retArr}astCallExpression(ast,retArr){if(!ast.callee){throw this.astErrorOutput("Unknown CallExpression",ast)}let functionName=null;const isMathFunction=this.isAstMathFunction(ast);if(isMathFunction||ast.callee.object&&ast.callee.object.type==="ThisExpression"){functionName=ast.callee.property.name}else if(ast.callee.type==="SequenceExpression"&&ast.callee.expressions[0].type==="Literal"&&!isNaN(ast.callee.expressions[0].raw)){functionName=ast.callee.expressions[1].property.name}else{functionName=ast.callee.name}if(!functionName){throw this.astErrorOutput(`Unhandled function, couldn\'t find name`,ast)}switch(functionName){case"pow":functionName="_pow";break;case"round":functionName="_round";break}if(this.calledFunctions.indexOf(functionName)<0){this.calledFunctions.push(functionName)}if(functionName==="random"&&this.plugins&&this.plugins.length>0){for(let i=0;i<this.plugins.length;i++){const plugin=this.plugins[i];if(plugin.functionMatch==="Math.random()"&&plugin.functionReplace){retArr.push(plugin.functionReplace);return retArr}}}if(this.onFunctionCall){this.onFunctionCall(this.name,functionName,ast.arguments)}retArr.push(functionName);retArr.push("(");if(isMathFunction){for(let i=0;i<ast.arguments.length;++i){const argument=ast.arguments[i];const argumentType=this.getType(argument);if(i>0){retArr.push(", ")}switch(argumentType){case"Integer":this.castValueToFloat(argument,retArr);break;default:this.astGeneric(argument,retArr);break}}}else{const targetTypes=this.lookupFunctionArgumentTypes(functionName)||[];for(let i=0;i<ast.arguments.length;++i){const argument=ast.arguments[i];let targetType=targetTypes[i];if(i>0){retArr.push(", ")}const argumentType=this.getType(argument);if(!targetType){this.triggerImplyArgumentType(functionName,i,argumentType,this);targetType=argumentType}switch(argumentType){case"Boolean":this.astGeneric(argument,retArr);continue;case"Number":case"Float":if(targetType==="Integer"){retArr.push("int(");this.astGeneric(argument,retArr);retArr.push(")");continue}else if(targetType==="Number"||targetType==="Float"){this.astGeneric(argument,retArr);continue}else if(targetType==="LiteralInteger"){this.castLiteralToFloat(argument,retArr);continue}break;case"Integer":if(targetType==="Number"||targetType==="Float"){retArr.push("float(");this.astGeneric(argument,retArr);retArr.push(")");continue}else if(targetType==="Integer"){this.astGeneric(argument,retArr);continue}break;case"LiteralInteger":if(targetType==="Integer"){this.castLiteralToInteger(argument,retArr);continue}else if(targetType==="Number"||targetType==="Float"){this.castLiteralToFloat(argument,retArr);continue}else if(targetType==="LiteralInteger"){this.astGeneric(argument,retArr);continue}break;case"Array(2)":case"Array(3)":case"Array(4)":if(targetType===argumentType){if(argument.type==="Identifier"){retArr.push(`user_${utils.sanitizeName(argument.name)}`)}else if(argument.type==="ArrayExpression"||argument.type==="MemberExpression"||argument.type==="CallExpression"){this.astGeneric(argument,retArr)}else{throw this.astErrorOutput(`Unhandled argument type ${argument.type}`,ast)}continue}break;case"HTMLCanvas":case"HTMLImage":case"HTMLImageArray":case"HTMLVideo":case"ArrayTexture(1)":case"ArrayTexture(2)":case"ArrayTexture(3)":case"ArrayTexture(4)":case"Array":case"Input":if(targetType===argumentType){if(argument.type!=="Identifier")throw this.astErrorOutput(`Unhandled argument type ${argument.type}`,ast);this.triggerImplyArgumentBitRatio(this.name,argument.name,functionName,i);const name2=utils.sanitizeName(argument.name);retArr.push(`user_${name2},user_${name2}Size,user_${name2}Dim`);continue}break}throw this.astErrorOutput(`Unhandled argument combination of ${argumentType} and ${targetType} for argument named "${argument.name}"`,ast)}}retArr.push(")");return retArr}astArrayExpression(arrNode,retArr){const returnType=this.getType(arrNode);const arrLen=arrNode.elements.length;switch(returnType){case"Matrix(2)":case"Matrix(3)":case"Matrix(4)":retArr.push(`mat${arrLen}(`);break;default:retArr.push(`vec${arrLen}(`)}for(let i=0;i<arrLen;++i){if(i>0){retArr.push(", ")}const subNode=arrNode.elements[i];this.astGeneric(subNode,retArr)}retArr.push(")");return retArr}memberExpressionXYZ(x22,y5,z3,retArr){if(z3){retArr.push(this.memberExpressionPropertyMarkup(z3),", ")}else{retArr.push("0, ")}if(y5){retArr.push(this.memberExpressionPropertyMarkup(y5),", ")}else{retArr.push("0, ")}retArr.push(this.memberExpressionPropertyMarkup(x22));return retArr}memberExpressionPropertyMarkup(property){if(!property){throw new Error("Property not set")}const type=this.getType(property);const result=[];switch(type){case"Number":case"Float":this.castValueToInteger(property,result);break;case"LiteralInteger":this.castLiteralToInteger(property,result);break;default:this.astGeneric(property,result)}return result.join("")}}const typeMap={"Array":"sampler2D","Array(2)":"vec2","Array(3)":"vec3","Array(4)":"vec4","Matrix(2)":"mat2","Matrix(3)":"mat3","Matrix(4)":"mat4","Array2D":"sampler2D","Array3D":"sampler2D","Boolean":"bool","Float":"float","Input":"sampler2D","Integer":"int","Number":"float","LiteralInteger":"float","NumberTexture":"sampler2D","MemoryOptimizedNumberTexture":"sampler2D","ArrayTexture(1)":"sampler2D","ArrayTexture(2)":"sampler2D","ArrayTexture(3)":"sampler2D","ArrayTexture(4)":"sampler2D","HTMLVideo":"sampler2D","HTMLCanvas":"sampler2D","HTMLImage":"sampler2D","HTMLImageArray":"sampler2DArray"};const operatorMap={"===":"==","!==":"!="};module3.exports={WebGLFunctionNode}},{"../../utils":114,"../function-node":10}],39:[function(require2,module3,exports3){const{WebGLKernelValueBoolean}=require2("./kernel-value/boolean");const{WebGLKernelValueFloat}=require2("./kernel-value/float");const{WebGLKernelValueInteger}=require2("./kernel-value/integer");const{WebGLKernelValueHTMLImage}=require2("./kernel-value/html-image");const{WebGLKernelValueDynamicHTMLImage}=require2("./kernel-value/dynamic-html-image");const{WebGLKernelValueHTMLVideo}=require2("./kernel-value/html-video");const{WebGLKernelValueDynamicHTMLVideo}=require2("./kernel-value/dynamic-html-video");const{WebGLKernelValueSingleInput}=require2("./kernel-value/single-input");const{WebGLKernelValueDynamicSingleInput}=require2("./kernel-value/dynamic-single-input");const{WebGLKernelValueUnsignedInput}=require2("./kernel-value/unsigned-input");const{WebGLKernelValueDynamicUnsignedInput}=require2("./kernel-value/dynamic-unsigned-input");const{WebGLKernelValueMemoryOptimizedNumberTexture}=require2("./kernel-value/memory-optimized-number-texture");const{WebGLKernelValueDynamicMemoryOptimizedNumberTexture}=require2("./kernel-value/dynamic-memory-optimized-number-texture");const{WebGLKernelValueNumberTexture}=require2("./kernel-value/number-texture");const{WebGLKernelValueDynamicNumberTexture}=require2("./kernel-value/dynamic-number-texture");const{WebGLKernelValueSingleArray}=require2("./kernel-value/single-array");const{WebGLKernelValueDynamicSingleArray}=require2("./kernel-value/dynamic-single-array");const{WebGLKernelValueSingleArray1DI}=require2("./kernel-value/single-array1d-i");const{WebGLKernelValueDynamicSingleArray1DI}=require2("./kernel-value/dynamic-single-array1d-i");const{WebGLKernelValueSingleArray2DI}=require2("./kernel-value/single-array2d-i");const{WebGLKernelValueDynamicSingleArray2DI}=require2("./kernel-value/dynamic-single-array2d-i");const{WebGLKernelValueSingleArray3DI}=require2("./kernel-value/single-array3d-i");const{WebGLKernelValueDynamicSingleArray3DI}=require2("./kernel-value/dynamic-single-array3d-i");const{WebGLKernelValueSingleArray2}=require2("./kernel-value/single-array2");const{WebGLKernelValueSingleArray3}=require2("./kernel-value/single-array3");const{WebGLKernelValueSingleArray4}=require2("./kernel-value/single-array4");const{WebGLKernelValueUnsignedArray}=require2("./kernel-value/unsigned-array");const{WebGLKernelValueDynamicUnsignedArray}=require2("./kernel-value/dynamic-unsigned-array");const kernelValueMaps={unsigned:{dynamic:{"Boolean":WebGLKernelValueBoolean,"Integer":WebGLKernelValueInteger,"Float":WebGLKernelValueFloat,"Array":WebGLKernelValueDynamicUnsignedArray,"Array(2)":false,"Array(3)":false,"Array(4)":false,"Array1D(2)":false,"Array1D(3)":false,"Array1D(4)":false,"Array2D(2)":false,"Array2D(3)":false,"Array2D(4)":false,"Array3D(2)":false,"Array3D(3)":false,"Array3D(4)":false,"Input":WebGLKernelValueDynamicUnsignedInput,"NumberTexture":WebGLKernelValueDynamicNumberTexture,"ArrayTexture(1)":WebGLKernelValueDynamicNumberTexture,"ArrayTexture(2)":WebGLKernelValueDynamicNumberTexture,"ArrayTexture(3)":WebGLKernelValueDynamicNumberTexture,"ArrayTexture(4)":WebGLKernelValueDynamicNumberTexture,"MemoryOptimizedNumberTexture":WebGLKernelValueDynamicMemoryOptimizedNumberTexture,"HTMLCanvas":WebGLKernelValueDynamicHTMLImage,"HTMLImage":WebGLKernelValueDynamicHTMLImage,"HTMLImageArray":false,"HTMLVideo":WebGLKernelValueDynamicHTMLVideo},static:{"Boolean":WebGLKernelValueBoolean,"Float":WebGLKernelValueFloat,"Integer":WebGLKernelValueInteger,"Array":WebGLKernelValueUnsignedArray,"Array(2)":false,"Array(3)":false,"Array(4)":false,"Array1D(2)":false,"Array1D(3)":false,"Array1D(4)":false,"Array2D(2)":false,"Array2D(3)":false,"Array2D(4)":false,"Array3D(2)":false,"Array3D(3)":false,"Array3D(4)":false,"Input":WebGLKernelValueUnsignedInput,"NumberTexture":WebGLKernelValueNumberTexture,"ArrayTexture(1)":WebGLKernelValueNumberTexture,"ArrayTexture(2)":WebGLKernelValueNumberTexture,"ArrayTexture(3)":WebGLKernelValueNumberTexture,"ArrayTexture(4)":WebGLKernelValueNumberTexture,"MemoryOptimizedNumberTexture":WebGLKernelValueMemoryOptimizedNumberTexture,"HTMLCanvas":WebGLKernelValueHTMLImage,"HTMLImage":WebGLKernelValueHTMLImage,"HTMLImageArray":false,"HTMLVideo":WebGLKernelValueHTMLVideo}},single:{dynamic:{"Boolean":WebGLKernelValueBoolean,"Integer":WebGLKernelValueInteger,"Float":WebGLKernelValueFloat,"Array":WebGLKernelValueDynamicSingleArray,"Array(2)":WebGLKernelValueSingleArray2,"Array(3)":WebGLKernelValueSingleArray3,"Array(4)":WebGLKernelValueSingleArray4,"Array1D(2)":WebGLKernelValueDynamicSingleArray1DI,"Array1D(3)":WebGLKernelValueDynamicSingleArray1DI,"Array1D(4)":WebGLKernelValueDynamicSingleArray1DI,"Array2D(2)":WebGLKernelValueDynamicSingleArray2DI,"Array2D(3)":WebGLKernelValueDynamicSingleArray2DI,"Array2D(4)":WebGLKernelValueDynamicSingleArray2DI,"Array3D(2)":WebGLKernelValueDynamicSingleArray3DI,"Array3D(3)":WebGLKernelValueDynamicSingleArray3DI,"Array3D(4)":WebGLKernelValueDynamicSingleArray3DI,"Input":WebGLKernelValueDynamicSingleInput,"NumberTexture":WebGLKernelValueDynamicNumberTexture,"ArrayTexture(1)":WebGLKernelValueDynamicNumberTexture,"ArrayTexture(2)":WebGLKernelValueDynamicNumberTexture,"ArrayTexture(3)":WebGLKernelValueDynamicNumberTexture,"ArrayTexture(4)":WebGLKernelValueDynamicNumberTexture,"MemoryOptimizedNumberTexture":WebGLKernelValueDynamicMemoryOptimizedNumberTexture,"HTMLCanvas":WebGLKernelValueDynamicHTMLImage,"HTMLImage":WebGLKernelValueDynamicHTMLImage,"HTMLImageArray":false,"HTMLVideo":WebGLKernelValueDynamicHTMLVideo},static:{"Boolean":WebGLKernelValueBoolean,"Float":WebGLKernelValueFloat,"Integer":WebGLKernelValueInteger,"Array":WebGLKernelValueSingleArray,"Array(2)":WebGLKernelValueSingleArray2,"Array(3)":WebGLKernelValueSingleArray3,"Array(4)":WebGLKernelValueSingleArray4,"Array1D(2)":WebGLKernelValueSingleArray1DI,"Array1D(3)":WebGLKernelValueSingleArray1DI,"Array1D(4)":WebGLKernelValueSingleArray1DI,"Array2D(2)":WebGLKernelValueSingleArray2DI,"Array2D(3)":WebGLKernelValueSingleArray2DI,"Array2D(4)":WebGLKernelValueSingleArray2DI,"Array3D(2)":WebGLKernelValueSingleArray3DI,"Array3D(3)":WebGLKernelValueSingleArray3DI,"Array3D(4)":WebGLKernelValueSingleArray3DI,"Input":WebGLKernelValueSingleInput,"NumberTexture":WebGLKernelValueNumberTexture,"ArrayTexture(1)":WebGLKernelValueNumberTexture,"ArrayTexture(2)":WebGLKernelValueNumberTexture,"ArrayTexture(3)":WebGLKernelValueNumberTexture,"ArrayTexture(4)":WebGLKernelValueNumberTexture,"MemoryOptimizedNumberTexture":WebGLKernelValueMemoryOptimizedNumberTexture,"HTMLCanvas":WebGLKernelValueHTMLImage,"HTMLImage":WebGLKernelValueHTMLImage,"HTMLImageArray":false,"HTMLVideo":WebGLKernelValueHTMLVideo}}};function lookupKernelValueType(type,dynamic,precision,value2){if(!type){throw new Error("type missing")}if(!dynamic){throw new Error("dynamic missing")}if(!precision){throw new Error("precision missing")}if(value2.type){type=value2.type}const types=kernelValueMaps[precision][dynamic];if(types[type]===false){return null}else if(types[type]===void 0){throw new Error(`Could not find a KernelValue for ${type}`)}return types[type]}module3.exports={lookupKernelValueType,kernelValueMaps}},{"./kernel-value/boolean":41,"./kernel-value/dynamic-html-image":42,"./kernel-value/dynamic-html-video":43,"./kernel-value/dynamic-memory-optimized-number-texture":44,"./kernel-value/dynamic-number-texture":45,"./kernel-value/dynamic-single-array":46,"./kernel-value/dynamic-single-array1d-i":47,"./kernel-value/dynamic-single-array2d-i":48,"./kernel-value/dynamic-single-array3d-i":49,"./kernel-value/dynamic-single-input":50,"./kernel-value/dynamic-unsigned-array":51,"./kernel-value/dynamic-unsigned-input":52,"./kernel-value/float":53,"./kernel-value/html-image":54,"./kernel-value/html-video":55,"./kernel-value/integer":57,"./kernel-value/memory-optimized-number-texture":58,"./kernel-value/number-texture":59,"./kernel-value/single-array":60,"./kernel-value/single-array1d-i":61,"./kernel-value/single-array2":62,"./kernel-value/single-array2d-i":63,"./kernel-value/single-array3":64,"./kernel-value/single-array3d-i":65,"./kernel-value/single-array4":66,"./kernel-value/single-input":67,"./kernel-value/unsigned-array":68,"./kernel-value/unsigned-input":69}],40:[function(require2,module3,exports3){const{WebGLKernelValue}=require2("./index");const{Input}=require2("../../../input");class WebGLKernelArray extends WebGLKernelValue{checkSize(width,height){if(!this.kernel.validate)return;const{maxTextureSize}=this.kernel.constructor.features;if(width>maxTextureSize||height>maxTextureSize){if(width>height){throw new Error(`Argument texture width of ${width} larger than maximum size of ${maxTextureSize} for your GPU`)}else if(width<height){throw new Error(`Argument texture height of ${height} larger than maximum size of ${maxTextureSize} for your GPU`)}else{throw new Error(`Argument texture height and width of ${height} larger than maximum size of ${maxTextureSize} for your GPU`)}}}setup(){this.requestTexture();this.setupTexture();this.defineTexture()}requestTexture(){this.texture=this.onRequestTexture()}defineTexture(){const{context:gl2}=this;gl2.activeTexture(this.contextHandle);gl2.bindTexture(gl2.TEXTURE_2D,this.texture);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_WRAP_S,gl2.CLAMP_TO_EDGE);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_WRAP_T,gl2.CLAMP_TO_EDGE);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_MIN_FILTER,gl2.NEAREST);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_MAG_FILTER,gl2.NEAREST)}setupTexture(){this.contextHandle=this.onRequestContextHandle();this.index=this.onRequestIndex();this.dimensionsId=this.id+"Dim";this.sizeId=this.id+"Size"}getBitRatio(value2){if(Array.isArray(value2[0])){return this.getBitRatio(value2[0])}else if(value2.constructor===Input){return this.getBitRatio(value2.value)}switch(value2.constructor){case Uint8ClampedArray:case Uint8Array:case Int8Array:return 1;case Uint16Array:case Int16Array:return 2;case Float32Array:case Int32Array:default:return 4}}destroy(){if(this.prevArg){this.prevArg.delete()}this.context.deleteTexture(this.texture)}}module3.exports={WebGLKernelArray}},{"../../../input":110,"./index":56}],41:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValue}=require2("./index");class WebGLKernelValueBoolean extends WebGLKernelValue{constructor(value2,settings){super(value2,settings);this.uploadValue=value2}getSource(value2){if(this.origin==="constants"){return`const bool ${this.id} = ${value2};\n`}return`uniform bool ${this.id};\n`}getStringValueHandler(){return`const uploadValue_${this.name} = ${this.varName};\n`}updateValue(value2){if(this.origin==="constants")return;this.kernel.setUniform1i(this.id,this.uploadValue=value2)}}module3.exports={WebGLKernelValueBoolean}},{"../../../utils":114,"./index":56}],42:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueHTMLImage}=require2("./html-image");class WebGLKernelValueDynamicHTMLImage extends WebGLKernelValueHTMLImage{getSource(){return utils.linesToString([`uniform sampler2D ${this.id}`,`uniform ivec2 ${this.sizeId}`,`uniform ivec3 ${this.dimensionsId}`])}updateValue(value2){const{width,height}=value2;this.checkSize(width,height);this.dimensions=[width,height,1];this.textureSize=[width,height];this.kernel.setUniform3iv(this.dimensionsId,this.dimensions);this.kernel.setUniform2iv(this.sizeId,this.textureSize);super.updateValue(value2)}}module3.exports={WebGLKernelValueDynamicHTMLImage}},{"../../../utils":114,"./html-image":54}],43:[function(require2,module3,exports3){const{WebGLKernelValueDynamicHTMLImage}=require2("./dynamic-html-image");class WebGLKernelValueDynamicHTMLVideo extends WebGLKernelValueDynamicHTMLImage{}module3.exports={WebGLKernelValueDynamicHTMLVideo}},{"./dynamic-html-image":42}],44:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueMemoryOptimizedNumberTexture}=require2("./memory-optimized-number-texture");class WebGLKernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture{getSource(){return utils.linesToString([`uniform sampler2D ${this.id}`,`uniform ivec2 ${this.sizeId}`,`uniform ivec3 ${this.dimensionsId}`])}updateValue(inputTexture){this.dimensions=inputTexture.dimensions;this.checkSize(inputTexture.size[0],inputTexture.size[1]);this.textureSize=inputTexture.size;this.kernel.setUniform3iv(this.dimensionsId,this.dimensions);this.kernel.setUniform2iv(this.sizeId,this.textureSize);super.updateValue(inputTexture)}}module3.exports={WebGLKernelValueDynamicMemoryOptimizedNumberTexture}},{"../../../utils":114,"./memory-optimized-number-texture":58}],45:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueNumberTexture}=require2("./number-texture");class WebGLKernelValueDynamicNumberTexture extends WebGLKernelValueNumberTexture{getSource(){return utils.linesToString([`uniform sampler2D ${this.id}`,`uniform ivec2 ${this.sizeId}`,`uniform ivec3 ${this.dimensionsId}`])}updateValue(value2){this.dimensions=value2.dimensions;this.checkSize(value2.size[0],value2.size[1]);this.textureSize=value2.size;this.kernel.setUniform3iv(this.dimensionsId,this.dimensions);this.kernel.setUniform2iv(this.sizeId,this.textureSize);super.updateValue(value2)}}module3.exports={WebGLKernelValueDynamicNumberTexture}},{"../../../utils":114,"./number-texture":59}],46:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueSingleArray}=require2("./single-array");class WebGLKernelValueDynamicSingleArray extends WebGLKernelValueSingleArray{getSource(){return utils.linesToString([`uniform sampler2D ${this.id}`,`uniform ivec2 ${this.sizeId}`,`uniform ivec3 ${this.dimensionsId}`])}updateValue(value2){this.dimensions=utils.getDimensions(value2,true);this.textureSize=utils.getMemoryOptimizedFloatTextureSize(this.dimensions,this.bitRatio);this.uploadArrayLength=this.textureSize[0]*this.textureSize[1]*this.bitRatio;this.checkSize(this.textureSize[0],this.textureSize[1]);this.uploadValue=new Float32Array(this.uploadArrayLength);this.kernel.setUniform3iv(this.dimensionsId,this.dimensions);this.kernel.setUniform2iv(this.sizeId,this.textureSize);super.updateValue(value2)}}module3.exports={WebGLKernelValueDynamicSingleArray}},{"../../../utils":114,"./single-array":60}],47:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueSingleArray1DI}=require2("./single-array1d-i");class WebGLKernelValueDynamicSingleArray1DI extends WebGLKernelValueSingleArray1DI{getSource(){return utils.linesToString([`uniform sampler2D ${this.id}`,`uniform ivec2 ${this.sizeId}`,`uniform ivec3 ${this.dimensionsId}`])}updateValue(value2){this.setShape(value2);this.kernel.setUniform3iv(this.dimensionsId,this.dimensions);this.kernel.setUniform2iv(this.sizeId,this.textureSize);super.updateValue(value2)}}module3.exports={WebGLKernelValueDynamicSingleArray1DI}},{"../../../utils":114,"./single-array1d-i":61}],48:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueSingleArray2DI}=require2("./single-array2d-i");class WebGLKernelValueDynamicSingleArray2DI extends WebGLKernelValueSingleArray2DI{getSource(){return utils.linesToString([`uniform sampler2D ${this.id}`,`uniform ivec2 ${this.sizeId}`,`uniform ivec3 ${this.dimensionsId}`])}updateValue(value2){this.setShape(value2);this.kernel.setUniform3iv(this.dimensionsId,this.dimensions);this.kernel.setUniform2iv(this.sizeId,this.textureSize);super.updateValue(value2)}}module3.exports={WebGLKernelValueDynamicSingleArray2DI}},{"../../../utils":114,"./single-array2d-i":63}],49:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueSingleArray3DI}=require2("./single-array3d-i");class WebGLKernelValueDynamicSingleArray3DI extends WebGLKernelValueSingleArray3DI{getSource(){return utils.linesToString([`uniform sampler2D ${this.id}`,`uniform ivec2 ${this.sizeId}`,`uniform ivec3 ${this.dimensionsId}`])}updateValue(value2){this.setShape(value2);this.kernel.setUniform3iv(this.dimensionsId,this.dimensions);this.kernel.setUniform2iv(this.sizeId,this.textureSize);super.updateValue(value2)}}module3.exports={WebGLKernelValueDynamicSingleArray3DI}},{"../../../utils":114,"./single-array3d-i":65}],50:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueSingleInput}=require2("./single-input");class WebGLKernelValueDynamicSingleInput extends WebGLKernelValueSingleInput{getSource(){return utils.linesToString([`uniform sampler2D ${this.id}`,`uniform ivec2 ${this.sizeId}`,`uniform ivec3 ${this.dimensionsId}`])}updateValue(value2){let[w4,h,d4]=value2.size;this.dimensions=new Int32Array([w4||1,h||1,d4||1]);this.textureSize=utils.getMemoryOptimizedFloatTextureSize(this.dimensions,this.bitRatio);this.uploadArrayLength=this.textureSize[0]*this.textureSize[1]*this.bitRatio;this.checkSize(this.textureSize[0],this.textureSize[1]);this.uploadValue=new Float32Array(this.uploadArrayLength);this.kernel.setUniform3iv(this.dimensionsId,this.dimensions);this.kernel.setUniform2iv(this.sizeId,this.textureSize);super.updateValue(value2)}}module3.exports={WebGLKernelValueDynamicSingleInput}},{"../../../utils":114,"./single-input":67}],51:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueUnsignedArray}=require2("./unsigned-array");class WebGLKernelValueDynamicUnsignedArray extends WebGLKernelValueUnsignedArray{getSource(){return utils.linesToString([`uniform sampler2D ${this.id}`,`uniform ivec2 ${this.sizeId}`,`uniform ivec3 ${this.dimensionsId}`])}updateValue(value2){this.dimensions=utils.getDimensions(value2,true);this.textureSize=utils.getMemoryOptimizedPackedTextureSize(this.dimensions,this.bitRatio);this.uploadArrayLength=this.textureSize[0]*this.textureSize[1]*(4/this.bitRatio);this.checkSize(this.textureSize[0],this.textureSize[1]);const Type=this.getTransferArrayType(value2);this.preUploadValue=new Type(this.uploadArrayLength);this.uploadValue=new Uint8Array(this.preUploadValue.buffer);this.kernel.setUniform3iv(this.dimensionsId,this.dimensions);this.kernel.setUniform2iv(this.sizeId,this.textureSize);super.updateValue(value2)}}module3.exports={WebGLKernelValueDynamicUnsignedArray}},{"../../../utils":114,"./unsigned-array":68}],52:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueUnsignedInput}=require2("./unsigned-input");class WebGLKernelValueDynamicUnsignedInput extends WebGLKernelValueUnsignedInput{getSource(){return utils.linesToString([`uniform sampler2D ${this.id}`,`uniform ivec2 ${this.sizeId}`,`uniform ivec3 ${this.dimensionsId}`])}updateValue(value2){let[w4,h,d4]=value2.size;this.dimensions=new Int32Array([w4||1,h||1,d4||1]);this.textureSize=utils.getMemoryOptimizedPackedTextureSize(this.dimensions,this.bitRatio);this.uploadArrayLength=this.textureSize[0]*this.textureSize[1]*(4/this.bitRatio);this.checkSize(this.textureSize[0],this.textureSize[1]);const Type=this.getTransferArrayType(value2.value);this.preUploadValue=new Type(this.uploadArrayLength);this.uploadValue=new Uint8Array(this.preUploadValue.buffer);this.kernel.setUniform3iv(this.dimensionsId,this.dimensions);this.kernel.setUniform2iv(this.sizeId,this.textureSize);super.updateValue(value2)}}module3.exports={WebGLKernelValueDynamicUnsignedInput}},{"../../../utils":114,"./unsigned-input":69}],53:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValue}=require2("./index");class WebGLKernelValueFloat extends WebGLKernelValue{constructor(value2,settings){super(value2,settings);this.uploadValue=value2}getStringValueHandler(){return`const uploadValue_${this.name} = ${this.varName};\n`}getSource(value2){if(this.origin==="constants"){if(Number.isInteger(value2)){return`const float ${this.id} = ${value2}.0;\n`}return`const float ${this.id} = ${value2};\n`}return`uniform float ${this.id};\n`}updateValue(value2){if(this.origin==="constants")return;this.kernel.setUniform1f(this.id,this.uploadValue=value2)}}module3.exports={WebGLKernelValueFloat}},{"../../../utils":114,"./index":56}],54:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelArray}=require2("./array");class WebGLKernelValueHTMLImage extends WebGLKernelArray{constructor(value2,settings){super(value2,settings);const{width,height}=value2;this.checkSize(width,height);this.dimensions=[width,height,1];this.textureSize=[width,height];this.uploadValue=value2}getStringValueHandler(){return`const uploadValue_${this.name} = ${this.varName};\n`}getSource(){return utils.linesToString([`uniform sampler2D ${this.id}`,`ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,`ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`])}updateValue(inputImage){if(inputImage.constructor!==this.initialValueConstructor){this.onUpdateValueMismatch(inputImage.constructor);return}const{context:gl2}=this;gl2.activeTexture(this.contextHandle);gl2.bindTexture(gl2.TEXTURE_2D,this.texture);gl2.pixelStorei(gl2.UNPACK_FLIP_Y_WEBGL,true);gl2.texImage2D(gl2.TEXTURE_2D,0,gl2.RGBA,gl2.RGBA,gl2.UNSIGNED_BYTE,this.uploadValue=inputImage);this.kernel.setUniform1i(this.id,this.index)}}module3.exports={WebGLKernelValueHTMLImage}},{"../../../utils":114,"./array":40}],55:[function(require2,module3,exports3){const{WebGLKernelValueHTMLImage}=require2("./html-image");class WebGLKernelValueHTMLVideo extends WebGLKernelValueHTMLImage{}module3.exports={WebGLKernelValueHTMLVideo}},{"./html-image":54}],56:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{KernelValue}=require2("../../kernel-value");class WebGLKernelValue extends KernelValue{constructor(value2,settings){super(value2,settings);this.dimensionsId=null;this.sizeId=null;this.initialValueConstructor=value2.constructor;this.onRequestTexture=settings.onRequestTexture;this.onRequestIndex=settings.onRequestIndex;this.uploadValue=null;this.textureSize=null;this.bitRatio=null;this.prevArg=null}get id(){return`${this.origin}_${utils.sanitizeName(this.name)}`}setup(){}getTransferArrayType(value2){if(Array.isArray(value2[0])){return this.getTransferArrayType(value2[0])}switch(value2.constructor){case Array:case Int32Array:case Int16Array:case Int8Array:return Float32Array;case Uint8ClampedArray:case Uint8Array:case Uint16Array:case Uint32Array:case Float32Array:case Float64Array:return value2.constructor}console.warn("Unfamiliar constructor type.  Will go ahead and use, but likley this may result in a transfer of zeros");return value2.constructor}getStringValueHandler(){throw new Error(`"getStringValueHandler" not implemented on ${this.constructor.name}`)}getVariablePrecisionString(){return this.kernel.getVariablePrecisionString(this.textureSize||void 0,this.tactic||void 0)}destroy(){}}module3.exports={WebGLKernelValue}},{"../../../utils":114,"../../kernel-value":35}],57:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValue}=require2("./index");class WebGLKernelValueInteger extends WebGLKernelValue{constructor(value2,settings){super(value2,settings);this.uploadValue=value2}getStringValueHandler(){return`const uploadValue_${this.name} = ${this.varName};\n`}getSource(value2){if(this.origin==="constants"){return`const int ${this.id} = ${parseInt(value2)};\n`}return`uniform int ${this.id};\n`}updateValue(value2){if(this.origin==="constants")return;this.kernel.setUniform1i(this.id,this.uploadValue=value2)}}module3.exports={WebGLKernelValueInteger}},{"../../../utils":114,"./index":56}],58:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelArray}=require2("./array");const sameError=`Source and destination textures are the same.  Use immutable = true and manually cleanup kernel output texture memory with texture.delete()`;class WebGLKernelValueMemoryOptimizedNumberTexture extends WebGLKernelArray{constructor(value2,settings){super(value2,settings);const[width,height]=value2.size;this.checkSize(width,height);this.dimensions=value2.dimensions;this.textureSize=value2.size;this.uploadValue=value2.texture;this.forceUploadEachRun=true}setup(){this.setupTexture()}getStringValueHandler(){return`const uploadValue_${this.name} = ${this.varName}.texture;\n`}getSource(){return utils.linesToString([`uniform sampler2D ${this.id}`,`ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,`ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`])}updateValue(inputTexture){if(inputTexture.constructor!==this.initialValueConstructor){this.onUpdateValueMismatch(inputTexture.constructor);return}if(this.checkContext&&inputTexture.context!==this.context){throw new Error(`Value ${this.name} (${this.type}) must be from same context`)}const{kernel,context:gl2}=this;if(kernel.pipeline){if(kernel.immutable){kernel.updateTextureArgumentRefs(this,inputTexture)}else{if(kernel.texture.texture===inputTexture.texture){throw new Error(sameError)}else if(kernel.mappedTextures){const{mappedTextures}=kernel;for(let i=0;i<mappedTextures.length;i++){if(mappedTextures[i].texture===inputTexture.texture){throw new Error(sameError)}}}}}gl2.activeTexture(this.contextHandle);gl2.bindTexture(gl2.TEXTURE_2D,this.uploadValue=inputTexture.texture);this.kernel.setUniform1i(this.id,this.index)}}module3.exports={WebGLKernelValueMemoryOptimizedNumberTexture,sameError}},{"../../../utils":114,"./array":40}],59:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelArray}=require2("./array");const{sameError}=require2("./memory-optimized-number-texture");class WebGLKernelValueNumberTexture extends WebGLKernelArray{constructor(value2,settings){super(value2,settings);const[width,height]=value2.size;this.checkSize(width,height);const{size:textureSize,dimensions}=value2;this.bitRatio=this.getBitRatio(value2);this.dimensions=dimensions;this.textureSize=textureSize;this.uploadValue=value2.texture;this.forceUploadEachRun=true}setup(){this.setupTexture()}getStringValueHandler(){return`const uploadValue_${this.name} = ${this.varName}.texture;\n`}getSource(){return utils.linesToString([`uniform sampler2D ${this.id}`,`ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,`ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`])}updateValue(inputTexture){if(inputTexture.constructor!==this.initialValueConstructor){this.onUpdateValueMismatch(inputTexture.constructor);return}if(this.checkContext&&inputTexture.context!==this.context){throw new Error(`Value ${this.name} (${this.type}) must be from same context`)}const{kernel,context:gl2}=this;if(kernel.pipeline){if(kernel.immutable){kernel.updateTextureArgumentRefs(this,inputTexture)}else{if(kernel.texture.texture===inputTexture.texture){throw new Error(sameError)}else if(kernel.mappedTextures){const{mappedTextures}=kernel;for(let i=0;i<mappedTextures.length;i++){if(mappedTextures[i].texture===inputTexture.texture){throw new Error(sameError)}}}}}gl2.activeTexture(this.contextHandle);gl2.bindTexture(gl2.TEXTURE_2D,this.uploadValue=inputTexture.texture);this.kernel.setUniform1i(this.id,this.index)}}module3.exports={WebGLKernelValueNumberTexture}},{"../../../utils":114,"./array":40,"./memory-optimized-number-texture":58}],60:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelArray}=require2("./array");class WebGLKernelValueSingleArray extends WebGLKernelArray{constructor(value2,settings){super(value2,settings);this.bitRatio=4;this.dimensions=utils.getDimensions(value2,true);this.textureSize=utils.getMemoryOptimizedFloatTextureSize(this.dimensions,this.bitRatio);this.uploadArrayLength=this.textureSize[0]*this.textureSize[1]*this.bitRatio;this.checkSize(this.textureSize[0],this.textureSize[1]);this.uploadValue=new Float32Array(this.uploadArrayLength)}getStringValueHandler(){return utils.linesToString([`const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,`flattenTo(${this.varName}, uploadValue_${this.name})`])}getSource(){return utils.linesToString([`uniform sampler2D ${this.id}`,`ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,`ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`])}updateValue(value2){if(value2.constructor!==this.initialValueConstructor){this.onUpdateValueMismatch(value2.constructor);return}const{context:gl2}=this;utils.flattenTo(value2,this.uploadValue);gl2.activeTexture(this.contextHandle);gl2.bindTexture(gl2.TEXTURE_2D,this.texture);gl2.pixelStorei(gl2.UNPACK_FLIP_Y_WEBGL,false);gl2.texImage2D(gl2.TEXTURE_2D,0,gl2.RGBA,this.textureSize[0],this.textureSize[1],0,gl2.RGBA,gl2.FLOAT,this.uploadValue);this.kernel.setUniform1i(this.id,this.index)}}module3.exports={WebGLKernelValueSingleArray}},{"../../../utils":114,"./array":40}],61:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelArray}=require2("./array");class WebGLKernelValueSingleArray1DI extends WebGLKernelArray{constructor(value2,settings){super(value2,settings);this.bitRatio=4;this.setShape(value2)}setShape(value2){const valueDimensions=utils.getDimensions(value2,true);this.textureSize=utils.getMemoryOptimizedFloatTextureSize(valueDimensions,this.bitRatio);this.dimensions=new Int32Array([valueDimensions[1],1,1]);this.uploadArrayLength=this.textureSize[0]*this.textureSize[1]*this.bitRatio;this.checkSize(this.textureSize[0],this.textureSize[1]);this.uploadValue=new Float32Array(this.uploadArrayLength)}getStringValueHandler(){return utils.linesToString([`const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,`flattenTo(${this.varName}, uploadValue_${this.name})`])}getSource(){return utils.linesToString([`uniform sampler2D ${this.id}`,`ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,`ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`])}updateValue(value2){if(value2.constructor!==this.initialValueConstructor){this.onUpdateValueMismatch(value2.constructor);return}const{context:gl2}=this;utils.flatten2dArrayTo(value2,this.uploadValue);gl2.activeTexture(this.contextHandle);gl2.bindTexture(gl2.TEXTURE_2D,this.texture);gl2.pixelStorei(gl2.UNPACK_FLIP_Y_WEBGL,false);gl2.texImage2D(gl2.TEXTURE_2D,0,gl2.RGBA,this.textureSize[0],this.textureSize[1],0,gl2.RGBA,gl2.FLOAT,this.uploadValue);this.kernel.setUniform1i(this.id,this.index)}}module3.exports={WebGLKernelValueSingleArray1DI}},{"../../../utils":114,"./array":40}],62:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValue}=require2("./index");class WebGLKernelValueSingleArray2 extends WebGLKernelValue{constructor(value2,settings){super(value2,settings);this.uploadValue=value2}getSource(value2){if(this.origin==="constants"){return`const vec2 ${this.id} = vec2(${value2[0]},${value2[1]});\n`}return`uniform vec2 ${this.id};\n`}getStringValueHandler(){if(this.origin==="constants")return"";return`const uploadValue_${this.name} = ${this.varName};\n`}updateValue(value2){if(this.origin==="constants")return;this.kernel.setUniform2fv(this.id,this.uploadValue=value2)}}module3.exports={WebGLKernelValueSingleArray2}},{"../../../utils":114,"./index":56}],63:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelArray}=require2("./array");class WebGLKernelValueSingleArray2DI extends WebGLKernelArray{constructor(value2,settings){super(value2,settings);this.bitRatio=4;this.setShape(value2)}setShape(value2){const valueDimensions=utils.getDimensions(value2,true);this.textureSize=utils.getMemoryOptimizedFloatTextureSize(valueDimensions,this.bitRatio);this.dimensions=new Int32Array([valueDimensions[1],valueDimensions[2],1]);this.uploadArrayLength=this.textureSize[0]*this.textureSize[1]*this.bitRatio;this.checkSize(this.textureSize[0],this.textureSize[1]);this.uploadValue=new Float32Array(this.uploadArrayLength)}getStringValueHandler(){return utils.linesToString([`const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,`flattenTo(${this.varName}, uploadValue_${this.name})`])}getSource(){return utils.linesToString([`uniform sampler2D ${this.id}`,`ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,`ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`])}updateValue(value2){if(value2.constructor!==this.initialValueConstructor){this.onUpdateValueMismatch(value2.constructor);return}const{context:gl2}=this;utils.flatten3dArrayTo(value2,this.uploadValue);gl2.activeTexture(this.contextHandle);gl2.bindTexture(gl2.TEXTURE_2D,this.texture);gl2.pixelStorei(gl2.UNPACK_FLIP_Y_WEBGL,false);gl2.texImage2D(gl2.TEXTURE_2D,0,gl2.RGBA,this.textureSize[0],this.textureSize[1],0,gl2.RGBA,gl2.FLOAT,this.uploadValue);this.kernel.setUniform1i(this.id,this.index)}}module3.exports={WebGLKernelValueSingleArray2DI}},{"../../../utils":114,"./array":40}],64:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValue}=require2("./index");class WebGLKernelValueSingleArray3 extends WebGLKernelValue{constructor(value2,settings){super(value2,settings);this.uploadValue=value2}getSource(value2){if(this.origin==="constants"){return`const vec3 ${this.id} = vec3(${value2[0]},${value2[1]},${value2[2]});\n`}return`uniform vec3 ${this.id};\n`}getStringValueHandler(){if(this.origin==="constants")return"";return`const uploadValue_${this.name} = ${this.varName};\n`}updateValue(value2){if(this.origin==="constants")return;this.kernel.setUniform3fv(this.id,this.uploadValue=value2)}}module3.exports={WebGLKernelValueSingleArray3}},{"../../../utils":114,"./index":56}],65:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelArray}=require2("./array");class WebGLKernelValueSingleArray3DI extends WebGLKernelArray{constructor(value2,settings){super(value2,settings);this.bitRatio=4;this.setShape(value2)}setShape(value2){const valueDimensions=utils.getDimensions(value2,true);this.textureSize=utils.getMemoryOptimizedFloatTextureSize(valueDimensions,this.bitRatio);this.dimensions=new Int32Array([valueDimensions[1],valueDimensions[2],valueDimensions[3]]);this.uploadArrayLength=this.textureSize[0]*this.textureSize[1]*this.bitRatio;this.checkSize(this.textureSize[0],this.textureSize[1]);this.uploadValue=new Float32Array(this.uploadArrayLength)}getStringValueHandler(){return utils.linesToString([`const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,`flattenTo(${this.varName}, uploadValue_${this.name})`])}getSource(){return utils.linesToString([`uniform sampler2D ${this.id}`,`ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,`ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`])}updateValue(value2){if(value2.constructor!==this.initialValueConstructor){this.onUpdateValueMismatch(value2.constructor);return}const{context:gl2}=this;utils.flatten4dArrayTo(value2,this.uploadValue);gl2.activeTexture(this.contextHandle);gl2.bindTexture(gl2.TEXTURE_2D,this.texture);gl2.pixelStorei(gl2.UNPACK_FLIP_Y_WEBGL,false);gl2.texImage2D(gl2.TEXTURE_2D,0,gl2.RGBA,this.textureSize[0],this.textureSize[1],0,gl2.RGBA,gl2.FLOAT,this.uploadValue);this.kernel.setUniform1i(this.id,this.index)}}module3.exports={WebGLKernelValueSingleArray3DI}},{"../../../utils":114,"./array":40}],66:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValue}=require2("./index");class WebGLKernelValueSingleArray4 extends WebGLKernelValue{constructor(value2,settings){super(value2,settings);this.uploadValue=value2}getSource(value2){if(this.origin==="constants"){return`const vec4 ${this.id} = vec4(${value2[0]},${value2[1]},${value2[2]},${value2[3]});\n`}return`uniform vec4 ${this.id};\n`}getStringValueHandler(){if(this.origin==="constants")return"";return`const uploadValue_${this.name} = ${this.varName};\n`}updateValue(value2){if(this.origin==="constants")return;this.kernel.setUniform4fv(this.id,this.uploadValue=value2)}}module3.exports={WebGLKernelValueSingleArray4}},{"../../../utils":114,"./index":56}],67:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelArray}=require2("./array");class WebGLKernelValueSingleInput extends WebGLKernelArray{constructor(value2,settings){super(value2,settings);this.bitRatio=4;let[w4,h,d4]=value2.size;this.dimensions=new Int32Array([w4||1,h||1,d4||1]);this.textureSize=utils.getMemoryOptimizedFloatTextureSize(this.dimensions,this.bitRatio);this.uploadArrayLength=this.textureSize[0]*this.textureSize[1]*this.bitRatio;this.checkSize(this.textureSize[0],this.textureSize[1]);this.uploadValue=new Float32Array(this.uploadArrayLength)}getStringValueHandler(){return utils.linesToString([`const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,`flattenTo(${this.varName}.value, uploadValue_${this.name})`])}getSource(){return utils.linesToString([`uniform sampler2D ${this.id}`,`ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,`ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`])}updateValue(input){if(input.constructor!==this.initialValueConstructor){this.onUpdateValueMismatch(input.constructor);return}const{context:gl2}=this;utils.flattenTo(input.value,this.uploadValue);gl2.activeTexture(this.contextHandle);gl2.bindTexture(gl2.TEXTURE_2D,this.texture);gl2.pixelStorei(gl2.UNPACK_FLIP_Y_WEBGL,false);gl2.texImage2D(gl2.TEXTURE_2D,0,gl2.RGBA,this.textureSize[0],this.textureSize[1],0,gl2.RGBA,gl2.FLOAT,this.uploadValue);this.kernel.setUniform1i(this.id,this.index)}}module3.exports={WebGLKernelValueSingleInput}},{"../../../utils":114,"./array":40}],68:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelArray}=require2("./array");class WebGLKernelValueUnsignedArray extends WebGLKernelArray{constructor(value2,settings){super(value2,settings);this.bitRatio=this.getBitRatio(value2);this.dimensions=utils.getDimensions(value2,true);this.textureSize=utils.getMemoryOptimizedPackedTextureSize(this.dimensions,this.bitRatio);this.uploadArrayLength=this.textureSize[0]*this.textureSize[1]*(4/this.bitRatio);this.checkSize(this.textureSize[0],this.textureSize[1]);this.TranserArrayType=this.getTransferArrayType(value2);this.preUploadValue=new this.TranserArrayType(this.uploadArrayLength);this.uploadValue=new Uint8Array(this.preUploadValue.buffer)}getStringValueHandler(){return utils.linesToString([`const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,`const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,`flattenTo(${this.varName}, preUploadValue_${this.name})`])}getSource(){return utils.linesToString([`uniform sampler2D ${this.id}`,`ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,`ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`])}updateValue(value2){if(value2.constructor!==this.initialValueConstructor){this.onUpdateValueMismatch(value2.constructor);return}const{context:gl2}=this;utils.flattenTo(value2,this.preUploadValue);gl2.activeTexture(this.contextHandle);gl2.bindTexture(gl2.TEXTURE_2D,this.texture);gl2.pixelStorei(gl2.UNPACK_FLIP_Y_WEBGL,false);gl2.texImage2D(gl2.TEXTURE_2D,0,gl2.RGBA,this.textureSize[0],this.textureSize[1],0,gl2.RGBA,gl2.UNSIGNED_BYTE,this.uploadValue);this.kernel.setUniform1i(this.id,this.index)}}module3.exports={WebGLKernelValueUnsignedArray}},{"../../../utils":114,"./array":40}],69:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelArray}=require2("./array");class WebGLKernelValueUnsignedInput extends WebGLKernelArray{constructor(value2,settings){super(value2,settings);this.bitRatio=this.getBitRatio(value2);const[w4,h,d4]=value2.size;this.dimensions=new Int32Array([w4||1,h||1,d4||1]);this.textureSize=utils.getMemoryOptimizedPackedTextureSize(this.dimensions,this.bitRatio);this.uploadArrayLength=this.textureSize[0]*this.textureSize[1]*(4/this.bitRatio);this.checkSize(this.textureSize[0],this.textureSize[1]);this.TranserArrayType=this.getTransferArrayType(value2.value);this.preUploadValue=new this.TranserArrayType(this.uploadArrayLength);this.uploadValue=new Uint8Array(this.preUploadValue.buffer)}getStringValueHandler(){return utils.linesToString([`const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,`const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,`flattenTo(${this.varName}.value, preUploadValue_${this.name})`])}getSource(){return utils.linesToString([`uniform sampler2D ${this.id}`,`ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,`ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`])}updateValue(input){if(input.constructor!==this.initialValueConstructor){this.onUpdateValueMismatch(value.constructor);return}const{context:gl2}=this;utils.flattenTo(input.value,this.preUploadValue);gl2.activeTexture(this.contextHandle);gl2.bindTexture(gl2.TEXTURE_2D,this.texture);gl2.pixelStorei(gl2.UNPACK_FLIP_Y_WEBGL,false);gl2.texImage2D(gl2.TEXTURE_2D,0,gl2.RGBA,this.textureSize[0],this.textureSize[1],0,gl2.RGBA,gl2.UNSIGNED_BYTE,this.uploadValue);this.kernel.setUniform1i(this.id,this.index)}}module3.exports={WebGLKernelValueUnsignedInput}},{"../../../utils":114,"./array":40}],70:[function(require2,module3,exports3){const{GLKernel}=require2("../gl/kernel");const{FunctionBuilder}=require2("../function-builder");const{WebGLFunctionNode}=require2("./function-node");const{utils}=require2("../../utils");const mrud=require2("../../plugins/math-random-uniformly-distributed");const{fragmentShader}=require2("./fragment-shader");const{vertexShader}=require2("./vertex-shader");const{glKernelString}=require2("../gl/kernel-string");const{lookupKernelValueType}=require2("./kernel-value-maps");let isSupported=null;let testCanvas=null;let testContext=null;let testExtensions=null;let features=null;const plugins=[mrud];const canvases=[];const maxTexSizes={};class WebGLKernel extends GLKernel{static get isSupported(){if(isSupported!==null){return isSupported}this.setupFeatureChecks();isSupported=this.isContextMatch(testContext);return isSupported}static setupFeatureChecks(){if(typeof document!=="undefined"){testCanvas=document.createElement("canvas")}else if(typeof OffscreenCanvas!=="undefined"){testCanvas=new OffscreenCanvas(0,0)}if(!testCanvas)return;testContext=testCanvas.getContext("webgl")||testCanvas.getContext("experimental-webgl");if(!testContext||!testContext.getExtension)return;testExtensions={OES_texture_float:testContext.getExtension("OES_texture_float"),OES_texture_float_linear:testContext.getExtension("OES_texture_float_linear"),OES_element_index_uint:testContext.getExtension("OES_element_index_uint"),WEBGL_draw_buffers:testContext.getExtension("WEBGL_draw_buffers")};features=this.getFeatures()}static isContextMatch(context){if(typeof WebGLRenderingContext!=="undefined"){return context instanceof WebGLRenderingContext}return false}static getIsTextureFloat(){return Boolean(testExtensions.OES_texture_float)}static getIsDrawBuffers(){return Boolean(testExtensions.WEBGL_draw_buffers)}static getChannelCount(){return testExtensions.WEBGL_draw_buffers?testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL):1}static getMaxTextureSize(){return testContext.getParameter(testContext.MAX_TEXTURE_SIZE)}static lookupKernelValueType(type,dynamic,precision,value2){return lookupKernelValueType(type,dynamic,precision,value2)}static get testCanvas(){return testCanvas}static get testContext(){return testContext}static get features(){return features}static get fragmentShader(){return fragmentShader}static get vertexShader(){return vertexShader}constructor(source,settings){super(source,settings);this.program=null;this.pipeline=settings.pipeline;this.endianness=utils.systemEndianness();this.extensions={};this.argumentTextureCount=0;this.constantTextureCount=0;this.fragShader=null;this.vertShader=null;this.drawBuffersMap=null;this.maxTexSize=null;this.onRequestSwitchKernel=null;this.texture=null;this.mappedTextures=null;this.mergeSettings(source.settings||settings);this.threadDim=null;this.framebuffer=null;this.buffer=null;this.textureCache=[];this.programUniformLocationCache={};this.uniform1fCache={};this.uniform1iCache={};this.uniform2fCache={};this.uniform2fvCache={};this.uniform2ivCache={};this.uniform3fvCache={};this.uniform3ivCache={};this.uniform4fvCache={};this.uniform4ivCache={}}initCanvas(){if(typeof document!=="undefined"){const canvas=document.createElement("canvas");canvas.width=2;canvas.height=2;return canvas}else if(typeof OffscreenCanvas!=="undefined"){return new OffscreenCanvas(0,0)}}initContext(){const settings={alpha:false,depth:false,antialias:false};return this.canvas.getContext("webgl",settings)||this.canvas.getContext("experimental-webgl",settings)}initPlugins(settings){const pluginsToUse=[];const{source}=this;if(typeof source==="string"){for(let i=0;i<plugins.length;i++){const plugin=plugins[i];if(source.match(plugin.functionMatch)){pluginsToUse.push(plugin)}}}else if(typeof source==="object"){if(settings.pluginNames){for(let i=0;i<plugins.length;i++){const plugin=plugins[i];const usePlugin=settings.pluginNames.some(pluginName=>pluginName===plugin.name);if(usePlugin){pluginsToUse.push(plugin)}}}}return pluginsToUse}initExtensions(){this.extensions={OES_texture_float:this.context.getExtension("OES_texture_float"),OES_texture_float_linear:this.context.getExtension("OES_texture_float_linear"),OES_element_index_uint:this.context.getExtension("OES_element_index_uint"),WEBGL_draw_buffers:this.context.getExtension("WEBGL_draw_buffers"),WEBGL_color_buffer_float:this.context.getExtension("WEBGL_color_buffer_float")}}validateSettings(args){if(!this.validate){this.texSize=utils.getKernelTextureSize({optimizeFloatMemory:this.optimizeFloatMemory,precision:this.precision},this.output);return}const{features:features2}=this.constructor;if(this.optimizeFloatMemory===true&&!features2.isTextureFloat){throw new Error("Float textures are not supported")}else if(this.precision==="single"&&!features2.isFloatRead){throw new Error("Single precision not supported")}else if(!this.graphical&&this.precision===null&&features2.isTextureFloat){this.precision=features2.isFloatRead?"single":"unsigned"}if(this.subKernels&&this.subKernels.length>0&&!this.extensions.WEBGL_draw_buffers){throw new Error("could not instantiate draw buffers extension")}if(this.fixIntegerDivisionAccuracy===null){this.fixIntegerDivisionAccuracy=!features2.isIntegerDivisionAccurate}else if(this.fixIntegerDivisionAccuracy&&features2.isIntegerDivisionAccurate){this.fixIntegerDivisionAccuracy=false}this.checkOutput();if(!this.output||this.output.length===0){if(args.length!==1){throw new Error("Auto output only supported for kernels with only one input")}const argType=utils.getVariableType(args[0],this.strictIntegers);switch(argType){case"Array":this.output=utils.getDimensions(argType);break;case"NumberTexture":case"MemoryOptimizedNumberTexture":case"ArrayTexture(1)":case"ArrayTexture(2)":case"ArrayTexture(3)":case"ArrayTexture(4)":this.output=args[0].output;break;default:throw new Error("Auto output not supported for input type: "+argType)}}if(this.graphical){if(this.output.length!==2){throw new Error("Output must have 2 dimensions on graphical mode")}if(this.precision==="precision"){this.precision="unsigned";console.warn("Cannot use graphical mode and single precision at the same time")}this.texSize=utils.clone(this.output);return}else if(this.precision===null&&features2.isTextureFloat){this.precision="single"}this.texSize=utils.getKernelTextureSize({optimizeFloatMemory:this.optimizeFloatMemory,precision:this.precision},this.output);this.checkTextureSize()}updateMaxTexSize(){const{texSize,canvas}=this;if(this.maxTexSize===null){let canvasIndex=canvases.indexOf(canvas);if(canvasIndex===-1){canvasIndex=canvases.length;canvases.push(canvas);maxTexSizes[canvasIndex]=[texSize[0],texSize[1]]}this.maxTexSize=maxTexSizes[canvasIndex]}if(this.maxTexSize[0]<texSize[0]){this.maxTexSize[0]=texSize[0]}if(this.maxTexSize[1]<texSize[1]){this.maxTexSize[1]=texSize[1]}}setupArguments(args){this.kernelArguments=[];this.argumentTextureCount=0;const needsArgumentTypes=this.argumentTypes===null;if(needsArgumentTypes){this.argumentTypes=[]}this.argumentSizes=[];this.argumentBitRatios=[];if(args.length<this.argumentNames.length){throw new Error("not enough arguments for kernel")}else if(args.length>this.argumentNames.length){throw new Error("too many arguments for kernel")}const{context:gl2}=this;let textureIndexes=0;const onRequestTexture=()=>{return this.createTexture()};const onRequestIndex=()=>{return this.constantTextureCount+textureIndexes++};const onUpdateValueMismatch=constructor=>{this.switchKernels({type:"argumentMismatch",needed:constructor})};const onRequestContextHandle=()=>{return gl2.TEXTURE0+this.constantTextureCount+this.argumentTextureCount++};for(let index=0;index<args.length;index++){const value2=args[index];const name2=this.argumentNames[index];let type;if(needsArgumentTypes){type=utils.getVariableType(value2,this.strictIntegers);this.argumentTypes.push(type)}else{type=this.argumentTypes[index]}const KernelValue=this.constructor.lookupKernelValueType(type,this.dynamicArguments?"dynamic":"static",this.precision,args[index]);if(KernelValue===null){return this.requestFallback(args)}const kernelArgument=new KernelValue(value2,{name:name2,type,tactic:this.tactic,origin:"user",context:gl2,checkContext:this.checkContext,kernel:this,strictIntegers:this.strictIntegers,onRequestTexture,onRequestIndex,onUpdateValueMismatch,onRequestContextHandle});this.kernelArguments.push(kernelArgument);kernelArgument.setup();this.argumentSizes.push(kernelArgument.textureSize);this.argumentBitRatios[index]=kernelArgument.bitRatio}}createTexture(){const texture=this.context.createTexture();this.textureCache.push(texture);return texture}setupConstants(args){const{context:gl2}=this;this.kernelConstants=[];this.forceUploadKernelConstants=[];let needsConstantTypes=this.constantTypes===null;if(needsConstantTypes){this.constantTypes={}}this.constantBitRatios={};let textureIndexes=0;for(const name2 in this.constants){const value2=this.constants[name2];let type;if(needsConstantTypes){type=utils.getVariableType(value2,this.strictIntegers);this.constantTypes[name2]=type}else{type=this.constantTypes[name2]}const KernelValue=this.constructor.lookupKernelValueType(type,"static",this.precision,value2);if(KernelValue===null){return this.requestFallback(args)}const kernelValue=new KernelValue(value2,{name:name2,type,tactic:this.tactic,origin:"constants",context:this.context,checkContext:this.checkContext,kernel:this,strictIntegers:this.strictIntegers,onRequestTexture:()=>{return this.createTexture()},onRequestIndex:()=>{return textureIndexes++},onRequestContextHandle:()=>{return gl2.TEXTURE0+this.constantTextureCount++}});this.constantBitRatios[name2]=kernelValue.bitRatio;this.kernelConstants.push(kernelValue);kernelValue.setup();if(kernelValue.forceUploadEachRun){this.forceUploadKernelConstants.push(kernelValue)}}}build(){if(this.built)return;this.initExtensions();this.validateSettings(arguments);this.setupConstants(arguments);if(this.fallbackRequested)return;this.setupArguments(arguments);if(this.fallbackRequested)return;this.updateMaxTexSize();this.translateSource();const failureResult=this.pickRenderStrategy(arguments);if(failureResult){return failureResult}const{texSize,context:gl2,canvas}=this;gl2.enable(gl2.SCISSOR_TEST);if(this.pipeline&&this.precision==="single"){gl2.viewport(0,0,this.maxTexSize[0],this.maxTexSize[1]);canvas.width=this.maxTexSize[0];canvas.height=this.maxTexSize[1]}else{gl2.viewport(0,0,this.maxTexSize[0],this.maxTexSize[1]);canvas.width=this.maxTexSize[0];canvas.height=this.maxTexSize[1]}const threadDim=this.threadDim=Array.from(this.output);while(threadDim.length<3){threadDim.push(1)}const compiledVertexShader=this.getVertexShader(arguments);const vertShader=gl2.createShader(gl2.VERTEX_SHADER);gl2.shaderSource(vertShader,compiledVertexShader);gl2.compileShader(vertShader);this.vertShader=vertShader;const compiledFragmentShader=this.getFragmentShader(arguments);const fragShader=gl2.createShader(gl2.FRAGMENT_SHADER);gl2.shaderSource(fragShader,compiledFragmentShader);gl2.compileShader(fragShader);this.fragShader=fragShader;if(this.debug){console.log("GLSL Shader Output:");console.log(compiledFragmentShader)}if(!gl2.getShaderParameter(vertShader,gl2.COMPILE_STATUS)){throw new Error("Error compiling vertex shader: "+gl2.getShaderInfoLog(vertShader))}if(!gl2.getShaderParameter(fragShader,gl2.COMPILE_STATUS)){throw new Error("Error compiling fragment shader: "+gl2.getShaderInfoLog(fragShader))}const program=this.program=gl2.createProgram();gl2.attachShader(program,vertShader);gl2.attachShader(program,fragShader);gl2.linkProgram(program);this.framebuffer=gl2.createFramebuffer();this.framebuffer.width=texSize[0];this.framebuffer.height=texSize[1];this.rawValueFramebuffers={};const vertices=new Float32Array([-1,-1,1,-1,-1,1,1,1]);const texCoords=new Float32Array([0,0,1,0,0,1,1,1]);const texCoordOffset=vertices.byteLength;let buffer=this.buffer;if(!buffer){buffer=this.buffer=gl2.createBuffer();gl2.bindBuffer(gl2.ARRAY_BUFFER,buffer);gl2.bufferData(gl2.ARRAY_BUFFER,vertices.byteLength+texCoords.byteLength,gl2.STATIC_DRAW)}else{gl2.bindBuffer(gl2.ARRAY_BUFFER,buffer)}gl2.bufferSubData(gl2.ARRAY_BUFFER,0,vertices);gl2.bufferSubData(gl2.ARRAY_BUFFER,texCoordOffset,texCoords);const aPosLoc=gl2.getAttribLocation(this.program,"aPos");gl2.enableVertexAttribArray(aPosLoc);gl2.vertexAttribPointer(aPosLoc,2,gl2.FLOAT,false,0,0);const aTexCoordLoc=gl2.getAttribLocation(this.program,"aTexCoord");gl2.enableVertexAttribArray(aTexCoordLoc);gl2.vertexAttribPointer(aTexCoordLoc,2,gl2.FLOAT,false,0,texCoordOffset);gl2.bindFramebuffer(gl2.FRAMEBUFFER,this.framebuffer);let i=0;gl2.useProgram(this.program);for(let p in this.constants){this.kernelConstants[i++].updateValue(this.constants[p])}this._setupOutputTexture();if(this.subKernels!==null&&this.subKernels.length>0){this._mappedTextureSwitched={};this._setupSubOutputTextures()}this.buildSignature(arguments);this.built=true}translateSource(){const functionBuilder=FunctionBuilder.fromKernel(this,WebGLFunctionNode,{fixIntegerDivisionAccuracy:this.fixIntegerDivisionAccuracy});this.translatedSource=functionBuilder.getPrototypeString("kernel");this.setupReturnTypes(functionBuilder)}setupReturnTypes(functionBuilder){if(!this.graphical&&!this.returnType){this.returnType=functionBuilder.getKernelResultType()}if(this.subKernels&&this.subKernels.length>0){for(let i=0;i<this.subKernels.length;i++){const subKernel=this.subKernels[i];if(!subKernel.returnType){subKernel.returnType=functionBuilder.getSubKernelResultType(i)}}}}run(){const{kernelArguments,texSize,forceUploadKernelConstants,context:gl2}=this;gl2.useProgram(this.program);gl2.scissor(0,0,texSize[0],texSize[1]);if(this.dynamicOutput){this.setUniform3iv("uOutputDim",new Int32Array(this.threadDim));this.setUniform2iv("uTexSize",texSize)}this.setUniform2f("ratio",texSize[0]/this.maxTexSize[0],texSize[1]/this.maxTexSize[1]);for(let i=0;i<forceUploadKernelConstants.length;i++){const constant=forceUploadKernelConstants[i];constant.updateValue(this.constants[constant.name]);if(this.switchingKernels)return}for(let i=0;i<kernelArguments.length;i++){kernelArguments[i].updateValue(arguments[i]);if(this.switchingKernels)return}if(this.plugins){for(let i=0;i<this.plugins.length;i++){const plugin=this.plugins[i];if(plugin.onBeforeRun){plugin.onBeforeRun(this)}}}if(this.graphical){if(this.pipeline){gl2.bindRenderbuffer(gl2.RENDERBUFFER,null);gl2.bindFramebuffer(gl2.FRAMEBUFFER,this.framebuffer);if(this.immutable){this._replaceOutputTexture()}gl2.drawArrays(gl2.TRIANGLE_STRIP,0,4);return this.immutable?this.texture.clone():this.texture}gl2.bindRenderbuffer(gl2.RENDERBUFFER,null);gl2.bindFramebuffer(gl2.FRAMEBUFFER,null);gl2.drawArrays(gl2.TRIANGLE_STRIP,0,4);return}gl2.bindFramebuffer(gl2.FRAMEBUFFER,this.framebuffer);if(this.immutable){this._replaceOutputTexture()}if(this.subKernels!==null){if(this.immutable){this._replaceSubOutputTextures()}this.drawBuffers()}gl2.drawArrays(gl2.TRIANGLE_STRIP,0,4)}drawBuffers(){this.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(this.drawBuffersMap)}getInternalFormat(){return this.context.RGBA}getTextureFormat(){const{context:gl2}=this;switch(this.getInternalFormat()){case gl2.RGBA:return gl2.RGBA;default:throw new Error("Unknown internal format")}}_replaceOutputTexture(){if(this.texture.beforeMutate()||this._textureSwitched){const gl2=this.context;gl2.framebufferTexture2D(gl2.FRAMEBUFFER,gl2.COLOR_ATTACHMENT0,gl2.TEXTURE_2D,this.texture.texture,0);this._textureSwitched=false}}_setupOutputTexture(){const gl2=this.context;const texSize=this.texSize;if(this.texture){gl2.framebufferTexture2D(gl2.FRAMEBUFFER,gl2.COLOR_ATTACHMENT0,gl2.TEXTURE_2D,this.texture.texture,0);return}const texture=this.createTexture();gl2.activeTexture(gl2.TEXTURE0+this.constantTextureCount+this.argumentTextureCount);gl2.bindTexture(gl2.TEXTURE_2D,texture);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_WRAP_S,gl2.CLAMP_TO_EDGE);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_WRAP_T,gl2.CLAMP_TO_EDGE);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_MIN_FILTER,gl2.NEAREST);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_MAG_FILTER,gl2.NEAREST);const format=this.getInternalFormat();if(this.precision==="single"){gl2.texImage2D(gl2.TEXTURE_2D,0,format,texSize[0],texSize[1],0,gl2.RGBA,gl2.FLOAT,null)}else{gl2.texImage2D(gl2.TEXTURE_2D,0,format,texSize[0],texSize[1],0,format,gl2.UNSIGNED_BYTE,null)}gl2.framebufferTexture2D(gl2.FRAMEBUFFER,gl2.COLOR_ATTACHMENT0,gl2.TEXTURE_2D,texture,0);this.texture=new this.TextureConstructor({texture,size:texSize,dimensions:this.threadDim,output:this.output,context:this.context,internalFormat:this.getInternalFormat(),textureFormat:this.getTextureFormat(),kernel:this})}_replaceSubOutputTextures(){const gl2=this.context;for(let i=0;i<this.mappedTextures.length;i++){const mappedTexture=this.mappedTextures[i];if(mappedTexture.beforeMutate()||this._mappedTextureSwitched[i]){gl2.framebufferTexture2D(gl2.FRAMEBUFFER,gl2.COLOR_ATTACHMENT0+i+1,gl2.TEXTURE_2D,mappedTexture.texture,0);this._mappedTextureSwitched[i]=false}}}_setupSubOutputTextures(){const gl2=this.context;if(this.mappedTextures){for(let i=0;i<this.subKernels.length;i++){gl2.framebufferTexture2D(gl2.FRAMEBUFFER,gl2.COLOR_ATTACHMENT0+i+1,gl2.TEXTURE_2D,this.mappedTextures[i].texture,0)}return}const texSize=this.texSize;this.drawBuffersMap=[gl2.COLOR_ATTACHMENT0];this.mappedTextures=[];for(let i=0;i<this.subKernels.length;i++){const texture=this.createTexture();this.drawBuffersMap.push(gl2.COLOR_ATTACHMENT0+i+1);gl2.activeTexture(gl2.TEXTURE0+this.constantTextureCount+this.argumentTextureCount+i);gl2.bindTexture(gl2.TEXTURE_2D,texture);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_WRAP_S,gl2.CLAMP_TO_EDGE);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_WRAP_T,gl2.CLAMP_TO_EDGE);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_MIN_FILTER,gl2.NEAREST);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_MAG_FILTER,gl2.NEAREST);if(this.precision==="single"){gl2.texImage2D(gl2.TEXTURE_2D,0,gl2.RGBA,texSize[0],texSize[1],0,gl2.RGBA,gl2.FLOAT,null)}else{gl2.texImage2D(gl2.TEXTURE_2D,0,gl2.RGBA,texSize[0],texSize[1],0,gl2.RGBA,gl2.UNSIGNED_BYTE,null)}gl2.framebufferTexture2D(gl2.FRAMEBUFFER,gl2.COLOR_ATTACHMENT0+i+1,gl2.TEXTURE_2D,texture,0);this.mappedTextures.push(new this.TextureConstructor({texture,size:texSize,dimensions:this.threadDim,output:this.output,context:this.context,internalFormat:this.getInternalFormat(),textureFormat:this.getTextureFormat(),kernel:this}))}}setUniform1f(name2,value2){if(this.uniform1fCache.hasOwnProperty(name2)){const cache=this.uniform1fCache[name2];if(value2===cache){return}}this.uniform1fCache[name2]=value2;const loc=this.getUniformLocation(name2);this.context.uniform1f(loc,value2)}setUniform1i(name2,value2){if(this.uniform1iCache.hasOwnProperty(name2)){const cache=this.uniform1iCache[name2];if(value2===cache){return}}this.uniform1iCache[name2]=value2;const loc=this.getUniformLocation(name2);this.context.uniform1i(loc,value2)}setUniform2f(name2,value1,value2){if(this.uniform2fCache.hasOwnProperty(name2)){const cache=this.uniform2fCache[name2];if(value1===cache[0]&&value2===cache[1]){return}}this.uniform2fCache[name2]=[value1,value2];const loc=this.getUniformLocation(name2);this.context.uniform2f(loc,value1,value2)}setUniform2fv(name2,value2){if(this.uniform2fvCache.hasOwnProperty(name2)){const cache=this.uniform2fvCache[name2];if(value2[0]===cache[0]&&value2[1]===cache[1]){return}}this.uniform2fvCache[name2]=value2;const loc=this.getUniformLocation(name2);this.context.uniform2fv(loc,value2)}setUniform2iv(name2,value2){if(this.uniform2ivCache.hasOwnProperty(name2)){const cache=this.uniform2ivCache[name2];if(value2[0]===cache[0]&&value2[1]===cache[1]){return}}this.uniform2ivCache[name2]=value2;const loc=this.getUniformLocation(name2);this.context.uniform2iv(loc,value2)}setUniform3fv(name2,value2){if(this.uniform3fvCache.hasOwnProperty(name2)){const cache=this.uniform3fvCache[name2];if(value2[0]===cache[0]&&value2[1]===cache[1]&&value2[2]===cache[2]){return}}this.uniform3fvCache[name2]=value2;const loc=this.getUniformLocation(name2);this.context.uniform3fv(loc,value2)}setUniform3iv(name2,value2){if(this.uniform3ivCache.hasOwnProperty(name2)){const cache=this.uniform3ivCache[name2];if(value2[0]===cache[0]&&value2[1]===cache[1]&&value2[2]===cache[2]){return}}this.uniform3ivCache[name2]=value2;const loc=this.getUniformLocation(name2);this.context.uniform3iv(loc,value2)}setUniform4fv(name2,value2){if(this.uniform4fvCache.hasOwnProperty(name2)){const cache=this.uniform4fvCache[name2];if(value2[0]===cache[0]&&value2[1]===cache[1]&&value2[2]===cache[2]&&value2[3]===cache[3]){return}}this.uniform4fvCache[name2]=value2;const loc=this.getUniformLocation(name2);this.context.uniform4fv(loc,value2)}setUniform4iv(name2,value2){if(this.uniform4ivCache.hasOwnProperty(name2)){const cache=this.uniform4ivCache[name2];if(value2[0]===cache[0]&&value2[1]===cache[1]&&value2[2]===cache[2]&&value2[3]===cache[3]){return}}this.uniform4ivCache[name2]=value2;const loc=this.getUniformLocation(name2);this.context.uniform4iv(loc,value2)}getUniformLocation(name2){if(this.programUniformLocationCache.hasOwnProperty(name2)){return this.programUniformLocationCache[name2]}return this.programUniformLocationCache[name2]=this.context.getUniformLocation(this.program,name2)}_getFragShaderArtifactMap(args){return{HEADER:this._getHeaderString(),LOOP_MAX:this._getLoopMaxString(),PLUGINS:this._getPluginsString(),CONSTANTS:this._getConstantsString(),DECODE32_ENDIANNESS:this._getDecode32EndiannessString(),ENCODE32_ENDIANNESS:this._getEncode32EndiannessString(),DIVIDE_WITH_INTEGER_CHECK:this._getDivideWithIntegerCheckString(),INJECTED_NATIVE:this._getInjectedNative(),MAIN_CONSTANTS:this._getMainConstantsString(),MAIN_ARGUMENTS:this._getMainArgumentsString(args),KERNEL:this.getKernelString(),MAIN_RESULT:this.getMainResultString(),FLOAT_TACTIC_DECLARATION:this.getFloatTacticDeclaration(),INT_TACTIC_DECLARATION:this.getIntTacticDeclaration(),SAMPLER_2D_TACTIC_DECLARATION:this.getSampler2DTacticDeclaration(),SAMPLER_2D_ARRAY_TACTIC_DECLARATION:this.getSampler2DArrayTacticDeclaration()}}_getVertShaderArtifactMap(args){return{FLOAT_TACTIC_DECLARATION:this.getFloatTacticDeclaration(),INT_TACTIC_DECLARATION:this.getIntTacticDeclaration(),SAMPLER_2D_TACTIC_DECLARATION:this.getSampler2DTacticDeclaration(),SAMPLER_2D_ARRAY_TACTIC_DECLARATION:this.getSampler2DArrayTacticDeclaration()}}_getHeaderString(){return this.subKernels!==null?"#extension GL_EXT_draw_buffers : require\\n":""}_getLoopMaxString(){return this.loopMaxIterations?` ${parseInt(this.loopMaxIterations)};\n`:" 1000;\\n"}_getPluginsString(){if(!this.plugins)return"\\n";return this.plugins.map(plugin=>plugin.source&&this.source.match(plugin.functionMatch)?plugin.source:"").join("\\n")}_getConstantsString(){const result=[];const{threadDim,texSize}=this;if(this.dynamicOutput){result.push("uniform ivec3 uOutputDim","uniform ivec2 uTexSize")}else{result.push(`ivec3 uOutputDim = ivec3(${threadDim[0]}, ${threadDim[1]}, ${threadDim[2]})`,`ivec2 uTexSize = ivec2(${texSize[0]}, ${texSize[1]})`)}return utils.linesToString(result)}_getTextureCoordinate(){const subKernels=this.subKernels;if(subKernels===null||subKernels.length<1){return"varying vec2 vTexCoord;\\n"}else{return"out vec2 vTexCoord;\\n"}}_getDecode32EndiannessString(){return this.endianness==="LE"?"":"  texel.rgba = texel.abgr;\\n"}_getEncode32EndiannessString(){return this.endianness==="LE"?"":"  texel.rgba = texel.abgr;\\n"}_getDivideWithIntegerCheckString(){return this.fixIntegerDivisionAccuracy?`float divWithIntCheck(float x, float y) {\n        if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\n          return float(int(x) / int(y));\n        }\n        return x / y;\n      }\n      \n      float integerCorrectionModulo(float number, float divisor) {\n        if (number < 0.0) {\n          number = abs(number);\n          if (divisor < 0.0) {\n            divisor = abs(divisor);\n          }\n          return -(number - (divisor * floor(divWithIntCheck(number, divisor))));\n        }\n        if (divisor < 0.0) {\n          divisor = abs(divisor);\n        }\n        return number - (divisor * floor(divWithIntCheck(number, divisor)));\n      }`:""}_getMainArgumentsString(args){const results=[];const{argumentNames}=this;for(let i=0;i<argumentNames.length;i++){results.push(this.kernelArguments[i].getSource(args[i]))}return results.join("")}_getInjectedNative(){return this.injectedNative||""}_getMainConstantsString(){const result=[];const{constants}=this;if(constants){let i=0;for(const name2 in constants){if(!this.constants.hasOwnProperty(name2))continue;result.push(this.kernelConstants[i++].getSource(this.constants[name2]))}}return result.join("")}getRawValueFramebuffer(width,height){if(!this.rawValueFramebuffers[width]){this.rawValueFramebuffers[width]={}}if(!this.rawValueFramebuffers[width][height]){const framebuffer=this.context.createFramebuffer();framebuffer.width=width;framebuffer.height=height;this.rawValueFramebuffers[width][height]=framebuffer}return this.rawValueFramebuffers[width][height]}getKernelResultDeclaration(){switch(this.returnType){case"Array(2)":return"vec2 kernelResult";case"Array(3)":return"vec3 kernelResult";case"Array(4)":return"vec4 kernelResult";case"LiteralInteger":case"Float":case"Number":case"Integer":return"float kernelResult";default:if(this.graphical){return"float kernelResult"}else{throw new Error(`unrecognized output type "${this.returnType}"`)}}}getKernelString(){const result=[this.getKernelResultDeclaration()];const{subKernels}=this;if(subKernels!==null){switch(this.returnType){case"Number":case"Float":case"Integer":for(let i=0;i<subKernels.length;i++){const subKernel=subKernels[i];result.push(subKernel.returnType==="Integer"?`int subKernelResult_${subKernel.name} = 0`:`float subKernelResult_${subKernel.name} = 0.0`)}break;case"Array(2)":for(let i=0;i<subKernels.length;i++){result.push(`vec2 subKernelResult_${subKernels[i].name}`)}break;case"Array(3)":for(let i=0;i<subKernels.length;i++){result.push(`vec3 subKernelResult_${subKernels[i].name}`)}break;case"Array(4)":for(let i=0;i<subKernels.length;i++){result.push(`vec4 subKernelResult_${subKernels[i].name}`)}break}}return utils.linesToString(result)+this.translatedSource}getMainResultGraphical(){return utils.linesToString(["  threadId = indexTo3D(index, uOutputDim)","  kernel()","  gl_FragColor = actualColor"])}getMainResultPackedPixels(){switch(this.returnType){case"LiteralInteger":case"Number":case"Integer":case"Float":return this.getMainResultKernelPackedPixels()+this.getMainResultSubKernelPackedPixels();default:throw new Error(`packed output only usable with Numbers, "${this.returnType}" specified`)}}getMainResultKernelPackedPixels(){return utils.linesToString(["  threadId = indexTo3D(index, uOutputDim)","  kernel()",`  gl_FragData[0] = ${this.useLegacyEncoder?"legacyEncode32":"encode32"}(kernelResult)`])}getMainResultSubKernelPackedPixels(){const result=[];if(!this.subKernels)return"";for(let i=0;i<this.subKernels.length;i++){const subKernel=this.subKernels[i];if(subKernel.returnType==="Integer"){result.push(`  gl_FragData[${i+1}] = ${this.useLegacyEncoder?"legacyEncode32":"encode32"}(float(subKernelResult_${this.subKernels[i].name}))`)}else{result.push(`  gl_FragData[${i+1}] = ${this.useLegacyEncoder?"legacyEncode32":"encode32"}(subKernelResult_${this.subKernels[i].name})`)}}return utils.linesToString(result)}getMainResultMemoryOptimizedFloats(){const result=["  index *= 4"];switch(this.returnType){case"Number":case"Integer":case"Float":const channels=["r","g","b","a"];for(let i=0;i<channels.length;i++){const channel=channels[i];this.getMainResultKernelMemoryOptimizedFloats(result,channel);this.getMainResultSubKernelMemoryOptimizedFloats(result,channel);if(i+1<channels.length){result.push("  index += 1")}}break;default:throw new Error(`optimized output only usable with Numbers, ${this.returnType} specified`)}return utils.linesToString(result)}getMainResultKernelMemoryOptimizedFloats(result,channel){result.push("  threadId = indexTo3D(index, uOutputDim)","  kernel()",`  gl_FragData[0].${channel} = kernelResult`)}getMainResultSubKernelMemoryOptimizedFloats(result,channel){if(!this.subKernels)return result;for(let i=0;i<this.subKernels.length;i++){const subKernel=this.subKernels[i];if(subKernel.returnType==="Integer"){result.push(`  gl_FragData[${i+1}].${channel} = float(subKernelResult_${this.subKernels[i].name})`)}else{result.push(`  gl_FragData[${i+1}].${channel} = subKernelResult_${this.subKernels[i].name}`)}}}getMainResultKernelNumberTexture(){return["  threadId = indexTo3D(index, uOutputDim)","  kernel()","  gl_FragData[0][0] = kernelResult"]}getMainResultSubKernelNumberTexture(){const result=[];if(!this.subKernels)return result;for(let i=0;i<this.subKernels.length;++i){const subKernel=this.subKernels[i];if(subKernel.returnType==="Integer"){result.push(`  gl_FragData[${i+1}][0] = float(subKernelResult_${subKernel.name})`)}else{result.push(`  gl_FragData[${i+1}][0] = subKernelResult_${subKernel.name}`)}}return result}getMainResultKernelArray2Texture(){return["  threadId = indexTo3D(index, uOutputDim)","  kernel()","  gl_FragData[0][0] = kernelResult[0]","  gl_FragData[0][1] = kernelResult[1]"]}getMainResultSubKernelArray2Texture(){const result=[];if(!this.subKernels)return result;for(let i=0;i<this.subKernels.length;++i){result.push(`  gl_FragData[${i+1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,`  gl_FragData[${i+1}][1] = subKernelResult_${this.subKernels[i].name}[1]`)}return result}getMainResultKernelArray3Texture(){return["  threadId = indexTo3D(index, uOutputDim)","  kernel()","  gl_FragData[0][0] = kernelResult[0]","  gl_FragData[0][1] = kernelResult[1]","  gl_FragData[0][2] = kernelResult[2]"]}getMainResultSubKernelArray3Texture(){const result=[];if(!this.subKernels)return result;for(let i=0;i<this.subKernels.length;++i){result.push(`  gl_FragData[${i+1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,`  gl_FragData[${i+1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,`  gl_FragData[${i+1}][2] = subKernelResult_${this.subKernels[i].name}[2]`)}return result}getMainResultKernelArray4Texture(){return["  threadId = indexTo3D(index, uOutputDim)","  kernel()","  gl_FragData[0] = kernelResult"]}getMainResultSubKernelArray4Texture(){const result=[];if(!this.subKernels)return result;switch(this.returnType){case"Number":case"Float":case"Integer":for(let i=0;i<this.subKernels.length;++i){const subKernel=this.subKernels[i];if(subKernel.returnType==="Integer"){result.push(`  gl_FragData[${i+1}] = float(subKernelResult_${this.subKernels[i].name})`)}else{result.push(`  gl_FragData[${i+1}] = subKernelResult_${this.subKernels[i].name}`)}}break;case"Array(2)":for(let i=0;i<this.subKernels.length;++i){result.push(`  gl_FragData[${i+1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,`  gl_FragData[${i+1}][1] = subKernelResult_${this.subKernels[i].name}[1]`)}break;case"Array(3)":for(let i=0;i<this.subKernels.length;++i){result.push(`  gl_FragData[${i+1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,`  gl_FragData[${i+1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,`  gl_FragData[${i+1}][2] = subKernelResult_${this.subKernels[i].name}[2]`)}break;case"Array(4)":for(let i=0;i<this.subKernels.length;++i){result.push(`  gl_FragData[${i+1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,`  gl_FragData[${i+1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,`  gl_FragData[${i+1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,`  gl_FragData[${i+1}][3] = subKernelResult_${this.subKernels[i].name}[3]`)}break}return result}replaceArtifacts(src,map){return src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z]*[0-9]?)*)__;\\n/g,(match,artifact)=>{if(map.hasOwnProperty(artifact)){return map[artifact]}throw`unhandled artifact ${artifact}`})}getFragmentShader(args){if(this.compiledFragmentShader!==null){return this.compiledFragmentShader}return this.compiledFragmentShader=this.replaceArtifacts(this.constructor.fragmentShader,this._getFragShaderArtifactMap(args))}getVertexShader(args){if(this.compiledVertexShader!==null){return this.compiledVertexShader}return this.compiledVertexShader=this.replaceArtifacts(this.constructor.vertexShader,this._getVertShaderArtifactMap(args))}toString(){const setupContextString=utils.linesToString([`const gl = context`]);return glKernelString(this.constructor,arguments,this,setupContextString)}destroy(removeCanvasReferences){if(!this.context)return;if(this.buffer){this.context.deleteBuffer(this.buffer)}if(this.framebuffer){this.context.deleteFramebuffer(this.framebuffer)}for(const width in this.rawValueFramebuffers){for(const height in this.rawValueFramebuffers[width]){this.context.deleteFramebuffer(this.rawValueFramebuffers[width][height]);delete this.rawValueFramebuffers[width][height]}delete this.rawValueFramebuffers[width]}if(this.vertShader){this.context.deleteShader(this.vertShader)}if(this.fragShader){this.context.deleteShader(this.fragShader)}if(this.program){this.context.deleteProgram(this.program)}if(this.texture){this.texture.delete();const textureCacheIndex=this.textureCache.indexOf(this.texture.texture);if(textureCacheIndex>-1){this.textureCache.splice(textureCacheIndex,1)}this.texture=null}if(this.mappedTextures&&this.mappedTextures.length){for(let i2=0;i2<this.mappedTextures.length;i2++){const mappedTexture=this.mappedTextures[i2];mappedTexture.delete();const textureCacheIndex=this.textureCache.indexOf(mappedTexture.texture);if(textureCacheIndex>-1){this.textureCache.splice(textureCacheIndex,1)}}this.mappedTextures=null}if(this.kernelArguments){for(let i2=0;i2<this.kernelArguments.length;i2++){this.kernelArguments[i2].destroy()}}if(this.kernelConstants){for(let i2=0;i2<this.kernelConstants.length;i2++){this.kernelConstants[i2].destroy()}}while(this.textureCache.length>0){const texture=this.textureCache.pop();this.context.deleteTexture(texture)}if(removeCanvasReferences){const idx=canvases.indexOf(this.canvas);if(idx>=0){canvases[idx]=null;maxTexSizes[idx]=null}}this.destroyExtensions();delete this.context;delete this.canvas;if(!this.gpu)return;const i=this.gpu.kernels.indexOf(this);if(i===-1)return;this.gpu.kernels.splice(i,1)}destroyExtensions(){this.extensions.OES_texture_float=null;this.extensions.OES_texture_float_linear=null;this.extensions.OES_element_index_uint=null;this.extensions.WEBGL_draw_buffers=null}static destroyContext(context){const extension=context.getExtension("WEBGL_lose_context");if(extension){extension.loseContext()}}toJSON(){const json=super.toJSON();json.functionNodes=FunctionBuilder.fromKernel(this,WebGLFunctionNode).toJSON();json.settings.threadDim=this.threadDim;return json}}module3.exports={WebGLKernel}},{"../../plugins/math-random-uniformly-distributed":112,"../../utils":114,"../function-builder":9,"../gl/kernel":13,"../gl/kernel-string":12,"./fragment-shader":37,"./function-node":38,"./kernel-value-maps":39,"./vertex-shader":71}],71:[function(require2,module3,exports3){const vertexShader=`__FLOAT_TACTIC_DECLARATION__;\n      __INT_TACTIC_DECLARATION__;\n      __SAMPLER_2D_TACTIC_DECLARATION__;\n      \n      attribute vec2 aPos;\n      attribute vec2 aTexCoord;\n      \n      varying vec2 vTexCoord;\n      uniform vec2 ratio;\n      \n      void main(void) {\n        gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n        vTexCoord = aTexCoord;\n      }`;module3.exports={vertexShader}},{}],72:[function(require2,module3,exports3){const fragmentShader=`#version 300 es\n      __HEADER__;\n      __FLOAT_TACTIC_DECLARATION__;\n      __INT_TACTIC_DECLARATION__;\n      __SAMPLER_2D_TACTIC_DECLARATION__;\n      __SAMPLER_2D_ARRAY_TACTIC_DECLARATION__;\n      \n      const int LOOP_MAX = __LOOP_MAX__;\n      \n      __PLUGINS__;\n      __CONSTANTS__;\n      \n      in vec2 vTexCoord;\n      \n      float atan2(float v1, float v2) {\n        if (v1 == 0.0 || v2 == 0.0) return 0.0;\n        return atan(v1 / v2);\n      }\n      \n      float cbrt(float x) {\n        if (x >= 0.0) {\n          return pow(x, 1.0 / 3.0);\n        } else {\n          return -pow(x, 1.0 / 3.0);\n        }\n      }\n      \n      float expm1(float x) {\n        return pow(${Math.E}, x) - 1.0; \n      }\n      \n      float fround(highp float x) {\n        return x;\n      }\n      \n      float imul(float v1, float v2) {\n        return float(int(v1) * int(v2));\n      }\n      \n      float log10(float x) {\n        return log2(x) * (1.0 / log2(10.0));\n      }\n      \n      float log1p(float x) {\n        return log(1.0 + x);\n      }\n      \n      float _pow(float v1, float v2) {\n        if (v2 == 0.0) return 1.0;\n        return pow(v1, v2);\n      }\n      \n      float _round(float x) {\n        return floor(x + 0.5);\n      }\n      \n      \n      const int BIT_COUNT = 32;\n      int modi(int x, int y) {\n        return x - y * (x / y);\n      }\n      \n      int bitwiseOr(int a, int b) {\n        int result = 0;\n        int n = 1;\n        \n        for (int i = 0; i < BIT_COUNT; i++) {\n          if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n            result += n;\n          }\n          a = a / 2;\n          b = b / 2;\n          n = n * 2;\n          if(!(a > 0 || b > 0)) {\n            break;\n          }\n        }\n        return result;\n      }\n      int bitwiseXOR(int a, int b) {\n        int result = 0;\n        int n = 1;\n        \n        for (int i = 0; i < BIT_COUNT; i++) {\n          if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n            result += n;\n          }\n          a = a / 2;\n          b = b / 2;\n          n = n * 2;\n          if(!(a > 0 || b > 0)) {\n            break;\n          }\n        }\n        return result;\n      }\n      int bitwiseAnd(int a, int b) {\n        int result = 0;\n        int n = 1;\n        for (int i = 0; i < BIT_COUNT; i++) {\n          if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n            result += n;\n          }\n          a = a / 2;\n          b = b / 2;\n          n = n * 2;\n          if(!(a > 0 && b > 0)) {\n            break;\n          }\n        }\n        return result;\n      }\n      int bitwiseNot(int a) {\n        int result = 0;\n        int n = 1;\n        \n        for (int i = 0; i < BIT_COUNT; i++) {\n          if (modi(a, 2) == 0) {\n            result += n;    \n          }\n          a = a / 2;\n          n = n * 2;\n        }\n        return result;\n      }\n      int bitwiseZeroFillLeftShift(int n, int shift) {\n        int maxBytes = BIT_COUNT;\n        for (int i = 0; i < BIT_COUNT; i++) {\n          if (maxBytes >= n) {\n            break;\n          }\n          maxBytes *= 2;\n        }\n        for (int i = 0; i < BIT_COUNT; i++) {\n          if (i >= shift) {\n            break;\n          }\n          n *= 2;\n        }\n      \n        int result = 0;\n        int byteVal = 1;\n        for (int i = 0; i < BIT_COUNT; i++) {\n          if (i >= maxBytes) break;\n          if (modi(n, 2) > 0) { result += byteVal; }\n          n = int(n / 2);\n          byteVal *= 2;\n        }\n        return result;\n      }\n      \n      int bitwiseSignedRightShift(int num, int shifts) {\n        return int(floor(float(num) / pow(2.0, float(shifts))));\n      }\n      \n      int bitwiseZeroFillRightShift(int n, int shift) {\n        int maxBytes = BIT_COUNT;\n        for (int i = 0; i < BIT_COUNT; i++) {\n          if (maxBytes >= n) {\n            break;\n          }\n          maxBytes *= 2;\n        }\n        for (int i = 0; i < BIT_COUNT; i++) {\n          if (i >= shift) {\n            break;\n          }\n          n /= 2;\n        }\n        int result = 0;\n        int byteVal = 1;\n        for (int i = 0; i < BIT_COUNT; i++) {\n          if (i >= maxBytes) break;\n          if (modi(n, 2) > 0) { result += byteVal; }\n          n = int(n / 2);\n          byteVal *= 2;\n        }\n        return result;\n      }\n      \n      vec2 integerMod(vec2 x, float y) {\n        vec2 res = floor(mod(x, y));\n        return res * step(1.0 - floor(y), -res);\n      }\n      \n      vec3 integerMod(vec3 x, float y) {\n        vec3 res = floor(mod(x, y));\n        return res * step(1.0 - floor(y), -res);\n      }\n      \n      vec4 integerMod(vec4 x, vec4 y) {\n        vec4 res = floor(mod(x, y));\n        return res * step(1.0 - floor(y), -res);\n      }\n      \n      float integerMod(float x, float y) {\n        float res = floor(mod(x, y));\n        return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n      }\n      \n      int integerMod(int x, int y) {\n        return x - (y * int(x/y));\n      }\n      \n      __DIVIDE_WITH_INTEGER_CHECK__;\n      \n      // Here be dragons!\n      // DO NOT OPTIMIZE THIS CODE\n      // YOU WILL BREAK SOMETHING ON SOMEBODY\'S MACHINE\n      // LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\n      const vec2 MAGIC_VEC = vec2(1.0, -256.0);\n      const vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\n      const vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\n      float decode32(vec4 texel) {\n        __DECODE32_ENDIANNESS__;\n        texel *= 255.0;\n        vec2 gte128;\n        gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n        gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n        float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n        float res = exp2(round(exponent));\n        texel.b = texel.b - 128.0 * gte128.x;\n        res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n        res *= gte128.y * -2.0 + 1.0;\n        return res;\n      }\n      \n      float decode16(vec4 texel, int index) {\n        int channel = integerMod(index, 2);\n        return texel[channel*2] * 255.0 + texel[channel*2 + 1] * 65280.0;\n      }\n      \n      float decode8(vec4 texel, int index) {\n        int channel = integerMod(index, 4);\n        return texel[channel] * 255.0;\n      }\n      \n      vec4 legacyEncode32(float f) {\n        float F = abs(f);\n        float sign = f < 0.0 ? 1.0 : 0.0;\n        float exponent = floor(log2(F));\n        float mantissa = (exp2(-exponent) * F);\n        // exponent += floor(log2(mantissa));\n        vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n        texel.rg = integerMod(texel.rg, 256.0);\n        texel.b = integerMod(texel.b, 128.0);\n        texel.a = exponent*0.5 + 63.5;\n        texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n        texel = floor(texel);\n        texel *= 0.003921569; // 1/255\n        __ENCODE32_ENDIANNESS__;\n        return texel;\n      }\n      \n      // https://github.com/gpujs/gpu.js/wiki/Encoder-details\n      vec4 encode32(float value) {\n        if (value == 0.0) return vec4(0, 0, 0, 0);\n      \n        float exponent;\n        float mantissa;\n        vec4  result;\n        float sgn;\n      \n        sgn = step(0.0, -value);\n        value = abs(value);\n      \n        exponent = floor(log2(value));\n      \n        mantissa = value*pow(2.0, -exponent)-1.0;\n        exponent = exponent+127.0;\n        result   = vec4(0,0,0,0);\n      \n        result.a = floor(exponent/2.0);\n        exponent = exponent - result.a*2.0;\n        result.a = result.a + 128.0*sgn;\n      \n        result.b = floor(mantissa * 128.0);\n        mantissa = mantissa - result.b / 128.0;\n        result.b = result.b + exponent*128.0;\n      \n        result.g = floor(mantissa*32768.0);\n        mantissa = mantissa - result.g/32768.0;\n      \n        result.r = floor(mantissa*8388608.0);\n        return result/255.0;\n      }\n      // Dragons end here\n      \n      int index;\n      ivec3 threadId;\n      \n      ivec3 indexTo3D(int idx, ivec3 texDim) {\n        int z = int(idx / (texDim.x * texDim.y));\n        idx -= z * int(texDim.x * texDim.y);\n        int y = int(idx / texDim.x);\n        int x = int(integerMod(idx, texDim.x));\n        return ivec3(x, y, z);\n      }\n      \n      float get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        int index = x + texDim.x * (y + texDim.y * z);\n        int w = texSize.x;\n        vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n        vec4 texel = texture(tex, st / vec2(texSize));\n        return decode32(texel);\n      }\n      \n      float get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        int index = x + (texDim.x * (y + (texDim.y * z)));\n        int w = texSize.x * 2;\n        vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n        vec4 texel = texture(tex, st / vec2(texSize.x * 2, texSize.y));\n        return decode16(texel, index);\n      }\n      \n      float get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        int index = x + (texDim.x * (y + (texDim.y * z)));\n        int w = texSize.x * 4;\n        vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n        vec4 texel = texture(tex, st / vec2(texSize.x * 4, texSize.y));\n        return decode8(texel, index);\n      }\n      \n      float getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        int index = x + (texDim.x * (y + (texDim.y * z)));\n        int channel = integerMod(index, 4);\n        index = index / 4;\n        int w = texSize.x;\n        vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n        index = index / 4;\n        vec4 texel = texture(tex, st / vec2(texSize));\n        return texel[channel];\n      }\n      \n      vec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        int index = x + texDim.x * (y + texDim.y * z);\n        int w = texSize.x;\n        vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n        return texture(tex, st / vec2(texSize));\n      }\n      \n      vec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        int index = x + texDim.x * (y + texDim.y * z);\n        int w = texSize.x;\n        vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n        return texture(tex, vec3(st / vec2(texSize), z));\n      }\n      \n      float getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n        return result[0];\n      }\n      \n      vec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n        return vec2(result[0], result[1]);\n      }\n      \n      vec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        int index = x + texDim.x * (y + texDim.y * z);\n        int channel = integerMod(index, 2);\n        index = index / 2;\n        int w = texSize.x;\n        vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n        vec4 texel = texture(tex, st / vec2(texSize));\n        if (channel == 0) return vec2(texel.r, texel.g);\n        if (channel == 1) return vec2(texel.b, texel.a);\n        return vec2(0.0, 0.0);\n      }\n      \n      vec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n        return vec3(result[0], result[1], result[2]);\n      }\n      \n      vec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n        int vectorIndex = fieldIndex / 4;\n        int vectorOffset = fieldIndex - vectorIndex * 4;\n        int readY = vectorIndex / texSize.x;\n        int readX = vectorIndex - readY * texSize.x;\n        vec4 tex1 = texture(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n      \n        if (vectorOffset == 0) {\n          return tex1.xyz;\n        } else if (vectorOffset == 1) {\n          return tex1.yzw;\n        } else {\n          readX++;\n          if (readX >= texSize.x) {\n            readX = 0;\n            readY++;\n          }\n          vec4 tex2 = texture(tex, vec2(readX, readY) / vec2(texSize));\n          if (vectorOffset == 2) {\n            return vec3(tex1.z, tex1.w, tex2.x);\n          } else {\n            return vec3(tex1.w, tex2.x, tex2.y);\n          }\n        }\n      }\n      \n      vec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        return getImage2D(tex, texSize, texDim, z, y, x);\n      }\n      \n      vec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n        int index = x + texDim.x * (y + texDim.y * z);\n        int channel = integerMod(index, 2);\n        int w = texSize.x;\n        vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n        vec4 texel = texture(tex, st / vec2(texSize));\n        return vec4(texel.r, texel.g, texel.b, texel.a);\n      }\n      \n      vec4 actualColor;\n      void color(float r, float g, float b, float a) {\n        actualColor = vec4(r,g,b,a);\n      }\n      \n      void color(float r, float g, float b) {\n        color(r,g,b,1.0);\n      }\n      \n      float modulo(float number, float divisor) {\n        if (number < 0.0) {\n          number = abs(number);\n          if (divisor < 0.0) {\n            divisor = abs(divisor);\n          }\n          return -mod(number, divisor);\n        }\n        if (divisor < 0.0) {\n          divisor = abs(divisor);\n        }\n        return mod(number, divisor);\n      }\n      \n      __INJECTED_NATIVE__;\n      __MAIN_CONSTANTS__;\n      __MAIN_ARGUMENTS__;\n      __KERNEL__;\n      \n      void main(void) {\n        index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n        __MAIN_RESULT__;\n      }`;module3.exports={fragmentShader}},{}],73:[function(require2,module3,exports3){const{utils}=require2("../../utils");const{WebGLFunctionNode}=require2("../web-gl/function-node");class WebGL2FunctionNode extends WebGLFunctionNode{astIdentifierExpression(idtNode,retArr){if(idtNode.type!=="Identifier"){throw this.astErrorOutput("IdentifierExpression - not an Identifier",idtNode)}const type=this.getType(idtNode);const name2=utils.sanitizeName(idtNode.name);if(idtNode.name==="Infinity"){retArr.push("intBitsToFloat(2139095039)")}else if(type==="Boolean"){if(this.argumentNames.indexOf(name2)>-1){retArr.push(`bool(user_${name2})`)}else{retArr.push(`user_${name2}`)}}else{retArr.push(`user_${name2}`)}return retArr}}module3.exports={WebGL2FunctionNode}},{"../../utils":114,"../web-gl/function-node":38}],74:[function(require2,module3,exports3){const{WebGL2KernelValueBoolean}=require2("./kernel-value/boolean");const{WebGL2KernelValueFloat}=require2("./kernel-value/float");const{WebGL2KernelValueInteger}=require2("./kernel-value/integer");const{WebGL2KernelValueHTMLImage}=require2("./kernel-value/html-image");const{WebGL2KernelValueDynamicHTMLImage}=require2("./kernel-value/dynamic-html-image");const{WebGL2KernelValueHTMLImageArray}=require2("./kernel-value/html-image-array");const{WebGL2KernelValueDynamicHTMLImageArray}=require2("./kernel-value/dynamic-html-image-array");const{WebGL2KernelValueHTMLVideo}=require2("./kernel-value/html-video");const{WebGL2KernelValueDynamicHTMLVideo}=require2("./kernel-value/dynamic-html-video");const{WebGL2KernelValueSingleInput}=require2("./kernel-value/single-input");const{WebGL2KernelValueDynamicSingleInput}=require2("./kernel-value/dynamic-single-input");const{WebGL2KernelValueUnsignedInput}=require2("./kernel-value/unsigned-input");const{WebGL2KernelValueDynamicUnsignedInput}=require2("./kernel-value/dynamic-unsigned-input");const{WebGL2KernelValueMemoryOptimizedNumberTexture}=require2("./kernel-value/memory-optimized-number-texture");const{WebGL2KernelValueDynamicMemoryOptimizedNumberTexture}=require2("./kernel-value/dynamic-memory-optimized-number-texture");const{WebGL2KernelValueNumberTexture}=require2("./kernel-value/number-texture");const{WebGL2KernelValueDynamicNumberTexture}=require2("./kernel-value/dynamic-number-texture");const{WebGL2KernelValueSingleArray}=require2("./kernel-value/single-array");const{WebGL2KernelValueDynamicSingleArray}=require2("./kernel-value/dynamic-single-array");const{WebGL2KernelValueSingleArray1DI}=require2("./kernel-value/single-array1d-i");const{WebGL2KernelValueDynamicSingleArray1DI}=require2("./kernel-value/dynamic-single-array1d-i");const{WebGL2KernelValueSingleArray2DI}=require2("./kernel-value/single-array2d-i");const{WebGL2KernelValueDynamicSingleArray2DI}=require2("./kernel-value/dynamic-single-array2d-i");const{WebGL2KernelValueSingleArray3DI}=require2("./kernel-value/single-array3d-i");const{WebGL2KernelValueDynamicSingleArray3DI}=require2("./kernel-value/dynamic-single-array3d-i");const{WebGL2KernelValueSingleArray2}=require2("./kernel-value/single-array2");const{WebGL2KernelValueSingleArray3}=require2("./kernel-value/single-array3");const{WebGL2KernelValueSingleArray4}=require2("./kernel-value/single-array4");const{WebGL2KernelValueUnsignedArray}=require2("./kernel-value/unsigned-array");const{WebGL2KernelValueDynamicUnsignedArray}=require2("./kernel-value/dynamic-unsigned-array");const kernelValueMaps={unsigned:{dynamic:{"Boolean":WebGL2KernelValueBoolean,"Integer":WebGL2KernelValueInteger,"Float":WebGL2KernelValueFloat,"Array":WebGL2KernelValueDynamicUnsignedArray,"Array(2)":false,"Array(3)":false,"Array(4)":false,"Array1D(2)":false,"Array1D(3)":false,"Array1D(4)":false,"Array2D(2)":false,"Array2D(3)":false,"Array2D(4)":false,"Array3D(2)":false,"Array3D(3)":false,"Array3D(4)":false,"Input":WebGL2KernelValueDynamicUnsignedInput,"NumberTexture":WebGL2KernelValueDynamicNumberTexture,"ArrayTexture(1)":WebGL2KernelValueDynamicNumberTexture,"ArrayTexture(2)":WebGL2KernelValueDynamicNumberTexture,"ArrayTexture(3)":WebGL2KernelValueDynamicNumberTexture,"ArrayTexture(4)":WebGL2KernelValueDynamicNumberTexture,"MemoryOptimizedNumberTexture":WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,"HTMLCanvas":WebGL2KernelValueDynamicHTMLImage,"HTMLImage":WebGL2KernelValueDynamicHTMLImage,"HTMLImageArray":WebGL2KernelValueDynamicHTMLImageArray,"HTMLVideo":WebGL2KernelValueDynamicHTMLVideo},static:{"Boolean":WebGL2KernelValueBoolean,"Float":WebGL2KernelValueFloat,"Integer":WebGL2KernelValueInteger,"Array":WebGL2KernelValueUnsignedArray,"Array(2)":false,"Array(3)":false,"Array(4)":false,"Array1D(2)":false,"Array1D(3)":false,"Array1D(4)":false,"Array2D(2)":false,"Array2D(3)":false,"Array2D(4)":false,"Array3D(2)":false,"Array3D(3)":false,"Array3D(4)":false,"Input":WebGL2KernelValueUnsignedInput,"NumberTexture":WebGL2KernelValueNumberTexture,"ArrayTexture(1)":WebGL2KernelValueNumberTexture,"ArrayTexture(2)":WebGL2KernelValueNumberTexture,"ArrayTexture(3)":WebGL2KernelValueNumberTexture,"ArrayTexture(4)":WebGL2KernelValueNumberTexture,"MemoryOptimizedNumberTexture":WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,"HTMLCanvas":WebGL2KernelValueHTMLImage,"HTMLImage":WebGL2KernelValueHTMLImage,"HTMLImageArray":WebGL2KernelValueHTMLImageArray,"HTMLVideo":WebGL2KernelValueHTMLVideo}},single:{dynamic:{"Boolean":WebGL2KernelValueBoolean,"Integer":WebGL2KernelValueInteger,"Float":WebGL2KernelValueFloat,"Array":WebGL2KernelValueDynamicSingleArray,"Array(2)":WebGL2KernelValueSingleArray2,"Array(3)":WebGL2KernelValueSingleArray3,"Array(4)":WebGL2KernelValueSingleArray4,"Array1D(2)":WebGL2KernelValueDynamicSingleArray1DI,"Array1D(3)":WebGL2KernelValueDynamicSingleArray1DI,"Array1D(4)":WebGL2KernelValueDynamicSingleArray1DI,"Array2D(2)":WebGL2KernelValueDynamicSingleArray2DI,"Array2D(3)":WebGL2KernelValueDynamicSingleArray2DI,"Array2D(4)":WebGL2KernelValueDynamicSingleArray2DI,"Array3D(2)":WebGL2KernelValueDynamicSingleArray3DI,"Array3D(3)":WebGL2KernelValueDynamicSingleArray3DI,"Array3D(4)":WebGL2KernelValueDynamicSingleArray3DI,"Input":WebGL2KernelValueDynamicSingleInput,"NumberTexture":WebGL2KernelValueDynamicNumberTexture,"ArrayTexture(1)":WebGL2KernelValueDynamicNumberTexture,"ArrayTexture(2)":WebGL2KernelValueDynamicNumberTexture,"ArrayTexture(3)":WebGL2KernelValueDynamicNumberTexture,"ArrayTexture(4)":WebGL2KernelValueDynamicNumberTexture,"MemoryOptimizedNumberTexture":WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,"HTMLCanvas":WebGL2KernelValueDynamicHTMLImage,"HTMLImage":WebGL2KernelValueDynamicHTMLImage,"HTMLImageArray":WebGL2KernelValueDynamicHTMLImageArray,"HTMLVideo":WebGL2KernelValueDynamicHTMLVideo},static:{"Boolean":WebGL2KernelValueBoolean,"Float":WebGL2KernelValueFloat,"Integer":WebGL2KernelValueInteger,"Array":WebGL2KernelValueSingleArray,"Array(2)":WebGL2KernelValueSingleArray2,"Array(3)":WebGL2KernelValueSingleArray3,"Array(4)":WebGL2KernelValueSingleArray4,"Array1D(2)":WebGL2KernelValueSingleArray1DI,"Array1D(3)":WebGL2KernelValueSingleArray1DI,"Array1D(4)":WebGL2KernelValueSingleArray1DI,"Array2D(2)":WebGL2KernelValueSingleArray2DI,"Array2D(3)":WebGL2KernelValueSingleArray2DI,"Array2D(4)":WebGL2KernelValueSingleArray2DI,"Array3D(2)":WebGL2KernelValueSingleArray3DI,"Array3D(3)":WebGL2KernelValueSingleArray3DI,"Array3D(4)":WebGL2KernelValueSingleArray3DI,"Input":WebGL2KernelValueSingleInput,"NumberTexture":WebGL2KernelValueNumberTexture,"ArrayTexture(1)":WebGL2KernelValueNumberTexture,"ArrayTexture(2)":WebGL2KernelValueNumberTexture,"ArrayTexture(3)":WebGL2KernelValueNumberTexture,"ArrayTexture(4)":WebGL2KernelValueNumberTexture,"MemoryOptimizedNumberTexture":WebGL2KernelValueMemoryOptimizedNumberTexture,"HTMLCanvas":WebGL2KernelValueHTMLImage,"HTMLImage":WebGL2KernelValueHTMLImage,"HTMLImageArray":WebGL2KernelValueHTMLImageArray,"HTMLVideo":WebGL2KernelValueHTMLVideo}}};function lookupKernelValueType(type,dynamic,precision,value2){if(!type){throw new Error("type missing")}if(!dynamic){throw new Error("dynamic missing")}if(!precision){throw new Error("precision missing")}if(value2.type){type=value2.type}const types=kernelValueMaps[precision][dynamic];if(types[type]===false){return null}else if(types[type]===void 0){throw new Error(`Could not find a KernelValue for ${type}`)}return types[type]}module3.exports={kernelValueMaps,lookupKernelValueType}},{"./kernel-value/boolean":75,"./kernel-value/dynamic-html-image":77,"./kernel-value/dynamic-html-image-array":76,"./kernel-value/dynamic-html-video":78,"./kernel-value/dynamic-memory-optimized-number-texture":79,"./kernel-value/dynamic-number-texture":80,"./kernel-value/dynamic-single-array":81,"./kernel-value/dynamic-single-array1d-i":82,"./kernel-value/dynamic-single-array2d-i":83,"./kernel-value/dynamic-single-array3d-i":84,"./kernel-value/dynamic-single-input":85,"./kernel-value/dynamic-unsigned-array":86,"./kernel-value/dynamic-unsigned-input":87,"./kernel-value/float":88,"./kernel-value/html-image":90,"./kernel-value/html-image-array":89,"./kernel-value/html-video":91,"./kernel-value/integer":92,"./kernel-value/memory-optimized-number-texture":93,"./kernel-value/number-texture":94,"./kernel-value/single-array":95,"./kernel-value/single-array1d-i":96,"./kernel-value/single-array2":97,"./kernel-value/single-array2d-i":98,"./kernel-value/single-array3":99,"./kernel-value/single-array3d-i":100,"./kernel-value/single-array4":101,"./kernel-value/single-input":102,"./kernel-value/unsigned-array":103,"./kernel-value/unsigned-input":104}],75:[function(require2,module3,exports3){const{WebGLKernelValueBoolean}=require2("../../web-gl/kernel-value/boolean");class WebGL2KernelValueBoolean extends WebGLKernelValueBoolean{}module3.exports={WebGL2KernelValueBoolean}},{"../../web-gl/kernel-value/boolean":41}],76:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGL2KernelValueHTMLImageArray}=require2("./html-image-array");class WebGL2KernelValueDynamicHTMLImageArray extends WebGL2KernelValueHTMLImageArray{getSource(){const variablePrecision=this.getVariablePrecisionString();return utils.linesToString([`uniform ${variablePrecision} sampler2DArray ${this.id}`,`uniform ${variablePrecision} ivec2 ${this.sizeId}`,`uniform ${variablePrecision} ivec3 ${this.dimensionsId}`])}updateValue(images){const{width,height}=images[0];this.checkSize(width,height);this.dimensions=[width,height,images.length];this.textureSize=[width,height];this.kernel.setUniform3iv(this.dimensionsId,this.dimensions);this.kernel.setUniform2iv(this.sizeId,this.textureSize);super.updateValue(images)}}module3.exports={WebGL2KernelValueDynamicHTMLImageArray}},{"../../../utils":114,"./html-image-array":89}],77:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueDynamicHTMLImage}=require2("../../web-gl/kernel-value/dynamic-html-image");class WebGL2KernelValueDynamicHTMLImage extends WebGLKernelValueDynamicHTMLImage{getSource(){const variablePrecision=this.getVariablePrecisionString();return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`,`uniform ${variablePrecision} ivec2 ${this.sizeId}`,`uniform ${variablePrecision} ivec3 ${this.dimensionsId}`])}}module3.exports={WebGL2KernelValueDynamicHTMLImage}},{"../../../utils":114,"../../web-gl/kernel-value/dynamic-html-image":42}],78:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGL2KernelValueDynamicHTMLImage}=require2("./dynamic-html-image");class WebGL2KernelValueDynamicHTMLVideo extends WebGL2KernelValueDynamicHTMLImage{}module3.exports={WebGL2KernelValueDynamicHTMLVideo}},{"../../../utils":114,"./dynamic-html-image":77}],79:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueDynamicMemoryOptimizedNumberTexture}=require2("../../web-gl/kernel-value/dynamic-memory-optimized-number-texture");class WebGL2KernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueDynamicMemoryOptimizedNumberTexture{getSource(){return utils.linesToString([`uniform sampler2D ${this.id}`,`uniform ivec2 ${this.sizeId}`,`uniform ivec3 ${this.dimensionsId}`])}}module3.exports={WebGL2KernelValueDynamicMemoryOptimizedNumberTexture}},{"../../../utils":114,"../../web-gl/kernel-value/dynamic-memory-optimized-number-texture":44}],80:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueDynamicNumberTexture}=require2("../../web-gl/kernel-value/dynamic-number-texture");class WebGL2KernelValueDynamicNumberTexture extends WebGLKernelValueDynamicNumberTexture{getSource(){const variablePrecision=this.getVariablePrecisionString();return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`,`uniform ${variablePrecision} ivec2 ${this.sizeId}`,`uniform ${variablePrecision} ivec3 ${this.dimensionsId}`])}}module3.exports={WebGL2KernelValueDynamicNumberTexture}},{"../../../utils":114,"../../web-gl/kernel-value/dynamic-number-texture":45}],81:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGL2KernelValueSingleArray}=require2("../../web-gl2/kernel-value/single-array");class WebGL2KernelValueDynamicSingleArray extends WebGL2KernelValueSingleArray{getSource(){const variablePrecision=this.getVariablePrecisionString();return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`,`uniform ${variablePrecision} ivec2 ${this.sizeId}`,`uniform ${variablePrecision} ivec3 ${this.dimensionsId}`])}updateValue(value2){this.dimensions=utils.getDimensions(value2,true);this.textureSize=utils.getMemoryOptimizedFloatTextureSize(this.dimensions,this.bitRatio);this.uploadArrayLength=this.textureSize[0]*this.textureSize[1]*this.bitRatio;this.checkSize(this.textureSize[0],this.textureSize[1]);this.uploadValue=new Float32Array(this.uploadArrayLength);this.kernel.setUniform3iv(this.dimensionsId,this.dimensions);this.kernel.setUniform2iv(this.sizeId,this.textureSize);super.updateValue(value2)}}module3.exports={WebGL2KernelValueDynamicSingleArray}},{"../../../utils":114,"../../web-gl2/kernel-value/single-array":95}],82:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGL2KernelValueSingleArray1DI}=require2("../../web-gl2/kernel-value/single-array1d-i");class WebGL2KernelValueDynamicSingleArray1DI extends WebGL2KernelValueSingleArray1DI{getSource(){const variablePrecision=this.getVariablePrecisionString();return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`,`uniform ${variablePrecision} ivec2 ${this.sizeId}`,`uniform ${variablePrecision} ivec3 ${this.dimensionsId}`])}updateValue(value2){this.setShape(value2);this.kernel.setUniform3iv(this.dimensionsId,this.dimensions);this.kernel.setUniform2iv(this.sizeId,this.textureSize);super.updateValue(value2)}}module3.exports={WebGL2KernelValueDynamicSingleArray1DI}},{"../../../utils":114,"../../web-gl2/kernel-value/single-array1d-i":96}],83:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGL2KernelValueSingleArray2DI}=require2("../../web-gl2/kernel-value/single-array2d-i");class WebGL2KernelValueDynamicSingleArray2DI extends WebGL2KernelValueSingleArray2DI{getSource(){const variablePrecision=this.getVariablePrecisionString();return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`,`uniform ${variablePrecision} ivec2 ${this.sizeId}`,`uniform ${variablePrecision} ivec3 ${this.dimensionsId}`])}updateValue(value2){this.setShape(value2);this.kernel.setUniform3iv(this.dimensionsId,this.dimensions);this.kernel.setUniform2iv(this.sizeId,this.textureSize);super.updateValue(value2)}}module3.exports={WebGL2KernelValueDynamicSingleArray2DI}},{"../../../utils":114,"../../web-gl2/kernel-value/single-array2d-i":98}],84:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGL2KernelValueSingleArray3DI}=require2("../../web-gl2/kernel-value/single-array3d-i");class WebGL2KernelValueDynamicSingleArray3DI extends WebGL2KernelValueSingleArray3DI{getSource(){const variablePrecision=this.getVariablePrecisionString();return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`,`uniform ${variablePrecision} ivec2 ${this.sizeId}`,`uniform ${variablePrecision} ivec3 ${this.dimensionsId}`])}updateValue(value2){this.setShape(value2);this.kernel.setUniform3iv(this.dimensionsId,this.dimensions);this.kernel.setUniform2iv(this.sizeId,this.textureSize);super.updateValue(value2)}}module3.exports={WebGL2KernelValueDynamicSingleArray3DI}},{"../../../utils":114,"../../web-gl2/kernel-value/single-array3d-i":100}],85:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGL2KernelValueSingleInput}=require2("../../web-gl2/kernel-value/single-input");class WebGL2KernelValueDynamicSingleInput extends WebGL2KernelValueSingleInput{getSource(){const variablePrecision=this.getVariablePrecisionString();return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`,`uniform ${variablePrecision} ivec2 ${this.sizeId}`,`uniform ${variablePrecision} ivec3 ${this.dimensionsId}`])}updateValue(value2){let[w4,h,d4]=value2.size;this.dimensions=new Int32Array([w4||1,h||1,d4||1]);this.textureSize=utils.getMemoryOptimizedFloatTextureSize(this.dimensions,this.bitRatio);this.uploadArrayLength=this.textureSize[0]*this.textureSize[1]*this.bitRatio;this.checkSize(this.textureSize[0],this.textureSize[1]);this.uploadValue=new Float32Array(this.uploadArrayLength);this.kernel.setUniform3iv(this.dimensionsId,this.dimensions);this.kernel.setUniform2iv(this.sizeId,this.textureSize);super.updateValue(value2)}}module3.exports={WebGL2KernelValueDynamicSingleInput}},{"../../../utils":114,"../../web-gl2/kernel-value/single-input":102}],86:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueDynamicUnsignedArray}=require2("../../web-gl/kernel-value/dynamic-unsigned-array");class WebGL2KernelValueDynamicUnsignedArray extends WebGLKernelValueDynamicUnsignedArray{getSource(){const variablePrecision=this.getVariablePrecisionString();return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`,`uniform ${variablePrecision} ivec2 ${this.sizeId}`,`uniform ${variablePrecision} ivec3 ${this.dimensionsId}`])}}module3.exports={WebGL2KernelValueDynamicUnsignedArray}},{"../../../utils":114,"../../web-gl/kernel-value/dynamic-unsigned-array":51}],87:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueDynamicUnsignedInput}=require2("../../web-gl/kernel-value/dynamic-unsigned-input");class WebGL2KernelValueDynamicUnsignedInput extends WebGLKernelValueDynamicUnsignedInput{getSource(){const variablePrecision=this.getVariablePrecisionString();return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`,`uniform ${variablePrecision} ivec2 ${this.sizeId}`,`uniform ${variablePrecision} ivec3 ${this.dimensionsId}`])}}module3.exports={WebGL2KernelValueDynamicUnsignedInput}},{"../../../utils":114,"../../web-gl/kernel-value/dynamic-unsigned-input":52}],88:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueFloat}=require2("../../web-gl/kernel-value/float");class WebGL2KernelValueFloat extends WebGLKernelValueFloat{}module3.exports={WebGL2KernelValueFloat}},{"../../../utils":114,"../../web-gl/kernel-value/float":53}],89:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelArray}=require2("../../web-gl/kernel-value/array");class WebGL2KernelValueHTMLImageArray extends WebGLKernelArray{constructor(value2,settings){super(value2,settings);this.checkSize(value2[0].width,value2[0].height);this.dimensions=[value2[0].width,value2[0].height,value2.length];this.textureSize=[value2[0].width,value2[0].height]}defineTexture(){const{context:gl2}=this;gl2.activeTexture(this.contextHandle);gl2.bindTexture(gl2.TEXTURE_2D_ARRAY,this.texture);gl2.texParameteri(gl2.TEXTURE_2D_ARRAY,gl2.TEXTURE_MAG_FILTER,gl2.NEAREST);gl2.texParameteri(gl2.TEXTURE_2D_ARRAY,gl2.TEXTURE_MIN_FILTER,gl2.NEAREST)}getStringValueHandler(){return`const uploadValue_${this.name} = ${this.varName};\n`}getSource(){const variablePrecision=this.getVariablePrecisionString();return utils.linesToString([`uniform ${variablePrecision} sampler2DArray ${this.id}`,`${variablePrecision} ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,`${variablePrecision} ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`])}updateValue(images){const{context:gl2}=this;gl2.activeTexture(this.contextHandle);gl2.bindTexture(gl2.TEXTURE_2D_ARRAY,this.texture);gl2.pixelStorei(gl2.UNPACK_FLIP_Y_WEBGL,true);gl2.texImage3D(gl2.TEXTURE_2D_ARRAY,0,gl2.RGBA,images[0].width,images[0].height,images.length,0,gl2.RGBA,gl2.UNSIGNED_BYTE,null);for(let i=0;i<images.length;i++){const xOffset=0;const yOffset=0;const imageDepth=1;gl2.texSubImage3D(gl2.TEXTURE_2D_ARRAY,0,xOffset,yOffset,i,images[i].width,images[i].height,imageDepth,gl2.RGBA,gl2.UNSIGNED_BYTE,this.uploadValue=images[i])}this.kernel.setUniform1i(this.id,this.index)}}module3.exports={WebGL2KernelValueHTMLImageArray}},{"../../../utils":114,"../../web-gl/kernel-value/array":40}],90:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueHTMLImage}=require2("../../web-gl/kernel-value/html-image");class WebGL2KernelValueHTMLImage extends WebGLKernelValueHTMLImage{getSource(){const variablePrecision=this.getVariablePrecisionString();return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`,`${variablePrecision} ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,`${variablePrecision} ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`])}}module3.exports={WebGL2KernelValueHTMLImage}},{"../../../utils":114,"../../web-gl/kernel-value/html-image":54}],91:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGL2KernelValueHTMLImage}=require2("./html-image");class WebGL2KernelValueHTMLVideo extends WebGL2KernelValueHTMLImage{}module3.exports={WebGL2KernelValueHTMLVideo}},{"../../../utils":114,"./html-image":90}],92:[function(require2,module3,exports3){const{WebGLKernelValueInteger}=require2("../../web-gl/kernel-value/integer");class WebGL2KernelValueInteger extends WebGLKernelValueInteger{getSource(value2){const variablePrecision=this.getVariablePrecisionString();if(this.origin==="constants"){return`const ${variablePrecision} int ${this.id} = ${parseInt(value2)};\n`}return`uniform ${variablePrecision} int ${this.id};\n`}updateValue(value2){if(this.origin==="constants")return;this.kernel.setUniform1i(this.id,this.uploadValue=value2)}}module3.exports={WebGL2KernelValueInteger}},{"../../web-gl/kernel-value/integer":57}],93:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueMemoryOptimizedNumberTexture}=require2("../../web-gl/kernel-value/memory-optimized-number-texture");class WebGL2KernelValueMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture{getSource(){const{id,sizeId,textureSize,dimensionsId,dimensions}=this;const variablePrecision=this.getVariablePrecisionString();return utils.linesToString([`uniform sampler2D ${id}`,`${variablePrecision} ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,`${variablePrecision} ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`])}}module3.exports={WebGL2KernelValueMemoryOptimizedNumberTexture}},{"../../../utils":114,"../../web-gl/kernel-value/memory-optimized-number-texture":58}],94:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueNumberTexture}=require2("../../web-gl/kernel-value/number-texture");class WebGL2KernelValueNumberTexture extends WebGLKernelValueNumberTexture{getSource(){const{id,sizeId,textureSize,dimensionsId,dimensions}=this;const variablePrecision=this.getVariablePrecisionString();return utils.linesToString([`uniform ${variablePrecision} sampler2D ${id}`,`${variablePrecision} ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,`${variablePrecision} ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`])}}module3.exports={WebGL2KernelValueNumberTexture}},{"../../../utils":114,"../../web-gl/kernel-value/number-texture":59}],95:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueSingleArray}=require2("../../web-gl/kernel-value/single-array");class WebGL2KernelValueSingleArray extends WebGLKernelValueSingleArray{getSource(){const variablePrecision=this.getVariablePrecisionString();return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`,`${variablePrecision} ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,`${variablePrecision} ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`])}updateValue(value2){if(value2.constructor!==this.initialValueConstructor){this.onUpdateValueMismatch(value2.constructor);return}const{context:gl2}=this;utils.flattenTo(value2,this.uploadValue);gl2.activeTexture(this.contextHandle);gl2.bindTexture(gl2.TEXTURE_2D,this.texture);gl2.pixelStorei(gl2.UNPACK_FLIP_Y_WEBGL,false);gl2.texImage2D(gl2.TEXTURE_2D,0,gl2.RGBA32F,this.textureSize[0],this.textureSize[1],0,gl2.RGBA,gl2.FLOAT,this.uploadValue);this.kernel.setUniform1i(this.id,this.index)}}module3.exports={WebGL2KernelValueSingleArray}},{"../../../utils":114,"../../web-gl/kernel-value/single-array":60}],96:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueSingleArray1DI}=require2("../../web-gl/kernel-value/single-array1d-i");class WebGL2KernelValueSingleArray1DI extends WebGLKernelValueSingleArray1DI{updateValue(value2){if(value2.constructor!==this.initialValueConstructor){this.onUpdateValueMismatch(value2.constructor);return}const{context:gl2}=this;utils.flattenTo(value2,this.uploadValue);gl2.activeTexture(this.contextHandle);gl2.bindTexture(gl2.TEXTURE_2D,this.texture);gl2.pixelStorei(gl2.UNPACK_FLIP_Y_WEBGL,false);gl2.texImage2D(gl2.TEXTURE_2D,0,gl2.RGBA32F,this.textureSize[0],this.textureSize[1],0,gl2.RGBA,gl2.FLOAT,this.uploadValue);this.kernel.setUniform1i(this.id,this.index)}}module3.exports={WebGL2KernelValueSingleArray1DI}},{"../../../utils":114,"../../web-gl/kernel-value/single-array1d-i":61}],97:[function(require2,module3,exports3){const{WebGLKernelValueSingleArray2}=require2("../../web-gl/kernel-value/single-array2");class WebGL2KernelValueSingleArray2 extends WebGLKernelValueSingleArray2{}module3.exports={WebGL2KernelValueSingleArray2}},{"../../web-gl/kernel-value/single-array2":62}],98:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueSingleArray2DI}=require2("../../web-gl/kernel-value/single-array2d-i");class WebGL2KernelValueSingleArray2DI extends WebGLKernelValueSingleArray2DI{updateValue(value2){if(value2.constructor!==this.initialValueConstructor){this.onUpdateValueMismatch(value2.constructor);return}const{context:gl2}=this;utils.flattenTo(value2,this.uploadValue);gl2.activeTexture(this.contextHandle);gl2.bindTexture(gl2.TEXTURE_2D,this.texture);gl2.pixelStorei(gl2.UNPACK_FLIP_Y_WEBGL,false);gl2.texImage2D(gl2.TEXTURE_2D,0,gl2.RGBA32F,this.textureSize[0],this.textureSize[1],0,gl2.RGBA,gl2.FLOAT,this.uploadValue);this.kernel.setUniform1i(this.id,this.index)}}module3.exports={WebGL2KernelValueSingleArray2DI}},{"../../../utils":114,"../../web-gl/kernel-value/single-array2d-i":63}],99:[function(require2,module3,exports3){const{WebGLKernelValueSingleArray3}=require2("../../web-gl/kernel-value/single-array3");class WebGL2KernelValueSingleArray3 extends WebGLKernelValueSingleArray3{}module3.exports={WebGL2KernelValueSingleArray3}},{"../../web-gl/kernel-value/single-array3":64}],100:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueSingleArray3DI}=require2("../../web-gl/kernel-value/single-array3d-i");class WebGL2KernelValueSingleArray3DI extends WebGLKernelValueSingleArray3DI{updateValue(value2){if(value2.constructor!==this.initialValueConstructor){this.onUpdateValueMismatch(value2.constructor);return}const{context:gl2}=this;utils.flattenTo(value2,this.uploadValue);gl2.activeTexture(this.contextHandle);gl2.bindTexture(gl2.TEXTURE_2D,this.texture);gl2.pixelStorei(gl2.UNPACK_FLIP_Y_WEBGL,false);gl2.texImage2D(gl2.TEXTURE_2D,0,gl2.RGBA32F,this.textureSize[0],this.textureSize[1],0,gl2.RGBA,gl2.FLOAT,this.uploadValue);this.kernel.setUniform1i(this.id,this.index)}}module3.exports={WebGL2KernelValueSingleArray3DI}},{"../../../utils":114,"../../web-gl/kernel-value/single-array3d-i":65}],101:[function(require2,module3,exports3){const{WebGLKernelValueSingleArray4}=require2("../../web-gl/kernel-value/single-array4");class WebGL2KernelValueSingleArray4 extends WebGLKernelValueSingleArray4{}module3.exports={WebGL2KernelValueSingleArray4}},{"../../web-gl/kernel-value/single-array4":66}],102:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueSingleInput}=require2("../../web-gl/kernel-value/single-input");class WebGL2KernelValueSingleInput extends WebGLKernelValueSingleInput{getSource(){const variablePrecision=this.getVariablePrecisionString();return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`,`${variablePrecision} ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,`${variablePrecision} ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`])}updateValue(input){const{context:gl2}=this;utils.flattenTo(input.value,this.uploadValue);gl2.activeTexture(this.contextHandle);gl2.bindTexture(gl2.TEXTURE_2D,this.texture);gl2.pixelStorei(gl2.UNPACK_FLIP_Y_WEBGL,false);gl2.texImage2D(gl2.TEXTURE_2D,0,gl2.RGBA32F,this.textureSize[0],this.textureSize[1],0,gl2.RGBA,gl2.FLOAT,this.uploadValue);this.kernel.setUniform1i(this.id,this.index)}}module3.exports={WebGL2KernelValueSingleInput}},{"../../../utils":114,"../../web-gl/kernel-value/single-input":67}],103:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueUnsignedArray}=require2("../../web-gl/kernel-value/unsigned-array");class WebGL2KernelValueUnsignedArray extends WebGLKernelValueUnsignedArray{getSource(){const variablePrecision=this.getVariablePrecisionString();return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`,`${variablePrecision} ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,`${variablePrecision} ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`])}}module3.exports={WebGL2KernelValueUnsignedArray}},{"../../../utils":114,"../../web-gl/kernel-value/unsigned-array":68}],104:[function(require2,module3,exports3){const{utils}=require2("../../../utils");const{WebGLKernelValueUnsignedInput}=require2("../../web-gl/kernel-value/unsigned-input");class WebGL2KernelValueUnsignedInput extends WebGLKernelValueUnsignedInput{getSource(){const variablePrecision=this.getVariablePrecisionString();return utils.linesToString([`uniform ${variablePrecision} sampler2D ${this.id}`,`${variablePrecision} ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,`${variablePrecision} ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`])}}module3.exports={WebGL2KernelValueUnsignedInput}},{"../../../utils":114,"../../web-gl/kernel-value/unsigned-input":69}],105:[function(require2,module3,exports3){const{WebGLKernel}=require2("../web-gl/kernel");const{WebGL2FunctionNode}=require2("./function-node");const{FunctionBuilder}=require2("../function-builder");const{utils}=require2("../../utils");const{fragmentShader}=require2("./fragment-shader");const{vertexShader}=require2("./vertex-shader");const{lookupKernelValueType}=require2("./kernel-value-maps");let isSupported=null;let testCanvas=null;let testContext=null;let testExtensions=null;let features=null;class WebGL2Kernel extends WebGLKernel{static get isSupported(){if(isSupported!==null){return isSupported}this.setupFeatureChecks();isSupported=this.isContextMatch(testContext);return isSupported}static setupFeatureChecks(){if(typeof document!=="undefined"){testCanvas=document.createElement("canvas")}else if(typeof OffscreenCanvas!=="undefined"){testCanvas=new OffscreenCanvas(0,0)}if(!testCanvas)return;testContext=testCanvas.getContext("webgl2");if(!testContext||!testContext.getExtension)return;testExtensions={EXT_color_buffer_float:testContext.getExtension("EXT_color_buffer_float"),OES_texture_float_linear:testContext.getExtension("OES_texture_float_linear")};features=this.getFeatures()}static isContextMatch(context){if(typeof WebGL2RenderingContext!=="undefined"){return context instanceof WebGL2RenderingContext}return false}static getFeatures(){const gl2=this.testContext;return Object.freeze({isFloatRead:this.getIsFloatRead(),isIntegerDivisionAccurate:this.getIsIntegerDivisionAccurate(),isSpeedTacticSupported:this.getIsSpeedTacticSupported(),kernelMap:true,isTextureFloat:true,isDrawBuffers:true,channelCount:this.getChannelCount(),maxTextureSize:this.getMaxTextureSize(),lowIntPrecision:gl2.getShaderPrecisionFormat(gl2.FRAGMENT_SHADER,gl2.LOW_INT),lowFloatPrecision:gl2.getShaderPrecisionFormat(gl2.FRAGMENT_SHADER,gl2.LOW_FLOAT),mediumIntPrecision:gl2.getShaderPrecisionFormat(gl2.FRAGMENT_SHADER,gl2.MEDIUM_INT),mediumFloatPrecision:gl2.getShaderPrecisionFormat(gl2.FRAGMENT_SHADER,gl2.MEDIUM_FLOAT),highIntPrecision:gl2.getShaderPrecisionFormat(gl2.FRAGMENT_SHADER,gl2.HIGH_INT),highFloatPrecision:gl2.getShaderPrecisionFormat(gl2.FRAGMENT_SHADER,gl2.HIGH_FLOAT)})}static getIsTextureFloat(){return true}static getChannelCount(){return testContext.getParameter(testContext.MAX_DRAW_BUFFERS)}static getMaxTextureSize(){return testContext.getParameter(testContext.MAX_TEXTURE_SIZE)}static lookupKernelValueType(type,dynamic,precision,value2){return lookupKernelValueType(type,dynamic,precision,value2)}static get testCanvas(){return testCanvas}static get testContext(){return testContext}static get features(){return features}static get fragmentShader(){return fragmentShader}static get vertexShader(){return vertexShader}initContext(){const settings={alpha:false,depth:false,antialias:false};return this.canvas.getContext("webgl2",settings)}initExtensions(){this.extensions={EXT_color_buffer_float:this.context.getExtension("EXT_color_buffer_float"),OES_texture_float_linear:this.context.getExtension("OES_texture_float_linear")}}validateSettings(args){if(!this.validate){this.texSize=utils.getKernelTextureSize({optimizeFloatMemory:this.optimizeFloatMemory,precision:this.precision},this.output);return}const{features:features2}=this.constructor;if(this.precision==="single"&&!features2.isFloatRead){throw new Error("Float texture outputs are not supported")}else if(!this.graphical&&this.precision===null){this.precision=features2.isFloatRead?"single":"unsigned"}if(this.fixIntegerDivisionAccuracy===null){this.fixIntegerDivisionAccuracy=!features2.isIntegerDivisionAccurate}else if(this.fixIntegerDivisionAccuracy&&features2.isIntegerDivisionAccurate){this.fixIntegerDivisionAccuracy=false}this.checkOutput();if(!this.output||this.output.length===0){if(args.length!==1){throw new Error("Auto output only supported for kernels with only one input")}const argType=utils.getVariableType(args[0],this.strictIntegers);switch(argType){case"Array":this.output=utils.getDimensions(argType);break;case"NumberTexture":case"MemoryOptimizedNumberTexture":case"ArrayTexture(1)":case"ArrayTexture(2)":case"ArrayTexture(3)":case"ArrayTexture(4)":this.output=args[0].output;break;default:throw new Error("Auto output not supported for input type: "+argType)}}if(this.graphical){if(this.output.length!==2){throw new Error("Output must have 2 dimensions on graphical mode")}if(this.precision==="single"){console.warn("Cannot use graphical mode and single precision at the same time");this.precision="unsigned"}this.texSize=utils.clone(this.output);return}else if(!this.graphical&&this.precision===null&&features2.isTextureFloat){this.precision="single"}this.texSize=utils.getKernelTextureSize({optimizeFloatMemory:this.optimizeFloatMemory,precision:this.precision},this.output);this.checkTextureSize()}translateSource(){const functionBuilder=FunctionBuilder.fromKernel(this,WebGL2FunctionNode,{fixIntegerDivisionAccuracy:this.fixIntegerDivisionAccuracy});this.translatedSource=functionBuilder.getPrototypeString("kernel");this.setupReturnTypes(functionBuilder)}drawBuffers(){this.context.drawBuffers(this.drawBuffersMap)}getTextureFormat(){const{context:gl2}=this;switch(this.getInternalFormat()){case gl2.R32F:return gl2.RED;case gl2.RG32F:return gl2.RG;case gl2.RGBA32F:return gl2.RGBA;case gl2.RGBA:return gl2.RGBA;default:throw new Error("Unknown internal format")}}getInternalFormat(){const{context:gl2}=this;if(this.precision==="single"){if(this.pipeline){switch(this.returnType){case"Number":case"Float":case"Integer":if(this.optimizeFloatMemory){return gl2.RGBA32F}else{return gl2.R32F}case"Array(2)":return gl2.RG32F;case"Array(3)":case"Array(4)":return gl2.RGBA32F;default:throw new Error("Unhandled return type")}}return gl2.RGBA32F}return gl2.RGBA}_setupOutputTexture(){const gl2=this.context;if(this.texture){gl2.framebufferTexture2D(gl2.FRAMEBUFFER,gl2.COLOR_ATTACHMENT0,gl2.TEXTURE_2D,this.texture.texture,0);return}gl2.bindFramebuffer(gl2.FRAMEBUFFER,this.framebuffer);const texture=gl2.createTexture();const texSize=this.texSize;gl2.activeTexture(gl2.TEXTURE0+this.constantTextureCount+this.argumentTextureCount);gl2.bindTexture(gl2.TEXTURE_2D,texture);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_WRAP_S,gl2.REPEAT);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_WRAP_T,gl2.REPEAT);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_MIN_FILTER,gl2.NEAREST);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_MAG_FILTER,gl2.NEAREST);const format=this.getInternalFormat();if(this.precision==="single"){gl2.texStorage2D(gl2.TEXTURE_2D,1,format,texSize[0],texSize[1])}else{gl2.texImage2D(gl2.TEXTURE_2D,0,format,texSize[0],texSize[1],0,format,gl2.UNSIGNED_BYTE,null)}gl2.framebufferTexture2D(gl2.FRAMEBUFFER,gl2.COLOR_ATTACHMENT0,gl2.TEXTURE_2D,texture,0);this.texture=new this.TextureConstructor({texture,size:texSize,dimensions:this.threadDim,output:this.output,context:this.context,internalFormat:this.getInternalFormat(),textureFormat:this.getTextureFormat(),kernel:this})}_setupSubOutputTextures(){const gl2=this.context;if(this.mappedTextures){for(let i=0;i<this.subKernels.length;i++){gl2.framebufferTexture2D(gl2.FRAMEBUFFER,gl2.COLOR_ATTACHMENT0+i+1,gl2.TEXTURE_2D,this.mappedTextures[i].texture,0)}return}const texSize=this.texSize;this.drawBuffersMap=[gl2.COLOR_ATTACHMENT0];this.mappedTextures=[];for(let i=0;i<this.subKernels.length;i++){const texture=this.createTexture();this.drawBuffersMap.push(gl2.COLOR_ATTACHMENT0+i+1);gl2.activeTexture(gl2.TEXTURE0+this.constantTextureCount+this.argumentTextureCount+i);gl2.bindTexture(gl2.TEXTURE_2D,texture);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_WRAP_S,gl2.CLAMP_TO_EDGE);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_WRAP_T,gl2.CLAMP_TO_EDGE);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_MIN_FILTER,gl2.NEAREST);gl2.texParameteri(gl2.TEXTURE_2D,gl2.TEXTURE_MAG_FILTER,gl2.NEAREST);const format=this.getInternalFormat();if(this.precision==="single"){gl2.texStorage2D(gl2.TEXTURE_2D,1,format,texSize[0],texSize[1])}else{gl2.texImage2D(gl2.TEXTURE_2D,0,gl2.RGBA,texSize[0],texSize[1],0,gl2.RGBA,gl2.UNSIGNED_BYTE,null)}gl2.framebufferTexture2D(gl2.FRAMEBUFFER,gl2.COLOR_ATTACHMENT0+i+1,gl2.TEXTURE_2D,texture,0);this.mappedTextures.push(new this.TextureConstructor({texture,size:texSize,dimensions:this.threadDim,output:this.output,context:this.context,internalFormat:this.getInternalFormat(),textureFormat:this.getTextureFormat(),kernel:this}))}}_getHeaderString(){return""}_getTextureCoordinate(){const subKernels=this.subKernels;const variablePrecision=this.getVariablePrecisionString(this.texSize,this.tactic);if(subKernels===null||subKernels.length<1){return`in ${variablePrecision} vec2 vTexCoord;\n`}else{return`out ${variablePrecision} vec2 vTexCoord;\n`}}_getMainArgumentsString(args){const result=[];const argumentNames=this.argumentNames;for(let i=0;i<argumentNames.length;i++){result.push(this.kernelArguments[i].getSource(args[i]))}return result.join("")}getKernelString(){const result=[this.getKernelResultDeclaration()];const subKernels=this.subKernels;if(subKernels!==null){result.push("layout(location = 0) out vec4 data0");switch(this.returnType){case"Number":case"Float":case"Integer":for(let i=0;i<subKernels.length;i++){const subKernel=subKernels[i];result.push(subKernel.returnType==="Integer"?`int subKernelResult_${subKernel.name} = 0`:`float subKernelResult_${subKernel.name} = 0.0`,`layout(location = ${i+1}) out vec4 data${i+1}`)}break;case"Array(2)":for(let i=0;i<subKernels.length;i++){result.push(`vec2 subKernelResult_${subKernels[i].name}`,`layout(location = ${i+1}) out vec4 data${i+1}`)}break;case"Array(3)":for(let i=0;i<subKernels.length;i++){result.push(`vec3 subKernelResult_${subKernels[i].name}`,`layout(location = ${i+1}) out vec4 data${i+1}`)}break;case"Array(4)":for(let i=0;i<subKernels.length;i++){result.push(`vec4 subKernelResult_${subKernels[i].name}`,`layout(location = ${i+1}) out vec4 data${i+1}`)}break}}else{result.push("out vec4 data0")}return utils.linesToString(result)+this.translatedSource}getMainResultGraphical(){return utils.linesToString(["  threadId = indexTo3D(index, uOutputDim)","  kernel()","  data0 = actualColor"])}getMainResultPackedPixels(){switch(this.returnType){case"LiteralInteger":case"Number":case"Integer":case"Float":return this.getMainResultKernelPackedPixels()+this.getMainResultSubKernelPackedPixels();default:throw new Error(`packed output only usable with Numbers, "${this.returnType}" specified`)}}getMainResultKernelPackedPixels(){return utils.linesToString(["  threadId = indexTo3D(index, uOutputDim)","  kernel()",`  data0 = ${this.useLegacyEncoder?"legacyEncode32":"encode32"}(kernelResult)`])}getMainResultSubKernelPackedPixels(){const result=[];if(!this.subKernels)return"";for(let i=0;i<this.subKernels.length;i++){const subKernel=this.subKernels[i];if(subKernel.returnType==="Integer"){result.push(`  data${i+1} = ${this.useLegacyEncoder?"legacyEncode32":"encode32"}(float(subKernelResult_${this.subKernels[i].name}))`)}else{result.push(`  data${i+1} = ${this.useLegacyEncoder?"legacyEncode32":"encode32"}(subKernelResult_${this.subKernels[i].name})`)}}return utils.linesToString(result)}getMainResultKernelMemoryOptimizedFloats(result,channel){result.push("  threadId = indexTo3D(index, uOutputDim)","  kernel()",`  data0.${channel} = kernelResult`)}getMainResultSubKernelMemoryOptimizedFloats(result,channel){if(!this.subKernels)return result;for(let i=0;i<this.subKernels.length;i++){const subKernel=this.subKernels[i];if(subKernel.returnType==="Integer"){result.push(`  data${i+1}.${channel} = float(subKernelResult_${subKernel.name})`)}else{result.push(`  data${i+1}.${channel} = subKernelResult_${subKernel.name}`)}}}getMainResultKernelNumberTexture(){return["  threadId = indexTo3D(index, uOutputDim)","  kernel()","  data0[0] = kernelResult"]}getMainResultSubKernelNumberTexture(){const result=[];if(!this.subKernels)return result;for(let i=0;i<this.subKernels.length;++i){const subKernel=this.subKernels[i];if(subKernel.returnType==="Integer"){result.push(`  data${i+1}[0] = float(subKernelResult_${subKernel.name})`)}else{result.push(`  data${i+1}[0] = subKernelResult_${subKernel.name}`)}}return result}getMainResultKernelArray2Texture(){return["  threadId = indexTo3D(index, uOutputDim)","  kernel()","  data0[0] = kernelResult[0]","  data0[1] = kernelResult[1]"]}getMainResultSubKernelArray2Texture(){const result=[];if(!this.subKernels)return result;for(let i=0;i<this.subKernels.length;++i){const subKernel=this.subKernels[i];result.push(`  data${i+1}[0] = subKernelResult_${subKernel.name}[0]`,`  data${i+1}[1] = subKernelResult_${subKernel.name}[1]`)}return result}getMainResultKernelArray3Texture(){return["  threadId = indexTo3D(index, uOutputDim)","  kernel()","  data0[0] = kernelResult[0]","  data0[1] = kernelResult[1]","  data0[2] = kernelResult[2]"]}getMainResultSubKernelArray3Texture(){const result=[];if(!this.subKernels)return result;for(let i=0;i<this.subKernels.length;++i){const subKernel=this.subKernels[i];result.push(`  data${i+1}[0] = subKernelResult_${subKernel.name}[0]`,`  data${i+1}[1] = subKernelResult_${subKernel.name}[1]`,`  data${i+1}[2] = subKernelResult_${subKernel.name}[2]`)}return result}getMainResultKernelArray4Texture(){return["  threadId = indexTo3D(index, uOutputDim)","  kernel()","  data0 = kernelResult"]}getMainResultSubKernelArray4Texture(){const result=[];if(!this.subKernels)return result;for(let i=0;i<this.subKernels.length;++i){result.push(`  data${i+1} = subKernelResult_${this.subKernels[i].name}`)}return result}destroyExtensions(){this.extensions.EXT_color_buffer_float=null;this.extensions.OES_texture_float_linear=null}toJSON(){const json=super.toJSON();json.functionNodes=FunctionBuilder.fromKernel(this,WebGL2FunctionNode).toJSON();json.settings.threadDim=this.threadDim;return json}}module3.exports={WebGL2Kernel}},{"../../utils":114,"../function-builder":9,"../web-gl/kernel":70,"./fragment-shader":72,"./function-node":73,"./kernel-value-maps":74,"./vertex-shader":106}],106:[function(require2,module3,exports3){const vertexShader=`#version 300 es\n      __FLOAT_TACTIC_DECLARATION__;\n      __INT_TACTIC_DECLARATION__;\n      __SAMPLER_2D_TACTIC_DECLARATION__;\n      \n      in vec2 aPos;\n      in vec2 aTexCoord;\n      \n      out vec2 vTexCoord;\n      uniform vec2 ratio;\n      \n      void main(void) {\n        gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n        vTexCoord = aTexCoord;\n      }`;module3.exports={vertexShader}},{}],107:[function(require2,module3,exports3){const lib=require2("./index");const GPU2=lib.GPU;for(const p in lib){if(!lib.hasOwnProperty(p))continue;if(p==="GPU")continue;GPU2[p]=lib[p]}if(typeof window!=="undefined"){bindTo(window)}if(typeof self!=="undefined"){bindTo(self)}function bindTo(target){if(target.GPU)return;Object.defineProperty(target,"GPU",{get(){return GPU2}})}module3.exports=lib},{"./index":109}],108:[function(require2,module3,exports3){const{gpuMock}=require2("gpu-mock.js");const{utils}=require2("./utils");const{Kernel}=require2("./backend/kernel");const{CPUKernel}=require2("./backend/cpu/kernel");const{HeadlessGLKernel}=require2("./backend/headless-gl/kernel");const{WebGL2Kernel}=require2("./backend/web-gl2/kernel");const{WebGLKernel}=require2("./backend/web-gl/kernel");const{kernelRunShortcut}=require2("./kernel-run-shortcut");const kernelOrder=[HeadlessGLKernel,WebGL2Kernel,WebGLKernel];const kernelTypes=["gpu","cpu"];const internalKernels={"headlessgl":HeadlessGLKernel,"webgl2":WebGL2Kernel,"webgl":WebGLKernel};let validate=true;class GPU2{static disableValidation(){validate=false}static enableValidation(){validate=true}static get isGPUSupported(){return kernelOrder.some(Kernel2=>Kernel2.isSupported)}static get isKernelMapSupported(){return kernelOrder.some(Kernel2=>Kernel2.isSupported&&Kernel2.features.kernelMap)}static get isOffscreenCanvasSupported(){return typeof Worker!=="undefined"&&typeof OffscreenCanvas!=="undefined"||typeof importScripts!=="undefined"}static get isWebGLSupported(){return WebGLKernel.isSupported}static get isWebGL2Supported(){return WebGL2Kernel.isSupported}static get isHeadlessGLSupported(){return HeadlessGLKernel.isSupported}static get isCanvasSupported(){return typeof HTMLCanvasElement!=="undefined"}static get isGPUHTMLImageArraySupported(){return WebGL2Kernel.isSupported}static get isSinglePrecisionSupported(){return kernelOrder.some(Kernel2=>Kernel2.isSupported&&Kernel2.features.isFloatRead&&Kernel2.features.isTextureFloat)}constructor(settings){settings=settings||{};this.canvas=settings.canvas||null;this.context=settings.context||null;this.mode=settings.mode;this.Kernel=null;this.kernels=[];this.functions=[];this.nativeFunctions=[];this.injectedNative=null;if(this.mode==="dev")return;this.chooseKernel();if(settings.functions){for(let i=0;i<settings.functions.length;i++){this.addFunction(settings.functions[i])}}if(settings.nativeFunctions){for(const p in settings.nativeFunctions){if(!settings.nativeFunctions.hasOwnProperty(p))continue;const s=settings.nativeFunctions[p];const{name:name2,source}=s;this.addNativeFunction(name2,source,s)}}}chooseKernel(){if(this.Kernel)return;let Kernel2=null;if(this.context){for(let i=0;i<kernelOrder.length;i++){const ExternalKernel=kernelOrder[i];if(ExternalKernel.isContextMatch(this.context)){if(!ExternalKernel.isSupported){throw new Error(`Kernel type ${ExternalKernel.name} not supported`)}Kernel2=ExternalKernel;break}}if(Kernel2===null){throw new Error("unknown Context")}}else if(this.mode){if(this.mode in internalKernels){if(!validate||internalKernels[this.mode].isSupported){Kernel2=internalKernels[this.mode]}}else if(this.mode==="gpu"){for(let i=0;i<kernelOrder.length;i++){if(kernelOrder[i].isSupported){Kernel2=kernelOrder[i];break}}}else if(this.mode==="cpu"){Kernel2=CPUKernel}if(!Kernel2){throw new Error(`A requested mode of "${this.mode}" and is not supported`)}}else{for(let i=0;i<kernelOrder.length;i++){if(kernelOrder[i].isSupported){Kernel2=kernelOrder[i];break}}if(!Kernel2){Kernel2=CPUKernel}}if(!this.mode){this.mode=Kernel2.mode}this.Kernel=Kernel2}createKernel(source,settings){if(typeof source==="undefined"){throw new Error("Missing source parameter")}if(typeof source!=="object"&&!utils.isFunction(source)&&typeof source!=="string"){throw new Error("source parameter not a function")}const kernels=this.kernels;if(this.mode==="dev"){const devKernel=gpuMock(source,upgradeDeprecatedCreateKernelSettings(settings));kernels.push(devKernel);return devKernel}source=typeof source==="function"?source.toString():source;const switchableKernels={};const settingsCopy=upgradeDeprecatedCreateKernelSettings(settings)||{};if(settings&&typeof settings.argumentTypes==="object"){settingsCopy.argumentTypes=Object.keys(settings.argumentTypes).map(argumentName=>settings.argumentTypes[argumentName])}function onRequestFallback(args){console.warn("Falling back to CPU");const fallbackKernel=new CPUKernel(source,{argumentTypes:kernelRun.argumentTypes,constantTypes:kernelRun.constantTypes,graphical:kernelRun.graphical,loopMaxIterations:kernelRun.loopMaxIterations,constants:kernelRun.constants,dynamicOutput:kernelRun.dynamicOutput,dynamicArgument:kernelRun.dynamicArguments,output:kernelRun.output,precision:kernelRun.precision,pipeline:kernelRun.pipeline,immutable:kernelRun.immutable,optimizeFloatMemory:kernelRun.optimizeFloatMemory,fixIntegerDivisionAccuracy:kernelRun.fixIntegerDivisionAccuracy,functions:kernelRun.functions,nativeFunctions:kernelRun.nativeFunctions,injectedNative:kernelRun.injectedNative,subKernels:kernelRun.subKernels,strictIntegers:kernelRun.strictIntegers,debug:kernelRun.debug});fallbackKernel.build.apply(fallbackKernel,args);const result=fallbackKernel.run.apply(fallbackKernel,args);kernelRun.replaceKernel(fallbackKernel);return result}function onRequestSwitchKernel(reasons,args,_kernel){if(_kernel.debug){console.warn("Switching kernels")}let newOutput=null;if(_kernel.signature&&!switchableKernels[_kernel.signature]){switchableKernels[_kernel.signature]=_kernel}if(_kernel.dynamicOutput){for(let i=reasons.length-1;i>=0;i--){const reason=reasons[i];if(reason.type==="outputPrecisionMismatch"){newOutput=reason.needed}}}const Constructor=_kernel.constructor;const argumentTypes=Constructor.getArgumentTypes(_kernel,args);const signature=Constructor.getSignature(_kernel,argumentTypes);const existingKernel=switchableKernels[signature];if(existingKernel){existingKernel.onActivate(_kernel);return existingKernel}const newKernel=switchableKernels[signature]=new Constructor(source,{argumentTypes,constantTypes:_kernel.constantTypes,graphical:_kernel.graphical,loopMaxIterations:_kernel.loopMaxIterations,constants:_kernel.constants,dynamicOutput:_kernel.dynamicOutput,dynamicArgument:_kernel.dynamicArguments,context:_kernel.context,canvas:_kernel.canvas,output:newOutput||_kernel.output,precision:_kernel.precision,pipeline:_kernel.pipeline,immutable:_kernel.immutable,optimizeFloatMemory:_kernel.optimizeFloatMemory,fixIntegerDivisionAccuracy:_kernel.fixIntegerDivisionAccuracy,functions:_kernel.functions,nativeFunctions:_kernel.nativeFunctions,injectedNative:_kernel.injectedNative,subKernels:_kernel.subKernels,strictIntegers:_kernel.strictIntegers,debug:_kernel.debug,gpu:_kernel.gpu,validate,returnType:_kernel.returnType,tactic:_kernel.tactic,onRequestFallback,onRequestSwitchKernel,texture:_kernel.texture,mappedTextures:_kernel.mappedTextures,drawBuffersMap:_kernel.drawBuffersMap});newKernel.build.apply(newKernel,args);kernelRun.replaceKernel(newKernel);kernels.push(newKernel);return newKernel}const mergedSettings=Object.assign({context:this.context,canvas:this.canvas,functions:this.functions,nativeFunctions:this.nativeFunctions,injectedNative:this.injectedNative,gpu:this,validate,onRequestFallback,onRequestSwitchKernel},settingsCopy);const kernel=new this.Kernel(source,mergedSettings);const kernelRun=kernelRunShortcut(kernel);if(!this.canvas){this.canvas=kernel.canvas}if(!this.context){this.context=kernel.context}kernels.push(kernel);return kernelRun}createKernelMap(){let fn2;let settings;const argument2Type=typeof arguments[arguments.length-2];if(argument2Type==="function"||argument2Type==="string"){fn2=arguments[arguments.length-2];settings=arguments[arguments.length-1]}else{fn2=arguments[arguments.length-1]}if(this.mode!=="dev"){if(!this.Kernel.isSupported||!this.Kernel.features.kernelMap){if(this.mode&&kernelTypes.indexOf(this.mode)<0){throw new Error(`kernelMap not supported on ${this.Kernel.name}`)}}}const settingsCopy=upgradeDeprecatedCreateKernelSettings(settings);if(settings&&typeof settings.argumentTypes==="object"){settingsCopy.argumentTypes=Object.keys(settings.argumentTypes).map(argumentName=>settings.argumentTypes[argumentName])}if(Array.isArray(arguments[0])){settingsCopy.subKernels=[];const functions=arguments[0];for(let i=0;i<functions.length;i++){const source=functions[i].toString();const name2=utils.getFunctionNameFromString(source);settingsCopy.subKernels.push({name:name2,source,property:i})}}else{settingsCopy.subKernels=[];const functions=arguments[0];for(let p in functions){if(!functions.hasOwnProperty(p))continue;const source=functions[p].toString();const name2=utils.getFunctionNameFromString(source);settingsCopy.subKernels.push({name:name2||p,source,property:p})}}return this.createKernel(fn2,settingsCopy)}combineKernels(){const firstKernel=arguments[0];const combinedKernel=arguments[arguments.length-1];if(firstKernel.kernel.constructor.mode==="cpu")return combinedKernel;const canvas=arguments[0].canvas;const context=arguments[0].context;const max=arguments.length-1;for(let i=0;i<max;i++){arguments[i].setCanvas(canvas).setContext(context).setPipeline(true)}return function(){const texture=combinedKernel.apply(this,arguments);if(texture.toArray){return texture.toArray()}return texture}}setFunctions(functions){this.functions=functions;return this}setNativeFunctions(nativeFunctions){this.nativeFunctions=nativeFunctions;return this}addFunction(source,settings){this.functions.push({source,settings});return this}addNativeFunction(name2,source,settings){if(this.kernels.length>0){throw new Error(\'Cannot call "addNativeFunction" after "createKernels" has been called.\')}this.nativeFunctions.push(Object.assign({name:name2,source},settings));return this}injectNative(source){this.injectedNative=source;return this}destroy(){return new Promise((resolve,reject)=>{if(!this.kernels){resolve()}setTimeout(()=>{try{for(let i=0;i<this.kernels.length;i++){this.kernels[i].destroy(true)}let firstKernel=this.kernels[0];if(firstKernel){if(firstKernel.kernel){firstKernel=firstKernel.kernel}if(firstKernel.constructor.destroyContext){firstKernel.constructor.destroyContext(this.context)}}}catch(e){reject(e)}resolve()},0)})}}function upgradeDeprecatedCreateKernelSettings(settings){if(!settings){return{}}const upgradedSettings=Object.assign({},settings);if(settings.hasOwnProperty("floatOutput")){utils.warnDeprecated("setting","floatOutput","precision");upgradedSettings.precision=settings.floatOutput?"single":"unsigned"}if(settings.hasOwnProperty("outputToTexture")){utils.warnDeprecated("setting","outputToTexture","pipeline");upgradedSettings.pipeline=Boolean(settings.outputToTexture)}if(settings.hasOwnProperty("outputImmutable")){utils.warnDeprecated("setting","outputImmutable","immutable");upgradedSettings.immutable=Boolean(settings.outputImmutable)}if(settings.hasOwnProperty("floatTextures")){utils.warnDeprecated("setting","floatTextures","optimizeFloatMemory");upgradedSettings.optimizeFloatMemory=Boolean(settings.floatTextures)}return upgradedSettings}module3.exports={GPU:GPU2,kernelOrder,kernelTypes}},{"./backend/cpu/kernel":8,"./backend/headless-gl/kernel":34,"./backend/kernel":36,"./backend/web-gl/kernel":70,"./backend/web-gl2/kernel":105,"./kernel-run-shortcut":111,"./utils":114,"gpu-mock.js":4}],109:[function(require2,module3,exports3){const{GPU:GPU2}=require2("./gpu");const{alias}=require2("./alias");const{utils}=require2("./utils");const{Input,input}=require2("./input");const{Texture}=require2("./texture");const{FunctionBuilder}=require2("./backend/function-builder");const{FunctionNode}=require2("./backend/function-node");const{CPUFunctionNode}=require2("./backend/cpu/function-node");const{CPUKernel}=require2("./backend/cpu/kernel");const{HeadlessGLKernel}=require2("./backend/headless-gl/kernel");const{WebGLFunctionNode}=require2("./backend/web-gl/function-node");const{WebGLKernel}=require2("./backend/web-gl/kernel");const{kernelValueMaps:webGLKernelValueMaps}=require2("./backend/web-gl/kernel-value-maps");const{WebGL2FunctionNode}=require2("./backend/web-gl2/function-node");const{WebGL2Kernel}=require2("./backend/web-gl2/kernel");const{kernelValueMaps:webGL2KernelValueMaps}=require2("./backend/web-gl2/kernel-value-maps");const{GLKernel}=require2("./backend/gl/kernel");const{Kernel}=require2("./backend/kernel");const{FunctionTracer}=require2("./backend/function-tracer");const mathRandom=require2("./plugins/math-random-uniformly-distributed");module3.exports={alias,CPUFunctionNode,CPUKernel,GPU:GPU2,FunctionBuilder,FunctionNode,HeadlessGLKernel,Input,input,Texture,utils,WebGL2FunctionNode,WebGL2Kernel,webGL2KernelValueMaps,WebGLFunctionNode,WebGLKernel,webGLKernelValueMaps,GLKernel,Kernel,FunctionTracer,plugins:{mathRandom}}},{"./alias":5,"./backend/cpu/function-node":6,"./backend/cpu/kernel":8,"./backend/function-builder":9,"./backend/function-node":10,"./backend/function-tracer":11,"./backend/gl/kernel":13,"./backend/headless-gl/kernel":34,"./backend/kernel":36,"./backend/web-gl/function-node":38,"./backend/web-gl/kernel":70,"./backend/web-gl/kernel-value-maps":39,"./backend/web-gl2/function-node":73,"./backend/web-gl2/kernel":105,"./backend/web-gl2/kernel-value-maps":74,"./gpu":108,"./input":110,"./plugins/math-random-uniformly-distributed":112,"./texture":113,"./utils":114}],110:[function(require2,module3,exports3){class Input{constructor(value2,size){this.value=value2;if(Array.isArray(size)){this.size=size}else{this.size=new Int32Array(3);if(size.z){this.size=new Int32Array([size.x,size.y,size.z])}else if(size.y){this.size=new Int32Array([size.x,size.y])}else{this.size=new Int32Array([size.x])}}const[w4,h,d4]=this.size;if(d4){if(this.value.length!==w4*h*d4){throw new Error(`Input size ${this.value.length} does not match ${w4} * ${h} * ${d4} = ${h*w4*d4}`)}}else if(h){if(this.value.length!==w4*h){throw new Error(`Input size ${this.value.length} does not match ${w4} * ${h} = ${h*w4}`)}}else{if(this.value.length!==w4){throw new Error(`Input size ${this.value.length} does not match ${w4}`)}}}toArray(){const{utils}=require2("./utils");const[w4,h,d4]=this.size;if(d4){return utils.erectMemoryOptimized3DFloat(this.value.subarray?this.value:new Float32Array(this.value),w4,h,d4)}else if(h){return utils.erectMemoryOptimized2DFloat(this.value.subarray?this.value:new Float32Array(this.value),w4,h)}else{return this.value}}}function input(value2,size){return new Input(value2,size)}module3.exports={Input,input}},{"./utils":114}],111:[function(require2,module3,exports3){const{utils}=require2("./utils");function kernelRunShortcut(kernel){let run=function(){kernel.build.apply(kernel,arguments);run=function(){let result=kernel.run.apply(kernel,arguments);if(kernel.switchingKernels){const reasons=kernel.resetSwitchingKernels();const newKernel=kernel.onRequestSwitchKernel(reasons,arguments,kernel);shortcut.kernel=kernel=newKernel;result=newKernel.run.apply(newKernel,arguments)}if(kernel.renderKernels){return kernel.renderKernels()}else if(kernel.renderOutput){return kernel.renderOutput()}else{return result}};return run.apply(kernel,arguments)};const shortcut=function(){return run.apply(kernel,arguments)};shortcut.exec=function(){return new Promise((accept,reject)=>{try{accept(run.apply(this,arguments))}catch(e){reject(e)}})};shortcut.replaceKernel=function(replacementKernel){kernel=replacementKernel;bindKernelToShortcut(kernel,shortcut)};bindKernelToShortcut(kernel,shortcut);return shortcut}function bindKernelToShortcut(kernel,shortcut){if(shortcut.kernel){shortcut.kernel=kernel;return}const properties=utils.allPropertiesOf(kernel);for(let i=0;i<properties.length;i++){const property=properties[i];if(property[0]==="_"&&property[1]==="_")continue;if(typeof kernel[property]==="function"){if(property.substring(0,3)==="add"||property.substring(0,3)==="set"){shortcut[property]=function(){shortcut.kernel[property].apply(shortcut.kernel,arguments);return shortcut}}else{shortcut[property]=function(){return shortcut.kernel[property].apply(shortcut.kernel,arguments)}}}else{shortcut.__defineGetter__(property,()=>shortcut.kernel[property]);shortcut.__defineSetter__(property,value2=>{shortcut.kernel[property]=value2})}}shortcut.kernel=kernel}module3.exports={kernelRunShortcut}},{"./utils":114}],112:[function(require2,module3,exports3){const source=`// https://www.shadertoy.com/view/4t2SDh\n      //note: uniformly distributed, normalized rand, [0,1]\n      highp float randomSeedShift = 1.0;\n      highp float slide = 1.0;\n      uniform highp float randomSeed1;\n      uniform highp float randomSeed2;\n      \n      highp float nrand(highp vec2 n) {\n        highp float result = fract(sin(dot((n.xy + 1.0) * vec2(randomSeed1 * slide, randomSeed2 * randomSeedShift), vec2(12.9898, 78.233))) * 43758.5453);\n        randomSeedShift = result;\n        if (randomSeedShift > 0.5) {\n          slide += 0.00009; \n        } else {\n          slide += 0.0009;\n        }\n        return result;\n      }`;const name2="math-random-uniformly-distributed";const functionMatch=`Math.random()`;const functionReplace=`nrand(vTexCoord)`;const functionReturnType="Number";const onBeforeRun=kernel=>{kernel.setUniform1f("randomSeed1",Math.random());kernel.setUniform1f("randomSeed2",Math.random())};const plugin={name:name2,onBeforeRun,functionMatch,functionReplace,functionReturnType,source};module3.exports=plugin},{}],113:[function(require2,module3,exports3){class Texture{constructor(settings){const{texture,size,dimensions,output,context,type="NumberTexture",kernel,internalFormat,textureFormat}=settings;if(!output)throw new Error(\'settings property "output" required.\');if(!context)throw new Error(\'settings property "context" required.\');if(!texture)throw new Error(\'settings property "texture" required.\');if(!kernel)throw new Error(\'settings property "kernel" required.\');this.texture=texture;if(texture._refs){texture._refs++}else{texture._refs=1}this.size=size;this.dimensions=dimensions;this.output=output;this.context=context;this.kernel=kernel;this.type=type;this._deleted=false;this.internalFormat=internalFormat;this.textureFormat=textureFormat}toArray(){throw new Error(`Not implemented on ${this.constructor.name}`)}clone(){throw new Error(`Not implemented on ${this.constructor.name}`)}delete(){throw new Error(`Not implemented on ${this.constructor.name}`)}clear(){throw new Error(`Not implemented on ${this.constructor.name}`)}}module3.exports={Texture}},{}],114:[function(require2,module3,exports3){const acorn=require2("acorn");const{Input}=require2("./input");const{Texture}=require2("./texture");const FUNCTION_NAME=/function ([^(]*)/;const STRIP_COMMENTS=/((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;const ARGUMENT_NAMES=/([^\\s,]+)/g;const utils={systemEndianness(){return _systemEndianness},getSystemEndianness(){const b2=new ArrayBuffer(4);const a=new Uint32Array(b2);const c2=new Uint8Array(b2);a[0]=3735928559;if(c2[0]===239)return"LE";if(c2[0]===222)return"BE";throw new Error("unknown endianness")},isFunction(funcObj){return typeof funcObj==="function"},isFunctionString(fn2){if(typeof fn2==="string"){return fn2.slice(0,"function".length).toLowerCase()==="function"}return false},getFunctionNameFromString(funcStr){const result=FUNCTION_NAME.exec(funcStr);if(!result||result.length===0)return null;return result[1].trim()},getFunctionBodyFromString(funcStr){return funcStr.substring(funcStr.indexOf("{")+1,funcStr.lastIndexOf("}"))},getArgumentNamesFromString(fn2){const fnStr=fn2.replace(STRIP_COMMENTS,"");let result=fnStr.slice(fnStr.indexOf("(")+1,fnStr.indexOf(")")).match(ARGUMENT_NAMES);if(result===null){result=[]}return result},clone(obj){if(obj===null||typeof obj!=="object"||obj.hasOwnProperty("isActiveClone"))return obj;const temp=obj.constructor();for(let key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){obj.isActiveClone=null;temp[key]=utils.clone(obj[key]);delete obj.isActiveClone}}return temp},isArray(array){return!isNaN(array.length)},getVariableType(value2,strictIntegers){if(utils.isArray(value2)){if(value2.length>0&&value2[0].nodeName==="IMG"){return"HTMLImageArray"}return"Array"}switch(value2.constructor){case Boolean:return"Boolean";case Number:if(strictIntegers&&Number.isInteger(value2)){return"Integer"}return"Float";case Texture:return value2.type;case Input:return"Input"}switch(value2.nodeName){case"IMG":return"HTMLImage";case"CANVAS":return"HTMLImage";case"VIDEO":return"HTMLVideo"}if(value2.hasOwnProperty("type")){return value2.type}return"Unknown"},getKernelTextureSize(settings,dimensions){let[w4,h,d4]=dimensions;let texelCount=(w4||1)*(h||1)*(d4||1);if(settings.optimizeFloatMemory&&settings.precision==="single"){w4=texelCount=Math.ceil(texelCount/4)}if(h>1&&w4*h===texelCount){return new Int32Array([w4,h])}return utils.closestSquareDimensions(texelCount)},closestSquareDimensions(length){const sqrt=Math.sqrt(length);let high=Math.ceil(sqrt);let low=Math.floor(sqrt);while(high*low<length){high--;low=Math.ceil(length/high)}return new Int32Array([low,Math.ceil(length/low)])},getMemoryOptimizedFloatTextureSize(dimensions,bitRatio){const totalArea=utils.roundTo((dimensions[0]||1)*(dimensions[1]||1)*(dimensions[2]||1)*(dimensions[3]||1),4);const texelCount=totalArea/bitRatio;return utils.closestSquareDimensions(texelCount)},getMemoryOptimizedPackedTextureSize(dimensions,bitRatio){const[w4,h,d4]=dimensions;const totalArea=utils.roundTo((w4||1)*(h||1)*(d4||1),4);const texelCount=totalArea/(4/bitRatio);return utils.closestSquareDimensions(texelCount)},roundTo(n,d4){return Math.floor((n+d4-1)/d4)*d4},getDimensions(x22,pad){let ret;if(utils.isArray(x22)){const dim=[];let temp=x22;while(utils.isArray(temp)){dim.push(temp.length);temp=temp[0]}ret=dim.reverse()}else if(x22 instanceof Texture){ret=x22.output}else if(x22 instanceof Input){ret=x22.size}else{throw new Error(`Unknown dimensions of ${x22}`)}if(pad){ret=Array.from(ret);while(ret.length<3){ret.push(1)}}return new Int32Array(ret)},flatten2dArrayTo(array,target){let offset=0;for(let y5=0;y5<array.length;y5++){target.set(array[y5],offset);offset+=array[y5].length}},flatten3dArrayTo(array,target){let offset=0;for(let z3=0;z3<array.length;z3++){for(let y5=0;y5<array[z3].length;y5++){target.set(array[z3][y5],offset);offset+=array[z3][y5].length}}},flatten4dArrayTo(array,target){let offset=0;for(let l=0;l<array.length;l++){for(let z3=0;z3<array[l].length;z3++){for(let y5=0;y5<array[l][z3].length;y5++){target.set(array[l][z3][y5],offset);offset+=array[l][z3][y5].length}}}},flattenTo(array,target){if(utils.isArray(array[0])){if(utils.isArray(array[0][0])){if(utils.isArray(array[0][0][0])){utils.flatten4dArrayTo(array,target)}else{utils.flatten3dArrayTo(array,target)}}else{utils.flatten2dArrayTo(array,target)}}else{target.set(array)}},splitArray(array,part){const result=[];for(let i=0;i<array.length;i+=part){result.push(new array.constructor(array.buffer,i*4+array.byteOffset,part))}return result},getAstString(source,ast){const lines=Array.isArray(source)?source:source.split(/\\r?\\n/g);const start=ast.loc.start;const end=ast.loc.end;const result=[];if(start.line===end.line){result.push(lines[start.line-1].substring(start.column,end.column))}else{result.push(lines[start.line-1].slice(start.column));for(let i=start.line;i<end.line;i++){result.push(lines[i])}result.push(lines[end.line-1].slice(0,end.column))}return result.join("\\n")},allPropertiesOf(obj){const props=[];do{props.push.apply(props,Object.getOwnPropertyNames(obj))}while(obj=Object.getPrototypeOf(obj));return props},linesToString(lines){if(lines.length>0){return lines.join(";\\n")+";\\n"}else{return"\\n"}},warnDeprecated(type,oldName,newName){if(newName){console.warn(`You are using a deprecated ${type} "${oldName}". It has been replaced with "${newName}". Fixing, but please upgrade as it will soon be removed.`)}else{console.warn(`You are using a deprecated ${type} "${oldName}". It has been removed. Fixing, but please upgrade as it will soon be removed.`)}},flipPixels:(pixels,width,height)=>{const halfHeight=height/2|0;const bytesPerRow=width*4;const temp=new Uint8ClampedArray(width*4);const result=pixels.slice(0);for(let y5=0;y5<halfHeight;++y5){const topOffset=y5*bytesPerRow;const bottomOffset=(height-y5-1)*bytesPerRow;temp.set(result.subarray(topOffset,topOffset+bytesPerRow));result.copyWithin(topOffset,bottomOffset,bottomOffset+bytesPerRow);result.set(temp,bottomOffset)}return result},erectPackedFloat:(array,width)=>{return array.subarray(0,width)},erect2DPackedFloat:(array,width,height)=>{const yResults=new Array(height);for(let y5=0;y5<height;y5++){const xStart=y5*width;const xEnd=xStart+width;yResults[y5]=array.subarray(xStart,xEnd)}return yResults},erect3DPackedFloat:(array,width,height,depth)=>{const zResults=new Array(depth);for(let z3=0;z3<depth;z3++){const yResults=new Array(height);for(let y5=0;y5<height;y5++){const xStart=z3*height*width+y5*width;const xEnd=xStart+width;yResults[y5]=array.subarray(xStart,xEnd)}zResults[z3]=yResults}return zResults},erectMemoryOptimizedFloat:(array,width)=>{return array.subarray(0,width)},erectMemoryOptimized2DFloat:(array,width,height)=>{const yResults=new Array(height);for(let y5=0;y5<height;y5++){const offset=y5*width;yResults[y5]=array.subarray(offset,offset+width)}return yResults},erectMemoryOptimized3DFloat:(array,width,height,depth)=>{const zResults=new Array(depth);for(let z3=0;z3<depth;z3++){const yResults=new Array(height);for(let y5=0;y5<height;y5++){const offset=z3*height*width+y5*width;yResults[y5]=array.subarray(offset,offset+width)}zResults[z3]=yResults}return zResults},erectFloat:(array,width)=>{const xResults=new Float32Array(width);let i=0;for(let x22=0;x22<width;x22++){xResults[x22]=array[i];i+=4}return xResults},erect2DFloat:(array,width,height)=>{const yResults=new Array(height);let i=0;for(let y5=0;y5<height;y5++){const xResults=new Float32Array(width);for(let x22=0;x22<width;x22++){xResults[x22]=array[i];i+=4}yResults[y5]=xResults}return yResults},erect3DFloat:(array,width,height,depth)=>{const zResults=new Array(depth);let i=0;for(let z3=0;z3<depth;z3++){const yResults=new Array(height);for(let y5=0;y5<height;y5++){const xResults=new Float32Array(width);for(let x22=0;x22<width;x22++){xResults[x22]=array[i];i+=4}yResults[y5]=xResults}zResults[z3]=yResults}return zResults},erectArray2:(array,width)=>{const xResults=new Array(width);const xResultsMax=width*4;let i=0;for(let x22=0;x22<xResultsMax;x22+=4){xResults[i++]=array.subarray(x22,x22+2)}return xResults},erect2DArray2:(array,width,height)=>{const yResults=new Array(height);const XResultsMax=width*4;for(let y5=0;y5<height;y5++){const xResults=new Array(width);const offset=y5*XResultsMax;let i=0;for(let x22=0;x22<XResultsMax;x22+=4){xResults[i++]=array.subarray(x22+offset,x22+offset+2)}yResults[y5]=xResults}return yResults},erect3DArray2:(array,width,height,depth)=>{const xResultsMax=width*4;const zResults=new Array(depth);for(let z3=0;z3<depth;z3++){const yResults=new Array(height);for(let y5=0;y5<height;y5++){const xResults=new Array(width);const offset=z3*xResultsMax*height+y5*xResultsMax;let i=0;for(let x22=0;x22<xResultsMax;x22+=4){xResults[i++]=array.subarray(x22+offset,x22+offset+2)}yResults[y5]=xResults}zResults[z3]=yResults}return zResults},erectArray3:(array,width)=>{const xResults=new Array(width);const xResultsMax=width*4;let i=0;for(let x22=0;x22<xResultsMax;x22+=4){xResults[i++]=array.subarray(x22,x22+3)}return xResults},erect2DArray3:(array,width,height)=>{const xResultsMax=width*4;const yResults=new Array(height);for(let y5=0;y5<height;y5++){const xResults=new Array(width);const offset=y5*xResultsMax;let i=0;for(let x22=0;x22<xResultsMax;x22+=4){xResults[i++]=array.subarray(x22+offset,x22+offset+3)}yResults[y5]=xResults}return yResults},erect3DArray3:(array,width,height,depth)=>{const xResultsMax=width*4;const zResults=new Array(depth);for(let z3=0;z3<depth;z3++){const yResults=new Array(height);for(let y5=0;y5<height;y5++){const xResults=new Array(width);const offset=z3*xResultsMax*height+y5*xResultsMax;let i=0;for(let x22=0;x22<xResultsMax;x22+=4){xResults[i++]=array.subarray(x22+offset,x22+offset+3)}yResults[y5]=xResults}zResults[z3]=yResults}return zResults},erectArray4:(array,width)=>{const xResults=new Array(array);const xResultsMax=width*4;let i=0;for(let x22=0;x22<xResultsMax;x22+=4){xResults[i++]=array.subarray(x22,x22+4)}return xResults},erect2DArray4:(array,width,height)=>{const xResultsMax=width*4;const yResults=new Array(height);for(let y5=0;y5<height;y5++){const xResults=new Array(width);const offset=y5*xResultsMax;let i=0;for(let x22=0;x22<xResultsMax;x22+=4){xResults[i++]=array.subarray(x22+offset,x22+offset+4)}yResults[y5]=xResults}return yResults},erect3DArray4:(array,width,height,depth)=>{const xResultsMax=width*4;const zResults=new Array(depth);for(let z3=0;z3<depth;z3++){const yResults=new Array(height);for(let y5=0;y5<height;y5++){const xResults=new Array(width);const offset=z3*xResultsMax*height+y5*xResultsMax;let i=0;for(let x22=0;x22<xResultsMax;x22+=4){xResults[i++]=array.subarray(x22+offset,x22+offset+4)}yResults[y5]=xResults}zResults[z3]=yResults}return zResults},flattenFunctionToString:(source,settings)=>{const{findDependency,thisLookup,doNotDefine}=settings;let flattened=settings.flattened;if(!flattened){flattened=settings.flattened={}}const ast=acorn.parse(source);const functionDependencies=[];let indent=0;function flatten(ast2){if(Array.isArray(ast2)){const results=[];for(let i=0;i<ast2.length;i++){results.push(flatten(ast2[i]))}return results.join("")}switch(ast2.type){case"Program":return flatten(ast2.body)+(ast2.body[0].type==="VariableDeclaration"?";":"");case"FunctionDeclaration":return`function ${ast2.id.name}(${ast2.params.map(flatten).join(", ")}) ${flatten(ast2.body)}`;case"BlockStatement":{const result2=[];indent+=2;for(let i=0;i<ast2.body.length;i++){const flat=flatten(ast2.body[i]);if(flat){result2.push(" ".repeat(indent)+flat,";\\n")}}indent-=2;return`{\n${result2.join("")}}`}case"VariableDeclaration":const declarations=utils.normalizeDeclarations(ast2).map(flatten).filter(r=>r!==null);if(declarations.length<1){return""}else{return`${ast2.kind} ${declarations.join(",")}`}case"VariableDeclarator":if(ast2.init.object&&ast2.init.object.type==="ThisExpression"){const lookup=thisLookup(ast2.init.property.name,true);if(lookup){return`${ast2.id.name} = ${flatten(ast2.init)}`}else{return null}}else{return`${ast2.id.name} = ${flatten(ast2.init)}`}case"CallExpression":{if(ast2.callee.property.name==="subarray"){return`${flatten(ast2.callee.object)}.${flatten(ast2.callee.property)}(${ast2.arguments.map(value2=>flatten(value2)).join(", ")})`}if(ast2.callee.object.name==="gl"||ast2.callee.object.name==="context"){return`${flatten(ast2.callee.object)}.${flatten(ast2.callee.property)}(${ast2.arguments.map(value2=>flatten(value2)).join(", ")})`}if(ast2.callee.object.type==="ThisExpression"){functionDependencies.push(findDependency("this",ast2.callee.property.name));return`${ast2.callee.property.name}(${ast2.arguments.map(value2=>flatten(value2)).join(", ")})`}else if(ast2.callee.object.name){const foundSource=findDependency(ast2.callee.object.name,ast2.callee.property.name);if(foundSource===null){return`${ast2.callee.object.name}.${ast2.callee.property.name}(${ast2.arguments.map(value2=>flatten(value2)).join(", ")})`}else{functionDependencies.push(foundSource);return`${ast2.callee.property.name}(${ast2.arguments.map(value2=>flatten(value2)).join(", ")})`}}else if(ast2.callee.object.type==="MemberExpression"){return`${flatten(ast2.callee.object)}.${ast2.callee.property.name}(${ast2.arguments.map(value2=>flatten(value2)).join(", ")})`}else{throw new Error("unknown ast.callee")}}case"ReturnStatement":return`return ${flatten(ast2.argument)}`;case"BinaryExpression":return`(${flatten(ast2.left)}${ast2.operator}${flatten(ast2.right)})`;case"UnaryExpression":if(ast2.prefix){return`${ast2.operator} ${flatten(ast2.argument)}`}else{return`${flatten(ast2.argument)} ${ast2.operator}`}case"ExpressionStatement":return`${flatten(ast2.expression)}`;case"SequenceExpression":return`(${flatten(ast2.expressions)})`;case"ArrowFunctionExpression":return`(${ast2.params.map(flatten).join(", ")}) => ${flatten(ast2.body)}`;case"Literal":return ast2.raw;case"Identifier":return ast2.name;case"MemberExpression":if(ast2.object.type==="ThisExpression"){return thisLookup(ast2.property.name)}if(ast2.computed){return`${flatten(ast2.object)}[${flatten(ast2.property)}]`}return flatten(ast2.object)+"."+flatten(ast2.property);case"ThisExpression":return"this";case"NewExpression":return`new ${flatten(ast2.callee)}(${ast2.arguments.map(value2=>flatten(value2)).join(", ")})`;case"ForStatement":return`for (${flatten(ast2.init)};${flatten(ast2.test)};${flatten(ast2.update)}) ${flatten(ast2.body)}`;case"AssignmentExpression":return`${flatten(ast2.left)}${ast2.operator}${flatten(ast2.right)}`;case"UpdateExpression":return`${flatten(ast2.argument)}${ast2.operator}`;case"IfStatement":return`if (${flatten(ast2.test)}) ${flatten(ast2.consequent)}`;case"ThrowStatement":return`throw ${flatten(ast2.argument)}`;case"ObjectPattern":return ast2.properties.map(flatten).join(", ");case"ArrayPattern":return ast2.elements.map(flatten).join(", ");case"DebuggerStatement":return"debugger;";case"ConditionalExpression":return`${flatten(ast2.test)}?${flatten(ast2.consequent)}:${flatten(ast2.alternate)}`;case"Property":if(ast2.kind==="init"){return flatten(ast2.key)}}throw new Error(`unhandled ast.type of ${ast2.type}`)}const result=flatten(ast);if(functionDependencies.length>0){const flattenedFunctionDependencies=[];for(let i=0;i<functionDependencies.length;i++){const functionDependency=functionDependencies[i];if(!flattened[functionDependency]){flattened[functionDependency]=true}functionDependency?flattenedFunctionDependencies.push(utils.flattenFunctionToString(functionDependency,settings)+"\\n"):""}return flattenedFunctionDependencies.join("")+result}return result},normalizeDeclarations:ast=>{if(ast.type!=="VariableDeclaration")throw new Error(\'Ast is not of type "VariableDeclaration"\');const normalizedDeclarations=[];for(let declarationIndex=0;declarationIndex<ast.declarations.length;declarationIndex++){const declaration=ast.declarations[declarationIndex];if(declaration.id&&declaration.id.type==="ObjectPattern"&&declaration.id.properties){const{properties}=declaration.id;for(let propertyIndex=0;propertyIndex<properties.length;propertyIndex++){const property=properties[propertyIndex];if(property.value.type==="ObjectPattern"&&property.value.properties){for(let subPropertyIndex=0;subPropertyIndex<property.value.properties.length;subPropertyIndex++){const subProperty=property.value.properties[subPropertyIndex];if(subProperty.type==="Property"){normalizedDeclarations.push({type:"VariableDeclarator",id:{type:"Identifier",name:subProperty.key.name},init:{type:"MemberExpression",object:{type:"MemberExpression",object:declaration.init,property:{type:"Identifier",name:property.key.name},computed:false},property:{type:"Identifier",name:subProperty.key.name},computed:false}})}else{throw new Error("unexpected state")}}}else if(property.value.type==="Identifier"){normalizedDeclarations.push({type:"VariableDeclarator",id:{type:"Identifier",name:property.value&&property.value.name?property.value.name:property.key.name},init:{type:"MemberExpression",object:declaration.init,property:{type:"Identifier",name:property.key.name},computed:false}})}else{throw new Error("unexpected state")}}}else if(declaration.id&&declaration.id.type==="ArrayPattern"&&declaration.id.elements){const{elements}=declaration.id;for(let elementIndex=0;elementIndex<elements.length;elementIndex++){const element=elements[elementIndex];if(element.type==="Identifier"){normalizedDeclarations.push({type:"VariableDeclarator",id:{type:"Identifier",name:element.name},init:{type:"MemberExpression",object:declaration.init,property:{type:"Literal",value:elementIndex,raw:elementIndex.toString(),start:element.start,end:element.end},computed:true}})}else{throw new Error("unexpected state")}}}else{normalizedDeclarations.push(declaration)}}return normalizedDeclarations},splitHTMLImageToRGB:(gpu,image)=>{const rKernel=gpu.createKernel(function(a){const pixel=a[this.thread.y][this.thread.x];return pixel.r*255},{output:[image.width,image.height],precision:"unsigned",argumentTypes:{a:"HTMLImage"}});const gKernel=gpu.createKernel(function(a){const pixel=a[this.thread.y][this.thread.x];return pixel.g*255},{output:[image.width,image.height],precision:"unsigned",argumentTypes:{a:"HTMLImage"}});const bKernel=gpu.createKernel(function(a){const pixel=a[this.thread.y][this.thread.x];return pixel.b*255},{output:[image.width,image.height],precision:"unsigned",argumentTypes:{a:"HTMLImage"}});const aKernel=gpu.createKernel(function(a){const pixel=a[this.thread.y][this.thread.x];return pixel.a*255},{output:[image.width,image.height],precision:"unsigned",argumentTypes:{a:"HTMLImage"}});const result=[rKernel(image),gKernel(image),bKernel(image),aKernel(image)];result.rKernel=rKernel;result.gKernel=gKernel;result.bKernel=bKernel;result.aKernel=aKernel;result.gpu=gpu;return result},splitRGBAToCanvases:(gpu,rgba,width,height)=>{const visualKernelR=gpu.createKernel(function(v3){const pixel=v3[this.thread.y][this.thread.x];this.color(pixel.r/255,0,0,255)},{output:[width,height],graphical:true,argumentTypes:{v:"Array2D(4)"}});visualKernelR(rgba);const visualKernelG=gpu.createKernel(function(v3){const pixel=v3[this.thread.y][this.thread.x];this.color(0,pixel.g/255,0,255)},{output:[width,height],graphical:true,argumentTypes:{v:"Array2D(4)"}});visualKernelG(rgba);const visualKernelB=gpu.createKernel(function(v3){const pixel=v3[this.thread.y][this.thread.x];this.color(0,0,pixel.b/255,255)},{output:[width,height],graphical:true,argumentTypes:{v:"Array2D(4)"}});visualKernelB(rgba);const visualKernelA=gpu.createKernel(function(v3){const pixel=v3[this.thread.y][this.thread.x];this.color(255,255,255,pixel.a/255)},{output:[width,height],graphical:true,argumentTypes:{v:"Array2D(4)"}});visualKernelA(rgba);return[visualKernelR.canvas,visualKernelG.canvas,visualKernelB.canvas,visualKernelA.canvas]},getMinifySafeName:fn2=>{try{const ast=acorn.parse(`const value = ${fn2.toString()}`);const{init}=ast.body[0].declarations[0];return init.body.name||init.body.body[0].argument.name}catch(e){throw new Error("Unrecognized function type.  Please use `() => yourFunctionVariableHere` or function() { return yourFunctionVariableHere; }")}},sanitizeName:function(name2){if(dollarSign.test(name2)){name2=name2.replace(dollarSign,"S_S")}if(doubleUnderscore.test(name2)){name2=name2.replace(doubleUnderscore,"U_U")}else if(singleUnderscore.test(name2)){name2=name2.replace(singleUnderscore,"u_u")}return name2}};const dollarSign=/\\$/;const doubleUnderscore=/__/;const singleUnderscore=/_/;const _systemEndianness=utils.getSystemEndianness();module3.exports={utils}},{"./input":110,"./texture":113,"acorn":1}]},{},[107])(107)})}});var import_gpu_browser_min=__toESM4(require_gpu_browser_min());function add(a,b2){return a+b2}function sub(a,b2){return a-b2}function mul(a,b2){return a*b2}function div(a,b2){return a/b2}function cadd(a_real,a_imag,b_real,b_imag){return[a_real+b_real,a_imag+b_imag]}function csub(a_real,a_imag,b_real,b_imag){return[a_real-b_real,a_imag-b_imag]}function cmul(a_real,a_imag,b_real,b_imag){return[a_real*b_real-a_imag*b_imag,a_real*b_imag+a_imag*b_real]}function cexp(a_real,a_imag){const er2=Math.exp(a_real);return[er2*Math.cos(a_imag),er2*Math.sin(a_imag)]}function mag(a,b2){return Math.sqrt(a*a+b2*b2)}function conj(imag){return 0-imag}function lof(n){const sqrt_n=Math.sqrt(n);var factor=3;while(factor<=sqrt_n){if(n%factor===0)return factor;factor+=2}}function mean(arr,len){var mean2=0;for(var i=0;i<len;i++){mean2+=arr[i]}return mean2/len}function est(arr,mean2,len){var est2=0;for(var i=0;i<len;i++){est2+=(arr[i]-mean2)*(arr[i]-mean2)}return Math.sqrt(est2)}function mse(arr,mean2,len){var est2=0;var vari=0;for(var i=0;i<len;i++){vari=arr[i]-mean2;est2+=vari*vari}return est2/len}function rms2(arr,mean2,len){var est2=0;var vari=0;for(var i=0;i<len;i++){vari=arr[i]-mean2;est2+=vari*vari}return Math.sqrt(est2/len)}function xcor(arr1,arr1mean,arr1Est,arr2,arr2mean,arr2Est2,len,delay){var correlation=0;for(var i=0;i<len;i++){var j3=i+delay;var k2=0;if(j3<len){k2=arr2[j3]}correlation+=(arr1[i]-arr1mean)*(k2-arr2mean)}return correlation/(arr1Est*arr2Est2)}function softmax(array,len,i){var esum=0;for(var j3=0;j3<len;j3++){esum+=Math.exp(array[j3])}return Math.exp(array[i])/esum}function DFT(signal,len,freq){var real=0;var imag=0;var _len=1/len;var shared=6.28318530718*freq*_len;for(var i=0;i<len;i++){var sharedi=shared*i;real=real+signal[i]*Math.cos(sharedi);imag=imag-signal[i]*Math.sin(sharedi)}return[real*_len,imag*_len]}function DFTlist(signals,len,freq,n){var real=0;var imag=0;var _len=1/len;var shared=6.28318530718*freq*_len;for(var i=0;i<len;i++){var sharedi=shared*i;real=real+signals[i+(len-1)*n]*Math.cos(sharedi);imag=imag-signals[i+(len-1)*n]*Math.sin(sharedi)}return[real*_len,imag*_len]}function FFT(signal,len,freq,sr2){var real=0;var imag=0;var _len=1/len;var shared=6.28318530718*freq*_len;var skip=1;var N3=0;var factor=sr2*.25;if(freq<=factor){while(freq<=factor){factor=factor*.5;skip+=1}}for(var i=0;i<len;i+=skip){var j3=i;if(j3>len){j3=len}var sharedi=shared*j3;real=real+signal[j3]*Math.cos(sharedi);imag=imag-signal[j3]*Math.sin(sharedi);N3+=1}return[real/N3,imag/N3]}function FFTlist(signals,len,freq,n,sr2){var real=0;var imag=0;var _len=1/len;var shared=6.28318530718*freq*_len;var skip=1;var N3=0;var factor=sr2*.25;if(freq<=factor){while(freq<=factor){factor=factor*.5;skip+=1}}for(var i=0;i<len;i+=skip){var j3=i;if(j3>len){j3=len}var sharedi=shared*j3;real=real+signals[j3+(len-1)*n]*Math.cos(sharedi);imag=imag-signals[j3+(len-1)*n]*Math.sin(sharedi);N3+=1}return[real/N3,imag/N3]}function iDFT(fft,len,freq){var real=0;var imag=0;var _len=1/len;var shared=6.28318530718*freq*_len;for(var i=0;i<len;i++){var sharedi=shared*i;real=real+fft[i]*Math.cos(sharedi);imag=fft[i]*Math.sin(sharedi)-imag}return[real*_len,imag*_len]}function iDFTlist(fft,len,freq,n){var real=0;var imag=0;var _len=1/len;var shared=6.28318530718*freq*_len;for(var i=0;i<len;i++){var sharedi=shared*i;real=real+fft[i+(len-1)*n]*Math.cos(sharedi);imag=fft[i+(len-1)*n]*Math.sin(sharedi)-imag}return[real*_len,imag*_len]}function iFFT(fft,len,freq,sr2){var real=0;var imag=0;var _len=1/len;var shared=6.28318530718*freq*_len;var skip=1;var N3=0;var factor=sr2*.25;if(freq<=factor){while(freq<=factor){factor=factor*.5;skip+=1}}for(var i=0;i<len;i+=skip){var j3=i;if(j3>len){j3=len}var sharedi=shared*j3;real=real+fft[j3]*Math.cos(sharedi);imag=fft[j3]*Math.sin(sharedi)-imag;N3+=1}return[real/N3,imag/N3]}function iFFTlist(signals,len,freq,n,sr2){var real=0;var imag=0;var _len=1/len;var shared=6.28318530718*freq*_len;var skip=1;var N3=0;var factor=sr2*.25;if(freq<=factor){while(freq<=factor){factor=factor*.5;skip+=1}}for(var i=0;i<len;i+=skip){var j3=i;if(j3>len){j3=len}var sharedi=shared*j3;real=real+signals[j3+(len-1)*n]*Math.cos(sharedi);imag=signals[j3+(len-1)*n]*Math.sin(sharedi)-imag;N3+=1}return[real/N3,imag/N3]}function correlogramsKern(arrays,len){var k2=Math.floor(this.thread.x/len)*2;var delay=this.thread.x-Math.floor(this.thread.x/len)*len;var arr1mean=mean(arrays[k2],len);var arr2mean=mean(arrays[k2+1],len);var arr1Est=est(arrays[k2],arr1mean,len);var arr2Est2=est(arrays[k2+1],arr2mean,len);var y_x=xcor(arrays[k2],arr1mean,arr1Est,arrays[k2+1],arr2mean,arr2Est2,len,delay);return y_x}function correlogramsPCKern(arrays,len,means,estimators){var k2=Math.floor(this.thread.x/len)*2;var delay=this.thread.x-Math.floor(this.thread.x/len)*len;var arr1mean=means[k2];var arr2mean=means[k2+1];var arr1Est=estimators[k2];var arr2Est2=estimators[k2+1];var y_x=xcor(arrays[k2],arr1mean,arr1Est,arrays[k2+1],arr2mean,arr2Est2,len,delay);return y_x}function dftKern(signal,len,scalar){var result=DFT(signal,len,this.thread.x);return mag(result[0],result[1])*scalar}function idftKern(amplitudes,len,scalar){var result=iDFT(amplitudes,len,this.thread.x);return mag(result[0],result[1])*scalar}function fftKern(signal,len,scalar,sampleRate){var result=FFT(signal,len,this.thread.x,sampleRate);return mag(result[0],result[1])*scalar}function ifftKern(amplitudes,len,scalar,sampleRate){var result=iFFT(amplitudes,len,this.thread.x,sampleRate);return mag(result[0],result[1])*scalar}function listdft2DKern(signals,scalar){var len=this.output.x;var result=DFT(signals[this.thread.y],len,this.thread.x);return mag(result[0],result[1])*scalar}function listdft1DKern(signals,len,scalar){var result=[0,0];if(this.thread.x<=len){result=DFT(signals,len,this.thread.x)}else{var n=Math.floor(this.thread.x/len);result=DFTlist(signals,len,this.thread.x-n*len,n)}return mag(result[0],result[1])*scalar}function listfft1DKern(signals,len,scalar,sps11){var result=[0,0];if(this.thread.x<=len){result=FFT(signals,len,this.thread.x,sps11)}else{var n=Math.floor(this.thread.x/len);result=FFTlist(signals,len,this.thread.x-n*len,n,sps11)}return mag(result[0],result[1])*scalar}function dft_windowedKern(signal,sampleRate,freqStart,freqEnd,scalar){var result=[0,0];var freq=this.thread.x/sampleRate*(freqEnd-freqStart)+freqStart;result=DFT(signal,sampleRate,freq);return mag(result[0],result[1])*scalar}function fft_windowedKern(signal,sampleRate,freqStart,freqEnd,scalar){var result=[0,0];var freq=this.thread.x/sampleRate*(freqEnd-freqStart)+freqStart;result=FFT(signal,sampleRate,freq);return mag(result[0],result[1])*scalar}function idft_windowedKern(amplitudes,sampleRate,freqStart,freqEnd,scalar){var result=[0,0];var freq=this.thread.x/sampleRate*(freqEnd-freqStart)+freqStart;result=iDFT(amplitudes,sampleRate,freq);return mag(result[0],result[1])*scalar}function ifft_windowedKern(amplitudes,sampleRate,freqStart,freqEnd,scalar){var result=[0,0];var freq=this.thread.x/sampleRate*(freqEnd-freqStart)+freqStart;result=iFFT(amplitudes,sampleRate,freq);return mag(result[0],result[1])*scalar}function listdft1D_windowedKern(signals,sampleRate,freqStart,freqEnd,scalar){var result=[0,0];if(this.thread.x<sampleRate){var freq=this.thread.x/sampleRate*(freqEnd-freqStart)+freqStart;result=DFT(signals,sampleRate,freq)}else{var n=Math.floor(this.thread.x/sampleRate);var freq=(this.thread.x-n*sampleRate)/sampleRate*(freqEnd-freqStart)+freqStart;result=DFTlist(signals,sampleRate,freq-n*sampleRate,n)}return mag(result[0],result[1])*scalar}function listfft1D_windowedKern(signals,sampleRate,freqStart,freqEnd,scalar){var result=[0,0];if(this.thread.x<sampleRate){var freq=this.thread.x/sampleRate*(freqEnd-freqStart)+freqStart;result=FFT(signals,sampleRate,freq,sampleRate)}else{var n=Math.floor(this.thread.x/sampleRate);var freq=(this.thread.x-n*sampleRate)/sampleRate*(freqEnd-freqStart)+freqStart;result=FFTlist(signals,sampleRate,freq-n*sampleRate,n,sampleRate)}return mag(result[0],result[1])*scalar}function listidft1D_windowedKern(ffts,sampleRate,freqStart,freqEnd,scalar){var result=[0,0];if(this.thread.x<sampleRate){var freq=this.thread.x/sampleRate*(freqEnd-freqStart)+freqStart;result=iDFT(ffts,sampleRate,freq)}else{var n=Math.floor(this.thread.x/sampleRate);var freq=(this.thread.x-n*sampleRate)/sampleRate*(freqEnd-freqStart)+freqStart;result=iDFTlist(ffts,sampleRate,freq-n*sampleRate,n)}return mag(result[0]*2,result[1]*2)*scalar}function listifft1D_windowedKern(ffts,sampleRate,freqStart,freqEnd,scalar){var result=[0,0];if(this.thread.x<sampleRate){var freq=this.thread.x/sampleRate*(freqEnd-freqStart)+freqStart;result=iFFT(ffts,sampleRate,freq)}else{var n=Math.floor(this.thread.x/sampleRate);var freq=(this.thread.x-n*sampleRate)/sampleRate*(freqEnd-freqStart)+freqStart;result=iFFTlist(ffts,sampleRate,freq-n*sampleRate,n)}return mag(result[0]*2,result[1]*2)*scalar}function bulkArrayMulKern(arrays,len,n,scalar){var i=n*Math.floor(this.thread.x/len);var product=arrays[i][this.thread.x];for(var j3=0;j3<n;j3++){product*=arrays[j3][this.thread.x]}return product*scalar}function ImgConv2DKern(img,width,height,kernel,kernelLength){let kernelRadius=(Math.sqrt(kernelLength)-1)/2;const kSize=2*kernelRadius+1;let r=0,g3=0,b2=0;let i=-kernelRadius;let kernelOffset=0;while(i<=kernelRadius){if(this.thread.x+i<0||this.thread.x+i>=width){i++;continue}let j3=-kernelRadius;while(j3<=kernelRadius){if(this.thread.y+j3<0||this.thread.y+j3>=height){j3++;continue}kernelOffset=(j3+kernelRadius)*kSize+i+kernelRadius;const weights=kernel[kernelOffset];const pixel=img[this.thread.y+i][this.thread.x+j3];r+=pixel.r*weights;g3+=pixel.g*weights;b2+=pixel.b*weights;j3++}i++}this.color(r,g3,b2)}function multiImgConv2DKern(img,width,height,kernels,kernelLengths,nKernels){let r=0,g3=0,b2=0;for(var i=0;i<nKernels;i++){let kernelLength=kernelLengths[i];let kernelRadius=(Math.sqrt(kernelLength)-1)/2;const kSize=2*kernelRadius+1;let k2=-kernelRadius;let kernelOffset=0;while(k2<=kernelRadius){if(this.thread.x+k2<0||this.thread.x+k2>=width){k2++;continue}let j3=-kernelRadius;while(j3<=kernelRadius){if(this.thread.y+j3<0||this.thread.y+j3>=height){j3++;continue}kernelOffset=(j3+kernelRadius)*kSize+k2+kernelRadius;const weights=kernels[i][kernelOffset];const pixel=img[this.thread.y+k2][this.thread.x+j3];r+=pixel.r*weights;g3+=pixel.g*weights;b2+=pixel.b*weights;j3++}k2++}}this.color(r,g3,b2)}function transpose2DKern(mat2){return mat2[this.thread.y][this.thread.x]}var createGpuKernels={correlogramsKern,correlogramsPCKern,dftKern,idftKern,fftKern,ifftKern,dft_windowedKern,idft_windowedKern,fft_windowedKern,ifft_windowedKern,listdft2DKern,listdft1DKern,listfft1DKern,listfft1D_windowedKern,listdft1D_windowedKern,listidft1D_windowedKern,listifft1D_windowedKern,bulkArrayMulKern,multiImgConv2DKern,ImgConv2DKern,transpose2DKern};var addGpuFunctions=[add,sub,mul,div,cadd,csub,cmul,cexp,mag,conj,lof,mean,est,mse,rms2,xcor,softmax,DFT,DFTlist,iDFT,iDFTlist,FFT,iFFT,iFFTlist];function makeKrnl(gpu,f,opts={setDynamicOutput:true,setDynamicArguments:true,setPipeline:true,setImmutable:true,setGraphical:false}){const k2=gpu.createKernel(f);if(opts.setDynamicOutput)k2.setDynamicOutput(true);if(opts.output)k2.setOutput(opts.output);if(opts.setDynamicArguments)k2.setDynamicArguments(true);if(opts.setPipeline)k2.setPipeline(true);if(opts.setImmutable)k2.setImmutable(true);if(opts.setGraphical)k2.setGraphical(true);return k2}function makeCanvasKrnl(gpu,f,opts={output:[300,300],setDynamicArguments:true,setDynamicOutput:true,setPipeline:false,setImmutable:true,setGraphical:true},divId){const k2=makeKrnl(gpu,f,opts);const canvas=k2.canvas;if(typeof divId==="string")document.getElementById(toAppend).appendChild(canvas);else if(divId)toAppend.appendChild(canvas);else document.body.appendChild(canvas);return k2}var gpuUtils=class{constructor(gpu=new GPU){this.gpu=gpu;this.kernels=new Map;this.kernel;this.PI=3.141592653589793;this.SQRT1_2=.7071067811865476;this.addFunctions();this.imgkernels={edgeDetection:[-1,-1,-1,-1,8,-1,-1,-1,-1],boxBlur:[1/9,1/9,1/9,1/9,1/9,1/9,1/9,1/9,1/9],sobelLeft:[1,0,-1,2,0,-2,1,0,-1],sobelRight:[-1,0,1,-2,0,2,-1,0,1],sobelTop:[1,2,1,0,0,0,-1,-2,-1],sobelBottom:[-1,2,1,0,0,0,1,2,1],identity:[0,0,0,0,1,0,0,0,0],gaussian3x3:[1,2,1,2,4,2,1,2,1],guassian7x7:[0,0,0,5,0,0,0,0,5,18,32,18,5,0,0,18,64,100,64,18,0,5,32,100,100,100,32,5,0,18,64,100,64,18,0,0,5,18,32,18,5,0,0,0,0,5,0,0,0],emboss:[-2,-1,0,-1,1,1,0,1,2],sharpen:[0,-1,0,-1,5,-1,0,-1,0]}}addFunction(func=function f(){}){this.gpu.addFunction(func)}addKernel(name2="",krnl=function foo(){},opts){let found=this.kernels.get(name2);if(!found){this.kernels.set(name2,makeKrnl(this.gpu,krnl,opts));return true}else{console.error("Kernel already exists");return false}}addCanvasKernel(name2,f,opts,divId){let found=this.kernels.get(name2);if(!found){let krnl=makeCanvasKrnl(this.gpu,f,opts,divId);this.kernels.set(name2,krnl);return krnl}else{console.error("Kernel already exists");return false}}combineKernels(name2,fs4=[],ckrnl=function foo(){}){let found=this.kernels.get(name2);if(!found){fs4.forEach((f,i)=>{if(typeof f==="string"){let found2=this.kernels.get(f);if(found2)fs4[i]=found2;else return false}else if(typeof f==="function"){if(this.kernels.get(f.name)){}else{this.addKernel(f.name,f)}}});let krnl=this.gpu.combineKernels(...fs4,ckrnl);this.kernels.set(name2,krnl);return krnl}else{console.error("Kernel already exists");return false}}callKernel(name2="",args=[]){let result;let krnl=this.kernels.get(name2);if(!krnl){console.error("Kernel not found");return false}result=krnl(...args);return result}callCanvasKernel(name2="",args=[],outputDims=[]){let result;let krnl=this.kernels.get(name2);if(!krnl){console.error("Kernel not found");return false}else{if(outputDims.length===2)krnl.setOutput(outputDims);result=krnl(...args);return result}}hasKernel(name2=""){let found=this.kernels.get(name2);if(!found){return false}else return true}addFunctions(){addGpuFunctions.forEach(f=>this.gpu.addFunction(f));this.correlograms=makeKrnl(this.gpu,createGpuKernels.correlogramsKern);this.correlogramsPC=makeKrnl(this.gpu,createGpuKernels.correlogramsPCKern);this.dft=makeKrnl(this.gpu,createGpuKernels.dftKern);this.idft=makeKrnl(this.gpu,createGpuKernels.idftKern);this.dft_windowed=makeKrnl(this.gpu,createGpuKernels.dft_windowedKern);this.idft_windowed=makeKrnl(this.gpu,createGpuKernels.idft_windowedKern);this.fft=makeKrnl(this.gpu,createGpuKernels.fftKern);this.ifft=makeKrnl(this.gpu,createGpuKernels.ifftKern);this.fft_windowed=makeKrnl(this.gpu,createGpuKernels.fft_windowedKern);this.ifft_windowed=makeKrnl(this.gpu,createGpuKernels.ifft_windowedKern);this.listdft2D=makeKrnl(this.gpu,createGpuKernels.listdft2DKern);this.listdft1D=makeKrnl(this.gpu,createGpuKernels.listdft1DKern);this.listdft1D_windowed=makeKrnl(this.gpu,createGpuKernels.listdft1D_windowedKern);this.listfft1D=makeKrnl(this.gpu,createGpuKernels.listfft1DKern);this.listfft1D_windowed=makeKrnl(this.gpu,createGpuKernels.listfft1D_windowedKern);this.listidft1D_windowed=makeKrnl(this.gpu,createGpuKernels.listidft1D_windowedKern);this.listifft1D_windowed=makeKrnl(this.gpu,createGpuKernels.listifft1D_windowedKern);this.bulkArrayMul=makeKrnl(this.gpu,createGpuKernels.bulkArrayMulKern);let kernels=[{name:"correlograms",krnl:this.correlograms},{name:"correlogramsPC",krnl:this.correlogramsPC},{name:"dft",krnl:this.dft},{name:"idft",krnl:this.idft},{name:"dft_windowed",krnl:this.idft_windowed},{name:"fft",krnl:this.fft},{name:"ifft",krnl:this.ifft},{name:"fft_windowed",krnl:this.fft_windowed},{name:"ifft_windowed",krnl:this.ifft_windowed},{name:"listdft2D",krnl:this.listdft2D},{name:"listdft1D",krnl:this.listdft1D},{name:"listdft1D_windowed",krnl:this.listdft1D_windowed},{name:"listfft1D",krnl:this.listfft1D},{name:"listfft1D_windowed",krnl:this.listfft1D_windowed},{name:"listidft1D_windowed",krnl:this.listidft1D_windowed},{name:"listifft1D_windowed",krnl:this.listifft1D_windowed},{name:"bulkArrayMul",krnl:this.bulkArrayMul}];kernels.forEach(k2=>{this.kernels.set(k2.name,k2)});const signalBandpass=(signal,sampleRate,freqStart,freqEnd,scalar)=>{var dft2=this.fft_windowed(signal,sampleRate,freqStart,freqEnd,scalar,0);var filtered_signal=this.ifft_windowed(dft2,sampleRate,freqStart,freqEnd,scalar);return filtered_signal};const signalBandpassMulti=(signals,sampleRate,freqStart,freqEnd,scalar)=>{var dfts=this.listdft1D_windowed(signals,sampleRate,freqStart,freqEnd,scalar,new Array(Math.ceil(signals/sampleRate)).fill(0));var filtered_signals=this.listifft1D_windowed(dfts,sampleRate,freqStart,freqEnd,scalar);return filtered_signals};this.gpuCoherence=(signals,sampleRate,freqStart,freqEnd,scalar)=>{var xcors=this.correlograms(signals);var dfts=this.listfft1D_windowed(xcors,sampleRate,freqStart,freqEnd,scalar,new Array(Math.ceil(signals/sampleRate)).fill(0));var products=this.bulkArrayMul(dfts,sampleRate,5,1);return products}}gpuXCors(arrays,precompute=false,texOut=false){var outputTex;if(precompute===true){var means=[];var ests=[];arrays.forEach((arr,i2)=>{means.push(arr.reduce((prev,curr)=>curr+=prev)/arr.length);ests.push(Math.sqrt(means[i2].reduce((sum,item)=>sum+=Math.pow(item-mean1,2))))});var meansbuf=[];var estsbuf=[];var buffer=[];for(var i=0;i<arrays.length;i++){for(var j3=i;j3<arrays.length;j3++){buffer.push(...arrays[i],...arrays[j3]);meansbuf.push(means[i],means[j3]);estsbuf.push(ests[i],ests[j3])}}this.correlogramsPC.setOutput([buffer.length]);this.correlogramsPC.setLoopMaxIterations(arrays[0].length*2);outputTex=this.correlogramsPC(buffer,arrays[0].length,meansbuf,estsbuf)}else{var buffer=[];for(var i=0;i<arrays.length;i++){for(var j3=i;j3<arrays.length;j3++){buffer.push(...arrays[i],...arrays[j3])}}this.correlograms.setOutput([buffer.length]);this.correlograms.setLoopMaxIterations(arrays[0].length*2);outputTex=this.correlograms(buffer,arrays[0].length)}if(texOut===true){return outputTex}var outputbuf=outputTex.toArray();outputTex.delete();var outputarrs=[];for(var i=0;i<arrays.length;i++){outputarrs.push(outputbuf.splice(0,arrays[0].length))}return outputarrs}gpuDFT(signalBuffer,nSeconds,scalar=1,texOut=false){var nSamples=signalBuffer.length;var sampleRate=nSamples/nSeconds;this.dft.setOutput([signalBuffer.length]);this.dft.setLoopMaxIterations(nSamples);var outputTex=this.dft(signalBuffer,nSamples,scalar);var output=null;if(texOut===false){var freqDist=this.makeFrequencyDistribution(nSamples,sampleRate);var signalBufferProcessed=outputTex.toArray();outputTex.delete();return[freqDist,this.orderMagnitudes(signalBufferProcessed)]}else{var tex=outputTex;outputTex.delete();return tex}}MultiChannelDFT(signalBuffer,nSeconds,scalar=1,texOut=false){var signalBufferProcessed=[];signalBuffer.forEach(row=>{signalBufferProcessed.push(...row)});var nSamplesPerChannel=signalBuffer[0].length;var sampleRate=nSamplesPerChannel/nSeconds;this.listdft1D.setOutput([signalBufferProcessed.length]);this.listdft1D.setLoopMaxIterations(nSamplesPerChannel);var outputTex=this.listdft1D(signalBufferProcessed,nSamplesPerChannel,scalar);if(texOut===false){var orderedMagsList=[];var freqDist=this.makeFrequencyDistribution(nSamplesPerChannel,sampleRate);signalBufferProcessed=outputTex.toArray();for(var i=0;i<signalBufferProcessed.length;i+=nSamplesPerChannel){orderedMagsList.push(this.orderMagnitudes([...signalBufferProcessed.slice(i,i+nSamplesPerChannel)]))}outputTex.delete();return[freqDist,orderedMagsList]}else{var tex=outputTex;outputTex.delete();return tex}}MultiChannelDFT_Bandpass(signalBuffer=[],nSeconds,freqStart,freqEnd,scalar=1,texOut=false){var signalBufferProcessed=[];signalBuffer.forEach(row=>{signalBufferProcessed.push(...row)});var freqEnd_nyquist=freqEnd*2;var nSamplesPerChannel=signalBuffer[0].length;var sampleRate=nSamplesPerChannel/nSeconds;this.listdft1D_windowed.setOutput([signalBufferProcessed.length]);this.listdft1D_windowed.setLoopMaxIterations(nSamplesPerChannel);var outputTex=this.listdft1D_windowed(signalBufferProcessed,sampleRate,freqStart,freqEnd_nyquist,scalar);if(texOut===true){return outputTex}signalBufferProcessed=outputTex.toArray();outputTex.delete();var freqDist=this.bandPassWindow(freqStart,freqEnd,sampleRate);return[freqDist,this.orderBPMagnitudes(signalBufferProcessed,nSeconds,sampleRate,nSamplesPerChannel)]}gpuFFT(signalBuffer,nSeconds,scalar=1,sampleRate,texOut=false){var nSamples=signalBuffer.length;var sampleRate=nSamples/nSeconds;this.fft.setOutput([signalBuffer.length]);this.fft.setLoopMaxIterations(nSamples);var outputTex=this.fft(signalBuffer,nSamples,scalar,sampleRate);var output=null;if(texOut===false){var freqDist=this.makeFrequencyDistribution(nSamples,sampleRate);var signalBufferProcessed=outputTex.toArray();outputTex.delete();return[freqDist,this.orderMagnitudes(signalBufferProcessed)]}else{var tex=outputTex;outputTex.delete();return tex}}MultiChannelFFT(signalBuffer,nSeconds,scalar=1,texOut=false){var signalBufferProcessed=[];signalBuffer.forEach(row=>{signalBufferProcessed.push(...row)});var nSamplesPerChannel=signalBuffer[0].length;var sampleRate=nSamplesPerChannel/nSeconds;this.listfft1D.setOutput([signalBufferProcessed.length]);this.listfft1D.setLoopMaxIterations(nSamplesPerChannel);var outputTex=this.listfft1D(signalBufferProcessed,nSamplesPerChannel,scalar,sampleRate);if(texOut===false){var orderedMagsList=[];var freqDist=this.makeFrequencyDistribution(nSamplesPerChannel,sampleRate);signalBufferProcessed=outputTex.toArray();for(var i=0;i<signalBufferProcessed.length;i+=nSamplesPerChannel){orderedMagsList.push(this.orderMagnitudes([...signalBufferProcessed.slice(i,i+nSamplesPerChannel)]))}outputTex.delete();return[freqDist,orderedMagsList]}else{var tex=outputTex;outputTex.delete();return tex}}MultiChannelFFT_Bandpass(signalBuffer=[],nSeconds,freqStart,freqEnd,scalar=1,texOut=false){var signalBufferProcessed=[];signalBuffer.forEach(row=>{signalBufferProcessed.push(...row)});var freqEnd_nyquist=freqEnd*2;var nSamplesPerChannel=signalBuffer[0].length;var sampleRate=nSamplesPerChannel/nSeconds;this.listfft1D_windowed.setOutput([signalBufferProcessed.length]);this.listfft1D_windowed.setLoopMaxIterations(nSamplesPerChannel);var outputTex=this.listfft1D_windowed(signalBufferProcessed,sampleRate,freqStart,freqEnd_nyquist,scalar);if(texOut===true){return outputTex}signalBufferProcessed=outputTex.toArray();outputTex.delete();var freqDist=this.bandPassWindow(freqStart,freqEnd,sampleRate);return[freqDist,this.orderBPMagnitudes(signalBufferProcessed,nSeconds,sampleRate,nSamplesPerChannel)]}orderMagnitudes(unorderedMags){return[...unorderedMags.slice(Math.ceil(unorderedMags.length*.5),unorderedMags.length),...unorderedMags.slice(0,Math.ceil(unorderedMags.length*.5))]}makeFrequencyDistribution(FFTlength,sampleRate){var N3=FFTlength;var df2=sampleRate/N3;var freqDist=[];for(var i=-N3/2;i<N3/2;i++){var freq=i*df2;freqDist.push(freq)}return freqDist}orderBPMagnitudes(signalBufferProcessed,nSeconds,sampleRate,nSamplesPerChannel){var magList=[];for(var i=0;i<signalBufferProcessed.length;i+=nSamplesPerChannel){magList.push([...signalBufferProcessed.slice(i,Math.ceil(nSamplesPerChannel*.5+i))])}var summedMags=[];var _sampleRate=1/sampleRate;if(nSeconds>1){magList.forEach((row,k2)=>{summedMags.push([]);var _max=1/Math.max(...row);for(var i2=0;i2<row.length;i2++){if(i2==0){summedMags[k2]=row.slice(i2,Math.floor(sampleRate));i2=Math.floor(sampleRate)}else{var j3=i2-Math.floor(Math.floor(i2*_sampleRate)*sampleRate)-1;summedMags[k2][j3]=summedMags[k2][j3]*row[i2-1]*_max}}summedMags[k2]=[...summedMags[k2].slice(0,Math.ceil(summedMags[k2].length*.5))]});return summedMags}else{return magList}}bandPassWindow(freqStart,freqEnd,nSteps,posOnly=true){var freqEnd_nyquist=freqEnd*2;let increment=(freqEnd_nyquist-freqStart)/nSteps;var fftwindow=[];if(posOnly===true){for(var i=0;i<Math.ceil(.5*nSteps);i+=increment){fftwindow.push(freqStart+(freqEnd_nyquist-freqStart)*i/nSteps)}}else{for(var i=-Math.ceil(.5*nSteps);i<Math.ceil(.5*nSteps);i+=increment){fftwindow.push(freqStart+(freqEnd_nyquist-freqStart)*i/nSteps)}}return fftwindow}};var __defProp23=Object.defineProperty;var __defNormalProp2=(obj,key,value2)=>key in obj?__defProp23(obj,key,{enumerable:true,configurable:true,writable:true,value:value2}):obj[key]=value2;var __publicField2=(obj,key,value2)=>{__defNormalProp2(obj,typeof key!=="symbol"?key+"":key,value2);return value2};var _Math22=class{constructor(){}static genSineWave(freq=20,peakAmp=1,nSec=1,fs4=512,freq2=0,peakAmp2=1){var sineWave=[];var t2=[];var increment=1/fs4;for(var ti2=0;ti2<nSec;ti2+=increment){var amplitude=Math.sin(2*Math.PI*freq*ti2)*peakAmp;amplitude+=Math.sin(2*Math.PI*freq2*ti2)*peakAmp2;sineWave.push(amplitude);t2.push(ti2)}return[t2,sineWave]}static getSineAmplitude(frequency=20,peakAmplitude=1,ti2=0,tOffset=0){return Math.sin(this.TWO_PI*frequency*ti2+tOffset)*peakAmplitude}static mean(arr){var sum=arr.reduce((prev,curr)=>curr+=prev);return sum/arr.length}static mode(arr){return arr.sort((a,b2)=>arr.filter(v3=>v3===a).length-arr.filter(v3=>v3===b2).length).pop()}static std(arr,mean2=void 0){let avg=mean2;if(!mean2)avg=this.mean(arr);let summed=0;for(let i=0;i<arr.length;i++){let subbed=arr[i]-avg;summed+=subbed*subbed}return Math.sqrt(summed/arr.length)}static relError(actual=[],forecast=[],abs=true){if(actual.length!==forecast.length)throw new Error("Input arrays of same length!");let i=actual.length;let d4=new Array(actual.length);for(let j3=0;j3<i;j3++){let dd=(actual[j3]-forecast[j3])/actual[j3];if(abs)dd=Math.abs(dd);d4[j3]=dd}return d4}static informationEntropy(probabilities=[]){let len=probabilities.length;let entropy=new Array(len);for(let i=0;i<len;i++){let ent=probabilities[i]*Math.log(probabilities[i]);if(isNaN(ent))ent=0;entropy[i]=ent}return entropy}static zscore(arr){let mean2=this.mean(arr);let std=this.std(arr,mean2);let z3=new Array().length(arr.length);for(let i=0;i<arr.length;i++){z3[i]=(arr[i]-mean2)/std}return z3}static variance(arr){var mean2=this.mean(arr);return arr.reduce((a,b2)=>a+(b2-mean2)**2,0)/arr.length}static dot(vec1,vec2){var dot=0;for(var i=0;i<vec1.length;i++){dot+=vec1[i]*vec2[i]}return dot}static cross3D(vec1,vec2){return[vec1[1]*vec2[2]-vec1[2]*vec2[1],vec1[2]*vec2[0]-vec1[0]*vec2[2],vec1[0]*vec2[1]-vec1[1]*vec2[0]]}static magnitude(vec){var sqrd=0;vec.forEach(c2=>{sqrd+=c2*c2});return Math.sqrt(sqrd)}static distance(point1,point2){var dsqrd=0;point1.forEach((c2,i)=>{dsqrd+=(point2[i]-c2)*(point2[i]-c2)});return Math.sqrt(dsqrd)}static midpoint(point1=[1,2,3],point2=[3,4,5]){return point1.map((c2,i)=>{return(c2+point2[i])*.5})}static normalize(vec){var norm=0;norm=this.magnitude(vec);var vecn=new Array(vec.length);vec.forEach((c2,i)=>{vecn[i]=c2*norm});return vecn}static normalizeSeries(arr=[],fromZero=true){let max=Math.max(...arr);let min=Math.min(...arr);if(fromZero==false){max=Math.max(max,Math.abs(min));min=0}if(max-min===0){min=0;if(max===0)max=1e-13}return arr.map(v3=>(v3-min)/(max-min))}static quadraticFormula(a,b2,c2){let bbmac4=Math.sqrt(b2*b2-4*a*c2);if(!isNaN(bbmac4))return["complex","complex"];let _a22=1/(2*a);if(bbmac4===0)return[b2*_a22];let nb=-b2;return[(nb+bbmac4)*_a22,(nb-bbmac4)*_a22]}static newtonsMethod(foo=x22=>{return Math.pow(x22,5)+x22*x22-x22-.2},start=0,end=1,precision=.01,attempts=10){let roots=[];for(let i=0;i<attempts;i++){let seedx=Math.random()*(end-start);let guess=foo(seedx);let guess2=foo(seedx+precision);let slope=(guess2-guess)/precision;let xn2=seedx+precision;while(Math.abs(slope)>precision){let step=-guess/slope2;let xn12=xn2+step;guess=guess2;guess2=foo(xn12);let slope2=(guess2-guess)/(xn12-xn2)}let idx;let f=roots.find((root,i2)=>{if(Math.abs(xn1-root)<precision){idx=i2;return true}});if(f)roots[idx]=(xn1+f)*.5;else roots.push(xn1)}return roots}static makeVec(point1,point2){var vec=[];point1.forEach((c2,i)=>{vec.push(point2[i]-c2)});return vec}static getBufferedValueByCoordinates(vb=new Array(300).fill(1),dims=[10,10,2],coordinate=[1,2,1],cardinal=void 0){let getIdx=(foundIdx=0,dimIdx=0)=>{if(dimIdx===dims.length)return foundIdx;if(dimIdx==0)foundIdx+=coordinate[dimIdx];else if(dims[dimIdx]==0)dimsAt0++;else{let reMul=(val=coordinate[dimIdx],di2=dimIdx-1)=>{val*=dims[di2];di2--;if(di2==0)return val;else return reMul(val,di2)};foundIdx+=reMul(coordinate[dimIdx]+1,dimIdx-1)}dimIdx++;return getIdx(foundIdx,dimIdx)};let found=getIdx();if(cardinal){if(coordinate[coordinate.length-1]===0){let lastnonzero=0;let idx=0;while(idx!==coordinate.length-1){if(coordinate[idx]!==0)lastnonzero=idx;idx++}return vb[found-lastnonzero+cardinal]}return vb[found-dims.length+cardinal]}else{if(coordinate[coordinate.length-1]===0){let lastnonzero=0;let idx=0;while(idx!==coordinate.length-1){if(coordinate[idx]!==0)lastnonzero=idx;idx++}return vb.slice(found-lastnonzero,found+1)}return vb.slice(found-dims.length,found+1)}}static forBufferedMat(vb=new Array(100).fill(1),dims=[10,10],asIndex=(v3,i,x22,y5)=>{return v3+x22+y5}){let coordinate=[];let idx=0;let recurseFor=(depth=0,nextDepth=depth+1)=>{let result=new Array(vb.length);for(let di2=0;di2<dims[depth];di2++){coordinate[depth]=di2;if(dims[nextDepth])recurseFor(nextDepth);else{result[idx]=asIndex(vb[idx],idx,...coordinate);idx++}}return result};let recurseForArrFuncs=(depth,nextDepth=depth+1)=>{let result=new Array(vb.length);for(let di2=0;di2<dims[depth];di2++){coordinate[depth]=di2;if(dims[nextDepth])recurseFor(nextDepth);else{for(let dj=0;dj<dims.length;dj++){result[idx]=asIndex[dj](vb[idx],idx,...coordinate);idx++}}}return result};if(typeof asIndex==="function"){return recurseFor()}else if(Array.isArray(asIndex)){return recurseForArrFuncs()}}static mapBufferedMat(buffer=new Array(100).fill(1),dimensions=[10,10],asIndex=(v3,idx,i,j3)=>{console.log(`value:${v3}, idx:${idx}, x:${i},y:${j3}`);return v3+i+j3}){let coordinate=new Array(dimensions.length).fill(0);const iterateCoordinate=(coord,idx=0)=>{if(coord[idx]>=dimensions[idx]){coord[idx]=0;idx++;if(idx===dimensions.length)return;iterateCoordinate(coord,idx)}else coord[idx]++};let result=new Array(buffer.length);let i=0;if(typeof asIndex==="function"){while(i<buffer.length){result[i]=asIndex(buffer[i],i,...coordinate);i+=dimensions.length;iterateCoordinate(coordinate)}}else if(Array.isArray(asIndex)){while(i<buffer.length){asIndex.forEach(func=>{result[i]=func(buffer[i],i,...coordinate);i++;iterateCoordinate(coordinate)})}}return result}static combinations(choices=["a","b","c"],vecsize=3){var result=[];if(vecsize<=0){result.push([])}else{_Math22.combinations(choices,vecsize-1).forEach(function(previousComb){choices.forEach(function(element){result.push([element].concat(previousComb))})})}return result}static generateCoordinateSpace(upperBounds=[10,10,10],lowerBounds=[-10,-10,-10],steps=[1,1,1],mutater=void 0){for(let i=0;i<upperBounds.length;i++){if(lowerBounds[i]>upperBounds[i]){let temp=upperBounds[i];upperBounds[i]=lowerBounds[i];lowerBounds[i]=temp}}let result=[];let copy=[...upperBounds];let lastindex=copy.length-1;result.push([...copy]);while(copy[0]>=lowerBounds[0]){let checkNextIndex=decrIdx2=>{if(copy[decrIdx2]<=lowerBounds[decrIdx2]){if(decrIdx2===0)return;copy[decrIdx2]=upperBounds[decrIdx2];decrIdx2--;if(decrIdx2<0)return;if(typeof steps[decrIdx2]=="function")copy[decrIdx2]-=steps[decrIdx2](copy[decrIdx2]);else copy[decrIdx2]-=steps[decrIdx2];checkNextIndex(decrIdx2)}};let decrIdx=lastindex;if(typeof steps[decrIdx]=="function")copy[decrIdx]-=steps[decrIdx](copy[decrIdx]);else copy[decrIdx]-=steps[decrIdx];result.push([...copy]);checkNextIndex(decrIdx);if(mutater)result[result.length-1]=mutater(result[result.length-1])}return result}static calcVectorField(coordinates=[[0,0],[0,1],[1,0],[1,1]],formula=(x22,y5)=>{return[x22*10,y5*10]}){return coordinates.map(vec=>formula(...vec))}static transpose(mat){return mat[0].map((_4,colIndex)=>mat.map(row=>row[colIndex]))}static matmul(a,b2){var aNumRows=a.length,aNumCols=a[0].length,bNumRows=b2.length,bNumCols=b2[0].length,m=new Array(aNumRows);for(var r=0;r<aNumRows;++r){m[r]=new Array(bNumCols);for(var c2=0;c2<bNumCols;++c2){m[r][c2]=0;for(var i=0;i<aNumCols;++i){m[r][c2]+=a[r][i]*b2[i][c2]}}}return m}static matscale(mat,scalar){let m=[];for(var i=0;i<mat.length;i++){m[i]=[];for(let j3=0;j3<mat[0].length;j3++){m[i][j3]=mat[i][j3]*scalar}}return m}static matadd(a,b2){let m=[];for(let i=0;i<a.length;i++){m[i]=[];for(var j3=0;j3<a[0].length;j3++){m[i][j3]=a[i][j3]+b2[i][j3]}}return m}static matsub(a,b2){let m=[];for(let i=0;i<a.length;i++){m[i]=[];for(var j3=0;j3<a[0].length;j3++){m[i][j3]=a[i][j3]-b2[i][j3]}}return m}static histogram(arr=[],binSize=1,nBins=void 0){let copy=[...arr];copy.sort(function(a,b2){return a-b2});let binStart=Math.min(...copy);if(typeof nBins==="number"){let binEnd=Math.max(...copy);binSize=Math.abs((binEnd-binStart)/(nBins-1))}let j3=binStart;let binx=[];let biny=[];for(let i=0;i<copy.length;i++){let binidx=binSize*j3;if(copy[i]>binStart+binidx){j3++;binidx+=binSize;let binmin=binStart+binidx;let binmid=binmin+binidx*.5;binx.push(binmid);biny.push(0)}biny[biny.length-1]++}return[binx,biny]}static normalDistribution(samples=[],normalize=true,cutoff=1e-4){let m=this.mean(samples);let vari=this.variance(samples);let nSamples=samples.length;let probabilities=[];let denom=1/(this.TWO_PI*vari);let _variance=1/vari;let sum=0;for(let i=0;i<nSamples;i++){let px=Math.exp(-.5*Math.pow((samples[i]-m)*_variance,2))*denom;if(px<cutoff)px=0;probabilities.push(px);sum+=px}if(normalize){let _sum=1/sum;probabilities=probabilities.map(x22=>x22*_sum)}return probabilities}static expectedValue(samples=[],probabilities=this.normalDistribution(samples)){return samples.reduce((sum,item,idx)=>sum+item*probabilities[idx])}static originMoment(samples=[],probabilities=this.normalDistribution(samples),order=1){return samples.reduce((sum,item,idx)=>sum+Math.pow(item,order)*probabilities[idx])}static centralMoment(samples=[],probabilities=this.normalDistribution(samples),order=1){let m=this.mean(samples);return samples.reduce((sum,item,idx)=>sum+Math.pow(item-m,order)*probabilities[idx]/samples.length)}static linearDiscriminantAnalysis(samples=[],classifier=[]){let mean2=this.mean(samples);let meank=this.mean(classifier);let covariance=this.cov1d(samples,classifier);let probs=this.normalDistribution(samples);let dk=[];for(let i=0;i<samples.length;i++){dk.push(x[i]*covariance*meank-.5*mean2*covariance*meank+Math.log10(probs[i]))}return dk}static conv1D(arr=[],kern=[1/3,1/3,1/3],pad=Math.floor(kern.length*.5)){let result=[];let _n2=1/kern.length;if(pad>0){let pads=new Array(pad).fill(0);arr=[...pads,...arr,...pads]}let start=Math.floor(kern.length*.5);let end=arr.length-kern.length+start;for(let i=start;i<end;i++){let acc=0;for(let j3=0;j3<kern.length;j3++){acc+=arr[i-start]*kern[j3]}result.push(acc*_n2)}return result}static conv2D(mat=[[],[],[]],kern=[[],[],[]],pad=0){let result=new Array(mat.length-Math.ceil(kern.length*.5)).fill([]);let mat_t;let kern_t=_Math22.transpose(kern_t);if(pad>0){let pads=new Array(pad).fill(0);mat_t=_Math22.transpose(mat);for(let i2=0;i2<mat_t.length;i2++){mat_t[i2]=[...pads,...mat_t[i2],...pads]}mat=_Math22.transpose(mat_t);for(let j3=0;j3<mat.length;j3++){mat[j3]=[...pads,...mat[j3],...pads]}}let startr=Math.floor(kern[0].length*.5);let startl=Math.floor(kern_t[0].length*.5);let endr=mat[0].length-kern[0].length+startr;let endl=mat_t[0].length-kern_t[0].length+startl;let _n2=1/(kern[0].length*kern_t[0].length);let iters=endr*endl;let i=startr;let x22;let y5=startl;while(i<iters){let acc=0;x22=i%mat[0].length;if(x22===0){y5++}for(let j3=0;j3<kern[0].length;j3++){for(let k2=0;k2<kern_t[0].length;j3++){acc+=mat[y5-startl+k2][x22-startr+j3]*kern[k2][j3]}result[y5].push(acc*_n2)}i++}return result}static cov2d(mat){var mattransposed=this.transpose(mat);var matproducts=[];var rowmeans=[];var colmeans=[];mat.forEach((row,idx)=>{rowmeans.push(this.mean(row))});mattransposed.forEach((col,idx)=>{colmeans.push(this.mean(col))});mat.forEach((row,idx)=>{matproducts.push([]);for(var col=0;col<row.length;col++){matproducts[idx].push((mat[idx][col]-rowmeans[idx])*(mat[idx][col]-colmeans[col])/(row.length-1))}});var matproductstransposed=this.transpose(matproducts);var aNumRows=matproducts.length,aNumCols=matproducts[0].length,bNumRows=matproductstransposed.length,bNumCols=matproductstransposed[0].length,m=new Array(aNumRows);for(var r=0;r<aNumRows;++r){m[r]=new Array(bNumCols);for(var c2=0;c2<bNumCols;++c2){m[r][c2]=0;for(var i=0;i<aNumCols;++i){m[r][c2]+=matproducts[r][i]*matproductstransposed[i][c2]/(mat[0].length-1)}}}return m}static cov1d(arr1=[],arr2=[]){return this.cov2d([arr1,arr2])}static cov3d(x22=[],y5=[],z3=[]){return[[this.cov1d(x22,x22),this.cov1d(x22,y5),this.cov1d(x22,z3)],[this.cov1d(y5,x22),this.cov1d(y5,y5),this.cov1d(y5,z3)],[this.cov1d(z3,x22),this.cov1d(z3,y5),this.cov1d(z3,z3)]]}static covNd(dimensionalData=[]){let covariance=[];dimensionalData.forEach((arr,i)=>{covariance.push([]);dimensionalData.forEach((arr2,j3)=>{covariance[i].push(this.cov1d(arr,arr2))})})}static eigens2x2(mat=[[1,2],[3,4]]){let det=mat[0][0]*mat[1][1]-mat[0][1]*mat[1][0];let mean2=(mat[0][0]+mat[1][1])*.5;let sqrt=Math.sqrt(mean2*mean2-det);let eig1=mean2+sqrt;let eig2=mean2-sqrt;return[eig1,eig2]}static eigenvectors2x2(mat=[[1,2],[3,4]],eigens=[1,2]){let v1=[-mat[0][1],mat[0][0]-eigens[0]];if(v1[0]===0&&v1[1]===0){v1[0]=mat[1][1]-eigens[0];v1[1]=-mat[1][0]}let v22=[-mat[0][1],mat[0][0]-eigens[1]];if(v22[0]===0&&v22[1]===0){v22[0]=mat[1][1]-eigens[1];v22[1]=-mat[1][0]}return[v1,v22]}static fastpca2d(xarr,yarr){let cov1d=this.cov1d(xarr,yarr);let eigs=this.eigens2x2(cov1d);if(eigs[1]>eigs[0])eigs.reverse();let evs=this.eigenvectors2x2(cov1d,eigs);console.log(eigs,evs);return[eigs,evs]}static crosscorrelation(arr1,arr2){var arr2buf=[...arr2,...Array(arr2.length).fill(0)];var mean12=this.mean(arr1);var mean2=this.mean(arr2);var arr1Est=arr1.reduce((sum,item)=>sum+=Math.pow(item-mean12,2));arr1Est=Math.sqrt(Math.abs(arr1Est));var arr2Est2=arr2.reduce((sum,item)=>sum+=Math.pow(item-mean12,2));arr2Est2=Math.sqrt(Math.abs(arr2Est2));let denom=arr1Est*arr2Est2;if(denom===0)denom=1e-26;var _arrEstsMul=1/denom;var correlations=new Array(arr1.length).fill(0);for(var delay=0;delay<arr1.length;delay++){var r=arr1.reduce((sum,item,i)=>sum+=(item-mean12)*(arr2buf[delay+i]-mean2));correlations[delay]=r*_arrEstsMul}return correlations}static autocorrelation(arr1){var delaybuf=[...arr1,...Array(arr1.length).fill(0)];var mean12=this.mean(arr1);var arr1Est=arr1.reduce((sum,item)=>sum+=Math.pow(item-mean12,2));arr1Est=Math.sqrt(Math.abs(arr1Est));let denom=arr1Est*arr2Est;if(denom===0)denom=1e-26;var _arr1estsqrd=1/denom;var correlations=new Array(arr1.length).fill(0);for(var delay=0;delay<arr1.length;delay++){var r=arr1.reduce((sum,item,i)=>sum+=(item-mean12)*(delaybuf[delay+i]-mean12));correlations[delay]=r*_arr1estsqrd}return correlations}static autocorrelation2dNormalized(mat2d2){let result=[];for(let y5=0;y5<mat2d2.length;y5++){result.push([]);for(let x22=0;x22<mat2d2[y5].length;x22++){let G3=0;let _G=0;for(let b2=0;b2<mat2d2.length;b2++){for(let a=0;a<mat2d2[b2].length;a++){G3+=mat2d2[y5][x22]*mat2d2[mat2d2.length-1-b2][mat2d2[y5].length-1-a];_G+=mat2d2[y5][x22]*mat2d2[mat2d2.length-1][mat2d2[y5].length-1]}}result[y5][x22]=G3/_G-1}}return result}static crosscorrelation2d(mat2d1,mat2d2){let result=[];for(let y5=0;y5<mat2d1.length;y5++){result.push([]);for(let x22=0;x22<mat2d1[y5].length;x22++){let G3=0;for(let b2=0;b2<mat2d2.length;b2++){for(let a=0;a<mat2d2[b2].length;a++){G3+=mat2d1[y5][x22]*mat2d2[mat2d2.length-1-b2][mat2d2[y5].length-1-a]}}result[y5][x22]=G3}}return result}static crosscorrelation2dNormalized(mat2d1,mat2d2){let result=[];for(let y5=0;y5<mat2d1.length;y5++){result.push([]);for(let x22=0;x22<mat2d1[y5].length;x22++){let G3=0;let _G=0;for(let b2=0;b2<mat2d2.length;b2++){for(let a=0;a<mat2d2[b2].length;a++){G3+=mat2d1[y5][x22]*mat2d2[mat2d.length-1-b2][mat2d2[y5].length-1-a];_G+=mat2d1[y5][x22]*mat2d2[mat2d2.length-1][mat2d2[y5].length-1]}}result[y5][x22]=G3/_G-1}}return result}static correlograms(dat=[[],[]]){var correlograms=[];dat.forEach((row1,i)=>{dat.forEach((row2,j3)=>{if(j3>=i){correlograms.push(_Math22.crosscorrelation(row1,row2))}})});return correlograms}static dft(sineWave=[]){var TWOPI=2*3.141592653589793;var real=[];var imag=[];var mags=[];for(var k2=0;k2<sineWave.length;k2++){real.push(0);imag.push(0);for(var j3=0;j3<sineWave.length;j3++){var shared=TWOPI*k2*j3/sineWave.length;real[k2]=real[k2]+sineWave[j3]*Math.cos(shared);imag[k2]=imag[k2]-sineWave[j3]*Math.sin(shared)}mags.push(Math.sqrt(real[k2]*real[k2]+imag[k2]*imag[k2]))}function orderMagnitudes(unorderedMags){return[...unorderedMags.slice(Math.ceil(unorderedMags.length*.5),unorderedMags.length),...unorderedMags.slice(0,Math.ceil(unorderedMags.length*.5))]}mags=orderMagnitudes(mags);let halflen=mags.length*.5;let freqs=mags.map((m,i)=>{return i-halflen});return{real,imag,freqs,mags}}static sma(arr=[],window2){var smaArr=[];for(var i=0;i<arr.length;i++){if(i==0){smaArr.push(arr[0])}else if(i<window2){var arrslice=arr.slice(0,i+1);smaArr.push(arrslice.reduce((previous,current)=>current+=previous)/(i+1))}else{var arrslice=arr.slice(i-window2,i);smaArr.push(arrslice.reduce((previous,current)=>current+=previous)/window2)}}return smaArr}static sum(arr=[]){if(arr.length>0){var sum=arr.reduce((prev,curr)=>curr+=prev);return sum}else{return 0}}static reduceArrByFactor(arr,factor=2){let x22=arr.filter((element,index)=>{return index%factor===0});return x22}static makeArr(startValue,stopValue,nSteps){var arr=[];var step=(stopValue-startValue)/(nSteps-1);for(var i=0;i<nSteps;i++){arr.push(startValue+step*i)}return arr}static autoscale(array,stackedLines=1,stackPosition=0,centerZero=false){if(array?.length===0)return array;let max=Math.max(...array);let min=Math.min(...array);let _lines=1/stackedLines;let scalar;if(centerZero){let absmax=Math.max(Math.abs(min),Math.abs(max));scalar=_lines/absmax;return array.map(y5=>y5*scalar+(_lines*(stackPosition+1)*2-1-_lines))}else{scalar=_lines/(max-min);return array.map(y5=>2*((y5-min)*scalar-1/(2*stackedLines))+(_lines*(stackPosition+1)*2-1-_lines))}}static absmax(array){return Math.max(Math.abs(Math.min(...array)),Math.max(...array))}static downsample(array,fitCount,scalar=1){if(array.length>fitCount){let output=new Array(fitCount);let incr=array.length/fitCount;let lastIdx=array.length-1;let last=0;let counter=0;for(let i=incr;i<array.length;i+=incr){let rounded=Math.round(i);if(rounded>lastIdx)rounded=lastIdx;for(let j3=last;j3<rounded;j3++){output[counter]+=array[j3]}output[counter]/=(rounded-last)*scalar;counter++;last=rounded}return output}else return array}static interpolateArray(data,fitCount,scalar=1){var linearInterpolate=function(before2,after2,atPoint2){return(before2+(after2-before2)*atPoint2)*scalar};var newData=new Array;var springFactor=(data.length-1)/(fitCount-1);newData[0]=data[0];for(var i=1;i<fitCount-1;i++){var tmp=i*springFactor;var before=Math.floor(tmp);var after=Math.ceil(tmp);var atPoint=tmp-before;newData[i]=linearInterpolate(data[before],data[after],atPoint)}newData[fitCount-1]=data[data.length-1];return newData}static isExtrema(arr,critical="peak"){let ref=[...arr];if(ref.length%2===0)ref.pop();if(arr.length>1){let pass=true;for(let i=0;i<ref.length;i++){let val=ref[i];if(critical==="peak"){if(i<Math.floor(ref.length*.5)&&val>=ref[Math.floor(ref.length*.5)]){pass=false;break}else if(i>Math.floor(ref.length*.5)&&val>=ref[Math.floor(ref.length*.5)]){pass=false;break}}else if(critical==="valley"){if(i<Math.floor(ref.length*.5)&&val<=ref[Math.floor(ref.length*.5)]){pass=false;break}else if(i>Math.floor(ref.length*.5)&&val<=ref[Math.floor(ref.length*.5)]){pass=false;break}}else{if(i<Math.floor(ref.length*.5)&&val<=ref[Math.floor(ref.length*.5)]){pass=false;break}else if(i>Math.floor(ref.length*.5)&&val<=ref[Math.floor(ref.length*.5)]){pass=false;break}}}if(critical!=="peak"&&critical!=="valley"&&pass===false){pass=true;for(let i=0;i<ref.length;i++){let val=ref[i];if(i<Math.floor(ref.length*.5)&&val>=ref[Math.floor(ref.length*.5)]){pass=false;break}else if(i>Math.floor(ref.length*.5)&&val>=ref[Math.floor(ref.length*.5)]){pass=false;break}}}return pass}else return void 0}static isCriticalPoint(arr,critical="peak"){let ref=[...arr];if(ref.length%2===0)ref.pop();if(arr.length>1){let pass=true;for(let i=0;i<ref.length;i++){let val=ref[i];if(critical==="peak"){if(i<ref.length*.5&&val<=0){pass=false;break}else if(i>ref.length*.5&&val>0){pass=false;break}}else if(critical==="valley"){if(i<ref.length*.5&&val>=0){pass=false;break}else if(i>ref.length*.5&&val<0){pass=false;break}}else{if(i<ref.length*.5&&val>=0){pass=false;break}else if(i>ref.length*.5&&val<0){pass=false;break}}}if(critical!=="peak"&&critical!=="valley"&&pass===false){pass=true;for(let i=0;i<ref.length;i++){let val=ref[i];if(i<ref.length*.5&&val<=0){pass=false;break}else if(i>ref.length*.5&&val>0){pass=false;break}}}return pass}else return void 0}static getPeakThreshold(arr,peakIndices,thresholdVar){let threshold;let filtered=arr.filter((o2,i)=>{if(peakIndices.indexOf(i)>-1)return true});if(thresholdVar===0){threshold=this.mean(filtered)}else threshold=(thresholdVar+this.mean(filtered))*.5;return threshold}static column(mat,x22){let col=new Array(mat.length).fill(0).map(()=>new Array(1).fill(0));for(let i=0;i<mat.length;i++){col[i][0]=mat[i][x22]}return col}static flatten_vector(v3){let v_new=[];for(let i=0;i<v3.length;i++){v_new[i]=v3[i][0]}return v_new}static squared_difference(v1,v22){let sum=0;for(let i=0;i<v1.length;i++){sum=sum+Math.pow(v1[i]-v22[i],2)}return sum}static shift_deflate(mat,eigenvalue,eigenvector){let len=Math.sqrt(this.matmul(this.transpose(eigenvector),eigenvector));let U2=this.matscale(eigenvector,1/len);let delta=this.matscale(this.matmul(U2,this.transpose(U2)),eigenvalue);let M_new=this.matsub(mat,delta);return M_new}static eigenvalue_of_vector(mat,eigenvector){ev=this.matmul(this.matmul(this.transpose(eigenvector),mat),eigenvector);return ev}static power_iteration(mat,tolerance=1e-5,max_iterations=1e3){let rank=mat.length;let eigenvector=new Array(rank).fill(0).map(()=>new Array(1).fill(Math.sqrt(rank)));let eigenvalue=this.eigenvalue_of_vector(mat,eigenvector);let epsilon=1;let iter=0;while(epsilon>tolerance&&iter<max_iterations){let old_eigenvalue=JSON.parse(JSON.stringify(eigenvalue));let Mv=this.matmul(mat,eigenvector);eigenvector=this.normalize(Mv);eigenvalue=this.eigenvalue_of_vector(mat,eigenvector);epsilon=Math.abs(eigenvalue-old_eigenvalue);iter++};return[eigenvalue,eigenvector]}static eigens(mat,tolerance=1e-4,max_iterations=1e3){let eigenvalues=[];let eigenvectors=[];for(let i=0;i<mat.length;i++){let result=this.power_iteration(mat,tolerance,max_iterations);let eigenvalue=result[0];let eigenvector=result[1];eigenvalues[i]=eigenvalue;eigenvectors[i]=this.flatten_vector(eigenvector);mat=this.shift_deflate(mat,eigenvalue,eigenvector)}return[eigenvalues,eigenvectors]}static pca(mat,tolerance=1e-5){let dims=mat.length;let t2=new Array(dims);let p=new Array(dims);let mat_t=this.transpose(mat);t2[0]=this.column(mat,0);let epsilon=1;let iter=0;while(espilon>tolerance){iter++;p[0]=this.matmul(mat_t,t2[0]);let tp=this.matmul(this.transpose(t2[0]),t2[0]);p[0]=this.matscale(p[0],1/tp);let p_length=Math.sqrt(this.matmul(this.transpose(p[0]),p[0]));p[0]=this.matscale(p[0],1/p_length);let t_new=this.matmul(mat,p[0]);let pp=this.matmul(this.transpose(p[0]),p[0]);t_new=this.matscale(t_new,1/pp);epsilon=this.squared_difference(t2[0],t_new);t2[0]=JSON.parse(JSON.stringify(t_new))}let components=this.matmul(this.transpose(t2[0]),t2[0]);return components}static circularBuffer(arr,newEntries){if(Array.isArray(newEntries)){if(newEntries.length<arr.length){let slice=arr.slice(newEntries.length);let len=arr.length;arr.splice(0,len,...slice,...newEntries)}else if(newEntries.length>arr.length){let len=arr.length;arr.splice(0,len,newEntries.slice(len-newEntries.length))}else{arr.splice(0,arr.length,...newEntries)}}else{arr.push(newEntries);arr.shift()}return arr}static HSLToRGB(h,s,l,scalar=255){s/=100;l/=100;let c2=(1-Math.abs(2*l-1))*s,x22=c2*(1-Math.abs(h/60%2-1)),m=l-c2/2,r=0,g3=0,b2=0;if(0<=h&&h<60){r=c2;g3=x22;b2=0}else if(60<=h&&h<120){r=x22;g3=c2;b2=0}else if(120<=h&&h<180){r=0;g3=c2;b2=x22}else if(180<=h&&h<240){r=0;g3=x22;b2=c2}else if(240<=h&&h<300){r=x22;g3=0;b2=c2}else if(300<=h&&h<360){r=c2;g3=0;b2=x22}r=(r+m)*scalar;g3=(g3+m)*scalar;b2=(b2+m)*scalar;return[r,g3,b2]}static p300(event_timestamps=[],raw_signal=[],signal_timestamps=[],sps11=256){let smoothingstep=Math.floor(sps11/10);let smoothed=this.sma(raw_signal,smoothingstep);let peaks=this.peakDetect(smoothed,"peak",smoothingstep);let mean2=this.mean(smoothed);let std=this.std(smoothed,mean2);let p_idx=0;let candidates=[];if(peaks.length>0){event_timestamps.forEach((t2,j3)=>{while(signal_timestamps[peaks[p_idx]]<t2+200){p_idx++;if(!peaks[p_idx])break}let tempi=0;let tempcandidates=[];while(signal_timestamps[peaks[p_idx+tempi]]<t2+600){tempcandidates.push(p_idx+tempi);tempi++;if(!peaks[p_idx+tempi])break}if(tempcandidates.length>1){let peakvals=[];tempcandidates.forEach(tc3=>{peakvals.push(smoothed[peaks[tc3]])});let max=Math.max(...peakvals);let maxi=tempcandidates[peakvals.indexOf(max)];candidates.push({event_timestamp:t2,event_index:j3,peak_timestamp:signal_timestamps[[peaks[maxi]]],signal_index:[peaks[maxi]],signal_amplitude:raw_signal[[peaks[maxi]]],zscore:(smoothed[peaks[maxi]]-mean2)/std})}else if(tempcandidates.length===1)candidates.push({event_timestamp:t2,event_index:j3,peak_timestamp:signal_timestamps[peaks[tempcandidates[0]]],signal_index:peaks[tempcandidates[0]],signal_amplitude:raw_signal[[peaks[tempcandidates[0]]]],zscore:(smoothed[peaks[tempcandidates[0]]]-mean2)/std})})}return candidates}};var Math22=_Math22;__publicField2(Math22,"TWO_PI",Math.PI*2);__publicField2(Math22,"C",299792458);__publicField2(Math22,"G",66743e-15);__publicField2(Math22,"h",662607015e-42);__publicField2(Math22,"R",8314.32);__publicField2(Math22,"Ra",287);__publicField2(Math22,"H",69.3);__publicField2(Math22,"kbar",1054571817e-43);__publicField2(Math22,"kB",1380649e-29);__publicField2(Math22,"ke",89875517923e-1);__publicField2(Math22,"me",91093837015e-41);__publicField2(Math22,"mp",167262192369e-38);__publicField2(Math22,"mn",167492749804e-38);__publicField2(Math22,"P0",101325);__publicField2(Math22,"T0",288.15);__publicField2(Math22,"p0",1.225);__publicField2(Math22,"Na",60220978e16);__publicField2(Math22,"y",1.405);__publicField2(Math22,"M0",28.96643);__publicField2(Math22,"g0",9.80665);__publicField2(Math22,"Re",6378100);__publicField2(Math22,"B",1458e-9);__publicField2(Math22,"S",110.4);__publicField2(Math22,"Sigma",365e-12);__publicField2(Math22,"imgkernels",{edgeDetection:[[-1,-1,-1],[-1,8,-1],[-1,-1,-1]],boxBlur:[[1/9,1/9,1/9],[1/9,1/9,1/9],[1/9,1/9,1/9]],sobelLeft:[[1,0,-1],[2,0,-2],[1,0,-1]],sobelRight:[[-1,0,1],[-2,0,2],[-1,0,1]],sobelTop:[[1,2,1],[0,0,0],[-1,-2,-1]],sobelBottom:[[-1,2,1],[0,0,0],[1,2,1]],identity:[[0,0,0],[0,1,0],[0,0,0]],gaussian3x3:[[1,2,1],[2,4,2],[1,2,1]],guassian7x7:[[0,0,0,5,0,0,0],[0,5,18,32,18,5,0],[0,18,64,100,64,18,0],[5,32,100,100,100,32,5],[0,18,64,100,64,18,0],[0,5,18,32,18,5,0],[0,0,0,5,0,0,0]],emboss:[[-2,-1,0],[-1,1,1],[0,1,2]],sharpen:[[0,-1,0],[-1,5,-1],[0,-1,0]]});__publicField2(Math22,"integral",(func=x22=>{let y5=x22;return y5},range=[],stepx=.01)=>{let area=0;for(let i=range[0];i<range[1];i+=stepx){let y5=func(i);area+=y5*stepx}return area});__publicField2(Math22,"dintegral",(func=(x22,y5)=>{let z3=x22+y5;return z3},range=[[],[]],stepx=.01,stepy=stepx)=>{let volume=0;for(let i=range[0][0]+stepx;i<range[0][1];i+=stepx){for(let j3=range[1][0]+stepy;j3<range[1][1];j3+=stepy){let z3=func(i,j3);volume+=z3*stepx*stepy}}return volume});__publicField2(Math22,"tintegral",(func=(x22,y5,z3)=>{let w4=x22+y5+z3;return w4},range=[[],[],[]],stepx=.01,stepy=stepx,stepz=stepx)=>{let volume=0;for(let i=range[0][0]+stepx;i<range[0][1];i+=stepx){for(let j3=range[1][0]+stepy;j3<range[1][1];j3+=stepy){for(let k2=range[2][0]+stepz;k2<range[2][1];k2+=stepz){let w4=func(i,j3,k2);volume+=w4*stepx*stepy*stepz}}}return volume});__publicField2(Math22,"pintegral",(func=x22=>{let y5=x22;return y5},range=[],stepx=.01)=>{let length=0;let y0=void 0;let yi2=void 0;for(let i=range[0];i<range[1];i+=stepx){y0=yi2;yi2=func(i);if(y0)length+=_Math22.distance([0,y0],[stepx,yi2])}return length});__publicField2(Math22,"meshgrid",_Math22.generateCoordinateSpace);__publicField2(Math22,"autocorrelation2d",mat2d2=>{let result=[];for(let y5=0;y5<mat2d2.length;y5++){result.push([]);for(let x22=0;x22<mat2d2[y5].length;x22++){let G3=0;for(let b2=0;b2<mat2d2.length;b2++){for(let a=0;a<mat2d2[b2].length;a++){G3+=mat2d2[y5][x22]*mat2d2[mat2d2.length-1-b2][mat2d2[y5].length-1-a]}}result[y5][x22]=G3}}return result});__publicField2(Math22,"lerp",_Math22.makeArr);__publicField2(Math22,"upsample",_Math22.interpolateArray);__publicField2(Math22,"lerp",(v0,v1,fit,floor=true)=>{function lerp2(v02,v12,t2){return(1-t2)*v02+t2*v12}function interpolerp2(v02,v12,fit2,floor2=true){if(fit2<=2)return[v02,v12];let a=1/fit2;let result=new Array(fit2);result[0]=v02;for(let i=1;i<=fit2;i++){result[i]=lerp2(v02,v12,a*i);if(floor2)result[i]=Math.floor(result[i])}return result}});__publicField2(Math22,"peakDetect",(smoothedArray,type="peak",window2=49)=>{let mid=Math.floor(window2*.5);let peaks=[];for(let i=0;i<smoothedArray.length-window2;i++){let isPeak=_Math22.isExtrema(smoothedArray.slice(i,i+window2),type);if(isPeak){peaks.push(i+mid-1)}}return peaks});Object.assign(Math,Math22);function parseFunctionFromText5(method=""){let getFunctionBody=methodString=>{return methodString.replace(/^\\W*(function[^{]+\\{([\\s\\S]*)\\}|[^=]+=>[^{]*\\{([\\s\\S]*)\\}|[^=]+=>(.+))/i,"$2$3$4")};let getFunctionHead=methodString=>{let startindex=methodString.indexOf("=>")+1;if(startindex<=0){startindex=methodString.indexOf("){")}if(startindex<=0){startindex=methodString.indexOf(") {")}return methodString.slice(0,methodString.indexOf("{",startindex)+1)};let newFuncHead=getFunctionHead(method);let newFuncBody=getFunctionBody(method);let newFunc;if(newFuncHead.includes("function")){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody)}else{if(newFuncHead.substring(0,6)===newFuncBody.substring(0,6)){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody.substring(newFuncBody.indexOf("{")+1,newFuncBody.length-1))}else{try{newFunc=(0,eval)(newFuncHead+newFuncBody+"}")}catch{}}}return newFunc}var stringifyWithCircularRefs4=function(){const refs=new Map;const parents=[];const path=["this"];function clear(){refs.clear();parents.length=0;path.length=1}function updateParents(key,value2){var idx=parents.length-1;var prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value2||idx===0){path.push(key);parents.push(value2.pushed)}else{while(idx-->=0){prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value2){idx+=2;parents.length=idx;path.length=idx;--idx;parents[idx]=value2;path[idx]=key;break}}idx--}}}}function checkCircular(key,value2){if(value2!=null){if(typeof value2==="object"){if(key){updateParents(key,value2)}let other=refs.get(value2);if(other){return"[Circular Reference]"+other}else{refs.set(value2,path.join("."))}}}return value2}return function stringifyWithCircularRefs22(obj,space){try{parents.push(obj);return JSON.stringify(obj,checkCircular,space)}finally{clear()}}}();if(JSON.stringifyWithCircularRefs===void 0){JSON.stringifyWithCircularRefs=stringifyWithCircularRefs4}var stringifyFast4=function(){const refs=new Map;const parents=[];const path=["this"];function clear(){refs.clear();parents.length=0;path.length=1}function updateParents(key,value2){var idx=parents.length-1;if(parents[idx]){var prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value2||idx===0){path.push(key);parents.push(value2.pushed)}else{while(idx-->=0){prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value2){idx+=2;parents.length=idx;path.length=idx;--idx;parents[idx]=value2;path[idx]=key;break}}idx++}}}}}function checkValues(key,value2){let val;if(value2!=null){if(typeof value2==="object"){let c2=value2.constructor.name;if(key&&c2==="Object"){updateParents(key,value2)}let other=refs.get(value2);if(other){return"[Circular Reference]"+other}else{refs.set(value2,path.join("."))}if(c2==="Array"){if(value2.length>20){val=value2.slice(value2.length-20)}else val=value2}else if(c2.includes("Set")){val=Array.from(value2)}else if(c2!=="Object"&&c2!=="Number"&&c2!=="String"&&c2!=="Boolean"){val="instanceof_"+c2}else if(c2==="Object"){let obj={};for(const prop in value2){if(value2[prop]==null){obj[prop]=value2[prop]}else if(Array.isArray(value2[prop])){if(value2[prop].length>20)obj[prop]=value2[prop].slice(value2[prop].length-20);else obj[prop]=value2[prop]}else if(value2[prop].constructor.name==="Object"){obj[prop]={};for(const p in value2[prop]){if(Array.isArray(value2[prop][p])){if(value2[prop][p].length>20)obj[prop][p]=value2[prop][p].slice(value2[prop][p].length-20);else obj[prop][p]=value2[prop][p]}else{if(value2[prop][p]!=null){let con=value2[prop][p].constructor.name;if(con.includes("Set")){obj[prop][p]=Array.from(value2[prop][p])}else if(con!=="Number"&&con!=="String"&&con!=="Boolean"){obj[prop][p]="instanceof_"+con}else{obj[prop][p]=value2[prop][p]}}else{obj[prop][p]=value2[prop][p]}}}}else{let con=value2[prop].constructor.name;if(con.includes("Set")){obj[prop]=Array.from(value2[prop])}else if(con!=="Number"&&con!=="String"&&con!=="Boolean"){obj[prop]="instanceof_"+con}else{obj[prop]=value2[prop]}}}val=obj}else{val=value2}}else{val=value2}}return val}return function stringifyFast22(obj,space){parents.push(obj);let res=JSON.stringify(obj,checkValues,space);clear();return res}}();if(JSON.stringifyFast===void 0){JSON.stringifyFast=stringifyFast4}var GPUService=class extends Service2{constructor(options){super(options);this.gpu=new gpuUtils;this.addFunc=fn2=>{if(typeof fn2==="string")fn2=parseFunctionFromText5(fn2);if(typeof fn2==="function")this.gpu.addFunction(fn2)};this.addKernel=(name2,fn2,options2)=>{if(typeof fn2==="string")fn2=parseFunctionFromText5(fn2);if(typeof fn2==="function")this.gpu.addKernel(name2,fn2,options2)};this.callKernel=(name2,...args)=>{this.gpu.callKernel(name2,...args)};this.dft=(signalBuffer,nSeconds,scalar)=>{if(scalar==void 0)scalar=1;return this.gpu.gpuDFT(signalBuffer,nSeconds,scalar)};this.multidft=(signalBuffer,nSeconds,scalar)=>{if(scalar==void 0)scalar=1;return this.gpu.MultiChannelDFT(signalBuffer,nSeconds,scalar)};this.multidftbandpass=(buffered,nSeconds,freqStart,freqEnd,scalar)=>{if(scalar==void 0)scalar=1;return this.gpu.MultiChannelDFT_Bandpass(buffered,nSeconds,freqStart,freqEnd,scalar)};this.coherence=(buffered,nSeconds,freqStart,freqEnd)=>{const correlograms=Math22.correlograms(buffered);const buffer=[...buffered,...correlograms];var dfts;var scalar=1;dfts=this.gpu.MultiChannelDFT_Bandpass(buffer,nSeconds,freqStart,freqEnd,scalar);const cordfts=dfts[1].splice(buffered.length,buffer.length-buffered.length);const coherenceResults=[];const nChannels=buffered.length;var k2=0;var l=0;cordfts.forEach((row,i)=>{if(l+k2===nChannels){var temp=cordfts.splice(i,1);k2++;cordfts.splice(k2,0,...temp);l=0}l++});var autoFFTproducts=[];k2=0;l=1;cordfts.forEach((dft2,i)=>{var newdft=new Array(dft2.length).fill(0);if(i<nChannels){dft2.forEach((amp,j3)=>{newdft[j3]=amp});autoFFTproducts.push(newdft)}else{dft2.forEach((amp,j3)=>{let denom=autoFFTproducts[k2][j3]*autoFFTproducts[k2+l][j3];if(denom!==0)newdft[j3]=amp*amp/denom;else newdft[j3]=0;if(newdft[j3]>1){newdft[j3]=1}});l++;if(l+k2===nChannels){k2++;l=1}coherenceResults.push(newdft)}});return[dfts[0],dfts[1],coherenceResults]};this.load(this)}};if(!globalThis.gpu)globalThis.gpu=new GPUService;var dft={structs:{sps:250,nSec:1,freqStart:0,freqEnd:125,watch:["0","1","2","3"],blocking:false},oncreate:ctx=>{},ondata:(ctx,arraybuffer)=>{let results=globalThis.gpu.multidftbandpass(arraybuffer,ctx.nSec,ctx.freqStart,ctx.freqEnd,1);let dft2={};ctx.watch.forEach((tag,i)=>{dft2[tag]=results[1][i]});return{frequencies:results[0],dft:dft2}}};if(!globalThis.gpu)globalThis.gpu=new GPUService;var coherence={structs:{sps:250,nSec:1,freqStart:0,freqEnd:125,tags:["0","1","2","3"],coherenceTags:[]},oncreate:ctx=>{ctx.tags.forEach((tag,i)=>{if(i!==ctx.tags.length-1){for(let j3=i+1;j3<ctx.tags.length;j3++){ctx.coherenceTags.push(ctx.tags[i]+"_"+ctx.tags[j3])}}})},ondata:(ctx,arraybuffer)=>{let ts3=Date.now();let results=globalThis.gpu.coherence(arraybuffer,ctx.nSec,ctx.freqStart,ctx.freqEnd);let dft2={};ctx.tags.forEach((tag,i)=>{dft2[tag]=results[1][i]});let coherence2={};ctx.coherenceTags.forEach((tag,i)=>{coherence2[tag]=results[2][i]});return{timestamp:ts3,frequencies:results[0],dft:dft2,coherence:coherence2}}};var gpualgorithms={dft,coherence};if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope){loadAlgorithms(algorithms2);loadAlgorithms(gpualgorithms);globalThis.Devices=Devices2;const worker=new WorkerService({roots:{...workerCanvasRoutes,...subprocessRoutes,...BFSRoutes,...csvRoutes,...streamWorkerRoutes,...webglPlotRoutes}});console.log("worker",worker)}var stream_big_worker_default=self;})();\n/*!\n* The buffer module from node.js, for the browser.\n*\n* @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n* @license  MIT\n*/\n/**\n * gpu.js\n * http://gpu.rocks/\n *\n * GPU Accelerated JavaScript\n *\n * @version 2.11.0\n * @date Tue Jan 05 2021 15:55:59 GMT-0500 (Eastern Standard Time)\n *\n * @license MIT\n * The MIT License\n *\n * Copyright (c) 2021 gpu.js Team\n */\n')], { type: "text/javascript" }));
  var stream_big_worker_default = url2;

  // workers/utils/load.ts
  function loadSubprocess(template) {
    const copy = Object.assign({}, template);
    if (typeof copy.oncreate === "function")
      copy.oncreate = copy.oncreate.toString();
    if (typeof copy.ondata === "function")
      copy.ondata = copy.ondata.toString();
    this.run("addSubprocessTemplate", [
      copy.name,
      copy.structs,
      copy.oncreate,
      copy.ondata,
      copy.props
    ]).then((success) => {
      if (success)
        console.log("Successfully added subprocess to worker!");
    });
  }

  // workers/subprocesses/arbitrary.ts
  var arbitrary_exports3 = {};
  __export(arbitrary_exports3, {
    name: () => name,
    oncreate: () => oncreate,
    ondata: () => ondata,
    props: () => props,
    structs: () => structs
  });
  var name = "arbitrary";
  var structs = {};
  var oncreate = (ctx) => {
    function parseFunctionFromText6(method = "") {
      let getFunctionBody = (methodString) => {
        return methodString.replace(/^\W*(function[^{]+\{([\s\S]*)\}|[^=]+=>[^{]*\{([\s\S]*)\}|[^=]+=>(.+))/i, "$2$3$4");
      };
      let getFunctionHead = (methodString) => {
        let startindex = methodString.indexOf("=>") + 1;
        if (startindex <= 0) {
          startindex = methodString.indexOf("){");
        }
        if (startindex <= 0) {
          startindex = methodString.indexOf(") {");
        }
        return methodString.slice(0, methodString.indexOf("{", startindex) + 1);
      };
      let newFuncHead = getFunctionHead(method);
      let newFuncBody = getFunctionBody(method);
      let newFunc;
      if (newFuncHead.includes("function")) {
        let varName = newFuncHead.split("(")[1].split(")")[0];
        newFunc = new Function(varName, newFuncBody);
      } else {
        if (newFuncHead.substring(0, 6) === newFuncBody.substring(0, 6)) {
          let varName = newFuncHead.split("(")[1].split(")")[0];
          newFunc = new Function(varName, newFuncBody.substring(newFuncBody.indexOf("{") + 1, newFuncBody.length - 1));
        } else {
          try {
            newFunc = (0, eval)(newFuncHead + newFuncBody + "}");
          } catch {
          }
        }
      }
      return newFunc;
    }
    if (typeof ctx.transform === "string")
      ctx.transform = parseFunctionFromText6(ctx.transform);
  };
  var ondata = (ctx, data) => {
    if (ctx.transform) {
      const res = ctx.transform(data);
      return res;
    }
  };
  var props = {};

  // workers/index.ts
  var arbitrary = workers.addWorker({ url: stream_big_worker_default });
  loadSubprocess.call(arbitrary, arbitrary_exports3);
  var workers_default = workers;

  // modules/arbitrary.ts
  var name2 = "Arbitrary Module";
  var subscriptions = ["state.arbitrary"];
  var ui = {
    __element: "div",
    style: {
      padding: "10px 25px"
    },
    __children: {
      description: {
        __element: "p",
        innerHTML: "This arbitrary module will process data generated using Math.sin to throw an alert when the sine output approaches one"
      },
      readout: {
        __element: "div",
        __children: {
          header: {
            __element: "h3",
            innerHTML: "Current Value"
          },
          value: {
            __element: "p",
            innerHTML: "N/A"
          }
        }
      },
      toggle: {
        subId: void 0,
        __element: "button",
        style: {
          position: "absolute",
          top: "0px",
          right: "0px"
        },
        innerText: "Start",
        onclick: function() {
          if (this.subId) {
            this.innerText = "Start";
            arbitrary.run("destroySubprocess", this.subId);
            this.subId = void 0;
          } else {
            arbitrary.run("createSubprocess", ["arbitrary", { transform: function(inp) {
              return Math.sin(inp);
            }.toString() }]).then((id) => {
              console.log("Created subprocess for arbitrary worker:", id);
              arbitrary.subscribe(id, (value) => state3.arbitrary = { value });
              this.subId = id;
              this.innerText = "Stop";
              const animation = () => {
                const now = Date.now() / 1e3;
                arbitrary.run("runSubprocess", now);
                if (this.subId)
                  setTimeout(animation, 1e3 / 60);
              };
              animation();
            });
          }
        }
      }
    },
    __operator: function(data) {
      this.__children.readout.__children.value.innerHTML = data.toFixed(3);
    }
  };

  // modules/index.ts
  var arbitrary2 = new Module(arbitrary_exports4);

  // node_modules/device-decoder/src/util/arraymanip.ts
  var _ArrayManip2 = class {
    constructor() {
      this.recursivelyAssign = (target, obj) => {
        for (const key in obj) {
          if (typeof obj[key] === "object") {
            if (typeof target[key] === "object")
              this.recursivelyAssign(target[key], obj[key]);
            else
              target[key] = this.recursivelyAssign({}, obj[key]);
          } else
            target[key] = obj[key];
        }
        return target;
      };
    }
    static autoscale(array, lineIdx = 0, nLines = 1, centerZero = false, ymin, ymax, clamp) {
      if (array?.length === 0)
        return array;
      let max = ymax ? ymax : Math.max(...array);
      let min = ymin ? ymin : Math.min(...array);
      let _lines = 1 / nLines;
      let scalar = 1;
      if (centerZero) {
        let absmax = Math.max(Math.abs(min), Math.abs(max));
        if (absmax !== 0)
          scalar = _lines / absmax;
        return array.map((y4) => {
          if (clamp) {
            if (y4 < min)
              y4 = min;
            if (y4 > max)
              y4 = max;
          }
          return y4 * scalar + (_lines * (lineIdx + 1) * 2 - 1 - _lines);
        });
      } else {
        if (max === min) {
          if (max !== 0) {
            scalar = _lines / max;
          } else if (min !== 0) {
            scalar = _lines / Math.abs(min);
          }
        } else
          scalar = _lines / (max - min);
        return array.map((y4) => {
          if (clamp) {
            if (y4 < min)
              y4 = min;
            if (y4 > max)
              y4 = max;
          }
          return 2 * ((y4 - min) * scalar - 1 / (2 * nLines)) + (_lines * (lineIdx + 1) * 2 - 1 - _lines);
        });
      }
    }
    static genTimestamps(ct, sps11) {
      let now = Date.now();
      let toInterp = [now - ct * 1e3 / sps11, now];
      return _ArrayManip2.upsample(toInterp, ct);
    }
    static absmax(array) {
      return Math.max(Math.abs(Math.min(...array)), Math.max(...array));
    }
    static downsample(array, fitCount, scalar = 1) {
      if (array.length > fitCount) {
        let output = new Array(fitCount);
        let incr = array.length / fitCount;
        let lastIdx = array.length - 1;
        let last = 0;
        let counter = 0;
        for (let i = incr; i < array.length; i += incr) {
          let rounded = Math.round(i);
          if (rounded > lastIdx)
            rounded = lastIdx;
          for (let j = last; j < rounded; j++) {
            output[counter] += array[j];
          }
          output[counter] /= (rounded - last) * scalar;
          counter++;
          last = rounded;
        }
        return output;
      } else
        return array;
    }
    static upsample(array, fitCount, scalar = 1) {
      var linearInterpolate = function(before2, after2, atPoint2) {
        return (before2 + (after2 - before2) * atPoint2) * scalar;
      };
      var newData = new Array(fitCount);
      var springFactor = (array.length - 1) / (fitCount - 1);
      newData[0] = array[0];
      for (var i = 1; i < fitCount - 1; i++) {
        var tmp = i * springFactor;
        var before = Math.floor(tmp);
        var after = Math.ceil(tmp);
        var atPoint = tmp - before;
        newData[i] = linearInterpolate(array[before], array[after], atPoint);
      }
      newData[fitCount - 1] = array[array.length - 1];
      return newData;
    }
    static interpolate(array, fitCount, scalar = 1) {
      if (array.length > fitCount) {
        return _ArrayManip2.downsample(array, fitCount, scalar);
      } else if (array.length < fitCount) {
        return _ArrayManip2.upsample(array, fitCount, scalar);
      }
      return array;
    }
    static HSLToRGB(h, s, l, scalar = 255) {
      s /= 100;
      l /= 100;
      let c = (1 - Math.abs(2 * l - 1)) * s, x3 = c * (1 - Math.abs(h / 60 % 2 - 1)), m = l - c / 2, r = 0, g = 0, b2 = 0;
      if (0 <= h && h < 60) {
        r = c;
        g = x3;
        b2 = 0;
      } else if (60 <= h && h < 120) {
        r = x3;
        g = c;
        b2 = 0;
      } else if (120 <= h && h < 180) {
        r = 0;
        g = c;
        b2 = x3;
      } else if (180 <= h && h < 240) {
        r = 0;
        g = x3;
        b2 = c;
      } else if (240 <= h && h < 300) {
        r = x3;
        g = 0;
        b2 = c;
      } else if (300 <= h && h < 360) {
        r = c;
        g = 0;
        b2 = x3;
      }
      r = (r + m) * scalar;
      g = (g + m) * scalar;
      b2 = (b2 + m) * scalar;
      return [r, g, b2];
    }
    static circularBuffer(arr, newEntries) {
      if (newEntries.length < arr.length) {
        let slice = arr.slice(newEntries.length);
        let len = arr.length;
        arr.splice(0, len, ...slice, ...newEntries);
      } else if (newEntries.length > arr.length) {
        let len = arr.length;
        arr.splice(0, len, newEntries.slice(len - newEntries.length));
      } else {
        arr.splice(0, arr.length, ...newEntries);
      }
      return arr;
    }
    static reformatData(data, key) {
      if (Array.isArray(data)) {
        if (Array.isArray(data[0])) {
          let d2 = {};
          data.forEach((arr, i) => {
            d2[i] = arr;
          });
          data = d2;
          if (isNaN(data[0][0]))
            return void 0;
        } else if (key) {
          data = { [key]: data };
          if (isNaN(data[key][0]))
            return void 0;
        } else {
          data = { 0: data };
          if (isNaN(data[0][0]))
            return void 0;
        }
      } else if (typeof data === "object") {
        for (const key2 in data) {
          if (typeof data[key2] === "number")
            data[key2] = [data[key2]];
          else if (data[key2]?.values) {
            if (typeof data[key2].values === "number")
              data[key2].values = [data[key2].values];
          }
          if (isNaN(data[key2][0]))
            return void 0;
        }
      } else if (typeof data === "string") {
        let split;
        if (data.includes("\r\n")) {
          let lines = data.split("\r\n");
          data = {};
          lines.forEach((l, j) => {
            if (l.includes("	")) {
              split = l.split("	");
            } else if (l.includes(",")) {
              split = l.split(",");
            } else if (l.includes("|")) {
              split = l.split("|");
            }
            if (Array.isArray(split)) {
              split.forEach((val, i) => {
                if (val.includes(":")) {
                  let [key2, v2] = val.split(":");
                  let fl = parseFloat(v2);
                  if (fl)
                    data[key2] = [fl];
                  else
                    return void 0;
                } else {
                  let fl = parseFloat(val);
                  if (fl)
                    data[i] = [fl];
                  else
                    return void 0;
                }
              });
            }
          });
        } else if (data.includes("	")) {
          split = data.split("	");
        } else if (data.includes(",")) {
          split = data.split(",");
        } else if (data.includes("|")) {
          split = data.split("|");
        }
        data = {};
        if (Array.isArray(split)) {
          split.forEach((val, i) => {
            if (val.includes(":")) {
              let [key2, v2] = val.split(":");
              let fl = parseFloat(v2);
              if (fl)
                data[key2] = [fl];
              else
                return void 0;
            } else {
              let fl = parseFloat(val);
              if (fl)
                data[i] = [fl];
              else
                return void 0;
            }
          });
        }
      } else if (typeof data === "number") {
        if (key)
          data = { [key]: [data] };
        else
          data = { 0: [data] };
      }
      return data;
    }
    static padTime(data, lastValue, time, targetFit) {
      let slopeIncr = (data[0] - lastValue) / time / targetFit;
      let padded = [...new Array(targetFit - data.length).map((_2, i) => lastValue + slopeIncr * (i + 1)), ...data];
      return padded;
    }
    static interpolateForTime(data, time, targetSPS) {
      return _ArrayManip2.interpolate(data, Math.ceil(targetSPS * time));
    }
    isTypedArray(x3) {
      return ArrayBuffer.isView(x3) && Object.prototype.toString.call(x3) !== "[object DataView]";
    }
    spliceTypedArray(arr, start, end) {
      let s = arr.subarray(0, start);
      let e;
      if (end) {
        e = arr.subarray(end + 1);
      }
      let n;
      if (s.length > 0 || e?.length > 0)
        n = new arr.constructor(s.length + e.length);
      if (s.length > 0)
        n.set(s);
      if (e && e.length > 0)
        n.set(e, s.length);
      return n;
    }
  };
  var ArrayManip2 = _ArrayManip2;
  ArrayManip2.bufferValues = (objects, property, keys, buffer) => {
    if (!Array.isArray(keys) && typeof keys === "object")
      keys = Object.keys(keys);
    if (!buffer) {
      let object_keys = Object.keys(objects);
      if (keys)
        buffer = new Float32Array(object_keys.length * keys.length);
      else {
        if (typeof objects[object_keys[0]][property] === "object") {
          keys = Object.keys(objects[object_keys[0]][property]);
          buffer = new Float32Array(object_keys.length * keys.length);
        } else
          buffer = new Float32Array(object_keys.length);
      }
    }
    let i = 0;
    for (const key in objects) {
      if (objects[key][property]) {
        if (keys) {
          for (let j = 0; j < keys.length; j++) {
            buffer[i] = objects[key][property][keys[j]];
            i++;
          }
        } else {
          buffer[i] = objects[key][property];
          i++;
        }
      }
    }
    return buffer;
  };

  // node_modules/device-decoder/src/util/ByteParser.ts
  var rechk2 = /^([<>])?(([1-9]\d*)?([xcbB?hHiIfdsp]))*$/;
  var refmt2 = /([1-9]\d*)?([xcbB?hHiIfdsp])/g;
  var str2 = (v2, o, c) => String.fromCharCode(...new Uint8Array(v2.buffer, v2.byteOffset + o, c));
  var rts2 = (v2, o, c, s) => new Uint8Array(v2.buffer, v2.byteOffset + o, c).set(s.split("").map((str4) => str4.charCodeAt(0)));
  var pst2 = (v2, o, c) => str2(v2, o + 1, Math.min(v2.getUint8(o), c - 1));
  var tsp2 = (v2, o, c, s) => {
    v2.setUint8(o, s.length);
    rts2(v2, o + 1, c - 1, s);
  };
  var lut2 = (le) => ({
    x: (c) => [1, c, 0],
    c: (c) => [c, 1, (o) => ({ u: (v2) => str2(v2, o, 1), p: (v2, c2) => rts2(v2, o, 1, c2) })],
    "?": (c) => [c, 1, (o) => ({ u: (v2) => Boolean(v2.getUint8(o)), p: (v2, B3) => v2.setUint8(o, B3) })],
    b: (c) => [c, 1, (o) => ({ u: (v2) => v2.getInt8(o), p: (v2, b2) => v2.setInt8(o, b2) })],
    B: (c) => [c, 1, (o) => ({ u: (v2) => v2.getUint8(o), p: (v2, B3) => v2.setUint8(o, B3) })],
    h: (c) => [c, 2, (o) => ({ u: (v2) => v2.getInt16(o, le), p: (v2, h) => v2.setInt16(o, h, le) })],
    H: (c) => [c, 2, (o) => ({ u: (v2) => v2.getUint16(o, le), p: (v2, H3) => v2.setUint16(o, H3, le) })],
    i: (c) => [c, 4, (o) => ({ u: (v2) => v2.getInt32(o, le), p: (v2, i) => v2.setInt32(o, i, le) })],
    I: (c) => [c, 4, (o) => ({ u: (v2) => v2.getUint32(o, le), p: (v2, I) => v2.setUint32(o, I, le) })],
    f: (c) => [c, 4, (o) => ({ u: (v2) => v2.getFloat32(o, le), p: (v2, f) => v2.setFloat32(o, f, le) })],
    d: (c) => [c, 8, (o) => ({ u: (v2) => v2.getFloat64(o, le), p: (v2, d2) => v2.setFloat64(o, d2, le) })],
    s: (c) => [1, c, (o) => ({ u: (v2) => str2(v2, o, c), p: (v2, s) => rts2(v2, o, c, s.slice(0, c)) })],
    p: (c) => [1, c, (o) => ({ u: (v2) => pst2(v2, o, c), p: (v2, s) => tsp2(v2, o, c, s.slice(0, c - 1)) })]
  });
  var errbuf2 = new RangeError("Structure larger than remaining buffer");
  var errval2 = new RangeError("Not enough values for structure");
  var _ByteParser2 = class extends ArrayManip2 {
    static toDataView(value) {
      if (!(value instanceof DataView)) {
        if (typeof value === "string" && parseInt(value))
          value = parseInt(value);
        if (typeof value === "string") {
          let enc = new TextEncoder();
          let hascodes = {};
          for (const code in _ByteParser2.codes) {
            while (value.indexOf(code) > -1) {
              let idx = value.indexOf(code);
              value = value.replace(code, "");
              hascodes[idx] = code;
            }
          }
          let encoded = Array.from(enc.encode(value));
          for (const key in hascodes) {
            encoded.splice(parseInt(key), 0, _ByteParser2.codes[hascodes[key]]);
          }
          value = new DataView(new Uint8Array(encoded).buffer);
        } else if (typeof value === "number") {
          let tmp = value;
          if (value < 256) {
            value = new DataView(new ArrayBuffer(1));
            value.setUint8(0, tmp);
          } else if (value < 65536) {
            value = new DataView(new ArrayBuffer(2));
            value.setInt16(0, tmp);
          } else {
            value = new DataView(new ArrayBuffer(4));
            value.setUint32(0, tmp);
          }
        } else if (value instanceof ArrayBuffer || typeof SharedArrayBuffer !== "undefined" && value instanceof SharedArrayBuffer) {
          value = new DataView(value);
        } else if (Array.isArray(value)) {
          value = new DataView(Uint8Array.from(value).buffer);
        } else if (typeof value === "object") {
          value = new TextEncoder().encode(JSON.stringify(value));
        }
      }
      return value;
    }
    static searchBuffer(buffer, searchString, limit) {
      var needle = searchString;
      var haystack = buffer;
      var search = _ByteParser2.boyerMoore(needle);
      var skip = search.byteLength;
      var indices = [];
      for (var i = search(haystack); i !== -1; i = search(haystack, i + skip)) {
        indices.push(i);
        if (limit) {
          if (indices.length >= limit)
            break;
        }
      }
      return indices;
    }
    static bytesToInt16(x0, x1) {
      let int16 = (255 & x0) << 8 | 255 & x1;
      if ((int16 & 32768) > 0) {
        int16 |= 4294901760;
      } else {
        int16 &= 65535;
      }
      return int16;
    }
    static bytesToUInt16(x0, x1) {
      return x0 * 256 + x1;
    }
    static Uint16ToBytes(y4) {
      return [y4 & 255, y4 >> 8 & 255];
    }
    static bytesToInt24(x0, x1, x22) {
      let int24 = (255 & x0) << 16 | (255 & x1) << 8 | 255 & x22;
      if ((int24 & 8388608) > 0) {
        int24 |= 4278190080;
      } else {
        int24 &= 16777215;
      }
      return int24;
    }
    static bytesToUInt24(x0, x1, x22) {
      return x0 * 65536 + x1 * 256 + x22;
    }
    static Uint24ToBytes(y4) {
      return [y4 & 255, y4 >> 8 & 255, y4 >> 16 & 255];
    }
    static bytesToInt32(x0, x1, x22, x3) {
      let int32 = (255 & x0) << 24 | (255 & x1) << 16 | (255 & x22) << 8 | 255 & x3;
      if ((int32 & 2147483648) > 0) {
        int32 |= 0;
      } else {
        int32 &= 4294967295;
      }
      return int32;
    }
    static bytesToUInt32(x0, x1, x22, x3) {
      return x0 * 16777216 + x1 * 65536 + x22 * 256 + x3;
    }
    static Uint32ToBytes(y4) {
      return [y4 & 255, y4 >> 8 & 255, y4 >> 16 & 255, y4 >> 24 & 255];
    }
    static get2sCompliment(val, nbits4) {
      if (val > 4294967296)
        return null;
      return val << 32 - nbits4 >> 32 - nbits4;
    }
    static getSignedInt(...args) {
      let pos = 0;
      function getInt(size) {
        var value = 0;
        var first = true;
        while (size--) {
          if (first) {
            let byte = args[pos++];
            value += byte & 127;
            if (byte & 128) {
              value -= 128;
            }
            first = false;
          } else {
            value *= 256;
            value += args[pos++];
          }
        }
        return value;
      }
      return getInt(args.length);
    }
    static asUint8Array(input) {
      if (input instanceof Uint8Array) {
        return input;
      } else if (typeof input === "string") {
        var arr = new Uint8Array(input.length);
        for (var i = 0; i < input.length; i++) {
          var c = input.charCodeAt(i);
          if (c > 127) {
            throw new TypeError("Only ASCII patterns are supported");
          }
          arr[i] = c;
        }
        return arr;
      } else {
        return new Uint8Array(input);
      }
    }
    static boyerMoore(patternBuffer) {
      var pattern = _ByteParser2.asUint8Array(patternBuffer);
      var M2 = pattern.length;
      if (M2 === 0) {
        throw new TypeError("patternBuffer must be at least 1 byte long");
      }
      var R2 = 256;
      var rightmost_positions = new Int32Array(R2);
      for (var c = 0; c < R2; c++) {
        rightmost_positions[c] = -1;
      }
      for (var j = 0; j < M2; j++) {
        rightmost_positions[pattern[j]] = j;
      }
      var boyerMooreSearch = (txtBuffer, start, end) => {
        var txt = _ByteParser2.asUint8Array(txtBuffer);
        if (start === void 0)
          start = 0;
        if (end === void 0)
          end = txt.length;
        var pat = pattern;
        var right = rightmost_positions;
        var lastIndex = end - pat.length;
        var lastPatIndex = pat.length - 1;
        var skip;
        for (var i = start; i <= lastIndex; i += skip) {
          skip = 0;
          for (var j2 = lastPatIndex; j2 >= 0; j2--) {
            var c2 = txt[i + j2];
            if (pat[j2] !== c2) {
              skip = Math.max(1, j2 - right[c2]);
              break;
            }
          }
          if (skip === 0) {
            return i;
          }
        }
        return -1;
      };
      boyerMooreSearch.byteLength = pattern.byteLength;
      return boyerMooreSearch;
    }
    static struct(format) {
      let fns = [], size = 0, m = rechk2.exec(format);
      if (!m) {
        throw new RangeError("Invalid format string");
      }
      const t3 = lut2("<" === m[1]), lu = (n, c) => t3[c](n ? parseInt(n, 10) : 1);
      while (m = refmt2.exec(format)) {
        ((r, s, f) => {
          for (let i = 0; i < r; ++i, size += s) {
            if (f) {
              fns.push(f(size));
            }
          }
        })(...lu(...m.slice(1)));
      }
      const unpack_from = (arrb, offs) => {
        if (arrb.byteLength < (offs | 0) + size) {
          throw errbuf2;
        }
        let v2 = new DataView(arrb, offs | 0);
        return fns.map((f) => f.u(v2));
      };
      const pack_into = (arrb, offs, ...values) => {
        if (values.length < fns.length) {
          throw errval2;
        }
        if (arrb.byteLength < offs + size) {
          throw errbuf2;
        }
        const v2 = new DataView(arrb, offs);
        new Uint8Array(arrb, offs, size).fill(0);
        fns.forEach((f, i) => f.p(v2, values[i]));
      };
      const pack = (...values) => {
        let b2 = new ArrayBuffer(size);
        pack_into(b2, 0, ...values);
        return b2;
      };
      const unpack = (arrb) => unpack_from(arrb, 0);
      function* iter_unpack(arrb) {
        for (let offs = 0; offs + size <= arrb.byteLength; offs += size) {
          yield unpack_from(arrb, offs);
        }
      }
      return Object.freeze({
        unpack,
        pack,
        unpack_from,
        pack_into,
        iter_unpack,
        format,
        size
      });
    }
  };
  var ByteParser2 = _ByteParser2;
  ByteParser2.codes = {
    "\\n": 10,
    "\\r": 13,
    "\\t": 9,
    "\\s": 32,
    "\\b": 8,
    "\\f": 12,
    "\\": 92
  };

  // node_modules/device-decoder/src/devices/mpu6050.ts
  var sps6 = 100;
  var mpu6050ChartSettings = {
    lines: {
      "ax": { nSec: 10, sps: sps6 },
      "ay": { nSec: 10, sps: sps6 },
      "az": { nSec: 10, sps: sps6 },
      "gx": { nSec: 10, sps: sps6 },
      "gy": { nSec: 10, sps: sps6 },
      "gz": { nSec: 10, sps: sps6 },
      "mpu_dietemp": { nSec: 10, sps: 5, units: "C" }
    }
  };

  // node_modules/device-decoder/src/devices/max30102.ts
  var max3010xChartSettings = {
    lines: {
      "red": { nSec: 10, sps: 96 },
      "ir": { nSec: 10, sps: 96 },
      "max_dietemp": { nSec: 10, sps: 3.33, units: "C" }
    }
  };

  // node_modules/device-decoder/src/devices/ads131m08.ts
  var decoder2 = new TextDecoder();
  var sps10 = 250;
  var defaultChartSetting7 = { nSec: 10, sps: sps10, units: "mV" };
  var ads131m08ChartSettings2 = {
    lines: {
      "0": JSON.parse(JSON.stringify(defaultChartSetting7)),
      "1": JSON.parse(JSON.stringify(defaultChartSetting7)),
      "2": JSON.parse(JSON.stringify(defaultChartSetting7)),
      "3": JSON.parse(JSON.stringify(defaultChartSetting7)),
      "4": JSON.parse(JSON.stringify(defaultChartSetting7)),
      "5": JSON.parse(JSON.stringify(defaultChartSetting7)),
      "6": JSON.parse(JSON.stringify(defaultChartSetting7)),
      "7": JSON.parse(JSON.stringify(defaultChartSetting7))
    }
  };
  var gain3 = 32;
  var nbits3 = 24;
  var vref3 = 1.2;
  var defaultsetting5 = {
    sps: sps10,
    useDCBlock: false,
    useBandpass: false,
    bandpassLower: 3,
    bandpassUpper: 45,
    useScaling: true,
    scalar: 0.96 * 1e3 * vref3 / (gain3 * (Math.pow(2, nbits3) - 1))
  };
  var ads131m08FilterSettings2 = {
    "0": JSON.parse(JSON.stringify(defaultsetting5)),
    "1": JSON.parse(JSON.stringify(defaultsetting5)),
    "2": JSON.parse(JSON.stringify(defaultsetting5)),
    "3": JSON.parse(JSON.stringify(defaultsetting5)),
    "4": JSON.parse(JSON.stringify(defaultsetting5)),
    "5": JSON.parse(JSON.stringify(defaultsetting5)),
    "6": JSON.parse(JSON.stringify(defaultsetting5)),
    "7": JSON.parse(JSON.stringify(defaultsetting5))
  };

  // node_modules/device-decoder/src/devices/bme280.ts
  var bme280ChartSettings = {
    lines: {
      "temp": { nSec: 120, sps: 3.33, units: "C" },
      "pressure": { nSec: 120, sps: 3.33, units: "hPa" },
      "humidity": { nSec: 120, sps: 3.33, units: "%" },
      "altitude": { nSec: 120, sps: 3.33, units: "m" }
    }
  };

  // node_modules/graphscript-services.storage/dist/index.storage.services.esm.js
  var __create4 = Object.create;
  var __defProp4 = Object.defineProperty;
  var __getOwnPropDesc4 = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames4 = Object.getOwnPropertyNames;
  var __getProtoOf4 = Object.getPrototypeOf;
  var __hasOwnProp4 = Object.prototype.hasOwnProperty;
  var __commonJS4 = (cb, mod) => function __require4() {
    return mod || (0, cb[__getOwnPropNames4(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __copyProps4 = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames4(from))
        if (!__hasOwnProp4.call(to, key) && key !== except)
          __defProp4(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc4(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM4 = (mod, isNodeMode, target) => (target = mod != null ? __create4(__getProtoOf4(mod)) : {}, __copyProps4(isNodeMode || !mod || !mod.__esModule ? __defProp4(target, "default", { value: mod, enumerable: true }) : target, mod));
  var require_browserfs = __commonJS4({ "node_modules/browserfs/dist/browserfs.js"(exports, module2) {
    (function webpackUniversalModuleDefinition(root, factory) {
      if (typeof exports === "object" && typeof module2 === "object")
        module2.exports = factory();
      else if (typeof define === "function" && define.amd)
        define([], factory);
      else if (typeof exports === "object")
        exports["BrowserFS"] = factory();
      else
        root["BrowserFS"] = factory();
    })(exports, function() {
      return function(modules) {
        var installedModules = {};
        function __webpack_require__(moduleId) {
          if (installedModules[moduleId])
            return installedModules[moduleId].exports;
          var module22 = installedModules[moduleId] = { exports: {}, id: moduleId, loaded: false };
          modules[moduleId].call(module22.exports, module22, module22.exports, __webpack_require__);
          module22.loaded = true;
          return module22.exports;
        }
        __webpack_require__.m = modules;
        __webpack_require__.c = installedModules;
        __webpack_require__.p = "";
        return __webpack_require__(0);
      }([function(module22, exports2, __webpack_require__) {
        (function(Buffer2, global2, module3, process2) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", { value: true });
          var buffer = __webpack_require__(2);
          var path = __webpack_require__(9);
          var ErrorCode;
          (function(ErrorCode2) {
            ErrorCode2[ErrorCode2["EPERM"] = 1] = "EPERM";
            ErrorCode2[ErrorCode2["ENOENT"] = 2] = "ENOENT";
            ErrorCode2[ErrorCode2["EIO"] = 5] = "EIO";
            ErrorCode2[ErrorCode2["EBADF"] = 9] = "EBADF";
            ErrorCode2[ErrorCode2["EACCES"] = 13] = "EACCES";
            ErrorCode2[ErrorCode2["EBUSY"] = 16] = "EBUSY";
            ErrorCode2[ErrorCode2["EEXIST"] = 17] = "EEXIST";
            ErrorCode2[ErrorCode2["ENOTDIR"] = 20] = "ENOTDIR";
            ErrorCode2[ErrorCode2["EISDIR"] = 21] = "EISDIR";
            ErrorCode2[ErrorCode2["EINVAL"] = 22] = "EINVAL";
            ErrorCode2[ErrorCode2["EFBIG"] = 27] = "EFBIG";
            ErrorCode2[ErrorCode2["ENOSPC"] = 28] = "ENOSPC";
            ErrorCode2[ErrorCode2["EROFS"] = 30] = "EROFS";
            ErrorCode2[ErrorCode2["ENOTEMPTY"] = 39] = "ENOTEMPTY";
            ErrorCode2[ErrorCode2["ENOTSUP"] = 95] = "ENOTSUP";
          })(ErrorCode || (ErrorCode = {}));
          var ErrorStrings = {};
          ErrorStrings[ErrorCode.EPERM] = "Operation not permitted.";
          ErrorStrings[ErrorCode.ENOENT] = "No such file or directory.";
          ErrorStrings[ErrorCode.EIO] = "Input/output error.";
          ErrorStrings[ErrorCode.EBADF] = "Bad file descriptor.";
          ErrorStrings[ErrorCode.EACCES] = "Permission denied.";
          ErrorStrings[ErrorCode.EBUSY] = "Resource busy or locked.";
          ErrorStrings[ErrorCode.EEXIST] = "File exists.";
          ErrorStrings[ErrorCode.ENOTDIR] = "File is not a directory.";
          ErrorStrings[ErrorCode.EISDIR] = "File is a directory.";
          ErrorStrings[ErrorCode.EINVAL] = "Invalid argument.";
          ErrorStrings[ErrorCode.EFBIG] = "File is too big.";
          ErrorStrings[ErrorCode.ENOSPC] = "No space left on disk.";
          ErrorStrings[ErrorCode.EROFS] = "Cannot modify a read-only file system.";
          ErrorStrings[ErrorCode.ENOTEMPTY] = "Directory is not empty.";
          ErrorStrings[ErrorCode.ENOTSUP] = "Operation is not supported.";
          var ApiError = function(Error2) {
            function ApiError2(type, message4, path$$1) {
              if (message4 === void 0)
                message4 = ErrorStrings[type];
              Error2.call(this, message4);
              this.syscall = "";
              this.errno = type;
              this.code = ErrorCode[type];
              this.path = path$$1;
              this.stack = new Error2().stack;
              this.message = "Error: " + this.code + ": " + message4 + (this.path ? ", '" + this.path + "'" : "");
            }
            if (Error2)
              ApiError2.__proto__ = Error2;
            ApiError2.prototype = Object.create(Error2 && Error2.prototype);
            ApiError2.prototype.constructor = ApiError2;
            ApiError2.fromJSON = function fromJSON(json) {
              var err = new ApiError2(0);
              err.errno = json.errno;
              err.code = json.code;
              err.path = json.path;
              err.stack = json.stack;
              err.message = json.message;
              return err;
            };
            ApiError2.fromBuffer = function fromBuffer(buffer$$1, i2) {
              if (i2 === void 0)
                i2 = 0;
              return ApiError2.fromJSON(JSON.parse(buffer$$1.toString("utf8", i2 + 4, i2 + 4 + buffer$$1.readUInt32LE(i2))));
            };
            ApiError2.FileError = function FileError(code, p) {
              return new ApiError2(code, ErrorStrings[code], p);
            };
            ApiError2.ENOENT = function ENOENT(path$$1) {
              return this.FileError(ErrorCode.ENOENT, path$$1);
            };
            ApiError2.EEXIST = function EEXIST(path$$1) {
              return this.FileError(ErrorCode.EEXIST, path$$1);
            };
            ApiError2.EISDIR = function EISDIR(path$$1) {
              return this.FileError(ErrorCode.EISDIR, path$$1);
            };
            ApiError2.ENOTDIR = function ENOTDIR(path$$1) {
              return this.FileError(ErrorCode.ENOTDIR, path$$1);
            };
            ApiError2.EPERM = function EPERM(path$$1) {
              return this.FileError(ErrorCode.EPERM, path$$1);
            };
            ApiError2.ENOTEMPTY = function ENOTEMPTY(path$$1) {
              return this.FileError(ErrorCode.ENOTEMPTY, path$$1);
            };
            ApiError2.prototype.toString = function toString() {
              return this.message;
            };
            ApiError2.prototype.toJSON = function toJSON() {
              return { errno: this.errno, code: this.code, path: this.path, stack: this.stack, message: this.message };
            };
            ApiError2.prototype.writeToBuffer = function writeToBuffer(buffer$$1, i2) {
              if (buffer$$1 === void 0)
                buffer$$1 = Buffer2.alloc(this.bufferSize());
              if (i2 === void 0)
                i2 = 0;
              var bytesWritten = buffer$$1.write(JSON.stringify(this.toJSON()), i2 + 4);
              buffer$$1.writeUInt32LE(bytesWritten, i2);
              return buffer$$1;
            };
            ApiError2.prototype.bufferSize = function bufferSize() {
              return 4 + Buffer2.byteLength(JSON.stringify(this.toJSON()));
            };
            return ApiError2;
          }(Error);
          var api_error = Object.freeze({ get ErrorCode() {
            return ErrorCode;
          }, ErrorStrings, ApiError });
          var ActionType;
          (function(ActionType2) {
            ActionType2[ActionType2["NOP"] = 0] = "NOP";
            ActionType2[ActionType2["THROW_EXCEPTION"] = 1] = "THROW_EXCEPTION";
            ActionType2[ActionType2["TRUNCATE_FILE"] = 2] = "TRUNCATE_FILE";
            ActionType2[ActionType2["CREATE_FILE"] = 3] = "CREATE_FILE";
          })(ActionType || (ActionType = {}));
          var FileFlag = function FileFlag2(flagStr) {
            this.flagStr = flagStr;
            if (FileFlag2.validFlagStrs.indexOf(flagStr) < 0) {
              throw new ApiError(ErrorCode.EINVAL, "Invalid flag: " + flagStr);
            }
          };
          FileFlag.getFileFlag = function getFileFlag(flagStr) {
            if (FileFlag.flagCache.hasOwnProperty(flagStr)) {
              return FileFlag.flagCache[flagStr];
            }
            return FileFlag.flagCache[flagStr] = new FileFlag(flagStr);
          };
          FileFlag.prototype.getFlagString = function getFlagString() {
            return this.flagStr;
          };
          FileFlag.prototype.isReadable = function isReadable() {
            return this.flagStr.indexOf("r") !== -1 || this.flagStr.indexOf("+") !== -1;
          };
          FileFlag.prototype.isWriteable = function isWriteable() {
            return this.flagStr.indexOf("w") !== -1 || this.flagStr.indexOf("a") !== -1 || this.flagStr.indexOf("+") !== -1;
          };
          FileFlag.prototype.isTruncating = function isTruncating() {
            return this.flagStr.indexOf("w") !== -1;
          };
          FileFlag.prototype.isAppendable = function isAppendable() {
            return this.flagStr.indexOf("a") !== -1;
          };
          FileFlag.prototype.isSynchronous = function isSynchronous() {
            return this.flagStr.indexOf("s") !== -1;
          };
          FileFlag.prototype.isExclusive = function isExclusive() {
            return this.flagStr.indexOf("x") !== -1;
          };
          FileFlag.prototype.pathExistsAction = function pathExistsAction() {
            if (this.isExclusive()) {
              return ActionType.THROW_EXCEPTION;
            } else if (this.isTruncating()) {
              return ActionType.TRUNCATE_FILE;
            } else {
              return ActionType.NOP;
            }
          };
          FileFlag.prototype.pathNotExistsAction = function pathNotExistsAction() {
            if ((this.isWriteable() || this.isAppendable()) && this.flagStr !== "r+") {
              return ActionType.CREATE_FILE;
            } else {
              return ActionType.THROW_EXCEPTION;
            }
          };
          FileFlag.flagCache = {};
          FileFlag.validFlagStrs = ["r", "r+", "rs", "rs+", "w", "wx", "w+", "wx+", "a", "ax", "a+", "ax+"];
          var FileType;
          (function(FileType2) {
            FileType2[FileType2["FILE"] = 32768] = "FILE";
            FileType2[FileType2["DIRECTORY"] = 16384] = "DIRECTORY";
            FileType2[FileType2["SYMLINK"] = 40960] = "SYMLINK";
          })(FileType || (FileType = {}));
          var Stats = function Stats2(itemType, size, mode, atime, mtime, ctime) {
            if (atime === void 0)
              atime = new Date();
            if (mtime === void 0)
              mtime = new Date();
            if (ctime === void 0)
              ctime = new Date();
            this.size = size;
            this.atime = atime;
            this.mtime = mtime;
            this.ctime = ctime;
            this.dev = 0;
            this.ino = 0;
            this.rdev = 0;
            this.nlink = 1;
            this.blksize = 4096;
            this.uid = 0;
            this.gid = 0;
            this.birthtime = new Date(0);
            this.fileData = null;
            if (!mode) {
              switch (itemType) {
                case FileType.FILE:
                  this.mode = 420;
                  break;
                case FileType.DIRECTORY:
                default:
                  this.mode = 511;
              }
            } else {
              this.mode = mode;
            }
            this.blocks = Math.ceil(size / 512);
            if (this.mode < 4096) {
              this.mode |= itemType;
            }
          };
          Stats.fromBuffer = function fromBuffer(buffer$$1) {
            var size = buffer$$1.readUInt32LE(0), mode = buffer$$1.readUInt32LE(4), atime = buffer$$1.readDoubleLE(8), mtime = buffer$$1.readDoubleLE(16), ctime = buffer$$1.readDoubleLE(24);
            return new Stats(mode & 61440, size, mode & 4095, new Date(atime), new Date(mtime), new Date(ctime));
          };
          Stats.prototype.toBuffer = function toBuffer() {
            var buffer$$1 = Buffer2.alloc(32);
            buffer$$1.writeUInt32LE(this.size, 0);
            buffer$$1.writeUInt32LE(this.mode, 4);
            buffer$$1.writeDoubleLE(this.atime.getTime(), 8);
            buffer$$1.writeDoubleLE(this.mtime.getTime(), 16);
            buffer$$1.writeDoubleLE(this.ctime.getTime(), 24);
            return buffer$$1;
          };
          Stats.prototype.clone = function clone() {
            return new Stats(this.mode & 61440, this.size, this.mode & 4095, this.atime, this.mtime, this.ctime);
          };
          Stats.prototype.isFile = function isFile() {
            return (this.mode & 61440) === FileType.FILE;
          };
          Stats.prototype.isDirectory = function isDirectory() {
            return (this.mode & 61440) === FileType.DIRECTORY;
          };
          Stats.prototype.isSymbolicLink = function isSymbolicLink() {
            return (this.mode & 61440) === FileType.SYMLINK;
          };
          Stats.prototype.chmod = function chmod(mode) {
            this.mode = this.mode & 61440 | mode;
          };
          Stats.prototype.isSocket = function isSocket() {
            return false;
          };
          Stats.prototype.isBlockDevice = function isBlockDevice() {
            return false;
          };
          Stats.prototype.isCharacterDevice = function isCharacterDevice() {
            return false;
          };
          Stats.prototype.isFIFO = function isFIFO() {
            return false;
          };
          var wrapCb = function(cb, numArgs) {
            return cb;
          };
          function assertRoot(fs4) {
            if (fs4) {
              return fs4;
            }
            throw new ApiError(ErrorCode.EIO, "Initialize BrowserFS with a file system using BrowserFS.initialize(filesystem)");
          }
          function normalizeMode(mode, def) {
            switch (typeof mode) {
              case "number":
                return mode;
              case "string":
                var trueMode = parseInt(mode, 8);
                if (!isNaN(trueMode)) {
                  return trueMode;
                }
                return def;
              default:
                return def;
            }
          }
          function normalizeTime(time) {
            if (time instanceof Date) {
              return time;
            } else if (typeof time === "number") {
              return new Date(time * 1e3);
            } else {
              throw new ApiError(ErrorCode.EINVAL, "Invalid time.");
            }
          }
          function normalizePath(p) {
            if (p.indexOf("\0") >= 0) {
              throw new ApiError(ErrorCode.EINVAL, "Path must be a string without null bytes.");
            } else if (p === "") {
              throw new ApiError(ErrorCode.EINVAL, "Path must not be empty.");
            }
            return path.resolve(p);
          }
          function normalizeOptions(options, defEnc, defFlag, defMode) {
            switch (typeof options) {
              case "object":
                return { encoding: typeof options["encoding"] !== "undefined" ? options["encoding"] : defEnc, flag: typeof options["flag"] !== "undefined" ? options["flag"] : defFlag, mode: normalizeMode(options["mode"], defMode) };
              case "string":
                return { encoding: options, flag: defFlag, mode: defMode };
              default:
                return { encoding: defEnc, flag: defFlag, mode: defMode };
            }
          }
          function nopCb() {
          }
          var FS = function FS2() {
            this.F_OK = 0;
            this.R_OK = 4;
            this.W_OK = 2;
            this.X_OK = 1;
            this.root = null;
            this.fdMap = {};
            this.nextFd = 100;
          };
          FS.prototype.initialize = function initialize3(rootFS) {
            if (!rootFS.constructor.isAvailable()) {
              throw new ApiError(ErrorCode.EINVAL, "Tried to instantiate BrowserFS with an unavailable file system.");
            }
            return this.root = rootFS;
          };
          FS.prototype._toUnixTimestamp = function _toUnixTimestamp(time) {
            if (typeof time === "number") {
              return time;
            } else if (time instanceof Date) {
              return time.getTime() / 1e3;
            }
            throw new Error("Cannot parse time: " + time);
          };
          FS.prototype.getRootFS = function getRootFS() {
            if (this.root) {
              return this.root;
            } else {
              return null;
            }
          };
          FS.prototype.rename = function rename(oldPath, newPath, cb) {
            if (cb === void 0)
              cb = nopCb;
            var newCb = wrapCb(cb, 1);
            try {
              assertRoot(this.root).rename(normalizePath(oldPath), normalizePath(newPath), newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.renameSync = function renameSync(oldPath, newPath) {
            assertRoot(this.root).renameSync(normalizePath(oldPath), normalizePath(newPath));
          };
          FS.prototype.exists = function exists2(path$$1, cb) {
            if (cb === void 0)
              cb = nopCb;
            var newCb = wrapCb(cb, 1);
            try {
              return assertRoot(this.root).exists(normalizePath(path$$1), newCb);
            } catch (e) {
              return newCb(false);
            }
          };
          FS.prototype.existsSync = function existsSync(path$$1) {
            try {
              return assertRoot(this.root).existsSync(normalizePath(path$$1));
            } catch (e) {
              return false;
            }
          };
          FS.prototype.stat = function stat(path$$1, cb) {
            if (cb === void 0)
              cb = nopCb;
            var newCb = wrapCb(cb, 2);
            try {
              return assertRoot(this.root).stat(normalizePath(path$$1), false, newCb);
            } catch (e) {
              return newCb(e);
            }
          };
          FS.prototype.statSync = function statSync(path$$1) {
            return assertRoot(this.root).statSync(normalizePath(path$$1), false);
          };
          FS.prototype.lstat = function lstat(path$$1, cb) {
            if (cb === void 0)
              cb = nopCb;
            var newCb = wrapCb(cb, 2);
            try {
              return assertRoot(this.root).stat(normalizePath(path$$1), true, newCb);
            } catch (e) {
              return newCb(e);
            }
          };
          FS.prototype.lstatSync = function lstatSync(path$$1) {
            return assertRoot(this.root).statSync(normalizePath(path$$1), true);
          };
          FS.prototype.truncate = function truncate(path$$1, arg2, cb) {
            if (arg2 === void 0)
              arg2 = 0;
            if (cb === void 0)
              cb = nopCb;
            var len = 0;
            if (typeof arg2 === "function") {
              cb = arg2;
            } else if (typeof arg2 === "number") {
              len = arg2;
            }
            var newCb = wrapCb(cb, 1);
            try {
              if (len < 0) {
                throw new ApiError(ErrorCode.EINVAL);
              }
              return assertRoot(this.root).truncate(normalizePath(path$$1), len, newCb);
            } catch (e) {
              return newCb(e);
            }
          };
          FS.prototype.truncateSync = function truncateSync(path$$1, len) {
            if (len === void 0)
              len = 0;
            if (len < 0) {
              throw new ApiError(ErrorCode.EINVAL);
            }
            return assertRoot(this.root).truncateSync(normalizePath(path$$1), len);
          };
          FS.prototype.unlink = function unlink(path$$1, cb) {
            if (cb === void 0)
              cb = nopCb;
            var newCb = wrapCb(cb, 1);
            try {
              return assertRoot(this.root).unlink(normalizePath(path$$1), newCb);
            } catch (e) {
              return newCb(e);
            }
          };
          FS.prototype.unlinkSync = function unlinkSync(path$$1) {
            return assertRoot(this.root).unlinkSync(normalizePath(path$$1));
          };
          FS.prototype.open = function open(path$$1, flag, arg2, cb) {
            var this$1 = this;
            if (cb === void 0)
              cb = nopCb;
            var mode = normalizeMode(arg2, 420);
            cb = typeof arg2 === "function" ? arg2 : cb;
            var newCb = wrapCb(cb, 2);
            try {
              assertRoot(this.root).open(normalizePath(path$$1), FileFlag.getFileFlag(flag), mode, function(e, file) {
                if (file) {
                  newCb(e, this$1.getFdForFile(file));
                } else {
                  newCb(e);
                }
              });
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.openSync = function openSync(path$$1, flag, mode) {
            if (mode === void 0)
              mode = 420;
            return this.getFdForFile(assertRoot(this.root).openSync(normalizePath(path$$1), FileFlag.getFileFlag(flag), normalizeMode(mode, 420)));
          };
          FS.prototype.readFile = function readFile2(filename, arg2, cb) {
            if (arg2 === void 0)
              arg2 = {};
            if (cb === void 0)
              cb = nopCb;
            var options = normalizeOptions(arg2, null, "r", null);
            cb = typeof arg2 === "function" ? arg2 : cb;
            var newCb = wrapCb(cb, 2);
            try {
              var flag = FileFlag.getFileFlag(options["flag"]);
              if (!flag.isReadable()) {
                return newCb(new ApiError(ErrorCode.EINVAL, "Flag passed to readFile must allow for reading."));
              }
              return assertRoot(this.root).readFile(normalizePath(filename), options.encoding, flag, newCb);
            } catch (e) {
              return newCb(e);
            }
          };
          FS.prototype.readFileSync = function readFileSync(filename, arg2) {
            if (arg2 === void 0)
              arg2 = {};
            var options = normalizeOptions(arg2, null, "r", null);
            var flag = FileFlag.getFileFlag(options.flag);
            if (!flag.isReadable()) {
              throw new ApiError(ErrorCode.EINVAL, "Flag passed to readFile must allow for reading.");
            }
            return assertRoot(this.root).readFileSync(normalizePath(filename), options.encoding, flag);
          };
          FS.prototype.writeFile = function writeFile2(filename, data, arg3, cb) {
            if (arg3 === void 0)
              arg3 = {};
            if (cb === void 0)
              cb = nopCb;
            var options = normalizeOptions(arg3, "utf8", "w", 420);
            cb = typeof arg3 === "function" ? arg3 : cb;
            var newCb = wrapCb(cb, 1);
            try {
              var flag = FileFlag.getFileFlag(options.flag);
              if (!flag.isWriteable()) {
                return newCb(new ApiError(ErrorCode.EINVAL, "Flag passed to writeFile must allow for writing."));
              }
              return assertRoot(this.root).writeFile(normalizePath(filename), data, options.encoding, flag, options.mode, newCb);
            } catch (e) {
              return newCb(e);
            }
          };
          FS.prototype.writeFileSync = function writeFileSync(filename, data, arg3) {
            var options = normalizeOptions(arg3, "utf8", "w", 420);
            var flag = FileFlag.getFileFlag(options.flag);
            if (!flag.isWriteable()) {
              throw new ApiError(ErrorCode.EINVAL, "Flag passed to writeFile must allow for writing.");
            }
            return assertRoot(this.root).writeFileSync(normalizePath(filename), data, options.encoding, flag, options.mode);
          };
          FS.prototype.appendFile = function appendFile3(filename, data, arg3, cb) {
            if (cb === void 0)
              cb = nopCb;
            var options = normalizeOptions(arg3, "utf8", "a", 420);
            cb = typeof arg3 === "function" ? arg3 : cb;
            var newCb = wrapCb(cb, 1);
            try {
              var flag = FileFlag.getFileFlag(options.flag);
              if (!flag.isAppendable()) {
                return newCb(new ApiError(ErrorCode.EINVAL, "Flag passed to appendFile must allow for appending."));
              }
              assertRoot(this.root).appendFile(normalizePath(filename), data, options.encoding, flag, options.mode, newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.appendFileSync = function appendFileSync(filename, data, arg3) {
            var options = normalizeOptions(arg3, "utf8", "a", 420);
            var flag = FileFlag.getFileFlag(options.flag);
            if (!flag.isAppendable()) {
              throw new ApiError(ErrorCode.EINVAL, "Flag passed to appendFile must allow for appending.");
            }
            return assertRoot(this.root).appendFileSync(normalizePath(filename), data, options.encoding, flag, options.mode);
          };
          FS.prototype.fstat = function fstat(fd, cb) {
            if (cb === void 0)
              cb = nopCb;
            var newCb = wrapCb(cb, 2);
            try {
              var file = this.fd2file(fd);
              file.stat(newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.fstatSync = function fstatSync(fd) {
            return this.fd2file(fd).statSync();
          };
          FS.prototype.close = function close(fd, cb) {
            var this$1 = this;
            if (cb === void 0)
              cb = nopCb;
            var newCb = wrapCb(cb, 1);
            try {
              this.fd2file(fd).close(function(e) {
                if (!e) {
                  this$1.closeFd(fd);
                }
                newCb(e);
              });
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.closeSync = function closeSync(fd) {
            this.fd2file(fd).closeSync();
            this.closeFd(fd);
          };
          FS.prototype.ftruncate = function ftruncate(fd, arg2, cb) {
            if (cb === void 0)
              cb = nopCb;
            var length = typeof arg2 === "number" ? arg2 : 0;
            cb = typeof arg2 === "function" ? arg2 : cb;
            var newCb = wrapCb(cb, 1);
            try {
              var file = this.fd2file(fd);
              if (length < 0) {
                throw new ApiError(ErrorCode.EINVAL);
              }
              file.truncate(length, newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.ftruncateSync = function ftruncateSync(fd, len) {
            if (len === void 0)
              len = 0;
            var file = this.fd2file(fd);
            if (len < 0) {
              throw new ApiError(ErrorCode.EINVAL);
            }
            file.truncateSync(len);
          };
          FS.prototype.fsync = function fsync(fd, cb) {
            if (cb === void 0)
              cb = nopCb;
            var newCb = wrapCb(cb, 1);
            try {
              this.fd2file(fd).sync(newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.fsyncSync = function fsyncSync(fd) {
            this.fd2file(fd).syncSync();
          };
          FS.prototype.fdatasync = function fdatasync(fd, cb) {
            if (cb === void 0)
              cb = nopCb;
            var newCb = wrapCb(cb, 1);
            try {
              this.fd2file(fd).datasync(newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.fdatasyncSync = function fdatasyncSync(fd) {
            this.fd2file(fd).datasyncSync();
          };
          FS.prototype.write = function write(fd, arg2, arg3, arg4, arg5, cb) {
            if (cb === void 0)
              cb = nopCb;
            var buffer$$1, offset, length, position = null;
            if (typeof arg2 === "string") {
              var encoding = "utf8";
              switch (typeof arg3) {
                case "function":
                  cb = arg3;
                  break;
                case "number":
                  position = arg3;
                  encoding = typeof arg4 === "string" ? arg4 : "utf8";
                  cb = typeof arg5 === "function" ? arg5 : cb;
                  break;
                default:
                  cb = typeof arg4 === "function" ? arg4 : typeof arg5 === "function" ? arg5 : cb;
                  return cb(new ApiError(ErrorCode.EINVAL, "Invalid arguments."));
              }
              buffer$$1 = Buffer2.from(arg2, encoding);
              offset = 0;
              length = buffer$$1.length;
            } else {
              buffer$$1 = arg2;
              offset = arg3;
              length = arg4;
              position = typeof arg5 === "number" ? arg5 : null;
              cb = typeof arg5 === "function" ? arg5 : cb;
            }
            var newCb = wrapCb(cb, 3);
            try {
              var file = this.fd2file(fd);
              if (position === void 0 || position === null) {
                position = file.getPos();
              }
              file.write(buffer$$1, offset, length, position, newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.writeSync = function writeSync(fd, arg2, arg3, arg4, arg5) {
            var buffer$$1, offset = 0, length, position;
            if (typeof arg2 === "string") {
              position = typeof arg3 === "number" ? arg3 : null;
              var encoding = typeof arg4 === "string" ? arg4 : "utf8";
              offset = 0;
              buffer$$1 = Buffer2.from(arg2, encoding);
              length = buffer$$1.length;
            } else {
              buffer$$1 = arg2;
              offset = arg3;
              length = arg4;
              position = typeof arg5 === "number" ? arg5 : null;
            }
            var file = this.fd2file(fd);
            if (position === void 0 || position === null) {
              position = file.getPos();
            }
            return file.writeSync(buffer$$1, offset, length, position);
          };
          FS.prototype.read = function read(fd, arg2, arg3, arg4, arg5, cb) {
            if (cb === void 0)
              cb = nopCb;
            var position, offset, length, buffer$$1, newCb;
            if (typeof arg2 === "number") {
              length = arg2;
              position = arg3;
              var encoding = arg4;
              cb = typeof arg5 === "function" ? arg5 : cb;
              offset = 0;
              buffer$$1 = Buffer2.alloc(length);
              newCb = wrapCb(function(err, bytesRead, buf) {
                if (err) {
                  return cb(err);
                }
                cb(err, buf.toString(encoding), bytesRead);
              }, 3);
            } else {
              buffer$$1 = arg2;
              offset = arg3;
              length = arg4;
              position = arg5;
              newCb = wrapCb(cb, 3);
            }
            try {
              var file = this.fd2file(fd);
              if (position === void 0 || position === null) {
                position = file.getPos();
              }
              file.read(buffer$$1, offset, length, position, newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.readSync = function readSync(fd, arg2, arg3, arg4, arg5) {
            var shenanigans = false;
            var buffer$$1, offset, length, position, encoding = "utf8";
            if (typeof arg2 === "number") {
              length = arg2;
              position = arg3;
              encoding = arg4;
              offset = 0;
              buffer$$1 = Buffer2.alloc(length);
              shenanigans = true;
            } else {
              buffer$$1 = arg2;
              offset = arg3;
              length = arg4;
              position = arg5;
            }
            var file = this.fd2file(fd);
            if (position === void 0 || position === null) {
              position = file.getPos();
            }
            var rv = file.readSync(buffer$$1, offset, length, position);
            if (!shenanigans) {
              return rv;
            } else {
              return [buffer$$1.toString(encoding), rv];
            }
          };
          FS.prototype.fchown = function fchown(fd, uid, gid, callback) {
            if (callback === void 0)
              callback = nopCb;
            var newCb = wrapCb(callback, 1);
            try {
              this.fd2file(fd).chown(uid, gid, newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.fchownSync = function fchownSync(fd, uid, gid) {
            this.fd2file(fd).chownSync(uid, gid);
          };
          FS.prototype.fchmod = function fchmod(fd, mode, cb) {
            var newCb = wrapCb(cb, 1);
            try {
              var numMode = typeof mode === "string" ? parseInt(mode, 8) : mode;
              this.fd2file(fd).chmod(numMode, newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.fchmodSync = function fchmodSync(fd, mode) {
            var numMode = typeof mode === "string" ? parseInt(mode, 8) : mode;
            this.fd2file(fd).chmodSync(numMode);
          };
          FS.prototype.futimes = function futimes(fd, atime, mtime, cb) {
            if (cb === void 0)
              cb = nopCb;
            var newCb = wrapCb(cb, 1);
            try {
              var file = this.fd2file(fd);
              if (typeof atime === "number") {
                atime = new Date(atime * 1e3);
              }
              if (typeof mtime === "number") {
                mtime = new Date(mtime * 1e3);
              }
              file.utimes(atime, mtime, newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.futimesSync = function futimesSync(fd, atime, mtime) {
            this.fd2file(fd).utimesSync(normalizeTime(atime), normalizeTime(mtime));
          };
          FS.prototype.rmdir = function rmdir(path$$1, cb) {
            if (cb === void 0)
              cb = nopCb;
            var newCb = wrapCb(cb, 1);
            try {
              path$$1 = normalizePath(path$$1);
              assertRoot(this.root).rmdir(path$$1, newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.rmdirSync = function rmdirSync(path$$1) {
            path$$1 = normalizePath(path$$1);
            return assertRoot(this.root).rmdirSync(path$$1);
          };
          FS.prototype.mkdir = function mkdir(path$$1, mode, cb) {
            if (cb === void 0)
              cb = nopCb;
            if (typeof mode === "function") {
              cb = mode;
              mode = 511;
            }
            var newCb = wrapCb(cb, 1);
            try {
              path$$1 = normalizePath(path$$1);
              assertRoot(this.root).mkdir(path$$1, mode, newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.mkdirSync = function mkdirSync(path$$1, mode) {
            assertRoot(this.root).mkdirSync(normalizePath(path$$1), normalizeMode(mode, 511));
          };
          FS.prototype.readdir = function readdir(path$$1, cb) {
            if (cb === void 0)
              cb = nopCb;
            var newCb = wrapCb(cb, 2);
            try {
              path$$1 = normalizePath(path$$1);
              assertRoot(this.root).readdir(path$$1, newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.readdirSync = function readdirSync(path$$1) {
            path$$1 = normalizePath(path$$1);
            return assertRoot(this.root).readdirSync(path$$1);
          };
          FS.prototype.link = function link(srcpath, dstpath, cb) {
            if (cb === void 0)
              cb = nopCb;
            var newCb = wrapCb(cb, 1);
            try {
              srcpath = normalizePath(srcpath);
              dstpath = normalizePath(dstpath);
              assertRoot(this.root).link(srcpath, dstpath, newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.linkSync = function linkSync(srcpath, dstpath) {
            srcpath = normalizePath(srcpath);
            dstpath = normalizePath(dstpath);
            return assertRoot(this.root).linkSync(srcpath, dstpath);
          };
          FS.prototype.symlink = function symlink(srcpath, dstpath, arg3, cb) {
            if (cb === void 0)
              cb = nopCb;
            var type = typeof arg3 === "string" ? arg3 : "file";
            cb = typeof arg3 === "function" ? arg3 : cb;
            var newCb = wrapCb(cb, 1);
            try {
              if (type !== "file" && type !== "dir") {
                return newCb(new ApiError(ErrorCode.EINVAL, "Invalid type: " + type));
              }
              srcpath = normalizePath(srcpath);
              dstpath = normalizePath(dstpath);
              assertRoot(this.root).symlink(srcpath, dstpath, type, newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.symlinkSync = function symlinkSync(srcpath, dstpath, type) {
            if (!type) {
              type = "file";
            } else if (type !== "file" && type !== "dir") {
              throw new ApiError(ErrorCode.EINVAL, "Invalid type: " + type);
            }
            srcpath = normalizePath(srcpath);
            dstpath = normalizePath(dstpath);
            return assertRoot(this.root).symlinkSync(srcpath, dstpath, type);
          };
          FS.prototype.readlink = function readlink(path$$1, cb) {
            if (cb === void 0)
              cb = nopCb;
            var newCb = wrapCb(cb, 2);
            try {
              path$$1 = normalizePath(path$$1);
              assertRoot(this.root).readlink(path$$1, newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.readlinkSync = function readlinkSync(path$$1) {
            path$$1 = normalizePath(path$$1);
            return assertRoot(this.root).readlinkSync(path$$1);
          };
          FS.prototype.chown = function chown(path$$1, uid, gid, cb) {
            if (cb === void 0)
              cb = nopCb;
            var newCb = wrapCb(cb, 1);
            try {
              path$$1 = normalizePath(path$$1);
              assertRoot(this.root).chown(path$$1, false, uid, gid, newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.chownSync = function chownSync(path$$1, uid, gid) {
            path$$1 = normalizePath(path$$1);
            assertRoot(this.root).chownSync(path$$1, false, uid, gid);
          };
          FS.prototype.lchown = function lchown(path$$1, uid, gid, cb) {
            if (cb === void 0)
              cb = nopCb;
            var newCb = wrapCb(cb, 1);
            try {
              path$$1 = normalizePath(path$$1);
              assertRoot(this.root).chown(path$$1, true, uid, gid, newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.lchownSync = function lchownSync(path$$1, uid, gid) {
            path$$1 = normalizePath(path$$1);
            assertRoot(this.root).chownSync(path$$1, true, uid, gid);
          };
          FS.prototype.chmod = function chmod(path$$1, mode, cb) {
            if (cb === void 0)
              cb = nopCb;
            var newCb = wrapCb(cb, 1);
            try {
              var numMode = normalizeMode(mode, -1);
              if (numMode < 0) {
                throw new ApiError(ErrorCode.EINVAL, "Invalid mode.");
              }
              assertRoot(this.root).chmod(normalizePath(path$$1), false, numMode, newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.chmodSync = function chmodSync(path$$1, mode) {
            var numMode = normalizeMode(mode, -1);
            if (numMode < 0) {
              throw new ApiError(ErrorCode.EINVAL, "Invalid mode.");
            }
            path$$1 = normalizePath(path$$1);
            assertRoot(this.root).chmodSync(path$$1, false, numMode);
          };
          FS.prototype.lchmod = function lchmod(path$$1, mode, cb) {
            if (cb === void 0)
              cb = nopCb;
            var newCb = wrapCb(cb, 1);
            try {
              var numMode = normalizeMode(mode, -1);
              if (numMode < 0) {
                throw new ApiError(ErrorCode.EINVAL, "Invalid mode.");
              }
              assertRoot(this.root).chmod(normalizePath(path$$1), true, numMode, newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.lchmodSync = function lchmodSync(path$$1, mode) {
            var numMode = normalizeMode(mode, -1);
            if (numMode < 1) {
              throw new ApiError(ErrorCode.EINVAL, "Invalid mode.");
            }
            assertRoot(this.root).chmodSync(normalizePath(path$$1), true, numMode);
          };
          FS.prototype.utimes = function utimes(path$$1, atime, mtime, cb) {
            if (cb === void 0)
              cb = nopCb;
            var newCb = wrapCb(cb, 1);
            try {
              assertRoot(this.root).utimes(normalizePath(path$$1), normalizeTime(atime), normalizeTime(mtime), newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.utimesSync = function utimesSync(path$$1, atime, mtime) {
            assertRoot(this.root).utimesSync(normalizePath(path$$1), normalizeTime(atime), normalizeTime(mtime));
          };
          FS.prototype.realpath = function realpath(path$$1, arg2, cb) {
            if (cb === void 0)
              cb = nopCb;
            var cache = typeof arg2 === "object" ? arg2 : {};
            cb = typeof arg2 === "function" ? arg2 : nopCb;
            var newCb = wrapCb(cb, 2);
            try {
              path$$1 = normalizePath(path$$1);
              assertRoot(this.root).realpath(path$$1, cache, newCb);
            } catch (e) {
              newCb(e);
            }
          };
          FS.prototype.realpathSync = function realpathSync(path$$1, cache) {
            if (cache === void 0)
              cache = {};
            path$$1 = normalizePath(path$$1);
            return assertRoot(this.root).realpathSync(path$$1, cache);
          };
          FS.prototype.watchFile = function watchFile(filename, arg2, listener) {
            if (listener === void 0)
              listener = nopCb;
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          FS.prototype.unwatchFile = function unwatchFile(filename, listener) {
            if (listener === void 0)
              listener = nopCb;
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          FS.prototype.watch = function watch(filename, arg2, listener) {
            if (listener === void 0)
              listener = nopCb;
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          FS.prototype.access = function access(path$$1, arg2, cb) {
            if (cb === void 0)
              cb = nopCb;
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          FS.prototype.accessSync = function accessSync(path$$1, mode) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          FS.prototype.createReadStream = function createReadStream(path$$1, options) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          FS.prototype.createWriteStream = function createWriteStream(path$$1, options) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          FS.prototype.wrapCallbacks = function wrapCallbacks(cbWrapper) {
            wrapCb = cbWrapper;
          };
          FS.prototype.getFdForFile = function getFdForFile(file) {
            var fd = this.nextFd++;
            this.fdMap[fd] = file;
            return fd;
          };
          FS.prototype.fd2file = function fd2file(fd) {
            var rv = this.fdMap[fd];
            if (rv) {
              return rv;
            } else {
              throw new ApiError(ErrorCode.EBADF, "Invalid file descriptor.");
            }
          };
          FS.prototype.closeFd = function closeFd(fd) {
            delete this.fdMap[fd];
          };
          FS.Stats = Stats;
          var fs3 = new FS();
          var _fsMock = {};
          var fsProto = FS.prototype;
          Object.keys(fsProto).forEach(function(key) {
            if (typeof fs3[key] === "function") {
              _fsMock[key] = function() {
                return fs3[key].apply(fs3, arguments);
              };
            } else {
              _fsMock[key] = fs3[key];
            }
          });
          _fsMock["changeFSModule"] = function(newFs) {
            fs3 = newFs;
          };
          _fsMock["getFSModule"] = function() {
            return fs3;
          };
          _fsMock["FS"] = FS;
          function _min(d0, d1, d2, bx, ay) {
            return d0 < d1 || d2 < d1 ? d0 > d2 ? d2 + 1 : d0 + 1 : bx === ay ? d1 : d1 + 1;
          }
          function levenshtein(a, b2) {
            if (a === b2) {
              return 0;
            }
            if (a.length > b2.length) {
              var tmp = a;
              a = b2;
              b2 = tmp;
            }
            var la = a.length;
            var lb = b2.length;
            while (la > 0 && a.charCodeAt(la - 1) === b2.charCodeAt(lb - 1)) {
              la--;
              lb--;
            }
            var offset = 0;
            while (offset < la && a.charCodeAt(offset) === b2.charCodeAt(offset)) {
              offset++;
            }
            la -= offset;
            lb -= offset;
            if (la === 0 || lb === 1) {
              return lb;
            }
            var vector = new Array(la << 1);
            for (var y4 = 0; y4 < la; ) {
              vector[la + y4] = a.charCodeAt(offset + y4);
              vector[y4] = ++y4;
            }
            var x3;
            var d0;
            var d1;
            var d2;
            var d3;
            for (x3 = 0; x3 + 3 < lb; ) {
              var bx0 = b2.charCodeAt(offset + (d0 = x3));
              var bx1 = b2.charCodeAt(offset + (d1 = x3 + 1));
              var bx2 = b2.charCodeAt(offset + (d2 = x3 + 2));
              var bx3 = b2.charCodeAt(offset + (d3 = x3 + 3));
              var dd$1 = x3 += 4;
              for (var y$1 = 0; y$1 < la; ) {
                var ay = vector[la + y$1];
                var dy = vector[y$1];
                d0 = _min(dy, d0, d1, bx0, ay);
                d1 = _min(d0, d1, d2, bx1, ay);
                d2 = _min(d1, d2, d3, bx2, ay);
                dd$1 = _min(d2, d3, dd$1, bx3, ay);
                vector[y$1++] = dd$1;
                d3 = d2;
                d2 = d1;
                d1 = d0;
                d0 = dy;
              }
            }
            var dd = 0;
            for (; x3 < lb; ) {
              var bx0$1 = b2.charCodeAt(offset + (d0 = x3));
              dd = ++x3;
              for (var y$2 = 0; y$2 < la; y$2++) {
                var dy$1 = vector[y$2];
                vector[y$2] = dd = dy$1 < d0 || dd < d0 ? dy$1 > dd ? dd + 1 : dy$1 + 1 : bx0$1 === vector[la + y$2] ? d0 : d0 + 1;
                d0 = dy$1;
              }
            }
            return dd;
          }
          function deprecationMessage(print, fsName, opts) {
            if (print) {
              console.warn("[" + fsName + "] Direct file system constructor usage is deprecated for this file system, and will be removed in the next major version. Please use the '" + fsName + ".Create(" + JSON.stringify(opts) + ", callback)' method instead. See https://github.com/jvilk/BrowserFS/issues/176 for more details.");
            }
          }
          var isIE = typeof navigator !== "undefined" && !!(/(msie) ([\w.]+)/.exec(navigator.userAgent.toLowerCase()) || navigator.userAgent.indexOf("Trident") !== -1);
          var isWebWorker = typeof window === "undefined";
          function fail() {
            throw new Error("BFS has reached an impossible code path; please file a bug.");
          }
          function mkdirpSync(p, mode, fs4) {
            if (!fs4.existsSync(p)) {
              mkdirpSync(path.dirname(p), mode, fs4);
              fs4.mkdirSync(p, mode);
            }
          }
          function buffer2ArrayBuffer(buff) {
            var u8 = buffer2Uint8array(buff), u8offset = u8.byteOffset, u8Len = u8.byteLength;
            if (u8offset === 0 && u8Len === u8.buffer.byteLength) {
              return u8.buffer;
            } else {
              return u8.buffer.slice(u8offset, u8offset + u8Len);
            }
          }
          function buffer2Uint8array(buff) {
            if (buff instanceof Uint8Array) {
              return buff;
            } else {
              return new Uint8Array(buff);
            }
          }
          function arrayish2Buffer(arr) {
            if (arr instanceof Buffer2) {
              return arr;
            } else if (arr instanceof Uint8Array) {
              return uint8Array2Buffer(arr);
            } else {
              return Buffer2.from(arr);
            }
          }
          function uint8Array2Buffer(u8) {
            if (u8 instanceof Buffer2) {
              return u8;
            } else if (u8.byteOffset === 0 && u8.byteLength === u8.buffer.byteLength) {
              return arrayBuffer2Buffer(u8.buffer);
            } else {
              return Buffer2.from(u8.buffer, u8.byteOffset, u8.byteLength);
            }
          }
          function arrayBuffer2Buffer(ab) {
            return Buffer2.from(ab);
          }
          function copyingSlice(buff, start, end) {
            if (start === void 0)
              start = 0;
            if (end === void 0)
              end = buff.length;
            if (start < 0 || end < 0 || end > buff.length || start > end) {
              throw new TypeError("Invalid slice bounds on buffer of length " + buff.length + ": [" + start + ", " + end + "]");
            }
            if (buff.length === 0) {
              return emptyBuffer();
            } else {
              var u8 = buffer2Uint8array(buff), s0 = buff[0], newS0 = (s0 + 1) % 255;
              buff[0] = newS0;
              if (u8[0] === newS0) {
                u8[0] = s0;
                return uint8Array2Buffer(u8.slice(start, end));
              } else {
                buff[0] = s0;
                return uint8Array2Buffer(u8.subarray(start, end));
              }
            }
          }
          var emptyBuff = null;
          function emptyBuffer() {
            if (emptyBuff) {
              return emptyBuff;
            }
            return emptyBuff = Buffer2.alloc(0);
          }
          function bufferValidator(v2, cb) {
            if (Buffer2.isBuffer(v2)) {
              cb();
            } else {
              cb(new ApiError(ErrorCode.EINVAL, "option must be a Buffer."));
            }
          }
          function checkOptions(fsType, opts, cb) {
            var optsInfo = fsType.Options;
            var fsName = fsType.Name;
            var pendingValidators = 0;
            var callbackCalled = false;
            var loopEnded = false;
            function validatorCallback(e) {
              if (!callbackCalled) {
                if (e) {
                  callbackCalled = true;
                  cb(e);
                }
                pendingValidators--;
                if (pendingValidators === 0 && loopEnded) {
                  cb();
                }
              }
            }
            var loop3 = function(optName2) {
              if (optsInfo.hasOwnProperty(optName2)) {
                var opt = optsInfo[optName2];
                var providedValue = opts[optName2];
                if (providedValue === void 0 || providedValue === null) {
                  if (!opt.optional) {
                    var incorrectOptions = Object.keys(opts).filter(function(o) {
                      return !(o in optsInfo);
                    }).map(function(a) {
                      return { str: a, distance: levenshtein(optName2, a) };
                    }).filter(function(o) {
                      return o.distance < 5;
                    }).sort(function(a, b2) {
                      return a.distance - b2.distance;
                    });
                    if (callbackCalled) {
                      return {};
                    }
                    callbackCalled = true;
                    return { v: cb(new ApiError(ErrorCode.EINVAL, "[" + fsName + "] Required option '" + optName2 + "' not provided." + (incorrectOptions.length > 0 ? " You provided unrecognized option '" + incorrectOptions[0].str + "'; perhaps you meant to type '" + optName2 + "'." : "") + "\nOption description: " + opt.description)) };
                  }
                } else {
                  var typeMatches = false;
                  if (Array.isArray(opt.type)) {
                    typeMatches = opt.type.indexOf(typeof providedValue) !== -1;
                  } else {
                    typeMatches = typeof providedValue === opt.type;
                  }
                  if (!typeMatches) {
                    if (callbackCalled) {
                      return {};
                    }
                    callbackCalled = true;
                    return { v: cb(new ApiError(ErrorCode.EINVAL, "[" + fsName + "] Value provided for option " + optName2 + " is not the proper type. Expected " + (Array.isArray(opt.type) ? "one of {" + opt.type.join(", ") + "}" : opt.type) + ", but received " + typeof providedValue + "\nOption description: " + opt.description)) };
                  } else if (opt.validator) {
                    pendingValidators++;
                    opt.validator(providedValue, validatorCallback);
                  }
                }
              }
            };
            for (var optName in optsInfo) {
              var returned = loop3(optName);
              if (returned)
                return returned.v;
            }
            loopEnded = true;
            if (pendingValidators === 0 && !callbackCalled) {
              cb();
            }
          }
          var BFSUtils = Object.freeze({ deprecationMessage, isIE, isWebWorker, fail, mkdirpSync, buffer2ArrayBuffer, buffer2Uint8array, arrayish2Buffer, uint8Array2Buffer, arrayBuffer2Buffer, copyingSlice, emptyBuffer, bufferValidator, checkOptions });
          var BFSEmscriptenStreamOps = function BFSEmscriptenStreamOps2(fs4) {
            this.fs = fs4;
            this.nodefs = fs4.getNodeFS();
            this.FS = fs4.getFS();
            this.PATH = fs4.getPATH();
            this.ERRNO_CODES = fs4.getERRNO_CODES();
          };
          BFSEmscriptenStreamOps.prototype.open = function open(stream) {
            var path$$1 = this.fs.realPath(stream.node);
            var FS2 = this.FS;
            try {
              if (FS2.isFile(stream.node.mode)) {
                stream.nfd = this.nodefs.openSync(path$$1, this.fs.flagsToPermissionString(stream.flags));
              }
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new FS2.ErrnoError(this.ERRNO_CODES[e.code]);
            }
          };
          BFSEmscriptenStreamOps.prototype.close = function close(stream) {
            var FS2 = this.FS;
            try {
              if (FS2.isFile(stream.node.mode) && stream.nfd) {
                this.nodefs.closeSync(stream.nfd);
              }
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new FS2.ErrnoError(this.ERRNO_CODES[e.code]);
            }
          };
          BFSEmscriptenStreamOps.prototype.read = function read(stream, buffer$$1, offset, length, position) {
            try {
              return this.nodefs.readSync(stream.nfd, uint8Array2Buffer(buffer$$1), offset, length, position);
            } catch (e) {
              throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);
            }
          };
          BFSEmscriptenStreamOps.prototype.write = function write(stream, buffer$$1, offset, length, position) {
            try {
              return this.nodefs.writeSync(stream.nfd, uint8Array2Buffer(buffer$$1), offset, length, position);
            } catch (e) {
              throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);
            }
          };
          BFSEmscriptenStreamOps.prototype.llseek = function llseek(stream, offset, whence) {
            var position = offset;
            if (whence === 1) {
              position += stream.position;
            } else if (whence === 2) {
              if (this.FS.isFile(stream.node.mode)) {
                try {
                  var stat = this.nodefs.fstatSync(stream.nfd);
                  position += stat.size;
                } catch (e) {
                  throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);
                }
              }
            }
            if (position < 0) {
              throw new this.FS.ErrnoError(this.ERRNO_CODES.EINVAL);
            }
            stream.position = position;
            return position;
          };
          var BFSEmscriptenNodeOps = function BFSEmscriptenNodeOps2(fs4) {
            this.fs = fs4;
            this.nodefs = fs4.getNodeFS();
            this.FS = fs4.getFS();
            this.PATH = fs4.getPATH();
            this.ERRNO_CODES = fs4.getERRNO_CODES();
          };
          BFSEmscriptenNodeOps.prototype.getattr = function getattr(node) {
            var path$$1 = this.fs.realPath(node);
            var stat;
            try {
              stat = this.nodefs.lstatSync(path$$1);
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);
            }
            return { dev: stat.dev, ino: stat.ino, mode: stat.mode, nlink: stat.nlink, uid: stat.uid, gid: stat.gid, rdev: stat.rdev, size: stat.size, atime: stat.atime, mtime: stat.mtime, ctime: stat.ctime, blksize: stat.blksize, blocks: stat.blocks };
          };
          BFSEmscriptenNodeOps.prototype.setattr = function setattr(node, attr) {
            var path$$1 = this.fs.realPath(node);
            try {
              if (attr.mode !== void 0) {
                this.nodefs.chmodSync(path$$1, attr.mode);
                node.mode = attr.mode;
              }
              if (attr.timestamp !== void 0) {
                var date = new Date(attr.timestamp);
                this.nodefs.utimesSync(path$$1, date, date);
              }
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              if (e.code !== "ENOTSUP") {
                throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);
              }
            }
            if (attr.size !== void 0) {
              try {
                this.nodefs.truncateSync(path$$1, attr.size);
              } catch (e) {
                if (!e.code) {
                  throw e;
                }
                throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);
              }
            }
          };
          BFSEmscriptenNodeOps.prototype.lookup = function lookup(parent, name3) {
            var path$$1 = this.PATH.join2(this.fs.realPath(parent), name3);
            var mode = this.fs.getMode(path$$1);
            return this.fs.createNode(parent, name3, mode);
          };
          BFSEmscriptenNodeOps.prototype.mknod = function mknod(parent, name3, mode, dev) {
            var node = this.fs.createNode(parent, name3, mode, dev);
            var path$$1 = this.fs.realPath(node);
            try {
              if (this.FS.isDir(node.mode)) {
                this.nodefs.mkdirSync(path$$1, node.mode);
              } else {
                this.nodefs.writeFileSync(path$$1, "", { mode: node.mode });
              }
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);
            }
            return node;
          };
          BFSEmscriptenNodeOps.prototype.rename = function rename(oldNode, newDir, newName) {
            var oldPath = this.fs.realPath(oldNode);
            var newPath = this.PATH.join2(this.fs.realPath(newDir), newName);
            try {
              this.nodefs.renameSync(oldPath, newPath);
              oldNode.name = newName;
              oldNode.parent = newDir;
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);
            }
          };
          BFSEmscriptenNodeOps.prototype.unlink = function unlink(parent, name3) {
            var path$$1 = this.PATH.join2(this.fs.realPath(parent), name3);
            try {
              this.nodefs.unlinkSync(path$$1);
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);
            }
          };
          BFSEmscriptenNodeOps.prototype.rmdir = function rmdir(parent, name3) {
            var path$$1 = this.PATH.join2(this.fs.realPath(parent), name3);
            try {
              this.nodefs.rmdirSync(path$$1);
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);
            }
          };
          BFSEmscriptenNodeOps.prototype.readdir = function readdir(node) {
            var path$$1 = this.fs.realPath(node);
            try {
              var contents = this.nodefs.readdirSync(path$$1);
              contents.push(".", "..");
              return contents;
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);
            }
          };
          BFSEmscriptenNodeOps.prototype.symlink = function symlink(parent, newName, oldPath) {
            var newPath = this.PATH.join2(this.fs.realPath(parent), newName);
            try {
              this.nodefs.symlinkSync(oldPath, newPath);
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);
            }
          };
          BFSEmscriptenNodeOps.prototype.readlink = function readlink(node) {
            var path$$1 = this.fs.realPath(node);
            try {
              return this.nodefs.readlinkSync(path$$1);
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);
            }
          };
          var BFSEmscriptenFS = function BFSEmscriptenFS2(_FS, _PATH, _ERRNO_CODES, nodefs) {
            if (_FS === void 0)
              _FS = self["FS"];
            if (_PATH === void 0)
              _PATH = self["PATH"];
            if (_ERRNO_CODES === void 0)
              _ERRNO_CODES = self["ERRNO_CODES"];
            if (nodefs === void 0)
              nodefs = _fsMock;
            this.flagsToPermissionStringMap = { 0: "r", 1: "r+", 2: "r+", 64: "r", 65: "r+", 66: "r+", 129: "rx+", 193: "rx+", 514: "w+", 577: "w", 578: "w+", 705: "wx", 706: "wx+", 1024: "a", 1025: "a", 1026: "a+", 1089: "a", 1090: "a+", 1153: "ax", 1154: "ax+", 1217: "ax", 1218: "ax+", 4096: "rs", 4098: "rs+" };
            this.nodefs = nodefs;
            this.FS = _FS;
            this.PATH = _PATH;
            this.ERRNO_CODES = _ERRNO_CODES;
            this.node_ops = new BFSEmscriptenNodeOps(this);
            this.stream_ops = new BFSEmscriptenStreamOps(this);
          };
          BFSEmscriptenFS.prototype.mount = function mount(m) {
            return this.createNode(null, "/", this.getMode(m.opts.root), 0);
          };
          BFSEmscriptenFS.prototype.createNode = function createNode(parent, name3, mode, dev) {
            var FS2 = this.FS;
            if (!FS2.isDir(mode) && !FS2.isFile(mode) && !FS2.isLink(mode)) {
              throw new FS2.ErrnoError(this.ERRNO_CODES.EINVAL);
            }
            var node = FS2.createNode(parent, name3, mode);
            node.node_ops = this.node_ops;
            node.stream_ops = this.stream_ops;
            return node;
          };
          BFSEmscriptenFS.prototype.getMode = function getMode(path$$1) {
            var stat;
            try {
              stat = this.nodefs.lstatSync(path$$1);
            } catch (e) {
              if (!e.code) {
                throw e;
              }
              throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);
            }
            return stat.mode;
          };
          BFSEmscriptenFS.prototype.realPath = function realPath(node) {
            var parts = [];
            while (node.parent !== node) {
              parts.push(node.name);
              node = node.parent;
            }
            parts.push(node.mount.opts.root);
            parts.reverse();
            return this.PATH.join.apply(null, parts);
          };
          BFSEmscriptenFS.prototype.flagsToPermissionString = function flagsToPermissionString(flags) {
            var parsedFlags = typeof flags === "string" ? parseInt(flags, 10) : flags;
            parsedFlags &= 8191;
            if (parsedFlags in this.flagsToPermissionStringMap) {
              return this.flagsToPermissionStringMap[parsedFlags];
            } else {
              return flags;
            }
          };
          BFSEmscriptenFS.prototype.getNodeFS = function getNodeFS() {
            return this.nodefs;
          };
          BFSEmscriptenFS.prototype.getFS = function getFS() {
            return this.FS;
          };
          BFSEmscriptenFS.prototype.getPATH = function getPATH() {
            return this.PATH;
          };
          BFSEmscriptenFS.prototype.getERRNO_CODES = function getERRNO_CODES() {
            return this.ERRNO_CODES;
          };
          var BaseFileSystem = function BaseFileSystem2() {
          };
          BaseFileSystem.prototype.supportsLinks = function supportsLinks() {
            return false;
          };
          BaseFileSystem.prototype.diskSpace = function diskSpace(p, cb) {
            cb(0, 0);
          };
          BaseFileSystem.prototype.openFile = function openFile(p, flag, cb) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          BaseFileSystem.prototype.createFile = function createFile(p, flag, mode, cb) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          BaseFileSystem.prototype.open = function open(p, flag, mode, cb) {
            var this$1 = this;
            var mustBeFile = function(e, stats) {
              if (e) {
                switch (flag.pathNotExistsAction()) {
                  case ActionType.CREATE_FILE:
                    return this$1.stat(path.dirname(p), false, function(e2, parentStats) {
                      if (e2) {
                        cb(e2);
                      } else if (parentStats && !parentStats.isDirectory()) {
                        cb(ApiError.ENOTDIR(path.dirname(p)));
                      } else {
                        this$1.createFile(p, flag, mode, cb);
                      }
                    });
                  case ActionType.THROW_EXCEPTION:
                    return cb(ApiError.ENOENT(p));
                  default:
                    return cb(new ApiError(ErrorCode.EINVAL, "Invalid FileFlag object."));
                }
              } else {
                if (stats && stats.isDirectory()) {
                  return cb(ApiError.EISDIR(p));
                }
                switch (flag.pathExistsAction()) {
                  case ActionType.THROW_EXCEPTION:
                    return cb(ApiError.EEXIST(p));
                  case ActionType.TRUNCATE_FILE:
                    return this$1.openFile(p, flag, function(e2, fd) {
                      if (e2) {
                        cb(e2);
                      } else if (fd) {
                        fd.truncate(0, function() {
                          fd.sync(function() {
                            cb(null, fd);
                          });
                        });
                      } else {
                        fail();
                      }
                    });
                  case ActionType.NOP:
                    return this$1.openFile(p, flag, cb);
                  default:
                    return cb(new ApiError(ErrorCode.EINVAL, "Invalid FileFlag object."));
                }
              }
            };
            this.stat(p, false, mustBeFile);
          };
          BaseFileSystem.prototype.rename = function rename(oldPath, newPath, cb) {
            cb(new ApiError(ErrorCode.ENOTSUP));
          };
          BaseFileSystem.prototype.renameSync = function renameSync(oldPath, newPath) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          BaseFileSystem.prototype.stat = function stat(p, isLstat, cb) {
            cb(new ApiError(ErrorCode.ENOTSUP));
          };
          BaseFileSystem.prototype.statSync = function statSync(p, isLstat) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          BaseFileSystem.prototype.openFileSync = function openFileSync(p, flag, mode) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          BaseFileSystem.prototype.createFileSync = function createFileSync(p, flag, mode) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          BaseFileSystem.prototype.openSync = function openSync(p, flag, mode) {
            var stats;
            try {
              stats = this.statSync(p, false);
            } catch (e) {
              switch (flag.pathNotExistsAction()) {
                case ActionType.CREATE_FILE:
                  var parentStats = this.statSync(path.dirname(p), false);
                  if (!parentStats.isDirectory()) {
                    throw ApiError.ENOTDIR(path.dirname(p));
                  }
                  return this.createFileSync(p, flag, mode);
                case ActionType.THROW_EXCEPTION:
                  throw ApiError.ENOENT(p);
                default:
                  throw new ApiError(ErrorCode.EINVAL, "Invalid FileFlag object.");
              }
            }
            if (stats.isDirectory()) {
              throw ApiError.EISDIR(p);
            }
            switch (flag.pathExistsAction()) {
              case ActionType.THROW_EXCEPTION:
                throw ApiError.EEXIST(p);
              case ActionType.TRUNCATE_FILE:
                this.unlinkSync(p);
                return this.createFileSync(p, flag, stats.mode);
              case ActionType.NOP:
                return this.openFileSync(p, flag, mode);
              default:
                throw new ApiError(ErrorCode.EINVAL, "Invalid FileFlag object.");
            }
          };
          BaseFileSystem.prototype.unlink = function unlink(p, cb) {
            cb(new ApiError(ErrorCode.ENOTSUP));
          };
          BaseFileSystem.prototype.unlinkSync = function unlinkSync(p) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          BaseFileSystem.prototype.rmdir = function rmdir(p, cb) {
            cb(new ApiError(ErrorCode.ENOTSUP));
          };
          BaseFileSystem.prototype.rmdirSync = function rmdirSync(p) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          BaseFileSystem.prototype.mkdir = function mkdir(p, mode, cb) {
            cb(new ApiError(ErrorCode.ENOTSUP));
          };
          BaseFileSystem.prototype.mkdirSync = function mkdirSync(p, mode) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          BaseFileSystem.prototype.readdir = function readdir(p, cb) {
            cb(new ApiError(ErrorCode.ENOTSUP));
          };
          BaseFileSystem.prototype.readdirSync = function readdirSync(p) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          BaseFileSystem.prototype.exists = function exists2(p, cb) {
            this.stat(p, null, function(err) {
              cb(!err);
            });
          };
          BaseFileSystem.prototype.existsSync = function existsSync(p) {
            try {
              this.statSync(p, true);
              return true;
            } catch (e) {
              return false;
            }
          };
          BaseFileSystem.prototype.realpath = function realpath(p, cache, cb) {
            if (this.supportsLinks()) {
              var splitPath = p.split(path.sep);
              for (var i2 = 0; i2 < splitPath.length; i2++) {
                var addPaths = splitPath.slice(0, i2 + 1);
                splitPath[i2] = path.join.apply(null, addPaths);
              }
            } else {
              this.exists(p, function(doesExist) {
                if (doesExist) {
                  cb(null, p);
                } else {
                  cb(ApiError.ENOENT(p));
                }
              });
            }
          };
          BaseFileSystem.prototype.realpathSync = function realpathSync(p, cache) {
            if (this.supportsLinks()) {
              var splitPath = p.split(path.sep);
              for (var i2 = 0; i2 < splitPath.length; i2++) {
                var addPaths = splitPath.slice(0, i2 + 1);
                splitPath[i2] = path.join.apply(path, addPaths);
              }
              return splitPath.join(path.sep);
            } else {
              if (this.existsSync(p)) {
                return p;
              } else {
                throw ApiError.ENOENT(p);
              }
            }
          };
          BaseFileSystem.prototype.truncate = function truncate(p, len, cb) {
            this.open(p, FileFlag.getFileFlag("r+"), 420, function(er, fd) {
              if (er) {
                return cb(er);
              }
              fd.truncate(len, function(er2) {
                fd.close(function(er22) {
                  cb(er2 || er22);
                });
              });
            });
          };
          BaseFileSystem.prototype.truncateSync = function truncateSync(p, len) {
            var fd = this.openSync(p, FileFlag.getFileFlag("r+"), 420);
            try {
              fd.truncateSync(len);
            } catch (e) {
              throw e;
            } finally {
              fd.closeSync();
            }
          };
          BaseFileSystem.prototype.readFile = function readFile2(fname, encoding, flag, cb) {
            var oldCb = cb;
            this.open(fname, flag, 420, function(err, fd) {
              if (err) {
                return cb(err);
              }
              cb = function(err2, arg) {
                fd.close(function(err22) {
                  if (!err2) {
                    err2 = err22;
                  }
                  return oldCb(err2, arg);
                });
              };
              fd.stat(function(err2, stat) {
                if (err2) {
                  return cb(err2);
                }
                var buf = Buffer2.alloc(stat.size);
                fd.read(buf, 0, stat.size, 0, function(err3) {
                  if (err3) {
                    return cb(err3);
                  } else if (encoding === null) {
                    return cb(err3, buf);
                  }
                  try {
                    cb(null, buf.toString(encoding));
                  } catch (e) {
                    cb(e);
                  }
                });
              });
            });
          };
          BaseFileSystem.prototype.readFileSync = function readFileSync(fname, encoding, flag) {
            var fd = this.openSync(fname, flag, 420);
            try {
              var stat = fd.statSync();
              var buf = Buffer2.alloc(stat.size);
              fd.readSync(buf, 0, stat.size, 0);
              fd.closeSync();
              if (encoding === null) {
                return buf;
              }
              return buf.toString(encoding);
            } finally {
              fd.closeSync();
            }
          };
          BaseFileSystem.prototype.writeFile = function writeFile2(fname, data, encoding, flag, mode, cb) {
            var oldCb = cb;
            this.open(fname, flag, 420, function(err, fd) {
              if (err) {
                return cb(err);
              }
              cb = function(err2) {
                fd.close(function(err22) {
                  oldCb(err2 ? err2 : err22);
                });
              };
              try {
                if (typeof data === "string") {
                  data = Buffer2.from(data, encoding);
                }
              } catch (e) {
                return cb(e);
              }
              fd.write(data, 0, data.length, 0, cb);
            });
          };
          BaseFileSystem.prototype.writeFileSync = function writeFileSync(fname, data, encoding, flag, mode) {
            var fd = this.openSync(fname, flag, mode);
            try {
              if (typeof data === "string") {
                data = Buffer2.from(data, encoding);
              }
              fd.writeSync(data, 0, data.length, 0);
            } finally {
              fd.closeSync();
            }
          };
          BaseFileSystem.prototype.appendFile = function appendFile3(fname, data, encoding, flag, mode, cb) {
            var oldCb = cb;
            this.open(fname, flag, mode, function(err, fd) {
              if (err) {
                return cb(err);
              }
              cb = function(err2) {
                fd.close(function(err22) {
                  oldCb(err2 ? err2 : err22);
                });
              };
              if (typeof data === "string") {
                data = Buffer2.from(data, encoding);
              }
              fd.write(data, 0, data.length, null, cb);
            });
          };
          BaseFileSystem.prototype.appendFileSync = function appendFileSync(fname, data, encoding, flag, mode) {
            var fd = this.openSync(fname, flag, mode);
            try {
              if (typeof data === "string") {
                data = Buffer2.from(data, encoding);
              }
              fd.writeSync(data, 0, data.length, null);
            } finally {
              fd.closeSync();
            }
          };
          BaseFileSystem.prototype.chmod = function chmod(p, isLchmod, mode, cb) {
            cb(new ApiError(ErrorCode.ENOTSUP));
          };
          BaseFileSystem.prototype.chmodSync = function chmodSync(p, isLchmod, mode) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          BaseFileSystem.prototype.chown = function chown(p, isLchown, uid, gid, cb) {
            cb(new ApiError(ErrorCode.ENOTSUP));
          };
          BaseFileSystem.prototype.chownSync = function chownSync(p, isLchown, uid, gid) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          BaseFileSystem.prototype.utimes = function utimes(p, atime, mtime, cb) {
            cb(new ApiError(ErrorCode.ENOTSUP));
          };
          BaseFileSystem.prototype.utimesSync = function utimesSync(p, atime, mtime) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          BaseFileSystem.prototype.link = function link(srcpath, dstpath, cb) {
            cb(new ApiError(ErrorCode.ENOTSUP));
          };
          BaseFileSystem.prototype.linkSync = function linkSync(srcpath, dstpath) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          BaseFileSystem.prototype.symlink = function symlink(srcpath, dstpath, type, cb) {
            cb(new ApiError(ErrorCode.ENOTSUP));
          };
          BaseFileSystem.prototype.symlinkSync = function symlinkSync(srcpath, dstpath, type) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          BaseFileSystem.prototype.readlink = function readlink(p, cb) {
            cb(new ApiError(ErrorCode.ENOTSUP));
          };
          BaseFileSystem.prototype.readlinkSync = function readlinkSync(p) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          var SynchronousFileSystem = function(BaseFileSystem2) {
            function SynchronousFileSystem2() {
              BaseFileSystem2.apply(this, arguments);
            }
            if (BaseFileSystem2)
              SynchronousFileSystem2.__proto__ = BaseFileSystem2;
            SynchronousFileSystem2.prototype = Object.create(BaseFileSystem2 && BaseFileSystem2.prototype);
            SynchronousFileSystem2.prototype.constructor = SynchronousFileSystem2;
            SynchronousFileSystem2.prototype.supportsSynch = function supportsSynch() {
              return true;
            };
            SynchronousFileSystem2.prototype.rename = function rename(oldPath, newPath, cb) {
              try {
                this.renameSync(oldPath, newPath);
                cb();
              } catch (e) {
                cb(e);
              }
            };
            SynchronousFileSystem2.prototype.stat = function stat(p, isLstat, cb) {
              try {
                cb(null, this.statSync(p, isLstat));
              } catch (e) {
                cb(e);
              }
            };
            SynchronousFileSystem2.prototype.open = function open(p, flags, mode, cb) {
              try {
                cb(null, this.openSync(p, flags, mode));
              } catch (e) {
                cb(e);
              }
            };
            SynchronousFileSystem2.prototype.unlink = function unlink(p, cb) {
              try {
                this.unlinkSync(p);
                cb();
              } catch (e) {
                cb(e);
              }
            };
            SynchronousFileSystem2.prototype.rmdir = function rmdir(p, cb) {
              try {
                this.rmdirSync(p);
                cb();
              } catch (e) {
                cb(e);
              }
            };
            SynchronousFileSystem2.prototype.mkdir = function mkdir(p, mode, cb) {
              try {
                this.mkdirSync(p, mode);
                cb();
              } catch (e) {
                cb(e);
              }
            };
            SynchronousFileSystem2.prototype.readdir = function readdir(p, cb) {
              try {
                cb(null, this.readdirSync(p));
              } catch (e) {
                cb(e);
              }
            };
            SynchronousFileSystem2.prototype.chmod = function chmod(p, isLchmod, mode, cb) {
              try {
                this.chmodSync(p, isLchmod, mode);
                cb();
              } catch (e) {
                cb(e);
              }
            };
            SynchronousFileSystem2.prototype.chown = function chown(p, isLchown, uid, gid, cb) {
              try {
                this.chownSync(p, isLchown, uid, gid);
                cb();
              } catch (e) {
                cb(e);
              }
            };
            SynchronousFileSystem2.prototype.utimes = function utimes(p, atime, mtime, cb) {
              try {
                this.utimesSync(p, atime, mtime);
                cb();
              } catch (e) {
                cb(e);
              }
            };
            SynchronousFileSystem2.prototype.link = function link(srcpath, dstpath, cb) {
              try {
                this.linkSync(srcpath, dstpath);
                cb();
              } catch (e) {
                cb(e);
              }
            };
            SynchronousFileSystem2.prototype.symlink = function symlink(srcpath, dstpath, type, cb) {
              try {
                this.symlinkSync(srcpath, dstpath, type);
                cb();
              } catch (e) {
                cb(e);
              }
            };
            SynchronousFileSystem2.prototype.readlink = function readlink(p, cb) {
              try {
                cb(null, this.readlinkSync(p));
              } catch (e) {
                cb(e);
              }
            };
            return SynchronousFileSystem2;
          }(BaseFileSystem);
          var BaseFile = function BaseFile2() {
          };
          BaseFile.prototype.sync = function sync(cb) {
            cb(new ApiError(ErrorCode.ENOTSUP));
          };
          BaseFile.prototype.syncSync = function syncSync() {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          BaseFile.prototype.datasync = function datasync(cb) {
            this.sync(cb);
          };
          BaseFile.prototype.datasyncSync = function datasyncSync() {
            return this.syncSync();
          };
          BaseFile.prototype.chown = function chown(uid, gid, cb) {
            cb(new ApiError(ErrorCode.ENOTSUP));
          };
          BaseFile.prototype.chownSync = function chownSync(uid, gid) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          BaseFile.prototype.chmod = function chmod(mode, cb) {
            cb(new ApiError(ErrorCode.ENOTSUP));
          };
          BaseFile.prototype.chmodSync = function chmodSync(mode) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          BaseFile.prototype.utimes = function utimes(atime, mtime, cb) {
            cb(new ApiError(ErrorCode.ENOTSUP));
          };
          BaseFile.prototype.utimesSync = function utimesSync(atime, mtime) {
            throw new ApiError(ErrorCode.ENOTSUP);
          };
          var PreloadFile = function(BaseFile$$1) {
            function PreloadFile2(_fs, _path, _flag, _stat, contents) {
              BaseFile$$1.call(this);
              this._pos = 0;
              this._dirty = false;
              this._fs = _fs;
              this._path = _path;
              this._flag = _flag;
              this._stat = _stat;
              if (contents) {
                this._buffer = contents;
              } else {
                this._buffer = emptyBuffer();
              }
              if (this._stat.size !== this._buffer.length && this._flag.isReadable()) {
                throw new Error("Invalid buffer: Buffer is " + this._buffer.length + " long, yet Stats object specifies that file is " + this._stat.size + " long.");
              }
            }
            if (BaseFile$$1)
              PreloadFile2.__proto__ = BaseFile$$1;
            PreloadFile2.prototype = Object.create(BaseFile$$1 && BaseFile$$1.prototype);
            PreloadFile2.prototype.constructor = PreloadFile2;
            PreloadFile2.prototype.getBuffer = function getBuffer() {
              return this._buffer;
            };
            PreloadFile2.prototype.getStats = function getStats() {
              return this._stat;
            };
            PreloadFile2.prototype.getFlag = function getFlag2() {
              return this._flag;
            };
            PreloadFile2.prototype.getPath = function getPath() {
              return this._path;
            };
            PreloadFile2.prototype.getPos = function getPos() {
              if (this._flag.isAppendable()) {
                return this._stat.size;
              }
              return this._pos;
            };
            PreloadFile2.prototype.advancePos = function advancePos(delta) {
              return this._pos += delta;
            };
            PreloadFile2.prototype.setPos = function setPos(newPos) {
              return this._pos = newPos;
            };
            PreloadFile2.prototype.sync = function sync(cb) {
              try {
                this.syncSync();
                cb();
              } catch (e) {
                cb(e);
              }
            };
            PreloadFile2.prototype.syncSync = function syncSync() {
              throw new ApiError(ErrorCode.ENOTSUP);
            };
            PreloadFile2.prototype.close = function close(cb) {
              try {
                this.closeSync();
                cb();
              } catch (e) {
                cb(e);
              }
            };
            PreloadFile2.prototype.closeSync = function closeSync() {
              throw new ApiError(ErrorCode.ENOTSUP);
            };
            PreloadFile2.prototype.stat = function stat(cb) {
              try {
                cb(null, this._stat.clone());
              } catch (e) {
                cb(e);
              }
            };
            PreloadFile2.prototype.statSync = function statSync() {
              return this._stat.clone();
            };
            PreloadFile2.prototype.truncate = function truncate(len, cb) {
              try {
                this.truncateSync(len);
                if (this._flag.isSynchronous() && !_fsMock.getRootFS().supportsSynch()) {
                  this.sync(cb);
                }
                cb();
              } catch (e) {
                return cb(e);
              }
            };
            PreloadFile2.prototype.truncateSync = function truncateSync(len) {
              this._dirty = true;
              if (!this._flag.isWriteable()) {
                throw new ApiError(ErrorCode.EPERM, "File not opened with a writeable mode.");
              }
              this._stat.mtime = new Date();
              if (len > this._buffer.length) {
                var buf = Buffer2.alloc(len - this._buffer.length, 0);
                this.writeSync(buf, 0, buf.length, this._buffer.length);
                if (this._flag.isSynchronous() && _fsMock.getRootFS().supportsSynch()) {
                  this.syncSync();
                }
                return;
              }
              this._stat.size = len;
              var newBuff = Buffer2.alloc(len);
              this._buffer.copy(newBuff, 0, 0, len);
              this._buffer = newBuff;
              if (this._flag.isSynchronous() && _fsMock.getRootFS().supportsSynch()) {
                this.syncSync();
              }
            };
            PreloadFile2.prototype.write = function write(buffer$$1, offset, length, position, cb) {
              try {
                cb(null, this.writeSync(buffer$$1, offset, length, position), buffer$$1);
              } catch (e) {
                cb(e);
              }
            };
            PreloadFile2.prototype.writeSync = function writeSync(buffer$$1, offset, length, position) {
              this._dirty = true;
              if (position === void 0 || position === null) {
                position = this.getPos();
              }
              if (!this._flag.isWriteable()) {
                throw new ApiError(ErrorCode.EPERM, "File not opened with a writeable mode.");
              }
              var endFp = position + length;
              if (endFp > this._stat.size) {
                this._stat.size = endFp;
                if (endFp > this._buffer.length) {
                  var newBuff = Buffer2.alloc(endFp);
                  this._buffer.copy(newBuff);
                  this._buffer = newBuff;
                }
              }
              var len = buffer$$1.copy(this._buffer, position, offset, offset + length);
              this._stat.mtime = new Date();
              if (this._flag.isSynchronous()) {
                this.syncSync();
                return len;
              }
              this.setPos(position + len);
              return len;
            };
            PreloadFile2.prototype.read = function read(buffer$$1, offset, length, position, cb) {
              try {
                cb(null, this.readSync(buffer$$1, offset, length, position), buffer$$1);
              } catch (e) {
                cb(e);
              }
            };
            PreloadFile2.prototype.readSync = function readSync(buffer$$1, offset, length, position) {
              if (!this._flag.isReadable()) {
                throw new ApiError(ErrorCode.EPERM, "File not opened with a readable mode.");
              }
              if (position === void 0 || position === null) {
                position = this.getPos();
              }
              var endRead = position + length;
              if (endRead > this._stat.size) {
                length = this._stat.size - position;
              }
              var rv = this._buffer.copy(buffer$$1, offset, position, position + length);
              this._stat.atime = new Date();
              this._pos = position + length;
              return rv;
            };
            PreloadFile2.prototype.chmod = function chmod(mode, cb) {
              try {
                this.chmodSync(mode);
                cb();
              } catch (e) {
                cb(e);
              }
            };
            PreloadFile2.prototype.chmodSync = function chmodSync(mode) {
              if (!this._fs.supportsProps()) {
                throw new ApiError(ErrorCode.ENOTSUP);
              }
              this._dirty = true;
              this._stat.chmod(mode);
              this.syncSync();
            };
            PreloadFile2.prototype.isDirty = function isDirty() {
              return this._dirty;
            };
            PreloadFile2.prototype.resetDirty = function resetDirty() {
              this._dirty = false;
            };
            return PreloadFile2;
          }(BaseFile);
          var NoSyncFile = function(PreloadFile2) {
            function NoSyncFile2(_fs, _path, _flag, _stat, contents) {
              PreloadFile2.call(this, _fs, _path, _flag, _stat, contents);
            }
            if (PreloadFile2)
              NoSyncFile2.__proto__ = PreloadFile2;
            NoSyncFile2.prototype = Object.create(PreloadFile2 && PreloadFile2.prototype);
            NoSyncFile2.prototype.constructor = NoSyncFile2;
            NoSyncFile2.prototype.sync = function sync(cb) {
              cb();
            };
            NoSyncFile2.prototype.syncSync = function syncSync() {
            };
            NoSyncFile2.prototype.close = function close(cb) {
              cb();
            };
            NoSyncFile2.prototype.closeSync = function closeSync() {
            };
            return NoSyncFile2;
          }(PreloadFile);
          var MirrorFile = function(PreloadFile$$1) {
            function MirrorFile2(fs4, path$$1, flag, stat, data) {
              PreloadFile$$1.call(this, fs4, path$$1, flag, stat, data);
            }
            if (PreloadFile$$1)
              MirrorFile2.__proto__ = PreloadFile$$1;
            MirrorFile2.prototype = Object.create(PreloadFile$$1 && PreloadFile$$1.prototype);
            MirrorFile2.prototype.constructor = MirrorFile2;
            MirrorFile2.prototype.syncSync = function syncSync() {
              if (this.isDirty()) {
                this._fs._syncSync(this);
                this.resetDirty();
              }
            };
            MirrorFile2.prototype.closeSync = function closeSync() {
              this.syncSync();
            };
            return MirrorFile2;
          }(PreloadFile);
          var AsyncMirror = function(SynchronousFileSystem$$1) {
            function AsyncMirror2(sync, async, deprecateMsg) {
              if (deprecateMsg === void 0)
                deprecateMsg = true;
              SynchronousFileSystem$$1.call(this);
              this._queue = [];
              this._queueRunning = false;
              this._isInitialized = false;
              this._initializeCallbacks = [];
              this._sync = sync;
              this._async = async;
              if (!sync.supportsSynch()) {
                throw new Error("The first argument to AsyncMirror needs to be a synchronous file system.");
              }
              deprecationMessage(deprecateMsg, AsyncMirror2.Name, { sync: "sync file system instance", async: "async file system instance" });
            }
            if (SynchronousFileSystem$$1)
              AsyncMirror2.__proto__ = SynchronousFileSystem$$1;
            AsyncMirror2.prototype = Object.create(SynchronousFileSystem$$1 && SynchronousFileSystem$$1.prototype);
            AsyncMirror2.prototype.constructor = AsyncMirror2;
            AsyncMirror2.Create = function Create(opts, cb) {
              try {
                var fs4 = new AsyncMirror2(opts.sync, opts.async, false);
                fs4.initialize(function(e) {
                  if (e) {
                    cb(e);
                  } else {
                    cb(null, fs4);
                  }
                }, false);
              } catch (e) {
                cb(e);
              }
            };
            AsyncMirror2.isAvailable = function isAvailable() {
              return true;
            };
            AsyncMirror2.prototype.getName = function getName() {
              return AsyncMirror2.Name;
            };
            AsyncMirror2.prototype._syncSync = function _syncSync(fd) {
              this._sync.writeFileSync(fd.getPath(), fd.getBuffer(), null, FileFlag.getFileFlag("w"), fd.getStats().mode);
              this.enqueueOp({ apiMethod: "writeFile", arguments: [fd.getPath(), fd.getBuffer(), null, fd.getFlag(), fd.getStats().mode] });
            };
            AsyncMirror2.prototype.initialize = function initialize3(userCb, deprecateMsg) {
              var this$1 = this;
              if (deprecateMsg === void 0)
                deprecateMsg = true;
              if (deprecateMsg) {
                console.warn("[AsyncMirror] AsyncMirror.initialize() is deprecated and will be removed in the next major version. Please use 'AsyncMirror.Create({ sync: (sync file system instance), async: (async file system instance)}, cb)' to create and initialize AsyncMirror instances.");
              }
              var callbacks = this._initializeCallbacks;
              var end = function(e) {
                this$1._isInitialized = !e;
                this$1._initializeCallbacks = [];
                callbacks.forEach(function(cb) {
                  return cb(e);
                });
              };
              if (!this._isInitialized) {
                if (callbacks.push(userCb) === 1) {
                  var copyDirectory = function(p, mode, cb) {
                    if (p !== "/") {
                      this$1._sync.mkdirSync(p, mode);
                    }
                    this$1._async.readdir(p, function(err, files) {
                      var i2 = 0;
                      function copyNextFile(err2) {
                        if (err2) {
                          cb(err2);
                        } else if (i2 < files.length) {
                          copyItem(path.join(p, files[i2]), copyNextFile);
                          i2++;
                        } else {
                          cb();
                        }
                      }
                      if (err) {
                        cb(err);
                      } else {
                        copyNextFile();
                      }
                    });
                  }, copyFile = function(p, mode, cb) {
                    this$1._async.readFile(p, null, FileFlag.getFileFlag("r"), function(err, data) {
                      if (err) {
                        cb(err);
                      } else {
                        try {
                          this$1._sync.writeFileSync(p, data, null, FileFlag.getFileFlag("w"), mode);
                        } catch (e) {
                          err = e;
                        } finally {
                          cb(err);
                        }
                      }
                    });
                  }, copyItem = function(p, cb) {
                    this$1._async.stat(p, false, function(err, stats) {
                      if (err) {
                        cb(err);
                      } else if (stats.isDirectory()) {
                        copyDirectory(p, stats.mode, cb);
                      } else {
                        copyFile(p, stats.mode, cb);
                      }
                    });
                  };
                  copyDirectory("/", 0, end);
                }
              } else {
                userCb();
              }
            };
            AsyncMirror2.prototype.isReadOnly = function isReadOnly() {
              return false;
            };
            AsyncMirror2.prototype.supportsSynch = function supportsSynch() {
              return true;
            };
            AsyncMirror2.prototype.supportsLinks = function supportsLinks() {
              return false;
            };
            AsyncMirror2.prototype.supportsProps = function supportsProps() {
              return this._sync.supportsProps() && this._async.supportsProps();
            };
            AsyncMirror2.prototype.renameSync = function renameSync(oldPath, newPath) {
              this.checkInitialized();
              this._sync.renameSync(oldPath, newPath);
              this.enqueueOp({ apiMethod: "rename", arguments: [oldPath, newPath] });
            };
            AsyncMirror2.prototype.statSync = function statSync(p, isLstat) {
              this.checkInitialized();
              return this._sync.statSync(p, isLstat);
            };
            AsyncMirror2.prototype.openSync = function openSync(p, flag, mode) {
              this.checkInitialized();
              var fd = this._sync.openSync(p, flag, mode);
              fd.closeSync();
              return new MirrorFile(this, p, flag, this._sync.statSync(p, false), this._sync.readFileSync(p, null, FileFlag.getFileFlag("r")));
            };
            AsyncMirror2.prototype.unlinkSync = function unlinkSync(p) {
              this.checkInitialized();
              this._sync.unlinkSync(p);
              this.enqueueOp({ apiMethod: "unlink", arguments: [p] });
            };
            AsyncMirror2.prototype.rmdirSync = function rmdirSync(p) {
              this.checkInitialized();
              this._sync.rmdirSync(p);
              this.enqueueOp({ apiMethod: "rmdir", arguments: [p] });
            };
            AsyncMirror2.prototype.mkdirSync = function mkdirSync(p, mode) {
              this.checkInitialized();
              this._sync.mkdirSync(p, mode);
              this.enqueueOp({ apiMethod: "mkdir", arguments: [p, mode] });
            };
            AsyncMirror2.prototype.readdirSync = function readdirSync(p) {
              this.checkInitialized();
              return this._sync.readdirSync(p);
            };
            AsyncMirror2.prototype.existsSync = function existsSync(p) {
              this.checkInitialized();
              return this._sync.existsSync(p);
            };
            AsyncMirror2.prototype.chmodSync = function chmodSync(p, isLchmod, mode) {
              this.checkInitialized();
              this._sync.chmodSync(p, isLchmod, mode);
              this.enqueueOp({ apiMethod: "chmod", arguments: [p, isLchmod, mode] });
            };
            AsyncMirror2.prototype.chownSync = function chownSync(p, isLchown, uid, gid) {
              this.checkInitialized();
              this._sync.chownSync(p, isLchown, uid, gid);
              this.enqueueOp({ apiMethod: "chown", arguments: [p, isLchown, uid, gid] });
            };
            AsyncMirror2.prototype.utimesSync = function utimesSync(p, atime, mtime) {
              this.checkInitialized();
              this._sync.utimesSync(p, atime, mtime);
              this.enqueueOp({ apiMethod: "utimes", arguments: [p, atime, mtime] });
            };
            AsyncMirror2.prototype.checkInitialized = function checkInitialized() {
              if (!this._isInitialized) {
                throw new ApiError(ErrorCode.EPERM, "AsyncMirrorFS is not initialized. Please initialize AsyncMirrorFS using its initialize() method before using it.");
              }
            };
            AsyncMirror2.prototype.enqueueOp = function enqueueOp(op) {
              var this$1 = this;
              this._queue.push(op);
              if (!this._queueRunning) {
                this._queueRunning = true;
                var doNextOp = function(err) {
                  if (err) {
                    console.error("WARNING: File system has desynchronized. Received following error: " + err + "\n$");
                  }
                  if (this$1._queue.length > 0) {
                    var op2 = this$1._queue.shift(), args = op2.arguments;
                    args.push(doNextOp);
                    this$1._async[op2.apiMethod].apply(this$1._async, args);
                  } else {
                    this$1._queueRunning = false;
                  }
                };
                doNextOp();
              }
            };
            return AsyncMirror2;
          }(SynchronousFileSystem);
          AsyncMirror.Name = "AsyncMirror";
          AsyncMirror.Options = { sync: { type: "object", description: "The synchronous file system to mirror the asynchronous file system to." }, async: { type: "object", description: "The asynchronous file system to mirror." } };
          function apply(func, thisArg, args) {
            switch (args.length) {
              case 0:
                return func.call(thisArg);
              case 1:
                return func.call(thisArg, args[0]);
              case 2:
                return func.call(thisArg, args[0], args[1]);
              case 3:
                return func.call(thisArg, args[0], args[1], args[2]);
            }
            return func.apply(thisArg, args);
          }
          var nativeMax = Math.max;
          function overRest$1(func, start, transform) {
            start = nativeMax(start === void 0 ? func.length - 1 : start, 0);
            return function() {
              var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array(length);
              while (++index < length) {
                array[index] = args[start + index];
              }
              index = -1;
              var otherArgs = Array(start + 1);
              while (++index < start) {
                otherArgs[index] = args[index];
              }
              otherArgs[start] = transform(array);
              return apply(func, this, otherArgs);
            };
          }
          function identity(value) {
            return value;
          }
          function rest(func, start) {
            return overRest$1(func, start, identity);
          }
          var initialParams = function(fn) {
            return rest(function(args) {
              var callback = args.pop();
              fn.call(this, args, callback);
            });
          };
          function applyEach$1(eachfn) {
            return rest(function(fns, args) {
              var go = initialParams(function(args2, callback) {
                var that = this;
                return eachfn(fns, function(fn, cb) {
                  fn.apply(that, args2.concat(cb));
                }, callback);
              });
              if (args.length) {
                return go.apply(this, args);
              } else {
                return go;
              }
            });
          }
          var freeGlobal = typeof global2 == "object" && global2 && global2.Object === Object && global2;
          var freeSelf = typeof self == "object" && self && self.Object === Object && self;
          var root = freeGlobal || freeSelf || Function("return this")();
          var Symbol$1 = root.Symbol;
          var objectProto = Object.prototype;
          var hasOwnProperty = objectProto.hasOwnProperty;
          var nativeObjectToString = objectProto.toString;
          var symToStringTag$1 = Symbol$1 ? Symbol$1.toStringTag : void 0;
          function getRawTag(value) {
            var isOwn = hasOwnProperty.call(value, symToStringTag$1), tag = value[symToStringTag$1];
            try {
              value[symToStringTag$1] = void 0;
              var unmasked = true;
            } catch (e) {
            }
            var result = nativeObjectToString.call(value);
            if (unmasked) {
              if (isOwn) {
                value[symToStringTag$1] = tag;
              } else {
                delete value[symToStringTag$1];
              }
            }
            return result;
          }
          var objectProto$1 = Object.prototype;
          var nativeObjectToString$1 = objectProto$1.toString;
          function objectToString(value) {
            return nativeObjectToString$1.call(value);
          }
          var nullTag = "[object Null]";
          var undefinedTag = "[object Undefined]";
          var symToStringTag = Symbol$1 ? Symbol$1.toStringTag : void 0;
          function baseGetTag(value) {
            if (value == null) {
              return value === void 0 ? undefinedTag : nullTag;
            }
            return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
          }
          function isObject(value) {
            var type = typeof value;
            return value != null && (type == "object" || type == "function");
          }
          var asyncTag = "[object AsyncFunction]";
          var funcTag = "[object Function]";
          var genTag = "[object GeneratorFunction]";
          var proxyTag = "[object Proxy]";
          function isFunction(value) {
            if (!isObject(value)) {
              return false;
            }
            var tag = baseGetTag(value);
            return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
          }
          var MAX_SAFE_INTEGER = 9007199254740991;
          function isLength(value) {
            return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
          }
          function isArrayLike(value) {
            return value != null && isLength(value.length) && !isFunction(value);
          }
          var breakLoop = {};
          function noop4() {
          }
          function once(fn) {
            return function() {
              if (fn === null) {
                return;
              }
              var callFn = fn;
              fn = null;
              callFn.apply(this, arguments);
            };
          }
          var iteratorSymbol = typeof Symbol === "function" && Symbol.iterator;
          var getIterator = function(coll) {
            return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();
          };
          function baseTimes(n, iteratee) {
            var index = -1, result = Array(n);
            while (++index < n) {
              result[index] = iteratee(index);
            }
            return result;
          }
          function isObjectLike(value) {
            return value != null && typeof value == "object";
          }
          var argsTag = "[object Arguments]";
          function baseIsArguments(value) {
            return isObjectLike(value) && baseGetTag(value) == argsTag;
          }
          var objectProto$3 = Object.prototype;
          var hasOwnProperty$2 = objectProto$3.hasOwnProperty;
          var propertyIsEnumerable = objectProto$3.propertyIsEnumerable;
          var isArguments = baseIsArguments(function() {
            return arguments;
          }()) ? baseIsArguments : function(value) {
            return isObjectLike(value) && hasOwnProperty$2.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
          };
          var isArray = Array.isArray;
          function stubFalse() {
            return false;
          }
          var freeExports = typeof exports2 == "object" && exports2 && !exports2.nodeType && exports2;
          var freeModule = freeExports && typeof module3 == "object" && module3 && !module3.nodeType && module3;
          var moduleExports = freeModule && freeModule.exports === freeExports;
          var Buffer$1 = moduleExports ? root.Buffer : void 0;
          var nativeIsBuffer = Buffer$1 ? Buffer$1.isBuffer : void 0;
          var isBuffer = nativeIsBuffer || stubFalse;
          var MAX_SAFE_INTEGER$1 = 9007199254740991;
          var reIsUint = /^(?:0|[1-9]\d*)$/;
          function isIndex(value, length) {
            length = length == null ? MAX_SAFE_INTEGER$1 : length;
            return !!length && (typeof value == "number" || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
          }
          var argsTag$1 = "[object Arguments]";
          var arrayTag = "[object Array]";
          var boolTag = "[object Boolean]";
          var dateTag = "[object Date]";
          var errorTag = "[object Error]";
          var funcTag$1 = "[object Function]";
          var mapTag = "[object Map]";
          var numberTag = "[object Number]";
          var objectTag = "[object Object]";
          var regexpTag = "[object RegExp]";
          var setTag = "[object Set]";
          var stringTag = "[object String]";
          var weakMapTag = "[object WeakMap]";
          var arrayBufferTag = "[object ArrayBuffer]";
          var dataViewTag = "[object DataView]";
          var float32Tag = "[object Float32Array]";
          var float64Tag = "[object Float64Array]";
          var int8Tag = "[object Int8Array]";
          var int16Tag = "[object Int16Array]";
          var int32Tag = "[object Int32Array]";
          var uint8Tag = "[object Uint8Array]";
          var uint8ClampedTag = "[object Uint8ClampedArray]";
          var uint16Tag = "[object Uint16Array]";
          var uint32Tag = "[object Uint32Array]";
          var typedArrayTags = {};
          typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
          typedArrayTags[argsTag$1] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag$1] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
          function baseIsTypedArray(value) {
            return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
          }
          function baseUnary(func) {
            return function(value) {
              return func(value);
            };
          }
          var freeExports$1 = typeof exports2 == "object" && exports2 && !exports2.nodeType && exports2;
          var freeModule$1 = freeExports$1 && typeof module3 == "object" && module3 && !module3.nodeType && module3;
          var moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;
          var freeProcess = moduleExports$1 && freeGlobal.process;
          var nodeUtil = function() {
            try {
              return freeProcess && freeProcess.binding && freeProcess.binding("util");
            } catch (e) {
            }
          }();
          var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
          var isTypedArray3 = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
          var objectProto$2 = Object.prototype;
          var hasOwnProperty$1 = objectProto$2.hasOwnProperty;
          function arrayLikeKeys(value, inherited) {
            var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray3(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
            for (var key in value) {
              if ((inherited || hasOwnProperty$1.call(value, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || isIndex(key, length)))) {
                result.push(key);
              }
            }
            return result;
          }
          var objectProto$5 = Object.prototype;
          function isPrototype(value) {
            var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto$5;
            return value === proto;
          }
          function overArg(func, transform) {
            return function(arg) {
              return func(transform(arg));
            };
          }
          var nativeKeys = overArg(Object.keys, Object);
          var objectProto$4 = Object.prototype;
          var hasOwnProperty$3 = objectProto$4.hasOwnProperty;
          function baseKeys(object) {
            if (!isPrototype(object)) {
              return nativeKeys(object);
            }
            var result = [];
            for (var key in Object(object)) {
              if (hasOwnProperty$3.call(object, key) && key != "constructor") {
                result.push(key);
              }
            }
            return result;
          }
          function keys(object) {
            return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
          }
          function createArrayIterator(coll) {
            var i2 = -1;
            var len = coll.length;
            return function next() {
              return ++i2 < len ? { value: coll[i2], key: i2 } : null;
            };
          }
          function createES2015Iterator(iterator2) {
            var i2 = -1;
            return function next() {
              var item = iterator2.next();
              if (item.done) {
                return null;
              }
              i2++;
              return { value: item.value, key: i2 };
            };
          }
          function createObjectIterator(obj) {
            var okeys = keys(obj);
            var i2 = -1;
            var len = okeys.length;
            return function next() {
              var key = okeys[++i2];
              return i2 < len ? { value: obj[key], key } : null;
            };
          }
          function iterator(coll) {
            if (isArrayLike(coll)) {
              return createArrayIterator(coll);
            }
            var iterator2 = getIterator(coll);
            return iterator2 ? createES2015Iterator(iterator2) : createObjectIterator(coll);
          }
          function onlyOnce(fn) {
            return function() {
              if (fn === null) {
                throw new Error("Callback was already called.");
              }
              var callFn = fn;
              fn = null;
              callFn.apply(this, arguments);
            };
          }
          function _eachOfLimit(limit) {
            return function(obj, iteratee, callback) {
              callback = once(callback || noop4);
              if (limit <= 0 || !obj) {
                return callback(null);
              }
              var nextElem = iterator(obj);
              var done = false;
              var running = 0;
              function iterateeCallback(err, value) {
                running -= 1;
                if (err) {
                  done = true;
                  callback(err);
                } else if (value === breakLoop || done && running <= 0) {
                  done = true;
                  return callback(null);
                } else {
                  replenish();
                }
              }
              function replenish() {
                while (running < limit && !done) {
                  var elem = nextElem();
                  if (elem === null) {
                    done = true;
                    if (running <= 0) {
                      callback(null);
                    }
                    return;
                  }
                  running += 1;
                  iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));
                }
              }
              replenish();
            };
          }
          function eachOfLimit(coll, limit, iteratee, callback) {
            _eachOfLimit(limit)(coll, iteratee, callback);
          }
          function doLimit(fn, limit) {
            return function(iterable, iteratee, callback) {
              return fn(iterable, limit, iteratee, callback);
            };
          }
          function eachOfArrayLike(coll, iteratee, callback) {
            callback = once(callback || noop4);
            var index = 0, completed = 0, length = coll.length;
            if (length === 0) {
              callback(null);
            }
            function iteratorCallback(err, value) {
              if (err) {
                callback(err);
              } else if (++completed === length || value === breakLoop) {
                callback(null);
              }
            }
            for (; index < length; index++) {
              iteratee(coll[index], index, onlyOnce(iteratorCallback));
            }
          }
          var eachOfGeneric = doLimit(eachOfLimit, Infinity);
          var eachOf = function(coll, iteratee, callback) {
            var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;
            eachOfImplementation(coll, iteratee, callback);
          };
          function doParallel(fn) {
            return function(obj, iteratee, callback) {
              return fn(eachOf, obj, iteratee, callback);
            };
          }
          function _asyncMap(eachfn, arr, iteratee, callback) {
            callback = callback || noop4;
            arr = arr || [];
            var results = [];
            var counter = 0;
            eachfn(arr, function(value, _2, callback2) {
              var index = counter++;
              iteratee(value, function(err, v2) {
                results[index] = v2;
                callback2(err);
              });
            }, function(err) {
              callback(err, results);
            });
          }
          var map = doParallel(_asyncMap);
          applyEach$1(map);
          function doParallelLimit(fn) {
            return function(obj, limit, iteratee, callback) {
              return fn(_eachOfLimit(limit), obj, iteratee, callback);
            };
          }
          var mapLimit = doParallelLimit(_asyncMap);
          var mapSeries = doLimit(mapLimit, 1);
          applyEach$1(mapSeries);
          rest(function(fn, args) {
            return rest(function(callArgs) {
              return fn.apply(null, args.concat(callArgs));
            });
          });
          function arrayEach(array, iteratee) {
            var index = -1, length = array == null ? 0 : array.length;
            while (++index < length) {
              if (iteratee(array[index], index, array) === false) {
                break;
              }
            }
            return array;
          }
          function createBaseFor(fromRight) {
            return function(object, iteratee, keysFunc) {
              var index = -1, iterable = Object(object), props2 = keysFunc(object), length = props2.length;
              while (length--) {
                var key = props2[fromRight ? length : ++index];
                if (iteratee(iterable[key], key, iterable) === false) {
                  break;
                }
              }
              return object;
            };
          }
          var baseFor = createBaseFor();
          function baseForOwn(object, iteratee) {
            return object && baseFor(object, iteratee, keys);
          }
          function baseFindIndex(array, predicate, fromIndex, fromRight) {
            var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
            while (fromRight ? index-- : ++index < length) {
              if (predicate(array[index], index, array)) {
                return index;
              }
            }
            return -1;
          }
          function baseIsNaN(value) {
            return value !== value;
          }
          function strictIndexOf(array, value, fromIndex) {
            var index = fromIndex - 1, length = array.length;
            while (++index < length) {
              if (array[index] === value) {
                return index;
              }
            }
            return -1;
          }
          function baseIndexOf(array, value, fromIndex) {
            return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
          }
          var rsAstralRange$1 = "\\ud800-\\udfff";
          var rsComboMarksRange$1 = "\\u0300-\\u036f";
          var reComboHalfMarksRange$1 = "\\ufe20-\\ufe2f";
          var rsComboSymbolsRange$1 = "\\u20d0-\\u20ff";
          var rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1;
          var rsVarRange$1 = "\\ufe0e\\ufe0f";
          var rsAstral = "[" + rsAstralRange$1 + "]";
          var rsCombo = "[" + rsComboRange$1 + "]";
          var rsFitz = "\\ud83c[\\udffb-\\udfff]";
          var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
          var rsNonAstral = "[^" + rsAstralRange$1 + "]";
          var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
          var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
          var rsZWJ$1 = "\\u200d";
          var reOptMod = rsModifier + "?";
          var rsOptVar = "[" + rsVarRange$1 + "]?";
          var rsOptJoin = "(?:" + rsZWJ$1 + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
          var rsSeq = rsOptVar + reOptMod + rsOptJoin;
          var rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
          var hasSetImmediate = typeof setImmediate === "function" && setImmediate;
          var hasNextTick = typeof process2 === "object" && typeof process2.nextTick === "function";
          function fallback(fn) {
            setTimeout(fn, 0);
          }
          function wrap(defer) {
            return rest(function(fn, args) {
              defer(function() {
                fn.apply(null, args);
              });
            });
          }
          var _defer;
          if (hasSetImmediate) {
            _defer = setImmediate;
          } else if (hasNextTick) {
            _defer = process2.nextTick;
          } else {
            _defer = fallback;
          }
          wrap(_defer);
          var eachOfSeries = doLimit(eachOfLimit, 1);
          function reduce(coll, memo, iteratee, callback) {
            callback = once(callback || noop4);
            eachOfSeries(coll, function(x3, i2, callback2) {
              iteratee(memo, x3, function(err, v2) {
                memo = v2;
                callback2(err);
              });
            }, function(err) {
              callback(err, memo);
            });
          }
          var seq = rest(function seq2(functions) {
            return rest(function(args) {
              var that = this;
              var cb = args[args.length - 1];
              if (typeof cb == "function") {
                args.pop();
              } else {
                cb = noop4;
              }
              reduce(functions, args, function(newargs, fn, cb2) {
                fn.apply(that, newargs.concat(rest(function(err, nextargs) {
                  cb2(err, nextargs);
                })));
              }, function(err, results) {
                cb.apply(that, [err].concat(results));
              });
            });
          });
          rest(function(args) {
            return seq.apply(null, args.reverse());
          });
          rest(function(values) {
            var args = [null].concat(values);
            return initialParams(function(ignoredArgs, callback) {
              return callback.apply(this, args);
            });
          });
          function consoleFunc(name3) {
            return rest(function(fn, args) {
              fn.apply(null, args.concat(rest(function(err, args2) {
                if (typeof console === "object") {
                  if (err) {
                    if (console.error) {
                      console.error(err);
                    }
                  } else if (console[name3]) {
                    arrayEach(args2, function(x3) {
                      console[name3](x3);
                    });
                  }
                }
              })));
            });
          }
          consoleFunc("dir");
          function _withoutIndex(iteratee) {
            return function(value, index, callback) {
              return iteratee(value, callback);
            };
          }
          function eachLimit(coll, iteratee, callback) {
            eachOf(coll, _withoutIndex(iteratee), callback);
          }
          consoleFunc("log");
          var _defer$1;
          if (hasNextTick) {
            _defer$1 = process2.nextTick;
          } else if (hasSetImmediate) {
            _defer$1 = setImmediate;
          } else {
            _defer$1 = fallback;
          }
          wrap(_defer$1);
          var nativeCeil = Math.ceil;
          var nativeMax$1 = Math.max;
          var errorCodeLookup;
          function constructErrorCodeLookup() {
            if (errorCodeLookup) {
              return;
            }
            errorCodeLookup = {};
            errorCodeLookup[Dropbox.ApiError.NETWORK_ERROR] = ErrorCode.EIO;
            errorCodeLookup[Dropbox.ApiError.INVALID_PARAM] = ErrorCode.EINVAL;
            errorCodeLookup[Dropbox.ApiError.INVALID_TOKEN] = ErrorCode.EPERM;
            errorCodeLookup[Dropbox.ApiError.OAUTH_ERROR] = ErrorCode.EPERM;
            errorCodeLookup[Dropbox.ApiError.NOT_FOUND] = ErrorCode.ENOENT;
            errorCodeLookup[Dropbox.ApiError.INVALID_METHOD] = ErrorCode.EINVAL;
            errorCodeLookup[Dropbox.ApiError.NOT_ACCEPTABLE] = ErrorCode.EINVAL;
            errorCodeLookup[Dropbox.ApiError.CONFLICT] = ErrorCode.EINVAL;
            errorCodeLookup[Dropbox.ApiError.RATE_LIMITED] = ErrorCode.EBUSY;
            errorCodeLookup[Dropbox.ApiError.SERVER_ERROR] = ErrorCode.EBUSY;
            errorCodeLookup[Dropbox.ApiError.OVER_QUOTA] = ErrorCode.ENOSPC;
          }
          function isFileInfo(cache) {
            return cache && cache.stat.isFile;
          }
          function isDirInfo(cache) {
            return cache && cache.stat.isFolder;
          }
          function isArrayBuffer(ab) {
            return ab === null || ab === void 0 || typeof ab === "object" && typeof ab["byteLength"] === "number";
          }
          var CachedDropboxClient = function CachedDropboxClient2(client) {
            this._cache = {};
            this._client = client;
          };
          CachedDropboxClient.prototype.readdir = function readdir(p, cb) {
            var this$1 = this;
            var cacheInfo = this.getCachedDirInfo(p);
            this._wrap(function(interceptCb) {
              if (cacheInfo !== null && cacheInfo.contents) {
                this$1._client.readdir(p, { contentHash: cacheInfo.stat.contentHash }, interceptCb);
              } else {
                this$1._client.readdir(p, interceptCb);
              }
            }, function(err, filenames, stat, folderEntries) {
              if (err) {
                if (err.status === Dropbox.ApiError.NO_CONTENT && cacheInfo !== null) {
                  cb(null, cacheInfo.contents.slice(0));
                } else {
                  cb(err);
                }
              } else {
                this$1.updateCachedDirInfo(p, stat, filenames.slice(0));
                folderEntries.forEach(function(entry) {
                  this$1.updateCachedInfo(path.join(p, entry.name), entry);
                });
                cb(null, filenames);
              }
            });
          };
          CachedDropboxClient.prototype.remove = function remove(p, cb) {
            var this$1 = this;
            this._wrap(function(interceptCb) {
              this$1._client.remove(p, interceptCb);
            }, function(err, stat) {
              if (!err) {
                this$1.updateCachedInfo(p, stat);
              }
              cb(err);
            });
          };
          CachedDropboxClient.prototype.move = function move(src, dest, cb) {
            var this$1 = this;
            this._wrap(function(interceptCb) {
              this$1._client.move(src, dest, interceptCb);
            }, function(err, stat) {
              if (!err) {
                this$1.deleteCachedInfo(src);
                this$1.updateCachedInfo(dest, stat);
              }
              cb(err);
            });
          };
          CachedDropboxClient.prototype.stat = function stat(p, cb) {
            var this$1 = this;
            this._wrap(function(interceptCb) {
              this$1._client.stat(p, interceptCb);
            }, function(err, stat2) {
              if (!err) {
                this$1.updateCachedInfo(p, stat2);
              }
              cb(err, stat2);
            });
          };
          CachedDropboxClient.prototype.readFile = function readFile2(p, cb) {
            var this$1 = this;
            var cacheInfo = this.getCachedFileInfo(p);
            if (cacheInfo !== null && cacheInfo.contents !== null) {
              this.stat(p, function(error, stat) {
                if (error) {
                  cb(error);
                } else if (stat.contentHash === cacheInfo.stat.contentHash) {
                  cb(error, cacheInfo.contents.slice(0), cacheInfo.stat);
                } else {
                  this$1.readFile(p, cb);
                }
              });
            } else {
              this._wrap(function(interceptCb) {
                this$1._client.readFile(p, { arrayBuffer: true }, interceptCb);
              }, function(err, contents, stat) {
                if (!err) {
                  this$1.updateCachedInfo(p, stat, contents.slice(0));
                }
                cb(err, contents, stat);
              });
            }
          };
          CachedDropboxClient.prototype.writeFile = function writeFile2(p, contents, cb) {
            var this$1 = this;
            this._wrap(function(interceptCb) {
              this$1._client.writeFile(p, contents, interceptCb);
            }, function(err, stat) {
              if (!err) {
                this$1.updateCachedInfo(p, stat, contents.slice(0));
              }
              cb(err, stat);
            });
          };
          CachedDropboxClient.prototype.mkdir = function mkdir(p, cb) {
            var this$1 = this;
            this._wrap(function(interceptCb) {
              this$1._client.mkdir(p, interceptCb);
            }, function(err, stat) {
              if (!err) {
                this$1.updateCachedInfo(p, stat, []);
              }
              cb(err);
            });
          };
          CachedDropboxClient.prototype._wrap = function _wrap(performOp, cb) {
            var numRun = 0;
            var interceptCb = function(error) {
              var timeoutDuration = 2;
              if (error && 3 > ++numRun) {
                switch (error.status) {
                  case Dropbox.ApiError.SERVER_ERROR:
                  case Dropbox.ApiError.NETWORK_ERROR:
                  case Dropbox.ApiError.RATE_LIMITED:
                    setTimeout(function() {
                      performOp(interceptCb);
                    }, timeoutDuration * 1e3);
                    break;
                  default:
                    cb.apply(null, arguments);
                    break;
                }
              } else {
                cb.apply(null, arguments);
              }
            };
            performOp(interceptCb);
          };
          CachedDropboxClient.prototype.getCachedInfo = function getCachedInfo(p) {
            return this._cache[p.toLowerCase()];
          };
          CachedDropboxClient.prototype.putCachedInfo = function putCachedInfo(p, cache) {
            this._cache[p.toLowerCase()] = cache;
          };
          CachedDropboxClient.prototype.deleteCachedInfo = function deleteCachedInfo(p) {
            delete this._cache[p.toLowerCase()];
          };
          CachedDropboxClient.prototype.getCachedDirInfo = function getCachedDirInfo(p) {
            var info = this.getCachedInfo(p);
            if (isDirInfo(info)) {
              return info;
            } else {
              return null;
            }
          };
          CachedDropboxClient.prototype.getCachedFileInfo = function getCachedFileInfo(p) {
            var info = this.getCachedInfo(p);
            if (isFileInfo(info)) {
              return info;
            } else {
              return null;
            }
          };
          CachedDropboxClient.prototype.updateCachedDirInfo = function updateCachedDirInfo(p, stat, contents) {
            if (contents === void 0)
              contents = null;
            var cachedInfo = this.getCachedInfo(p);
            if (stat.contentHash !== null && (cachedInfo === void 0 || cachedInfo.stat.contentHash !== stat.contentHash)) {
              this.putCachedInfo(p, { stat, contents });
            }
          };
          CachedDropboxClient.prototype.updateCachedFileInfo = function updateCachedFileInfo(p, stat, contents) {
            if (contents === void 0)
              contents = null;
            var cachedInfo = this.getCachedInfo(p);
            if (stat.versionTag !== null && (cachedInfo === void 0 || cachedInfo.stat.versionTag !== stat.versionTag)) {
              this.putCachedInfo(p, { stat, contents });
            }
          };
          CachedDropboxClient.prototype.updateCachedInfo = function updateCachedInfo(p, stat, contents) {
            if (contents === void 0)
              contents = null;
            if (stat.isFile && isArrayBuffer(contents)) {
              this.updateCachedFileInfo(p, stat, contents);
            } else if (stat.isFolder && Array.isArray(contents)) {
              this.updateCachedDirInfo(p, stat, contents);
            }
          };
          var DropboxFile = function(PreloadFile$$1) {
            function DropboxFile2(_fs, _path, _flag, _stat, contents) {
              PreloadFile$$1.call(this, _fs, _path, _flag, _stat, contents);
            }
            if (PreloadFile$$1)
              DropboxFile2.__proto__ = PreloadFile$$1;
            DropboxFile2.prototype = Object.create(PreloadFile$$1 && PreloadFile$$1.prototype);
            DropboxFile2.prototype.constructor = DropboxFile2;
            DropboxFile2.prototype.sync = function sync(cb) {
              var this$1 = this;
              if (this.isDirty()) {
                var buffer$$1 = this.getBuffer(), arrayBuffer = buffer2ArrayBuffer(buffer$$1);
                this._fs._writeFileStrict(this.getPath(), arrayBuffer, function(e) {
                  if (!e) {
                    this$1.resetDirty();
                  }
                  cb(e);
                });
              } else {
                cb();
              }
            };
            DropboxFile2.prototype.close = function close(cb) {
              this.sync(cb);
            };
            return DropboxFile2;
          }(PreloadFile);
          var DropboxFileSystem = function(BaseFileSystem$$1) {
            function DropboxFileSystem2(client, deprecateMsg) {
              if (deprecateMsg === void 0)
                deprecateMsg = true;
              BaseFileSystem$$1.call(this);
              this._client = new CachedDropboxClient(client);
              deprecationMessage(deprecateMsg, DropboxFileSystem2.Name, { client: "authenticated dropbox client instance" });
              constructErrorCodeLookup();
            }
            if (BaseFileSystem$$1)
              DropboxFileSystem2.__proto__ = BaseFileSystem$$1;
            DropboxFileSystem2.prototype = Object.create(BaseFileSystem$$1 && BaseFileSystem$$1.prototype);
            DropboxFileSystem2.prototype.constructor = DropboxFileSystem2;
            DropboxFileSystem2.Create = function Create(opts, cb) {
              cb(null, new DropboxFileSystem2(opts.client, false));
            };
            DropboxFileSystem2.isAvailable = function isAvailable() {
              return typeof Dropbox !== "undefined";
            };
            DropboxFileSystem2.prototype.getName = function getName() {
              return DropboxFileSystem2.Name;
            };
            DropboxFileSystem2.prototype.isReadOnly = function isReadOnly() {
              return false;
            };
            DropboxFileSystem2.prototype.supportsSymlinks = function supportsSymlinks() {
              return false;
            };
            DropboxFileSystem2.prototype.supportsProps = function supportsProps() {
              return false;
            };
            DropboxFileSystem2.prototype.supportsSynch = function supportsSynch() {
              return false;
            };
            DropboxFileSystem2.prototype.empty = function empty(mainCb) {
              var this$1 = this;
              this._client.readdir("/", function(error, files) {
                if (error) {
                  mainCb(this$1.convert(error, "/"));
                } else {
                  var deleteFile2 = function(file, cb) {
                    var p = path.join("/", file);
                    this$1._client.remove(p, function(err) {
                      cb(err ? this$1.convert(err, p) : null);
                    });
                  };
                  var finished = function(err) {
                    if (err) {
                      mainCb(err);
                    } else {
                      mainCb();
                    }
                  };
                  eachLimit(files, deleteFile2, finished);
                }
              });
            };
            DropboxFileSystem2.prototype.rename = function rename(oldPath, newPath, cb) {
              var this$1 = this;
              this._client.move(oldPath, newPath, function(error) {
                if (error) {
                  this$1._client.stat(newPath, function(error2, stat) {
                    if (error2 || stat.isFolder) {
                      var missingPath = error.response.error.indexOf(oldPath) > -1 ? oldPath : newPath;
                      cb(this$1.convert(error, missingPath));
                    } else {
                      this$1._client.remove(newPath, function(error22) {
                        if (error22) {
                          cb(this$1.convert(error22, newPath));
                        } else {
                          this$1.rename(oldPath, newPath, cb);
                        }
                      });
                    }
                  });
                } else {
                  cb();
                }
              });
            };
            DropboxFileSystem2.prototype.stat = function stat(path$$1, isLstat, cb) {
              var this$1 = this;
              this._client.stat(path$$1, function(error, stat2) {
                if (error) {
                  cb(this$1.convert(error, path$$1));
                } else if (stat2 && stat2.isRemoved) {
                  cb(ApiError.FileError(ErrorCode.ENOENT, path$$1));
                } else {
                  var stats = new Stats(this$1._statType(stat2), stat2.size);
                  return cb(null, stats);
                }
              });
            };
            DropboxFileSystem2.prototype.open = function open(path$$1, flags, mode, cb) {
              var this$1 = this;
              this._client.readFile(path$$1, function(error, content, dbStat) {
                if (error) {
                  if (flags.isReadable()) {
                    cb(this$1.convert(error, path$$1));
                  } else {
                    switch (error.status) {
                      case Dropbox.ApiError.NOT_FOUND:
                        var ab = new ArrayBuffer(0);
                        return this$1._writeFileStrict(path$$1, ab, function(error2, stat) {
                          if (error2) {
                            cb(error2);
                          } else {
                            var file2 = this$1._makeFile(path$$1, flags, stat, arrayBuffer2Buffer(ab));
                            cb(null, file2);
                          }
                        });
                      default:
                        return cb(this$1.convert(error, path$$1));
                    }
                  }
                } else {
                  var buffer$$1;
                  if (content === null) {
                    buffer$$1 = emptyBuffer();
                  } else {
                    buffer$$1 = arrayBuffer2Buffer(content);
                  }
                  var file = this$1._makeFile(path$$1, flags, dbStat, buffer$$1);
                  return cb(null, file);
                }
              });
            };
            DropboxFileSystem2.prototype._writeFileStrict = function _writeFileStrict(p, data, cb) {
              var this$1 = this;
              var parent = path.dirname(p);
              this.stat(parent, false, function(error, stat) {
                if (error) {
                  cb(ApiError.FileError(ErrorCode.ENOENT, parent));
                } else {
                  this$1._client.writeFile(p, data, function(error2, stat2) {
                    if (error2) {
                      cb(this$1.convert(error2, p));
                    } else {
                      cb(null, stat2);
                    }
                  });
                }
              });
            };
            DropboxFileSystem2.prototype._statType = function _statType(stat) {
              return stat.isFile ? FileType.FILE : FileType.DIRECTORY;
            };
            DropboxFileSystem2.prototype._makeFile = function _makeFile(path$$1, flag, stat, buffer$$1) {
              var type = this._statType(stat);
              var stats = new Stats(type, stat.size);
              return new DropboxFile(this, path$$1, flag, stats, buffer$$1);
            };
            DropboxFileSystem2.prototype._remove = function _remove(path$$1, cb, isFile) {
              var this$1 = this;
              this._client.stat(path$$1, function(error, stat) {
                if (error) {
                  cb(this$1.convert(error, path$$1));
                } else {
                  if (stat.isFile && !isFile) {
                    cb(ApiError.FileError(ErrorCode.ENOTDIR, path$$1));
                  } else if (!stat.isFile && isFile) {
                    cb(ApiError.FileError(ErrorCode.EISDIR, path$$1));
                  } else {
                    this$1._client.remove(path$$1, function(error2) {
                      if (error2) {
                        cb(this$1.convert(error2, path$$1));
                      } else {
                        cb(null);
                      }
                    });
                  }
                }
              });
            };
            DropboxFileSystem2.prototype.unlink = function unlink(path$$1, cb) {
              this._remove(path$$1, cb, true);
            };
            DropboxFileSystem2.prototype.rmdir = function rmdir(path$$1, cb) {
              this._remove(path$$1, cb, false);
            };
            DropboxFileSystem2.prototype.mkdir = function mkdir(p, mode, cb) {
              var this$1 = this;
              var parent = path.dirname(p);
              this._client.stat(parent, function(error, stat) {
                if (error) {
                  cb(this$1.convert(error, parent));
                } else {
                  this$1._client.mkdir(p, function(error2) {
                    if (error2) {
                      cb(ApiError.FileError(ErrorCode.EEXIST, p));
                    } else {
                      cb(null);
                    }
                  });
                }
              });
            };
            DropboxFileSystem2.prototype.readdir = function readdir(path$$1, cb) {
              var this$1 = this;
              this._client.readdir(path$$1, function(error, files) {
                if (error) {
                  return cb(this$1.convert(error));
                } else {
                  return cb(null, files);
                }
              });
            };
            DropboxFileSystem2.prototype.convert = function convert(err, path$$1) {
              if (path$$1 === void 0)
                path$$1 = null;
              var errorCode = errorCodeLookup[err.status];
              if (errorCode === void 0) {
                errorCode = ErrorCode.EIO;
              }
              if (!path$$1) {
                return new ApiError(errorCode);
              } else {
                return ApiError.FileError(errorCode, path$$1);
              }
            };
            return DropboxFileSystem2;
          }(BaseFileSystem);
          DropboxFileSystem.Name = "Dropbox";
          DropboxFileSystem.Options = { client: { type: "object", description: "An *authenticated* Dropbox client. Must be from the 0.10 JS SDK.", validator: function(opt, cb) {
            if (opt.isAuthenticated && opt.isAuthenticated()) {
              cb();
            } else {
              cb(new ApiError(ErrorCode.EINVAL, "'client' option must be an authenticated Dropbox client from the v0.10 JS SDK."));
            }
          } } };
          function convertError(e, path$$1) {
            if (path$$1 === void 0)
              path$$1 = "";
            var errno = e.errno;
            var parent = e.node;
            var paths = [];
            while (parent) {
              paths.unshift(parent.name);
              if (parent === parent.parent) {
                break;
              }
              parent = parent.parent;
            }
            return new ApiError(errno, ErrorStrings[errno], paths.length > 0 ? "/" + paths.join("/") : path$$1);
          }
          var EmscriptenFile = function(BaseFile$$1) {
            function EmscriptenFile2(_fs, _FS, _path, _stream) {
              BaseFile$$1.call(this);
              this._fs = _fs;
              this._FS = _FS;
              this._path = _path;
              this._stream = _stream;
            }
            if (BaseFile$$1)
              EmscriptenFile2.__proto__ = BaseFile$$1;
            EmscriptenFile2.prototype = Object.create(BaseFile$$1 && BaseFile$$1.prototype);
            EmscriptenFile2.prototype.constructor = EmscriptenFile2;
            EmscriptenFile2.prototype.getPos = function getPos() {
              return void 0;
            };
            EmscriptenFile2.prototype.close = function close(cb) {
              var err = null;
              try {
                this.closeSync();
              } catch (e) {
                err = e;
              } finally {
                cb(err);
              }
            };
            EmscriptenFile2.prototype.closeSync = function closeSync() {
              try {
                this._FS.close(this._stream);
              } catch (e) {
                throw convertError(e, this._path);
              }
            };
            EmscriptenFile2.prototype.stat = function stat(cb) {
              try {
                cb(null, this.statSync());
              } catch (e) {
                cb(e);
              }
            };
            EmscriptenFile2.prototype.statSync = function statSync() {
              try {
                return this._fs.statSync(this._path, false);
              } catch (e) {
                throw convertError(e, this._path);
              }
            };
            EmscriptenFile2.prototype.truncate = function truncate(len, cb) {
              var err = null;
              try {
                this.truncateSync(len);
              } catch (e) {
                err = e;
              } finally {
                cb(err);
              }
            };
            EmscriptenFile2.prototype.truncateSync = function truncateSync(len) {
              try {
                this._FS.ftruncate(this._stream.fd, len);
              } catch (e) {
                throw convertError(e, this._path);
              }
            };
            EmscriptenFile2.prototype.write = function write(buffer$$1, offset, length, position, cb) {
              try {
                cb(null, this.writeSync(buffer$$1, offset, length, position), buffer$$1);
              } catch (e) {
                cb(e);
              }
            };
            EmscriptenFile2.prototype.writeSync = function writeSync(buffer$$1, offset, length, position) {
              try {
                var u8 = buffer2Uint8array(buffer$$1);
                var emPosition = position === null ? void 0 : position;
                return this._FS.write(this._stream, u8, offset, length, emPosition);
              } catch (e) {
                throw convertError(e, this._path);
              }
            };
            EmscriptenFile2.prototype.read = function read(buffer$$1, offset, length, position, cb) {
              try {
                cb(null, this.readSync(buffer$$1, offset, length, position), buffer$$1);
              } catch (e) {
                cb(e);
              }
            };
            EmscriptenFile2.prototype.readSync = function readSync(buffer$$1, offset, length, position) {
              try {
                var u8 = buffer2Uint8array(buffer$$1);
                var emPosition = position === null ? void 0 : position;
                return this._FS.read(this._stream, u8, offset, length, emPosition);
              } catch (e) {
                throw convertError(e, this._path);
              }
            };
            EmscriptenFile2.prototype.sync = function sync(cb) {
              cb();
            };
            EmscriptenFile2.prototype.syncSync = function syncSync() {
            };
            EmscriptenFile2.prototype.chown = function chown(uid, gid, cb) {
              var err = null;
              try {
                this.chownSync(uid, gid);
              } catch (e) {
                err = e;
              } finally {
                cb(err);
              }
            };
            EmscriptenFile2.prototype.chownSync = function chownSync(uid, gid) {
              try {
                this._FS.fchown(this._stream.fd, uid, gid);
              } catch (e) {
                throw convertError(e, this._path);
              }
            };
            EmscriptenFile2.prototype.chmod = function chmod(mode, cb) {
              var err = null;
              try {
                this.chmodSync(mode);
              } catch (e) {
                err = e;
              } finally {
                cb(err);
              }
            };
            EmscriptenFile2.prototype.chmodSync = function chmodSync(mode) {
              try {
                this._FS.fchmod(this._stream.fd, mode);
              } catch (e) {
                throw convertError(e, this._path);
              }
            };
            EmscriptenFile2.prototype.utimes = function utimes(atime, mtime, cb) {
              var err = null;
              try {
                this.utimesSync(atime, mtime);
              } catch (e) {
                err = e;
              } finally {
                cb(err);
              }
            };
            EmscriptenFile2.prototype.utimesSync = function utimesSync(atime, mtime) {
              this._fs.utimesSync(this._path, atime, mtime);
            };
            return EmscriptenFile2;
          }(BaseFile);
          var EmscriptenFileSystem = function(SynchronousFileSystem$$1) {
            function EmscriptenFileSystem2(_FS) {
              SynchronousFileSystem$$1.call(this);
              this._FS = _FS;
            }
            if (SynchronousFileSystem$$1)
              EmscriptenFileSystem2.__proto__ = SynchronousFileSystem$$1;
            EmscriptenFileSystem2.prototype = Object.create(SynchronousFileSystem$$1 && SynchronousFileSystem$$1.prototype);
            EmscriptenFileSystem2.prototype.constructor = EmscriptenFileSystem2;
            EmscriptenFileSystem2.Create = function Create(opts, cb) {
              cb(null, new EmscriptenFileSystem2(opts.FS));
            };
            EmscriptenFileSystem2.isAvailable = function isAvailable() {
              return true;
            };
            EmscriptenFileSystem2.prototype.getName = function getName() {
              return this._FS.DB_NAME();
            };
            EmscriptenFileSystem2.prototype.isReadOnly = function isReadOnly() {
              return false;
            };
            EmscriptenFileSystem2.prototype.supportsLinks = function supportsLinks() {
              return true;
            };
            EmscriptenFileSystem2.prototype.supportsProps = function supportsProps() {
              return true;
            };
            EmscriptenFileSystem2.prototype.supportsSynch = function supportsSynch() {
              return true;
            };
            EmscriptenFileSystem2.prototype.renameSync = function renameSync(oldPath, newPath) {
              try {
                this._FS.rename(oldPath, newPath);
              } catch (e) {
                if (e.errno === ErrorCode.ENOENT) {
                  throw convertError(e, this.existsSync(oldPath) ? newPath : oldPath);
                } else {
                  throw convertError(e);
                }
              }
            };
            EmscriptenFileSystem2.prototype.statSync = function statSync(p, isLstat) {
              try {
                var stats = isLstat ? this._FS.lstat(p) : this._FS.stat(p);
                var itemType = this.modeToFileType(stats.mode);
                return new Stats(itemType, stats.size, stats.mode, stats.atime, stats.mtime, stats.ctime);
              } catch (e) {
                throw convertError(e, p);
              }
            };
            EmscriptenFileSystem2.prototype.openSync = function openSync(p, flag, mode) {
              try {
                var stream = this._FS.open(p, flag.getFlagString(), mode);
                if (this._FS.isDir(stream.node.mode)) {
                  this._FS.close(stream);
                  throw ApiError.EISDIR(p);
                }
                return new EmscriptenFile(this, this._FS, p, stream);
              } catch (e) {
                throw convertError(e, p);
              }
            };
            EmscriptenFileSystem2.prototype.unlinkSync = function unlinkSync(p) {
              try {
                this._FS.unlink(p);
              } catch (e) {
                throw convertError(e, p);
              }
            };
            EmscriptenFileSystem2.prototype.rmdirSync = function rmdirSync(p) {
              try {
                this._FS.rmdir(p);
              } catch (e) {
                throw convertError(e, p);
              }
            };
            EmscriptenFileSystem2.prototype.mkdirSync = function mkdirSync(p, mode) {
              try {
                this._FS.mkdir(p, mode);
              } catch (e) {
                throw convertError(e, p);
              }
            };
            EmscriptenFileSystem2.prototype.readdirSync = function readdirSync(p) {
              try {
                return this._FS.readdir(p).filter(function(p2) {
                  return p2 !== "." && p2 !== "..";
                });
              } catch (e) {
                throw convertError(e, p);
              }
            };
            EmscriptenFileSystem2.prototype.truncateSync = function truncateSync(p, len) {
              try {
                this._FS.truncate(p, len);
              } catch (e) {
                throw convertError(e, p);
              }
            };
            EmscriptenFileSystem2.prototype.readFileSync = function readFileSync(p, encoding, flag) {
              try {
                var data = this._FS.readFile(p, { flags: flag.getFlagString() });
                var buff = uint8Array2Buffer(data);
                if (encoding) {
                  return buff.toString(encoding);
                } else {
                  return buff;
                }
              } catch (e) {
                throw convertError(e, p);
              }
            };
            EmscriptenFileSystem2.prototype.writeFileSync = function writeFileSync(p, data, encoding, flag, mode) {
              try {
                if (encoding) {
                  data = Buffer2.from(data, encoding);
                }
                var u8 = buffer2Uint8array(data);
                this._FS.writeFile(p, u8, { flags: flag.getFlagString(), encoding: "binary" });
                this._FS.chmod(p, mode);
              } catch (e) {
                throw convertError(e, p);
              }
            };
            EmscriptenFileSystem2.prototype.chmodSync = function chmodSync(p, isLchmod, mode) {
              try {
                isLchmod ? this._FS.lchmod(p, mode) : this._FS.chmod(p, mode);
              } catch (e) {
                throw convertError(e, p);
              }
            };
            EmscriptenFileSystem2.prototype.chownSync = function chownSync(p, isLchown, uid, gid) {
              try {
                isLchown ? this._FS.lchown(p, uid, gid) : this._FS.chown(p, uid, gid);
              } catch (e) {
                throw convertError(e, p);
              }
            };
            EmscriptenFileSystem2.prototype.symlinkSync = function symlinkSync(srcpath, dstpath, type) {
              try {
                this._FS.symlink(srcpath, dstpath);
              } catch (e) {
                throw convertError(e);
              }
            };
            EmscriptenFileSystem2.prototype.readlinkSync = function readlinkSync(p) {
              try {
                return this._FS.readlink(p);
              } catch (e) {
                throw convertError(e, p);
              }
            };
            EmscriptenFileSystem2.prototype.utimesSync = function utimesSync(p, atime, mtime) {
              try {
                this._FS.utime(p, atime.getTime(), mtime.getTime());
              } catch (e) {
                throw convertError(e, p);
              }
            };
            EmscriptenFileSystem2.prototype.modeToFileType = function modeToFileType(mode) {
              if (this._FS.isDir(mode)) {
                return FileType.DIRECTORY;
              } else if (this._FS.isFile(mode)) {
                return FileType.FILE;
              } else if (this._FS.isLink(mode)) {
                return FileType.SYMLINK;
              } else {
                throw ApiError.EPERM("Invalid mode: " + mode);
              }
            };
            return EmscriptenFileSystem2;
          }(SynchronousFileSystem);
          EmscriptenFileSystem.Name = "EmscriptenFileSystem";
          EmscriptenFileSystem.Options = { FS: { type: "object", description: "The Emscripten file system to use (the `FS` variable)" } };
          var FolderAdapter = function(BaseFileSystem$$1) {
            function FolderAdapter2(folder, wrapped) {
              BaseFileSystem$$1.call(this);
              this._folder = folder;
              this._wrapped = wrapped;
            }
            if (BaseFileSystem$$1)
              FolderAdapter2.__proto__ = BaseFileSystem$$1;
            FolderAdapter2.prototype = Object.create(BaseFileSystem$$1 && BaseFileSystem$$1.prototype);
            FolderAdapter2.prototype.constructor = FolderAdapter2;
            FolderAdapter2.Create = function Create(opts, cb) {
              cb(null, new FolderAdapter2(opts.folder, opts.wrapped));
            };
            FolderAdapter2.isAvailable = function isAvailable() {
              return true;
            };
            FolderAdapter2.prototype.initialize = function initialize3(cb) {
              var this$1 = this;
              this._wrapped.exists(this._folder, function(exists2) {
                if (exists2) {
                  cb();
                } else if (this$1._wrapped.isReadOnly()) {
                  cb(ApiError.ENOENT(this$1._folder));
                } else {
                  this$1._wrapped.mkdir(this$1._folder, 511, cb);
                }
              });
            };
            FolderAdapter2.prototype.getName = function getName() {
              return this._wrapped.getName();
            };
            FolderAdapter2.prototype.isReadOnly = function isReadOnly() {
              return this._wrapped.isReadOnly();
            };
            FolderAdapter2.prototype.supportsProps = function supportsProps() {
              return this._wrapped.supportsProps();
            };
            FolderAdapter2.prototype.supportsSynch = function supportsSynch() {
              return this._wrapped.supportsSynch();
            };
            FolderAdapter2.prototype.supportsLinks = function supportsLinks() {
              return false;
            };
            return FolderAdapter2;
          }(BaseFileSystem);
          FolderAdapter.Name = "FolderAdapter";
          FolderAdapter.Options = { folder: { type: "string", description: "The folder to use as the root directory" }, wrapped: { type: "object", description: "The file system to wrap" } };
          function translateError(folder, e) {
            if (e !== null && typeof e === "object") {
              var err = e;
              var p = err.path;
              if (p) {
                p = "/" + path.relative(folder, p);
                err.message = err.message.replace(err.path, p);
                err.path = p;
              }
            }
            return e;
          }
          function wrapCallback(folder, cb) {
            if (typeof cb === "function") {
              return function(err) {
                if (arguments.length > 0) {
                  arguments[0] = translateError(folder, err);
                }
                cb.apply(null, arguments);
              };
            } else {
              return cb;
            }
          }
          function wrapFunction(name3, wrapFirst, wrapSecond) {
            if (name3.slice(name3.length - 4) !== "Sync") {
              return function() {
                if (arguments.length > 0) {
                  if (wrapFirst) {
                    arguments[0] = path.join(this._folder, arguments[0]);
                  }
                  if (wrapSecond) {
                    arguments[1] = path.join(this._folder, arguments[1]);
                  }
                  arguments[arguments.length - 1] = wrapCallback(this._folder, arguments[arguments.length - 1]);
                }
                return this._wrapped[name3].apply(this._wrapped, arguments);
              };
            } else {
              return function() {
                try {
                  if (wrapFirst) {
                    arguments[0] = path.join(this._folder, arguments[0]);
                  }
                  if (wrapSecond) {
                    arguments[1] = path.join(this._folder, arguments[1]);
                  }
                  return this._wrapped[name3].apply(this._wrapped, arguments);
                } catch (e) {
                  throw translateError(this._folder, e);
                }
              };
            }
          }
          ["diskSpace", "stat", "statSync", "open", "openSync", "unlink", "unlinkSync", "rmdir", "rmdirSync", "mkdir", "mkdirSync", "readdir", "readdirSync", "exists", "existsSync", "realpath", "realpathSync", "truncate", "truncateSync", "readFile", "readFileSync", "writeFile", "writeFileSync", "appendFile", "appendFileSync", "chmod", "chmodSync", "chown", "chownSync", "utimes", "utimesSync", "readlink", "readlinkSync"].forEach(function(name3) {
            FolderAdapter.prototype[name3] = wrapFunction(name3, true, false);
          });
          ["rename", "renameSync", "link", "linkSync", "symlink", "symlinkSync"].forEach(function(name3) {
            FolderAdapter.prototype[name3] = wrapFunction(name3, true, true);
          });
          var toExport;
          if (typeof window !== "undefined") {
            toExport = window;
          } else if (typeof self !== "undefined") {
            toExport = self;
          } else {
            toExport = global2;
          }
          var global$1 = toExport;
          function isDirectoryEntry(entry) {
            return entry.isDirectory;
          }
          var _getFS = global$1.webkitRequestFileSystem || global$1.requestFileSystem || null;
          function _requestQuota(type, size, success, errorCallback) {
            if (typeof navigator["webkitPersistentStorage"] !== "undefined") {
              switch (type) {
                case global$1.PERSISTENT:
                  navigator.webkitPersistentStorage.requestQuota(size, success, errorCallback);
                  break;
                case global$1.TEMPORARY:
                  navigator.webkitTemporaryStorage.requestQuota(size, success, errorCallback);
                  break;
                default:
                  errorCallback(new TypeError("Invalid storage type: " + type));
                  break;
              }
            } else {
              global$1.webkitStorageInfo.requestQuota(type, size, success, errorCallback);
            }
          }
          function _toArray(list2) {
            return Array.prototype.slice.call(list2 || [], 0);
          }
          function convertError$1(err, p, expectedDir) {
            switch (err.name) {
              case "PathExistsError":
                return ApiError.EEXIST(p);
              case "QuotaExceededError":
                return ApiError.FileError(ErrorCode.ENOSPC, p);
              case "NotFoundError":
                return ApiError.ENOENT(p);
              case "SecurityError":
                return ApiError.FileError(ErrorCode.EACCES, p);
              case "InvalidModificationError":
                return ApiError.FileError(ErrorCode.EPERM, p);
              case "TypeMismatchError":
                return ApiError.FileError(expectedDir ? ErrorCode.ENOTDIR : ErrorCode.EISDIR, p);
              case "EncodingError":
              case "InvalidStateError":
              case "NoModificationAllowedError":
              default:
                return ApiError.FileError(ErrorCode.EINVAL, p);
            }
          }
          var HTML5FSFile = function(PreloadFile$$1) {
            function HTML5FSFile2(fs4, entry, path$$1, flag, stat, contents) {
              PreloadFile$$1.call(this, fs4, path$$1, flag, stat, contents);
              this._entry = entry;
            }
            if (PreloadFile$$1)
              HTML5FSFile2.__proto__ = PreloadFile$$1;
            HTML5FSFile2.prototype = Object.create(PreloadFile$$1 && PreloadFile$$1.prototype);
            HTML5FSFile2.prototype.constructor = HTML5FSFile2;
            HTML5FSFile2.prototype.sync = function sync(cb) {
              var this$1 = this;
              if (!this.isDirty()) {
                return cb();
              }
              this._entry.createWriter(function(writer) {
                var buffer$$1 = this$1.getBuffer();
                var blob = new Blob([buffer2ArrayBuffer(buffer$$1)]);
                var length = blob.size;
                writer.onwriteend = function(err) {
                  writer.onwriteend = null;
                  writer.onerror = null;
                  writer.truncate(length);
                  this$1.resetDirty();
                  cb();
                };
                writer.onerror = function(err) {
                  cb(convertError$1(err, this$1.getPath(), false));
                };
                writer.write(blob);
              });
            };
            HTML5FSFile2.prototype.close = function close(cb) {
              this.sync(cb);
            };
            return HTML5FSFile2;
          }(PreloadFile);
          var HTML5FS = function(BaseFileSystem$$1) {
            function HTML5FS2(size, type, deprecateMsg) {
              if (size === void 0)
                size = 5;
              if (type === void 0)
                type = global$1.PERSISTENT;
              if (deprecateMsg === void 0)
                deprecateMsg = true;
              BaseFileSystem$$1.call(this);
              this.size = 1024 * 1024 * size;
              this.type = type;
              deprecationMessage(deprecateMsg, HTML5FS2.Name, { size, type });
            }
            if (BaseFileSystem$$1)
              HTML5FS2.__proto__ = BaseFileSystem$$1;
            HTML5FS2.prototype = Object.create(BaseFileSystem$$1 && BaseFileSystem$$1.prototype);
            HTML5FS2.prototype.constructor = HTML5FS2;
            HTML5FS2.Create = function Create(opts, cb) {
              var fs4 = new HTML5FS2(opts.size, opts.type, false);
              fs4.allocate(function(e) {
                return e ? cb(e) : cb(null, fs4);
              }, false);
            };
            HTML5FS2.isAvailable = function isAvailable() {
              return !!_getFS;
            };
            HTML5FS2.prototype.getName = function getName() {
              return HTML5FS2.Name;
            };
            HTML5FS2.prototype.isReadOnly = function isReadOnly() {
              return false;
            };
            HTML5FS2.prototype.supportsSymlinks = function supportsSymlinks() {
              return false;
            };
            HTML5FS2.prototype.supportsProps = function supportsProps() {
              return false;
            };
            HTML5FS2.prototype.supportsSynch = function supportsSynch() {
              return false;
            };
            HTML5FS2.prototype.allocate = function allocate(cb, deprecateMsg) {
              var this$1 = this;
              if (cb === void 0)
                cb = function() {
                };
              if (deprecateMsg === void 0)
                deprecateMsg = true;
              if (deprecateMsg) {
                console.warn("[HTML5FS] HTML5FS.allocate() is deprecated and will be removed in the next major release. Please use 'HTML5FS.Create({type: " + this.type + ", size: " + this.size + "}, cb)' to create and allocate HTML5FS instances.");
              }
              var success = function(fs4) {
                this$1.fs = fs4;
                cb();
              };
              var error = function(err) {
                cb(convertError$1(err, "/", true));
              };
              if (this.type === global$1.PERSISTENT) {
                _requestQuota(this.type, this.size, function(granted) {
                  _getFS(this$1.type, granted, success, error);
                }, error);
              } else {
                _getFS(this.type, this.size, success, error);
              }
            };
            HTML5FS2.prototype.empty = function empty(mainCb) {
              this._readdir("/", function(err, entries) {
                if (err) {
                  console.error("Failed to empty FS");
                  mainCb(err);
                } else {
                  var finished = function(er) {
                    if (err) {
                      console.error("Failed to empty FS");
                      mainCb(err);
                    } else {
                      mainCb();
                    }
                  };
                  var deleteEntry = function(entry, cb) {
                    var succ = function() {
                      cb();
                    };
                    var error = function(err2) {
                      cb(convertError$1(err2, entry.fullPath, !entry.isDirectory));
                    };
                    if (isDirectoryEntry(entry)) {
                      entry.removeRecursively(succ, error);
                    } else {
                      entry.remove(succ, error);
                    }
                  };
                  eachLimit(entries, deleteEntry, finished);
                }
              });
            };
            HTML5FS2.prototype.rename = function rename(oldPath, newPath, cb) {
              var this$1 = this;
              var semaphore = 2;
              var successCount = 0;
              var root2 = this.fs.root;
              var currentPath = oldPath;
              var error = function(err) {
                if (--semaphore <= 0) {
                  cb(convertError$1(err, currentPath, false));
                }
              };
              var success = function(file) {
                if (++successCount === 2) {
                  return cb(new ApiError(ErrorCode.EINVAL, "Something was identified as both a file and a directory. This should never happen."));
                }
                if (oldPath === newPath) {
                  return cb();
                }
                currentPath = path.dirname(newPath);
                root2.getDirectory(currentPath, {}, function(parentDir) {
                  currentPath = path.basename(newPath);
                  file.moveTo(parentDir, currentPath, function(entry) {
                    cb();
                  }, function(err) {
                    if (file.isDirectory) {
                      currentPath = newPath;
                      this$1.unlink(newPath, function(e) {
                        if (e) {
                          error(err);
                        } else {
                          this$1.rename(oldPath, newPath, cb);
                        }
                      });
                    } else {
                      error(err);
                    }
                  });
                }, error);
              };
              root2.getFile(oldPath, {}, success, error);
              root2.getDirectory(oldPath, {}, success, error);
            };
            HTML5FS2.prototype.stat = function stat(path$$1, isLstat, cb) {
              var this$1 = this;
              var opts = { create: false };
              var loadAsFile = function(entry) {
                var fileFromEntry = function(file) {
                  var stat2 = new Stats(FileType.FILE, file.size);
                  cb(null, stat2);
                };
                entry.file(fileFromEntry, failedToLoad);
              };
              var loadAsDir = function(dir$$1) {
                var size = 4096;
                var stat2 = new Stats(FileType.DIRECTORY, size);
                cb(null, stat2);
              };
              var failedToLoad = function(err) {
                cb(convertError$1(err, path$$1, false));
              };
              var failedToLoadAsFile = function() {
                this$1.fs.root.getDirectory(path$$1, opts, loadAsDir, failedToLoad);
              };
              this.fs.root.getFile(path$$1, opts, loadAsFile, failedToLoadAsFile);
            };
            HTML5FS2.prototype.open = function open(p, flags, mode, cb) {
              var this$1 = this;
              var error = function(err) {
                if (err.name === "InvalidModificationError" && flags.isExclusive()) {
                  cb(ApiError.EEXIST(p));
                } else {
                  cb(convertError$1(err, p, false));
                }
              };
              this.fs.root.getFile(p, { create: flags.pathNotExistsAction() === ActionType.CREATE_FILE, exclusive: flags.isExclusive() }, function(entry) {
                entry.file(function(file) {
                  var reader = new FileReader();
                  reader.onloadend = function(event) {
                    var bfsFile = this$1._makeFile(p, entry, flags, file, reader.result);
                    cb(null, bfsFile);
                  };
                  reader.onerror = function(ev2) {
                    error(reader.error);
                  };
                  reader.readAsArrayBuffer(file);
                }, error);
              }, error);
            };
            HTML5FS2.prototype.unlink = function unlink(path$$1, cb) {
              this._remove(path$$1, cb, true);
            };
            HTML5FS2.prototype.rmdir = function rmdir(path$$1, cb) {
              var this$1 = this;
              this.readdir(path$$1, function(e, files) {
                if (e) {
                  cb(e);
                } else if (files.length > 0) {
                  cb(ApiError.ENOTEMPTY(path$$1));
                } else {
                  this$1._remove(path$$1, cb, false);
                }
              });
            };
            HTML5FS2.prototype.mkdir = function mkdir(path$$1, mode, cb) {
              var opts = { create: true, exclusive: true };
              var success = function(dir$$1) {
                cb();
              };
              var error = function(err) {
                cb(convertError$1(err, path$$1, true));
              };
              this.fs.root.getDirectory(path$$1, opts, success, error);
            };
            HTML5FS2.prototype.readdir = function readdir(path$$1, cb) {
              this._readdir(path$$1, function(e, entries) {
                if (entries) {
                  var rv = [];
                  for (var i2 = 0, list2 = entries; i2 < list2.length; i2 += 1) {
                    var entry = list2[i2];
                    rv.push(entry.name);
                  }
                  cb(null, rv);
                } else {
                  return cb(e);
                }
              });
            };
            HTML5FS2.prototype._makeFile = function _makeFile(path$$1, entry, flag, stat, data) {
              if (data === void 0)
                data = new ArrayBuffer(0);
              var stats = new Stats(FileType.FILE, stat.size);
              var buffer$$1 = arrayBuffer2Buffer(data);
              return new HTML5FSFile(this, entry, path$$1, flag, stats, buffer$$1);
            };
            HTML5FS2.prototype._readdir = function _readdir(path$$1, cb) {
              var error = function(err) {
                cb(convertError$1(err, path$$1, true));
              };
              this.fs.root.getDirectory(path$$1, { create: false }, function(dirEntry) {
                var reader = dirEntry.createReader();
                var entries = [];
                var readEntries = function() {
                  reader.readEntries(function(results) {
                    if (results.length) {
                      entries = entries.concat(_toArray(results));
                      readEntries();
                    } else {
                      cb(null, entries);
                    }
                  }, error);
                };
                readEntries();
              }, error);
            };
            HTML5FS2.prototype._remove = function _remove(path$$1, cb, isFile) {
              var success = function(entry) {
                var succ = function() {
                  cb();
                };
                var err = function(err2) {
                  cb(convertError$1(err2, path$$1, !isFile));
                };
                entry.remove(succ, err);
              };
              var error = function(err) {
                cb(convertError$1(err, path$$1, !isFile));
              };
              var opts = { create: false };
              if (isFile) {
                this.fs.root.getFile(path$$1, opts, success, error);
              } else {
                this.fs.root.getDirectory(path$$1, opts, success, error);
              }
            };
            return HTML5FS2;
          }(BaseFileSystem);
          HTML5FS.Name = "HTML5FS";
          HTML5FS.Options = { size: { type: "number", optional: true, description: "Storage quota to request, in megabytes. Allocated value may be less. Defaults to 5." }, type: { type: "number", optional: true, description: "window.PERSISTENT or window.TEMPORARY. Defaults to PERSISTENT." } };
          var Inode = function Inode2(id, size, mode, atime, mtime, ctime) {
            this.id = id;
            this.size = size;
            this.mode = mode;
            this.atime = atime;
            this.mtime = mtime;
            this.ctime = ctime;
          };
          Inode.fromBuffer = function fromBuffer(buffer$$1) {
            if (buffer$$1 === void 0) {
              throw new Error("NO");
            }
            return new Inode(buffer$$1.toString("ascii", 30), buffer$$1.readUInt32LE(0), buffer$$1.readUInt16LE(4), buffer$$1.readDoubleLE(6), buffer$$1.readDoubleLE(14), buffer$$1.readDoubleLE(22));
          };
          Inode.prototype.toStats = function toStats() {
            return new Stats((this.mode & 61440) === FileType.DIRECTORY ? FileType.DIRECTORY : FileType.FILE, this.size, this.mode, new Date(this.atime), new Date(this.mtime), new Date(this.ctime));
          };
          Inode.prototype.getSize = function getSize() {
            return 30 + this.id.length;
          };
          Inode.prototype.toBuffer = function toBuffer(buff) {
            if (buff === void 0)
              buff = Buffer2.alloc(this.getSize());
            buff.writeUInt32LE(this.size, 0);
            buff.writeUInt16LE(this.mode, 4);
            buff.writeDoubleLE(this.atime, 6);
            buff.writeDoubleLE(this.mtime, 14);
            buff.writeDoubleLE(this.ctime, 22);
            buff.write(this.id, 30, this.id.length, "ascii");
            return buff;
          };
          Inode.prototype.update = function update(stats) {
            var hasChanged = false;
            if (this.size !== stats.size) {
              this.size = stats.size;
              hasChanged = true;
            }
            if (this.mode !== stats.mode) {
              this.mode = stats.mode;
              hasChanged = true;
            }
            var atimeMs = stats.atime.getTime();
            if (this.atime !== atimeMs) {
              this.atime = atimeMs;
              hasChanged = true;
            }
            var mtimeMs = stats.mtime.getTime();
            if (this.mtime !== mtimeMs) {
              this.mtime = mtimeMs;
              hasChanged = true;
            }
            var ctimeMs = stats.ctime.getTime();
            if (this.ctime !== ctimeMs) {
              this.ctime = ctimeMs;
              hasChanged = true;
            }
            return hasChanged;
          };
          Inode.prototype.isFile = function isFile() {
            return (this.mode & 61440) === FileType.FILE;
          };
          Inode.prototype.isDirectory = function isDirectory() {
            return (this.mode & 61440) === FileType.DIRECTORY;
          };
          var ROOT_NODE_ID = "/";
          var emptyDirNode = null;
          function getEmptyDirNode() {
            if (emptyDirNode) {
              return emptyDirNode;
            }
            return emptyDirNode = Buffer2.from("{}");
          }
          function GenerateRandomID() {
            return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(c) {
              var r = Math.random() * 16 | 0;
              var v2 = c === "x" ? r : r & 3 | 8;
              return v2.toString(16);
            });
          }
          function noError(e, cb) {
            if (e) {
              cb(e);
              return false;
            }
            return true;
          }
          function noErrorTx(e, tx, cb) {
            if (e) {
              tx.abort(function() {
                cb(e);
              });
              return false;
            }
            return true;
          }
          var SimpleSyncRWTransaction = function SimpleSyncRWTransaction2(store) {
            this.store = store;
            this.originalData = {};
            this.modifiedKeys = [];
          };
          SimpleSyncRWTransaction.prototype.get = function get(key) {
            var val = this.store.get(key);
            this.stashOldValue(key, val);
            return val;
          };
          SimpleSyncRWTransaction.prototype.put = function put(key, data, overwrite) {
            this.markModified(key);
            return this.store.put(key, data, overwrite);
          };
          SimpleSyncRWTransaction.prototype.del = function del(key) {
            this.markModified(key);
            this.store.del(key);
          };
          SimpleSyncRWTransaction.prototype.commit = function commit() {
          };
          SimpleSyncRWTransaction.prototype.abort = function abort() {
            var this$1 = this;
            for (var i2 = 0, list2 = this$1.modifiedKeys; i2 < list2.length; i2 += 1) {
              var key = list2[i2];
              var value = this$1.originalData[key];
              if (!value) {
                this$1.store.del(key);
              } else {
                this$1.store.put(key, value, true);
              }
            }
          };
          SimpleSyncRWTransaction.prototype.stashOldValue = function stashOldValue(key, value) {
            if (!this.originalData.hasOwnProperty(key)) {
              this.originalData[key] = value;
            }
          };
          SimpleSyncRWTransaction.prototype.markModified = function markModified(key) {
            if (this.modifiedKeys.indexOf(key) === -1) {
              this.modifiedKeys.push(key);
              if (!this.originalData.hasOwnProperty(key)) {
                this.originalData[key] = this.store.get(key);
              }
            }
          };
          var SyncKeyValueFile = function(PreloadFile$$1) {
            function SyncKeyValueFile2(_fs, _path, _flag, _stat, contents) {
              PreloadFile$$1.call(this, _fs, _path, _flag, _stat, contents);
            }
            if (PreloadFile$$1)
              SyncKeyValueFile2.__proto__ = PreloadFile$$1;
            SyncKeyValueFile2.prototype = Object.create(PreloadFile$$1 && PreloadFile$$1.prototype);
            SyncKeyValueFile2.prototype.constructor = SyncKeyValueFile2;
            SyncKeyValueFile2.prototype.syncSync = function syncSync() {
              if (this.isDirty()) {
                this._fs._syncSync(this.getPath(), this.getBuffer(), this.getStats());
                this.resetDirty();
              }
            };
            SyncKeyValueFile2.prototype.closeSync = function closeSync() {
              this.syncSync();
            };
            return SyncKeyValueFile2;
          }(PreloadFile);
          var SyncKeyValueFileSystem = function(SynchronousFileSystem$$1) {
            function SyncKeyValueFileSystem2(options) {
              SynchronousFileSystem$$1.call(this);
              this.store = options.store;
              this.makeRootDirectory();
            }
            if (SynchronousFileSystem$$1)
              SyncKeyValueFileSystem2.__proto__ = SynchronousFileSystem$$1;
            SyncKeyValueFileSystem2.prototype = Object.create(SynchronousFileSystem$$1 && SynchronousFileSystem$$1.prototype);
            SyncKeyValueFileSystem2.prototype.constructor = SyncKeyValueFileSystem2;
            SyncKeyValueFileSystem2.isAvailable = function isAvailable() {
              return true;
            };
            SyncKeyValueFileSystem2.prototype.getName = function getName() {
              return this.store.name();
            };
            SyncKeyValueFileSystem2.prototype.isReadOnly = function isReadOnly() {
              return false;
            };
            SyncKeyValueFileSystem2.prototype.supportsSymlinks = function supportsSymlinks() {
              return false;
            };
            SyncKeyValueFileSystem2.prototype.supportsProps = function supportsProps() {
              return false;
            };
            SyncKeyValueFileSystem2.prototype.supportsSynch = function supportsSynch() {
              return true;
            };
            SyncKeyValueFileSystem2.prototype.empty = function empty() {
              this.store.clear();
              this.makeRootDirectory();
            };
            SyncKeyValueFileSystem2.prototype.renameSync = function renameSync(oldPath, newPath) {
              var tx = this.store.beginTransaction("readwrite"), oldParent = path.dirname(oldPath), oldName = path.basename(oldPath), newParent = path.dirname(newPath), newName = path.basename(newPath), oldDirNode = this.findINode(tx, oldParent), oldDirList = this.getDirListing(tx, oldParent, oldDirNode);
              if (!oldDirList[oldName]) {
                throw ApiError.ENOENT(oldPath);
              }
              var nodeId = oldDirList[oldName];
              delete oldDirList[oldName];
              if ((newParent + "/").indexOf(oldPath + "/") === 0) {
                throw new ApiError(ErrorCode.EBUSY, oldParent);
              }
              var newDirNode, newDirList;
              if (newParent === oldParent) {
                newDirNode = oldDirNode;
                newDirList = oldDirList;
              } else {
                newDirNode = this.findINode(tx, newParent);
                newDirList = this.getDirListing(tx, newParent, newDirNode);
              }
              if (newDirList[newName]) {
                var newNameNode = this.getINode(tx, newPath, newDirList[newName]);
                if (newNameNode.isFile()) {
                  try {
                    tx.del(newNameNode.id);
                    tx.del(newDirList[newName]);
                  } catch (e) {
                    tx.abort();
                    throw e;
                  }
                } else {
                  throw ApiError.EPERM(newPath);
                }
              }
              newDirList[newName] = nodeId;
              try {
                tx.put(oldDirNode.id, Buffer2.from(JSON.stringify(oldDirList)), true);
                tx.put(newDirNode.id, Buffer2.from(JSON.stringify(newDirList)), true);
              } catch (e) {
                tx.abort();
                throw e;
              }
              tx.commit();
            };
            SyncKeyValueFileSystem2.prototype.statSync = function statSync(p, isLstat) {
              return this.findINode(this.store.beginTransaction("readonly"), p).toStats();
            };
            SyncKeyValueFileSystem2.prototype.createFileSync = function createFileSync(p, flag, mode) {
              var tx = this.store.beginTransaction("readwrite"), data = emptyBuffer(), newFile = this.commitNewFile(tx, p, FileType.FILE, mode, data);
              return new SyncKeyValueFile(this, p, flag, newFile.toStats(), data);
            };
            SyncKeyValueFileSystem2.prototype.openFileSync = function openFileSync(p, flag) {
              var tx = this.store.beginTransaction("readonly"), node = this.findINode(tx, p), data = tx.get(node.id);
              if (data === void 0) {
                throw ApiError.ENOENT(p);
              }
              return new SyncKeyValueFile(this, p, flag, node.toStats(), data);
            };
            SyncKeyValueFileSystem2.prototype.unlinkSync = function unlinkSync(p) {
              this.removeEntry(p, false);
            };
            SyncKeyValueFileSystem2.prototype.rmdirSync = function rmdirSync(p) {
              if (this.readdirSync(p).length > 0) {
                throw ApiError.ENOTEMPTY(p);
              } else {
                this.removeEntry(p, true);
              }
            };
            SyncKeyValueFileSystem2.prototype.mkdirSync = function mkdirSync(p, mode) {
              var tx = this.store.beginTransaction("readwrite"), data = Buffer2.from("{}");
              this.commitNewFile(tx, p, FileType.DIRECTORY, mode, data);
            };
            SyncKeyValueFileSystem2.prototype.readdirSync = function readdirSync(p) {
              var tx = this.store.beginTransaction("readonly");
              return Object.keys(this.getDirListing(tx, p, this.findINode(tx, p)));
            };
            SyncKeyValueFileSystem2.prototype._syncSync = function _syncSync(p, data, stats) {
              var tx = this.store.beginTransaction("readwrite"), fileInodeId = this._findINode(tx, path.dirname(p), path.basename(p)), fileInode = this.getINode(tx, p, fileInodeId), inodeChanged = fileInode.update(stats);
              try {
                tx.put(fileInode.id, data, true);
                if (inodeChanged) {
                  tx.put(fileInodeId, fileInode.toBuffer(), true);
                }
              } catch (e) {
                tx.abort();
                throw e;
              }
              tx.commit();
            };
            SyncKeyValueFileSystem2.prototype.makeRootDirectory = function makeRootDirectory() {
              var tx = this.store.beginTransaction("readwrite");
              if (tx.get(ROOT_NODE_ID) === void 0) {
                var currTime = new Date().getTime(), dirInode = new Inode(GenerateRandomID(), 4096, 511 | FileType.DIRECTORY, currTime, currTime, currTime);
                tx.put(dirInode.id, getEmptyDirNode(), false);
                tx.put(ROOT_NODE_ID, dirInode.toBuffer(), false);
                tx.commit();
              }
            };
            SyncKeyValueFileSystem2.prototype._findINode = function _findINode(tx, parent, filename) {
              var this$1 = this;
              var readDirectory = function(inode) {
                var dirList = this$1.getDirListing(tx, parent, inode);
                if (dirList[filename]) {
                  return dirList[filename];
                } else {
                  throw ApiError.ENOENT(path.resolve(parent, filename));
                }
              };
              if (parent === "/") {
                if (filename === "") {
                  return ROOT_NODE_ID;
                } else {
                  return readDirectory(this.getINode(tx, parent, ROOT_NODE_ID));
                }
              } else {
                return readDirectory(this.getINode(tx, parent + path.sep + filename, this._findINode(tx, path.dirname(parent), path.basename(parent))));
              }
            };
            SyncKeyValueFileSystem2.prototype.findINode = function findINode(tx, p) {
              return this.getINode(tx, p, this._findINode(tx, path.dirname(p), path.basename(p)));
            };
            SyncKeyValueFileSystem2.prototype.getINode = function getINode(tx, p, id) {
              var inode = tx.get(id);
              if (inode === void 0) {
                throw ApiError.ENOENT(p);
              }
              return Inode.fromBuffer(inode);
            };
            SyncKeyValueFileSystem2.prototype.getDirListing = function getDirListing(tx, p, inode) {
              if (!inode.isDirectory()) {
                throw ApiError.ENOTDIR(p);
              }
              var data = tx.get(inode.id);
              if (data === void 0) {
                throw ApiError.ENOENT(p);
              }
              return JSON.parse(data.toString());
            };
            SyncKeyValueFileSystem2.prototype.addNewNode = function addNewNode(tx, data) {
              var retries = 0;
              var currId;
              while (retries < 5) {
                try {
                  currId = GenerateRandomID();
                  tx.put(currId, data, false);
                  return currId;
                } catch (e) {
                }
              }
              throw new ApiError(ErrorCode.EIO, "Unable to commit data to key-value store.");
            };
            SyncKeyValueFileSystem2.prototype.commitNewFile = function commitNewFile(tx, p, type, mode, data) {
              var parentDir = path.dirname(p), fname = path.basename(p), parentNode = this.findINode(tx, parentDir), dirListing = this.getDirListing(tx, parentDir, parentNode), currTime = new Date().getTime();
              if (p === "/") {
                throw ApiError.EEXIST(p);
              }
              if (dirListing[fname]) {
                throw ApiError.EEXIST(p);
              }
              var fileNode;
              try {
                var dataId = this.addNewNode(tx, data);
                fileNode = new Inode(dataId, data.length, mode | type, currTime, currTime, currTime);
                var fileNodeId = this.addNewNode(tx, fileNode.toBuffer());
                dirListing[fname] = fileNodeId;
                tx.put(parentNode.id, Buffer2.from(JSON.stringify(dirListing)), true);
              } catch (e) {
                tx.abort();
                throw e;
              }
              tx.commit();
              return fileNode;
            };
            SyncKeyValueFileSystem2.prototype.removeEntry = function removeEntry(p, isDir) {
              var tx = this.store.beginTransaction("readwrite"), parent = path.dirname(p), parentNode = this.findINode(tx, parent), parentListing = this.getDirListing(tx, parent, parentNode), fileName = path.basename(p);
              if (!parentListing[fileName]) {
                throw ApiError.ENOENT(p);
              }
              var fileNodeId = parentListing[fileName];
              delete parentListing[fileName];
              var fileNode = this.getINode(tx, p, fileNodeId);
              if (!isDir && fileNode.isDirectory()) {
                throw ApiError.EISDIR(p);
              } else if (isDir && !fileNode.isDirectory()) {
                throw ApiError.ENOTDIR(p);
              }
              try {
                tx.del(fileNode.id);
                tx.del(fileNodeId);
                tx.put(parentNode.id, Buffer2.from(JSON.stringify(parentListing)), true);
              } catch (e) {
                tx.abort();
                throw e;
              }
              tx.commit();
            };
            return SyncKeyValueFileSystem2;
          }(SynchronousFileSystem);
          var AsyncKeyValueFile = function(PreloadFile$$1) {
            function AsyncKeyValueFile2(_fs, _path, _flag, _stat, contents) {
              PreloadFile$$1.call(this, _fs, _path, _flag, _stat, contents);
            }
            if (PreloadFile$$1)
              AsyncKeyValueFile2.__proto__ = PreloadFile$$1;
            AsyncKeyValueFile2.prototype = Object.create(PreloadFile$$1 && PreloadFile$$1.prototype);
            AsyncKeyValueFile2.prototype.constructor = AsyncKeyValueFile2;
            AsyncKeyValueFile2.prototype.sync = function sync(cb) {
              var this$1 = this;
              if (this.isDirty()) {
                this._fs._sync(this.getPath(), this.getBuffer(), this.getStats(), function(e) {
                  if (!e) {
                    this$1.resetDirty();
                  }
                  cb(e);
                });
              } else {
                cb();
              }
            };
            AsyncKeyValueFile2.prototype.close = function close(cb) {
              this.sync(cb);
            };
            return AsyncKeyValueFile2;
          }(PreloadFile);
          var AsyncKeyValueFileSystem = function(BaseFileSystem$$1) {
            function AsyncKeyValueFileSystem2() {
              BaseFileSystem$$1.apply(this, arguments);
            }
            if (BaseFileSystem$$1)
              AsyncKeyValueFileSystem2.__proto__ = BaseFileSystem$$1;
            AsyncKeyValueFileSystem2.prototype = Object.create(BaseFileSystem$$1 && BaseFileSystem$$1.prototype);
            AsyncKeyValueFileSystem2.prototype.constructor = AsyncKeyValueFileSystem2;
            AsyncKeyValueFileSystem2.isAvailable = function isAvailable() {
              return true;
            };
            AsyncKeyValueFileSystem2.prototype.init = function init(store, cb) {
              this.store = store;
              this.makeRootDirectory(cb);
            };
            AsyncKeyValueFileSystem2.prototype.getName = function getName() {
              return this.store.name();
            };
            AsyncKeyValueFileSystem2.prototype.isReadOnly = function isReadOnly() {
              return false;
            };
            AsyncKeyValueFileSystem2.prototype.supportsSymlinks = function supportsSymlinks() {
              return false;
            };
            AsyncKeyValueFileSystem2.prototype.supportsProps = function supportsProps() {
              return false;
            };
            AsyncKeyValueFileSystem2.prototype.supportsSynch = function supportsSynch() {
              return false;
            };
            AsyncKeyValueFileSystem2.prototype.empty = function empty(cb) {
              var this$1 = this;
              this.store.clear(function(e) {
                if (noError(e, cb)) {
                  this$1.makeRootDirectory(cb);
                }
              });
            };
            AsyncKeyValueFileSystem2.prototype.rename = function rename(oldPath, newPath, cb) {
              var this$1 = this;
              var tx = this.store.beginTransaction("readwrite");
              var oldParent = path.dirname(oldPath), oldName = path.basename(oldPath);
              var newParent = path.dirname(newPath), newName = path.basename(newPath);
              var inodes = {};
              var lists = {};
              var errorOccurred = false;
              if ((newParent + "/").indexOf(oldPath + "/") === 0) {
                return cb(new ApiError(ErrorCode.EBUSY, oldParent));
              }
              var theOleSwitcharoo = function() {
                if (errorOccurred || !lists.hasOwnProperty(oldParent) || !lists.hasOwnProperty(newParent)) {
                  return;
                }
                var oldParentList = lists[oldParent], oldParentINode = inodes[oldParent], newParentList = lists[newParent], newParentINode = inodes[newParent];
                if (!oldParentList[oldName]) {
                  cb(ApiError.ENOENT(oldPath));
                } else {
                  var fileId = oldParentList[oldName];
                  delete oldParentList[oldName];
                  var completeRename = function() {
                    newParentList[newName] = fileId;
                    tx.put(oldParentINode.id, Buffer2.from(JSON.stringify(oldParentList)), true, function(e) {
                      if (noErrorTx(e, tx, cb)) {
                        if (oldParent === newParent) {
                          tx.commit(cb);
                        } else {
                          tx.put(newParentINode.id, Buffer2.from(JSON.stringify(newParentList)), true, function(e2) {
                            if (noErrorTx(e2, tx, cb)) {
                              tx.commit(cb);
                            }
                          });
                        }
                      }
                    });
                  };
                  if (newParentList[newName]) {
                    this$1.getINode(tx, newPath, newParentList[newName], function(e, inode) {
                      if (noErrorTx(e, tx, cb)) {
                        if (inode.isFile()) {
                          tx.del(inode.id, function(e2) {
                            if (noErrorTx(e2, tx, cb)) {
                              tx.del(newParentList[newName], function(e3) {
                                if (noErrorTx(e3, tx, cb)) {
                                  completeRename();
                                }
                              });
                            }
                          });
                        } else {
                          tx.abort(function(e2) {
                            cb(ApiError.EPERM(newPath));
                          });
                        }
                      }
                    });
                  } else {
                    completeRename();
                  }
                }
              };
              var processInodeAndListings = function(p) {
                this$1.findINodeAndDirListing(tx, p, function(e, node, dirList) {
                  if (e) {
                    if (!errorOccurred) {
                      errorOccurred = true;
                      tx.abort(function() {
                        cb(e);
                      });
                    }
                  } else {
                    inodes[p] = node;
                    lists[p] = dirList;
                    theOleSwitcharoo();
                  }
                });
              };
              processInodeAndListings(oldParent);
              if (oldParent !== newParent) {
                processInodeAndListings(newParent);
              }
            };
            AsyncKeyValueFileSystem2.prototype.stat = function stat(p, isLstat, cb) {
              var tx = this.store.beginTransaction("readonly");
              this.findINode(tx, p, function(e, inode) {
                if (noError(e, cb)) {
                  cb(null, inode.toStats());
                }
              });
            };
            AsyncKeyValueFileSystem2.prototype.createFile = function createFile(p, flag, mode, cb) {
              var this$1 = this;
              var tx = this.store.beginTransaction("readwrite"), data = emptyBuffer();
              this.commitNewFile(tx, p, FileType.FILE, mode, data, function(e, newFile) {
                if (noError(e, cb)) {
                  cb(null, new AsyncKeyValueFile(this$1, p, flag, newFile.toStats(), data));
                }
              });
            };
            AsyncKeyValueFileSystem2.prototype.openFile = function openFile(p, flag, cb) {
              var this$1 = this;
              var tx = this.store.beginTransaction("readonly");
              this.findINode(tx, p, function(e, inode) {
                if (noError(e, cb)) {
                  tx.get(inode.id, function(e2, data) {
                    if (noError(e2, cb)) {
                      if (data === void 0) {
                        cb(ApiError.ENOENT(p));
                      } else {
                        cb(null, new AsyncKeyValueFile(this$1, p, flag, inode.toStats(), data));
                      }
                    }
                  });
                }
              });
            };
            AsyncKeyValueFileSystem2.prototype.unlink = function unlink(p, cb) {
              this.removeEntry(p, false, cb);
            };
            AsyncKeyValueFileSystem2.prototype.rmdir = function rmdir(p, cb) {
              var this$1 = this;
              this.readdir(p, function(err, files) {
                if (err) {
                  cb(err);
                } else if (files.length > 0) {
                  cb(ApiError.ENOTEMPTY(p));
                } else {
                  this$1.removeEntry(p, true, cb);
                }
              });
            };
            AsyncKeyValueFileSystem2.prototype.mkdir = function mkdir(p, mode, cb) {
              var tx = this.store.beginTransaction("readwrite"), data = Buffer2.from("{}");
              this.commitNewFile(tx, p, FileType.DIRECTORY, mode, data, cb);
            };
            AsyncKeyValueFileSystem2.prototype.readdir = function readdir(p, cb) {
              var this$1 = this;
              var tx = this.store.beginTransaction("readonly");
              this.findINode(tx, p, function(e, inode) {
                if (noError(e, cb)) {
                  this$1.getDirListing(tx, p, inode, function(e2, dirListing) {
                    if (noError(e2, cb)) {
                      cb(null, Object.keys(dirListing));
                    }
                  });
                }
              });
            };
            AsyncKeyValueFileSystem2.prototype._sync = function _sync(p, data, stats, cb) {
              var this$1 = this;
              var tx = this.store.beginTransaction("readwrite");
              this._findINode(tx, path.dirname(p), path.basename(p), function(e, fileInodeId) {
                if (noErrorTx(e, tx, cb)) {
                  this$1.getINode(tx, p, fileInodeId, function(e2, fileInode) {
                    if (noErrorTx(e2, tx, cb)) {
                      var inodeChanged = fileInode.update(stats);
                      tx.put(fileInode.id, data, true, function(e3) {
                        if (noErrorTx(e3, tx, cb)) {
                          if (inodeChanged) {
                            tx.put(fileInodeId, fileInode.toBuffer(), true, function(e4) {
                              if (noErrorTx(e4, tx, cb)) {
                                tx.commit(cb);
                              }
                            });
                          } else {
                            tx.commit(cb);
                          }
                        }
                      });
                    }
                  });
                }
              });
            };
            AsyncKeyValueFileSystem2.prototype.makeRootDirectory = function makeRootDirectory(cb) {
              var tx = this.store.beginTransaction("readwrite");
              tx.get(ROOT_NODE_ID, function(e, data) {
                if (e || data === void 0) {
                  var currTime = new Date().getTime(), dirInode = new Inode(GenerateRandomID(), 4096, 511 | FileType.DIRECTORY, currTime, currTime, currTime);
                  tx.put(dirInode.id, getEmptyDirNode(), false, function(e2) {
                    if (noErrorTx(e2, tx, cb)) {
                      tx.put(ROOT_NODE_ID, dirInode.toBuffer(), false, function(e3) {
                        if (e3) {
                          tx.abort(function() {
                            cb(e3);
                          });
                        } else {
                          tx.commit(cb);
                        }
                      });
                    }
                  });
                } else {
                  tx.commit(cb);
                }
              });
            };
            AsyncKeyValueFileSystem2.prototype._findINode = function _findINode(tx, parent, filename, cb) {
              var this$1 = this;
              var handleDirectoryListings = function(e, inode, dirList) {
                if (e) {
                  cb(e);
                } else if (dirList[filename]) {
                  cb(null, dirList[filename]);
                } else {
                  cb(ApiError.ENOENT(path.resolve(parent, filename)));
                }
              };
              if (parent === "/") {
                if (filename === "") {
                  cb(null, ROOT_NODE_ID);
                } else {
                  this.getINode(tx, parent, ROOT_NODE_ID, function(e, inode) {
                    if (noError(e, cb)) {
                      this$1.getDirListing(tx, parent, inode, function(e2, dirList) {
                        handleDirectoryListings(e2, inode, dirList);
                      });
                    }
                  });
                }
              } else {
                this.findINodeAndDirListing(tx, parent, handleDirectoryListings);
              }
            };
            AsyncKeyValueFileSystem2.prototype.findINode = function findINode(tx, p, cb) {
              var this$1 = this;
              this._findINode(tx, path.dirname(p), path.basename(p), function(e, id) {
                if (noError(e, cb)) {
                  this$1.getINode(tx, p, id, cb);
                }
              });
            };
            AsyncKeyValueFileSystem2.prototype.getINode = function getINode(tx, p, id, cb) {
              tx.get(id, function(e, data) {
                if (noError(e, cb)) {
                  if (data === void 0) {
                    cb(ApiError.ENOENT(p));
                  } else {
                    cb(null, Inode.fromBuffer(data));
                  }
                }
              });
            };
            AsyncKeyValueFileSystem2.prototype.getDirListing = function getDirListing(tx, p, inode, cb) {
              if (!inode.isDirectory()) {
                cb(ApiError.ENOTDIR(p));
              } else {
                tx.get(inode.id, function(e, data) {
                  if (noError(e, cb)) {
                    try {
                      cb(null, JSON.parse(data.toString()));
                    } catch (e2) {
                      cb(ApiError.ENOENT(p));
                    }
                  }
                });
              }
            };
            AsyncKeyValueFileSystem2.prototype.findINodeAndDirListing = function findINodeAndDirListing(tx, p, cb) {
              var this$1 = this;
              this.findINode(tx, p, function(e, inode) {
                if (noError(e, cb)) {
                  this$1.getDirListing(tx, p, inode, function(e2, listing) {
                    if (noError(e2, cb)) {
                      cb(null, inode, listing);
                    }
                  });
                }
              });
            };
            AsyncKeyValueFileSystem2.prototype.addNewNode = function addNewNode(tx, data, cb) {
              var retries = 0, currId;
              var reroll = function() {
                if (++retries === 5) {
                  cb(new ApiError(ErrorCode.EIO, "Unable to commit data to key-value store."));
                } else {
                  currId = GenerateRandomID();
                  tx.put(currId, data, false, function(e, committed) {
                    if (e || !committed) {
                      reroll();
                    } else {
                      cb(null, currId);
                    }
                  });
                }
              };
              reroll();
            };
            AsyncKeyValueFileSystem2.prototype.commitNewFile = function commitNewFile(tx, p, type, mode, data, cb) {
              var this$1 = this;
              var parentDir = path.dirname(p), fname = path.basename(p), currTime = new Date().getTime();
              if (p === "/") {
                return cb(ApiError.EEXIST(p));
              }
              this.findINodeAndDirListing(tx, parentDir, function(e, parentNode, dirListing) {
                if (noErrorTx(e, tx, cb)) {
                  if (dirListing[fname]) {
                    tx.abort(function() {
                      cb(ApiError.EEXIST(p));
                    });
                  } else {
                    this$1.addNewNode(tx, data, function(e2, dataId) {
                      if (noErrorTx(e2, tx, cb)) {
                        var fileInode = new Inode(dataId, data.length, mode | type, currTime, currTime, currTime);
                        this$1.addNewNode(tx, fileInode.toBuffer(), function(e3, fileInodeId) {
                          if (noErrorTx(e3, tx, cb)) {
                            dirListing[fname] = fileInodeId;
                            tx.put(parentNode.id, Buffer2.from(JSON.stringify(dirListing)), true, function(e4) {
                              if (noErrorTx(e4, tx, cb)) {
                                tx.commit(function(e5) {
                                  if (noErrorTx(e5, tx, cb)) {
                                    cb(null, fileInode);
                                  }
                                });
                              }
                            });
                          }
                        });
                      }
                    });
                  }
                }
              });
            };
            AsyncKeyValueFileSystem2.prototype.removeEntry = function removeEntry(p, isDir, cb) {
              var this$1 = this;
              var tx = this.store.beginTransaction("readwrite"), parent = path.dirname(p), fileName = path.basename(p);
              this.findINodeAndDirListing(tx, parent, function(e, parentNode, parentListing) {
                if (noErrorTx(e, tx, cb)) {
                  if (!parentListing[fileName]) {
                    tx.abort(function() {
                      cb(ApiError.ENOENT(p));
                    });
                  } else {
                    var fileNodeId = parentListing[fileName];
                    delete parentListing[fileName];
                    this$1.getINode(tx, p, fileNodeId, function(e2, fileNode) {
                      if (noErrorTx(e2, tx, cb)) {
                        if (!isDir && fileNode.isDirectory()) {
                          tx.abort(function() {
                            cb(ApiError.EISDIR(p));
                          });
                        } else if (isDir && !fileNode.isDirectory()) {
                          tx.abort(function() {
                            cb(ApiError.ENOTDIR(p));
                          });
                        } else {
                          tx.del(fileNode.id, function(e3) {
                            if (noErrorTx(e3, tx, cb)) {
                              tx.del(fileNodeId, function(e4) {
                                if (noErrorTx(e4, tx, cb)) {
                                  tx.put(parentNode.id, Buffer2.from(JSON.stringify(parentListing)), true, function(e5) {
                                    if (noErrorTx(e5, tx, cb)) {
                                      tx.commit(cb);
                                    }
                                  });
                                }
                              });
                            }
                          });
                        }
                      }
                    });
                  }
                }
              });
            };
            return AsyncKeyValueFileSystem2;
          }(BaseFileSystem);
          var InMemoryStore = function InMemoryStore2() {
            this.store = {};
          };
          InMemoryStore.prototype.name = function name3() {
            return InMemoryFileSystem.Name;
          };
          InMemoryStore.prototype.clear = function clear() {
            this.store = {};
          };
          InMemoryStore.prototype.beginTransaction = function beginTransaction(type) {
            return new SimpleSyncRWTransaction(this);
          };
          InMemoryStore.prototype.get = function get(key) {
            return this.store[key];
          };
          InMemoryStore.prototype.put = function put(key, data, overwrite) {
            if (!overwrite && this.store.hasOwnProperty(key)) {
              return false;
            }
            this.store[key] = data;
            return true;
          };
          InMemoryStore.prototype.del = function del(key) {
            delete this.store[key];
          };
          var InMemoryFileSystem = function(SyncKeyValueFileSystem$$1) {
            function InMemoryFileSystem2() {
              SyncKeyValueFileSystem$$1.call(this, { store: new InMemoryStore() });
            }
            if (SyncKeyValueFileSystem$$1)
              InMemoryFileSystem2.__proto__ = SyncKeyValueFileSystem$$1;
            InMemoryFileSystem2.prototype = Object.create(SyncKeyValueFileSystem$$1 && SyncKeyValueFileSystem$$1.prototype);
            InMemoryFileSystem2.prototype.constructor = InMemoryFileSystem2;
            InMemoryFileSystem2.Create = function Create(options, cb) {
              cb(null, new InMemoryFileSystem2());
            };
            return InMemoryFileSystem2;
          }(SyncKeyValueFileSystem);
          InMemoryFileSystem.Name = "InMemory";
          InMemoryFileSystem.Options = {};
          var indexedDB = global$1.indexedDB || global$1.mozIndexedDB || global$1.webkitIndexedDB || global$1.msIndexedDB;
          function convertError$2(e, message4) {
            if (message4 === void 0)
              message4 = e.toString();
            switch (e.name) {
              case "NotFoundError":
                return new ApiError(ErrorCode.ENOENT, message4);
              case "QuotaExceededError":
                return new ApiError(ErrorCode.ENOSPC, message4);
              default:
                return new ApiError(ErrorCode.EIO, message4);
            }
          }
          function onErrorHandler(cb, code, message4) {
            if (code === void 0)
              code = ErrorCode.EIO;
            if (message4 === void 0)
              message4 = null;
            return function(e) {
              e.preventDefault();
              cb(new ApiError(code, message4 !== null ? message4 : void 0));
            };
          }
          var IndexedDBROTransaction = function IndexedDBROTransaction2(tx, store) {
            this.tx = tx;
            this.store = store;
          };
          IndexedDBROTransaction.prototype.get = function get(key, cb) {
            try {
              var r = this.store.get(key);
              r.onerror = onErrorHandler(cb);
              r.onsuccess = function(event) {
                var result = event.target.result;
                if (result === void 0) {
                  cb(null, result);
                } else {
                  cb(null, arrayBuffer2Buffer(result));
                }
              };
            } catch (e) {
              cb(convertError$2(e));
            }
          };
          var IndexedDBRWTransaction = function(IndexedDBROTransaction2) {
            function IndexedDBRWTransaction2(tx, store) {
              IndexedDBROTransaction2.call(this, tx, store);
            }
            if (IndexedDBROTransaction2)
              IndexedDBRWTransaction2.__proto__ = IndexedDBROTransaction2;
            IndexedDBRWTransaction2.prototype = Object.create(IndexedDBROTransaction2 && IndexedDBROTransaction2.prototype);
            IndexedDBRWTransaction2.prototype.constructor = IndexedDBRWTransaction2;
            IndexedDBRWTransaction2.prototype.put = function put(key, data, overwrite, cb) {
              try {
                var arraybuffer = buffer2ArrayBuffer(data);
                var r;
                if (overwrite) {
                  r = this.store.put(arraybuffer, key);
                } else {
                  r = this.store.add(arraybuffer, key);
                }
                r.onerror = onErrorHandler(cb);
                r.onsuccess = function(event) {
                  cb(null, true);
                };
              } catch (e) {
                cb(convertError$2(e));
              }
            };
            IndexedDBRWTransaction2.prototype.del = function del(key, cb) {
              try {
                var r = this.store["delete"](key);
                r.onerror = onErrorHandler(cb);
                r.onsuccess = function(event) {
                  cb();
                };
              } catch (e) {
                cb(convertError$2(e));
              }
            };
            IndexedDBRWTransaction2.prototype.commit = function commit(cb) {
              setTimeout(cb, 0);
            };
            IndexedDBRWTransaction2.prototype.abort = function abort(cb) {
              var _e = null;
              try {
                this.tx.abort();
              } catch (e) {
                _e = convertError$2(e);
              } finally {
                cb(_e);
              }
            };
            return IndexedDBRWTransaction2;
          }(IndexedDBROTransaction);
          var IndexedDBStore = function IndexedDBStore2(cb, storeName) {
            var this$1 = this;
            if (storeName === void 0)
              storeName = "browserfs";
            this.storeName = storeName;
            var openReq = indexedDB.open(this.storeName, 1);
            openReq.onupgradeneeded = function(event) {
              var db = event.target.result;
              if (db.objectStoreNames.contains(this$1.storeName)) {
                db.deleteObjectStore(this$1.storeName);
              }
              db.createObjectStore(this$1.storeName);
            };
            openReq.onsuccess = function(event) {
              this$1.db = event.target.result;
              cb(null, this$1);
            };
            openReq.onerror = onErrorHandler(cb, ErrorCode.EACCES);
          };
          IndexedDBStore.prototype.name = function name3() {
            return IndexedDBFileSystem.Name + " - " + this.storeName;
          };
          IndexedDBStore.prototype.clear = function clear(cb) {
            try {
              var tx = this.db.transaction(this.storeName, "readwrite"), objectStore = tx.objectStore(this.storeName), r = objectStore.clear();
              r.onsuccess = function(event) {
                setTimeout(cb, 0);
              };
              r.onerror = onErrorHandler(cb);
            } catch (e) {
              cb(convertError$2(e));
            }
          };
          IndexedDBStore.prototype.beginTransaction = function beginTransaction(type) {
            if (type === void 0)
              type = "readonly";
            var tx = this.db.transaction(this.storeName, type), objectStore = tx.objectStore(this.storeName);
            if (type === "readwrite") {
              return new IndexedDBRWTransaction(tx, objectStore);
            } else if (type === "readonly") {
              return new IndexedDBROTransaction(tx, objectStore);
            } else {
              throw new ApiError(ErrorCode.EINVAL, "Invalid transaction type.");
            }
          };
          var IndexedDBFileSystem = function(AsyncKeyValueFileSystem$$1) {
            function IndexedDBFileSystem2(cb, storeName, deprecateMsg) {
              var this$1 = this;
              if (deprecateMsg === void 0)
                deprecateMsg = true;
              AsyncKeyValueFileSystem$$1.call(this);
              this.store = new IndexedDBStore(function(e) {
                if (e) {
                  cb(e);
                } else {
                  this$1.init(this$1.store, function(e2) {
                    cb(e2, this$1);
                  });
                }
              }, storeName);
              deprecationMessage(deprecateMsg, IndexedDBFileSystem2.Name, { storeName });
            }
            if (AsyncKeyValueFileSystem$$1)
              IndexedDBFileSystem2.__proto__ = AsyncKeyValueFileSystem$$1;
            IndexedDBFileSystem2.prototype = Object.create(AsyncKeyValueFileSystem$$1 && AsyncKeyValueFileSystem$$1.prototype);
            IndexedDBFileSystem2.prototype.constructor = IndexedDBFileSystem2;
            IndexedDBFileSystem2.Create = function Create(opts, cb) {
              new IndexedDBFileSystem2(cb, opts.storeName, false);
            };
            IndexedDBFileSystem2.isAvailable = function isAvailable() {
              try {
                return typeof indexedDB !== "undefined" && null !== indexedDB.open("__browserfs_test__");
              } catch (e) {
                return false;
              }
            };
            return IndexedDBFileSystem2;
          }(AsyncKeyValueFileSystem);
          IndexedDBFileSystem.Name = "IndexedDB";
          IndexedDBFileSystem.Options = { storeName: { type: "string", optional: true, description: "The name of this file system. You can have multiple IndexedDB file systems operating at once, but each must have a different name." } };
          var supportsBinaryString = false;
          var binaryEncoding;
          try {
            global$1.localStorage.setItem("__test__", String.fromCharCode(55296));
            supportsBinaryString = global$1.localStorage.getItem("__test__") === String.fromCharCode(55296);
          } catch (e) {
            supportsBinaryString = false;
          }
          binaryEncoding = supportsBinaryString ? "binary_string" : "binary_string_ie";
          if (!Buffer2.isEncoding(binaryEncoding)) {
            binaryEncoding = "base64";
          }
          var LocalStorageStore = function LocalStorageStore2() {
          };
          LocalStorageStore.prototype.name = function name3() {
            return LocalStorageFileSystem.Name;
          };
          LocalStorageStore.prototype.clear = function clear() {
            global$1.localStorage.clear();
          };
          LocalStorageStore.prototype.beginTransaction = function beginTransaction(type) {
            return new SimpleSyncRWTransaction(this);
          };
          LocalStorageStore.prototype.get = function get(key) {
            try {
              var data = global$1.localStorage.getItem(key);
              if (data !== null) {
                return Buffer2.from(data, binaryEncoding);
              }
            } catch (e) {
            }
            return void 0;
          };
          LocalStorageStore.prototype.put = function put(key, data, overwrite) {
            try {
              if (!overwrite && global$1.localStorage.getItem(key) !== null) {
                return false;
              }
              global$1.localStorage.setItem(key, data.toString(binaryEncoding));
              return true;
            } catch (e) {
              throw new ApiError(ErrorCode.ENOSPC, "LocalStorage is full.");
            }
          };
          LocalStorageStore.prototype.del = function del(key) {
            try {
              global$1.localStorage.removeItem(key);
            } catch (e) {
              throw new ApiError(ErrorCode.EIO, "Unable to delete key " + key + ": " + e);
            }
          };
          var LocalStorageFileSystem = function(SyncKeyValueFileSystem$$1) {
            function LocalStorageFileSystem2() {
              SyncKeyValueFileSystem$$1.call(this, { store: new LocalStorageStore() });
            }
            if (SyncKeyValueFileSystem$$1)
              LocalStorageFileSystem2.__proto__ = SyncKeyValueFileSystem$$1;
            LocalStorageFileSystem2.prototype = Object.create(SyncKeyValueFileSystem$$1 && SyncKeyValueFileSystem$$1.prototype);
            LocalStorageFileSystem2.prototype.constructor = LocalStorageFileSystem2;
            LocalStorageFileSystem2.Create = function Create(options, cb) {
              cb(null, new LocalStorageFileSystem2());
            };
            LocalStorageFileSystem2.isAvailable = function isAvailable() {
              return typeof global$1.localStorage !== "undefined";
            };
            return LocalStorageFileSystem2;
          }(SyncKeyValueFileSystem);
          LocalStorageFileSystem.Name = "LocalStorage";
          LocalStorageFileSystem.Options = {};
          var MountableFileSystem = function(BaseFileSystem$$1) {
            function MountableFileSystem2() {
              BaseFileSystem$$1.call(this);
              this.mountList = [];
              this.mntMap = {};
              this.rootFs = new InMemoryFileSystem();
            }
            if (BaseFileSystem$$1)
              MountableFileSystem2.__proto__ = BaseFileSystem$$1;
            MountableFileSystem2.prototype = Object.create(BaseFileSystem$$1 && BaseFileSystem$$1.prototype);
            MountableFileSystem2.prototype.constructor = MountableFileSystem2;
            MountableFileSystem2.Create = function Create(opts, cb) {
              var fs4 = new MountableFileSystem2();
              Object.keys(opts).forEach(function(mountPoint) {
                fs4.mount(mountPoint, opts[mountPoint]);
              });
              cb(null, fs4);
            };
            MountableFileSystem2.isAvailable = function isAvailable() {
              return true;
            };
            MountableFileSystem2.prototype.mount = function mount(mountPoint, fs4) {
              if (mountPoint[0] !== "/") {
                mountPoint = "/" + mountPoint;
              }
              mountPoint = path.resolve(mountPoint);
              if (this.mntMap[mountPoint]) {
                throw new ApiError(ErrorCode.EINVAL, "Mount point " + mountPoint + " is already taken.");
              }
              mkdirpSync(mountPoint, 511, this.rootFs);
              this.mntMap[mountPoint] = fs4;
              this.mountList.push(mountPoint);
              this.mountList = this.mountList.sort(function(a, b2) {
                return b2.length - a.length;
              });
            };
            MountableFileSystem2.prototype.umount = function umount(mountPoint) {
              var this$1 = this;
              if (mountPoint[0] !== "/") {
                mountPoint = "/" + mountPoint;
              }
              mountPoint = path.resolve(mountPoint);
              if (!this.mntMap[mountPoint]) {
                throw new ApiError(ErrorCode.EINVAL, "Mount point " + mountPoint + " is already unmounted.");
              }
              delete this.mntMap[mountPoint];
              this.mountList.splice(this.mountList.indexOf(mountPoint), 1);
              while (mountPoint !== "/") {
                if (this$1.rootFs.readdirSync(mountPoint).length === 0) {
                  this$1.rootFs.rmdirSync(mountPoint);
                  mountPoint = path.dirname(mountPoint);
                } else {
                  break;
                }
              }
            };
            MountableFileSystem2.prototype._getFs = function _getFs(path$$1) {
              var this$1 = this;
              var mountList = this.mountList, len = mountList.length;
              for (var i2 = 0; i2 < len; i2++) {
                var mountPoint = mountList[i2];
                if (mountPoint.length <= path$$1.length && path$$1.indexOf(mountPoint) === 0) {
                  path$$1 = path$$1.substr(mountPoint.length > 1 ? mountPoint.length : 0);
                  if (path$$1 === "") {
                    path$$1 = "/";
                  }
                  return { fs: this$1.mntMap[mountPoint], path: path$$1 };
                }
              }
              return { fs: this.rootFs, path: path$$1 };
            };
            MountableFileSystem2.prototype.getName = function getName() {
              return MountableFileSystem2.Name;
            };
            MountableFileSystem2.prototype.diskSpace = function diskSpace(path$$1, cb) {
              cb(0, 0);
            };
            MountableFileSystem2.prototype.isReadOnly = function isReadOnly() {
              return false;
            };
            MountableFileSystem2.prototype.supportsLinks = function supportsLinks() {
              return false;
            };
            MountableFileSystem2.prototype.supportsProps = function supportsProps() {
              return false;
            };
            MountableFileSystem2.prototype.supportsSynch = function supportsSynch() {
              return true;
            };
            MountableFileSystem2.prototype.standardizeError = function standardizeError(err, path$$1, realPath) {
              var index = err.message.indexOf(path$$1);
              if (index !== -1) {
                err.message = err.message.substr(0, index) + realPath + err.message.substr(index + path$$1.length);
                err.path = realPath;
              }
              return err;
            };
            MountableFileSystem2.prototype.rename = function rename(oldPath, newPath, cb) {
              var this$1 = this;
              var fs1rv = this._getFs(oldPath);
              var fs2rv = this._getFs(newPath);
              if (fs1rv.fs === fs2rv.fs) {
                return fs1rv.fs.rename(fs1rv.path, fs2rv.path, function(e) {
                  if (e) {
                    this$1.standardizeError(this$1.standardizeError(e, fs1rv.path, oldPath), fs2rv.path, newPath);
                  }
                  cb(e);
                });
              }
              return _fsMock.readFile(oldPath, function(err, data) {
                if (err) {
                  return cb(err);
                }
                _fsMock.writeFile(newPath, data, function(err2) {
                  if (err2) {
                    return cb(err2);
                  }
                  _fsMock.unlink(oldPath, cb);
                });
              });
            };
            MountableFileSystem2.prototype.renameSync = function renameSync(oldPath, newPath) {
              var fs1rv = this._getFs(oldPath);
              var fs2rv = this._getFs(newPath);
              if (fs1rv.fs === fs2rv.fs) {
                try {
                  return fs1rv.fs.renameSync(fs1rv.path, fs2rv.path);
                } catch (e) {
                  this.standardizeError(this.standardizeError(e, fs1rv.path, oldPath), fs2rv.path, newPath);
                  throw e;
                }
              }
              var data = _fsMock.readFileSync(oldPath);
              _fsMock.writeFileSync(newPath, data);
              return _fsMock.unlinkSync(oldPath);
            };
            MountableFileSystem2.prototype.readdirSync = function readdirSync(p) {
              var fsInfo = this._getFs(p);
              var rv = null;
              if (fsInfo.fs !== this.rootFs) {
                try {
                  rv = this.rootFs.readdirSync(p);
                } catch (e) {
                }
              }
              try {
                var rv2 = fsInfo.fs.readdirSync(fsInfo.path);
                if (rv === null) {
                  return rv2;
                } else {
                  return rv2.concat(rv.filter(function(val) {
                    return rv2.indexOf(val) === -1;
                  }));
                }
              } catch (e) {
                if (rv === null) {
                  throw this.standardizeError(e, fsInfo.path, p);
                } else {
                  return rv;
                }
              }
            };
            MountableFileSystem2.prototype.readdir = function readdir(p, cb) {
              var this$1 = this;
              var fsInfo = this._getFs(p);
              fsInfo.fs.readdir(fsInfo.path, function(err, files) {
                if (fsInfo.fs !== this$1.rootFs) {
                  try {
                    var rv = this$1.rootFs.readdirSync(p);
                    if (files) {
                      files = files.concat(rv.filter(function(val) {
                        return files.indexOf(val) === -1;
                      }));
                    } else {
                      files = rv;
                    }
                  } catch (e) {
                    if (err) {
                      return cb(this$1.standardizeError(err, fsInfo.path, p));
                    }
                  }
                } else if (err) {
                  return cb(this$1.standardizeError(err, fsInfo.path, p));
                }
                cb(null, files);
              });
            };
            MountableFileSystem2.prototype.rmdirSync = function rmdirSync(p) {
              var fsInfo = this._getFs(p);
              if (this._containsMountPt(p)) {
                throw ApiError.ENOTEMPTY(p);
              } else {
                try {
                  fsInfo.fs.rmdirSync(fsInfo.path);
                } catch (e) {
                  throw this.standardizeError(e, fsInfo.path, p);
                }
              }
            };
            MountableFileSystem2.prototype.rmdir = function rmdir(p, cb) {
              var this$1 = this;
              var fsInfo = this._getFs(p);
              if (this._containsMountPt(p)) {
                cb(ApiError.ENOTEMPTY(p));
              } else {
                fsInfo.fs.rmdir(fsInfo.path, function(err) {
                  cb(err ? this$1.standardizeError(err, fsInfo.path, p) : null);
                });
              }
            };
            MountableFileSystem2.prototype._containsMountPt = function _containsMountPt(p) {
              var mountPoints = this.mountList, len = mountPoints.length;
              for (var i2 = 0; i2 < len; i2++) {
                var pt = mountPoints[i2];
                if (pt.length >= p.length && pt.slice(0, p.length) === p) {
                  return true;
                }
              }
              return false;
            };
            return MountableFileSystem2;
          }(BaseFileSystem);
          MountableFileSystem.Name = "MountableFileSystem";
          MountableFileSystem.Options = {};
          function defineFcn(name3, isSync, numArgs) {
            if (isSync) {
              return function() {
                var args = [], len = arguments.length;
                while (len--)
                  args[len] = arguments[len];
                var path$$1 = args[0];
                var rv = this._getFs(path$$1);
                args[0] = rv.path;
                try {
                  return rv.fs[name3].apply(rv.fs, args);
                } catch (e) {
                  this.standardizeError(e, rv.path, path$$1);
                  throw e;
                }
              };
            } else {
              return function() {
                var this$1 = this;
                var args = [], len = arguments.length;
                while (len--)
                  args[len] = arguments[len];
                var path$$1 = args[0];
                var rv = this._getFs(path$$1);
                args[0] = rv.path;
                if (typeof args[args.length - 1] === "function") {
                  var cb = args[args.length - 1];
                  args[args.length - 1] = function() {
                    var args2 = [], len2 = arguments.length;
                    while (len2--)
                      args2[len2] = arguments[len2];
                    if (args2.length > 0 && args2[0] instanceof ApiError) {
                      this$1.standardizeError(args2[0], rv.path, path$$1);
                    }
                    cb.apply(null, args2);
                  };
                }
                return rv.fs[name3].apply(rv.fs, args);
              };
            }
          }
          var fsCmdMap = [["exists", "unlink", "readlink"], ["stat", "mkdir", "realpath", "truncate"], ["open", "readFile", "chmod", "utimes"], ["chown"], ["writeFile", "appendFile"]];
          for (var i = 0; i < fsCmdMap.length; i++) {
            var cmds = fsCmdMap[i];
            for (var i$1 = 0, list = cmds; i$1 < list.length; i$1 += 1) {
              var fnName = list[i$1];
              MountableFileSystem.prototype[fnName] = defineFcn(fnName, false, i + 1);
              MountableFileSystem.prototype[fnName + "Sync"] = defineFcn(fnName + "Sync", true, i + 1);
            }
          }
          var bfsSetImmediate;
          if (typeof setImmediate !== "undefined") {
            bfsSetImmediate = setImmediate;
          } else {
            var gScope = global$1;
            var timeouts = [];
            var messageName = "zero-timeout-message";
            var canUsePostMessage = function() {
              if (typeof gScope.importScripts !== "undefined" || !gScope.postMessage) {
                return false;
              }
              var postMessageIsAsync = true;
              var oldOnMessage = gScope.onmessage;
              gScope.onmessage = function() {
                postMessageIsAsync = false;
              };
              gScope.postMessage("", "*");
              gScope.onmessage = oldOnMessage;
              return postMessageIsAsync;
            };
            if (canUsePostMessage()) {
              bfsSetImmediate = function(fn) {
                timeouts.push(fn);
                gScope.postMessage(messageName, "*");
              };
              var handleMessage = function(event) {
                if (event.source === self && event.data === messageName) {
                  if (event.stopPropagation) {
                    event.stopPropagation();
                  } else {
                    event.cancelBubble = true;
                  }
                  if (timeouts.length > 0) {
                    var fn = timeouts.shift();
                    return fn();
                  }
                }
              };
              if (gScope.addEventListener) {
                gScope.addEventListener("message", handleMessage, true);
              } else {
                gScope.attachEvent("onmessage", handleMessage);
              }
            } else if (gScope.MessageChannel) {
              var channel = new gScope.MessageChannel();
              channel.port1.onmessage = function(event) {
                if (timeouts.length > 0) {
                  return timeouts.shift()();
                }
              };
              bfsSetImmediate = function(fn) {
                timeouts.push(fn);
                channel.port2.postMessage("");
              };
            } else {
              bfsSetImmediate = function(fn) {
                return setTimeout(fn, 0);
              };
            }
          }
          var setImmediate$3 = bfsSetImmediate;
          var Mutex = function Mutex2() {
            this._locked = false;
            this._waiters = [];
          };
          Mutex.prototype.lock = function lock(cb) {
            if (this._locked) {
              this._waiters.push(cb);
              return;
            }
            this._locked = true;
            cb();
          };
          Mutex.prototype.unlock = function unlock() {
            if (!this._locked) {
              throw new Error("unlock of a non-locked mutex");
            }
            var next = this._waiters.shift();
            if (next) {
              setImmediate$3(next);
              return;
            }
            this._locked = false;
          };
          Mutex.prototype.tryLock = function tryLock() {
            if (this._locked) {
              return false;
            }
            this._locked = true;
            return true;
          };
          Mutex.prototype.isLocked = function isLocked() {
            return this._locked;
          };
          var LockedFS = function LockedFS2(fs4) {
            this._fs = fs4;
            this._mu = new Mutex();
          };
          LockedFS.prototype.getName = function getName() {
            return "LockedFS<" + this._fs.getName() + ">";
          };
          LockedFS.prototype.getFSUnlocked = function getFSUnlocked() {
            return this._fs;
          };
          LockedFS.prototype.initialize = function initialize3(cb) {
            this._fs.initialize(cb);
          };
          LockedFS.prototype.diskSpace = function diskSpace(p, cb) {
            this._fs.diskSpace(p, cb);
          };
          LockedFS.prototype.isReadOnly = function isReadOnly() {
            return this._fs.isReadOnly();
          };
          LockedFS.prototype.supportsLinks = function supportsLinks() {
            return this._fs.supportsLinks();
          };
          LockedFS.prototype.supportsProps = function supportsProps() {
            return this._fs.supportsProps();
          };
          LockedFS.prototype.supportsSynch = function supportsSynch() {
            return this._fs.supportsSynch();
          };
          LockedFS.prototype.rename = function rename(oldPath, newPath, cb) {
            var this$1 = this;
            this._mu.lock(function() {
              this$1._fs.rename(oldPath, newPath, function(err) {
                this$1._mu.unlock();
                cb(err);
              });
            });
          };
          LockedFS.prototype.renameSync = function renameSync(oldPath, newPath) {
            if (this._mu.isLocked()) {
              throw new Error("invalid sync call");
            }
            return this._fs.renameSync(oldPath, newPath);
          };
          LockedFS.prototype.stat = function stat(p, isLstat, cb) {
            var this$1 = this;
            this._mu.lock(function() {
              this$1._fs.stat(p, isLstat, function(err, stat2) {
                this$1._mu.unlock();
                cb(err, stat2);
              });
            });
          };
          LockedFS.prototype.statSync = function statSync(p, isLstat) {
            if (this._mu.isLocked()) {
              throw new Error("invalid sync call");
            }
            return this._fs.statSync(p, isLstat);
          };
          LockedFS.prototype.open = function open(p, flag, mode, cb) {
            var this$1 = this;
            this._mu.lock(function() {
              this$1._fs.open(p, flag, mode, function(err, fd) {
                this$1._mu.unlock();
                cb(err, fd);
              });
            });
          };
          LockedFS.prototype.openSync = function openSync(p, flag, mode) {
            if (this._mu.isLocked()) {
              throw new Error("invalid sync call");
            }
            return this._fs.openSync(p, flag, mode);
          };
          LockedFS.prototype.unlink = function unlink(p, cb) {
            var this$1 = this;
            this._mu.lock(function() {
              this$1._fs.unlink(p, function(err) {
                this$1._mu.unlock();
                cb(err);
              });
            });
          };
          LockedFS.prototype.unlinkSync = function unlinkSync(p) {
            if (this._mu.isLocked()) {
              throw new Error("invalid sync call");
            }
            return this._fs.unlinkSync(p);
          };
          LockedFS.prototype.rmdir = function rmdir(p, cb) {
            var this$1 = this;
            this._mu.lock(function() {
              this$1._fs.rmdir(p, function(err) {
                this$1._mu.unlock();
                cb(err);
              });
            });
          };
          LockedFS.prototype.rmdirSync = function rmdirSync(p) {
            if (this._mu.isLocked()) {
              throw new Error("invalid sync call");
            }
            return this._fs.rmdirSync(p);
          };
          LockedFS.prototype.mkdir = function mkdir(p, mode, cb) {
            var this$1 = this;
            this._mu.lock(function() {
              this$1._fs.mkdir(p, mode, function(err) {
                this$1._mu.unlock();
                cb(err);
              });
            });
          };
          LockedFS.prototype.mkdirSync = function mkdirSync(p, mode) {
            if (this._mu.isLocked()) {
              throw new Error("invalid sync call");
            }
            return this._fs.mkdirSync(p, mode);
          };
          LockedFS.prototype.readdir = function readdir(p, cb) {
            var this$1 = this;
            this._mu.lock(function() {
              this$1._fs.readdir(p, function(err, files) {
                this$1._mu.unlock();
                cb(err, files);
              });
            });
          };
          LockedFS.prototype.readdirSync = function readdirSync(p) {
            if (this._mu.isLocked()) {
              throw new Error("invalid sync call");
            }
            return this._fs.readdirSync(p);
          };
          LockedFS.prototype.exists = function exists2(p, cb) {
            var this$1 = this;
            this._mu.lock(function() {
              this$1._fs.exists(p, function(exists3) {
                this$1._mu.unlock();
                cb(exists3);
              });
            });
          };
          LockedFS.prototype.existsSync = function existsSync(p) {
            if (this._mu.isLocked()) {
              throw new Error("invalid sync call");
            }
            return this._fs.existsSync(p);
          };
          LockedFS.prototype.realpath = function realpath(p, cache, cb) {
            var this$1 = this;
            this._mu.lock(function() {
              this$1._fs.realpath(p, cache, function(err, resolvedPath) {
                this$1._mu.unlock();
                cb(err, resolvedPath);
              });
            });
          };
          LockedFS.prototype.realpathSync = function realpathSync(p, cache) {
            if (this._mu.isLocked()) {
              throw new Error("invalid sync call");
            }
            return this._fs.realpathSync(p, cache);
          };
          LockedFS.prototype.truncate = function truncate(p, len, cb) {
            var this$1 = this;
            this._mu.lock(function() {
              this$1._fs.truncate(p, len, function(err) {
                this$1._mu.unlock();
                cb(err);
              });
            });
          };
          LockedFS.prototype.truncateSync = function truncateSync(p, len) {
            if (this._mu.isLocked()) {
              throw new Error("invalid sync call");
            }
            return this._fs.truncateSync(p, len);
          };
          LockedFS.prototype.readFile = function readFile2(fname, encoding, flag, cb) {
            var this$1 = this;
            this._mu.lock(function() {
              this$1._fs.readFile(fname, encoding, flag, function(err, data) {
                this$1._mu.unlock();
                cb(err, data);
              });
            });
          };
          LockedFS.prototype.readFileSync = function readFileSync(fname, encoding, flag) {
            if (this._mu.isLocked()) {
              throw new Error("invalid sync call");
            }
            return this._fs.readFileSync(fname, encoding, flag);
          };
          LockedFS.prototype.writeFile = function writeFile2(fname, data, encoding, flag, mode, cb) {
            var this$1 = this;
            this._mu.lock(function() {
              this$1._fs.writeFile(fname, data, encoding, flag, mode, function(err) {
                this$1._mu.unlock();
                cb(err);
              });
            });
          };
          LockedFS.prototype.writeFileSync = function writeFileSync(fname, data, encoding, flag, mode) {
            if (this._mu.isLocked()) {
              throw new Error("invalid sync call");
            }
            return this._fs.writeFileSync(fname, data, encoding, flag, mode);
          };
          LockedFS.prototype.appendFile = function appendFile3(fname, data, encoding, flag, mode, cb) {
            var this$1 = this;
            this._mu.lock(function() {
              this$1._fs.appendFile(fname, data, encoding, flag, mode, function(err) {
                this$1._mu.unlock();
                cb(err);
              });
            });
          };
          LockedFS.prototype.appendFileSync = function appendFileSync(fname, data, encoding, flag, mode) {
            if (this._mu.isLocked()) {
              throw new Error("invalid sync call");
            }
            return this._fs.appendFileSync(fname, data, encoding, flag, mode);
          };
          LockedFS.prototype.chmod = function chmod(p, isLchmod, mode, cb) {
            var this$1 = this;
            this._mu.lock(function() {
              this$1._fs.chmod(p, isLchmod, mode, function(err) {
                this$1._mu.unlock();
                cb(err);
              });
            });
          };
          LockedFS.prototype.chmodSync = function chmodSync(p, isLchmod, mode) {
            if (this._mu.isLocked()) {
              throw new Error("invalid sync call");
            }
            return this._fs.chmodSync(p, isLchmod, mode);
          };
          LockedFS.prototype.chown = function chown(p, isLchown, uid, gid, cb) {
            var this$1 = this;
            this._mu.lock(function() {
              this$1._fs.chown(p, isLchown, uid, gid, function(err) {
                this$1._mu.unlock();
                cb(err);
              });
            });
          };
          LockedFS.prototype.chownSync = function chownSync(p, isLchown, uid, gid) {
            if (this._mu.isLocked()) {
              throw new Error("invalid sync call");
            }
            return this._fs.chownSync(p, isLchown, uid, gid);
          };
          LockedFS.prototype.utimes = function utimes(p, atime, mtime, cb) {
            var this$1 = this;
            this._mu.lock(function() {
              this$1._fs.utimes(p, atime, mtime, function(err) {
                this$1._mu.unlock();
                cb(err);
              });
            });
          };
          LockedFS.prototype.utimesSync = function utimesSync(p, atime, mtime) {
            if (this._mu.isLocked()) {
              throw new Error("invalid sync call");
            }
            return this._fs.utimesSync(p, atime, mtime);
          };
          LockedFS.prototype.link = function link(srcpath, dstpath, cb) {
            var this$1 = this;
            this._mu.lock(function() {
              this$1._fs.link(srcpath, dstpath, function(err) {
                this$1._mu.unlock();
                cb(err);
              });
            });
          };
          LockedFS.prototype.linkSync = function linkSync(srcpath, dstpath) {
            if (this._mu.isLocked()) {
              throw new Error("invalid sync call");
            }
            return this._fs.linkSync(srcpath, dstpath);
          };
          LockedFS.prototype.symlink = function symlink(srcpath, dstpath, type, cb) {
            var this$1 = this;
            this._mu.lock(function() {
              this$1._fs.symlink(srcpath, dstpath, type, function(err) {
                this$1._mu.unlock();
                cb(err);
              });
            });
          };
          LockedFS.prototype.symlinkSync = function symlinkSync(srcpath, dstpath, type) {
            if (this._mu.isLocked()) {
              throw new Error("invalid sync call");
            }
            return this._fs.symlinkSync(srcpath, dstpath, type);
          };
          LockedFS.prototype.readlink = function readlink(p, cb) {
            var this$1 = this;
            this._mu.lock(function() {
              this$1._fs.readlink(p, function(err, linkString) {
                this$1._mu.unlock();
                cb(err, linkString);
              });
            });
          };
          LockedFS.prototype.readlinkSync = function readlinkSync(p) {
            if (this._mu.isLocked()) {
              throw new Error("invalid sync call");
            }
            return this._fs.readlinkSync(p);
          };
          var deletionLogPath = "/.deletedFiles.log";
          function makeModeWritable(mode) {
            return 146 | mode;
          }
          function getFlag(f) {
            return FileFlag.getFileFlag(f);
          }
          var OverlayFile = function(PreloadFile$$1) {
            function OverlayFile2(fs4, path$$1, flag, stats, data) {
              PreloadFile$$1.call(this, fs4, path$$1, flag, stats, data);
            }
            if (PreloadFile$$1)
              OverlayFile2.__proto__ = PreloadFile$$1;
            OverlayFile2.prototype = Object.create(PreloadFile$$1 && PreloadFile$$1.prototype);
            OverlayFile2.prototype.constructor = OverlayFile2;
            OverlayFile2.prototype.sync = function sync(cb) {
              var this$1 = this;
              if (!this.isDirty()) {
                cb(null);
                return;
              }
              this._fs._syncAsync(this, function(err) {
                this$1.resetDirty();
                cb(err);
              });
            };
            OverlayFile2.prototype.syncSync = function syncSync() {
              if (this.isDirty()) {
                this._fs._syncSync(this);
                this.resetDirty();
              }
            };
            OverlayFile2.prototype.close = function close(cb) {
              this.sync(cb);
            };
            OverlayFile2.prototype.closeSync = function closeSync() {
              this.syncSync();
            };
            return OverlayFile2;
          }(PreloadFile);
          var UnlockedOverlayFS = function(BaseFileSystem$$1) {
            function UnlockedOverlayFS2(writable, readable) {
              BaseFileSystem$$1.call(this);
              this._isInitialized = false;
              this._initializeCallbacks = [];
              this._deletedFiles = {};
              this._deleteLog = "";
              this._deleteLogUpdatePending = false;
              this._deleteLogUpdateNeeded = false;
              this._deleteLogError = null;
              this._writable = writable;
              this._readable = readable;
              if (this._writable.isReadOnly()) {
                throw new ApiError(ErrorCode.EINVAL, "Writable file system must be writable.");
              }
            }
            if (BaseFileSystem$$1)
              UnlockedOverlayFS2.__proto__ = BaseFileSystem$$1;
            UnlockedOverlayFS2.prototype = Object.create(BaseFileSystem$$1 && BaseFileSystem$$1.prototype);
            UnlockedOverlayFS2.prototype.constructor = UnlockedOverlayFS2;
            UnlockedOverlayFS2.isAvailable = function isAvailable() {
              return true;
            };
            UnlockedOverlayFS2.prototype.getOverlayedFileSystems = function getOverlayedFileSystems() {
              return { readable: this._readable, writable: this._writable };
            };
            UnlockedOverlayFS2.prototype._syncAsync = function _syncAsync(file, cb) {
              var this$1 = this;
              this.createParentDirectoriesAsync(file.getPath(), function(err) {
                if (err) {
                  return cb(err);
                }
                this$1._writable.writeFile(file.getPath(), file.getBuffer(), null, getFlag("w"), file.getStats().mode, cb);
              });
            };
            UnlockedOverlayFS2.prototype._syncSync = function _syncSync(file) {
              this.createParentDirectories(file.getPath());
              this._writable.writeFileSync(file.getPath(), file.getBuffer(), null, getFlag("w"), file.getStats().mode);
            };
            UnlockedOverlayFS2.prototype.getName = function getName() {
              return OverlayFS.Name;
            };
            UnlockedOverlayFS2.prototype.initialize = function initialize3(cb) {
              var this$1 = this;
              var callbackArray = this._initializeCallbacks;
              var end = function(e) {
                this$1._isInitialized = !e;
                this$1._initializeCallbacks = [];
                callbackArray.forEach(function(cb2) {
                  return cb2(e);
                });
              };
              if (this._isInitialized) {
                return cb();
              }
              callbackArray.push(cb);
              if (callbackArray.length !== 1) {
                return;
              }
              this._writable.readFile(deletionLogPath, "utf8", getFlag("r"), function(err, data) {
                if (err) {
                  if (err.errno !== ErrorCode.ENOENT) {
                    return end(err);
                  }
                } else {
                  this$1._deleteLog = data;
                }
                this$1._reparseDeletionLog();
                end();
              });
            };
            UnlockedOverlayFS2.prototype.isReadOnly = function isReadOnly() {
              return false;
            };
            UnlockedOverlayFS2.prototype.supportsSynch = function supportsSynch() {
              return this._readable.supportsSynch() && this._writable.supportsSynch();
            };
            UnlockedOverlayFS2.prototype.supportsLinks = function supportsLinks() {
              return false;
            };
            UnlockedOverlayFS2.prototype.supportsProps = function supportsProps() {
              return this._readable.supportsProps() && this._writable.supportsProps();
            };
            UnlockedOverlayFS2.prototype.getDeletionLog = function getDeletionLog() {
              return this._deleteLog;
            };
            UnlockedOverlayFS2.prototype.restoreDeletionLog = function restoreDeletionLog(log) {
              this._deleteLog = log;
              this._reparseDeletionLog();
              this.updateLog("");
            };
            UnlockedOverlayFS2.prototype.rename = function rename(oldPath, newPath, cb) {
              var this$1 = this;
              if (!this.checkInitAsync(cb) || this.checkPathAsync(oldPath, cb) || this.checkPathAsync(newPath, cb)) {
                return;
              }
              if (oldPath === deletionLogPath || newPath === deletionLogPath) {
                return cb(ApiError.EPERM("Cannot rename deletion log."));
              }
              if (oldPath === newPath) {
                return cb();
              }
              this.stat(oldPath, false, function(oldErr, oldStats) {
                if (oldErr) {
                  return cb(oldErr);
                }
                return this$1.stat(newPath, false, function(newErr, newStats) {
                  var self2 = this$1;
                  function copyDirContents(files) {
                    var file = files.shift();
                    if (!file) {
                      return cb();
                    }
                    var oldFile = path.resolve(oldPath, file);
                    var newFile = path.resolve(newPath, file);
                    self2.rename(oldFile, newFile, function(err) {
                      if (err) {
                        return cb(err);
                      }
                      copyDirContents(files);
                    });
                  }
                  var mode = 511;
                  if (oldStats.isDirectory()) {
                    if (newErr) {
                      if (newErr.errno !== ErrorCode.ENOENT) {
                        return cb(newErr);
                      }
                      return this$1._writable.exists(oldPath, function(exists2) {
                        if (exists2) {
                          return this$1._writable.rename(oldPath, newPath, cb);
                        }
                        this$1._writable.mkdir(newPath, mode, function(mkdirErr) {
                          if (mkdirErr) {
                            return cb(mkdirErr);
                          }
                          this$1._readable.readdir(oldPath, function(err, files) {
                            if (err) {
                              return cb();
                            }
                            copyDirContents(files);
                          });
                        });
                      });
                    }
                    mode = newStats.mode;
                    if (!newStats.isDirectory()) {
                      return cb(ApiError.ENOTDIR(newPath));
                    }
                    this$1.readdir(newPath, function(readdirErr, files) {
                      if (files && files.length) {
                        return cb(ApiError.ENOTEMPTY(newPath));
                      }
                      this$1._readable.readdir(oldPath, function(err, files2) {
                        if (err) {
                          return cb();
                        }
                        copyDirContents(files2);
                      });
                    });
                  }
                  if (newStats && newStats.isDirectory()) {
                    return cb(ApiError.EISDIR(newPath));
                  }
                  this$1.readFile(oldPath, null, getFlag("r"), function(err, data) {
                    if (err) {
                      return cb(err);
                    }
                    return this$1.writeFile(newPath, data, null, getFlag("w"), oldStats.mode, function(err2) {
                      if (err2) {
                        return cb(err2);
                      }
                      return this$1.unlink(oldPath, cb);
                    });
                  });
                });
              });
            };
            UnlockedOverlayFS2.prototype.renameSync = function renameSync(oldPath, newPath) {
              var this$1 = this;
              this.checkInitialized();
              this.checkPath(oldPath);
              this.checkPath(newPath);
              if (oldPath === deletionLogPath || newPath === deletionLogPath) {
                throw ApiError.EPERM("Cannot rename deletion log.");
              }
              var oldStats = this.statSync(oldPath, false);
              if (oldStats.isDirectory()) {
                if (oldPath === newPath) {
                  return;
                }
                var mode = 511;
                if (this.existsSync(newPath)) {
                  var stats = this.statSync(newPath, false);
                  mode = stats.mode;
                  if (stats.isDirectory()) {
                    if (this.readdirSync(newPath).length > 0) {
                      throw ApiError.ENOTEMPTY(newPath);
                    }
                  } else {
                    throw ApiError.ENOTDIR(newPath);
                  }
                }
                if (this._writable.existsSync(oldPath)) {
                  this._writable.renameSync(oldPath, newPath);
                } else if (!this._writable.existsSync(newPath)) {
                  this._writable.mkdirSync(newPath, mode);
                }
                if (this._readable.existsSync(oldPath)) {
                  this._readable.readdirSync(oldPath).forEach(function(name3) {
                    this$1.renameSync(path.resolve(oldPath, name3), path.resolve(newPath, name3));
                  });
                }
              } else {
                if (this.existsSync(newPath) && this.statSync(newPath, false).isDirectory()) {
                  throw ApiError.EISDIR(newPath);
                }
                this.writeFileSync(newPath, this.readFileSync(oldPath, null, getFlag("r")), null, getFlag("w"), oldStats.mode);
              }
              if (oldPath !== newPath && this.existsSync(oldPath)) {
                this.unlinkSync(oldPath);
              }
            };
            UnlockedOverlayFS2.prototype.stat = function stat(p, isLstat, cb) {
              var this$1 = this;
              if (!this.checkInitAsync(cb)) {
                return;
              }
              this._writable.stat(p, isLstat, function(err, stat2) {
                if (err && err.errno === ErrorCode.ENOENT) {
                  if (this$1._deletedFiles[p]) {
                    cb(ApiError.ENOENT(p));
                  }
                  this$1._readable.stat(p, isLstat, function(err2, stat3) {
                    if (stat3) {
                      stat3 = stat3.clone();
                      stat3.mode = makeModeWritable(stat3.mode);
                    }
                    cb(err2, stat3);
                  });
                } else {
                  cb(err, stat2);
                }
              });
            };
            UnlockedOverlayFS2.prototype.statSync = function statSync(p, isLstat) {
              this.checkInitialized();
              try {
                return this._writable.statSync(p, isLstat);
              } catch (e) {
                if (this._deletedFiles[p]) {
                  throw ApiError.ENOENT(p);
                }
                var oldStat = this._readable.statSync(p, isLstat).clone();
                oldStat.mode = makeModeWritable(oldStat.mode);
                return oldStat;
              }
            };
            UnlockedOverlayFS2.prototype.open = function open(p, flag, mode, cb) {
              var this$1 = this;
              if (!this.checkInitAsync(cb) || this.checkPathAsync(p, cb)) {
                return;
              }
              this.stat(p, false, function(err, stats) {
                if (stats) {
                  switch (flag.pathExistsAction()) {
                    case ActionType.TRUNCATE_FILE:
                      return this$1.createParentDirectoriesAsync(p, function(err2) {
                        if (err2) {
                          return cb(err2);
                        }
                        this$1._writable.open(p, flag, mode, cb);
                      });
                    case ActionType.NOP:
                      return this$1._writable.exists(p, function(exists2) {
                        if (exists2) {
                          this$1._writable.open(p, flag, mode, cb);
                        } else {
                          stats = stats.clone();
                          stats.mode = mode;
                          this$1._readable.readFile(p, null, getFlag("r"), function(readFileErr, data) {
                            if (readFileErr) {
                              return cb(readFileErr);
                            }
                            if (stats.size === -1) {
                              stats.size = data.length;
                            }
                            var f = new OverlayFile(this$1, p, flag, stats, data);
                            cb(null, f);
                          });
                        }
                      });
                    default:
                      return cb(ApiError.EEXIST(p));
                  }
                } else {
                  switch (flag.pathNotExistsAction()) {
                    case ActionType.CREATE_FILE:
                      return this$1.createParentDirectoriesAsync(p, function(err2) {
                        if (err2) {
                          return cb(err2);
                        }
                        return this$1._writable.open(p, flag, mode, cb);
                      });
                    default:
                      return cb(ApiError.ENOENT(p));
                  }
                }
              });
            };
            UnlockedOverlayFS2.prototype.openSync = function openSync(p, flag, mode) {
              this.checkInitialized();
              this.checkPath(p);
              if (p === deletionLogPath) {
                throw ApiError.EPERM("Cannot open deletion log.");
              }
              if (this.existsSync(p)) {
                switch (flag.pathExistsAction()) {
                  case ActionType.TRUNCATE_FILE:
                    this.createParentDirectories(p);
                    return this._writable.openSync(p, flag, mode);
                  case ActionType.NOP:
                    if (this._writable.existsSync(p)) {
                      return this._writable.openSync(p, flag, mode);
                    } else {
                      var buf = this._readable.readFileSync(p, null, getFlag("r"));
                      var stats = this._readable.statSync(p, false).clone();
                      stats.mode = mode;
                      return new OverlayFile(this, p, flag, stats, buf);
                    }
                  default:
                    throw ApiError.EEXIST(p);
                }
              } else {
                switch (flag.pathNotExistsAction()) {
                  case ActionType.CREATE_FILE:
                    this.createParentDirectories(p);
                    return this._writable.openSync(p, flag, mode);
                  default:
                    throw ApiError.ENOENT(p);
                }
              }
            };
            UnlockedOverlayFS2.prototype.unlink = function unlink(p, cb) {
              var this$1 = this;
              if (!this.checkInitAsync(cb) || this.checkPathAsync(p, cb)) {
                return;
              }
              this.exists(p, function(exists2) {
                if (!exists2) {
                  return cb(ApiError.ENOENT(p));
                }
                this$1._writable.exists(p, function(writableExists) {
                  if (writableExists) {
                    return this$1._writable.unlink(p, function(err) {
                      if (err) {
                        return cb(err);
                      }
                      this$1.exists(p, function(readableExists) {
                        if (readableExists) {
                          this$1.deletePath(p);
                        }
                        cb(null);
                      });
                    });
                  } else {
                    this$1.deletePath(p);
                    cb(null);
                  }
                });
              });
            };
            UnlockedOverlayFS2.prototype.unlinkSync = function unlinkSync(p) {
              this.checkInitialized();
              this.checkPath(p);
              if (this.existsSync(p)) {
                if (this._writable.existsSync(p)) {
                  this._writable.unlinkSync(p);
                }
                if (this.existsSync(p)) {
                  this.deletePath(p);
                }
              } else {
                throw ApiError.ENOENT(p);
              }
            };
            UnlockedOverlayFS2.prototype.rmdir = function rmdir(p, cb) {
              var this$1 = this;
              if (!this.checkInitAsync(cb)) {
                return;
              }
              var rmdirLower = function() {
                this$1.readdir(p, function(err, files) {
                  if (err) {
                    return cb(err);
                  }
                  if (files.length) {
                    return cb(ApiError.ENOTEMPTY(p));
                  }
                  this$1.deletePath(p);
                  cb(null);
                });
              };
              this.exists(p, function(exists2) {
                if (!exists2) {
                  return cb(ApiError.ENOENT(p));
                }
                this$1._writable.exists(p, function(writableExists) {
                  if (writableExists) {
                    this$1._writable.rmdir(p, function(err) {
                      if (err) {
                        return cb(err);
                      }
                      this$1._readable.exists(p, function(readableExists) {
                        if (readableExists) {
                          rmdirLower();
                        } else {
                          cb();
                        }
                      });
                    });
                  } else {
                    rmdirLower();
                  }
                });
              });
            };
            UnlockedOverlayFS2.prototype.rmdirSync = function rmdirSync(p) {
              this.checkInitialized();
              if (this.existsSync(p)) {
                if (this._writable.existsSync(p)) {
                  this._writable.rmdirSync(p);
                }
                if (this.existsSync(p)) {
                  if (this.readdirSync(p).length > 0) {
                    throw ApiError.ENOTEMPTY(p);
                  } else {
                    this.deletePath(p);
                  }
                }
              } else {
                throw ApiError.ENOENT(p);
              }
            };
            UnlockedOverlayFS2.prototype.mkdir = function mkdir(p, mode, cb) {
              var this$1 = this;
              if (!this.checkInitAsync(cb)) {
                return;
              }
              this.exists(p, function(exists2) {
                if (exists2) {
                  return cb(ApiError.EEXIST(p));
                }
                this$1.createParentDirectoriesAsync(p, function(err) {
                  if (err) {
                    return cb(err);
                  }
                  this$1._writable.mkdir(p, mode, cb);
                });
              });
            };
            UnlockedOverlayFS2.prototype.mkdirSync = function mkdirSync(p, mode) {
              this.checkInitialized();
              if (this.existsSync(p)) {
                throw ApiError.EEXIST(p);
              } else {
                this.createParentDirectories(p);
                this._writable.mkdirSync(p, mode);
              }
            };
            UnlockedOverlayFS2.prototype.readdir = function readdir(p, cb) {
              var this$1 = this;
              if (!this.checkInitAsync(cb)) {
                return;
              }
              this.stat(p, false, function(err, dirStats) {
                if (err) {
                  return cb(err);
                }
                if (!dirStats.isDirectory()) {
                  return cb(ApiError.ENOTDIR(p));
                }
                this$1._writable.readdir(p, function(err2, wFiles) {
                  if (err2 && err2.code !== "ENOENT") {
                    return cb(err2);
                  } else if (err2 || !wFiles) {
                    wFiles = [];
                  }
                  this$1._readable.readdir(p, function(err3, rFiles) {
                    if (err3 || !rFiles) {
                      rFiles = [];
                    }
                    var seenMap = {};
                    var filtered = wFiles.concat(rFiles.filter(function(fPath) {
                      return !this$1._deletedFiles[p + "/" + fPath];
                    })).filter(function(fPath) {
                      var result = !seenMap[fPath];
                      seenMap[fPath] = true;
                      return result;
                    });
                    cb(null, filtered);
                  });
                });
              });
            };
            UnlockedOverlayFS2.prototype.readdirSync = function readdirSync(p) {
              var this$1 = this;
              this.checkInitialized();
              var dirStats = this.statSync(p, false);
              if (!dirStats.isDirectory()) {
                throw ApiError.ENOTDIR(p);
              }
              var contents = [];
              try {
                contents = contents.concat(this._writable.readdirSync(p));
              } catch (e) {
              }
              try {
                contents = contents.concat(this._readable.readdirSync(p).filter(function(fPath) {
                  return !this$1._deletedFiles[p + "/" + fPath];
                }));
              } catch (e) {
              }
              var seenMap = {};
              return contents.filter(function(fileP) {
                var result = !seenMap[fileP];
                seenMap[fileP] = true;
                return result;
              });
            };
            UnlockedOverlayFS2.prototype.exists = function exists2(p, cb) {
              var this$1 = this;
              this.checkInitialized();
              this._writable.exists(p, function(existsWritable) {
                if (existsWritable) {
                  return cb(true);
                }
                this$1._readable.exists(p, function(existsReadable) {
                  cb(existsReadable && this$1._deletedFiles[p] !== true);
                });
              });
            };
            UnlockedOverlayFS2.prototype.existsSync = function existsSync(p) {
              this.checkInitialized();
              return this._writable.existsSync(p) || this._readable.existsSync(p) && this._deletedFiles[p] !== true;
            };
            UnlockedOverlayFS2.prototype.chmod = function chmod(p, isLchmod, mode, cb) {
              var this$1 = this;
              if (!this.checkInitAsync(cb)) {
                return;
              }
              this.operateOnWritableAsync(p, function(err) {
                if (err) {
                  return cb(err);
                } else {
                  this$1._writable.chmod(p, isLchmod, mode, cb);
                }
              });
            };
            UnlockedOverlayFS2.prototype.chmodSync = function chmodSync(p, isLchmod, mode) {
              var this$1 = this;
              this.checkInitialized();
              this.operateOnWritable(p, function() {
                this$1._writable.chmodSync(p, isLchmod, mode);
              });
            };
            UnlockedOverlayFS2.prototype.chown = function chown(p, isLchmod, uid, gid, cb) {
              var this$1 = this;
              if (!this.checkInitAsync(cb)) {
                return;
              }
              this.operateOnWritableAsync(p, function(err) {
                if (err) {
                  return cb(err);
                } else {
                  this$1._writable.chown(p, isLchmod, uid, gid, cb);
                }
              });
            };
            UnlockedOverlayFS2.prototype.chownSync = function chownSync(p, isLchown, uid, gid) {
              var this$1 = this;
              this.checkInitialized();
              this.operateOnWritable(p, function() {
                this$1._writable.chownSync(p, isLchown, uid, gid);
              });
            };
            UnlockedOverlayFS2.prototype.utimes = function utimes(p, atime, mtime, cb) {
              var this$1 = this;
              if (!this.checkInitAsync(cb)) {
                return;
              }
              this.operateOnWritableAsync(p, function(err) {
                if (err) {
                  return cb(err);
                } else {
                  this$1._writable.utimes(p, atime, mtime, cb);
                }
              });
            };
            UnlockedOverlayFS2.prototype.utimesSync = function utimesSync(p, atime, mtime) {
              var this$1 = this;
              this.checkInitialized();
              this.operateOnWritable(p, function() {
                this$1._writable.utimesSync(p, atime, mtime);
              });
            };
            UnlockedOverlayFS2.prototype.deletePath = function deletePath(p) {
              this._deletedFiles[p] = true;
              this.updateLog("d" + p + "\n");
            };
            UnlockedOverlayFS2.prototype.updateLog = function updateLog(addition) {
              var this$1 = this;
              this._deleteLog += addition;
              if (this._deleteLogUpdatePending) {
                this._deleteLogUpdateNeeded = true;
              } else {
                this._deleteLogUpdatePending = true;
                this._writable.writeFile(deletionLogPath, this._deleteLog, "utf8", FileFlag.getFileFlag("w"), 420, function(e) {
                  this$1._deleteLogUpdatePending = false;
                  if (e) {
                    this$1._deleteLogError = e;
                  } else if (this$1._deleteLogUpdateNeeded) {
                    this$1._deleteLogUpdateNeeded = false;
                    this$1.updateLog("");
                  }
                });
              }
            };
            UnlockedOverlayFS2.prototype._reparseDeletionLog = function _reparseDeletionLog() {
              var this$1 = this;
              this._deletedFiles = {};
              this._deleteLog.split("\n").forEach(function(path$$1) {
                this$1._deletedFiles[path$$1.slice(1)] = path$$1.slice(0, 1) === "d";
              });
            };
            UnlockedOverlayFS2.prototype.checkInitialized = function checkInitialized() {
              if (!this._isInitialized) {
                throw new ApiError(ErrorCode.EPERM, "OverlayFS is not initialized. Please initialize OverlayFS using its initialize() method before using it.");
              } else if (this._deleteLogError !== null) {
                var e = this._deleteLogError;
                this._deleteLogError = null;
                throw e;
              }
            };
            UnlockedOverlayFS2.prototype.checkInitAsync = function checkInitAsync(cb) {
              if (!this._isInitialized) {
                cb(new ApiError(ErrorCode.EPERM, "OverlayFS is not initialized. Please initialize OverlayFS using its initialize() method before using it."));
                return false;
              } else if (this._deleteLogError !== null) {
                var e = this._deleteLogError;
                this._deleteLogError = null;
                cb(e);
                return false;
              }
              return true;
            };
            UnlockedOverlayFS2.prototype.checkPath = function checkPath(p) {
              if (p === deletionLogPath) {
                throw ApiError.EPERM(p);
              }
            };
            UnlockedOverlayFS2.prototype.checkPathAsync = function checkPathAsync(p, cb) {
              if (p === deletionLogPath) {
                cb(ApiError.EPERM(p));
                return true;
              }
              return false;
            };
            UnlockedOverlayFS2.prototype.createParentDirectoriesAsync = function createParentDirectoriesAsync(p, cb) {
              var parent = path.dirname(p);
              var toCreate = [];
              var self2 = this;
              this._writable.stat(parent, false, statDone);
              function statDone(err, stat) {
                if (err) {
                  toCreate.push(parent);
                  parent = path.dirname(parent);
                  self2._writable.stat(parent, false, statDone);
                } else {
                  createParents();
                }
              }
              function createParents() {
                if (!toCreate.length) {
                  return cb();
                }
                var dir2 = toCreate.pop();
                self2._readable.stat(dir2, false, function(err, stats) {
                  if (!stats) {
                    return cb();
                  }
                  self2._writable.mkdir(dir2, stats.mode, function(err2) {
                    if (err2) {
                      return cb(err2);
                    }
                    createParents();
                  });
                });
              }
            };
            UnlockedOverlayFS2.prototype.createParentDirectories = function createParentDirectories(p) {
              var this$1 = this;
              var parent = path.dirname(p), toCreate = [];
              while (!this._writable.existsSync(parent)) {
                toCreate.push(parent);
                parent = path.dirname(parent);
              }
              toCreate = toCreate.reverse();
              toCreate.forEach(function(p2) {
                this$1._writable.mkdirSync(p2, this$1.statSync(p2, false).mode);
              });
            };
            UnlockedOverlayFS2.prototype.operateOnWritable = function operateOnWritable(p, f) {
              if (this.existsSync(p)) {
                if (!this._writable.existsSync(p)) {
                  this.copyToWritable(p);
                }
                f();
              } else {
                throw ApiError.ENOENT(p);
              }
            };
            UnlockedOverlayFS2.prototype.operateOnWritableAsync = function operateOnWritableAsync(p, cb) {
              var this$1 = this;
              this.exists(p, function(exists2) {
                if (!exists2) {
                  return cb(ApiError.ENOENT(p));
                }
                this$1._writable.exists(p, function(existsWritable) {
                  if (existsWritable) {
                    cb();
                  } else {
                    return this$1.copyToWritableAsync(p, cb);
                  }
                });
              });
            };
            UnlockedOverlayFS2.prototype.copyToWritable = function copyToWritable(p) {
              var pStats = this.statSync(p, false);
              if (pStats.isDirectory()) {
                this._writable.mkdirSync(p, pStats.mode);
              } else {
                this.writeFileSync(p, this._readable.readFileSync(p, null, getFlag("r")), null, getFlag("w"), this.statSync(p, false).mode);
              }
            };
            UnlockedOverlayFS2.prototype.copyToWritableAsync = function copyToWritableAsync(p, cb) {
              var this$1 = this;
              this.stat(p, false, function(err, pStats) {
                if (err) {
                  return cb(err);
                }
                if (pStats.isDirectory()) {
                  return this$1._writable.mkdir(p, pStats.mode, cb);
                }
                this$1._readable.readFile(p, null, getFlag("r"), function(err2, data) {
                  if (err2) {
                    return cb(err2);
                  }
                  this$1.writeFile(p, data, null, getFlag("w"), pStats.mode, cb);
                });
              });
            };
            return UnlockedOverlayFS2;
          }(BaseFileSystem);
          var OverlayFS = function(LockedFS$$1) {
            function OverlayFS2(writable, readable, deprecateMsg) {
              if (deprecateMsg === void 0)
                deprecateMsg = true;
              LockedFS$$1.call(this, new UnlockedOverlayFS(writable, readable));
              deprecationMessage(deprecateMsg, OverlayFS2.Name, { readable: "readable file system", writable: "writable file system" });
            }
            if (LockedFS$$1)
              OverlayFS2.__proto__ = LockedFS$$1;
            OverlayFS2.prototype = Object.create(LockedFS$$1 && LockedFS$$1.prototype);
            OverlayFS2.prototype.constructor = OverlayFS2;
            OverlayFS2.Create = function Create(opts, cb) {
              try {
                var fs4 = new OverlayFS2(opts.writable, opts.readable, false);
                fs4.initialize(function(e) {
                  cb(e, fs4);
                }, false);
              } catch (e) {
                cb(e);
              }
            };
            OverlayFS2.isAvailable = function isAvailable() {
              return UnlockedOverlayFS.isAvailable();
            };
            OverlayFS2.prototype.initialize = function initialize3(cb, deprecateMsg) {
              if (deprecateMsg === void 0)
                deprecateMsg = true;
              if (deprecateMsg) {
                console.warn("[OverlayFS] OverlayFS.initialize() is deprecated and will be removed in the next major release. Please use 'OverlayFS.Create({readable: readable file system instance, writable: writable file system instance}, cb)' to create and initialize OverlayFS instances.");
              }
              LockedFS$$1.prototype.initialize.call(this, cb);
            };
            OverlayFS2.prototype.getOverlayedFileSystems = function getOverlayedFileSystems() {
              return LockedFS$$1.prototype.getFSUnlocked.call(this).getOverlayedFileSystems();
            };
            OverlayFS2.prototype.unwrap = function unwrap() {
              return LockedFS$$1.prototype.getFSUnlocked.call(this);
            };
            return OverlayFS2;
          }(LockedFS);
          OverlayFS.Name = "OverlayFS";
          OverlayFS.Options = { writable: { type: "object", description: "The file system to write modified files to." }, readable: { type: "object", description: "The file system that initially populates this file system." } };
          var SpecialArgType;
          (function(SpecialArgType2) {
            SpecialArgType2[SpecialArgType2["CB"] = 0] = "CB";
            SpecialArgType2[SpecialArgType2["FD"] = 1] = "FD";
            SpecialArgType2[SpecialArgType2["API_ERROR"] = 2] = "API_ERROR";
            SpecialArgType2[SpecialArgType2["STATS"] = 3] = "STATS";
            SpecialArgType2[SpecialArgType2["PROBE"] = 4] = "PROBE";
            SpecialArgType2[SpecialArgType2["FILEFLAG"] = 5] = "FILEFLAG";
            SpecialArgType2[SpecialArgType2["BUFFER"] = 6] = "BUFFER";
            SpecialArgType2[SpecialArgType2["ERROR"] = 7] = "ERROR";
          })(SpecialArgType || (SpecialArgType = {}));
          var CallbackArgumentConverter = function CallbackArgumentConverter2() {
            this._callbacks = {};
            this._nextId = 0;
          };
          CallbackArgumentConverter.prototype.toRemoteArg = function toRemoteArg(cb) {
            var id = this._nextId++;
            this._callbacks[id] = cb;
            return { type: SpecialArgType.CB, id };
          };
          CallbackArgumentConverter.prototype.toLocalArg = function toLocalArg(id) {
            var cb = this._callbacks[id];
            delete this._callbacks[id];
            return cb;
          };
          var FileDescriptorArgumentConverter = function FileDescriptorArgumentConverter2() {
            this._fileDescriptors = {};
            this._nextId = 0;
          };
          FileDescriptorArgumentConverter.prototype.toRemoteArg = function toRemoteArg(fd, p, flag, cb) {
            var id = this._nextId++;
            var data;
            var stat;
            this._fileDescriptors[id] = fd;
            fd.stat(function(err, stats) {
              if (err) {
                cb(err);
              } else {
                stat = bufferToTransferrableObject(stats.toBuffer());
                if (flag.isReadable()) {
                  fd.read(Buffer2.alloc(stats.size), 0, stats.size, 0, function(err2, bytesRead, buff) {
                    if (err2) {
                      cb(err2);
                    } else {
                      data = bufferToTransferrableObject(buff);
                      cb(null, { type: SpecialArgType.FD, id, data, stat, path: p, flag: flag.getFlagString() });
                    }
                  });
                } else {
                  cb(null, { type: SpecialArgType.FD, id, data: new ArrayBuffer(0), stat, path: p, flag: flag.getFlagString() });
                }
              }
            });
          };
          FileDescriptorArgumentConverter.prototype.applyFdAPIRequest = function applyFdAPIRequest(request, cb) {
            var this$1 = this;
            var fdArg = request.args[0];
            this._applyFdChanges(fdArg, function(err, fd) {
              if (err) {
                cb(err);
              } else {
                fd[request.method](function(e) {
                  if (request.method === "close") {
                    delete this$1._fileDescriptors[fdArg.id];
                  }
                  cb(e);
                });
              }
            });
          };
          FileDescriptorArgumentConverter.prototype._applyFdChanges = function _applyFdChanges(remoteFd, cb) {
            var fd = this._fileDescriptors[remoteFd.id], data = transferrableObjectToBuffer(remoteFd.data), remoteStats = Stats.fromBuffer(transferrableObjectToBuffer(remoteFd.stat));
            var flag = FileFlag.getFileFlag(remoteFd.flag);
            if (flag.isWriteable()) {
              fd.write(data, 0, data.length, flag.isAppendable() ? fd.getPos() : 0, function(e) {
                function applyStatChanges() {
                  fd.stat(function(e2, stats) {
                    if (e2) {
                      cb(e2);
                    } else {
                      if (stats.mode !== remoteStats.mode) {
                        fd.chmod(remoteStats.mode, function(e3) {
                          cb(e3, fd);
                        });
                      } else {
                        cb(e2, fd);
                      }
                    }
                  });
                }
                if (e) {
                  cb(e);
                } else {
                  if (!flag.isAppendable()) {
                    fd.truncate(data.length, function() {
                      applyStatChanges();
                    });
                  } else {
                    applyStatChanges();
                  }
                }
              });
            } else {
              cb(null, fd);
            }
          };
          function apiErrorLocal2Remote(e) {
            return { type: SpecialArgType.API_ERROR, errorData: bufferToTransferrableObject(e.writeToBuffer()) };
          }
          function apiErrorRemote2Local(e) {
            return ApiError.fromBuffer(transferrableObjectToBuffer(e.errorData));
          }
          function errorLocal2Remote(e) {
            return { type: SpecialArgType.ERROR, name: e.name, message: e.message, stack: e.stack };
          }
          function errorRemote2Local(e) {
            var cnstr = global$1[e.name];
            if (typeof cnstr !== "function") {
              cnstr = Error;
            }
            var err = new cnstr(e.message);
            err.stack = e.stack;
            return err;
          }
          function statsLocal2Remote(stats) {
            return { type: SpecialArgType.STATS, statsData: bufferToTransferrableObject(stats.toBuffer()) };
          }
          function statsRemote2Local(stats) {
            return Stats.fromBuffer(transferrableObjectToBuffer(stats.statsData));
          }
          function fileFlagLocal2Remote(flag) {
            return { type: SpecialArgType.FILEFLAG, flagStr: flag.getFlagString() };
          }
          function fileFlagRemote2Local(remoteFlag) {
            return FileFlag.getFileFlag(remoteFlag.flagStr);
          }
          function bufferToTransferrableObject(buff) {
            return buffer2ArrayBuffer(buff);
          }
          function transferrableObjectToBuffer(buff) {
            return arrayBuffer2Buffer(buff);
          }
          function bufferLocal2Remote(buff) {
            return { type: SpecialArgType.BUFFER, data: bufferToTransferrableObject(buff) };
          }
          function bufferRemote2Local(buffArg) {
            return transferrableObjectToBuffer(buffArg.data);
          }
          function isAPIRequest(data) {
            return data && typeof data === "object" && data.hasOwnProperty("browserfsMessage") && data["browserfsMessage"];
          }
          function isAPIResponse(data) {
            return data && typeof data === "object" && data.hasOwnProperty("browserfsMessage") && data["browserfsMessage"];
          }
          var WorkerFile = function(PreloadFile$$1) {
            function WorkerFile2(_fs, _path, _flag, _stat, remoteFdId, contents) {
              PreloadFile$$1.call(this, _fs, _path, _flag, _stat, contents);
              this._remoteFdId = remoteFdId;
            }
            if (PreloadFile$$1)
              WorkerFile2.__proto__ = PreloadFile$$1;
            WorkerFile2.prototype = Object.create(PreloadFile$$1 && PreloadFile$$1.prototype);
            WorkerFile2.prototype.constructor = WorkerFile2;
            WorkerFile2.prototype.getRemoteFdId = function getRemoteFdId() {
              return this._remoteFdId;
            };
            WorkerFile2.prototype.toRemoteArg = function toRemoteArg() {
              return { type: SpecialArgType.FD, id: this._remoteFdId, data: bufferToTransferrableObject(this.getBuffer()), stat: bufferToTransferrableObject(this.getStats().toBuffer()), path: this.getPath(), flag: this.getFlag().getFlagString() };
            };
            WorkerFile2.prototype.sync = function sync(cb) {
              this._syncClose("sync", cb);
            };
            WorkerFile2.prototype.close = function close(cb) {
              this._syncClose("close", cb);
            };
            WorkerFile2.prototype._syncClose = function _syncClose(type, cb) {
              var this$1 = this;
              if (this.isDirty()) {
                this._fs.syncClose(type, this, function(e) {
                  if (!e) {
                    this$1.resetDirty();
                  }
                  cb(e);
                });
              } else {
                cb();
              }
            };
            return WorkerFile2;
          }(PreloadFile);
          var WorkerFS = function(BaseFileSystem$$1) {
            function WorkerFS2(worker, deprecateMsg) {
              var this$1 = this;
              if (deprecateMsg === void 0)
                deprecateMsg = true;
              BaseFileSystem$$1.call(this);
              this._callbackConverter = new CallbackArgumentConverter();
              this._isInitialized = false;
              this._isReadOnly = false;
              this._supportLinks = false;
              this._supportProps = false;
              this._worker = worker;
              deprecationMessage(deprecateMsg, WorkerFS2.Name, { worker: "Web Worker instance" });
              this._worker.addEventListener("message", function(e) {
                var resp = e.data;
                if (isAPIResponse(resp)) {
                  var i2;
                  var args = resp.args;
                  var fixedArgs = new Array(args.length);
                  for (i2 = 0; i2 < fixedArgs.length; i2++) {
                    fixedArgs[i2] = this$1._argRemote2Local(args[i2]);
                  }
                  this$1._callbackConverter.toLocalArg(resp.cbId).apply(null, fixedArgs);
                }
              });
            }
            if (BaseFileSystem$$1)
              WorkerFS2.__proto__ = BaseFileSystem$$1;
            WorkerFS2.prototype = Object.create(BaseFileSystem$$1 && BaseFileSystem$$1.prototype);
            WorkerFS2.prototype.constructor = WorkerFS2;
            WorkerFS2.Create = function Create(opts, cb) {
              var fs4 = new WorkerFS2(opts.worker, false);
              fs4.initialize(function() {
                cb(null, fs4);
              });
            };
            WorkerFS2.isAvailable = function isAvailable() {
              return typeof importScripts !== "undefined" || typeof Worker !== "undefined";
            };
            WorkerFS2.attachRemoteListener = function attachRemoteListener(worker) {
              var fdConverter = new FileDescriptorArgumentConverter();
              function argLocal2Remote(arg, requestArgs, cb) {
                switch (typeof arg) {
                  case "object":
                    if (arg instanceof Stats) {
                      cb(null, statsLocal2Remote(arg));
                    } else if (arg instanceof ApiError) {
                      cb(null, apiErrorLocal2Remote(arg));
                    } else if (arg instanceof BaseFile) {
                      cb(null, fdConverter.toRemoteArg(arg, requestArgs[0], requestArgs[1], cb));
                    } else if (arg instanceof FileFlag) {
                      cb(null, fileFlagLocal2Remote(arg));
                    } else if (arg instanceof Buffer2) {
                      cb(null, bufferLocal2Remote(arg));
                    } else if (arg instanceof Error) {
                      cb(null, errorLocal2Remote(arg));
                    } else {
                      cb(null, arg);
                    }
                    break;
                  default:
                    cb(null, arg);
                    break;
                }
              }
              function argRemote2Local(arg, fixedRequestArgs) {
                if (!arg) {
                  return arg;
                }
                switch (typeof arg) {
                  case "object":
                    if (typeof arg["type"] === "number") {
                      var specialArg = arg;
                      switch (specialArg.type) {
                        case SpecialArgType.CB:
                          var cbId = arg.id;
                          return function() {
                            var arguments$1 = arguments;
                            var i2;
                            var fixedArgs = new Array(arguments.length);
                            var message4, countdown = arguments.length;
                            function abortAndSendError(err) {
                              if (countdown > 0) {
                                countdown = -1;
                                message4 = { browserfsMessage: true, cbId, args: [apiErrorLocal2Remote(err)] };
                                worker.postMessage(message4);
                              }
                            }
                            for (i2 = 0; i2 < arguments.length; i2++) {
                              (function(i3, arg2) {
                                argLocal2Remote(arg2, fixedRequestArgs, function(err, fixedArg) {
                                  fixedArgs[i3] = fixedArg;
                                  if (err) {
                                    abortAndSendError(err);
                                  } else if (--countdown === 0) {
                                    message4 = { browserfsMessage: true, cbId, args: fixedArgs };
                                    worker.postMessage(message4);
                                  }
                                });
                              })(i2, arguments$1[i2]);
                            }
                            if (arguments.length === 0) {
                              message4 = { browserfsMessage: true, cbId, args: fixedArgs };
                              worker.postMessage(message4);
                            }
                          };
                        case SpecialArgType.API_ERROR:
                          return apiErrorRemote2Local(specialArg);
                        case SpecialArgType.STATS:
                          return statsRemote2Local(specialArg);
                        case SpecialArgType.FILEFLAG:
                          return fileFlagRemote2Local(specialArg);
                        case SpecialArgType.BUFFER:
                          return bufferRemote2Local(specialArg);
                        case SpecialArgType.ERROR:
                          return errorRemote2Local(specialArg);
                        default:
                          return arg;
                      }
                    } else {
                      return arg;
                    }
                  default:
                    return arg;
                }
              }
              worker.addEventListener("message", function(e) {
                var request = e.data;
                if (isAPIRequest(request)) {
                  var args = request.args, fixedArgs = new Array(args.length);
                  switch (request.method) {
                    case "close":
                    case "sync":
                      (function() {
                        var remoteCb = args[1];
                        fdConverter.applyFdAPIRequest(request, function(err) {
                          var response = { browserfsMessage: true, cbId: remoteCb.id, args: err ? [apiErrorLocal2Remote(err)] : [] };
                          worker.postMessage(response);
                        });
                      })();
                      break;
                    case "probe":
                      (function() {
                        var rootFs = _fsMock.getRootFS(), remoteCb = args[1], probeResponse = { type: SpecialArgType.PROBE, isReadOnly: rootFs.isReadOnly(), supportsLinks: rootFs.supportsLinks(), supportsProps: rootFs.supportsProps() }, response = { browserfsMessage: true, cbId: remoteCb.id, args: [probeResponse] };
                        worker.postMessage(response);
                      })();
                      break;
                    default:
                      for (var i2 = 0; i2 < args.length; i2++) {
                        fixedArgs[i2] = argRemote2Local(args[i2], fixedArgs);
                      }
                      var rootFS = _fsMock.getRootFS();
                      rootFS[request.method].apply(rootFS, fixedArgs);
                      break;
                  }
                }
              });
            };
            WorkerFS2.prototype.getName = function getName() {
              return WorkerFS2.Name;
            };
            WorkerFS2.prototype.initialize = function initialize3(cb) {
              var this$1 = this;
              if (!this._isInitialized) {
                var message4 = { browserfsMessage: true, method: "probe", args: [this._argLocal2Remote(emptyBuffer()), this._callbackConverter.toRemoteArg(function(probeResponse) {
                  this$1._isInitialized = true;
                  this$1._isReadOnly = probeResponse.isReadOnly;
                  this$1._supportLinks = probeResponse.supportsLinks;
                  this$1._supportProps = probeResponse.supportsProps;
                  cb();
                })] };
                this._worker.postMessage(message4);
              } else {
                cb();
              }
            };
            WorkerFS2.prototype.isReadOnly = function isReadOnly() {
              return this._isReadOnly;
            };
            WorkerFS2.prototype.supportsSynch = function supportsSynch() {
              return false;
            };
            WorkerFS2.prototype.supportsLinks = function supportsLinks() {
              return this._supportLinks;
            };
            WorkerFS2.prototype.supportsProps = function supportsProps() {
              return this._supportProps;
            };
            WorkerFS2.prototype.rename = function rename(oldPath, newPath, cb) {
              this._rpc("rename", arguments);
            };
            WorkerFS2.prototype.stat = function stat(p, isLstat, cb) {
              this._rpc("stat", arguments);
            };
            WorkerFS2.prototype.open = function open(p, flag, mode, cb) {
              this._rpc("open", arguments);
            };
            WorkerFS2.prototype.unlink = function unlink(p, cb) {
              this._rpc("unlink", arguments);
            };
            WorkerFS2.prototype.rmdir = function rmdir(p, cb) {
              this._rpc("rmdir", arguments);
            };
            WorkerFS2.prototype.mkdir = function mkdir(p, mode, cb) {
              this._rpc("mkdir", arguments);
            };
            WorkerFS2.prototype.readdir = function readdir(p, cb) {
              this._rpc("readdir", arguments);
            };
            WorkerFS2.prototype.exists = function exists2(p, cb) {
              this._rpc("exists", arguments);
            };
            WorkerFS2.prototype.realpath = function realpath(p, cache, cb) {
              this._rpc("realpath", arguments);
            };
            WorkerFS2.prototype.truncate = function truncate(p, len, cb) {
              this._rpc("truncate", arguments);
            };
            WorkerFS2.prototype.readFile = function readFile2(fname, encoding, flag, cb) {
              this._rpc("readFile", arguments);
            };
            WorkerFS2.prototype.writeFile = function writeFile2(fname, data, encoding, flag, mode, cb) {
              this._rpc("writeFile", arguments);
            };
            WorkerFS2.prototype.appendFile = function appendFile3(fname, data, encoding, flag, mode, cb) {
              this._rpc("appendFile", arguments);
            };
            WorkerFS2.prototype.chmod = function chmod(p, isLchmod, mode, cb) {
              this._rpc("chmod", arguments);
            };
            WorkerFS2.prototype.chown = function chown(p, isLchown, uid, gid, cb) {
              this._rpc("chown", arguments);
            };
            WorkerFS2.prototype.utimes = function utimes(p, atime, mtime, cb) {
              this._rpc("utimes", arguments);
            };
            WorkerFS2.prototype.link = function link(srcpath, dstpath, cb) {
              this._rpc("link", arguments);
            };
            WorkerFS2.prototype.symlink = function symlink(srcpath, dstpath, type, cb) {
              this._rpc("symlink", arguments);
            };
            WorkerFS2.prototype.readlink = function readlink(p, cb) {
              this._rpc("readlink", arguments);
            };
            WorkerFS2.prototype.syncClose = function syncClose(method, fd, cb) {
              this._worker.postMessage({ browserfsMessage: true, method, args: [fd.toRemoteArg(), this._callbackConverter.toRemoteArg(cb)] });
            };
            WorkerFS2.prototype._argRemote2Local = function _argRemote2Local(arg) {
              if (!arg) {
                return arg;
              }
              switch (typeof arg) {
                case "object":
                  if (typeof arg["type"] === "number") {
                    var specialArg = arg;
                    switch (specialArg.type) {
                      case SpecialArgType.API_ERROR:
                        return apiErrorRemote2Local(specialArg);
                      case SpecialArgType.FD:
                        var fdArg = specialArg;
                        return new WorkerFile(this, fdArg.path, FileFlag.getFileFlag(fdArg.flag), Stats.fromBuffer(transferrableObjectToBuffer(fdArg.stat)), fdArg.id, transferrableObjectToBuffer(fdArg.data));
                      case SpecialArgType.STATS:
                        return statsRemote2Local(specialArg);
                      case SpecialArgType.FILEFLAG:
                        return fileFlagRemote2Local(specialArg);
                      case SpecialArgType.BUFFER:
                        return bufferRemote2Local(specialArg);
                      case SpecialArgType.ERROR:
                        return errorRemote2Local(specialArg);
                      default:
                        return arg;
                    }
                  } else {
                    return arg;
                  }
                default:
                  return arg;
              }
            };
            WorkerFS2.prototype._rpc = function _rpc(methodName, args) {
              var this$1 = this;
              var fixedArgs = new Array(args.length);
              for (var i2 = 0; i2 < args.length; i2++) {
                fixedArgs[i2] = this$1._argLocal2Remote(args[i2]);
              }
              var message4 = { browserfsMessage: true, method: methodName, args: fixedArgs };
              this._worker.postMessage(message4);
            };
            WorkerFS2.prototype._argLocal2Remote = function _argLocal2Remote(arg) {
              if (!arg) {
                return arg;
              }
              switch (typeof arg) {
                case "object":
                  if (arg instanceof Stats) {
                    return statsLocal2Remote(arg);
                  } else if (arg instanceof ApiError) {
                    return apiErrorLocal2Remote(arg);
                  } else if (arg instanceof WorkerFile) {
                    return arg.toRemoteArg();
                  } else if (arg instanceof FileFlag) {
                    return fileFlagLocal2Remote(arg);
                  } else if (arg instanceof Buffer2) {
                    return bufferLocal2Remote(arg);
                  } else if (arg instanceof Error) {
                    return errorLocal2Remote(arg);
                  } else {
                    return "Unknown argument";
                  }
                case "function":
                  return this._callbackConverter.toRemoteArg(arg);
                default:
                  return arg;
              }
            };
            return WorkerFS2;
          }(BaseFileSystem);
          WorkerFS.Name = "WorkerFS";
          WorkerFS.Options = { worker: { type: "object", description: "The target worker that you want to connect to, or the current worker if in a worker context.", validator: function(v2, cb) {
            if (v2["postMessage"]) {
              cb();
            } else {
              cb(new ApiError(ErrorCode.EINVAL, "option must be a Web Worker instance."));
            }
          } } };
          function asyncDownloadFileModern(p, type, cb) {
            var req = new XMLHttpRequest();
            req.open("GET", p, true);
            var jsonSupported = true;
            switch (type) {
              case "buffer":
                req.responseType = "arraybuffer";
                break;
              case "json":
                try {
                  req.responseType = "json";
                  jsonSupported = req.responseType === "json";
                } catch (e) {
                  jsonSupported = false;
                }
                break;
              default:
                return cb(new ApiError(ErrorCode.EINVAL, "Invalid download type: " + type));
            }
            req.onreadystatechange = function(e) {
              if (req.readyState === 4) {
                if (req.status === 200) {
                  switch (type) {
                    case "buffer":
                      return cb(null, req.response ? Buffer2.from(req.response) : emptyBuffer());
                    case "json":
                      if (jsonSupported) {
                        return cb(null, req.response);
                      } else {
                        return cb(null, JSON.parse(req.responseText));
                      }
                  }
                } else {
                  return cb(new ApiError(req.status, "XHR error."));
                }
              }
            };
            req.send();
          }
          function syncDownloadFileModern(p, type) {
            var req = new XMLHttpRequest();
            req.open("GET", p, false);
            var data = null;
            var err = null;
            req.overrideMimeType("text/plain; charset=x-user-defined");
            req.onreadystatechange = function(e) {
              if (req.readyState === 4) {
                if (req.status === 200) {
                  switch (type) {
                    case "buffer":
                      var text = req.responseText;
                      data = Buffer2.alloc(text.length);
                      for (var i2 = 0; i2 < text.length; i2++) {
                        data[i2] = text.charCodeAt(i2);
                      }
                      return;
                    case "json":
                      data = JSON.parse(req.responseText);
                      return;
                  }
                } else {
                  err = new ApiError(req.status, "XHR error.");
                  return;
                }
              }
            };
            req.send();
            if (err) {
              throw err;
            }
            return data;
          }
          function syncDownloadFileIE10(p, type) {
            var req = new XMLHttpRequest();
            req.open("GET", p, false);
            switch (type) {
              case "buffer":
                req.responseType = "arraybuffer";
                break;
              case "json":
                break;
              default:
                throw new ApiError(ErrorCode.EINVAL, "Invalid download type: " + type);
            }
            var data;
            var err;
            req.onreadystatechange = function(e) {
              if (req.readyState === 4) {
                if (req.status === 200) {
                  switch (type) {
                    case "buffer":
                      data = Buffer2.from(req.response);
                      break;
                    case "json":
                      data = JSON.parse(req.response);
                      break;
                  }
                } else {
                  err = new ApiError(req.status, "XHR error.");
                }
              }
            };
            req.send();
            if (err) {
              throw err;
            }
            return data;
          }
          function getFileSize2(async, p, cb) {
            var req = new XMLHttpRequest();
            req.open("HEAD", p, async);
            req.onreadystatechange = function(e) {
              if (req.readyState === 4) {
                if (req.status === 200) {
                  try {
                    return cb(null, parseInt(req.getResponseHeader("Content-Length") || "-1", 10));
                  } catch (e2) {
                    return cb(new ApiError(ErrorCode.EIO, "XHR HEAD error: Could not read content-length."));
                  }
                } else {
                  return cb(new ApiError(req.status, "XHR HEAD error."));
                }
              }
            };
            req.send();
          }
          var asyncDownloadFile = asyncDownloadFileModern;
          var syncDownloadFile = isIE && typeof Blob !== "undefined" ? syncDownloadFileIE10 : syncDownloadFileModern;
          function getFileSizeSync(p) {
            var rv = -1;
            getFileSize2(false, p, function(err, size) {
              if (err) {
                throw err;
              }
              rv = size;
            });
            return rv;
          }
          function getFileSizeAsync(p, cb) {
            getFileSize2(true, p, cb);
          }
          var FileIndex = function FileIndex2() {
            this._index = {};
            this.addPath("/", new DirInode());
          };
          FileIndex.fromListing = function fromListing(listing) {
            var idx = new FileIndex();
            var rootInode = new DirInode();
            idx._index["/"] = rootInode;
            var queue = [["", listing, rootInode]];
            while (queue.length > 0) {
              var inode = void 0;
              var next = queue.pop();
              var pwd = next[0];
              var tree2 = next[1];
              var parent = next[2];
              for (var node in tree2) {
                if (tree2.hasOwnProperty(node)) {
                  var children = tree2[node];
                  var name3 = pwd + "/" + node;
                  if (children) {
                    idx._index[name3] = inode = new DirInode();
                    queue.push([name3, children, inode]);
                  } else {
                    inode = new FileInode(new Stats(FileType.FILE, -1, 365));
                  }
                  if (parent) {
                    parent._ls[node] = inode;
                  }
                }
              }
            }
            return idx;
          };
          FileIndex.prototype.fileIterator = function fileIterator(cb) {
            var this$1 = this;
            for (var path$$1 in this$1._index) {
              if (this$1._index.hasOwnProperty(path$$1)) {
                var dir2 = this$1._index[path$$1];
                var files = dir2.getListing();
                for (var i2 = 0, list2 = files; i2 < list2.length; i2 += 1) {
                  var file = list2[i2];
                  var item = dir2.getItem(file);
                  if (isFileInode(item)) {
                    cb(item.getData());
                  }
                }
              }
            }
          };
          FileIndex.prototype.addPath = function addPath(path$$1, inode) {
            if (!inode) {
              throw new Error("Inode must be specified");
            }
            if (path$$1[0] !== "/") {
              throw new Error("Path must be absolute, got: " + path$$1);
            }
            if (this._index.hasOwnProperty(path$$1)) {
              return this._index[path$$1] === inode;
            }
            var splitPath = this._split_path(path$$1);
            var dirpath = splitPath[0];
            var itemname = splitPath[1];
            var parent = this._index[dirpath];
            if (parent === void 0 && path$$1 !== "/") {
              parent = new DirInode();
              if (!this.addPath(dirpath, parent)) {
                return false;
              }
            }
            if (path$$1 !== "/") {
              if (!parent.addItem(itemname, inode)) {
                return false;
              }
            }
            if (isDirInode(inode)) {
              this._index[path$$1] = inode;
            }
            return true;
          };
          FileIndex.prototype.addPathFast = function addPathFast(path$$1, inode) {
            var itemNameMark = path$$1.lastIndexOf("/");
            var parentPath = itemNameMark === 0 ? "/" : path$$1.substring(0, itemNameMark);
            var itemName = path$$1.substring(itemNameMark + 1);
            var parent = this._index[parentPath];
            if (parent === void 0) {
              parent = new DirInode();
              this.addPathFast(parentPath, parent);
            }
            if (!parent.addItem(itemName, inode)) {
              return false;
            }
            if (inode.isDir()) {
              this._index[path$$1] = inode;
            }
            return true;
          };
          FileIndex.prototype.removePath = function removePath(path$$1) {
            var this$1 = this;
            var splitPath = this._split_path(path$$1);
            var dirpath = splitPath[0];
            var itemname = splitPath[1];
            var parent = this._index[dirpath];
            if (parent === void 0) {
              return null;
            }
            var inode = parent.remItem(itemname);
            if (inode === null) {
              return null;
            }
            if (isDirInode(inode)) {
              var children = inode.getListing();
              for (var i2 = 0, list2 = children; i2 < list2.length; i2 += 1) {
                var child = list2[i2];
                this$1.removePath(path$$1 + "/" + child);
              }
              if (path$$1 !== "/") {
                delete this._index[path$$1];
              }
            }
            return inode;
          };
          FileIndex.prototype.ls = function ls(path$$1) {
            var item = this._index[path$$1];
            if (item === void 0) {
              return null;
            }
            return item.getListing();
          };
          FileIndex.prototype.getInode = function getInode(path$$1) {
            var splitPath = this._split_path(path$$1);
            var dirpath = splitPath[0];
            var itemname = splitPath[1];
            var parent = this._index[dirpath];
            if (parent === void 0) {
              return null;
            }
            if (dirpath === path$$1) {
              return parent;
            }
            return parent.getItem(itemname);
          };
          FileIndex.prototype._split_path = function _split_path(p) {
            var dirpath = path.dirname(p);
            var itemname = p.substr(dirpath.length + (dirpath === "/" ? 0 : 1));
            return [dirpath, itemname];
          };
          var FileInode = function FileInode2(data) {
            this.data = data;
          };
          FileInode.prototype.isFile = function isFile() {
            return true;
          };
          FileInode.prototype.isDir = function isDir() {
            return false;
          };
          FileInode.prototype.getData = function getData() {
            return this.data;
          };
          FileInode.prototype.setData = function setData(data) {
            this.data = data;
          };
          var DirInode = function DirInode2(data) {
            if (data === void 0)
              data = null;
            this.data = data;
            this._ls = {};
          };
          DirInode.prototype.isFile = function isFile() {
            return false;
          };
          DirInode.prototype.isDir = function isDir() {
            return true;
          };
          DirInode.prototype.getData = function getData() {
            return this.data;
          };
          DirInode.prototype.getStats = function getStats() {
            return new Stats(FileType.DIRECTORY, 4096, 365);
          };
          DirInode.prototype.getListing = function getListing() {
            return Object.keys(this._ls);
          };
          DirInode.prototype.getItem = function getItem(p) {
            var item = this._ls[p];
            return item ? item : null;
          };
          DirInode.prototype.addItem = function addItem(p, inode) {
            if (p in this._ls) {
              return false;
            }
            this._ls[p] = inode;
            return true;
          };
          DirInode.prototype.remItem = function remItem(p) {
            var item = this._ls[p];
            if (item === void 0) {
              return null;
            }
            delete this._ls[p];
            return item;
          };
          function isFileInode(inode) {
            return !!inode && inode.isFile();
          }
          function isDirInode(inode) {
            return !!inode && inode.isDir();
          }
          function tryToString(buff, encoding, cb) {
            try {
              cb(null, buff.toString(encoding));
            } catch (e) {
              cb(e);
            }
          }
          var XmlHttpRequest = function(BaseFileSystem$$1) {
            function XmlHttpRequest2(listingUrlOrObj, prefixUrl, deprecateMsg) {
              if (prefixUrl === void 0)
                prefixUrl = "";
              if (deprecateMsg === void 0)
                deprecateMsg = true;
              BaseFileSystem$$1.call(this);
              if (!listingUrlOrObj) {
                listingUrlOrObj = "index.json";
              }
              if (prefixUrl.length > 0 && prefixUrl.charAt(prefixUrl.length - 1) !== "/") {
                prefixUrl = prefixUrl + "/";
              }
              this.prefixUrl = prefixUrl;
              var listing = null;
              if (typeof listingUrlOrObj === "string") {
                listing = this._requestFileSync(listingUrlOrObj, "json");
                if (!listing) {
                  throw new Error("Unable to find listing at URL: ${listingUrlOrObj}");
                }
              } else {
                listing = listingUrlOrObj;
              }
              deprecationMessage(deprecateMsg, XmlHttpRequest2.Name, { index: typeof listingUrlOrObj === "string" ? listingUrlOrObj : "file index as an object", baseUrl: prefixUrl });
              this._index = FileIndex.fromListing(listing);
            }
            if (BaseFileSystem$$1)
              XmlHttpRequest2.__proto__ = BaseFileSystem$$1;
            XmlHttpRequest2.prototype = Object.create(BaseFileSystem$$1 && BaseFileSystem$$1.prototype);
            XmlHttpRequest2.prototype.constructor = XmlHttpRequest2;
            XmlHttpRequest2.Create = function Create(opts, cb) {
              if (opts.index === void 0) {
                opts.index = "index.json";
              }
              if (typeof opts.index === "string") {
                XmlHttpRequest2.FromURL(opts.index, cb, opts.baseUrl, false);
              } else {
                cb(null, new XmlHttpRequest2(opts.index, opts.baseUrl, false));
              }
            };
            XmlHttpRequest2.isAvailable = function isAvailable() {
              return typeof XMLHttpRequest !== "undefined" && XMLHttpRequest !== null;
            };
            XmlHttpRequest2.FromURL = function FromURL(url5, cb, baseUrl, deprecateMsg) {
              if (baseUrl === void 0)
                baseUrl = url5.slice(0, url5.lastIndexOf("/") + 1);
              if (deprecateMsg === void 0)
                deprecateMsg = true;
              if (deprecateMsg) {
                console.warn(`[XmlHttpRequest] XmlHttpRequest.FromURL() is deprecated and will be removed in the next major release. Please use 'XmlHttpRequest.Create({ index: "` + url5 + '", baseUrl: "' + baseUrl + `" }, cb)' instead.`);
              }
              asyncDownloadFile(url5, "json", function(e, data) {
                if (e) {
                  cb(e);
                } else {
                  cb(null, new XmlHttpRequest2(data, baseUrl, false));
                }
              });
            };
            XmlHttpRequest2.prototype.empty = function empty() {
              this._index.fileIterator(function(file) {
                file.fileData = null;
              });
            };
            XmlHttpRequest2.prototype.getName = function getName() {
              return XmlHttpRequest2.Name;
            };
            XmlHttpRequest2.prototype.diskSpace = function diskSpace(path$$1, cb) {
              cb(0, 0);
            };
            XmlHttpRequest2.prototype.isReadOnly = function isReadOnly() {
              return true;
            };
            XmlHttpRequest2.prototype.supportsLinks = function supportsLinks() {
              return false;
            };
            XmlHttpRequest2.prototype.supportsProps = function supportsProps() {
              return false;
            };
            XmlHttpRequest2.prototype.supportsSynch = function supportsSynch() {
              return true;
            };
            XmlHttpRequest2.prototype.preloadFile = function preloadFile(path$$1, buffer$$1) {
              var inode = this._index.getInode(path$$1);
              if (isFileInode(inode)) {
                if (inode === null) {
                  throw ApiError.ENOENT(path$$1);
                }
                var stats = inode.getData();
                stats.size = buffer$$1.length;
                stats.fileData = buffer$$1;
              } else {
                throw ApiError.EISDIR(path$$1);
              }
            };
            XmlHttpRequest2.prototype.stat = function stat(path$$1, isLstat, cb) {
              var inode = this._index.getInode(path$$1);
              if (inode === null) {
                return cb(ApiError.ENOENT(path$$1));
              }
              var stats;
              if (isFileInode(inode)) {
                stats = inode.getData();
                if (stats.size < 0) {
                  this._requestFileSizeAsync(path$$1, function(e, size) {
                    if (e) {
                      return cb(e);
                    }
                    stats.size = size;
                    cb(null, stats.clone());
                  });
                } else {
                  cb(null, stats.clone());
                }
              } else if (isDirInode(inode)) {
                stats = inode.getStats();
                cb(null, stats);
              } else {
                cb(ApiError.FileError(ErrorCode.EINVAL, path$$1));
              }
            };
            XmlHttpRequest2.prototype.statSync = function statSync(path$$1, isLstat) {
              var inode = this._index.getInode(path$$1);
              if (inode === null) {
                throw ApiError.ENOENT(path$$1);
              }
              var stats;
              if (isFileInode(inode)) {
                stats = inode.getData();
                if (stats.size < 0) {
                  stats.size = this._requestFileSizeSync(path$$1);
                }
              } else if (isDirInode(inode)) {
                stats = inode.getStats();
              } else {
                throw ApiError.FileError(ErrorCode.EINVAL, path$$1);
              }
              return stats;
            };
            XmlHttpRequest2.prototype.open = function open(path$$1, flags, mode, cb) {
              if (flags.isWriteable()) {
                return cb(new ApiError(ErrorCode.EPERM, path$$1));
              }
              var self2 = this;
              var inode = this._index.getInode(path$$1);
              if (inode === null) {
                return cb(ApiError.ENOENT(path$$1));
              }
              if (isFileInode(inode)) {
                var stats = inode.getData();
                switch (flags.pathExistsAction()) {
                  case ActionType.THROW_EXCEPTION:
                  case ActionType.TRUNCATE_FILE:
                    return cb(ApiError.EEXIST(path$$1));
                  case ActionType.NOP:
                    if (stats.fileData) {
                      return cb(null, new NoSyncFile(self2, path$$1, flags, stats.clone(), stats.fileData));
                    }
                    this._requestFileAsync(path$$1, "buffer", function(err, buffer$$1) {
                      if (err) {
                        return cb(err);
                      }
                      stats.size = buffer$$1.length;
                      stats.fileData = buffer$$1;
                      return cb(null, new NoSyncFile(self2, path$$1, flags, stats.clone(), buffer$$1));
                    });
                    break;
                  default:
                    return cb(new ApiError(ErrorCode.EINVAL, "Invalid FileMode object."));
                }
              } else {
                return cb(ApiError.EISDIR(path$$1));
              }
            };
            XmlHttpRequest2.prototype.openSync = function openSync(path$$1, flags, mode) {
              if (flags.isWriteable()) {
                throw new ApiError(ErrorCode.EPERM, path$$1);
              }
              var inode = this._index.getInode(path$$1);
              if (inode === null) {
                throw ApiError.ENOENT(path$$1);
              }
              if (isFileInode(inode)) {
                var stats = inode.getData();
                switch (flags.pathExistsAction()) {
                  case ActionType.THROW_EXCEPTION:
                  case ActionType.TRUNCATE_FILE:
                    throw ApiError.EEXIST(path$$1);
                  case ActionType.NOP:
                    if (stats.fileData) {
                      return new NoSyncFile(this, path$$1, flags, stats.clone(), stats.fileData);
                    }
                    var buffer$$1 = this._requestFileSync(path$$1, "buffer");
                    stats.size = buffer$$1.length;
                    stats.fileData = buffer$$1;
                    return new NoSyncFile(this, path$$1, flags, stats.clone(), buffer$$1);
                  default:
                    throw new ApiError(ErrorCode.EINVAL, "Invalid FileMode object.");
                }
              } else {
                throw ApiError.EISDIR(path$$1);
              }
            };
            XmlHttpRequest2.prototype.readdir = function readdir(path$$1, cb) {
              try {
                cb(null, this.readdirSync(path$$1));
              } catch (e) {
                cb(e);
              }
            };
            XmlHttpRequest2.prototype.readdirSync = function readdirSync(path$$1) {
              var inode = this._index.getInode(path$$1);
              if (inode === null) {
                throw ApiError.ENOENT(path$$1);
              } else if (isDirInode(inode)) {
                return inode.getListing();
              } else {
                throw ApiError.ENOTDIR(path$$1);
              }
            };
            XmlHttpRequest2.prototype.readFile = function readFile2(fname, encoding, flag, cb) {
              var oldCb = cb;
              this.open(fname, flag, 420, function(err, fd) {
                if (err) {
                  return cb(err);
                }
                cb = function(err2, arg) {
                  fd.close(function(err22) {
                    if (!err2) {
                      err2 = err22;
                    }
                    return oldCb(err2, arg);
                  });
                };
                var fdCast = fd;
                var fdBuff = fdCast.getBuffer();
                if (encoding === null) {
                  cb(err, copyingSlice(fdBuff));
                } else {
                  tryToString(fdBuff, encoding, cb);
                }
              });
            };
            XmlHttpRequest2.prototype.readFileSync = function readFileSync(fname, encoding, flag) {
              var fd = this.openSync(fname, flag, 420);
              try {
                var fdCast = fd;
                var fdBuff = fdCast.getBuffer();
                if (encoding === null) {
                  return copyingSlice(fdBuff);
                }
                return fdBuff.toString(encoding);
              } finally {
                fd.closeSync();
              }
            };
            XmlHttpRequest2.prototype.getXhrPath = function getXhrPath(filePath) {
              if (filePath.charAt(0) === "/") {
                filePath = filePath.slice(1);
              }
              return this.prefixUrl + filePath;
            };
            XmlHttpRequest2.prototype._requestFileAsync = function _requestFileAsync(p, type, cb) {
              asyncDownloadFile(this.getXhrPath(p), type, cb);
            };
            XmlHttpRequest2.prototype._requestFileSync = function _requestFileSync(p, type) {
              return syncDownloadFile(this.getXhrPath(p), type);
            };
            XmlHttpRequest2.prototype._requestFileSizeAsync = function _requestFileSizeAsync(path$$1, cb) {
              getFileSizeAsync(this.getXhrPath(path$$1), cb);
            };
            XmlHttpRequest2.prototype._requestFileSizeSync = function _requestFileSizeSync(path$$1) {
              return getFileSizeSync(this.getXhrPath(path$$1));
            };
            return XmlHttpRequest2;
          }(BaseFileSystem);
          XmlHttpRequest.Name = "XmlHttpRequest";
          XmlHttpRequest.Options = { index: { type: ["string", "object"], optional: true, description: "URL to a file index as a JSON file or the file index object itself, generated with the make_xhrfs_index script. Defaults to `index.json`." }, baseUrl: { type: "string", optional: true, description: "Used as the URL prefix for fetched files. Default: Fetch files relative to the index." } };
          var ExtendedASCII = function ExtendedASCII2() {
          };
          ExtendedASCII.str2byte = function str2byte(str4, buf) {
            var length = str4.length > buf.length ? buf.length : str4.length;
            for (var i2 = 0; i2 < length; i2++) {
              var charCode = str4.charCodeAt(i2);
              if (charCode > 127) {
                var charIdx = ExtendedASCII.extendedChars.indexOf(str4.charAt(i2));
                if (charIdx > -1) {
                  charCode = charIdx + 128;
                }
              }
              buf[charCode] = i2;
            }
            return length;
          };
          ExtendedASCII.byte2str = function byte2str(buff) {
            var chars = new Array(buff.length);
            for (var i2 = 0; i2 < buff.length; i2++) {
              var charCode = buff[i2];
              if (charCode > 127) {
                chars[i2] = ExtendedASCII.extendedChars[charCode - 128];
              } else {
                chars[i2] = String.fromCharCode(charCode);
              }
            }
            return chars.join("");
          };
          ExtendedASCII.byteLength = function byteLength(str4) {
            return str4.length;
          };
          ExtendedASCII.extendedChars = ["\xC7", "\xFC", "\xE9", "\xE2", "\xE4", "\xE0", "\xE5", "\xE7", "\xEA", "\xEB", "\xE8", "\xEF", "\xEE", "\xEC", "\xC4", "\xC5", "\xC9", "\xE6", "\xC6", "\xF4", "\xF6", "\xF2", "\xFB", "\xF9", "\xFF", "\xD6", "\xDC", "\xF8", "\xA3", "\xD8", "\xD7", "\u0192", "\xE1", "\xED", "\xF3", "\xFA", "\xF1", "\xD1", "\xAA", "\xBA", "\xBF", "\xAE", "\xAC", "\xBD", "\xBC", "\xA1", "\xAB", "\xBB", "_", "_", "_", "\xA6", "\xA6", "\xC1", "\xC2", "\xC0", "\xA9", "\xA6", "\xA6", "+", "+", "\xA2", "\xA5", "+", "+", "-", "-", "+", "-", "+", "\xE3", "\xC3", "+", "+", "-", "-", "\xA6", "-", "+", "\xA4", "\xF0", "\xD0", "\xCA", "\xCB", "\xC8", "i", "\xCD", "\xCE", "\xCF", "+", "+", "_", "_", "\xA6", "\xCC", "_", "\xD3", "\xDF", "\xD4", "\xD2", "\xF5", "\xD5", "\xB5", "\xFE", "\xDE", "\xDA", "\xDB", "\xD9", "\xFD", "\xDD", "\xAF", "\xB4", "\xAD", "\xB1", "_", "\xBE", "\xB6", "\xA7", "\xF7", "\xB8", "\xB0", "\xA8", "\xB7", "\xB9", "\xB3", "\xB2", "_", " "];
          var inflateRaw = __webpack_require__(31).inflateRaw;
          var decompressionMethods = {};
          var ExternalFileAttributeType;
          (function(ExternalFileAttributeType2) {
            ExternalFileAttributeType2[ExternalFileAttributeType2["MSDOS"] = 0] = "MSDOS";
            ExternalFileAttributeType2[ExternalFileAttributeType2["AMIGA"] = 1] = "AMIGA";
            ExternalFileAttributeType2[ExternalFileAttributeType2["OPENVMS"] = 2] = "OPENVMS";
            ExternalFileAttributeType2[ExternalFileAttributeType2["UNIX"] = 3] = "UNIX";
            ExternalFileAttributeType2[ExternalFileAttributeType2["VM_CMS"] = 4] = "VM_CMS";
            ExternalFileAttributeType2[ExternalFileAttributeType2["ATARI_ST"] = 5] = "ATARI_ST";
            ExternalFileAttributeType2[ExternalFileAttributeType2["OS2_HPFS"] = 6] = "OS2_HPFS";
            ExternalFileAttributeType2[ExternalFileAttributeType2["MAC"] = 7] = "MAC";
            ExternalFileAttributeType2[ExternalFileAttributeType2["Z_SYSTEM"] = 8] = "Z_SYSTEM";
            ExternalFileAttributeType2[ExternalFileAttributeType2["CP_M"] = 9] = "CP_M";
            ExternalFileAttributeType2[ExternalFileAttributeType2["NTFS"] = 10] = "NTFS";
            ExternalFileAttributeType2[ExternalFileAttributeType2["MVS"] = 11] = "MVS";
            ExternalFileAttributeType2[ExternalFileAttributeType2["VSE"] = 12] = "VSE";
            ExternalFileAttributeType2[ExternalFileAttributeType2["ACORN_RISC"] = 13] = "ACORN_RISC";
            ExternalFileAttributeType2[ExternalFileAttributeType2["VFAT"] = 14] = "VFAT";
            ExternalFileAttributeType2[ExternalFileAttributeType2["ALT_MVS"] = 15] = "ALT_MVS";
            ExternalFileAttributeType2[ExternalFileAttributeType2["BEOS"] = 16] = "BEOS";
            ExternalFileAttributeType2[ExternalFileAttributeType2["TANDEM"] = 17] = "TANDEM";
            ExternalFileAttributeType2[ExternalFileAttributeType2["OS_400"] = 18] = "OS_400";
            ExternalFileAttributeType2[ExternalFileAttributeType2["OSX"] = 19] = "OSX";
          })(ExternalFileAttributeType || (ExternalFileAttributeType = {}));
          var CompressionMethod;
          (function(CompressionMethod2) {
            CompressionMethod2[CompressionMethod2["STORED"] = 0] = "STORED";
            CompressionMethod2[CompressionMethod2["SHRUNK"] = 1] = "SHRUNK";
            CompressionMethod2[CompressionMethod2["REDUCED_1"] = 2] = "REDUCED_1";
            CompressionMethod2[CompressionMethod2["REDUCED_2"] = 3] = "REDUCED_2";
            CompressionMethod2[CompressionMethod2["REDUCED_3"] = 4] = "REDUCED_3";
            CompressionMethod2[CompressionMethod2["REDUCED_4"] = 5] = "REDUCED_4";
            CompressionMethod2[CompressionMethod2["IMPLODE"] = 6] = "IMPLODE";
            CompressionMethod2[CompressionMethod2["DEFLATE"] = 8] = "DEFLATE";
            CompressionMethod2[CompressionMethod2["DEFLATE64"] = 9] = "DEFLATE64";
            CompressionMethod2[CompressionMethod2["TERSE_OLD"] = 10] = "TERSE_OLD";
            CompressionMethod2[CompressionMethod2["BZIP2"] = 12] = "BZIP2";
            CompressionMethod2[CompressionMethod2["LZMA"] = 14] = "LZMA";
            CompressionMethod2[CompressionMethod2["TERSE_NEW"] = 18] = "TERSE_NEW";
            CompressionMethod2[CompressionMethod2["LZ77"] = 19] = "LZ77";
            CompressionMethod2[CompressionMethod2["WAVPACK"] = 97] = "WAVPACK";
            CompressionMethod2[CompressionMethod2["PPMD"] = 98] = "PPMD";
          })(CompressionMethod || (CompressionMethod = {}));
          function msdos2date(time, date) {
            var day = date & 31;
            var month = (date >> 5 & 15) - 1;
            var year = (date >> 9) + 1980;
            var second = time & 31;
            var minute = time >> 5 & 63;
            var hour = time >> 11;
            return new Date(year, month, day, hour, minute, second);
          }
          function safeToString(buff, useUTF8, start, length) {
            if (length === 0) {
              return "";
            } else if (useUTF8) {
              return buff.toString("utf8", start, start + length);
            } else {
              return ExtendedASCII.byte2str(buff.slice(start, start + length));
            }
          }
          var FileHeader = function FileHeader2(data) {
            this.data = data;
            if (data.readUInt32LE(0) !== 67324752) {
              throw new ApiError(ErrorCode.EINVAL, "Invalid Zip file: Local file header has invalid signature: " + this.data.readUInt32LE(0));
            }
          };
          FileHeader.prototype.versionNeeded = function versionNeeded() {
            return this.data.readUInt16LE(4);
          };
          FileHeader.prototype.flags = function flags() {
            return this.data.readUInt16LE(6);
          };
          FileHeader.prototype.compressionMethod = function compressionMethod() {
            return this.data.readUInt16LE(8);
          };
          FileHeader.prototype.lastModFileTime = function lastModFileTime() {
            return msdos2date(this.data.readUInt16LE(10), this.data.readUInt16LE(12));
          };
          FileHeader.prototype.rawLastModFileTime = function rawLastModFileTime() {
            return this.data.readUInt32LE(10);
          };
          FileHeader.prototype.crc32 = function crc32() {
            return this.data.readUInt32LE(14);
          };
          FileHeader.prototype.fileNameLength = function fileNameLength() {
            return this.data.readUInt16LE(26);
          };
          FileHeader.prototype.extraFieldLength = function extraFieldLength() {
            return this.data.readUInt16LE(28);
          };
          FileHeader.prototype.fileName = function fileName() {
            return safeToString(this.data, this.useUTF8(), 30, this.fileNameLength());
          };
          FileHeader.prototype.extraField = function extraField() {
            var start = 30 + this.fileNameLength();
            return this.data.slice(start, start + this.extraFieldLength());
          };
          FileHeader.prototype.totalSize = function totalSize() {
            return 30 + this.fileNameLength() + this.extraFieldLength();
          };
          FileHeader.prototype.useUTF8 = function useUTF8() {
            return (this.flags() & 2048) === 2048;
          };
          var FileData = function FileData2(header, record, data) {
            this.header = header;
            this.record = record;
            this.data = data;
          };
          FileData.prototype.decompress = function decompress() {
            var compressionMethod = this.header.compressionMethod();
            var fcn = decompressionMethods[compressionMethod];
            if (fcn) {
              return fcn(this.data, this.record.compressedSize(), this.record.uncompressedSize(), this.record.flag());
            } else {
              var name3 = CompressionMethod[compressionMethod];
              if (!name3) {
                name3 = "Unknown: " + compressionMethod;
              }
              throw new ApiError(ErrorCode.EINVAL, "Invalid compression method on file '" + this.header.fileName() + "': " + name3);
            }
          };
          FileData.prototype.getHeader = function getHeader() {
            return this.header;
          };
          FileData.prototype.getRecord = function getRecord() {
            return this.record;
          };
          FileData.prototype.getRawData = function getRawData() {
            return this.data;
          };
          var DataDescriptor = function DataDescriptor2(data) {
            this.data = data;
          };
          DataDescriptor.prototype.crc32 = function crc32() {
            return this.data.readUInt32LE(0);
          };
          DataDescriptor.prototype.compressedSize = function compressedSize() {
            return this.data.readUInt32LE(4);
          };
          DataDescriptor.prototype.uncompressedSize = function uncompressedSize() {
            return this.data.readUInt32LE(8);
          };
          var ArchiveExtraDataRecord = function ArchiveExtraDataRecord2(data) {
            this.data = data;
            if (this.data.readUInt32LE(0) !== 134630224) {
              throw new ApiError(ErrorCode.EINVAL, "Invalid archive extra data record signature: " + this.data.readUInt32LE(0));
            }
          };
          ArchiveExtraDataRecord.prototype.length = function length() {
            return this.data.readUInt32LE(4);
          };
          ArchiveExtraDataRecord.prototype.extraFieldData = function extraFieldData() {
            return this.data.slice(8, 8 + this.length());
          };
          var DigitalSignature = function DigitalSignature2(data) {
            this.data = data;
            if (this.data.readUInt32LE(0) !== 84233040) {
              throw new ApiError(ErrorCode.EINVAL, "Invalid digital signature signature: " + this.data.readUInt32LE(0));
            }
          };
          DigitalSignature.prototype.size = function size() {
            return this.data.readUInt16LE(4);
          };
          DigitalSignature.prototype.signatureData = function signatureData() {
            return this.data.slice(6, 6 + this.size());
          };
          var CentralDirectory = function CentralDirectory2(zipData, data) {
            this.zipData = zipData;
            this.data = data;
            if (this.data.readUInt32LE(0) !== 33639248) {
              throw new ApiError(ErrorCode.EINVAL, "Invalid Zip file: Central directory record has invalid signature: " + this.data.readUInt32LE(0));
            }
            this._filename = this.produceFilename();
          };
          CentralDirectory.prototype.versionMadeBy = function versionMadeBy() {
            return this.data.readUInt16LE(4);
          };
          CentralDirectory.prototype.versionNeeded = function versionNeeded() {
            return this.data.readUInt16LE(6);
          };
          CentralDirectory.prototype.flag = function flag() {
            return this.data.readUInt16LE(8);
          };
          CentralDirectory.prototype.compressionMethod = function compressionMethod() {
            return this.data.readUInt16LE(10);
          };
          CentralDirectory.prototype.lastModFileTime = function lastModFileTime() {
            return msdos2date(this.data.readUInt16LE(12), this.data.readUInt16LE(14));
          };
          CentralDirectory.prototype.rawLastModFileTime = function rawLastModFileTime() {
            return this.data.readUInt32LE(12);
          };
          CentralDirectory.prototype.crc32 = function crc32() {
            return this.data.readUInt32LE(16);
          };
          CentralDirectory.prototype.compressedSize = function compressedSize() {
            return this.data.readUInt32LE(20);
          };
          CentralDirectory.prototype.uncompressedSize = function uncompressedSize() {
            return this.data.readUInt32LE(24);
          };
          CentralDirectory.prototype.fileNameLength = function fileNameLength() {
            return this.data.readUInt16LE(28);
          };
          CentralDirectory.prototype.extraFieldLength = function extraFieldLength() {
            return this.data.readUInt16LE(30);
          };
          CentralDirectory.prototype.fileCommentLength = function fileCommentLength() {
            return this.data.readUInt16LE(32);
          };
          CentralDirectory.prototype.diskNumberStart = function diskNumberStart() {
            return this.data.readUInt16LE(34);
          };
          CentralDirectory.prototype.internalAttributes = function internalAttributes() {
            return this.data.readUInt16LE(36);
          };
          CentralDirectory.prototype.externalAttributes = function externalAttributes() {
            return this.data.readUInt32LE(38);
          };
          CentralDirectory.prototype.headerRelativeOffset = function headerRelativeOffset() {
            return this.data.readUInt32LE(42);
          };
          CentralDirectory.prototype.produceFilename = function produceFilename() {
            var fileName = safeToString(this.data, this.useUTF8(), 46, this.fileNameLength());
            return fileName.replace(/\\/g, "/");
          };
          CentralDirectory.prototype.fileName = function fileName() {
            return this._filename;
          };
          CentralDirectory.prototype.rawFileName = function rawFileName() {
            return this.data.slice(46, 46 + this.fileNameLength());
          };
          CentralDirectory.prototype.extraField = function extraField() {
            var start = 44 + this.fileNameLength();
            return this.data.slice(start, start + this.extraFieldLength());
          };
          CentralDirectory.prototype.fileComment = function fileComment() {
            var start = 46 + this.fileNameLength() + this.extraFieldLength();
            return safeToString(this.data, this.useUTF8(), start, this.fileCommentLength());
          };
          CentralDirectory.prototype.rawFileComment = function rawFileComment() {
            var start = 46 + this.fileNameLength() + this.extraFieldLength();
            return this.data.slice(start, start + this.fileCommentLength());
          };
          CentralDirectory.prototype.totalSize = function totalSize() {
            return 46 + this.fileNameLength() + this.extraFieldLength() + this.fileCommentLength();
          };
          CentralDirectory.prototype.isDirectory = function isDirectory() {
            var fileName = this.fileName();
            return (this.externalAttributes() & 16 ? true : false) || fileName.charAt(fileName.length - 1) === "/";
          };
          CentralDirectory.prototype.isFile = function isFile() {
            return !this.isDirectory();
          };
          CentralDirectory.prototype.useUTF8 = function useUTF8() {
            return (this.flag() & 2048) === 2048;
          };
          CentralDirectory.prototype.isEncrypted = function isEncrypted() {
            return (this.flag() & 1) === 1;
          };
          CentralDirectory.prototype.getFileData = function getFileData() {
            var start = this.headerRelativeOffset();
            var header = new FileHeader(this.zipData.slice(start));
            return new FileData(header, this, this.zipData.slice(start + header.totalSize()));
          };
          CentralDirectory.prototype.getData = function getData() {
            return this.getFileData().decompress();
          };
          CentralDirectory.prototype.getRawData = function getRawData() {
            return this.getFileData().getRawData();
          };
          CentralDirectory.prototype.getStats = function getStats() {
            return new Stats(FileType.FILE, this.uncompressedSize(), 365, new Date(), this.lastModFileTime());
          };
          var EndOfCentralDirectory = function EndOfCentralDirectory2(data) {
            this.data = data;
            if (this.data.readUInt32LE(0) !== 101010256) {
              throw new ApiError(ErrorCode.EINVAL, "Invalid Zip file: End of central directory record has invalid signature: " + this.data.readUInt32LE(0));
            }
          };
          EndOfCentralDirectory.prototype.diskNumber = function diskNumber() {
            return this.data.readUInt16LE(4);
          };
          EndOfCentralDirectory.prototype.cdDiskNumber = function cdDiskNumber() {
            return this.data.readUInt16LE(6);
          };
          EndOfCentralDirectory.prototype.cdDiskEntryCount = function cdDiskEntryCount() {
            return this.data.readUInt16LE(8);
          };
          EndOfCentralDirectory.prototype.cdTotalEntryCount = function cdTotalEntryCount() {
            return this.data.readUInt16LE(10);
          };
          EndOfCentralDirectory.prototype.cdSize = function cdSize() {
            return this.data.readUInt32LE(12);
          };
          EndOfCentralDirectory.prototype.cdOffset = function cdOffset() {
            return this.data.readUInt32LE(16);
          };
          EndOfCentralDirectory.prototype.cdZipCommentLength = function cdZipCommentLength() {
            return this.data.readUInt16LE(20);
          };
          EndOfCentralDirectory.prototype.cdZipComment = function cdZipComment() {
            return safeToString(this.data, true, 22, this.cdZipCommentLength());
          };
          EndOfCentralDirectory.prototype.rawCdZipComment = function rawCdZipComment() {
            return this.data.slice(22, 22 + this.cdZipCommentLength());
          };
          var ZipTOC = function ZipTOC2(index, directoryEntries, eocd, data) {
            this.index = index;
            this.directoryEntries = directoryEntries;
            this.eocd = eocd;
            this.data = data;
          };
          var ZipFS = function(SynchronousFileSystem$$1) {
            function ZipFS2(input, name3, deprecateMsg) {
              if (name3 === void 0)
                name3 = "";
              if (deprecateMsg === void 0)
                deprecateMsg = true;
              SynchronousFileSystem$$1.call(this);
              this.name = name3;
              this._index = new FileIndex();
              this._directoryEntries = [];
              this._eocd = null;
              deprecationMessage(deprecateMsg, ZipFS2.Name, { zipData: "zip data as a Buffer", name: name3 });
              if (input instanceof ZipTOC) {
                this._index = input.index;
                this._directoryEntries = input.directoryEntries;
                this._eocd = input.eocd;
                this.data = input.data;
              } else {
                this.data = input;
                this.populateIndex();
              }
            }
            if (SynchronousFileSystem$$1)
              ZipFS2.__proto__ = SynchronousFileSystem$$1;
            ZipFS2.prototype = Object.create(SynchronousFileSystem$$1 && SynchronousFileSystem$$1.prototype);
            ZipFS2.prototype.constructor = ZipFS2;
            ZipFS2.Create = function Create(opts, cb) {
              try {
                ZipFS2.computeIndex(opts.zipData, function(zipTOC) {
                  var fs4 = new ZipFS2(zipTOC, opts.name, false);
                  cb(null, fs4);
                }, false);
              } catch (e) {
                cb(e);
              }
            };
            ZipFS2.isAvailable = function isAvailable() {
              return true;
            };
            ZipFS2.RegisterDecompressionMethod = function RegisterDecompressionMethod(m, fcn) {
              decompressionMethods[m] = fcn;
            };
            ZipFS2.computeIndex = function computeIndex(data, cb, deprecateMsg) {
              if (deprecateMsg === void 0)
                deprecateMsg = true;
              if (deprecateMsg) {
                console.warn("[ZipFS] ZipFS.computeIndex is now deprecated, and will be removed in the next major release. Please update your code to use 'ZipFS.Create({ zipData: zip file as a Buffer}, cb)' instead.");
              }
              var index = new FileIndex();
              var eocd = ZipFS2.getEOCD(data);
              if (eocd.diskNumber() !== eocd.cdDiskNumber()) {
                throw new ApiError(ErrorCode.EINVAL, "ZipFS does not support spanned zip files.");
              }
              var cdPtr = eocd.cdOffset();
              if (cdPtr === 4294967295) {
                throw new ApiError(ErrorCode.EINVAL, "ZipFS does not support Zip64.");
              }
              var cdEnd = cdPtr + eocd.cdSize();
              ZipFS2.computeIndexResponsive(data, index, cdPtr, cdEnd, cb, [], eocd);
            };
            ZipFS2.getEOCD = function getEOCD(data) {
              var startOffset = 22;
              var endOffset = Math.min(startOffset + 65535, data.length - 1);
              for (var i2 = startOffset; i2 < endOffset; i2++) {
                if (data.readUInt32LE(data.length - i2) === 101010256) {
                  return new EndOfCentralDirectory(data.slice(data.length - i2));
                }
              }
              throw new ApiError(ErrorCode.EINVAL, "Invalid ZIP file: Could not locate End of Central Directory signature.");
            };
            ZipFS2.addToIndex = function addToIndex(cd, index) {
              var filename = cd.fileName();
              if (filename.charAt(0) === "/") {
                throw new Error("WHY IS THIS ABSOLUTE");
              }
              if (filename.charAt(filename.length - 1) === "/") {
                filename = filename.substr(0, filename.length - 1);
              }
              if (cd.isDirectory()) {
                index.addPathFast("/" + filename, new DirInode(cd));
              } else {
                index.addPathFast("/" + filename, new FileInode(cd));
              }
            };
            ZipFS2.computeIndexResponsive = function computeIndexResponsive(data, index, cdPtr, cdEnd, cb, cdEntries, eocd) {
              if (cdPtr < cdEnd) {
                var count = 0;
                while (count++ < 200 && cdPtr < cdEnd) {
                  var cd = new CentralDirectory(data, data.slice(cdPtr));
                  ZipFS2.addToIndex(cd, index);
                  cdPtr += cd.totalSize();
                  cdEntries.push(cd);
                }
                setImmediate$3(function() {
                  ZipFS2.computeIndexResponsive(data, index, cdPtr, cdEnd, cb, cdEntries, eocd);
                });
              } else {
                cb(new ZipTOC(index, cdEntries, eocd, data));
              }
            };
            ZipFS2.prototype.getName = function getName() {
              return ZipFS2.Name + (this.name !== "" ? " " + this.name : "");
            };
            ZipFS2.prototype.getCentralDirectoryEntry = function getCentralDirectoryEntry(path$$1) {
              var inode = this._index.getInode(path$$1);
              if (inode === null) {
                throw ApiError.ENOENT(path$$1);
              }
              if (isFileInode(inode)) {
                return inode.getData();
              } else if (isDirInode(inode)) {
                return inode.getData();
              } else {
                throw ApiError.EPERM("Invalid inode: " + inode);
              }
            };
            ZipFS2.prototype.getCentralDirectoryEntryAt = function getCentralDirectoryEntryAt(index) {
              var dirEntry = this._directoryEntries[index];
              if (!dirEntry) {
                throw new RangeError("Invalid directory index: " + index + ".");
              }
              return dirEntry;
            };
            ZipFS2.prototype.getNumberOfCentralDirectoryEntries = function getNumberOfCentralDirectoryEntries() {
              return this._directoryEntries.length;
            };
            ZipFS2.prototype.getEndOfCentralDirectory = function getEndOfCentralDirectory() {
              return this._eocd;
            };
            ZipFS2.prototype.diskSpace = function diskSpace(path$$1, cb) {
              cb(this.data.length, 0);
            };
            ZipFS2.prototype.isReadOnly = function isReadOnly() {
              return true;
            };
            ZipFS2.prototype.supportsLinks = function supportsLinks() {
              return false;
            };
            ZipFS2.prototype.supportsProps = function supportsProps() {
              return false;
            };
            ZipFS2.prototype.supportsSynch = function supportsSynch() {
              return true;
            };
            ZipFS2.prototype.statSync = function statSync(path$$1, isLstat) {
              var inode = this._index.getInode(path$$1);
              if (inode === null) {
                throw ApiError.ENOENT(path$$1);
              }
              var stats;
              if (isFileInode(inode)) {
                stats = inode.getData().getStats();
              } else if (isDirInode(inode)) {
                stats = inode.getStats();
              } else {
                throw new ApiError(ErrorCode.EINVAL, "Invalid inode.");
              }
              return stats;
            };
            ZipFS2.prototype.openSync = function openSync(path$$1, flags, mode) {
              if (flags.isWriteable()) {
                throw new ApiError(ErrorCode.EPERM, path$$1);
              }
              var inode = this._index.getInode(path$$1);
              if (!inode) {
                throw ApiError.ENOENT(path$$1);
              } else if (isFileInode(inode)) {
                var cdRecord = inode.getData();
                var stats = cdRecord.getStats();
                switch (flags.pathExistsAction()) {
                  case ActionType.THROW_EXCEPTION:
                  case ActionType.TRUNCATE_FILE:
                    throw ApiError.EEXIST(path$$1);
                  case ActionType.NOP:
                    return new NoSyncFile(this, path$$1, flags, stats, cdRecord.getData());
                  default:
                    throw new ApiError(ErrorCode.EINVAL, "Invalid FileMode object.");
                }
              } else {
                throw ApiError.EISDIR(path$$1);
              }
            };
            ZipFS2.prototype.readdirSync = function readdirSync(path$$1) {
              var inode = this._index.getInode(path$$1);
              if (!inode) {
                throw ApiError.ENOENT(path$$1);
              } else if (isDirInode(inode)) {
                return inode.getListing();
              } else {
                throw ApiError.ENOTDIR(path$$1);
              }
            };
            ZipFS2.prototype.readFileSync = function readFileSync(fname, encoding, flag) {
              var fd = this.openSync(fname, flag, 420);
              try {
                var fdCast = fd;
                var fdBuff = fdCast.getBuffer();
                if (encoding === null) {
                  return copyingSlice(fdBuff);
                }
                return fdBuff.toString(encoding);
              } finally {
                fd.closeSync();
              }
            };
            ZipFS2.prototype.populateIndex = function populateIndex() {
              var this$1 = this;
              var eocd = this._eocd = ZipFS2.getEOCD(this.data);
              if (eocd.diskNumber() !== eocd.cdDiskNumber()) {
                throw new ApiError(ErrorCode.EINVAL, "ZipFS does not support spanned zip files.");
              }
              var cdPtr = eocd.cdOffset();
              if (cdPtr === 4294967295) {
                throw new ApiError(ErrorCode.EINVAL, "ZipFS does not support Zip64.");
              }
              var cdEnd = cdPtr + eocd.cdSize();
              while (cdPtr < cdEnd) {
                var cd = new CentralDirectory(this$1.data, this$1.data.slice(cdPtr));
                cdPtr += cd.totalSize();
                ZipFS2.addToIndex(cd, this$1._index);
                this$1._directoryEntries.push(cd);
              }
            };
            return ZipFS2;
          }(SynchronousFileSystem);
          ZipFS.Name = "ZipFS";
          ZipFS.Options = { zipData: { type: "object", description: "The zip file as a Buffer object.", validator: bufferValidator }, name: { type: "string", optional: true, description: "The name of the zip file (optional)." } };
          ZipFS.CompressionMethod = CompressionMethod;
          ZipFS.RegisterDecompressionMethod(CompressionMethod.DEFLATE, function(data, compressedSize, uncompressedSize) {
            return arrayish2Buffer(inflateRaw(data.slice(0, compressedSize), { chunkSize: uncompressedSize }));
          });
          ZipFS.RegisterDecompressionMethod(CompressionMethod.STORED, function(data, compressedSize, uncompressedSize) {
            return copyingSlice(data, 0, uncompressedSize);
          });
          var rockRidgeIdentifier = "IEEE_P1282";
          function getASCIIString(data, startIndex, length) {
            return data.toString("ascii", startIndex, startIndex + length).trim();
          }
          function getJolietString(data, startIndex, length) {
            if (length === 1) {
              return String.fromCharCode(data[startIndex]);
            }
            var pairs = Math.floor(length / 2);
            var chars = new Array(pairs);
            for (var i2 = 0; i2 < pairs; i2++) {
              var pos = startIndex + (i2 << 1);
              chars[i2] = String.fromCharCode(data[pos + 1] | data[pos] << 8);
            }
            return chars.join("");
          }
          function getDate(data, startIndex) {
            var year = parseInt(getASCIIString(data, startIndex, 4), 10);
            var mon = parseInt(getASCIIString(data, startIndex + 4, 2), 10);
            var day = parseInt(getASCIIString(data, startIndex + 6, 2), 10);
            var hour = parseInt(getASCIIString(data, startIndex + 8, 2), 10);
            var min = parseInt(getASCIIString(data, startIndex + 10, 2), 10);
            var sec = parseInt(getASCIIString(data, startIndex + 12, 2), 10);
            var hundrethsSec = parseInt(getASCIIString(data, startIndex + 14, 2), 10);
            return new Date(year, mon, day, hour, min, sec, hundrethsSec * 100);
          }
          function getShortFormDate(data, startIndex) {
            var yearsSince1900 = data[startIndex];
            var month = data[startIndex + 1];
            var day = data[startIndex + 2];
            var hour = data[startIndex + 3];
            var minute = data[startIndex + 4];
            var second = data[startIndex + 5];
            return new Date(yearsSince1900, month - 1, day, hour, minute, second);
          }
          function constructSystemUseEntry(bigData, i2) {
            var data = bigData.slice(i2);
            var sue = new SystemUseEntry(data);
            switch (sue.signatureWord()) {
              case 17221:
                return new CEEntry(data);
              case 20548:
                return new PDEntry(data);
              case 21328:
                return new SPEntry(data);
              case 21332:
                return new STEntry(data);
              case 17746:
                return new EREntry(data);
              case 17747:
                return new ESEntry(data);
              case 20568:
                return new PXEntry(data);
              case 20558:
                return new PNEntry(data);
              case 21324:
                return new SLEntry(data);
              case 20045:
                return new NMEntry(data);
              case 17228:
                return new CLEntry(data);
              case 20556:
                return new PLEntry(data);
              case 21061:
                return new REEntry(data);
              case 21574:
                return new TFEntry(data);
              case 21318:
                return new SFEntry(data);
              case 21074:
                return new RREntry(data);
              default:
                return sue;
            }
          }
          function constructSystemUseEntries(data, i2, len, isoData) {
            len = len - 4;
            var entries = new Array();
            while (i2 < len) {
              var entry = constructSystemUseEntry(data, i2);
              var length = entry.length();
              if (length === 0) {
                return entries;
              }
              i2 += length;
              if (entry instanceof STEntry) {
                break;
              }
              if (entry instanceof CEEntry) {
                entries = entries.concat(entry.getEntries(isoData));
              } else {
                entries.push(entry);
              }
            }
            return entries;
          }
          var VolumeDescriptor = function VolumeDescriptor2(data) {
            this._data = data;
          };
          VolumeDescriptor.prototype.type = function type() {
            return this._data[0];
          };
          VolumeDescriptor.prototype.standardIdentifier = function standardIdentifier() {
            return getASCIIString(this._data, 1, 5);
          };
          VolumeDescriptor.prototype.version = function version() {
            return this._data[6];
          };
          VolumeDescriptor.prototype.data = function data() {
            return this._data.slice(7, 2048);
          };
          var PrimaryOrSupplementaryVolumeDescriptor = function(VolumeDescriptor2) {
            function PrimaryOrSupplementaryVolumeDescriptor2(data) {
              VolumeDescriptor2.call(this, data);
              this._root = null;
            }
            if (VolumeDescriptor2)
              PrimaryOrSupplementaryVolumeDescriptor2.__proto__ = VolumeDescriptor2;
            PrimaryOrSupplementaryVolumeDescriptor2.prototype = Object.create(VolumeDescriptor2 && VolumeDescriptor2.prototype);
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.constructor = PrimaryOrSupplementaryVolumeDescriptor2;
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.systemIdentifier = function systemIdentifier() {
              return this._getString32(8);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.volumeIdentifier = function volumeIdentifier() {
              return this._getString32(40);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.volumeSpaceSize = function volumeSpaceSize() {
              return this._data.readUInt32LE(80);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.volumeSetSize = function volumeSetSize() {
              return this._data.readUInt16LE(120);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.volumeSequenceNumber = function volumeSequenceNumber() {
              return this._data.readUInt16LE(124);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.logicalBlockSize = function logicalBlockSize() {
              return this._data.readUInt16LE(128);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.pathTableSize = function pathTableSize() {
              return this._data.readUInt32LE(132);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.locationOfTypeLPathTable = function locationOfTypeLPathTable() {
              return this._data.readUInt32LE(140);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.locationOfOptionalTypeLPathTable = function locationOfOptionalTypeLPathTable() {
              return this._data.readUInt32LE(144);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.locationOfTypeMPathTable = function locationOfTypeMPathTable() {
              return this._data.readUInt32BE(148);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.locationOfOptionalTypeMPathTable = function locationOfOptionalTypeMPathTable() {
              return this._data.readUInt32BE(152);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.rootDirectoryEntry = function rootDirectoryEntry(isoData) {
              if (this._root === null) {
                this._root = this._constructRootDirectoryRecord(this._data.slice(156));
                this._root.rootCheckForRockRidge(isoData);
              }
              return this._root;
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.volumeSetIdentifier = function volumeSetIdentifier() {
              return this._getString(190, 128);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.publisherIdentifier = function publisherIdentifier() {
              return this._getString(318, 128);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.dataPreparerIdentifier = function dataPreparerIdentifier() {
              return this._getString(446, 128);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.applicationIdentifier = function applicationIdentifier() {
              return this._getString(574, 128);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.copyrightFileIdentifier = function copyrightFileIdentifier() {
              return this._getString(702, 38);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.abstractFileIdentifier = function abstractFileIdentifier() {
              return this._getString(740, 36);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.bibliographicFileIdentifier = function bibliographicFileIdentifier() {
              return this._getString(776, 37);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.volumeCreationDate = function volumeCreationDate() {
              return getDate(this._data, 813);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.volumeModificationDate = function volumeModificationDate() {
              return getDate(this._data, 830);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.volumeExpirationDate = function volumeExpirationDate() {
              return getDate(this._data, 847);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.volumeEffectiveDate = function volumeEffectiveDate() {
              return getDate(this._data, 864);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.fileStructureVersion = function fileStructureVersion() {
              return this._data[881];
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.applicationUsed = function applicationUsed() {
              return this._data.slice(883, 883 + 512);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype.reserved = function reserved() {
              return this._data.slice(1395, 1395 + 653);
            };
            PrimaryOrSupplementaryVolumeDescriptor2.prototype._getString32 = function _getString32(idx) {
              return this._getString(idx, 32);
            };
            return PrimaryOrSupplementaryVolumeDescriptor2;
          }(VolumeDescriptor);
          var PrimaryVolumeDescriptor = function(PrimaryOrSupplementaryVolumeDescriptor2) {
            function PrimaryVolumeDescriptor2(data) {
              PrimaryOrSupplementaryVolumeDescriptor2.call(this, data);
              if (this.type() !== 1) {
                throw new ApiError(ErrorCode.EIO, "Invalid primary volume descriptor.");
              }
            }
            if (PrimaryOrSupplementaryVolumeDescriptor2)
              PrimaryVolumeDescriptor2.__proto__ = PrimaryOrSupplementaryVolumeDescriptor2;
            PrimaryVolumeDescriptor2.prototype = Object.create(PrimaryOrSupplementaryVolumeDescriptor2 && PrimaryOrSupplementaryVolumeDescriptor2.prototype);
            PrimaryVolumeDescriptor2.prototype.constructor = PrimaryVolumeDescriptor2;
            PrimaryVolumeDescriptor2.prototype.name = function name3() {
              return "ISO9660";
            };
            PrimaryVolumeDescriptor2.prototype._constructRootDirectoryRecord = function _constructRootDirectoryRecord(data) {
              return new ISODirectoryRecord(data, -1);
            };
            PrimaryVolumeDescriptor2.prototype._getString = function _getString(idx, len) {
              return this._getString(idx, len);
            };
            return PrimaryVolumeDescriptor2;
          }(PrimaryOrSupplementaryVolumeDescriptor);
          var SupplementaryVolumeDescriptor = function(PrimaryOrSupplementaryVolumeDescriptor2) {
            function SupplementaryVolumeDescriptor2(data) {
              PrimaryOrSupplementaryVolumeDescriptor2.call(this, data);
              if (this.type() !== 2) {
                throw new ApiError(ErrorCode.EIO, "Invalid supplementary volume descriptor.");
              }
              var escapeSequence = this.escapeSequence();
              var third = escapeSequence[2];
              if (escapeSequence[0] !== 37 || escapeSequence[1] !== 47 || third !== 64 && third !== 67 && third !== 69) {
                throw new ApiError(ErrorCode.EIO, "Unrecognized escape sequence for SupplementaryVolumeDescriptor: " + escapeSequence.toString());
              }
            }
            if (PrimaryOrSupplementaryVolumeDescriptor2)
              SupplementaryVolumeDescriptor2.__proto__ = PrimaryOrSupplementaryVolumeDescriptor2;
            SupplementaryVolumeDescriptor2.prototype = Object.create(PrimaryOrSupplementaryVolumeDescriptor2 && PrimaryOrSupplementaryVolumeDescriptor2.prototype);
            SupplementaryVolumeDescriptor2.prototype.constructor = SupplementaryVolumeDescriptor2;
            SupplementaryVolumeDescriptor2.prototype.name = function name3() {
              return "Joliet";
            };
            SupplementaryVolumeDescriptor2.prototype.escapeSequence = function escapeSequence() {
              return this._data.slice(88, 120);
            };
            SupplementaryVolumeDescriptor2.prototype._constructRootDirectoryRecord = function _constructRootDirectoryRecord(data) {
              return new JolietDirectoryRecord(data, -1);
            };
            SupplementaryVolumeDescriptor2.prototype._getString = function _getString(idx, len) {
              return getJolietString(this._data, idx, len);
            };
            return SupplementaryVolumeDescriptor2;
          }(PrimaryOrSupplementaryVolumeDescriptor);
          var DirectoryRecord = function DirectoryRecord2(data, rockRidgeOffset) {
            this._suEntries = null;
            this._fileOrDir = null;
            this._data = data;
            this._rockRidgeOffset = rockRidgeOffset;
          };
          DirectoryRecord.prototype.hasRockRidge = function hasRockRidge() {
            return this._rockRidgeOffset > -1;
          };
          DirectoryRecord.prototype.getRockRidgeOffset = function getRockRidgeOffset() {
            return this._rockRidgeOffset;
          };
          DirectoryRecord.prototype.rootCheckForRockRidge = function rootCheckForRockRidge(isoData) {
            var dir2 = this.getDirectory(isoData);
            this._rockRidgeOffset = dir2.getDotEntry(isoData)._getRockRidgeOffset(isoData);
            if (this._rockRidgeOffset > -1) {
              this._fileOrDir = null;
            }
          };
          DirectoryRecord.prototype.length = function length() {
            return this._data[0];
          };
          DirectoryRecord.prototype.extendedAttributeRecordLength = function extendedAttributeRecordLength() {
            return this._data[1];
          };
          DirectoryRecord.prototype.lba = function lba() {
            return this._data.readUInt32LE(2) * 2048;
          };
          DirectoryRecord.prototype.dataLength = function dataLength() {
            return this._data.readUInt32LE(10);
          };
          DirectoryRecord.prototype.recordingDate = function recordingDate() {
            return getShortFormDate(this._data, 18);
          };
          DirectoryRecord.prototype.fileFlags = function fileFlags() {
            return this._data[25];
          };
          DirectoryRecord.prototype.fileUnitSize = function fileUnitSize() {
            return this._data[26];
          };
          DirectoryRecord.prototype.interleaveGapSize = function interleaveGapSize() {
            return this._data[27];
          };
          DirectoryRecord.prototype.volumeSequenceNumber = function volumeSequenceNumber() {
            return this._data.readUInt16LE(28);
          };
          DirectoryRecord.prototype.identifier = function identifier() {
            return this._getString(33, this._data[32]);
          };
          DirectoryRecord.prototype.fileName = function fileName(isoData) {
            if (this.hasRockRidge()) {
              var fn = this._rockRidgeFilename(isoData);
              if (fn !== null) {
                return fn;
              }
            }
            var ident = this.identifier();
            if (this.isDirectory(isoData)) {
              return ident;
            }
            var versionSeparator = ident.indexOf(";");
            if (versionSeparator === -1) {
              return ident;
            } else if (ident[versionSeparator - 1] === ".") {
              return ident.slice(0, versionSeparator - 1);
            } else {
              return ident.slice(0, versionSeparator);
            }
          };
          DirectoryRecord.prototype.isDirectory = function isDirectory(isoData) {
            var rv = !!(this.fileFlags() & 2);
            if (!rv && this.hasRockRidge()) {
              rv = this.getSUEntries(isoData).filter(function(e) {
                return e instanceof CLEntry;
              }).length > 0;
            }
            return rv;
          };
          DirectoryRecord.prototype.isSymlink = function isSymlink(isoData) {
            return this.hasRockRidge() && this.getSUEntries(isoData).filter(function(e) {
              return e instanceof SLEntry;
            }).length > 0;
          };
          DirectoryRecord.prototype.getSymlinkPath = function getSymlinkPath(isoData) {
            var p = "";
            var entries = this.getSUEntries(isoData);
            var getStr = this._getGetString();
            for (var i2 = 0, list2 = entries; i2 < list2.length; i2 += 1) {
              var entry = list2[i2];
              if (entry instanceof SLEntry) {
                var components = entry.componentRecords();
                for (var i$12 = 0, list$1 = components; i$12 < list$1.length; i$12 += 1) {
                  var component = list$1[i$12];
                  var flags = component.flags();
                  if (flags & 2) {
                    p += "./";
                  } else if (flags & 4) {
                    p += "../";
                  } else if (flags & 8) {
                    p += "/";
                  } else {
                    p += component.content(getStr);
                    if (!(flags & 1)) {
                      p += "/";
                    }
                  }
                }
                if (!entry.continueFlag()) {
                  break;
                }
              }
            }
            if (p.length > 1 && p[p.length - 1] === "/") {
              return p.slice(0, p.length - 1);
            } else {
              return p;
            }
          };
          DirectoryRecord.prototype.getFile = function getFile(isoData) {
            if (this.isDirectory(isoData)) {
              throw new Error("Tried to get a File from a directory.");
            }
            if (this._fileOrDir === null) {
              this._fileOrDir = isoData.slice(this.lba(), this.lba() + this.dataLength());
            }
            return this._fileOrDir;
          };
          DirectoryRecord.prototype.getDirectory = function getDirectory(isoData) {
            if (!this.isDirectory(isoData)) {
              throw new Error("Tried to get a Directory from a file.");
            }
            if (this._fileOrDir === null) {
              this._fileOrDir = this._constructDirectory(isoData);
            }
            return this._fileOrDir;
          };
          DirectoryRecord.prototype.getSUEntries = function getSUEntries(isoData) {
            if (!this._suEntries) {
              this._constructSUEntries(isoData);
            }
            return this._suEntries;
          };
          DirectoryRecord.prototype._rockRidgeFilename = function _rockRidgeFilename(isoData) {
            var nmEntries = this.getSUEntries(isoData).filter(function(e2) {
              return e2 instanceof NMEntry;
            });
            if (nmEntries.length === 0 || nmEntries[0].flags() & (2 | 4)) {
              return null;
            }
            var str4 = "";
            var getString = this._getGetString();
            for (var i2 = 0, list2 = nmEntries; i2 < list2.length; i2 += 1) {
              var e = list2[i2];
              str4 += e.name(getString);
              if (!(e.flags() & 1)) {
                break;
              }
            }
            return str4;
          };
          DirectoryRecord.prototype._constructSUEntries = function _constructSUEntries(isoData) {
            var i2 = 33 + this._data[32];
            if (i2 % 2 === 1) {
              i2++;
            }
            i2 += this._rockRidgeOffset;
            this._suEntries = constructSystemUseEntries(this._data, i2, this.length(), isoData);
          };
          DirectoryRecord.prototype._getRockRidgeOffset = function _getRockRidgeOffset(isoData) {
            this._rockRidgeOffset = 0;
            var suEntries = this.getSUEntries(isoData);
            if (suEntries.length > 0) {
              var spEntry = suEntries[0];
              if (spEntry instanceof SPEntry && spEntry.checkBytesPass()) {
                for (var i2 = 1; i2 < suEntries.length; i2++) {
                  var entry = suEntries[i2];
                  if (entry instanceof RREntry || entry instanceof EREntry && entry.extensionIdentifier() === rockRidgeIdentifier) {
                    return spEntry.bytesSkipped();
                  }
                }
              }
            }
            this._rockRidgeOffset = -1;
            return -1;
          };
          var ISODirectoryRecord = function(DirectoryRecord2) {
            function ISODirectoryRecord2(data, rockRidgeOffset) {
              DirectoryRecord2.call(this, data, rockRidgeOffset);
            }
            if (DirectoryRecord2)
              ISODirectoryRecord2.__proto__ = DirectoryRecord2;
            ISODirectoryRecord2.prototype = Object.create(DirectoryRecord2 && DirectoryRecord2.prototype);
            ISODirectoryRecord2.prototype.constructor = ISODirectoryRecord2;
            ISODirectoryRecord2.prototype._getString = function _getString(i2, len) {
              return getASCIIString(this._data, i2, len);
            };
            ISODirectoryRecord2.prototype._constructDirectory = function _constructDirectory(isoData) {
              return new ISODirectory(this, isoData);
            };
            ISODirectoryRecord2.prototype._getGetString = function _getGetString() {
              return getASCIIString;
            };
            return ISODirectoryRecord2;
          }(DirectoryRecord);
          var JolietDirectoryRecord = function(DirectoryRecord2) {
            function JolietDirectoryRecord2(data, rockRidgeOffset) {
              DirectoryRecord2.call(this, data, rockRidgeOffset);
            }
            if (DirectoryRecord2)
              JolietDirectoryRecord2.__proto__ = DirectoryRecord2;
            JolietDirectoryRecord2.prototype = Object.create(DirectoryRecord2 && DirectoryRecord2.prototype);
            JolietDirectoryRecord2.prototype.constructor = JolietDirectoryRecord2;
            JolietDirectoryRecord2.prototype._getString = function _getString(i2, len) {
              return getJolietString(this._data, i2, len);
            };
            JolietDirectoryRecord2.prototype._constructDirectory = function _constructDirectory(isoData) {
              return new JolietDirectory(this, isoData);
            };
            JolietDirectoryRecord2.prototype._getGetString = function _getGetString() {
              return getJolietString;
            };
            return JolietDirectoryRecord2;
          }(DirectoryRecord);
          var SystemUseEntry = function SystemUseEntry2(data) {
            this._data = data;
          };
          SystemUseEntry.prototype.signatureWord = function signatureWord() {
            return this._data.readUInt16BE(0);
          };
          SystemUseEntry.prototype.signatureWordString = function signatureWordString() {
            return getASCIIString(this._data, 0, 2);
          };
          SystemUseEntry.prototype.length = function length() {
            return this._data[2];
          };
          SystemUseEntry.prototype.suVersion = function suVersion() {
            return this._data[3];
          };
          var CEEntry = function(SystemUseEntry2) {
            function CEEntry2(data) {
              SystemUseEntry2.call(this, data);
              this._entries = null;
            }
            if (SystemUseEntry2)
              CEEntry2.__proto__ = SystemUseEntry2;
            CEEntry2.prototype = Object.create(SystemUseEntry2 && SystemUseEntry2.prototype);
            CEEntry2.prototype.constructor = CEEntry2;
            CEEntry2.prototype.continuationLba = function continuationLba() {
              return this._data.readUInt32LE(4);
            };
            CEEntry2.prototype.continuationLbaOffset = function continuationLbaOffset() {
              return this._data.readUInt32LE(12);
            };
            CEEntry2.prototype.continuationLength = function continuationLength() {
              return this._data.readUInt32LE(20);
            };
            CEEntry2.prototype.getEntries = function getEntries(isoData) {
              if (!this._entries) {
                var start = this.continuationLba() * 2048 + this.continuationLbaOffset();
                this._entries = constructSystemUseEntries(isoData, start, this.continuationLength(), isoData);
              }
              return this._entries;
            };
            return CEEntry2;
          }(SystemUseEntry);
          var PDEntry = function(SystemUseEntry2) {
            function PDEntry2(data) {
              SystemUseEntry2.call(this, data);
            }
            if (SystemUseEntry2)
              PDEntry2.__proto__ = SystemUseEntry2;
            PDEntry2.prototype = Object.create(SystemUseEntry2 && SystemUseEntry2.prototype);
            PDEntry2.prototype.constructor = PDEntry2;
            return PDEntry2;
          }(SystemUseEntry);
          var SPEntry = function(SystemUseEntry2) {
            function SPEntry2(data) {
              SystemUseEntry2.call(this, data);
            }
            if (SystemUseEntry2)
              SPEntry2.__proto__ = SystemUseEntry2;
            SPEntry2.prototype = Object.create(SystemUseEntry2 && SystemUseEntry2.prototype);
            SPEntry2.prototype.constructor = SPEntry2;
            SPEntry2.prototype.checkBytesPass = function checkBytesPass() {
              return this._data[4] === 190 && this._data[5] === 239;
            };
            SPEntry2.prototype.bytesSkipped = function bytesSkipped() {
              return this._data[6];
            };
            return SPEntry2;
          }(SystemUseEntry);
          var STEntry = function(SystemUseEntry2) {
            function STEntry2(data) {
              SystemUseEntry2.call(this, data);
            }
            if (SystemUseEntry2)
              STEntry2.__proto__ = SystemUseEntry2;
            STEntry2.prototype = Object.create(SystemUseEntry2 && SystemUseEntry2.prototype);
            STEntry2.prototype.constructor = STEntry2;
            return STEntry2;
          }(SystemUseEntry);
          var EREntry = function(SystemUseEntry2) {
            function EREntry2(data) {
              SystemUseEntry2.call(this, data);
            }
            if (SystemUseEntry2)
              EREntry2.__proto__ = SystemUseEntry2;
            EREntry2.prototype = Object.create(SystemUseEntry2 && SystemUseEntry2.prototype);
            EREntry2.prototype.constructor = EREntry2;
            EREntry2.prototype.identifierLength = function identifierLength() {
              return this._data[4];
            };
            EREntry2.prototype.descriptorLength = function descriptorLength() {
              return this._data[5];
            };
            EREntry2.prototype.sourceLength = function sourceLength() {
              return this._data[6];
            };
            EREntry2.prototype.extensionVersion = function extensionVersion() {
              return this._data[7];
            };
            EREntry2.prototype.extensionIdentifier = function extensionIdentifier() {
              return getASCIIString(this._data, 8, this.identifierLength());
            };
            EREntry2.prototype.extensionDescriptor = function extensionDescriptor() {
              return getASCIIString(this._data, 8 + this.identifierLength(), this.descriptorLength());
            };
            EREntry2.prototype.extensionSource = function extensionSource() {
              return getASCIIString(this._data, 8 + this.identifierLength() + this.descriptorLength(), this.sourceLength());
            };
            return EREntry2;
          }(SystemUseEntry);
          var ESEntry = function(SystemUseEntry2) {
            function ESEntry2(data) {
              SystemUseEntry2.call(this, data);
            }
            if (SystemUseEntry2)
              ESEntry2.__proto__ = SystemUseEntry2;
            ESEntry2.prototype = Object.create(SystemUseEntry2 && SystemUseEntry2.prototype);
            ESEntry2.prototype.constructor = ESEntry2;
            ESEntry2.prototype.extensionSequence = function extensionSequence() {
              return this._data[4];
            };
            return ESEntry2;
          }(SystemUseEntry);
          var RREntry = function(SystemUseEntry2) {
            function RREntry2(data) {
              SystemUseEntry2.call(this, data);
            }
            if (SystemUseEntry2)
              RREntry2.__proto__ = SystemUseEntry2;
            RREntry2.prototype = Object.create(SystemUseEntry2 && SystemUseEntry2.prototype);
            RREntry2.prototype.constructor = RREntry2;
            return RREntry2;
          }(SystemUseEntry);
          var PXEntry = function(SystemUseEntry2) {
            function PXEntry2(data) {
              SystemUseEntry2.call(this, data);
            }
            if (SystemUseEntry2)
              PXEntry2.__proto__ = SystemUseEntry2;
            PXEntry2.prototype = Object.create(SystemUseEntry2 && SystemUseEntry2.prototype);
            PXEntry2.prototype.constructor = PXEntry2;
            PXEntry2.prototype.mode = function mode() {
              return this._data.readUInt32LE(4);
            };
            PXEntry2.prototype.fileLinks = function fileLinks() {
              return this._data.readUInt32LE(12);
            };
            PXEntry2.prototype.uid = function uid() {
              return this._data.readUInt32LE(20);
            };
            PXEntry2.prototype.gid = function gid() {
              return this._data.readUInt32LE(28);
            };
            PXEntry2.prototype.inode = function inode() {
              return this._data.readUInt32LE(36);
            };
            return PXEntry2;
          }(SystemUseEntry);
          var PNEntry = function(SystemUseEntry2) {
            function PNEntry2(data) {
              SystemUseEntry2.call(this, data);
            }
            if (SystemUseEntry2)
              PNEntry2.__proto__ = SystemUseEntry2;
            PNEntry2.prototype = Object.create(SystemUseEntry2 && SystemUseEntry2.prototype);
            PNEntry2.prototype.constructor = PNEntry2;
            PNEntry2.prototype.devTHigh = function devTHigh() {
              return this._data.readUInt32LE(4);
            };
            PNEntry2.prototype.devTLow = function devTLow() {
              return this._data.readUInt32LE(12);
            };
            return PNEntry2;
          }(SystemUseEntry);
          var SLEntry = function(SystemUseEntry2) {
            function SLEntry2(data) {
              SystemUseEntry2.call(this, data);
            }
            if (SystemUseEntry2)
              SLEntry2.__proto__ = SystemUseEntry2;
            SLEntry2.prototype = Object.create(SystemUseEntry2 && SystemUseEntry2.prototype);
            SLEntry2.prototype.constructor = SLEntry2;
            SLEntry2.prototype.flags = function flags() {
              return this._data[4];
            };
            SLEntry2.prototype.continueFlag = function continueFlag() {
              return this.flags() & 1;
            };
            SLEntry2.prototype.componentRecords = function componentRecords() {
              var this$1 = this;
              var records = new Array();
              var i2 = 5;
              while (i2 < this.length()) {
                var record = new SLComponentRecord(this$1._data.slice(i2));
                records.push(record);
                i2 += record.length();
              }
              return records;
            };
            return SLEntry2;
          }(SystemUseEntry);
          var SLComponentRecord = function SLComponentRecord2(data) {
            this._data = data;
          };
          SLComponentRecord.prototype.flags = function flags() {
            return this._data[0];
          };
          SLComponentRecord.prototype.length = function length() {
            return 2 + this.componentLength();
          };
          SLComponentRecord.prototype.componentLength = function componentLength() {
            return this._data[1];
          };
          SLComponentRecord.prototype.content = function content(getString) {
            return getString(this._data, 2, this.componentLength());
          };
          var NMEntry = function(SystemUseEntry2) {
            function NMEntry2(data) {
              SystemUseEntry2.call(this, data);
            }
            if (SystemUseEntry2)
              NMEntry2.__proto__ = SystemUseEntry2;
            NMEntry2.prototype = Object.create(SystemUseEntry2 && SystemUseEntry2.prototype);
            NMEntry2.prototype.constructor = NMEntry2;
            NMEntry2.prototype.flags = function flags() {
              return this._data[4];
            };
            NMEntry2.prototype.name = function name3(getString) {
              return getString(this._data, 5, this.length() - 5);
            };
            return NMEntry2;
          }(SystemUseEntry);
          var CLEntry = function(SystemUseEntry2) {
            function CLEntry2(data) {
              SystemUseEntry2.call(this, data);
            }
            if (SystemUseEntry2)
              CLEntry2.__proto__ = SystemUseEntry2;
            CLEntry2.prototype = Object.create(SystemUseEntry2 && SystemUseEntry2.prototype);
            CLEntry2.prototype.constructor = CLEntry2;
            CLEntry2.prototype.childDirectoryLba = function childDirectoryLba() {
              return this._data.readUInt32LE(4);
            };
            return CLEntry2;
          }(SystemUseEntry);
          var PLEntry = function(SystemUseEntry2) {
            function PLEntry2(data) {
              SystemUseEntry2.call(this, data);
            }
            if (SystemUseEntry2)
              PLEntry2.__proto__ = SystemUseEntry2;
            PLEntry2.prototype = Object.create(SystemUseEntry2 && SystemUseEntry2.prototype);
            PLEntry2.prototype.constructor = PLEntry2;
            PLEntry2.prototype.parentDirectoryLba = function parentDirectoryLba() {
              return this._data.readUInt32LE(4);
            };
            return PLEntry2;
          }(SystemUseEntry);
          var REEntry = function(SystemUseEntry2) {
            function REEntry2(data) {
              SystemUseEntry2.call(this, data);
            }
            if (SystemUseEntry2)
              REEntry2.__proto__ = SystemUseEntry2;
            REEntry2.prototype = Object.create(SystemUseEntry2 && SystemUseEntry2.prototype);
            REEntry2.prototype.constructor = REEntry2;
            return REEntry2;
          }(SystemUseEntry);
          var TFEntry = function(SystemUseEntry2) {
            function TFEntry2(data) {
              SystemUseEntry2.call(this, data);
            }
            if (SystemUseEntry2)
              TFEntry2.__proto__ = SystemUseEntry2;
            TFEntry2.prototype = Object.create(SystemUseEntry2 && SystemUseEntry2.prototype);
            TFEntry2.prototype.constructor = TFEntry2;
            TFEntry2.prototype.flags = function flags() {
              return this._data[4];
            };
            TFEntry2.prototype.creation = function creation() {
              if (this.flags() & 1) {
                if (this._longFormDates()) {
                  return getDate(this._data, 5);
                } else {
                  return getShortFormDate(this._data, 5);
                }
              } else {
                return null;
              }
            };
            TFEntry2.prototype.modify = function modify() {
              if (this.flags() & 2) {
                var previousDates = this.flags() & 1 ? 1 : 0;
                if (this._longFormDates) {
                  return getDate(this._data, 5 + previousDates * 17);
                } else {
                  return getShortFormDate(this._data, 5 + previousDates * 7);
                }
              } else {
                return null;
              }
            };
            TFEntry2.prototype.access = function access() {
              if (this.flags() & 4) {
                var previousDates = this.flags() & 1 ? 1 : 0;
                previousDates += this.flags() & 2 ? 1 : 0;
                if (this._longFormDates) {
                  return getDate(this._data, 5 + previousDates * 17);
                } else {
                  return getShortFormDate(this._data, 5 + previousDates * 7);
                }
              } else {
                return null;
              }
            };
            TFEntry2.prototype.backup = function backup() {
              if (this.flags() & 16) {
                var previousDates = this.flags() & 1 ? 1 : 0;
                previousDates += this.flags() & 2 ? 1 : 0;
                previousDates += this.flags() & 4 ? 1 : 0;
                if (this._longFormDates) {
                  return getDate(this._data, 5 + previousDates * 17);
                } else {
                  return getShortFormDate(this._data, 5 + previousDates * 7);
                }
              } else {
                return null;
              }
            };
            TFEntry2.prototype.expiration = function expiration() {
              if (this.flags() & 32) {
                var previousDates = this.flags() & 1 ? 1 : 0;
                previousDates += this.flags() & 2 ? 1 : 0;
                previousDates += this.flags() & 4 ? 1 : 0;
                previousDates += this.flags() & 16 ? 1 : 0;
                if (this._longFormDates) {
                  return getDate(this._data, 5 + previousDates * 17);
                } else {
                  return getShortFormDate(this._data, 5 + previousDates * 7);
                }
              } else {
                return null;
              }
            };
            TFEntry2.prototype.effective = function effective() {
              if (this.flags() & 64) {
                var previousDates = this.flags() & 1 ? 1 : 0;
                previousDates += this.flags() & 2 ? 1 : 0;
                previousDates += this.flags() & 4 ? 1 : 0;
                previousDates += this.flags() & 16 ? 1 : 0;
                previousDates += this.flags() & 32 ? 1 : 0;
                if (this._longFormDates) {
                  return getDate(this._data, 5 + previousDates * 17);
                } else {
                  return getShortFormDate(this._data, 5 + previousDates * 7);
                }
              } else {
                return null;
              }
            };
            TFEntry2.prototype._longFormDates = function _longFormDates() {
              return !!(this.flags() && 128);
            };
            return TFEntry2;
          }(SystemUseEntry);
          var SFEntry = function(SystemUseEntry2) {
            function SFEntry2(data) {
              SystemUseEntry2.call(this, data);
            }
            if (SystemUseEntry2)
              SFEntry2.__proto__ = SystemUseEntry2;
            SFEntry2.prototype = Object.create(SystemUseEntry2 && SystemUseEntry2.prototype);
            SFEntry2.prototype.constructor = SFEntry2;
            SFEntry2.prototype.virtualSizeHigh = function virtualSizeHigh() {
              return this._data.readUInt32LE(4);
            };
            SFEntry2.prototype.virtualSizeLow = function virtualSizeLow() {
              return this._data.readUInt32LE(12);
            };
            SFEntry2.prototype.tableDepth = function tableDepth() {
              return this._data[20];
            };
            return SFEntry2;
          }(SystemUseEntry);
          var Directory = function Directory2(record, isoData) {
            var this$1 = this;
            this._fileList = [];
            this._fileMap = {};
            this._record = record;
            var i2 = record.lba();
            var iLimit = i2 + record.dataLength();
            if (!(record.fileFlags() & 2)) {
              var cl = record.getSUEntries(isoData).filter(function(e) {
                return e instanceof CLEntry;
              })[0];
              i2 = cl.childDirectoryLba() * 2048;
              iLimit = Infinity;
            }
            while (i2 < iLimit) {
              var len = isoData[i2];
              if (len === 0) {
                i2++;
                continue;
              }
              var r = this$1._constructDirectoryRecord(isoData.slice(i2));
              var fname = r.fileName(isoData);
              if (fname !== "\0" && fname !== "") {
                if (!r.hasRockRidge() || r.getSUEntries(isoData).filter(function(e) {
                  return e instanceof REEntry;
                }).length === 0) {
                  this$1._fileMap[fname] = r;
                  this$1._fileList.push(fname);
                }
              } else if (iLimit === Infinity) {
                iLimit = i2 + r.dataLength();
              }
              i2 += r.length();
            }
          };
          Directory.prototype.getRecord = function getRecord(name3) {
            return this._fileMap[name3];
          };
          Directory.prototype.getFileList = function getFileList() {
            return this._fileList;
          };
          Directory.prototype.getDotEntry = function getDotEntry(isoData) {
            return this._constructDirectoryRecord(isoData.slice(this._record.lba()));
          };
          var ISODirectory = function(Directory2) {
            function ISODirectory2(record, isoData) {
              Directory2.call(this, record, isoData);
            }
            if (Directory2)
              ISODirectory2.__proto__ = Directory2;
            ISODirectory2.prototype = Object.create(Directory2 && Directory2.prototype);
            ISODirectory2.prototype.constructor = ISODirectory2;
            ISODirectory2.prototype._constructDirectoryRecord = function _constructDirectoryRecord(data) {
              return new ISODirectoryRecord(data, this._record.getRockRidgeOffset());
            };
            return ISODirectory2;
          }(Directory);
          var JolietDirectory = function(Directory2) {
            function JolietDirectory2(record, isoData) {
              Directory2.call(this, record, isoData);
            }
            if (Directory2)
              JolietDirectory2.__proto__ = Directory2;
            JolietDirectory2.prototype = Object.create(Directory2 && Directory2.prototype);
            JolietDirectory2.prototype.constructor = JolietDirectory2;
            JolietDirectory2.prototype._constructDirectoryRecord = function _constructDirectoryRecord(data) {
              return new JolietDirectoryRecord(data, this._record.getRockRidgeOffset());
            };
            return JolietDirectory2;
          }(Directory);
          var IsoFS = function(SynchronousFileSystem$$1) {
            function IsoFS2(data, name3, deprecateMsg) {
              var this$1 = this;
              if (name3 === void 0)
                name3 = "";
              if (deprecateMsg === void 0)
                deprecateMsg = true;
              SynchronousFileSystem$$1.call(this);
              this._data = data;
              deprecationMessage(deprecateMsg, IsoFS2.Name, { data: "ISO data as a Buffer", name: name3 });
              var vdTerminatorFound = false;
              var i2 = 16 * 2048;
              var candidateVDs = new Array();
              while (!vdTerminatorFound) {
                var slice = data.slice(i2);
                var vd = new VolumeDescriptor(slice);
                switch (vd.type()) {
                  case 1:
                    candidateVDs.push(new PrimaryVolumeDescriptor(slice));
                    break;
                  case 2:
                    candidateVDs.push(new SupplementaryVolumeDescriptor(slice));
                    break;
                  case 255:
                    vdTerminatorFound = true;
                    break;
                }
                i2 += 2048;
              }
              if (candidateVDs.length === 0) {
                throw new ApiError(ErrorCode.EIO, "Unable to find a suitable volume descriptor.");
              }
              candidateVDs.forEach(function(v2) {
                if (!this$1._pvd || this$1._pvd.type() !== 2) {
                  this$1._pvd = v2;
                }
              });
              this._root = this._pvd.rootDirectoryEntry(data);
              this._name = name3;
            }
            if (SynchronousFileSystem$$1)
              IsoFS2.__proto__ = SynchronousFileSystem$$1;
            IsoFS2.prototype = Object.create(SynchronousFileSystem$$1 && SynchronousFileSystem$$1.prototype);
            IsoFS2.prototype.constructor = IsoFS2;
            IsoFS2.Create = function Create(opts, cb) {
              var fs4;
              var e;
              try {
                fs4 = new IsoFS2(opts.data, opts.name, false);
              } catch (e2) {
                e2 = e2;
              } finally {
                cb(e, fs4);
              }
            };
            IsoFS2.isAvailable = function isAvailable() {
              return true;
            };
            IsoFS2.prototype.getName = function getName() {
              var name3 = "IsoFS" + this._name + (this._pvd ? "-" + this._pvd.name() : "");
              if (this._root && this._root.hasRockRidge()) {
                name3 += "-RockRidge";
              }
              return name3;
            };
            IsoFS2.prototype.diskSpace = function diskSpace(path$$1, cb) {
              cb(this._data.length, 0);
            };
            IsoFS2.prototype.isReadOnly = function isReadOnly() {
              return true;
            };
            IsoFS2.prototype.supportsLinks = function supportsLinks() {
              return false;
            };
            IsoFS2.prototype.supportsProps = function supportsProps() {
              return false;
            };
            IsoFS2.prototype.supportsSynch = function supportsSynch() {
              return true;
            };
            IsoFS2.prototype.statSync = function statSync(p, isLstat) {
              var record = this._getDirectoryRecord(p);
              if (record === null) {
                throw ApiError.ENOENT(p);
              }
              return this._getStats(p, record);
            };
            IsoFS2.prototype.openSync = function openSync(p, flags, mode) {
              if (flags.isWriteable()) {
                throw new ApiError(ErrorCode.EPERM, p);
              }
              var record = this._getDirectoryRecord(p);
              if (!record) {
                throw ApiError.ENOENT(p);
              } else if (record.isSymlink(this._data)) {
                return this.openSync(path.resolve(p, record.getSymlinkPath(this._data)), flags, mode);
              } else if (!record.isDirectory(this._data)) {
                var data = record.getFile(this._data);
                var stats = this._getStats(p, record);
                switch (flags.pathExistsAction()) {
                  case ActionType.THROW_EXCEPTION:
                  case ActionType.TRUNCATE_FILE:
                    throw ApiError.EEXIST(p);
                  case ActionType.NOP:
                    return new NoSyncFile(this, p, flags, stats, data);
                  default:
                    throw new ApiError(ErrorCode.EINVAL, "Invalid FileMode object.");
                }
              } else {
                throw ApiError.EISDIR(p);
              }
            };
            IsoFS2.prototype.readdirSync = function readdirSync(path$$1) {
              var record = this._getDirectoryRecord(path$$1);
              if (!record) {
                throw ApiError.ENOENT(path$$1);
              } else if (record.isDirectory(this._data)) {
                return record.getDirectory(this._data).getFileList().slice(0);
              } else {
                throw ApiError.ENOTDIR(path$$1);
              }
            };
            IsoFS2.prototype.readFileSync = function readFileSync(fname, encoding, flag) {
              var fd = this.openSync(fname, flag, 420);
              try {
                var fdCast = fd;
                var fdBuff = fdCast.getBuffer();
                if (encoding === null) {
                  return copyingSlice(fdBuff);
                }
                return fdBuff.toString(encoding);
              } finally {
                fd.closeSync();
              }
            };
            IsoFS2.prototype._getDirectoryRecord = function _getDirectoryRecord(path$$1) {
              var this$1 = this;
              if (path$$1 === "/") {
                return this._root;
              }
              var components = path$$1.split("/").slice(1);
              var dir2 = this._root;
              for (var i2 = 0, list2 = components; i2 < list2.length; i2 += 1) {
                var component = list2[i2];
                if (dir2.isDirectory(this$1._data)) {
                  dir2 = dir2.getDirectory(this$1._data).getRecord(component);
                  if (!dir2) {
                    return null;
                  }
                } else {
                  return null;
                }
              }
              return dir2;
            };
            IsoFS2.prototype._getStats = function _getStats(p, record) {
              if (record.isSymlink(this._data)) {
                var newP = path.resolve(p, record.getSymlinkPath(this._data));
                var dirRec = this._getDirectoryRecord(newP);
                if (!dirRec) {
                  return null;
                }
                return this._getStats(newP, dirRec);
              } else {
                var len = record.dataLength();
                var mode = 365;
                var date = record.recordingDate();
                var atime = date;
                var mtime = date;
                var ctime = date;
                if (record.hasRockRidge()) {
                  var entries = record.getSUEntries(this._data);
                  for (var i2 = 0, list2 = entries; i2 < list2.length; i2 += 1) {
                    var entry = list2[i2];
                    if (entry instanceof PXEntry) {
                      mode = entry.mode();
                    } else if (entry instanceof TFEntry) {
                      var flags = entry.flags();
                      if (flags & 4) {
                        atime = entry.access();
                      }
                      if (flags & 2) {
                        mtime = entry.modify();
                      }
                      if (flags & 1) {
                        ctime = entry.creation();
                      }
                    }
                  }
                }
                mode = mode & 365;
                return new Stats(record.isDirectory(this._data) ? FileType.DIRECTORY : FileType.FILE, len, mode, atime, mtime, ctime);
              }
            };
            return IsoFS2;
          }(SynchronousFileSystem);
          IsoFS.Name = "IsoFS";
          IsoFS.Options = { data: { type: "object", description: "The ISO file in a buffer", validator: bufferValidator } };
          [AsyncMirror, DropboxFileSystem, EmscriptenFileSystem, FolderAdapter, HTML5FS, InMemoryFileSystem, IndexedDBFileSystem, IsoFS, LocalStorageFileSystem, MountableFileSystem, OverlayFS, WorkerFS, XmlHttpRequest, ZipFS].forEach(function(fsType) {
            var create = fsType.Create;
            fsType.Create = function(opts, cb) {
              var oneArg = typeof opts === "function";
              var normalizedCb = oneArg ? opts : cb;
              var normalizedOpts = oneArg ? {} : opts;
              function wrappedCb(e) {
                if (e) {
                  normalizedCb(e);
                } else {
                  create.call(fsType, normalizedOpts, normalizedCb);
                }
              }
              checkOptions(fsType, normalizedOpts, wrappedCb);
            };
          });
          var Backends = { AsyncMirror, Dropbox: DropboxFileSystem, Emscripten: EmscriptenFileSystem, FolderAdapter, HTML5FS, InMemory: InMemoryFileSystem, IndexedDB: IndexedDBFileSystem, IsoFS, LocalStorage: LocalStorageFileSystem, MountableFileSystem, OverlayFS, WorkerFS, XmlHttpRequest, ZipFS };
          if (process2["initializeTTYs"]) {
            process2["initializeTTYs"]();
          }
          function install(obj) {
            obj.Buffer = Buffer2;
            obj.process = process2;
            var oldRequire = obj.require ? obj.require : null;
            obj.require = function(arg) {
              var rv = BFSRequire2(arg);
              if (!rv) {
                return oldRequire.apply(null, Array.prototype.slice.call(arguments, 0));
              } else {
                return rv;
              }
            };
          }
          function registerFileSystem(name3, fs4) {
            Backends[name3] = fs4;
          }
          function BFSRequire2(module4) {
            switch (module4) {
              case "fs":
                return _fsMock;
              case "path":
                return path;
              case "buffer":
                return buffer;
              case "process":
                return process2;
              case "bfs_utils":
                return BFSUtils;
              default:
                return Backends[module4];
            }
          }
          function initialize2(rootfs) {
            return _fsMock.initialize(rootfs);
          }
          function configure(config, cb) {
            getFileSystem(config, function(e, fs4) {
              if (fs4) {
                initialize2(fs4);
                cb();
              } else {
                cb(e);
              }
            });
          }
          function getFileSystem(config, cb) {
            var fsName = config["fs"];
            if (!fsName) {
              return cb(new ApiError(ErrorCode.EPERM, 'Missing "fs" property on configuration object.'));
            }
            var options = config["options"];
            var waitCount = 0;
            var called = false;
            function finish() {
              if (!called) {
                called = true;
                var fsc = Backends[fsName];
                if (!fsc) {
                  cb(new ApiError(ErrorCode.EPERM, "File system " + fsName + " is not available in BrowserFS."));
                } else {
                  fsc.Create(options, cb);
                }
              }
            }
            if (options !== null && typeof options === "object") {
              var finishedIterating = false;
              var props2 = Object.keys(options).filter(function(k) {
                return k !== "fs";
              });
              props2.forEach(function(p) {
                var d2 = options[p];
                if (d2 !== null && typeof d2 === "object" && d2["fs"]) {
                  waitCount++;
                  getFileSystem(d2, function(e, fs4) {
                    waitCount--;
                    if (e) {
                      if (called) {
                        return;
                      }
                      called = true;
                      cb(e);
                    } else {
                      options[p] = fs4;
                      if (waitCount === 0 && finishedIterating) {
                        finish();
                      }
                    }
                  });
                }
              });
              finishedIterating = true;
            }
            if (waitCount === 0) {
              finish();
            }
          }
          if ("ab".substr(-1) !== "b") {
            String.prototype.substr = function(substr) {
              return function(start, length) {
                if (start < 0) {
                  start = this.length + start;
                }
                return substr.call(this, start, length);
              };
            }(String.prototype.substr);
          }
          if (typeof ArrayBuffer !== "undefined" && typeof Uint8Array !== "undefined") {
            if (!Uint8Array.prototype["slice"]) {
              Uint8Array.prototype.slice = function(start, end) {
                if (start === void 0)
                  start = 0;
                if (end === void 0)
                  end = this.length;
                var self2 = this;
                if (start < 0) {
                  start = this.length + start;
                  if (start < 0) {
                    start = 0;
                  }
                }
                if (end < 0) {
                  end = this.length + end;
                  if (end < 0) {
                    end = 0;
                  }
                }
                if (end < start) {
                  end = start;
                }
                return new Uint8Array(self2.buffer, self2.byteOffset + start, end - start);
              };
            }
          }
          exports2.install = install;
          exports2.registerFileSystem = registerFileSystem;
          exports2.BFSRequire = BFSRequire2;
          exports2.initialize = initialize2;
          exports2.configure = configure;
          exports2.getFileSystem = getFileSystem;
          exports2.EmscriptenFS = BFSEmscriptenFS;
          exports2.FileSystem = Backends;
          exports2.Errors = api_error;
          exports2.setImmediate = setImmediate$3;
        }).call(exports2, __webpack_require__(1), function() {
          return this;
        }(), __webpack_require__(5)(module22), __webpack_require__(6));
      }, function(module22, exports2, __webpack_require__) {
        module22.exports = __webpack_require__(2).Buffer;
      }, function(module22, exports2, __webpack_require__) {
        (function(Buffer2) {
          "use strict";
          var base64 = __webpack_require__(3);
          var ieee754 = __webpack_require__(4);
          exports2.Buffer = Buffer2;
          exports2.SlowBuffer = SlowBuffer;
          exports2.INSPECT_MAX_BYTES = 50;
          var K_MAX_LENGTH = 2147483647;
          exports2.kMaxLength = K_MAX_LENGTH;
          Buffer2.TYPED_ARRAY_SUPPORT = typedArraySupport();
          if (!Buffer2.TYPED_ARRAY_SUPPORT && typeof console !== "undefined" && typeof console.error === "function") {
            console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
          }
          function typedArraySupport() {
            try {
              var arr = new Uint8Array(1);
              arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function() {
                return 42;
              } };
              return arr.foo() === 42;
            } catch (e) {
              return false;
            }
          }
          function createBuffer(length) {
            if (length > K_MAX_LENGTH) {
              throw new RangeError("Invalid typed array length");
            }
            var buf = new Uint8Array(length);
            buf.__proto__ = Buffer2.prototype;
            return buf;
          }
          function Buffer2(arg, encodingOrOffset, length) {
            if (typeof arg === "number") {
              if (typeof encodingOrOffset === "string") {
                throw new Error("If encoding is specified then the first argument must be a string");
              }
              return allocUnsafe(arg);
            }
            return from(arg, encodingOrOffset, length);
          }
          if (typeof Symbol !== "undefined" && Symbol.species && Buffer2[Symbol.species] === Buffer2) {
            Object.defineProperty(Buffer2, Symbol.species, { value: null, configurable: true, enumerable: false, writable: false });
          }
          Buffer2.poolSize = 8192;
          function from(value, encodingOrOffset, length) {
            if (typeof value === "number") {
              throw new TypeError('"value" argument must not be a number');
            }
            if (isArrayBuffer(value)) {
              return fromArrayBuffer(value, encodingOrOffset, length);
            }
            if (typeof value === "string") {
              return fromString(value, encodingOrOffset);
            }
            return fromObject(value);
          }
          Buffer2.from = function(value, encodingOrOffset, length) {
            return from(value, encodingOrOffset, length);
          };
          Buffer2.prototype.__proto__ = Uint8Array.prototype;
          Buffer2.__proto__ = Uint8Array;
          function assertSize(size) {
            if (typeof size !== "number") {
              throw new TypeError('"size" argument must be a number');
            } else if (size < 0) {
              throw new RangeError('"size" argument must not be negative');
            }
          }
          function alloc(size, fill, encoding) {
            assertSize(size);
            if (size <= 0) {
              return createBuffer(size);
            }
            if (fill !== void 0) {
              return typeof encoding === "string" ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
            }
            return createBuffer(size);
          }
          Buffer2.alloc = function(size, fill, encoding) {
            return alloc(size, fill, encoding);
          };
          function allocUnsafe(size) {
            assertSize(size);
            return createBuffer(size < 0 ? 0 : checked(size) | 0);
          }
          Buffer2.allocUnsafe = function(size) {
            return allocUnsafe(size);
          };
          Buffer2.allocUnsafeSlow = function(size) {
            return allocUnsafe(size);
          };
          function fromString(string, encoding) {
            if (typeof encoding !== "string" || encoding === "") {
              encoding = "utf8";
            }
            if (!Buffer2.isEncoding(encoding)) {
              throw new TypeError('"encoding" must be a valid string encoding');
            }
            var length = byteLength(string, encoding) | 0;
            var buf = createBuffer(length);
            var actual = buf.write(string, encoding);
            if (actual !== length) {
              buf = buf.slice(0, actual);
            }
            return buf;
          }
          function fromArrayLike(array) {
            var length = array.length < 0 ? 0 : checked(array.length) | 0;
            var buf = createBuffer(length);
            for (var i = 0; i < length; i += 1) {
              buf[i] = array[i] & 255;
            }
            return buf;
          }
          function fromArrayBuffer(array, byteOffset, length) {
            if (byteOffset < 0 || array.byteLength < byteOffset) {
              throw new RangeError("'offset' is out of bounds");
            }
            if (array.byteLength < byteOffset + (length || 0)) {
              throw new RangeError("'length' is out of bounds");
            }
            var buf;
            if (byteOffset === void 0 && length === void 0) {
              buf = new Uint8Array(array);
            } else if (length === void 0) {
              buf = new Uint8Array(array, byteOffset);
            } else {
              buf = new Uint8Array(array, byteOffset, length);
            }
            buf.__proto__ = Buffer2.prototype;
            return buf;
          }
          function fromObject(obj) {
            if (Buffer2.isBuffer(obj)) {
              var len = checked(obj.length) | 0;
              var buf = createBuffer(len);
              if (buf.length === 0) {
                return buf;
              }
              obj.copy(buf, 0, 0, len);
              return buf;
            }
            if (obj) {
              if (isArrayBufferView(obj) || "length" in obj) {
                if (typeof obj.length !== "number" || numberIsNaN(obj.length)) {
                  return createBuffer(0);
                }
                return fromArrayLike(obj);
              }
              if (obj.type === "Buffer" && Array.isArray(obj.data)) {
                return fromArrayLike(obj.data);
              }
            }
            throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
          }
          function checked(length) {
            if (length >= K_MAX_LENGTH) {
              throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + " bytes");
            }
            return length | 0;
          }
          function SlowBuffer(length) {
            if (+length != length) {
              length = 0;
            }
            return Buffer2.alloc(+length);
          }
          Buffer2.isBuffer = function isBuffer(b2) {
            return b2 != null && b2._isBuffer === true;
          };
          Buffer2.compare = function compare(a, b2) {
            if (!Buffer2.isBuffer(a) || !Buffer2.isBuffer(b2)) {
              throw new TypeError("Arguments must be Buffers");
            }
            if (a === b2)
              return 0;
            var x3 = a.length;
            var y4 = b2.length;
            for (var i = 0, len = Math.min(x3, y4); i < len; ++i) {
              if (a[i] !== b2[i]) {
                x3 = a[i];
                y4 = b2[i];
                break;
              }
            }
            if (x3 < y4)
              return -1;
            if (y4 < x3)
              return 1;
            return 0;
          };
          Buffer2.isEncoding = function isEncoding(encoding) {
            switch (String(encoding).toLowerCase()) {
              case "hex":
              case "utf8":
              case "utf-8":
              case "ascii":
              case "latin1":
              case "binary":
              case "base64":
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return true;
              default:
                return false;
            }
          };
          Buffer2.concat = function concat(list, length) {
            if (!Array.isArray(list)) {
              throw new TypeError('"list" argument must be an Array of Buffers');
            }
            if (list.length === 0) {
              return Buffer2.alloc(0);
            }
            var i;
            if (length === void 0) {
              length = 0;
              for (i = 0; i < list.length; ++i) {
                length += list[i].length;
              }
            }
            var buffer = Buffer2.allocUnsafe(length);
            var pos = 0;
            for (i = 0; i < list.length; ++i) {
              var buf = list[i];
              if (!Buffer2.isBuffer(buf)) {
                throw new TypeError('"list" argument must be an Array of Buffers');
              }
              buf.copy(buffer, pos);
              pos += buf.length;
            }
            return buffer;
          };
          function byteLength(string, encoding) {
            if (Buffer2.isBuffer(string)) {
              return string.length;
            }
            if (isArrayBufferView(string) || isArrayBuffer(string)) {
              return string.byteLength;
            }
            if (typeof string !== "string") {
              string = "" + string;
            }
            var len = string.length;
            if (len === 0)
              return 0;
            var loweredCase = false;
            for (; ; ) {
              switch (encoding) {
                case "ascii":
                case "latin1":
                case "binary":
                  return len;
                case "utf8":
                case "utf-8":
                case void 0:
                  return utf8ToBytes(string).length;
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return len * 2;
                case "hex":
                  return len >>> 1;
                case "base64":
                  return base64ToBytes(string).length;
                default:
                  if (loweredCase)
                    return utf8ToBytes(string).length;
                  encoding = ("" + encoding).toLowerCase();
                  loweredCase = true;
              }
            }
          }
          Buffer2.byteLength = byteLength;
          function slowToString(encoding, start, end) {
            var loweredCase = false;
            if (start === void 0 || start < 0) {
              start = 0;
            }
            if (start > this.length) {
              return "";
            }
            if (end === void 0 || end > this.length) {
              end = this.length;
            }
            if (end <= 0) {
              return "";
            }
            end >>>= 0;
            start >>>= 0;
            if (end <= start) {
              return "";
            }
            if (!encoding)
              encoding = "utf8";
            while (true) {
              switch (encoding) {
                case "hex":
                  return hexSlice(this, start, end);
                case "utf8":
                case "utf-8":
                  return utf8Slice(this, start, end);
                case "ascii":
                  return asciiSlice(this, start, end);
                case "latin1":
                case "binary":
                  return latin1Slice(this, start, end);
                case "base64":
                  return base64Slice(this, start, end);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return utf16leSlice(this, start, end);
                default:
                  if (loweredCase)
                    throw new TypeError("Unknown encoding: " + encoding);
                  encoding = (encoding + "").toLowerCase();
                  loweredCase = true;
              }
            }
          }
          Buffer2.prototype._isBuffer = true;
          function swap(b2, n, m) {
            var i = b2[n];
            b2[n] = b2[m];
            b2[m] = i;
          }
          Buffer2.prototype.swap16 = function swap16() {
            var len = this.length;
            if (len % 2 !== 0) {
              throw new RangeError("Buffer size must be a multiple of 16-bits");
            }
            for (var i = 0; i < len; i += 2) {
              swap(this, i, i + 1);
            }
            return this;
          };
          Buffer2.prototype.swap32 = function swap32() {
            var len = this.length;
            if (len % 4 !== 0) {
              throw new RangeError("Buffer size must be a multiple of 32-bits");
            }
            for (var i = 0; i < len; i += 4) {
              swap(this, i, i + 3);
              swap(this, i + 1, i + 2);
            }
            return this;
          };
          Buffer2.prototype.swap64 = function swap64() {
            var len = this.length;
            if (len % 8 !== 0) {
              throw new RangeError("Buffer size must be a multiple of 64-bits");
            }
            for (var i = 0; i < len; i += 8) {
              swap(this, i, i + 7);
              swap(this, i + 1, i + 6);
              swap(this, i + 2, i + 5);
              swap(this, i + 3, i + 4);
            }
            return this;
          };
          Buffer2.prototype.toString = function toString() {
            var length = this.length;
            if (length === 0)
              return "";
            if (arguments.length === 0)
              return utf8Slice(this, 0, length);
            return slowToString.apply(this, arguments);
          };
          Buffer2.prototype.equals = function equals(b2) {
            if (!Buffer2.isBuffer(b2))
              throw new TypeError("Argument must be a Buffer");
            if (this === b2)
              return true;
            return Buffer2.compare(this, b2) === 0;
          };
          Buffer2.prototype.inspect = function inspect() {
            var str4 = "";
            var max = exports2.INSPECT_MAX_BYTES;
            if (this.length > 0) {
              str4 = this.toString("hex", 0, max).match(/.{2}/g).join(" ");
              if (this.length > max)
                str4 += " ... ";
            }
            return "<Buffer " + str4 + ">";
          };
          Buffer2.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
            if (!Buffer2.isBuffer(target)) {
              throw new TypeError("Argument must be a Buffer");
            }
            if (start === void 0) {
              start = 0;
            }
            if (end === void 0) {
              end = target ? target.length : 0;
            }
            if (thisStart === void 0) {
              thisStart = 0;
            }
            if (thisEnd === void 0) {
              thisEnd = this.length;
            }
            if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
              throw new RangeError("out of range index");
            }
            if (thisStart >= thisEnd && start >= end) {
              return 0;
            }
            if (thisStart >= thisEnd) {
              return -1;
            }
            if (start >= end) {
              return 1;
            }
            start >>>= 0;
            end >>>= 0;
            thisStart >>>= 0;
            thisEnd >>>= 0;
            if (this === target)
              return 0;
            var x3 = thisEnd - thisStart;
            var y4 = end - start;
            var len = Math.min(x3, y4);
            var thisCopy = this.slice(thisStart, thisEnd);
            var targetCopy = target.slice(start, end);
            for (var i = 0; i < len; ++i) {
              if (thisCopy[i] !== targetCopy[i]) {
                x3 = thisCopy[i];
                y4 = targetCopy[i];
                break;
              }
            }
            if (x3 < y4)
              return -1;
            if (y4 < x3)
              return 1;
            return 0;
          };
          function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir2) {
            if (buffer.length === 0)
              return -1;
            if (typeof byteOffset === "string") {
              encoding = byteOffset;
              byteOffset = 0;
            } else if (byteOffset > 2147483647) {
              byteOffset = 2147483647;
            } else if (byteOffset < -2147483648) {
              byteOffset = -2147483648;
            }
            byteOffset = +byteOffset;
            if (numberIsNaN(byteOffset)) {
              byteOffset = dir2 ? 0 : buffer.length - 1;
            }
            if (byteOffset < 0)
              byteOffset = buffer.length + byteOffset;
            if (byteOffset >= buffer.length) {
              if (dir2)
                return -1;
              else
                byteOffset = buffer.length - 1;
            } else if (byteOffset < 0) {
              if (dir2)
                byteOffset = 0;
              else
                return -1;
            }
            if (typeof val === "string") {
              val = Buffer2.from(val, encoding);
            }
            if (Buffer2.isBuffer(val)) {
              if (val.length === 0) {
                return -1;
              }
              return arrayIndexOf(buffer, val, byteOffset, encoding, dir2);
            } else if (typeof val === "number") {
              val = val & 255;
              if (typeof Uint8Array.prototype.indexOf === "function") {
                if (dir2) {
                  return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
                } else {
                  return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
                }
              }
              return arrayIndexOf(buffer, [val], byteOffset, encoding, dir2);
            }
            throw new TypeError("val must be string, number or Buffer");
          }
          function arrayIndexOf(arr, val, byteOffset, encoding, dir2) {
            var indexSize = 1;
            var arrLength = arr.length;
            var valLength = val.length;
            if (encoding !== void 0) {
              encoding = String(encoding).toLowerCase();
              if (encoding === "ucs2" || encoding === "ucs-2" || encoding === "utf16le" || encoding === "utf-16le") {
                if (arr.length < 2 || val.length < 2) {
                  return -1;
                }
                indexSize = 2;
                arrLength /= 2;
                valLength /= 2;
                byteOffset /= 2;
              }
            }
            function read(buf, i2) {
              if (indexSize === 1) {
                return buf[i2];
              } else {
                return buf.readUInt16BE(i2 * indexSize);
              }
            }
            var i;
            if (dir2) {
              var foundIndex = -1;
              for (i = byteOffset; i < arrLength; i++) {
                if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
                  if (foundIndex === -1)
                    foundIndex = i;
                  if (i - foundIndex + 1 === valLength)
                    return foundIndex * indexSize;
                } else {
                  if (foundIndex !== -1)
                    i -= i - foundIndex;
                  foundIndex = -1;
                }
              }
            } else {
              if (byteOffset + valLength > arrLength)
                byteOffset = arrLength - valLength;
              for (i = byteOffset; i >= 0; i--) {
                var found = true;
                for (var j = 0; j < valLength; j++) {
                  if (read(arr, i + j) !== read(val, j)) {
                    found = false;
                    break;
                  }
                }
                if (found)
                  return i;
              }
            }
            return -1;
          }
          Buffer2.prototype.includes = function includes(val, byteOffset, encoding) {
            return this.indexOf(val, byteOffset, encoding) !== -1;
          };
          Buffer2.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
            return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
          };
          Buffer2.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
            return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
          };
          function hexWrite(buf, string, offset, length) {
            offset = Number(offset) || 0;
            var remaining = buf.length - offset;
            if (!length) {
              length = remaining;
            } else {
              length = Number(length);
              if (length > remaining) {
                length = remaining;
              }
            }
            var strLen = string.length;
            if (strLen % 2 !== 0)
              throw new TypeError("Invalid hex string");
            if (length > strLen / 2) {
              length = strLen / 2;
            }
            for (var i = 0; i < length; ++i) {
              var parsed = parseInt(string.substr(i * 2, 2), 16);
              if (numberIsNaN(parsed))
                return i;
              buf[offset + i] = parsed;
            }
            return i;
          }
          function utf8Write(buf, string, offset, length) {
            return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
          }
          function asciiWrite(buf, string, offset, length) {
            return blitBuffer(asciiToBytes(string), buf, offset, length);
          }
          function latin1Write(buf, string, offset, length) {
            return asciiWrite(buf, string, offset, length);
          }
          function base64Write(buf, string, offset, length) {
            return blitBuffer(base64ToBytes(string), buf, offset, length);
          }
          function ucs2Write(buf, string, offset, length) {
            return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
          }
          Buffer2.prototype.write = function write(string, offset, length, encoding) {
            if (offset === void 0) {
              encoding = "utf8";
              length = this.length;
              offset = 0;
            } else if (length === void 0 && typeof offset === "string") {
              encoding = offset;
              length = this.length;
              offset = 0;
            } else if (isFinite(offset)) {
              offset = offset >>> 0;
              if (isFinite(length)) {
                length = length >>> 0;
                if (encoding === void 0)
                  encoding = "utf8";
              } else {
                encoding = length;
                length = void 0;
              }
            } else {
              throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            }
            var remaining = this.length - offset;
            if (length === void 0 || length > remaining)
              length = remaining;
            if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
              throw new RangeError("Attempt to write outside buffer bounds");
            }
            if (!encoding)
              encoding = "utf8";
            var loweredCase = false;
            for (; ; ) {
              switch (encoding) {
                case "hex":
                  return hexWrite(this, string, offset, length);
                case "utf8":
                case "utf-8":
                  return utf8Write(this, string, offset, length);
                case "ascii":
                  return asciiWrite(this, string, offset, length);
                case "latin1":
                case "binary":
                  return latin1Write(this, string, offset, length);
                case "base64":
                  return base64Write(this, string, offset, length);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return ucs2Write(this, string, offset, length);
                default:
                  if (loweredCase)
                    throw new TypeError("Unknown encoding: " + encoding);
                  encoding = ("" + encoding).toLowerCase();
                  loweredCase = true;
              }
            }
          };
          Buffer2.prototype.toJSON = function toJSON() {
            return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
          };
          function base64Slice(buf, start, end) {
            if (start === 0 && end === buf.length) {
              return base64.fromByteArray(buf);
            } else {
              return base64.fromByteArray(buf.slice(start, end));
            }
          }
          function utf8Slice(buf, start, end) {
            end = Math.min(buf.length, end);
            var res = [];
            var i = start;
            while (i < end) {
              var firstByte = buf[i];
              var codePoint = null;
              var bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
              if (i + bytesPerSequence <= end) {
                var secondByte, thirdByte, fourthByte, tempCodePoint;
                switch (bytesPerSequence) {
                  case 1:
                    if (firstByte < 128) {
                      codePoint = firstByte;
                    }
                    break;
                  case 2:
                    secondByte = buf[i + 1];
                    if ((secondByte & 192) === 128) {
                      tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;
                      if (tempCodePoint > 127) {
                        codePoint = tempCodePoint;
                      }
                    }
                    break;
                  case 3:
                    secondByte = buf[i + 1];
                    thirdByte = buf[i + 2];
                    if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {
                      tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;
                      if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {
                        codePoint = tempCodePoint;
                      }
                    }
                    break;
                  case 4:
                    secondByte = buf[i + 1];
                    thirdByte = buf[i + 2];
                    fourthByte = buf[i + 3];
                    if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {
                      tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;
                      if (tempCodePoint > 65535 && tempCodePoint < 1114112) {
                        codePoint = tempCodePoint;
                      }
                    }
                }
              }
              if (codePoint === null) {
                codePoint = 65533;
                bytesPerSequence = 1;
              } else if (codePoint > 65535) {
                codePoint -= 65536;
                res.push(codePoint >>> 10 & 1023 | 55296);
                codePoint = 56320 | codePoint & 1023;
              }
              res.push(codePoint);
              i += bytesPerSequence;
            }
            return decodeCodePointsArray(res);
          }
          var MAX_ARGUMENTS_LENGTH = 4096;
          function decodeCodePointsArray(codePoints) {
            var len = codePoints.length;
            if (len <= MAX_ARGUMENTS_LENGTH) {
              return String.fromCharCode.apply(String, codePoints);
            }
            var res = "";
            var i = 0;
            while (i < len) {
              res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
            }
            return res;
          }
          function asciiSlice(buf, start, end) {
            var ret = "";
            end = Math.min(buf.length, end);
            for (var i = start; i < end; ++i) {
              ret += String.fromCharCode(buf[i] & 127);
            }
            return ret;
          }
          function latin1Slice(buf, start, end) {
            var ret = "";
            end = Math.min(buf.length, end);
            for (var i = start; i < end; ++i) {
              ret += String.fromCharCode(buf[i]);
            }
            return ret;
          }
          function hexSlice(buf, start, end) {
            var len = buf.length;
            if (!start || start < 0)
              start = 0;
            if (!end || end < 0 || end > len)
              end = len;
            var out = "";
            for (var i = start; i < end; ++i) {
              out += toHex(buf[i]);
            }
            return out;
          }
          function utf16leSlice(buf, start, end) {
            var bytes = buf.slice(start, end);
            var res = "";
            for (var i = 0; i < bytes.length; i += 2) {
              res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
            }
            return res;
          }
          Buffer2.prototype.slice = function slice(start, end) {
            var len = this.length;
            start = ~~start;
            end = end === void 0 ? len : ~~end;
            if (start < 0) {
              start += len;
              if (start < 0)
                start = 0;
            } else if (start > len) {
              start = len;
            }
            if (end < 0) {
              end += len;
              if (end < 0)
                end = 0;
            } else if (end > len) {
              end = len;
            }
            if (end < start)
              end = start;
            var newBuf = this.subarray(start, end);
            newBuf.__proto__ = Buffer2.prototype;
            return newBuf;
          };
          function checkOffset(offset, ext, length) {
            if (offset % 1 !== 0 || offset < 0)
              throw new RangeError("offset is not uint");
            if (offset + ext > length)
              throw new RangeError("Trying to access beyond buffer length");
          }
          Buffer2.prototype.readUIntLE = function readUIntLE(offset, byteLength2, noAssert) {
            offset = offset >>> 0;
            byteLength2 = byteLength2 >>> 0;
            if (!noAssert)
              checkOffset(offset, byteLength2, this.length);
            var val = this[offset];
            var mul = 1;
            var i = 0;
            while (++i < byteLength2 && (mul *= 256)) {
              val += this[offset + i] * mul;
            }
            return val;
          };
          Buffer2.prototype.readUIntBE = function readUIntBE(offset, byteLength2, noAssert) {
            offset = offset >>> 0;
            byteLength2 = byteLength2 >>> 0;
            if (!noAssert) {
              checkOffset(offset, byteLength2, this.length);
            }
            var val = this[offset + --byteLength2];
            var mul = 1;
            while (byteLength2 > 0 && (mul *= 256)) {
              val += this[offset + --byteLength2] * mul;
            }
            return val;
          };
          Buffer2.prototype.readUInt8 = function readUInt8(offset, noAssert) {
            offset = offset >>> 0;
            if (!noAssert)
              checkOffset(offset, 1, this.length);
            return this[offset];
          };
          Buffer2.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
            offset = offset >>> 0;
            if (!noAssert)
              checkOffset(offset, 2, this.length);
            return this[offset] | this[offset + 1] << 8;
          };
          Buffer2.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
            offset = offset >>> 0;
            if (!noAssert)
              checkOffset(offset, 2, this.length);
            return this[offset] << 8 | this[offset + 1];
          };
          Buffer2.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
            offset = offset >>> 0;
            if (!noAssert)
              checkOffset(offset, 4, this.length);
            return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;
          };
          Buffer2.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
            offset = offset >>> 0;
            if (!noAssert)
              checkOffset(offset, 4, this.length);
            return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
          };
          Buffer2.prototype.readIntLE = function readIntLE(offset, byteLength2, noAssert) {
            offset = offset >>> 0;
            byteLength2 = byteLength2 >>> 0;
            if (!noAssert)
              checkOffset(offset, byteLength2, this.length);
            var val = this[offset];
            var mul = 1;
            var i = 0;
            while (++i < byteLength2 && (mul *= 256)) {
              val += this[offset + i] * mul;
            }
            mul *= 128;
            if (val >= mul)
              val -= Math.pow(2, 8 * byteLength2);
            return val;
          };
          Buffer2.prototype.readIntBE = function readIntBE(offset, byteLength2, noAssert) {
            offset = offset >>> 0;
            byteLength2 = byteLength2 >>> 0;
            if (!noAssert)
              checkOffset(offset, byteLength2, this.length);
            var i = byteLength2;
            var mul = 1;
            var val = this[offset + --i];
            while (i > 0 && (mul *= 256)) {
              val += this[offset + --i] * mul;
            }
            mul *= 128;
            if (val >= mul)
              val -= Math.pow(2, 8 * byteLength2);
            return val;
          };
          Buffer2.prototype.readInt8 = function readInt8(offset, noAssert) {
            offset = offset >>> 0;
            if (!noAssert)
              checkOffset(offset, 1, this.length);
            if (!(this[offset] & 128))
              return this[offset];
            return (255 - this[offset] + 1) * -1;
          };
          Buffer2.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
            offset = offset >>> 0;
            if (!noAssert)
              checkOffset(offset, 2, this.length);
            var val = this[offset] | this[offset + 1] << 8;
            return val & 32768 ? val | 4294901760 : val;
          };
          Buffer2.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
            offset = offset >>> 0;
            if (!noAssert)
              checkOffset(offset, 2, this.length);
            var val = this[offset + 1] | this[offset] << 8;
            return val & 32768 ? val | 4294901760 : val;
          };
          Buffer2.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
            offset = offset >>> 0;
            if (!noAssert)
              checkOffset(offset, 4, this.length);
            return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
          };
          Buffer2.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
            offset = offset >>> 0;
            if (!noAssert)
              checkOffset(offset, 4, this.length);
            return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
          };
          Buffer2.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
            offset = offset >>> 0;
            if (!noAssert)
              checkOffset(offset, 4, this.length);
            return ieee754.read(this, offset, true, 23, 4);
          };
          Buffer2.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
            offset = offset >>> 0;
            if (!noAssert)
              checkOffset(offset, 4, this.length);
            return ieee754.read(this, offset, false, 23, 4);
          };
          Buffer2.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
            offset = offset >>> 0;
            if (!noAssert)
              checkOffset(offset, 8, this.length);
            return ieee754.read(this, offset, true, 52, 8);
          };
          Buffer2.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
            offset = offset >>> 0;
            if (!noAssert)
              checkOffset(offset, 8, this.length);
            return ieee754.read(this, offset, false, 52, 8);
          };
          function checkInt(buf, value, offset, ext, max, min) {
            if (!Buffer2.isBuffer(buf))
              throw new TypeError('"buffer" argument must be a Buffer instance');
            if (value > max || value < min)
              throw new RangeError('"value" argument is out of bounds');
            if (offset + ext > buf.length)
              throw new RangeError("Index out of range");
          }
          Buffer2.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength2, noAssert) {
            value = +value;
            offset = offset >>> 0;
            byteLength2 = byteLength2 >>> 0;
            if (!noAssert) {
              var maxBytes = Math.pow(2, 8 * byteLength2) - 1;
              checkInt(this, value, offset, byteLength2, maxBytes, 0);
            }
            var mul = 1;
            var i = 0;
            this[offset] = value & 255;
            while (++i < byteLength2 && (mul *= 256)) {
              this[offset + i] = value / mul & 255;
            }
            return offset + byteLength2;
          };
          Buffer2.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength2, noAssert) {
            value = +value;
            offset = offset >>> 0;
            byteLength2 = byteLength2 >>> 0;
            if (!noAssert) {
              var maxBytes = Math.pow(2, 8 * byteLength2) - 1;
              checkInt(this, value, offset, byteLength2, maxBytes, 0);
            }
            var i = byteLength2 - 1;
            var mul = 1;
            this[offset + i] = value & 255;
            while (--i >= 0 && (mul *= 256)) {
              this[offset + i] = value / mul & 255;
            }
            return offset + byteLength2;
          };
          Buffer2.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
            value = +value;
            offset = offset >>> 0;
            if (!noAssert)
              checkInt(this, value, offset, 1, 255, 0);
            this[offset] = value & 255;
            return offset + 1;
          };
          Buffer2.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
            value = +value;
            offset = offset >>> 0;
            if (!noAssert)
              checkInt(this, value, offset, 2, 65535, 0);
            this[offset] = value & 255;
            this[offset + 1] = value >>> 8;
            return offset + 2;
          };
          Buffer2.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
            value = +value;
            offset = offset >>> 0;
            if (!noAssert)
              checkInt(this, value, offset, 2, 65535, 0);
            this[offset] = value >>> 8;
            this[offset + 1] = value & 255;
            return offset + 2;
          };
          Buffer2.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
            value = +value;
            offset = offset >>> 0;
            if (!noAssert)
              checkInt(this, value, offset, 4, 4294967295, 0);
            this[offset + 3] = value >>> 24;
            this[offset + 2] = value >>> 16;
            this[offset + 1] = value >>> 8;
            this[offset] = value & 255;
            return offset + 4;
          };
          Buffer2.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
            value = +value;
            offset = offset >>> 0;
            if (!noAssert)
              checkInt(this, value, offset, 4, 4294967295, 0);
            this[offset] = value >>> 24;
            this[offset + 1] = value >>> 16;
            this[offset + 2] = value >>> 8;
            this[offset + 3] = value & 255;
            return offset + 4;
          };
          Buffer2.prototype.writeIntLE = function writeIntLE(value, offset, byteLength2, noAssert) {
            value = +value;
            offset = offset >>> 0;
            if (!noAssert) {
              var limit = Math.pow(2, 8 * byteLength2 - 1);
              checkInt(this, value, offset, byteLength2, limit - 1, -limit);
            }
            var i = 0;
            var mul = 1;
            var sub = 0;
            this[offset] = value & 255;
            while (++i < byteLength2 && (mul *= 256)) {
              if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
                sub = 1;
              }
              this[offset + i] = (value / mul >> 0) - sub & 255;
            }
            return offset + byteLength2;
          };
          Buffer2.prototype.writeIntBE = function writeIntBE(value, offset, byteLength2, noAssert) {
            value = +value;
            offset = offset >>> 0;
            if (!noAssert) {
              var limit = Math.pow(2, 8 * byteLength2 - 1);
              checkInt(this, value, offset, byteLength2, limit - 1, -limit);
            }
            var i = byteLength2 - 1;
            var mul = 1;
            var sub = 0;
            this[offset + i] = value & 255;
            while (--i >= 0 && (mul *= 256)) {
              if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
                sub = 1;
              }
              this[offset + i] = (value / mul >> 0) - sub & 255;
            }
            return offset + byteLength2;
          };
          Buffer2.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
            value = +value;
            offset = offset >>> 0;
            if (!noAssert)
              checkInt(this, value, offset, 1, 127, -128);
            if (value < 0)
              value = 255 + value + 1;
            this[offset] = value & 255;
            return offset + 1;
          };
          Buffer2.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
            value = +value;
            offset = offset >>> 0;
            if (!noAssert)
              checkInt(this, value, offset, 2, 32767, -32768);
            this[offset] = value & 255;
            this[offset + 1] = value >>> 8;
            return offset + 2;
          };
          Buffer2.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
            value = +value;
            offset = offset >>> 0;
            if (!noAssert)
              checkInt(this, value, offset, 2, 32767, -32768);
            this[offset] = value >>> 8;
            this[offset + 1] = value & 255;
            return offset + 2;
          };
          Buffer2.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
            value = +value;
            offset = offset >>> 0;
            if (!noAssert)
              checkInt(this, value, offset, 4, 2147483647, -2147483648);
            this[offset] = value & 255;
            this[offset + 1] = value >>> 8;
            this[offset + 2] = value >>> 16;
            this[offset + 3] = value >>> 24;
            return offset + 4;
          };
          Buffer2.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
            value = +value;
            offset = offset >>> 0;
            if (!noAssert)
              checkInt(this, value, offset, 4, 2147483647, -2147483648);
            if (value < 0)
              value = 4294967295 + value + 1;
            this[offset] = value >>> 24;
            this[offset + 1] = value >>> 16;
            this[offset + 2] = value >>> 8;
            this[offset + 3] = value & 255;
            return offset + 4;
          };
          function checkIEEE754(buf, value, offset, ext, max, min) {
            if (offset + ext > buf.length)
              throw new RangeError("Index out of range");
            if (offset < 0)
              throw new RangeError("Index out of range");
          }
          function writeFloat(buf, value, offset, littleEndian, noAssert) {
            value = +value;
            offset = offset >>> 0;
            if (!noAssert) {
              checkIEEE754(buf, value, offset, 4, 34028234663852886e22, -34028234663852886e22);
            }
            ieee754.write(buf, value, offset, littleEndian, 23, 4);
            return offset + 4;
          }
          Buffer2.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
            return writeFloat(this, value, offset, true, noAssert);
          };
          Buffer2.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
            return writeFloat(this, value, offset, false, noAssert);
          };
          function writeDouble(buf, value, offset, littleEndian, noAssert) {
            value = +value;
            offset = offset >>> 0;
            if (!noAssert) {
              checkIEEE754(buf, value, offset, 8, 17976931348623157e292, -17976931348623157e292);
            }
            ieee754.write(buf, value, offset, littleEndian, 52, 8);
            return offset + 8;
          }
          Buffer2.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
            return writeDouble(this, value, offset, true, noAssert);
          };
          Buffer2.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
            return writeDouble(this, value, offset, false, noAssert);
          };
          Buffer2.prototype.copy = function copy(target, targetStart, start, end) {
            if (!start)
              start = 0;
            if (!end && end !== 0)
              end = this.length;
            if (targetStart >= target.length)
              targetStart = target.length;
            if (!targetStart)
              targetStart = 0;
            if (end > 0 && end < start)
              end = start;
            if (end === start)
              return 0;
            if (target.length === 0 || this.length === 0)
              return 0;
            if (targetStart < 0) {
              throw new RangeError("targetStart out of bounds");
            }
            if (start < 0 || start >= this.length)
              throw new RangeError("sourceStart out of bounds");
            if (end < 0)
              throw new RangeError("sourceEnd out of bounds");
            if (end > this.length)
              end = this.length;
            if (target.length - targetStart < end - start) {
              end = target.length - targetStart + start;
            }
            var len = end - start;
            var i;
            if (this === target && start < targetStart && targetStart < end) {
              for (i = len - 1; i >= 0; --i) {
                target[i + targetStart] = this[i + start];
              }
            } else if (len < 1e3) {
              for (i = 0; i < len; ++i) {
                target[i + targetStart] = this[i + start];
              }
            } else {
              Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);
            }
            return len;
          };
          Buffer2.prototype.fill = function fill(val, start, end, encoding) {
            if (typeof val === "string") {
              if (typeof start === "string") {
                encoding = start;
                start = 0;
                end = this.length;
              } else if (typeof end === "string") {
                encoding = end;
                end = this.length;
              }
              if (val.length === 1) {
                var code = val.charCodeAt(0);
                if (code < 256) {
                  val = code;
                }
              }
              if (encoding !== void 0 && typeof encoding !== "string") {
                throw new TypeError("encoding must be a string");
              }
              if (typeof encoding === "string" && !Buffer2.isEncoding(encoding)) {
                throw new TypeError("Unknown encoding: " + encoding);
              }
            } else if (typeof val === "number") {
              val = val & 255;
            }
            if (start < 0 || this.length < start || this.length < end) {
              throw new RangeError("Out of range index");
            }
            if (end <= start) {
              return this;
            }
            start = start >>> 0;
            end = end === void 0 ? this.length : end >>> 0;
            if (!val)
              val = 0;
            var i;
            if (typeof val === "number") {
              for (i = start; i < end; ++i) {
                this[i] = val;
              }
            } else {
              var bytes = Buffer2.isBuffer(val) ? val : new Buffer2(val, encoding);
              var len = bytes.length;
              for (i = 0; i < end - start; ++i) {
                this[i + start] = bytes[i % len];
              }
            }
            return this;
          };
          var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
          function base64clean(str4) {
            str4 = str4.trim().replace(INVALID_BASE64_RE, "");
            if (str4.length < 2)
              return "";
            while (str4.length % 4 !== 0) {
              str4 = str4 + "=";
            }
            return str4;
          }
          function toHex(n) {
            if (n < 16)
              return "0" + n.toString(16);
            return n.toString(16);
          }
          function utf8ToBytes(string, units) {
            units = units || Infinity;
            var codePoint;
            var length = string.length;
            var leadSurrogate = null;
            var bytes = [];
            for (var i = 0; i < length; ++i) {
              codePoint = string.charCodeAt(i);
              if (codePoint > 55295 && codePoint < 57344) {
                if (!leadSurrogate) {
                  if (codePoint > 56319) {
                    if ((units -= 3) > -1)
                      bytes.push(239, 191, 189);
                    continue;
                  } else if (i + 1 === length) {
                    if ((units -= 3) > -1)
                      bytes.push(239, 191, 189);
                    continue;
                  }
                  leadSurrogate = codePoint;
                  continue;
                }
                if (codePoint < 56320) {
                  if ((units -= 3) > -1)
                    bytes.push(239, 191, 189);
                  leadSurrogate = codePoint;
                  continue;
                }
                codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;
              } else if (leadSurrogate) {
                if ((units -= 3) > -1)
                  bytes.push(239, 191, 189);
              }
              leadSurrogate = null;
              if (codePoint < 128) {
                if ((units -= 1) < 0)
                  break;
                bytes.push(codePoint);
              } else if (codePoint < 2048) {
                if ((units -= 2) < 0)
                  break;
                bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);
              } else if (codePoint < 65536) {
                if ((units -= 3) < 0)
                  break;
                bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);
              } else if (codePoint < 1114112) {
                if ((units -= 4) < 0)
                  break;
                bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);
              } else {
                throw new Error("Invalid code point");
              }
            }
            return bytes;
          }
          function asciiToBytes(str4) {
            var byteArray = [];
            for (var i = 0; i < str4.length; ++i) {
              byteArray.push(str4.charCodeAt(i) & 255);
            }
            return byteArray;
          }
          function utf16leToBytes(str4, units) {
            var c, hi, lo;
            var byteArray = [];
            for (var i = 0; i < str4.length; ++i) {
              if ((units -= 2) < 0)
                break;
              c = str4.charCodeAt(i);
              hi = c >> 8;
              lo = c % 256;
              byteArray.push(lo);
              byteArray.push(hi);
            }
            return byteArray;
          }
          function base64ToBytes(str4) {
            return base64.toByteArray(base64clean(str4));
          }
          function blitBuffer(src, dst, offset, length) {
            for (var i = 0; i < length; ++i) {
              if (i + offset >= dst.length || i >= src.length)
                break;
              dst[i + offset] = src[i];
            }
            return i;
          }
          function isArrayBuffer(obj) {
            return obj instanceof ArrayBuffer || obj != null && obj.constructor != null && obj.constructor.name === "ArrayBuffer" && typeof obj.byteLength === "number";
          }
          function isArrayBufferView(obj) {
            return typeof ArrayBuffer.isView === "function" && ArrayBuffer.isView(obj);
          }
          function numberIsNaN(obj) {
            return obj !== obj;
          }
        }).call(exports2, __webpack_require__(1));
      }, function(module22, exports2) {
        "use strict";
        exports2.byteLength = byteLength;
        exports2.toByteArray = toByteArray;
        exports2.fromByteArray = fromByteArray;
        var lookup = [];
        var revLookup = [];
        var Arr = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
        var code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
        for (var i = 0, len = code.length; i < len; ++i) {
          lookup[i] = code[i];
          revLookup[code.charCodeAt(i)] = i;
        }
        revLookup["-".charCodeAt(0)] = 62;
        revLookup["_".charCodeAt(0)] = 63;
        function placeHoldersCount(b64) {
          var len2 = b64.length;
          if (len2 % 4 > 0) {
            throw new Error("Invalid string. Length must be a multiple of 4");
          }
          return b64[len2 - 2] === "=" ? 2 : b64[len2 - 1] === "=" ? 1 : 0;
        }
        function byteLength(b64) {
          return b64.length * 3 / 4 - placeHoldersCount(b64);
        }
        function toByteArray(b64) {
          var i2, j, l, tmp, placeHolders, arr;
          var len2 = b64.length;
          placeHolders = placeHoldersCount(b64);
          arr = new Arr(len2 * 3 / 4 - placeHolders);
          l = placeHolders > 0 ? len2 - 4 : len2;
          var L = 0;
          for (i2 = 0, j = 0; i2 < l; i2 += 4, j += 3) {
            tmp = revLookup[b64.charCodeAt(i2)] << 18 | revLookup[b64.charCodeAt(i2 + 1)] << 12 | revLookup[b64.charCodeAt(i2 + 2)] << 6 | revLookup[b64.charCodeAt(i2 + 3)];
            arr[L++] = tmp >> 16 & 255;
            arr[L++] = tmp >> 8 & 255;
            arr[L++] = tmp & 255;
          }
          if (placeHolders === 2) {
            tmp = revLookup[b64.charCodeAt(i2)] << 2 | revLookup[b64.charCodeAt(i2 + 1)] >> 4;
            arr[L++] = tmp & 255;
          } else if (placeHolders === 1) {
            tmp = revLookup[b64.charCodeAt(i2)] << 10 | revLookup[b64.charCodeAt(i2 + 1)] << 4 | revLookup[b64.charCodeAt(i2 + 2)] >> 2;
            arr[L++] = tmp >> 8 & 255;
            arr[L++] = tmp & 255;
          }
          return arr;
        }
        function tripletToBase64(num) {
          return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];
        }
        function encodeChunk(uint8, start, end) {
          var tmp;
          var output = [];
          for (var i2 = start; i2 < end; i2 += 3) {
            tmp = (uint8[i2] << 16) + (uint8[i2 + 1] << 8) + uint8[i2 + 2];
            output.push(tripletToBase64(tmp));
          }
          return output.join("");
        }
        function fromByteArray(uint8) {
          var tmp;
          var len2 = uint8.length;
          var extraBytes = len2 % 3;
          var output = "";
          var parts = [];
          var maxChunkLength = 16383;
          for (var i2 = 0, len22 = len2 - extraBytes; i2 < len22; i2 += maxChunkLength) {
            parts.push(encodeChunk(uint8, i2, i2 + maxChunkLength > len22 ? len22 : i2 + maxChunkLength));
          }
          if (extraBytes === 1) {
            tmp = uint8[len2 - 1];
            output += lookup[tmp >> 2];
            output += lookup[tmp << 4 & 63];
            output += "==";
          } else if (extraBytes === 2) {
            tmp = (uint8[len2 - 2] << 8) + uint8[len2 - 1];
            output += lookup[tmp >> 10];
            output += lookup[tmp >> 4 & 63];
            output += lookup[tmp << 2 & 63];
            output += "=";
          }
          parts.push(output);
          return parts.join("");
        }
      }, function(module22, exports2) {
        exports2.read = function(buffer, offset, isLE, mLen, nBytes) {
          var e, m;
          var eLen = nBytes * 8 - mLen - 1;
          var eMax = (1 << eLen) - 1;
          var eBias = eMax >> 1;
          var nBits = -7;
          var i = isLE ? nBytes - 1 : 0;
          var d2 = isLE ? -1 : 1;
          var s = buffer[offset + i];
          i += d2;
          e = s & (1 << -nBits) - 1;
          s >>= -nBits;
          nBits += eLen;
          for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d2, nBits -= 8) {
          }
          m = e & (1 << -nBits) - 1;
          e >>= -nBits;
          nBits += mLen;
          for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d2, nBits -= 8) {
          }
          if (e === 0) {
            e = 1 - eBias;
          } else if (e === eMax) {
            return m ? NaN : (s ? -1 : 1) * Infinity;
          } else {
            m = m + Math.pow(2, mLen);
            e = e - eBias;
          }
          return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
        };
        exports2.write = function(buffer, value, offset, isLE, mLen, nBytes) {
          var e, m, c;
          var eLen = nBytes * 8 - mLen - 1;
          var eMax = (1 << eLen) - 1;
          var eBias = eMax >> 1;
          var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
          var i = isLE ? 0 : nBytes - 1;
          var d2 = isLE ? 1 : -1;
          var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
          value = Math.abs(value);
          if (isNaN(value) || value === Infinity) {
            m = isNaN(value) ? 1 : 0;
            e = eMax;
          } else {
            e = Math.floor(Math.log(value) / Math.LN2);
            if (value * (c = Math.pow(2, -e)) < 1) {
              e--;
              c *= 2;
            }
            if (e + eBias >= 1) {
              value += rt / c;
            } else {
              value += rt * Math.pow(2, 1 - eBias);
            }
            if (value * c >= 2) {
              e++;
              c /= 2;
            }
            if (e + eBias >= eMax) {
              m = 0;
              e = eMax;
            } else if (e + eBias >= 1) {
              m = (value * c - 1) * Math.pow(2, mLen);
              e = e + eBias;
            } else {
              m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
              e = 0;
            }
          }
          for (; mLen >= 8; buffer[offset + i] = m & 255, i += d2, m /= 256, mLen -= 8) {
          }
          e = e << mLen | m;
          eLen += mLen;
          for (; eLen > 0; buffer[offset + i] = e & 255, i += d2, e /= 256, eLen -= 8) {
          }
          buffer[offset + i - d2] |= s * 128;
        };
      }, function(module22, exports2) {
        module22.exports = function(module3) {
          if (!module3.webpackPolyfill) {
            module3.deprecate = function() {
            };
            module3.paths = [];
            module3.children = [];
            module3.webpackPolyfill = 1;
          }
          return module3;
        };
      }, function(module22, exports2, __webpack_require__) {
        "use strict";
        var Process = __webpack_require__(7);
        var process2 = new Process(), processProxy = {};
        function defineKey(key2) {
          if (processProxy[key2]) {
            return;
          }
          if (typeof process2[key2] === "function") {
            processProxy[key2] = function() {
              return process2[key2].apply(process2, arguments);
            };
          } else {
            processProxy[key2] = process2[key2];
          }
        }
        for (var key in process2) {
          defineKey(key);
        }
        processProxy.initializeTTYs = function() {
          if (process2.stdin === null) {
            process2.initializeTTYs();
            processProxy.stdin = process2.stdin;
            processProxy.stdout = process2.stdout;
            processProxy.stderr = process2.stderr;
          }
        };
        process2.nextTick(function() {
          processProxy.initializeTTYs();
        });
        module22.exports = processProxy;
      }, function(module22, exports2, __webpack_require__) {
        (function(__dirname) {
          "use strict";
          var __extends = this && this.__extends || function(d2, b2) {
            for (var p in b2)
              if (b2.hasOwnProperty(p))
                d2[p] = b2[p];
            function __() {
              this.constructor = d2;
            }
            d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
          };
          var events = __webpack_require__(8);
          var path = null;
          var Item = function() {
            function Item2(fun, array) {
              this.fun = fun;
              this.array = array;
            }
            Item2.prototype.run = function() {
              this.fun.apply(null, this.array);
            };
            return Item2;
          }();
          var NextTickQueue = function() {
            function NextTickQueue2() {
              this._queue = [];
              this._draining = false;
              this._currentQueue = null;
              this._queueIndex = -1;
            }
            NextTickQueue2.prototype.push = function(item) {
              var _this = this;
              if (this._queue.push(item) === 1 && !this._draining) {
                setTimeout(function() {
                  return _this._drainQueue();
                }, 0);
              }
            };
            NextTickQueue2.prototype._cleanUpNextTick = function() {
              this._draining = false;
              if (this._currentQueue && this._currentQueue.length) {
                this._queue = this._currentQueue.concat(this._queue);
              } else {
                this._queueIndex = -1;
              }
              if (this._queue.length) {
                this._drainQueue();
              }
            };
            NextTickQueue2.prototype._drainQueue = function() {
              var _this = this;
              if (this._draining) {
                return;
              }
              var timeout = setTimeout(function() {
                return _this._cleanUpNextTick();
              });
              this._draining = true;
              var len = this._queue.length;
              while (len) {
                this._currentQueue = this._queue;
                this._queue = [];
                while (++this._queueIndex < len) {
                  if (this._currentQueue) {
                    this._currentQueue[this._queueIndex].run();
                  }
                }
                this._queueIndex = -1;
                len = this._queue.length;
              }
              this._currentQueue = null;
              this._draining = false;
              clearTimeout(timeout);
            };
            return NextTickQueue2;
          }();
          var Process = function(_super) {
            __extends(Process2, _super);
            function Process2() {
              _super.apply(this, arguments);
              this.startTime = Date.now();
              this._cwd = "/";
              this.platform = "browser";
              this.argv = [];
              this.execArgv = [];
              this.stdout = null;
              this.stderr = null;
              this.stdin = null;
              this.domain = null;
              this._queue = new NextTickQueue();
              this.execPath = __dirname;
              this.env = {};
              this.exitCode = 0;
              this._gid = 1;
              this._uid = 1;
              this.version = "v5.0";
              this.versions = { http_parser: "0.0", node: "5.0", v8: "0.0", uv: "0.0", zlib: "0.0", ares: "0.0", icu: "0.0", modules: "0", openssl: "0.0" };
              this.config = { target_defaults: { cflags: [], default_configuration: "Release", defines: [], include_dirs: [], libraries: [] }, variables: { clang: 0, host_arch: "x32", node_install_npm: false, node_install_waf: false, node_prefix: "", node_shared_cares: false, node_shared_http_parser: false, node_shared_libuv: false, node_shared_zlib: false, node_shared_v8: false, node_use_dtrace: false, node_use_etw: false, node_use_openssl: false, node_shared_openssl: false, strict_aliasing: false, target_arch: "x32", v8_use_snapshot: false, v8_no_strict_aliasing: 0, visibility: "" } };
              this.pid = Math.random() * 1e3 | 0;
              this.title = "node";
              this.arch = "x32";
              this._mask = 18;
              this.connected = void 0;
            }
            Process2.prototype.chdir = function(dir2) {
              if (path === null) {
                path = __webpack_require__(9);
              }
              this._cwd = path.resolve(dir2);
            };
            Process2.prototype.cwd = function() {
              return this._cwd;
            };
            Process2.prototype.uptime = function() {
              return (Date.now() - this.startTime) / 1e3 | 0;
            };
            Process2.prototype.nextTick = function(fun) {
              var args = [];
              for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
              }
              this._queue.push(new Item(fun, args));
            };
            Process2.prototype.abort = function() {
              this.emit("abort");
            };
            Process2.prototype.exit = function(code) {
              this.exitCode = code;
              this.emit("exit", [code]);
            };
            Process2.prototype.getgid = function() {
              return this._gid;
            };
            Process2.prototype.setgid = function(gid) {
              if (typeof gid === "number") {
                this._gid = gid;
              } else {
                this._gid = 1;
              }
            };
            Process2.prototype.getuid = function() {
              return this._uid;
            };
            Process2.prototype.setuid = function(uid) {
              if (typeof uid === "number") {
                this._uid = uid;
              } else {
                this._uid = 1;
              }
            };
            Process2.prototype.kill = function(pid, signal) {
              this.emit("kill", [pid, signal]);
            };
            Process2.prototype.memoryUsage = function() {
              return { rss: 0, heapTotal: 0, heapUsed: 0 };
            };
            Process2.prototype.umask = function(mask) {
              if (mask === void 0) {
                mask = this._mask;
              }
              var oldMask = this._mask;
              this._mask = mask;
              this.emit("umask", [mask]);
              return oldMask;
            };
            Process2.prototype.hrtime = function() {
              var timeinfo;
              if (typeof performance !== "undefined") {
                timeinfo = performance.now();
              } else if (Date["now"]) {
                timeinfo = Date.now();
              } else {
                timeinfo = new Date().getTime();
              }
              var secs = timeinfo / 1e3 | 0;
              timeinfo -= secs * 1e3;
              timeinfo = timeinfo * 1e6 | 0;
              return [secs, timeinfo];
            };
            Process2.prototype.initializeTTYs = function() {
              if (this.stdout === null) {
                var TTY = __webpack_require__(10);
                this.stdout = new TTY();
                this.stderr = new TTY();
                this.stdin = new TTY();
              }
            };
            Process2.prototype.disconnect = function() {
            };
            return Process2;
          }(events.EventEmitter);
          module22.exports = Process;
        }).call(exports2, "/");
      }, function(module22, exports2) {
        function EventEmitter() {
          this._events = this._events || {};
          this._maxListeners = this._maxListeners || void 0;
        }
        module22.exports = EventEmitter;
        EventEmitter.EventEmitter = EventEmitter;
        EventEmitter.prototype._events = void 0;
        EventEmitter.prototype._maxListeners = void 0;
        EventEmitter.defaultMaxListeners = 10;
        EventEmitter.prototype.setMaxListeners = function(n) {
          if (!isNumber(n) || n < 0 || isNaN(n))
            throw TypeError("n must be a positive number");
          this._maxListeners = n;
          return this;
        };
        EventEmitter.prototype.emit = function(type) {
          var er, handler, len, args, i, listeners;
          if (!this._events)
            this._events = {};
          if (type === "error") {
            if (!this._events.error || isObject(this._events.error) && !this._events.error.length) {
              er = arguments[1];
              if (er instanceof Error) {
                throw er;
              } else {
                var err = new Error('Uncaught, unspecified "error" event. (' + er + ")");
                err.context = er;
                throw err;
              }
            }
          }
          handler = this._events[type];
          if (isUndefined(handler))
            return false;
          if (isFunction(handler)) {
            switch (arguments.length) {
              case 1:
                handler.call(this);
                break;
              case 2:
                handler.call(this, arguments[1]);
                break;
              case 3:
                handler.call(this, arguments[1], arguments[2]);
                break;
              default:
                args = Array.prototype.slice.call(arguments, 1);
                handler.apply(this, args);
            }
          } else if (isObject(handler)) {
            args = Array.prototype.slice.call(arguments, 1);
            listeners = handler.slice();
            len = listeners.length;
            for (i = 0; i < len; i++)
              listeners[i].apply(this, args);
          }
          return true;
        };
        EventEmitter.prototype.addListener = function(type, listener) {
          var m;
          if (!isFunction(listener))
            throw TypeError("listener must be a function");
          if (!this._events)
            this._events = {};
          if (this._events.newListener)
            this.emit("newListener", type, isFunction(listener.listener) ? listener.listener : listener);
          if (!this._events[type])
            this._events[type] = listener;
          else if (isObject(this._events[type]))
            this._events[type].push(listener);
          else
            this._events[type] = [this._events[type], listener];
          if (isObject(this._events[type]) && !this._events[type].warned) {
            if (!isUndefined(this._maxListeners)) {
              m = this._maxListeners;
            } else {
              m = EventEmitter.defaultMaxListeners;
            }
            if (m && m > 0 && this._events[type].length > m) {
              this._events[type].warned = true;
              console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.", this._events[type].length);
              if (typeof console.trace === "function") {
                console.trace();
              }
            }
          }
          return this;
        };
        EventEmitter.prototype.on = EventEmitter.prototype.addListener;
        EventEmitter.prototype.once = function(type, listener) {
          if (!isFunction(listener))
            throw TypeError("listener must be a function");
          var fired = false;
          function g() {
            this.removeListener(type, g);
            if (!fired) {
              fired = true;
              listener.apply(this, arguments);
            }
          }
          g.listener = listener;
          this.on(type, g);
          return this;
        };
        EventEmitter.prototype.removeListener = function(type, listener) {
          var list, position, length, i;
          if (!isFunction(listener))
            throw TypeError("listener must be a function");
          if (!this._events || !this._events[type])
            return this;
          list = this._events[type];
          length = list.length;
          position = -1;
          if (list === listener || isFunction(list.listener) && list.listener === listener) {
            delete this._events[type];
            if (this._events.removeListener)
              this.emit("removeListener", type, listener);
          } else if (isObject(list)) {
            for (i = length; i-- > 0; ) {
              if (list[i] === listener || list[i].listener && list[i].listener === listener) {
                position = i;
                break;
              }
            }
            if (position < 0)
              return this;
            if (list.length === 1) {
              list.length = 0;
              delete this._events[type];
            } else {
              list.splice(position, 1);
            }
            if (this._events.removeListener)
              this.emit("removeListener", type, listener);
          }
          return this;
        };
        EventEmitter.prototype.removeAllListeners = function(type) {
          var key, listeners;
          if (!this._events)
            return this;
          if (!this._events.removeListener) {
            if (arguments.length === 0)
              this._events = {};
            else if (this._events[type])
              delete this._events[type];
            return this;
          }
          if (arguments.length === 0) {
            for (key in this._events) {
              if (key === "removeListener")
                continue;
              this.removeAllListeners(key);
            }
            this.removeAllListeners("removeListener");
            this._events = {};
            return this;
          }
          listeners = this._events[type];
          if (isFunction(listeners)) {
            this.removeListener(type, listeners);
          } else if (listeners) {
            while (listeners.length)
              this.removeListener(type, listeners[listeners.length - 1]);
          }
          delete this._events[type];
          return this;
        };
        EventEmitter.prototype.listeners = function(type) {
          var ret;
          if (!this._events || !this._events[type])
            ret = [];
          else if (isFunction(this._events[type]))
            ret = [this._events[type]];
          else
            ret = this._events[type].slice();
          return ret;
        };
        EventEmitter.prototype.listenerCount = function(type) {
          if (this._events) {
            var evlistener = this._events[type];
            if (isFunction(evlistener))
              return 1;
            else if (evlistener)
              return evlistener.length;
          }
          return 0;
        };
        EventEmitter.listenerCount = function(emitter, type) {
          return emitter.listenerCount(type);
        };
        function isFunction(arg) {
          return typeof arg === "function";
        }
        function isNumber(arg) {
          return typeof arg === "number";
        }
        function isObject(arg) {
          return typeof arg === "object" && arg !== null;
        }
        function isUndefined(arg) {
          return arg === void 0;
        }
      }, function(module22, exports2, __webpack_require__) {
        (function(process2) {
          "use strict";
          var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
          function posixSplitPath(filename) {
            var out = splitPathRe.exec(filename);
            out.shift();
            return out;
          }
          var path = function() {
            function path2() {
            }
            path2.normalize = function(p) {
              if (p === "") {
                p = ".";
              }
              var absolute = p.charAt(0) === path2.sep;
              p = path2._removeDuplicateSeps(p);
              var components = p.split(path2.sep);
              var goodComponents = [];
              for (var idx = 0; idx < components.length; idx++) {
                var c = components[idx];
                if (c === ".") {
                  continue;
                } else if (c === ".." && (absolute || !absolute && goodComponents.length > 0 && goodComponents[0] !== "..")) {
                  goodComponents.pop();
                } else {
                  goodComponents.push(c);
                }
              }
              if (!absolute && goodComponents.length < 2) {
                switch (goodComponents.length) {
                  case 1:
                    if (goodComponents[0] === "") {
                      goodComponents.unshift(".");
                    }
                    break;
                  default:
                    goodComponents.push(".");
                }
              }
              p = goodComponents.join(path2.sep);
              if (absolute && p.charAt(0) !== path2.sep) {
                p = path2.sep + p;
              }
              return p;
            };
            path2.join = function() {
              var paths = [];
              for (var _i = 0; _i < arguments.length; _i++) {
                paths[_i - 0] = arguments[_i];
              }
              var processed = [];
              for (var i = 0; i < paths.length; i++) {
                var segment = paths[i];
                if (typeof segment !== "string") {
                  throw new TypeError("Invalid argument type to path.join: " + typeof segment);
                } else if (segment !== "") {
                  processed.push(segment);
                }
              }
              return path2.normalize(processed.join(path2.sep));
            };
            path2.resolve = function() {
              var paths = [];
              for (var _i = 0; _i < arguments.length; _i++) {
                paths[_i - 0] = arguments[_i];
              }
              var processed = [];
              for (var i = 0; i < paths.length; i++) {
                var p = paths[i];
                if (typeof p !== "string") {
                  throw new TypeError("Invalid argument type to path.join: " + typeof p);
                } else if (p !== "") {
                  if (p.charAt(0) === path2.sep) {
                    processed = [];
                  }
                  processed.push(p);
                }
              }
              var resolved = path2.normalize(processed.join(path2.sep));
              if (resolved.length > 1 && resolved.charAt(resolved.length - 1) === path2.sep) {
                return resolved.substr(0, resolved.length - 1);
              }
              if (resolved.charAt(0) !== path2.sep) {
                if (resolved.charAt(0) === "." && (resolved.length === 1 || resolved.charAt(1) === path2.sep)) {
                  resolved = resolved.length === 1 ? "" : resolved.substr(2);
                }
                var cwd = process2.cwd();
                if (resolved !== "") {
                  resolved = this.normalize(cwd + (cwd !== "/" ? path2.sep : "") + resolved);
                } else {
                  resolved = cwd;
                }
              }
              return resolved;
            };
            path2.relative = function(from, to) {
              var i;
              from = path2.resolve(from);
              to = path2.resolve(to);
              var fromSegs = from.split(path2.sep);
              var toSegs = to.split(path2.sep);
              toSegs.shift();
              fromSegs.shift();
              var upCount = 0;
              var downSegs = [];
              for (i = 0; i < fromSegs.length; i++) {
                var seg = fromSegs[i];
                if (seg === toSegs[i]) {
                  continue;
                }
                upCount = fromSegs.length - i;
                break;
              }
              downSegs = toSegs.slice(i);
              if (fromSegs.length === 1 && fromSegs[0] === "") {
                upCount = 0;
              }
              if (upCount > fromSegs.length) {
                upCount = fromSegs.length;
              }
              var rv = "";
              for (i = 0; i < upCount; i++) {
                rv += "../";
              }
              rv += downSegs.join(path2.sep);
              if (rv.length > 1 && rv.charAt(rv.length - 1) === path2.sep) {
                rv = rv.substr(0, rv.length - 1);
              }
              return rv;
            };
            path2.dirname = function(p) {
              p = path2._removeDuplicateSeps(p);
              var absolute = p.charAt(0) === path2.sep;
              var sections = p.split(path2.sep);
              if (sections.pop() === "" && sections.length > 0) {
                sections.pop();
              }
              if (sections.length > 1 || sections.length === 1 && !absolute) {
                return sections.join(path2.sep);
              } else if (absolute) {
                return path2.sep;
              } else {
                return ".";
              }
            };
            path2.basename = function(p, ext) {
              if (ext === void 0) {
                ext = "";
              }
              if (p === "") {
                return p;
              }
              p = path2.normalize(p);
              var sections = p.split(path2.sep);
              var lastPart = sections[sections.length - 1];
              if (lastPart === "" && sections.length > 1) {
                return sections[sections.length - 2];
              }
              if (ext.length > 0) {
                var lastPartExt = lastPart.substr(lastPart.length - ext.length);
                if (lastPartExt === ext) {
                  return lastPart.substr(0, lastPart.length - ext.length);
                }
              }
              return lastPart;
            };
            path2.extname = function(p) {
              p = path2.normalize(p);
              var sections = p.split(path2.sep);
              p = sections.pop();
              if (p === "" && sections.length > 0) {
                p = sections.pop();
              }
              if (p === "..") {
                return "";
              }
              var i = p.lastIndexOf(".");
              if (i === -1 || i === 0) {
                return "";
              }
              return p.substr(i);
            };
            path2.isAbsolute = function(p) {
              return p.length > 0 && p.charAt(0) === path2.sep;
            };
            path2._makeLong = function(p) {
              return p;
            };
            path2.parse = function(p) {
              var allParts = posixSplitPath(p);
              return { root: allParts[0], dir: allParts[0] + allParts[1].slice(0, -1), base: allParts[2], ext: allParts[3], name: allParts[2].slice(0, allParts[2].length - allParts[3].length) };
            };
            path2.format = function(pathObject) {
              if (pathObject === null || typeof pathObject !== "object") {
                throw new TypeError("Parameter 'pathObject' must be an object, not " + typeof pathObject);
              }
              var root = pathObject.root || "";
              if (typeof root !== "string") {
                throw new TypeError("'pathObject.root' must be a string or undefined, not " + typeof pathObject.root);
              }
              var dir2 = pathObject.dir ? pathObject.dir + path2.sep : "";
              var base = pathObject.base || "";
              return dir2 + base;
            };
            path2._removeDuplicateSeps = function(p) {
              p = p.replace(this._replaceRegex, this.sep);
              return p;
            };
            path2.sep = "/";
            path2._replaceRegex = new RegExp("//+", "g");
            path2.delimiter = ":";
            path2.posix = path2;
            path2.win32 = path2;
            return path2;
          }();
          var _2 = path;
          module22.exports = path;
        }).call(exports2, __webpack_require__(6));
      }, function(module22, exports2, __webpack_require__) {
        (function(Buffer2) {
          "use strict";
          var __extends = this && this.__extends || function(d2, b2) {
            for (var p in b2)
              if (b2.hasOwnProperty(p))
                d2[p] = b2[p];
            function __() {
              this.constructor = d2;
            }
            d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
          };
          var stream = __webpack_require__(11);
          var TTY = function(_super) {
            __extends(TTY2, _super);
            function TTY2() {
              _super.call(this);
              this.isRaw = false;
              this.columns = 80;
              this.rows = 120;
              this.isTTY = true;
              this._bufferedWrites = [];
              this._waitingForWrites = false;
            }
            TTY2.prototype.setRawMode = function(mode) {
              if (this.isRaw !== mode) {
                this.isRaw = mode;
                this.emit("modeChange");
              }
            };
            TTY2.prototype.changeColumns = function(columns) {
              if (columns !== this.columns) {
                this.columns = columns;
                this.emit("resize");
              }
            };
            TTY2.prototype.changeRows = function(rows) {
              if (rows !== this.rows) {
                this.rows = rows;
                this.emit("resize");
              }
            };
            TTY2.isatty = function(fd) {
              return fd && fd instanceof TTY2;
            };
            TTY2.prototype._write = function(chunk, encoding, cb) {
              var error;
              try {
                var data;
                if (typeof chunk === "string") {
                  data = new Buffer2(chunk, encoding);
                } else {
                  data = chunk;
                }
                this._bufferedWrites.push(data);
                if (this._waitingForWrites) {
                  this._read(1024);
                }
              } catch (e) {
                error = e;
              } finally {
                cb(error);
              }
            };
            TTY2.prototype._read = function(size) {
              if (this._bufferedWrites.length === 0) {
                this._waitingForWrites = true;
              } else {
                while (this._bufferedWrites.length > 0) {
                  this._waitingForWrites = this.push(this._bufferedWrites.shift());
                  if (!this._waitingForWrites) {
                    break;
                  }
                }
              }
            };
            return TTY2;
          }(stream.Duplex);
          module22.exports = TTY;
        }).call(exports2, __webpack_require__(1));
      }, function(module22, exports2, __webpack_require__) {
        module22.exports = Stream;
        var EE = __webpack_require__(8).EventEmitter;
        var inherits = __webpack_require__(12);
        inherits(Stream, EE);
        Stream.Readable = __webpack_require__(13);
        Stream.Writable = __webpack_require__(27);
        Stream.Duplex = __webpack_require__(28);
        Stream.Transform = __webpack_require__(29);
        Stream.PassThrough = __webpack_require__(30);
        Stream.Stream = Stream;
        function Stream() {
          EE.call(this);
        }
        Stream.prototype.pipe = function(dest, options) {
          var source = this;
          function ondata2(chunk) {
            if (dest.writable) {
              if (false === dest.write(chunk) && source.pause) {
                source.pause();
              }
            }
          }
          source.on("data", ondata2);
          function ondrain() {
            if (source.readable && source.resume) {
              source.resume();
            }
          }
          dest.on("drain", ondrain);
          if (!dest._isStdio && (!options || options.end !== false)) {
            source.on("end", onend);
            source.on("close", onclose);
          }
          var didOnEnd = false;
          function onend() {
            if (didOnEnd)
              return;
            didOnEnd = true;
            dest.end();
          }
          function onclose() {
            if (didOnEnd)
              return;
            didOnEnd = true;
            if (typeof dest.destroy === "function")
              dest.destroy();
          }
          function onerror(er) {
            cleanup();
            if (EE.listenerCount(this, "error") === 0) {
              throw er;
            }
          }
          source.on("error", onerror);
          dest.on("error", onerror);
          function cleanup() {
            source.removeListener("data", ondata2);
            dest.removeListener("drain", ondrain);
            source.removeListener("end", onend);
            source.removeListener("close", onclose);
            source.removeListener("error", onerror);
            dest.removeListener("error", onerror);
            source.removeListener("end", cleanup);
            source.removeListener("close", cleanup);
            dest.removeListener("close", cleanup);
          }
          source.on("end", cleanup);
          source.on("close", cleanup);
          dest.on("close", cleanup);
          dest.emit("pipe", source);
          return dest;
        };
      }, function(module22, exports2) {
        if (typeof Object.create === "function") {
          module22.exports = function inherits(ctor, superCtor) {
            ctor.super_ = superCtor;
            ctor.prototype = Object.create(superCtor.prototype, { constructor: { value: ctor, enumerable: false, writable: true, configurable: true } });
          };
        } else {
          module22.exports = function inherits(ctor, superCtor) {
            ctor.super_ = superCtor;
            var TempCtor = function() {
            };
            TempCtor.prototype = superCtor.prototype;
            ctor.prototype = new TempCtor();
            ctor.prototype.constructor = ctor;
          };
        }
      }, function(module22, exports2, __webpack_require__) {
        (function(process2) {
          var Stream = function() {
            try {
              return __webpack_require__(11);
            } catch (_2) {
            }
          }();
          exports2 = module22.exports = __webpack_require__(14);
          exports2.Stream = Stream || exports2;
          exports2.Readable = exports2;
          exports2.Writable = __webpack_require__(22);
          exports2.Duplex = __webpack_require__(21);
          exports2.Transform = __webpack_require__(25);
          exports2.PassThrough = __webpack_require__(26);
          if (!process2.browser && process2.env.READABLE_STREAM === "disable" && Stream) {
            module22.exports = Stream;
          }
        }).call(exports2, __webpack_require__(6));
      }, function(module22, exports2, __webpack_require__) {
        (function(process2) {
          "use strict";
          module22.exports = Readable;
          var processNextTick = __webpack_require__(15);
          var isArray = __webpack_require__(16);
          var Duplex;
          Readable.ReadableState = ReadableState;
          var EE = __webpack_require__(8).EventEmitter;
          var EElistenerCount = function(emitter, type) {
            return emitter.listeners(type).length;
          };
          var Stream;
          (function() {
            try {
              Stream = __webpack_require__(11);
            } catch (_2) {
            } finally {
              if (!Stream)
                Stream = __webpack_require__(8).EventEmitter;
            }
          })();
          var Buffer2 = __webpack_require__(2).Buffer;
          var bufferShim = __webpack_require__(17);
          var util = __webpack_require__(18);
          util.inherits = __webpack_require__(12);
          var debugUtil = __webpack_require__(19);
          var debug = void 0;
          if (debugUtil && debugUtil.debuglog) {
            debug = debugUtil.debuglog("stream");
          } else {
            debug = function() {
            };
          }
          var BufferList = __webpack_require__(20);
          var StringDecoder;
          util.inherits(Readable, Stream);
          function prependListener(emitter, event, fn) {
            if (typeof emitter.prependListener === "function") {
              return emitter.prependListener(event, fn);
            } else {
              if (!emitter._events || !emitter._events[event])
                emitter.on(event, fn);
              else if (isArray(emitter._events[event]))
                emitter._events[event].unshift(fn);
              else
                emitter._events[event] = [fn, emitter._events[event]];
            }
          }
          function ReadableState(options, stream) {
            Duplex = Duplex || __webpack_require__(21);
            options = options || {};
            this.objectMode = !!options.objectMode;
            if (stream instanceof Duplex)
              this.objectMode = this.objectMode || !!options.readableObjectMode;
            var hwm = options.highWaterMark;
            var defaultHwm = this.objectMode ? 16 : 16 * 1024;
            this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;
            this.highWaterMark = ~~this.highWaterMark;
            this.buffer = new BufferList();
            this.length = 0;
            this.pipes = null;
            this.pipesCount = 0;
            this.flowing = null;
            this.ended = false;
            this.endEmitted = false;
            this.reading = false;
            this.sync = true;
            this.needReadable = false;
            this.emittedReadable = false;
            this.readableListening = false;
            this.resumeScheduled = false;
            this.defaultEncoding = options.defaultEncoding || "utf8";
            this.ranOut = false;
            this.awaitDrain = 0;
            this.readingMore = false;
            this.decoder = null;
            this.encoding = null;
            if (options.encoding) {
              if (!StringDecoder)
                StringDecoder = __webpack_require__(24).StringDecoder;
              this.decoder = new StringDecoder(options.encoding);
              this.encoding = options.encoding;
            }
          }
          function Readable(options) {
            Duplex = Duplex || __webpack_require__(21);
            if (!(this instanceof Readable))
              return new Readable(options);
            this._readableState = new ReadableState(options, this);
            this.readable = true;
            if (options && typeof options.read === "function")
              this._read = options.read;
            Stream.call(this);
          }
          Readable.prototype.push = function(chunk, encoding) {
            var state5 = this._readableState;
            if (!state5.objectMode && typeof chunk === "string") {
              encoding = encoding || state5.defaultEncoding;
              if (encoding !== state5.encoding) {
                chunk = bufferShim.from(chunk, encoding);
                encoding = "";
              }
            }
            return readableAddChunk(this, state5, chunk, encoding, false);
          };
          Readable.prototype.unshift = function(chunk) {
            var state5 = this._readableState;
            return readableAddChunk(this, state5, chunk, "", true);
          };
          Readable.prototype.isPaused = function() {
            return this._readableState.flowing === false;
          };
          function readableAddChunk(stream, state5, chunk, encoding, addToFront) {
            var er = chunkInvalid(state5, chunk);
            if (er) {
              stream.emit("error", er);
            } else if (chunk === null) {
              state5.reading = false;
              onEofChunk(stream, state5);
            } else if (state5.objectMode || chunk && chunk.length > 0) {
              if (state5.ended && !addToFront) {
                var e = new Error("stream.push() after EOF");
                stream.emit("error", e);
              } else if (state5.endEmitted && addToFront) {
                var _e = new Error("stream.unshift() after end event");
                stream.emit("error", _e);
              } else {
                var skipAdd;
                if (state5.decoder && !addToFront && !encoding) {
                  chunk = state5.decoder.write(chunk);
                  skipAdd = !state5.objectMode && chunk.length === 0;
                }
                if (!addToFront)
                  state5.reading = false;
                if (!skipAdd) {
                  if (state5.flowing && state5.length === 0 && !state5.sync) {
                    stream.emit("data", chunk);
                    stream.read(0);
                  } else {
                    state5.length += state5.objectMode ? 1 : chunk.length;
                    if (addToFront)
                      state5.buffer.unshift(chunk);
                    else
                      state5.buffer.push(chunk);
                    if (state5.needReadable)
                      emitReadable(stream);
                  }
                }
                maybeReadMore(stream, state5);
              }
            } else if (!addToFront) {
              state5.reading = false;
            }
            return needMoreData(state5);
          }
          function needMoreData(state5) {
            return !state5.ended && (state5.needReadable || state5.length < state5.highWaterMark || state5.length === 0);
          }
          Readable.prototype.setEncoding = function(enc) {
            if (!StringDecoder)
              StringDecoder = __webpack_require__(24).StringDecoder;
            this._readableState.decoder = new StringDecoder(enc);
            this._readableState.encoding = enc;
            return this;
          };
          var MAX_HWM = 8388608;
          function computeNewHighWaterMark(n) {
            if (n >= MAX_HWM) {
              n = MAX_HWM;
            } else {
              n--;
              n |= n >>> 1;
              n |= n >>> 2;
              n |= n >>> 4;
              n |= n >>> 8;
              n |= n >>> 16;
              n++;
            }
            return n;
          }
          function howMuchToRead(n, state5) {
            if (n <= 0 || state5.length === 0 && state5.ended)
              return 0;
            if (state5.objectMode)
              return 1;
            if (n !== n) {
              if (state5.flowing && state5.length)
                return state5.buffer.head.data.length;
              else
                return state5.length;
            }
            if (n > state5.highWaterMark)
              state5.highWaterMark = computeNewHighWaterMark(n);
            if (n <= state5.length)
              return n;
            if (!state5.ended) {
              state5.needReadable = true;
              return 0;
            }
            return state5.length;
          }
          Readable.prototype.read = function(n) {
            debug("read", n);
            n = parseInt(n, 10);
            var state5 = this._readableState;
            var nOrig = n;
            if (n !== 0)
              state5.emittedReadable = false;
            if (n === 0 && state5.needReadable && (state5.length >= state5.highWaterMark || state5.ended)) {
              debug("read: emitReadable", state5.length, state5.ended);
              if (state5.length === 0 && state5.ended)
                endReadable(this);
              else
                emitReadable(this);
              return null;
            }
            n = howMuchToRead(n, state5);
            if (n === 0 && state5.ended) {
              if (state5.length === 0)
                endReadable(this);
              return null;
            }
            var doRead = state5.needReadable;
            debug("need readable", doRead);
            if (state5.length === 0 || state5.length - n < state5.highWaterMark) {
              doRead = true;
              debug("length less than watermark", doRead);
            }
            if (state5.ended || state5.reading) {
              doRead = false;
              debug("reading or ended", doRead);
            } else if (doRead) {
              debug("do read");
              state5.reading = true;
              state5.sync = true;
              if (state5.length === 0)
                state5.needReadable = true;
              this._read(state5.highWaterMark);
              state5.sync = false;
              if (!state5.reading)
                n = howMuchToRead(nOrig, state5);
            }
            var ret;
            if (n > 0)
              ret = fromList(n, state5);
            else
              ret = null;
            if (ret === null) {
              state5.needReadable = true;
              n = 0;
            } else {
              state5.length -= n;
            }
            if (state5.length === 0) {
              if (!state5.ended)
                state5.needReadable = true;
              if (nOrig !== n && state5.ended)
                endReadable(this);
            }
            if (ret !== null)
              this.emit("data", ret);
            return ret;
          };
          function chunkInvalid(state5, chunk) {
            var er = null;
            if (!Buffer2.isBuffer(chunk) && typeof chunk !== "string" && chunk !== null && chunk !== void 0 && !state5.objectMode) {
              er = new TypeError("Invalid non-string/buffer chunk");
            }
            return er;
          }
          function onEofChunk(stream, state5) {
            if (state5.ended)
              return;
            if (state5.decoder) {
              var chunk = state5.decoder.end();
              if (chunk && chunk.length) {
                state5.buffer.push(chunk);
                state5.length += state5.objectMode ? 1 : chunk.length;
              }
            }
            state5.ended = true;
            emitReadable(stream);
          }
          function emitReadable(stream) {
            var state5 = stream._readableState;
            state5.needReadable = false;
            if (!state5.emittedReadable) {
              debug("emitReadable", state5.flowing);
              state5.emittedReadable = true;
              if (state5.sync)
                processNextTick(emitReadable_, stream);
              else
                emitReadable_(stream);
            }
          }
          function emitReadable_(stream) {
            debug("emit readable");
            stream.emit("readable");
            flow(stream);
          }
          function maybeReadMore(stream, state5) {
            if (!state5.readingMore) {
              state5.readingMore = true;
              processNextTick(maybeReadMore_, stream, state5);
            }
          }
          function maybeReadMore_(stream, state5) {
            var len = state5.length;
            while (!state5.reading && !state5.flowing && !state5.ended && state5.length < state5.highWaterMark) {
              debug("maybeReadMore read 0");
              stream.read(0);
              if (len === state5.length)
                break;
              else
                len = state5.length;
            }
            state5.readingMore = false;
          }
          Readable.prototype._read = function(n) {
            this.emit("error", new Error("_read() is not implemented"));
          };
          Readable.prototype.pipe = function(dest, pipeOpts) {
            var src = this;
            var state5 = this._readableState;
            switch (state5.pipesCount) {
              case 0:
                state5.pipes = dest;
                break;
              case 1:
                state5.pipes = [state5.pipes, dest];
                break;
              default:
                state5.pipes.push(dest);
                break;
            }
            state5.pipesCount += 1;
            debug("pipe count=%d opts=%j", state5.pipesCount, pipeOpts);
            var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process2.stdout && dest !== process2.stderr;
            var endFn = doEnd ? onend : cleanup;
            if (state5.endEmitted)
              processNextTick(endFn);
            else
              src.once("end", endFn);
            dest.on("unpipe", onunpipe);
            function onunpipe(readable) {
              debug("onunpipe");
              if (readable === src) {
                cleanup();
              }
            }
            function onend() {
              debug("onend");
              dest.end();
            }
            var ondrain = pipeOnDrain(src);
            dest.on("drain", ondrain);
            var cleanedUp = false;
            function cleanup() {
              debug("cleanup");
              dest.removeListener("close", onclose);
              dest.removeListener("finish", onfinish);
              dest.removeListener("drain", ondrain);
              dest.removeListener("error", onerror);
              dest.removeListener("unpipe", onunpipe);
              src.removeListener("end", onend);
              src.removeListener("end", cleanup);
              src.removeListener("data", ondata2);
              cleanedUp = true;
              if (state5.awaitDrain && (!dest._writableState || dest._writableState.needDrain))
                ondrain();
            }
            var increasedAwaitDrain = false;
            src.on("data", ondata2);
            function ondata2(chunk) {
              debug("ondata");
              increasedAwaitDrain = false;
              var ret = dest.write(chunk);
              if (false === ret && !increasedAwaitDrain) {
                if ((state5.pipesCount === 1 && state5.pipes === dest || state5.pipesCount > 1 && indexOf(state5.pipes, dest) !== -1) && !cleanedUp) {
                  debug("false write response, pause", src._readableState.awaitDrain);
                  src._readableState.awaitDrain++;
                  increasedAwaitDrain = true;
                }
                src.pause();
              }
            }
            function onerror(er) {
              debug("onerror", er);
              unpipe();
              dest.removeListener("error", onerror);
              if (EElistenerCount(dest, "error") === 0)
                dest.emit("error", er);
            }
            prependListener(dest, "error", onerror);
            function onclose() {
              dest.removeListener("finish", onfinish);
              unpipe();
            }
            dest.once("close", onclose);
            function onfinish() {
              debug("onfinish");
              dest.removeListener("close", onclose);
              unpipe();
            }
            dest.once("finish", onfinish);
            function unpipe() {
              debug("unpipe");
              src.unpipe(dest);
            }
            dest.emit("pipe", src);
            if (!state5.flowing) {
              debug("pipe resume");
              src.resume();
            }
            return dest;
          };
          function pipeOnDrain(src) {
            return function() {
              var state5 = src._readableState;
              debug("pipeOnDrain", state5.awaitDrain);
              if (state5.awaitDrain)
                state5.awaitDrain--;
              if (state5.awaitDrain === 0 && EElistenerCount(src, "data")) {
                state5.flowing = true;
                flow(src);
              }
            };
          }
          Readable.prototype.unpipe = function(dest) {
            var state5 = this._readableState;
            if (state5.pipesCount === 0)
              return this;
            if (state5.pipesCount === 1) {
              if (dest && dest !== state5.pipes)
                return this;
              if (!dest)
                dest = state5.pipes;
              state5.pipes = null;
              state5.pipesCount = 0;
              state5.flowing = false;
              if (dest)
                dest.emit("unpipe", this);
              return this;
            }
            if (!dest) {
              var dests = state5.pipes;
              var len = state5.pipesCount;
              state5.pipes = null;
              state5.pipesCount = 0;
              state5.flowing = false;
              for (var i = 0; i < len; i++) {
                dests[i].emit("unpipe", this);
              }
              return this;
            }
            var index = indexOf(state5.pipes, dest);
            if (index === -1)
              return this;
            state5.pipes.splice(index, 1);
            state5.pipesCount -= 1;
            if (state5.pipesCount === 1)
              state5.pipes = state5.pipes[0];
            dest.emit("unpipe", this);
            return this;
          };
          Readable.prototype.on = function(ev2, fn) {
            var res = Stream.prototype.on.call(this, ev2, fn);
            if (ev2 === "data") {
              if (this._readableState.flowing !== false)
                this.resume();
            } else if (ev2 === "readable") {
              var state5 = this._readableState;
              if (!state5.endEmitted && !state5.readableListening) {
                state5.readableListening = state5.needReadable = true;
                state5.emittedReadable = false;
                if (!state5.reading) {
                  processNextTick(nReadingNextTick, this);
                } else if (state5.length) {
                  emitReadable(this, state5);
                }
              }
            }
            return res;
          };
          Readable.prototype.addListener = Readable.prototype.on;
          function nReadingNextTick(self2) {
            debug("readable nexttick read 0");
            self2.read(0);
          }
          Readable.prototype.resume = function() {
            var state5 = this._readableState;
            if (!state5.flowing) {
              debug("resume");
              state5.flowing = true;
              resume(this, state5);
            }
            return this;
          };
          function resume(stream, state5) {
            if (!state5.resumeScheduled) {
              state5.resumeScheduled = true;
              processNextTick(resume_, stream, state5);
            }
          }
          function resume_(stream, state5) {
            if (!state5.reading) {
              debug("resume read 0");
              stream.read(0);
            }
            state5.resumeScheduled = false;
            state5.awaitDrain = 0;
            stream.emit("resume");
            flow(stream);
            if (state5.flowing && !state5.reading)
              stream.read(0);
          }
          Readable.prototype.pause = function() {
            debug("call pause flowing=%j", this._readableState.flowing);
            if (false !== this._readableState.flowing) {
              debug("pause");
              this._readableState.flowing = false;
              this.emit("pause");
            }
            return this;
          };
          function flow(stream) {
            var state5 = stream._readableState;
            debug("flow", state5.flowing);
            while (state5.flowing && stream.read() !== null) {
            }
          }
          Readable.prototype.wrap = function(stream) {
            var state5 = this._readableState;
            var paused = false;
            var self2 = this;
            stream.on("end", function() {
              debug("wrapped end");
              if (state5.decoder && !state5.ended) {
                var chunk = state5.decoder.end();
                if (chunk && chunk.length)
                  self2.push(chunk);
              }
              self2.push(null);
            });
            stream.on("data", function(chunk) {
              debug("wrapped data");
              if (state5.decoder)
                chunk = state5.decoder.write(chunk);
              if (state5.objectMode && (chunk === null || chunk === void 0))
                return;
              else if (!state5.objectMode && (!chunk || !chunk.length))
                return;
              var ret = self2.push(chunk);
              if (!ret) {
                paused = true;
                stream.pause();
              }
            });
            for (var i in stream) {
              if (this[i] === void 0 && typeof stream[i] === "function") {
                this[i] = function(method) {
                  return function() {
                    return stream[method].apply(stream, arguments);
                  };
                }(i);
              }
            }
            var events = ["error", "close", "destroy", "pause", "resume"];
            forEach(events, function(ev2) {
              stream.on(ev2, self2.emit.bind(self2, ev2));
            });
            self2._read = function(n) {
              debug("wrapped _read", n);
              if (paused) {
                paused = false;
                stream.resume();
              }
            };
            return self2;
          };
          Readable._fromList = fromList;
          function fromList(n, state5) {
            if (state5.length === 0)
              return null;
            var ret;
            if (state5.objectMode)
              ret = state5.buffer.shift();
            else if (!n || n >= state5.length) {
              if (state5.decoder)
                ret = state5.buffer.join("");
              else if (state5.buffer.length === 1)
                ret = state5.buffer.head.data;
              else
                ret = state5.buffer.concat(state5.length);
              state5.buffer.clear();
            } else {
              ret = fromListPartial(n, state5.buffer, state5.decoder);
            }
            return ret;
          }
          function fromListPartial(n, list, hasStrings) {
            var ret;
            if (n < list.head.data.length) {
              ret = list.head.data.slice(0, n);
              list.head.data = list.head.data.slice(n);
            } else if (n === list.head.data.length) {
              ret = list.shift();
            } else {
              ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
            }
            return ret;
          }
          function copyFromBufferString(n, list) {
            var p = list.head;
            var c = 1;
            var ret = p.data;
            n -= ret.length;
            while (p = p.next) {
              var str4 = p.data;
              var nb = n > str4.length ? str4.length : n;
              if (nb === str4.length)
                ret += str4;
              else
                ret += str4.slice(0, n);
              n -= nb;
              if (n === 0) {
                if (nb === str4.length) {
                  ++c;
                  if (p.next)
                    list.head = p.next;
                  else
                    list.head = list.tail = null;
                } else {
                  list.head = p;
                  p.data = str4.slice(nb);
                }
                break;
              }
              ++c;
            }
            list.length -= c;
            return ret;
          }
          function copyFromBuffer(n, list) {
            var ret = bufferShim.allocUnsafe(n);
            var p = list.head;
            var c = 1;
            p.data.copy(ret);
            n -= p.data.length;
            while (p = p.next) {
              var buf = p.data;
              var nb = n > buf.length ? buf.length : n;
              buf.copy(ret, ret.length - n, 0, nb);
              n -= nb;
              if (n === 0) {
                if (nb === buf.length) {
                  ++c;
                  if (p.next)
                    list.head = p.next;
                  else
                    list.head = list.tail = null;
                } else {
                  list.head = p;
                  p.data = buf.slice(nb);
                }
                break;
              }
              ++c;
            }
            list.length -= c;
            return ret;
          }
          function endReadable(stream) {
            var state5 = stream._readableState;
            if (state5.length > 0)
              throw new Error('"endReadable()" called on non-empty stream');
            if (!state5.endEmitted) {
              state5.ended = true;
              processNextTick(endReadableNT, state5, stream);
            }
          }
          function endReadableNT(state5, stream) {
            if (!state5.endEmitted && state5.length === 0) {
              state5.endEmitted = true;
              stream.readable = false;
              stream.emit("end");
            }
          }
          function forEach(xs, f) {
            for (var i = 0, l = xs.length; i < l; i++) {
              f(xs[i], i);
            }
          }
          function indexOf(xs, x3) {
            for (var i = 0, l = xs.length; i < l; i++) {
              if (xs[i] === x3)
                return i;
            }
            return -1;
          }
        }).call(exports2, __webpack_require__(6));
      }, function(module22, exports2, __webpack_require__) {
        (function(process2) {
          "use strict";
          if (!process2.version || process2.version.indexOf("v0.") === 0 || process2.version.indexOf("v1.") === 0 && process2.version.indexOf("v1.8.") !== 0) {
            module22.exports = nextTick;
          } else {
            module22.exports = process2.nextTick;
          }
          function nextTick(fn, arg1, arg2, arg3) {
            if (typeof fn !== "function") {
              throw new TypeError('"callback" argument must be a function');
            }
            var len = arguments.length;
            var args, i;
            switch (len) {
              case 0:
              case 1:
                return process2.nextTick(fn);
              case 2:
                return process2.nextTick(function afterTickOne() {
                  fn.call(null, arg1);
                });
              case 3:
                return process2.nextTick(function afterTickTwo() {
                  fn.call(null, arg1, arg2);
                });
              case 4:
                return process2.nextTick(function afterTickThree() {
                  fn.call(null, arg1, arg2, arg3);
                });
              default:
                args = new Array(len - 1);
                i = 0;
                while (i < args.length) {
                  args[i++] = arguments[i];
                }
                return process2.nextTick(function afterTick() {
                  fn.apply(null, args);
                });
            }
          }
        }).call(exports2, __webpack_require__(6));
      }, function(module22, exports2) {
        var toString = {}.toString;
        module22.exports = Array.isArray || function(arr) {
          return toString.call(arr) == "[object Array]";
        };
      }, function(module22, exports2, __webpack_require__) {
        (function(global2) {
          "use strict";
          var buffer = __webpack_require__(2);
          var Buffer2 = buffer.Buffer;
          var SlowBuffer = buffer.SlowBuffer;
          var MAX_LEN = buffer.kMaxLength || 2147483647;
          exports2.alloc = function alloc(size, fill, encoding) {
            if (typeof Buffer2.alloc === "function") {
              return Buffer2.alloc(size, fill, encoding);
            }
            if (typeof encoding === "number") {
              throw new TypeError("encoding must not be number");
            }
            if (typeof size !== "number") {
              throw new TypeError("size must be a number");
            }
            if (size > MAX_LEN) {
              throw new RangeError("size is too large");
            }
            var enc = encoding;
            var _fill = fill;
            if (_fill === void 0) {
              enc = void 0;
              _fill = 0;
            }
            var buf = new Buffer2(size);
            if (typeof _fill === "string") {
              var fillBuf = new Buffer2(_fill, enc);
              var flen = fillBuf.length;
              var i = -1;
              while (++i < size) {
                buf[i] = fillBuf[i % flen];
              }
            } else {
              buf.fill(_fill);
            }
            return buf;
          };
          exports2.allocUnsafe = function allocUnsafe(size) {
            if (typeof Buffer2.allocUnsafe === "function") {
              return Buffer2.allocUnsafe(size);
            }
            if (typeof size !== "number") {
              throw new TypeError("size must be a number");
            }
            if (size > MAX_LEN) {
              throw new RangeError("size is too large");
            }
            return new Buffer2(size);
          };
          exports2.from = function from(value, encodingOrOffset, length) {
            if (typeof Buffer2.from === "function" && (!global2.Uint8Array || Uint8Array.from !== Buffer2.from)) {
              return Buffer2.from(value, encodingOrOffset, length);
            }
            if (typeof value === "number") {
              throw new TypeError('"value" argument must not be a number');
            }
            if (typeof value === "string") {
              return new Buffer2(value, encodingOrOffset);
            }
            if (typeof ArrayBuffer !== "undefined" && value instanceof ArrayBuffer) {
              var offset = encodingOrOffset;
              if (arguments.length === 1) {
                return new Buffer2(value);
              }
              if (typeof offset === "undefined") {
                offset = 0;
              }
              var len = length;
              if (typeof len === "undefined") {
                len = value.byteLength - offset;
              }
              if (offset >= value.byteLength) {
                throw new RangeError("'offset' is out of bounds");
              }
              if (len > value.byteLength - offset) {
                throw new RangeError("'length' is out of bounds");
              }
              return new Buffer2(value.slice(offset, offset + len));
            }
            if (Buffer2.isBuffer(value)) {
              var out = new Buffer2(value.length);
              value.copy(out, 0, 0, value.length);
              return out;
            }
            if (value) {
              if (Array.isArray(value) || typeof ArrayBuffer !== "undefined" && value.buffer instanceof ArrayBuffer || "length" in value) {
                return new Buffer2(value);
              }
              if (value.type === "Buffer" && Array.isArray(value.data)) {
                return new Buffer2(value.data);
              }
            }
            throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
          };
          exports2.allocUnsafeSlow = function allocUnsafeSlow(size) {
            if (typeof Buffer2.allocUnsafeSlow === "function") {
              return Buffer2.allocUnsafeSlow(size);
            }
            if (typeof size !== "number") {
              throw new TypeError("size must be a number");
            }
            if (size >= MAX_LEN) {
              throw new RangeError("size is too large");
            }
            return new SlowBuffer(size);
          };
        }).call(exports2, function() {
          return this;
        }());
      }, function(module22, exports2, __webpack_require__) {
        (function(Buffer2) {
          function isArray(arg) {
            if (Array.isArray) {
              return Array.isArray(arg);
            }
            return objectToString(arg) === "[object Array]";
          }
          exports2.isArray = isArray;
          function isBoolean(arg) {
            return typeof arg === "boolean";
          }
          exports2.isBoolean = isBoolean;
          function isNull(arg) {
            return arg === null;
          }
          exports2.isNull = isNull;
          function isNullOrUndefined(arg) {
            return arg == null;
          }
          exports2.isNullOrUndefined = isNullOrUndefined;
          function isNumber(arg) {
            return typeof arg === "number";
          }
          exports2.isNumber = isNumber;
          function isString(arg) {
            return typeof arg === "string";
          }
          exports2.isString = isString;
          function isSymbol(arg) {
            return typeof arg === "symbol";
          }
          exports2.isSymbol = isSymbol;
          function isUndefined(arg) {
            return arg === void 0;
          }
          exports2.isUndefined = isUndefined;
          function isRegExp(re) {
            return objectToString(re) === "[object RegExp]";
          }
          exports2.isRegExp = isRegExp;
          function isObject(arg) {
            return typeof arg === "object" && arg !== null;
          }
          exports2.isObject = isObject;
          function isDate(d2) {
            return objectToString(d2) === "[object Date]";
          }
          exports2.isDate = isDate;
          function isError(e) {
            return objectToString(e) === "[object Error]" || e instanceof Error;
          }
          exports2.isError = isError;
          function isFunction(arg) {
            return typeof arg === "function";
          }
          exports2.isFunction = isFunction;
          function isPrimitive(arg) {
            return arg === null || typeof arg === "boolean" || typeof arg === "number" || typeof arg === "string" || typeof arg === "symbol" || typeof arg === "undefined";
          }
          exports2.isPrimitive = isPrimitive;
          exports2.isBuffer = Buffer2.isBuffer;
          function objectToString(o) {
            return Object.prototype.toString.call(o);
          }
        }).call(exports2, __webpack_require__(1));
      }, function(module22, exports2) {
      }, function(module22, exports2, __webpack_require__) {
        "use strict";
        var Buffer2 = __webpack_require__(2).Buffer;
        var bufferShim = __webpack_require__(17);
        module22.exports = BufferList;
        function BufferList() {
          this.head = null;
          this.tail = null;
          this.length = 0;
        }
        BufferList.prototype.push = function(v2) {
          var entry = { data: v2, next: null };
          if (this.length > 0)
            this.tail.next = entry;
          else
            this.head = entry;
          this.tail = entry;
          ++this.length;
        };
        BufferList.prototype.unshift = function(v2) {
          var entry = { data: v2, next: this.head };
          if (this.length === 0)
            this.tail = entry;
          this.head = entry;
          ++this.length;
        };
        BufferList.prototype.shift = function() {
          if (this.length === 0)
            return;
          var ret = this.head.data;
          if (this.length === 1)
            this.head = this.tail = null;
          else
            this.head = this.head.next;
          --this.length;
          return ret;
        };
        BufferList.prototype.clear = function() {
          this.head = this.tail = null;
          this.length = 0;
        };
        BufferList.prototype.join = function(s) {
          if (this.length === 0)
            return "";
          var p = this.head;
          var ret = "" + p.data;
          while (p = p.next) {
            ret += s + p.data;
          }
          return ret;
        };
        BufferList.prototype.concat = function(n) {
          if (this.length === 0)
            return bufferShim.alloc(0);
          if (this.length === 1)
            return this.head.data;
          var ret = bufferShim.allocUnsafe(n >>> 0);
          var p = this.head;
          var i = 0;
          while (p) {
            p.data.copy(ret, i);
            i += p.data.length;
            p = p.next;
          }
          return ret;
        };
      }, function(module22, exports2, __webpack_require__) {
        "use strict";
        var objectKeys = Object.keys || function(obj) {
          var keys2 = [];
          for (var key in obj) {
            keys2.push(key);
          }
          return keys2;
        };
        module22.exports = Duplex;
        var processNextTick = __webpack_require__(15);
        var util = __webpack_require__(18);
        util.inherits = __webpack_require__(12);
        var Readable = __webpack_require__(14);
        var Writable = __webpack_require__(22);
        util.inherits(Duplex, Readable);
        var keys = objectKeys(Writable.prototype);
        for (var v2 = 0; v2 < keys.length; v2++) {
          var method = keys[v2];
          if (!Duplex.prototype[method])
            Duplex.prototype[method] = Writable.prototype[method];
        }
        function Duplex(options) {
          if (!(this instanceof Duplex))
            return new Duplex(options);
          Readable.call(this, options);
          Writable.call(this, options);
          if (options && options.readable === false)
            this.readable = false;
          if (options && options.writable === false)
            this.writable = false;
          this.allowHalfOpen = true;
          if (options && options.allowHalfOpen === false)
            this.allowHalfOpen = false;
          this.once("end", onend);
        }
        function onend() {
          if (this.allowHalfOpen || this._writableState.ended)
            return;
          processNextTick(onEndNT, this);
        }
        function onEndNT(self2) {
          self2.end();
        }
        function forEach(xs, f) {
          for (var i = 0, l = xs.length; i < l; i++) {
            f(xs[i], i);
          }
        }
      }, function(module22, exports2, __webpack_require__) {
        (function(process2) {
          "use strict";
          module22.exports = Writable;
          var processNextTick = __webpack_require__(15);
          var asyncWrite = !process2.browser && ["v0.10", "v0.9."].indexOf(process2.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;
          var Duplex;
          Writable.WritableState = WritableState;
          var util = __webpack_require__(18);
          util.inherits = __webpack_require__(12);
          var internalUtil = { deprecate: __webpack_require__(23) };
          var Stream;
          (function() {
            try {
              Stream = __webpack_require__(11);
            } catch (_2) {
            } finally {
              if (!Stream)
                Stream = __webpack_require__(8).EventEmitter;
            }
          })();
          var Buffer2 = __webpack_require__(2).Buffer;
          var bufferShim = __webpack_require__(17);
          util.inherits(Writable, Stream);
          function nop() {
          }
          function WriteReq(chunk, encoding, cb) {
            this.chunk = chunk;
            this.encoding = encoding;
            this.callback = cb;
            this.next = null;
          }
          function WritableState(options, stream) {
            Duplex = Duplex || __webpack_require__(21);
            options = options || {};
            this.objectMode = !!options.objectMode;
            if (stream instanceof Duplex)
              this.objectMode = this.objectMode || !!options.writableObjectMode;
            var hwm = options.highWaterMark;
            var defaultHwm = this.objectMode ? 16 : 16 * 1024;
            this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;
            this.highWaterMark = ~~this.highWaterMark;
            this.needDrain = false;
            this.ending = false;
            this.ended = false;
            this.finished = false;
            var noDecode = options.decodeStrings === false;
            this.decodeStrings = !noDecode;
            this.defaultEncoding = options.defaultEncoding || "utf8";
            this.length = 0;
            this.writing = false;
            this.corked = 0;
            this.sync = true;
            this.bufferProcessing = false;
            this.onwrite = function(er) {
              onwrite(stream, er);
            };
            this.writecb = null;
            this.writelen = 0;
            this.bufferedRequest = null;
            this.lastBufferedRequest = null;
            this.pendingcb = 0;
            this.prefinished = false;
            this.errorEmitted = false;
            this.bufferedRequestCount = 0;
            this.corkedRequestsFree = new CorkedRequest(this);
          }
          WritableState.prototype.getBuffer = function getBuffer() {
            var current = this.bufferedRequest;
            var out = [];
            while (current) {
              out.push(current);
              current = current.next;
            }
            return out;
          };
          (function() {
            try {
              Object.defineProperty(WritableState.prototype, "buffer", { get: internalUtil.deprecate(function() {
                return this.getBuffer();
              }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.") });
            } catch (_2) {
            }
          })();
          var realHasInstance;
          if (typeof Symbol === "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === "function") {
            realHasInstance = Function.prototype[Symbol.hasInstance];
            Object.defineProperty(Writable, Symbol.hasInstance, { value: function(object) {
              if (realHasInstance.call(this, object))
                return true;
              return object && object._writableState instanceof WritableState;
            } });
          } else {
            realHasInstance = function(object) {
              return object instanceof this;
            };
          }
          function Writable(options) {
            Duplex = Duplex || __webpack_require__(21);
            if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
              return new Writable(options);
            }
            this._writableState = new WritableState(options, this);
            this.writable = true;
            if (options) {
              if (typeof options.write === "function")
                this._write = options.write;
              if (typeof options.writev === "function")
                this._writev = options.writev;
            }
            Stream.call(this);
          }
          Writable.prototype.pipe = function() {
            this.emit("error", new Error("Cannot pipe, not readable"));
          };
          function writeAfterEnd(stream, cb) {
            var er = new Error("write after end");
            stream.emit("error", er);
            processNextTick(cb, er);
          }
          function validChunk(stream, state5, chunk, cb) {
            var valid = true;
            var er = false;
            if (chunk === null) {
              er = new TypeError("May not write null values to stream");
            } else if (typeof chunk !== "string" && chunk !== void 0 && !state5.objectMode) {
              er = new TypeError("Invalid non-string/buffer chunk");
            }
            if (er) {
              stream.emit("error", er);
              processNextTick(cb, er);
              valid = false;
            }
            return valid;
          }
          Writable.prototype.write = function(chunk, encoding, cb) {
            var state5 = this._writableState;
            var ret = false;
            var isBuf = Buffer2.isBuffer(chunk);
            if (typeof encoding === "function") {
              cb = encoding;
              encoding = null;
            }
            if (isBuf)
              encoding = "buffer";
            else if (!encoding)
              encoding = state5.defaultEncoding;
            if (typeof cb !== "function")
              cb = nop;
            if (state5.ended)
              writeAfterEnd(this, cb);
            else if (isBuf || validChunk(this, state5, chunk, cb)) {
              state5.pendingcb++;
              ret = writeOrBuffer(this, state5, isBuf, chunk, encoding, cb);
            }
            return ret;
          };
          Writable.prototype.cork = function() {
            var state5 = this._writableState;
            state5.corked++;
          };
          Writable.prototype.uncork = function() {
            var state5 = this._writableState;
            if (state5.corked) {
              state5.corked--;
              if (!state5.writing && !state5.corked && !state5.finished && !state5.bufferProcessing && state5.bufferedRequest)
                clearBuffer(this, state5);
            }
          };
          Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
            if (typeof encoding === "string")
              encoding = encoding.toLowerCase();
            if (!(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((encoding + "").toLowerCase()) > -1))
              throw new TypeError("Unknown encoding: " + encoding);
            this._writableState.defaultEncoding = encoding;
            return this;
          };
          function decodeChunk(state5, chunk, encoding) {
            if (!state5.objectMode && state5.decodeStrings !== false && typeof chunk === "string") {
              chunk = bufferShim.from(chunk, encoding);
            }
            return chunk;
          }
          function writeOrBuffer(stream, state5, isBuf, chunk, encoding, cb) {
            if (!isBuf) {
              chunk = decodeChunk(state5, chunk, encoding);
              if (Buffer2.isBuffer(chunk))
                encoding = "buffer";
            }
            var len = state5.objectMode ? 1 : chunk.length;
            state5.length += len;
            var ret = state5.length < state5.highWaterMark;
            if (!ret)
              state5.needDrain = true;
            if (state5.writing || state5.corked) {
              var last = state5.lastBufferedRequest;
              state5.lastBufferedRequest = new WriteReq(chunk, encoding, cb);
              if (last) {
                last.next = state5.lastBufferedRequest;
              } else {
                state5.bufferedRequest = state5.lastBufferedRequest;
              }
              state5.bufferedRequestCount += 1;
            } else {
              doWrite(stream, state5, false, len, chunk, encoding, cb);
            }
            return ret;
          }
          function doWrite(stream, state5, writev, len, chunk, encoding, cb) {
            state5.writelen = len;
            state5.writecb = cb;
            state5.writing = true;
            state5.sync = true;
            if (writev)
              stream._writev(chunk, state5.onwrite);
            else
              stream._write(chunk, encoding, state5.onwrite);
            state5.sync = false;
          }
          function onwriteError(stream, state5, sync, er, cb) {
            --state5.pendingcb;
            if (sync)
              processNextTick(cb, er);
            else
              cb(er);
            stream._writableState.errorEmitted = true;
            stream.emit("error", er);
          }
          function onwriteStateUpdate(state5) {
            state5.writing = false;
            state5.writecb = null;
            state5.length -= state5.writelen;
            state5.writelen = 0;
          }
          function onwrite(stream, er) {
            var state5 = stream._writableState;
            var sync = state5.sync;
            var cb = state5.writecb;
            onwriteStateUpdate(state5);
            if (er)
              onwriteError(stream, state5, sync, er, cb);
            else {
              var finished = needFinish(state5);
              if (!finished && !state5.corked && !state5.bufferProcessing && state5.bufferedRequest) {
                clearBuffer(stream, state5);
              }
              if (sync) {
                asyncWrite(afterWrite, stream, state5, finished, cb);
              } else {
                afterWrite(stream, state5, finished, cb);
              }
            }
          }
          function afterWrite(stream, state5, finished, cb) {
            if (!finished)
              onwriteDrain(stream, state5);
            state5.pendingcb--;
            cb();
            finishMaybe(stream, state5);
          }
          function onwriteDrain(stream, state5) {
            if (state5.length === 0 && state5.needDrain) {
              state5.needDrain = false;
              stream.emit("drain");
            }
          }
          function clearBuffer(stream, state5) {
            state5.bufferProcessing = true;
            var entry = state5.bufferedRequest;
            if (stream._writev && entry && entry.next) {
              var l = state5.bufferedRequestCount;
              var buffer = new Array(l);
              var holder = state5.corkedRequestsFree;
              holder.entry = entry;
              var count = 0;
              while (entry) {
                buffer[count] = entry;
                entry = entry.next;
                count += 1;
              }
              doWrite(stream, state5, true, state5.length, buffer, "", holder.finish);
              state5.pendingcb++;
              state5.lastBufferedRequest = null;
              if (holder.next) {
                state5.corkedRequestsFree = holder.next;
                holder.next = null;
              } else {
                state5.corkedRequestsFree = new CorkedRequest(state5);
              }
            } else {
              while (entry) {
                var chunk = entry.chunk;
                var encoding = entry.encoding;
                var cb = entry.callback;
                var len = state5.objectMode ? 1 : chunk.length;
                doWrite(stream, state5, false, len, chunk, encoding, cb);
                entry = entry.next;
                if (state5.writing) {
                  break;
                }
              }
              if (entry === null)
                state5.lastBufferedRequest = null;
            }
            state5.bufferedRequestCount = 0;
            state5.bufferedRequest = entry;
            state5.bufferProcessing = false;
          }
          Writable.prototype._write = function(chunk, encoding, cb) {
            cb(new Error("_write() is not implemented"));
          };
          Writable.prototype._writev = null;
          Writable.prototype.end = function(chunk, encoding, cb) {
            var state5 = this._writableState;
            if (typeof chunk === "function") {
              cb = chunk;
              chunk = null;
              encoding = null;
            } else if (typeof encoding === "function") {
              cb = encoding;
              encoding = null;
            }
            if (chunk !== null && chunk !== void 0)
              this.write(chunk, encoding);
            if (state5.corked) {
              state5.corked = 1;
              this.uncork();
            }
            if (!state5.ending && !state5.finished)
              endWritable(this, state5, cb);
          };
          function needFinish(state5) {
            return state5.ending && state5.length === 0 && state5.bufferedRequest === null && !state5.finished && !state5.writing;
          }
          function prefinish(stream, state5) {
            if (!state5.prefinished) {
              state5.prefinished = true;
              stream.emit("prefinish");
            }
          }
          function finishMaybe(stream, state5) {
            var need = needFinish(state5);
            if (need) {
              if (state5.pendingcb === 0) {
                prefinish(stream, state5);
                state5.finished = true;
                stream.emit("finish");
              } else {
                prefinish(stream, state5);
              }
            }
            return need;
          }
          function endWritable(stream, state5, cb) {
            state5.ending = true;
            finishMaybe(stream, state5);
            if (cb) {
              if (state5.finished)
                processNextTick(cb);
              else
                stream.once("finish", cb);
            }
            state5.ended = true;
            stream.writable = false;
          }
          function CorkedRequest(state5) {
            var _this = this;
            this.next = null;
            this.entry = null;
            this.finish = function(err) {
              var entry = _this.entry;
              _this.entry = null;
              while (entry) {
                var cb = entry.callback;
                state5.pendingcb--;
                cb(err);
                entry = entry.next;
              }
              if (state5.corkedRequestsFree) {
                state5.corkedRequestsFree.next = _this;
              } else {
                state5.corkedRequestsFree = _this;
              }
            };
          }
        }).call(exports2, __webpack_require__(6));
      }, function(module22, exports2) {
        (function(global2) {
          module22.exports = deprecate;
          function deprecate(fn, msg) {
            if (config("noDeprecation")) {
              return fn;
            }
            var warned = false;
            function deprecated() {
              if (!warned) {
                if (config("throwDeprecation")) {
                  throw new Error(msg);
                } else if (config("traceDeprecation")) {
                  console.trace(msg);
                } else {
                  console.warn(msg);
                }
                warned = true;
              }
              return fn.apply(this, arguments);
            }
            return deprecated;
          }
          function config(name3) {
            try {
              if (!global2.localStorage)
                return false;
            } catch (_2) {
              return false;
            }
            var val = global2.localStorage[name3];
            if (null == val)
              return false;
            return String(val).toLowerCase() === "true";
          }
        }).call(exports2, function() {
          return this;
        }());
      }, function(module22, exports2, __webpack_require__) {
        var Buffer2 = __webpack_require__(2).Buffer;
        var isBufferEncoding = Buffer2.isEncoding || function(encoding) {
          switch (encoding && encoding.toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
            case "raw":
              return true;
            default:
              return false;
          }
        };
        function assertEncoding(encoding) {
          if (encoding && !isBufferEncoding(encoding)) {
            throw new Error("Unknown encoding: " + encoding);
          }
        }
        var StringDecoder = exports2.StringDecoder = function(encoding) {
          this.encoding = (encoding || "utf8").toLowerCase().replace(/[-_]/, "");
          assertEncoding(encoding);
          switch (this.encoding) {
            case "utf8":
              this.surrogateSize = 3;
              break;
            case "ucs2":
            case "utf16le":
              this.surrogateSize = 2;
              this.detectIncompleteChar = utf16DetectIncompleteChar;
              break;
            case "base64":
              this.surrogateSize = 3;
              this.detectIncompleteChar = base64DetectIncompleteChar;
              break;
            default:
              this.write = passThroughWrite;
              return;
          }
          this.charBuffer = new Buffer2(6);
          this.charReceived = 0;
          this.charLength = 0;
        };
        StringDecoder.prototype.write = function(buffer) {
          var charStr = "";
          while (this.charLength) {
            var available = buffer.length >= this.charLength - this.charReceived ? this.charLength - this.charReceived : buffer.length;
            buffer.copy(this.charBuffer, this.charReceived, 0, available);
            this.charReceived += available;
            if (this.charReceived < this.charLength) {
              return "";
            }
            buffer = buffer.slice(available, buffer.length);
            charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);
            var charCode = charStr.charCodeAt(charStr.length - 1);
            if (charCode >= 55296 && charCode <= 56319) {
              this.charLength += this.surrogateSize;
              charStr = "";
              continue;
            }
            this.charReceived = this.charLength = 0;
            if (buffer.length === 0) {
              return charStr;
            }
            break;
          }
          this.detectIncompleteChar(buffer);
          var end = buffer.length;
          if (this.charLength) {
            buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
            end -= this.charReceived;
          }
          charStr += buffer.toString(this.encoding, 0, end);
          var end = charStr.length - 1;
          var charCode = charStr.charCodeAt(end);
          if (charCode >= 55296 && charCode <= 56319) {
            var size = this.surrogateSize;
            this.charLength += size;
            this.charReceived += size;
            this.charBuffer.copy(this.charBuffer, size, 0, size);
            buffer.copy(this.charBuffer, 0, 0, size);
            return charStr.substring(0, end);
          }
          return charStr;
        };
        StringDecoder.prototype.detectIncompleteChar = function(buffer) {
          var i = buffer.length >= 3 ? 3 : buffer.length;
          for (; i > 0; i--) {
            var c = buffer[buffer.length - i];
            if (i == 1 && c >> 5 == 6) {
              this.charLength = 2;
              break;
            }
            if (i <= 2 && c >> 4 == 14) {
              this.charLength = 3;
              break;
            }
            if (i <= 3 && c >> 3 == 30) {
              this.charLength = 4;
              break;
            }
          }
          this.charReceived = i;
        };
        StringDecoder.prototype.end = function(buffer) {
          var res = "";
          if (buffer && buffer.length)
            res = this.write(buffer);
          if (this.charReceived) {
            var cr = this.charReceived;
            var buf = this.charBuffer;
            var enc = this.encoding;
            res += buf.slice(0, cr).toString(enc);
          }
          return res;
        };
        function passThroughWrite(buffer) {
          return buffer.toString(this.encoding);
        }
        function utf16DetectIncompleteChar(buffer) {
          this.charReceived = buffer.length % 2;
          this.charLength = this.charReceived ? 2 : 0;
        }
        function base64DetectIncompleteChar(buffer) {
          this.charReceived = buffer.length % 3;
          this.charLength = this.charReceived ? 3 : 0;
        }
      }, function(module22, exports2, __webpack_require__) {
        "use strict";
        module22.exports = Transform;
        var Duplex = __webpack_require__(21);
        var util = __webpack_require__(18);
        util.inherits = __webpack_require__(12);
        util.inherits(Transform, Duplex);
        function TransformState(stream) {
          this.afterTransform = function(er, data) {
            return afterTransform(stream, er, data);
          };
          this.needTransform = false;
          this.transforming = false;
          this.writecb = null;
          this.writechunk = null;
          this.writeencoding = null;
        }
        function afterTransform(stream, er, data) {
          var ts = stream._transformState;
          ts.transforming = false;
          var cb = ts.writecb;
          if (!cb)
            return stream.emit("error", new Error("no writecb in Transform class"));
          ts.writechunk = null;
          ts.writecb = null;
          if (data !== null && data !== void 0)
            stream.push(data);
          cb(er);
          var rs = stream._readableState;
          rs.reading = false;
          if (rs.needReadable || rs.length < rs.highWaterMark) {
            stream._read(rs.highWaterMark);
          }
        }
        function Transform(options) {
          if (!(this instanceof Transform))
            return new Transform(options);
          Duplex.call(this, options);
          this._transformState = new TransformState(this);
          var stream = this;
          this._readableState.needReadable = true;
          this._readableState.sync = false;
          if (options) {
            if (typeof options.transform === "function")
              this._transform = options.transform;
            if (typeof options.flush === "function")
              this._flush = options.flush;
          }
          this.once("prefinish", function() {
            if (typeof this._flush === "function")
              this._flush(function(er, data) {
                done(stream, er, data);
              });
            else
              done(stream);
          });
        }
        Transform.prototype.push = function(chunk, encoding) {
          this._transformState.needTransform = false;
          return Duplex.prototype.push.call(this, chunk, encoding);
        };
        Transform.prototype._transform = function(chunk, encoding, cb) {
          throw new Error("_transform() is not implemented");
        };
        Transform.prototype._write = function(chunk, encoding, cb) {
          var ts = this._transformState;
          ts.writecb = cb;
          ts.writechunk = chunk;
          ts.writeencoding = encoding;
          if (!ts.transforming) {
            var rs = this._readableState;
            if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark)
              this._read(rs.highWaterMark);
          }
        };
        Transform.prototype._read = function(n) {
          var ts = this._transformState;
          if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
            ts.transforming = true;
            this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
          } else {
            ts.needTransform = true;
          }
        };
        function done(stream, er, data) {
          if (er)
            return stream.emit("error", er);
          if (data !== null && data !== void 0)
            stream.push(data);
          var ws = stream._writableState;
          var ts = stream._transformState;
          if (ws.length)
            throw new Error("Calling transform done when ws.length != 0");
          if (ts.transforming)
            throw new Error("Calling transform done when still transforming");
          return stream.push(null);
        }
      }, function(module22, exports2, __webpack_require__) {
        "use strict";
        module22.exports = PassThrough;
        var Transform = __webpack_require__(25);
        var util = __webpack_require__(18);
        util.inherits = __webpack_require__(12);
        util.inherits(PassThrough, Transform);
        function PassThrough(options) {
          if (!(this instanceof PassThrough))
            return new PassThrough(options);
          Transform.call(this, options);
        }
        PassThrough.prototype._transform = function(chunk, encoding, cb) {
          cb(null, chunk);
        };
      }, function(module22, exports2, __webpack_require__) {
        module22.exports = __webpack_require__(22);
      }, function(module22, exports2, __webpack_require__) {
        module22.exports = __webpack_require__(21);
      }, function(module22, exports2, __webpack_require__) {
        module22.exports = __webpack_require__(25);
      }, function(module22, exports2, __webpack_require__) {
        module22.exports = __webpack_require__(26);
      }, function(module22, exports2, __webpack_require__) {
        "use strict";
        var zlib_inflate = __webpack_require__(32);
        var utils = __webpack_require__(33);
        var strings = __webpack_require__(38);
        var c = __webpack_require__(39);
        var msg = __webpack_require__(40);
        var ZStream = __webpack_require__(41);
        var GZheader = __webpack_require__(42);
        var toString = Object.prototype.toString;
        function Inflate(options) {
          if (!(this instanceof Inflate))
            return new Inflate(options);
          this.options = utils.assign({ chunkSize: 16384, windowBits: 0, to: "" }, options || {});
          var opt = this.options;
          if (opt.raw && opt.windowBits >= 0 && opt.windowBits < 16) {
            opt.windowBits = -opt.windowBits;
            if (opt.windowBits === 0) {
              opt.windowBits = -15;
            }
          }
          if (opt.windowBits >= 0 && opt.windowBits < 16 && !(options && options.windowBits)) {
            opt.windowBits += 32;
          }
          if (opt.windowBits > 15 && opt.windowBits < 48) {
            if ((opt.windowBits & 15) === 0) {
              opt.windowBits |= 15;
            }
          }
          this.err = 0;
          this.msg = "";
          this.ended = false;
          this.chunks = [];
          this.strm = new ZStream();
          this.strm.avail_out = 0;
          var status = zlib_inflate.inflateInit2(this.strm, opt.windowBits);
          if (status !== c.Z_OK) {
            throw new Error(msg[status]);
          }
          this.header = new GZheader();
          zlib_inflate.inflateGetHeader(this.strm, this.header);
        }
        Inflate.prototype.push = function(data, mode) {
          var strm = this.strm;
          var chunkSize = this.options.chunkSize;
          var dictionary = this.options.dictionary;
          var status, _mode;
          var next_out_utf8, tail, utf8str;
          var dict;
          var allowBufError = false;
          if (this.ended) {
            return false;
          }
          _mode = mode === ~~mode ? mode : mode === true ? c.Z_FINISH : c.Z_NO_FLUSH;
          if (typeof data === "string") {
            strm.input = strings.binstring2buf(data);
          } else if (toString.call(data) === "[object ArrayBuffer]") {
            strm.input = new Uint8Array(data);
          } else {
            strm.input = data;
          }
          strm.next_in = 0;
          strm.avail_in = strm.input.length;
          do {
            if (strm.avail_out === 0) {
              strm.output = new utils.Buf8(chunkSize);
              strm.next_out = 0;
              strm.avail_out = chunkSize;
            }
            status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);
            if (status === c.Z_NEED_DICT && dictionary) {
              if (typeof dictionary === "string") {
                dict = strings.string2buf(dictionary);
              } else if (toString.call(dictionary) === "[object ArrayBuffer]") {
                dict = new Uint8Array(dictionary);
              } else {
                dict = dictionary;
              }
              status = zlib_inflate.inflateSetDictionary(this.strm, dict);
            }
            if (status === c.Z_BUF_ERROR && allowBufError === true) {
              status = c.Z_OK;
              allowBufError = false;
            }
            if (status !== c.Z_STREAM_END && status !== c.Z_OK) {
              this.onEnd(status);
              this.ended = true;
              return false;
            }
            if (strm.next_out) {
              if (strm.avail_out === 0 || status === c.Z_STREAM_END || strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH)) {
                if (this.options.to === "string") {
                  next_out_utf8 = strings.utf8border(strm.output, strm.next_out);
                  tail = strm.next_out - next_out_utf8;
                  utf8str = strings.buf2string(strm.output, next_out_utf8);
                  strm.next_out = tail;
                  strm.avail_out = chunkSize - tail;
                  if (tail) {
                    utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0);
                  }
                  this.onData(utf8str);
                } else {
                  this.onData(utils.shrinkBuf(strm.output, strm.next_out));
                }
              }
            }
            if (strm.avail_in === 0 && strm.avail_out === 0) {
              allowBufError = true;
            }
          } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);
          if (status === c.Z_STREAM_END) {
            _mode = c.Z_FINISH;
          }
          if (_mode === c.Z_FINISH) {
            status = zlib_inflate.inflateEnd(this.strm);
            this.onEnd(status);
            this.ended = true;
            return status === c.Z_OK;
          }
          if (_mode === c.Z_SYNC_FLUSH) {
            this.onEnd(c.Z_OK);
            strm.avail_out = 0;
            return true;
          }
          return true;
        };
        Inflate.prototype.onData = function(chunk) {
          this.chunks.push(chunk);
        };
        Inflate.prototype.onEnd = function(status) {
          if (status === c.Z_OK) {
            if (this.options.to === "string") {
              this.result = this.chunks.join("");
            } else {
              this.result = utils.flattenChunks(this.chunks);
            }
          }
          this.chunks = [];
          this.err = status;
          this.msg = this.strm.msg;
        };
        function inflate(input, options) {
          var inflator = new Inflate(options);
          inflator.push(input, true);
          if (inflator.err) {
            throw inflator.msg || msg[inflator.err];
          }
          return inflator.result;
        }
        function inflateRaw(input, options) {
          options = options || {};
          options.raw = true;
          return inflate(input, options);
        }
        exports2.Inflate = Inflate;
        exports2.inflate = inflate;
        exports2.inflateRaw = inflateRaw;
        exports2.ungzip = inflate;
      }, function(module22, exports2, __webpack_require__) {
        "use strict";
        var utils = __webpack_require__(33);
        var adler32 = __webpack_require__(34);
        var crc32 = __webpack_require__(35);
        var inflate_fast = __webpack_require__(36);
        var inflate_table = __webpack_require__(37);
        var CODES = 0;
        var LENS = 1;
        var DISTS = 2;
        var Z_FINISH = 4;
        var Z_BLOCK = 5;
        var Z_TREES = 6;
        var Z_OK = 0;
        var Z_STREAM_END = 1;
        var Z_NEED_DICT = 2;
        var Z_STREAM_ERROR = -2;
        var Z_DATA_ERROR = -3;
        var Z_MEM_ERROR = -4;
        var Z_BUF_ERROR = -5;
        var Z_DEFLATED = 8;
        var HEAD = 1;
        var FLAGS = 2;
        var TIME = 3;
        var OS = 4;
        var EXLEN = 5;
        var EXTRA = 6;
        var NAME = 7;
        var COMMENT = 8;
        var HCRC = 9;
        var DICTID = 10;
        var DICT = 11;
        var TYPE = 12;
        var TYPEDO = 13;
        var STORED = 14;
        var COPY_ = 15;
        var COPY = 16;
        var TABLE = 17;
        var LENLENS = 18;
        var CODELENS = 19;
        var LEN_ = 20;
        var LEN = 21;
        var LENEXT = 22;
        var DIST = 23;
        var DISTEXT = 24;
        var MATCH = 25;
        var LIT = 26;
        var CHECK = 27;
        var LENGTH = 28;
        var DONE = 29;
        var BAD = 30;
        var MEM = 31;
        var SYNC = 32;
        var ENOUGH_LENS = 852;
        var ENOUGH_DISTS = 592;
        var MAX_WBITS = 15;
        var DEF_WBITS = MAX_WBITS;
        function zswap32(q) {
          return (q >>> 24 & 255) + (q >>> 8 & 65280) + ((q & 65280) << 8) + ((q & 255) << 24);
        }
        function InflateState() {
          this.mode = 0;
          this.last = false;
          this.wrap = 0;
          this.havedict = false;
          this.flags = 0;
          this.dmax = 0;
          this.check = 0;
          this.total = 0;
          this.head = null;
          this.wbits = 0;
          this.wsize = 0;
          this.whave = 0;
          this.wnext = 0;
          this.window = null;
          this.hold = 0;
          this.bits = 0;
          this.length = 0;
          this.offset = 0;
          this.extra = 0;
          this.lencode = null;
          this.distcode = null;
          this.lenbits = 0;
          this.distbits = 0;
          this.ncode = 0;
          this.nlen = 0;
          this.ndist = 0;
          this.have = 0;
          this.next = null;
          this.lens = new utils.Buf16(320);
          this.work = new utils.Buf16(288);
          this.lendyn = null;
          this.distdyn = null;
          this.sane = 0;
          this.back = 0;
          this.was = 0;
        }
        function inflateResetKeep(strm) {
          var state5;
          if (!strm || !strm.state) {
            return Z_STREAM_ERROR;
          }
          state5 = strm.state;
          strm.total_in = strm.total_out = state5.total = 0;
          strm.msg = "";
          if (state5.wrap) {
            strm.adler = state5.wrap & 1;
          }
          state5.mode = HEAD;
          state5.last = 0;
          state5.havedict = 0;
          state5.dmax = 32768;
          state5.head = null;
          state5.hold = 0;
          state5.bits = 0;
          state5.lencode = state5.lendyn = new utils.Buf32(ENOUGH_LENS);
          state5.distcode = state5.distdyn = new utils.Buf32(ENOUGH_DISTS);
          state5.sane = 1;
          state5.back = -1;
          return Z_OK;
        }
        function inflateReset(strm) {
          var state5;
          if (!strm || !strm.state) {
            return Z_STREAM_ERROR;
          }
          state5 = strm.state;
          state5.wsize = 0;
          state5.whave = 0;
          state5.wnext = 0;
          return inflateResetKeep(strm);
        }
        function inflateReset2(strm, windowBits) {
          var wrap;
          var state5;
          if (!strm || !strm.state) {
            return Z_STREAM_ERROR;
          }
          state5 = strm.state;
          if (windowBits < 0) {
            wrap = 0;
            windowBits = -windowBits;
          } else {
            wrap = (windowBits >> 4) + 1;
            if (windowBits < 48) {
              windowBits &= 15;
            }
          }
          if (windowBits && (windowBits < 8 || windowBits > 15)) {
            return Z_STREAM_ERROR;
          }
          if (state5.window !== null && state5.wbits !== windowBits) {
            state5.window = null;
          }
          state5.wrap = wrap;
          state5.wbits = windowBits;
          return inflateReset(strm);
        }
        function inflateInit2(strm, windowBits) {
          var ret;
          var state5;
          if (!strm) {
            return Z_STREAM_ERROR;
          }
          state5 = new InflateState();
          strm.state = state5;
          state5.window = null;
          ret = inflateReset2(strm, windowBits);
          if (ret !== Z_OK) {
            strm.state = null;
          }
          return ret;
        }
        function inflateInit(strm) {
          return inflateInit2(strm, DEF_WBITS);
        }
        var virgin = true;
        var lenfix, distfix;
        function fixedtables(state5) {
          if (virgin) {
            var sym;
            lenfix = new utils.Buf32(512);
            distfix = new utils.Buf32(32);
            sym = 0;
            while (sym < 144) {
              state5.lens[sym++] = 8;
            }
            while (sym < 256) {
              state5.lens[sym++] = 9;
            }
            while (sym < 280) {
              state5.lens[sym++] = 7;
            }
            while (sym < 288) {
              state5.lens[sym++] = 8;
            }
            inflate_table(LENS, state5.lens, 0, 288, lenfix, 0, state5.work, { bits: 9 });
            sym = 0;
            while (sym < 32) {
              state5.lens[sym++] = 5;
            }
            inflate_table(DISTS, state5.lens, 0, 32, distfix, 0, state5.work, { bits: 5 });
            virgin = false;
          }
          state5.lencode = lenfix;
          state5.lenbits = 9;
          state5.distcode = distfix;
          state5.distbits = 5;
        }
        function updatewindow(strm, src, end, copy) {
          var dist;
          var state5 = strm.state;
          if (state5.window === null) {
            state5.wsize = 1 << state5.wbits;
            state5.wnext = 0;
            state5.whave = 0;
            state5.window = new utils.Buf8(state5.wsize);
          }
          if (copy >= state5.wsize) {
            utils.arraySet(state5.window, src, end - state5.wsize, state5.wsize, 0);
            state5.wnext = 0;
            state5.whave = state5.wsize;
          } else {
            dist = state5.wsize - state5.wnext;
            if (dist > copy) {
              dist = copy;
            }
            utils.arraySet(state5.window, src, end - copy, dist, state5.wnext);
            copy -= dist;
            if (copy) {
              utils.arraySet(state5.window, src, end - copy, copy, 0);
              state5.wnext = copy;
              state5.whave = state5.wsize;
            } else {
              state5.wnext += dist;
              if (state5.wnext === state5.wsize) {
                state5.wnext = 0;
              }
              if (state5.whave < state5.wsize) {
                state5.whave += dist;
              }
            }
          }
          return 0;
        }
        function inflate(strm, flush) {
          var state5;
          var input, output;
          var next;
          var put;
          var have, left;
          var hold;
          var bits;
          var _in, _out;
          var copy;
          var from;
          var from_source;
          var here = 0;
          var here_bits, here_op, here_val;
          var last_bits, last_op, last_val;
          var len;
          var ret;
          var hbuf = new utils.Buf8(4);
          var opts;
          var n;
          var order = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
          if (!strm || !strm.state || !strm.output || !strm.input && strm.avail_in !== 0) {
            return Z_STREAM_ERROR;
          }
          state5 = strm.state;
          if (state5.mode === TYPE) {
            state5.mode = TYPEDO;
          }
          put = strm.next_out;
          output = strm.output;
          left = strm.avail_out;
          next = strm.next_in;
          input = strm.input;
          have = strm.avail_in;
          hold = state5.hold;
          bits = state5.bits;
          _in = have;
          _out = left;
          ret = Z_OK;
          inf_leave:
            for (; ; ) {
              switch (state5.mode) {
                case HEAD:
                  if (state5.wrap === 0) {
                    state5.mode = TYPEDO;
                    break;
                  }
                  while (bits < 16) {
                    if (have === 0) {
                      break inf_leave;
                    }
                    have--;
                    hold += input[next++] << bits;
                    bits += 8;
                  }
                  if (state5.wrap & 2 && hold === 35615) {
                    state5.check = 0;
                    hbuf[0] = hold & 255;
                    hbuf[1] = hold >>> 8 & 255;
                    state5.check = crc32(state5.check, hbuf, 2, 0);
                    hold = 0;
                    bits = 0;
                    state5.mode = FLAGS;
                    break;
                  }
                  state5.flags = 0;
                  if (state5.head) {
                    state5.head.done = false;
                  }
                  if (!(state5.wrap & 1) || (((hold & 255) << 8) + (hold >> 8)) % 31) {
                    strm.msg = "incorrect header check";
                    state5.mode = BAD;
                    break;
                  }
                  if ((hold & 15) !== Z_DEFLATED) {
                    strm.msg = "unknown compression method";
                    state5.mode = BAD;
                    break;
                  }
                  hold >>>= 4;
                  bits -= 4;
                  len = (hold & 15) + 8;
                  if (state5.wbits === 0) {
                    state5.wbits = len;
                  } else if (len > state5.wbits) {
                    strm.msg = "invalid window size";
                    state5.mode = BAD;
                    break;
                  }
                  state5.dmax = 1 << len;
                  strm.adler = state5.check = 1;
                  state5.mode = hold & 512 ? DICTID : TYPE;
                  hold = 0;
                  bits = 0;
                  break;
                case FLAGS:
                  while (bits < 16) {
                    if (have === 0) {
                      break inf_leave;
                    }
                    have--;
                    hold += input[next++] << bits;
                    bits += 8;
                  }
                  state5.flags = hold;
                  if ((state5.flags & 255) !== Z_DEFLATED) {
                    strm.msg = "unknown compression method";
                    state5.mode = BAD;
                    break;
                  }
                  if (state5.flags & 57344) {
                    strm.msg = "unknown header flags set";
                    state5.mode = BAD;
                    break;
                  }
                  if (state5.head) {
                    state5.head.text = hold >> 8 & 1;
                  }
                  if (state5.flags & 512) {
                    hbuf[0] = hold & 255;
                    hbuf[1] = hold >>> 8 & 255;
                    state5.check = crc32(state5.check, hbuf, 2, 0);
                  }
                  hold = 0;
                  bits = 0;
                  state5.mode = TIME;
                case TIME:
                  while (bits < 32) {
                    if (have === 0) {
                      break inf_leave;
                    }
                    have--;
                    hold += input[next++] << bits;
                    bits += 8;
                  }
                  if (state5.head) {
                    state5.head.time = hold;
                  }
                  if (state5.flags & 512) {
                    hbuf[0] = hold & 255;
                    hbuf[1] = hold >>> 8 & 255;
                    hbuf[2] = hold >>> 16 & 255;
                    hbuf[3] = hold >>> 24 & 255;
                    state5.check = crc32(state5.check, hbuf, 4, 0);
                  }
                  hold = 0;
                  bits = 0;
                  state5.mode = OS;
                case OS:
                  while (bits < 16) {
                    if (have === 0) {
                      break inf_leave;
                    }
                    have--;
                    hold += input[next++] << bits;
                    bits += 8;
                  }
                  if (state5.head) {
                    state5.head.xflags = hold & 255;
                    state5.head.os = hold >> 8;
                  }
                  if (state5.flags & 512) {
                    hbuf[0] = hold & 255;
                    hbuf[1] = hold >>> 8 & 255;
                    state5.check = crc32(state5.check, hbuf, 2, 0);
                  }
                  hold = 0;
                  bits = 0;
                  state5.mode = EXLEN;
                case EXLEN:
                  if (state5.flags & 1024) {
                    while (bits < 16) {
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                    }
                    state5.length = hold;
                    if (state5.head) {
                      state5.head.extra_len = hold;
                    }
                    if (state5.flags & 512) {
                      hbuf[0] = hold & 255;
                      hbuf[1] = hold >>> 8 & 255;
                      state5.check = crc32(state5.check, hbuf, 2, 0);
                    }
                    hold = 0;
                    bits = 0;
                  } else if (state5.head) {
                    state5.head.extra = null;
                  }
                  state5.mode = EXTRA;
                case EXTRA:
                  if (state5.flags & 1024) {
                    copy = state5.length;
                    if (copy > have) {
                      copy = have;
                    }
                    if (copy) {
                      if (state5.head) {
                        len = state5.head.extra_len - state5.length;
                        if (!state5.head.extra) {
                          state5.head.extra = new Array(state5.head.extra_len);
                        }
                        utils.arraySet(state5.head.extra, input, next, copy, len);
                      }
                      if (state5.flags & 512) {
                        state5.check = crc32(state5.check, input, copy, next);
                      }
                      have -= copy;
                      next += copy;
                      state5.length -= copy;
                    }
                    if (state5.length) {
                      break inf_leave;
                    }
                  }
                  state5.length = 0;
                  state5.mode = NAME;
                case NAME:
                  if (state5.flags & 2048) {
                    if (have === 0) {
                      break inf_leave;
                    }
                    copy = 0;
                    do {
                      len = input[next + copy++];
                      if (state5.head && len && state5.length < 65536) {
                        state5.head.name += String.fromCharCode(len);
                      }
                    } while (len && copy < have);
                    if (state5.flags & 512) {
                      state5.check = crc32(state5.check, input, copy, next);
                    }
                    have -= copy;
                    next += copy;
                    if (len) {
                      break inf_leave;
                    }
                  } else if (state5.head) {
                    state5.head.name = null;
                  }
                  state5.length = 0;
                  state5.mode = COMMENT;
                case COMMENT:
                  if (state5.flags & 4096) {
                    if (have === 0) {
                      break inf_leave;
                    }
                    copy = 0;
                    do {
                      len = input[next + copy++];
                      if (state5.head && len && state5.length < 65536) {
                        state5.head.comment += String.fromCharCode(len);
                      }
                    } while (len && copy < have);
                    if (state5.flags & 512) {
                      state5.check = crc32(state5.check, input, copy, next);
                    }
                    have -= copy;
                    next += copy;
                    if (len) {
                      break inf_leave;
                    }
                  } else if (state5.head) {
                    state5.head.comment = null;
                  }
                  state5.mode = HCRC;
                case HCRC:
                  if (state5.flags & 512) {
                    while (bits < 16) {
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                    }
                    if (hold !== (state5.check & 65535)) {
                      strm.msg = "header crc mismatch";
                      state5.mode = BAD;
                      break;
                    }
                    hold = 0;
                    bits = 0;
                  }
                  if (state5.head) {
                    state5.head.hcrc = state5.flags >> 9 & 1;
                    state5.head.done = true;
                  }
                  strm.adler = state5.check = 0;
                  state5.mode = TYPE;
                  break;
                case DICTID:
                  while (bits < 32) {
                    if (have === 0) {
                      break inf_leave;
                    }
                    have--;
                    hold += input[next++] << bits;
                    bits += 8;
                  }
                  strm.adler = state5.check = zswap32(hold);
                  hold = 0;
                  bits = 0;
                  state5.mode = DICT;
                case DICT:
                  if (state5.havedict === 0) {
                    strm.next_out = put;
                    strm.avail_out = left;
                    strm.next_in = next;
                    strm.avail_in = have;
                    state5.hold = hold;
                    state5.bits = bits;
                    return Z_NEED_DICT;
                  }
                  strm.adler = state5.check = 1;
                  state5.mode = TYPE;
                case TYPE:
                  if (flush === Z_BLOCK || flush === Z_TREES) {
                    break inf_leave;
                  }
                case TYPEDO:
                  if (state5.last) {
                    hold >>>= bits & 7;
                    bits -= bits & 7;
                    state5.mode = CHECK;
                    break;
                  }
                  while (bits < 3) {
                    if (have === 0) {
                      break inf_leave;
                    }
                    have--;
                    hold += input[next++] << bits;
                    bits += 8;
                  }
                  state5.last = hold & 1;
                  hold >>>= 1;
                  bits -= 1;
                  switch (hold & 3) {
                    case 0:
                      state5.mode = STORED;
                      break;
                    case 1:
                      fixedtables(state5);
                      state5.mode = LEN_;
                      if (flush === Z_TREES) {
                        hold >>>= 2;
                        bits -= 2;
                        break inf_leave;
                      }
                      break;
                    case 2:
                      state5.mode = TABLE;
                      break;
                    case 3:
                      strm.msg = "invalid block type";
                      state5.mode = BAD;
                  }
                  hold >>>= 2;
                  bits -= 2;
                  break;
                case STORED:
                  hold >>>= bits & 7;
                  bits -= bits & 7;
                  while (bits < 32) {
                    if (have === 0) {
                      break inf_leave;
                    }
                    have--;
                    hold += input[next++] << bits;
                    bits += 8;
                  }
                  if ((hold & 65535) !== (hold >>> 16 ^ 65535)) {
                    strm.msg = "invalid stored block lengths";
                    state5.mode = BAD;
                    break;
                  }
                  state5.length = hold & 65535;
                  hold = 0;
                  bits = 0;
                  state5.mode = COPY_;
                  if (flush === Z_TREES) {
                    break inf_leave;
                  }
                case COPY_:
                  state5.mode = COPY;
                case COPY:
                  copy = state5.length;
                  if (copy) {
                    if (copy > have) {
                      copy = have;
                    }
                    if (copy > left) {
                      copy = left;
                    }
                    if (copy === 0) {
                      break inf_leave;
                    }
                    utils.arraySet(output, input, next, copy, put);
                    have -= copy;
                    next += copy;
                    left -= copy;
                    put += copy;
                    state5.length -= copy;
                    break;
                  }
                  state5.mode = TYPE;
                  break;
                case TABLE:
                  while (bits < 14) {
                    if (have === 0) {
                      break inf_leave;
                    }
                    have--;
                    hold += input[next++] << bits;
                    bits += 8;
                  }
                  state5.nlen = (hold & 31) + 257;
                  hold >>>= 5;
                  bits -= 5;
                  state5.ndist = (hold & 31) + 1;
                  hold >>>= 5;
                  bits -= 5;
                  state5.ncode = (hold & 15) + 4;
                  hold >>>= 4;
                  bits -= 4;
                  if (state5.nlen > 286 || state5.ndist > 30) {
                    strm.msg = "too many length or distance symbols";
                    state5.mode = BAD;
                    break;
                  }
                  state5.have = 0;
                  state5.mode = LENLENS;
                case LENLENS:
                  while (state5.have < state5.ncode) {
                    while (bits < 3) {
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                    }
                    state5.lens[order[state5.have++]] = hold & 7;
                    hold >>>= 3;
                    bits -= 3;
                  }
                  while (state5.have < 19) {
                    state5.lens[order[state5.have++]] = 0;
                  }
                  state5.lencode = state5.lendyn;
                  state5.lenbits = 7;
                  opts = { bits: state5.lenbits };
                  ret = inflate_table(CODES, state5.lens, 0, 19, state5.lencode, 0, state5.work, opts);
                  state5.lenbits = opts.bits;
                  if (ret) {
                    strm.msg = "invalid code lengths set";
                    state5.mode = BAD;
                    break;
                  }
                  state5.have = 0;
                  state5.mode = CODELENS;
                case CODELENS:
                  while (state5.have < state5.nlen + state5.ndist) {
                    for (; ; ) {
                      here = state5.lencode[hold & (1 << state5.lenbits) - 1];
                      here_bits = here >>> 24;
                      here_op = here >>> 16 & 255;
                      here_val = here & 65535;
                      if (here_bits <= bits) {
                        break;
                      }
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                    }
                    if (here_val < 16) {
                      hold >>>= here_bits;
                      bits -= here_bits;
                      state5.lens[state5.have++] = here_val;
                    } else {
                      if (here_val === 16) {
                        n = here_bits + 2;
                        while (bits < n) {
                          if (have === 0) {
                            break inf_leave;
                          }
                          have--;
                          hold += input[next++] << bits;
                          bits += 8;
                        }
                        hold >>>= here_bits;
                        bits -= here_bits;
                        if (state5.have === 0) {
                          strm.msg = "invalid bit length repeat";
                          state5.mode = BAD;
                          break;
                        }
                        len = state5.lens[state5.have - 1];
                        copy = 3 + (hold & 3);
                        hold >>>= 2;
                        bits -= 2;
                      } else if (here_val === 17) {
                        n = here_bits + 3;
                        while (bits < n) {
                          if (have === 0) {
                            break inf_leave;
                          }
                          have--;
                          hold += input[next++] << bits;
                          bits += 8;
                        }
                        hold >>>= here_bits;
                        bits -= here_bits;
                        len = 0;
                        copy = 3 + (hold & 7);
                        hold >>>= 3;
                        bits -= 3;
                      } else {
                        n = here_bits + 7;
                        while (bits < n) {
                          if (have === 0) {
                            break inf_leave;
                          }
                          have--;
                          hold += input[next++] << bits;
                          bits += 8;
                        }
                        hold >>>= here_bits;
                        bits -= here_bits;
                        len = 0;
                        copy = 11 + (hold & 127);
                        hold >>>= 7;
                        bits -= 7;
                      }
                      if (state5.have + copy > state5.nlen + state5.ndist) {
                        strm.msg = "invalid bit length repeat";
                        state5.mode = BAD;
                        break;
                      }
                      while (copy--) {
                        state5.lens[state5.have++] = len;
                      }
                    }
                  }
                  if (state5.mode === BAD) {
                    break;
                  }
                  if (state5.lens[256] === 0) {
                    strm.msg = "invalid code -- missing end-of-block";
                    state5.mode = BAD;
                    break;
                  }
                  state5.lenbits = 9;
                  opts = { bits: state5.lenbits };
                  ret = inflate_table(LENS, state5.lens, 0, state5.nlen, state5.lencode, 0, state5.work, opts);
                  state5.lenbits = opts.bits;
                  if (ret) {
                    strm.msg = "invalid literal/lengths set";
                    state5.mode = BAD;
                    break;
                  }
                  state5.distbits = 6;
                  state5.distcode = state5.distdyn;
                  opts = { bits: state5.distbits };
                  ret = inflate_table(DISTS, state5.lens, state5.nlen, state5.ndist, state5.distcode, 0, state5.work, opts);
                  state5.distbits = opts.bits;
                  if (ret) {
                    strm.msg = "invalid distances set";
                    state5.mode = BAD;
                    break;
                  }
                  state5.mode = LEN_;
                  if (flush === Z_TREES) {
                    break inf_leave;
                  }
                case LEN_:
                  state5.mode = LEN;
                case LEN:
                  if (have >= 6 && left >= 258) {
                    strm.next_out = put;
                    strm.avail_out = left;
                    strm.next_in = next;
                    strm.avail_in = have;
                    state5.hold = hold;
                    state5.bits = bits;
                    inflate_fast(strm, _out);
                    put = strm.next_out;
                    output = strm.output;
                    left = strm.avail_out;
                    next = strm.next_in;
                    input = strm.input;
                    have = strm.avail_in;
                    hold = state5.hold;
                    bits = state5.bits;
                    if (state5.mode === TYPE) {
                      state5.back = -1;
                    }
                    break;
                  }
                  state5.back = 0;
                  for (; ; ) {
                    here = state5.lencode[hold & (1 << state5.lenbits) - 1];
                    here_bits = here >>> 24;
                    here_op = here >>> 16 & 255;
                    here_val = here & 65535;
                    if (here_bits <= bits) {
                      break;
                    }
                    if (have === 0) {
                      break inf_leave;
                    }
                    have--;
                    hold += input[next++] << bits;
                    bits += 8;
                  }
                  if (here_op && (here_op & 240) === 0) {
                    last_bits = here_bits;
                    last_op = here_op;
                    last_val = here_val;
                    for (; ; ) {
                      here = state5.lencode[last_val + ((hold & (1 << last_bits + last_op) - 1) >> last_bits)];
                      here_bits = here >>> 24;
                      here_op = here >>> 16 & 255;
                      here_val = here & 65535;
                      if (last_bits + here_bits <= bits) {
                        break;
                      }
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                    }
                    hold >>>= last_bits;
                    bits -= last_bits;
                    state5.back += last_bits;
                  }
                  hold >>>= here_bits;
                  bits -= here_bits;
                  state5.back += here_bits;
                  state5.length = here_val;
                  if (here_op === 0) {
                    state5.mode = LIT;
                    break;
                  }
                  if (here_op & 32) {
                    state5.back = -1;
                    state5.mode = TYPE;
                    break;
                  }
                  if (here_op & 64) {
                    strm.msg = "invalid literal/length code";
                    state5.mode = BAD;
                    break;
                  }
                  state5.extra = here_op & 15;
                  state5.mode = LENEXT;
                case LENEXT:
                  if (state5.extra) {
                    n = state5.extra;
                    while (bits < n) {
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                    }
                    state5.length += hold & (1 << state5.extra) - 1;
                    hold >>>= state5.extra;
                    bits -= state5.extra;
                    state5.back += state5.extra;
                  }
                  state5.was = state5.length;
                  state5.mode = DIST;
                case DIST:
                  for (; ; ) {
                    here = state5.distcode[hold & (1 << state5.distbits) - 1];
                    here_bits = here >>> 24;
                    here_op = here >>> 16 & 255;
                    here_val = here & 65535;
                    if (here_bits <= bits) {
                      break;
                    }
                    if (have === 0) {
                      break inf_leave;
                    }
                    have--;
                    hold += input[next++] << bits;
                    bits += 8;
                  }
                  if ((here_op & 240) === 0) {
                    last_bits = here_bits;
                    last_op = here_op;
                    last_val = here_val;
                    for (; ; ) {
                      here = state5.distcode[last_val + ((hold & (1 << last_bits + last_op) - 1) >> last_bits)];
                      here_bits = here >>> 24;
                      here_op = here >>> 16 & 255;
                      here_val = here & 65535;
                      if (last_bits + here_bits <= bits) {
                        break;
                      }
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                    }
                    hold >>>= last_bits;
                    bits -= last_bits;
                    state5.back += last_bits;
                  }
                  hold >>>= here_bits;
                  bits -= here_bits;
                  state5.back += here_bits;
                  if (here_op & 64) {
                    strm.msg = "invalid distance code";
                    state5.mode = BAD;
                    break;
                  }
                  state5.offset = here_val;
                  state5.extra = here_op & 15;
                  state5.mode = DISTEXT;
                case DISTEXT:
                  if (state5.extra) {
                    n = state5.extra;
                    while (bits < n) {
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                    }
                    state5.offset += hold & (1 << state5.extra) - 1;
                    hold >>>= state5.extra;
                    bits -= state5.extra;
                    state5.back += state5.extra;
                  }
                  if (state5.offset > state5.dmax) {
                    strm.msg = "invalid distance too far back";
                    state5.mode = BAD;
                    break;
                  }
                  state5.mode = MATCH;
                case MATCH:
                  if (left === 0) {
                    break inf_leave;
                  }
                  copy = _out - left;
                  if (state5.offset > copy) {
                    copy = state5.offset - copy;
                    if (copy > state5.whave) {
                      if (state5.sane) {
                        strm.msg = "invalid distance too far back";
                        state5.mode = BAD;
                        break;
                      }
                    }
                    if (copy > state5.wnext) {
                      copy -= state5.wnext;
                      from = state5.wsize - copy;
                    } else {
                      from = state5.wnext - copy;
                    }
                    if (copy > state5.length) {
                      copy = state5.length;
                    }
                    from_source = state5.window;
                  } else {
                    from_source = output;
                    from = put - state5.offset;
                    copy = state5.length;
                  }
                  if (copy > left) {
                    copy = left;
                  }
                  left -= copy;
                  state5.length -= copy;
                  do {
                    output[put++] = from_source[from++];
                  } while (--copy);
                  if (state5.length === 0) {
                    state5.mode = LEN;
                  }
                  break;
                case LIT:
                  if (left === 0) {
                    break inf_leave;
                  }
                  output[put++] = state5.length;
                  left--;
                  state5.mode = LEN;
                  break;
                case CHECK:
                  if (state5.wrap) {
                    while (bits < 32) {
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold |= input[next++] << bits;
                      bits += 8;
                    }
                    _out -= left;
                    strm.total_out += _out;
                    state5.total += _out;
                    if (_out) {
                      strm.adler = state5.check = state5.flags ? crc32(state5.check, output, _out, put - _out) : adler32(state5.check, output, _out, put - _out);
                    }
                    _out = left;
                    if ((state5.flags ? hold : zswap32(hold)) !== state5.check) {
                      strm.msg = "incorrect data check";
                      state5.mode = BAD;
                      break;
                    }
                    hold = 0;
                    bits = 0;
                  }
                  state5.mode = LENGTH;
                case LENGTH:
                  if (state5.wrap && state5.flags) {
                    while (bits < 32) {
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                    }
                    if (hold !== (state5.total & 4294967295)) {
                      strm.msg = "incorrect length check";
                      state5.mode = BAD;
                      break;
                    }
                    hold = 0;
                    bits = 0;
                  }
                  state5.mode = DONE;
                case DONE:
                  ret = Z_STREAM_END;
                  break inf_leave;
                case BAD:
                  ret = Z_DATA_ERROR;
                  break inf_leave;
                case MEM:
                  return Z_MEM_ERROR;
                case SYNC:
                default:
                  return Z_STREAM_ERROR;
              }
            }
          strm.next_out = put;
          strm.avail_out = left;
          strm.next_in = next;
          strm.avail_in = have;
          state5.hold = hold;
          state5.bits = bits;
          if (state5.wsize || _out !== strm.avail_out && state5.mode < BAD && (state5.mode < CHECK || flush !== Z_FINISH)) {
            if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {
              state5.mode = MEM;
              return Z_MEM_ERROR;
            }
          }
          _in -= strm.avail_in;
          _out -= strm.avail_out;
          strm.total_in += _in;
          strm.total_out += _out;
          state5.total += _out;
          if (state5.wrap && _out) {
            strm.adler = state5.check = state5.flags ? crc32(state5.check, output, _out, strm.next_out - _out) : adler32(state5.check, output, _out, strm.next_out - _out);
          }
          strm.data_type = state5.bits + (state5.last ? 64 : 0) + (state5.mode === TYPE ? 128 : 0) + (state5.mode === LEN_ || state5.mode === COPY_ ? 256 : 0);
          if ((_in === 0 && _out === 0 || flush === Z_FINISH) && ret === Z_OK) {
            ret = Z_BUF_ERROR;
          }
          return ret;
        }
        function inflateEnd(strm) {
          if (!strm || !strm.state) {
            return Z_STREAM_ERROR;
          }
          var state5 = strm.state;
          if (state5.window) {
            state5.window = null;
          }
          strm.state = null;
          return Z_OK;
        }
        function inflateGetHeader(strm, head) {
          var state5;
          if (!strm || !strm.state) {
            return Z_STREAM_ERROR;
          }
          state5 = strm.state;
          if ((state5.wrap & 2) === 0) {
            return Z_STREAM_ERROR;
          }
          state5.head = head;
          head.done = false;
          return Z_OK;
        }
        function inflateSetDictionary(strm, dictionary) {
          var dictLength = dictionary.length;
          var state5;
          var dictid;
          var ret;
          if (!strm || !strm.state) {
            return Z_STREAM_ERROR;
          }
          state5 = strm.state;
          if (state5.wrap !== 0 && state5.mode !== DICT) {
            return Z_STREAM_ERROR;
          }
          if (state5.mode === DICT) {
            dictid = 1;
            dictid = adler32(dictid, dictionary, dictLength, 0);
            if (dictid !== state5.check) {
              return Z_DATA_ERROR;
            }
          }
          ret = updatewindow(strm, dictionary, dictLength, dictLength);
          if (ret) {
            state5.mode = MEM;
            return Z_MEM_ERROR;
          }
          state5.havedict = 1;
          return Z_OK;
        }
        exports2.inflateReset = inflateReset;
        exports2.inflateReset2 = inflateReset2;
        exports2.inflateResetKeep = inflateResetKeep;
        exports2.inflateInit = inflateInit;
        exports2.inflateInit2 = inflateInit2;
        exports2.inflate = inflate;
        exports2.inflateEnd = inflateEnd;
        exports2.inflateGetHeader = inflateGetHeader;
        exports2.inflateSetDictionary = inflateSetDictionary;
        exports2.inflateInfo = "pako inflate (from Nodeca project)";
      }, function(module22, exports2) {
        "use strict";
        var TYPED_OK = typeof Uint8Array !== "undefined" && typeof Uint16Array !== "undefined" && typeof Int32Array !== "undefined";
        exports2.assign = function(obj) {
          var sources = Array.prototype.slice.call(arguments, 1);
          while (sources.length) {
            var source = sources.shift();
            if (!source) {
              continue;
            }
            if (typeof source !== "object") {
              throw new TypeError(source + "must be non-object");
            }
            for (var p in source) {
              if (source.hasOwnProperty(p)) {
                obj[p] = source[p];
              }
            }
          }
          return obj;
        };
        exports2.shrinkBuf = function(buf, size) {
          if (buf.length === size) {
            return buf;
          }
          if (buf.subarray) {
            return buf.subarray(0, size);
          }
          buf.length = size;
          return buf;
        };
        var fnTyped = { arraySet: function(dest, src, src_offs, len, dest_offs) {
          if (src.subarray && dest.subarray) {
            dest.set(src.subarray(src_offs, src_offs + len), dest_offs);
            return;
          }
          for (var i = 0; i < len; i++) {
            dest[dest_offs + i] = src[src_offs + i];
          }
        }, flattenChunks: function(chunks) {
          var i, l, len, pos, chunk, result;
          len = 0;
          for (i = 0, l = chunks.length; i < l; i++) {
            len += chunks[i].length;
          }
          result = new Uint8Array(len);
          pos = 0;
          for (i = 0, l = chunks.length; i < l; i++) {
            chunk = chunks[i];
            result.set(chunk, pos);
            pos += chunk.length;
          }
          return result;
        } };
        var fnUntyped = { arraySet: function(dest, src, src_offs, len, dest_offs) {
          for (var i = 0; i < len; i++) {
            dest[dest_offs + i] = src[src_offs + i];
          }
        }, flattenChunks: function(chunks) {
          return [].concat.apply([], chunks);
        } };
        exports2.setTyped = function(on) {
          if (on) {
            exports2.Buf8 = Uint8Array;
            exports2.Buf16 = Uint16Array;
            exports2.Buf32 = Int32Array;
            exports2.assign(exports2, fnTyped);
          } else {
            exports2.Buf8 = Array;
            exports2.Buf16 = Array;
            exports2.Buf32 = Array;
            exports2.assign(exports2, fnUntyped);
          }
        };
        exports2.setTyped(TYPED_OK);
      }, function(module22, exports2) {
        "use strict";
        function adler32(adler, buf, len, pos) {
          var s1 = adler & 65535 | 0, s2 = adler >>> 16 & 65535 | 0, n = 0;
          while (len !== 0) {
            n = len > 2e3 ? 2e3 : len;
            len -= n;
            do {
              s1 = s1 + buf[pos++] | 0;
              s2 = s2 + s1 | 0;
            } while (--n);
            s1 %= 65521;
            s2 %= 65521;
          }
          return s1 | s2 << 16 | 0;
        }
        module22.exports = adler32;
      }, function(module22, exports2) {
        "use strict";
        function makeTable() {
          var c, table = [];
          for (var n = 0; n < 256; n++) {
            c = n;
            for (var k = 0; k < 8; k++) {
              c = c & 1 ? 3988292384 ^ c >>> 1 : c >>> 1;
            }
            table[n] = c;
          }
          return table;
        }
        var crcTable = makeTable();
        function crc32(crc, buf, len, pos) {
          var t3 = crcTable, end = pos + len;
          crc ^= -1;
          for (var i = pos; i < end; i++) {
            crc = crc >>> 8 ^ t3[(crc ^ buf[i]) & 255];
          }
          return crc ^ -1;
        }
        module22.exports = crc32;
      }, function(module22, exports2) {
        "use strict";
        var BAD = 30;
        var TYPE = 12;
        module22.exports = function inflate_fast(strm, start) {
          var state5;
          var _in;
          var last;
          var _out;
          var beg;
          var end;
          var dmax;
          var wsize;
          var whave;
          var wnext;
          var s_window;
          var hold;
          var bits;
          var lcode;
          var dcode;
          var lmask;
          var dmask;
          var here;
          var op;
          var len;
          var dist;
          var from;
          var from_source;
          var input, output;
          state5 = strm.state;
          _in = strm.next_in;
          input = strm.input;
          last = _in + (strm.avail_in - 5);
          _out = strm.next_out;
          output = strm.output;
          beg = _out - (start - strm.avail_out);
          end = _out + (strm.avail_out - 257);
          dmax = state5.dmax;
          wsize = state5.wsize;
          whave = state5.whave;
          wnext = state5.wnext;
          s_window = state5.window;
          hold = state5.hold;
          bits = state5.bits;
          lcode = state5.lencode;
          dcode = state5.distcode;
          lmask = (1 << state5.lenbits) - 1;
          dmask = (1 << state5.distbits) - 1;
          top:
            do {
              if (bits < 15) {
                hold += input[_in++] << bits;
                bits += 8;
                hold += input[_in++] << bits;
                bits += 8;
              }
              here = lcode[hold & lmask];
              dolen:
                for (; ; ) {
                  op = here >>> 24;
                  hold >>>= op;
                  bits -= op;
                  op = here >>> 16 & 255;
                  if (op === 0) {
                    output[_out++] = here & 65535;
                  } else if (op & 16) {
                    len = here & 65535;
                    op &= 15;
                    if (op) {
                      if (bits < op) {
                        hold += input[_in++] << bits;
                        bits += 8;
                      }
                      len += hold & (1 << op) - 1;
                      hold >>>= op;
                      bits -= op;
                    }
                    if (bits < 15) {
                      hold += input[_in++] << bits;
                      bits += 8;
                      hold += input[_in++] << bits;
                      bits += 8;
                    }
                    here = dcode[hold & dmask];
                    dodist:
                      for (; ; ) {
                        op = here >>> 24;
                        hold >>>= op;
                        bits -= op;
                        op = here >>> 16 & 255;
                        if (op & 16) {
                          dist = here & 65535;
                          op &= 15;
                          if (bits < op) {
                            hold += input[_in++] << bits;
                            bits += 8;
                            if (bits < op) {
                              hold += input[_in++] << bits;
                              bits += 8;
                            }
                          }
                          dist += hold & (1 << op) - 1;
                          if (dist > dmax) {
                            strm.msg = "invalid distance too far back";
                            state5.mode = BAD;
                            break top;
                          }
                          hold >>>= op;
                          bits -= op;
                          op = _out - beg;
                          if (dist > op) {
                            op = dist - op;
                            if (op > whave) {
                              if (state5.sane) {
                                strm.msg = "invalid distance too far back";
                                state5.mode = BAD;
                                break top;
                              }
                            }
                            from = 0;
                            from_source = s_window;
                            if (wnext === 0) {
                              from += wsize - op;
                              if (op < len) {
                                len -= op;
                                do {
                                  output[_out++] = s_window[from++];
                                } while (--op);
                                from = _out - dist;
                                from_source = output;
                              }
                            } else if (wnext < op) {
                              from += wsize + wnext - op;
                              op -= wnext;
                              if (op < len) {
                                len -= op;
                                do {
                                  output[_out++] = s_window[from++];
                                } while (--op);
                                from = 0;
                                if (wnext < len) {
                                  op = wnext;
                                  len -= op;
                                  do {
                                    output[_out++] = s_window[from++];
                                  } while (--op);
                                  from = _out - dist;
                                  from_source = output;
                                }
                              }
                            } else {
                              from += wnext - op;
                              if (op < len) {
                                len -= op;
                                do {
                                  output[_out++] = s_window[from++];
                                } while (--op);
                                from = _out - dist;
                                from_source = output;
                              }
                            }
                            while (len > 2) {
                              output[_out++] = from_source[from++];
                              output[_out++] = from_source[from++];
                              output[_out++] = from_source[from++];
                              len -= 3;
                            }
                            if (len) {
                              output[_out++] = from_source[from++];
                              if (len > 1) {
                                output[_out++] = from_source[from++];
                              }
                            }
                          } else {
                            from = _out - dist;
                            do {
                              output[_out++] = output[from++];
                              output[_out++] = output[from++];
                              output[_out++] = output[from++];
                              len -= 3;
                            } while (len > 2);
                            if (len) {
                              output[_out++] = output[from++];
                              if (len > 1) {
                                output[_out++] = output[from++];
                              }
                            }
                          }
                        } else if ((op & 64) === 0) {
                          here = dcode[(here & 65535) + (hold & (1 << op) - 1)];
                          continue dodist;
                        } else {
                          strm.msg = "invalid distance code";
                          state5.mode = BAD;
                          break top;
                        }
                        break;
                      }
                  } else if ((op & 64) === 0) {
                    here = lcode[(here & 65535) + (hold & (1 << op) - 1)];
                    continue dolen;
                  } else if (op & 32) {
                    state5.mode = TYPE;
                    break top;
                  } else {
                    strm.msg = "invalid literal/length code";
                    state5.mode = BAD;
                    break top;
                  }
                  break;
                }
            } while (_in < last && _out < end);
          len = bits >> 3;
          _in -= len;
          bits -= len << 3;
          hold &= (1 << bits) - 1;
          strm.next_in = _in;
          strm.next_out = _out;
          strm.avail_in = _in < last ? 5 + (last - _in) : 5 - (_in - last);
          strm.avail_out = _out < end ? 257 + (end - _out) : 257 - (_out - end);
          state5.hold = hold;
          state5.bits = bits;
          return;
        };
      }, function(module22, exports2, __webpack_require__) {
        "use strict";
        var utils = __webpack_require__(33);
        var MAXBITS = 15;
        var ENOUGH_LENS = 852;
        var ENOUGH_DISTS = 592;
        var CODES = 0;
        var LENS = 1;
        var DISTS = 2;
        var lbase = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0];
        var lext = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78];
        var dbase = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0];
        var dext = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
        module22.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts) {
          var bits = opts.bits;
          var len = 0;
          var sym = 0;
          var min = 0, max = 0;
          var root = 0;
          var curr = 0;
          var drop = 0;
          var left = 0;
          var used = 0;
          var huff = 0;
          var incr;
          var fill;
          var low;
          var mask;
          var next;
          var base = null;
          var base_index = 0;
          var end;
          var count = new utils.Buf16(MAXBITS + 1);
          var offs = new utils.Buf16(MAXBITS + 1);
          var extra = null;
          var extra_index = 0;
          var here_bits, here_op, here_val;
          for (len = 0; len <= MAXBITS; len++) {
            count[len] = 0;
          }
          for (sym = 0; sym < codes; sym++) {
            count[lens[lens_index + sym]]++;
          }
          root = bits;
          for (max = MAXBITS; max >= 1; max--) {
            if (count[max] !== 0) {
              break;
            }
          }
          if (root > max) {
            root = max;
          }
          if (max === 0) {
            table[table_index++] = 1 << 24 | 64 << 16 | 0;
            table[table_index++] = 1 << 24 | 64 << 16 | 0;
            opts.bits = 1;
            return 0;
          }
          for (min = 1; min < max; min++) {
            if (count[min] !== 0) {
              break;
            }
          }
          if (root < min) {
            root = min;
          }
          left = 1;
          for (len = 1; len <= MAXBITS; len++) {
            left <<= 1;
            left -= count[len];
            if (left < 0) {
              return -1;
            }
          }
          if (left > 0 && (type === CODES || max !== 1)) {
            return -1;
          }
          offs[1] = 0;
          for (len = 1; len < MAXBITS; len++) {
            offs[len + 1] = offs[len] + count[len];
          }
          for (sym = 0; sym < codes; sym++) {
            if (lens[lens_index + sym] !== 0) {
              work[offs[lens[lens_index + sym]]++] = sym;
            }
          }
          if (type === CODES) {
            base = extra = work;
            end = 19;
          } else if (type === LENS) {
            base = lbase;
            base_index -= 257;
            extra = lext;
            extra_index -= 257;
            end = 256;
          } else {
            base = dbase;
            extra = dext;
            end = -1;
          }
          huff = 0;
          sym = 0;
          len = min;
          next = table_index;
          curr = root;
          drop = 0;
          low = -1;
          used = 1 << root;
          mask = used - 1;
          if (type === LENS && used > ENOUGH_LENS || type === DISTS && used > ENOUGH_DISTS) {
            return 1;
          }
          for (; ; ) {
            here_bits = len - drop;
            if (work[sym] < end) {
              here_op = 0;
              here_val = work[sym];
            } else if (work[sym] > end) {
              here_op = extra[extra_index + work[sym]];
              here_val = base[base_index + work[sym]];
            } else {
              here_op = 32 + 64;
              here_val = 0;
            }
            incr = 1 << len - drop;
            fill = 1 << curr;
            min = fill;
            do {
              fill -= incr;
              table[next + (huff >> drop) + fill] = here_bits << 24 | here_op << 16 | here_val | 0;
            } while (fill !== 0);
            incr = 1 << len - 1;
            while (huff & incr) {
              incr >>= 1;
            }
            if (incr !== 0) {
              huff &= incr - 1;
              huff += incr;
            } else {
              huff = 0;
            }
            sym++;
            if (--count[len] === 0) {
              if (len === max) {
                break;
              }
              len = lens[lens_index + work[sym]];
            }
            if (len > root && (huff & mask) !== low) {
              if (drop === 0) {
                drop = root;
              }
              next += min;
              curr = len - drop;
              left = 1 << curr;
              while (curr + drop < max) {
                left -= count[curr + drop];
                if (left <= 0) {
                  break;
                }
                curr++;
                left <<= 1;
              }
              used += 1 << curr;
              if (type === LENS && used > ENOUGH_LENS || type === DISTS && used > ENOUGH_DISTS) {
                return 1;
              }
              low = huff & mask;
              table[low] = root << 24 | curr << 16 | next - table_index | 0;
            }
          }
          if (huff !== 0) {
            table[next + huff] = len - drop << 24 | 64 << 16 | 0;
          }
          opts.bits = root;
          return 0;
        };
      }, function(module22, exports2, __webpack_require__) {
        "use strict";
        var utils = __webpack_require__(33);
        var STR_APPLY_OK = true;
        var STR_APPLY_UIA_OK = true;
        try {
          String.fromCharCode.apply(null, [0]);
        } catch (__) {
          STR_APPLY_OK = false;
        }
        try {
          String.fromCharCode.apply(null, new Uint8Array(1));
        } catch (__) {
          STR_APPLY_UIA_OK = false;
        }
        var _utf8len = new utils.Buf8(256);
        for (var q = 0; q < 256; q++) {
          _utf8len[q] = q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1;
        }
        _utf8len[254] = _utf8len[254] = 1;
        exports2.string2buf = function(str4) {
          var buf, c, c2, m_pos, i, str_len = str4.length, buf_len = 0;
          for (m_pos = 0; m_pos < str_len; m_pos++) {
            c = str4.charCodeAt(m_pos);
            if ((c & 64512) === 55296 && m_pos + 1 < str_len) {
              c2 = str4.charCodeAt(m_pos + 1);
              if ((c2 & 64512) === 56320) {
                c = 65536 + (c - 55296 << 10) + (c2 - 56320);
                m_pos++;
              }
            }
            buf_len += c < 128 ? 1 : c < 2048 ? 2 : c < 65536 ? 3 : 4;
          }
          buf = new utils.Buf8(buf_len);
          for (i = 0, m_pos = 0; i < buf_len; m_pos++) {
            c = str4.charCodeAt(m_pos);
            if ((c & 64512) === 55296 && m_pos + 1 < str_len) {
              c2 = str4.charCodeAt(m_pos + 1);
              if ((c2 & 64512) === 56320) {
                c = 65536 + (c - 55296 << 10) + (c2 - 56320);
                m_pos++;
              }
            }
            if (c < 128) {
              buf[i++] = c;
            } else if (c < 2048) {
              buf[i++] = 192 | c >>> 6;
              buf[i++] = 128 | c & 63;
            } else if (c < 65536) {
              buf[i++] = 224 | c >>> 12;
              buf[i++] = 128 | c >>> 6 & 63;
              buf[i++] = 128 | c & 63;
            } else {
              buf[i++] = 240 | c >>> 18;
              buf[i++] = 128 | c >>> 12 & 63;
              buf[i++] = 128 | c >>> 6 & 63;
              buf[i++] = 128 | c & 63;
            }
          }
          return buf;
        };
        function buf2binstring(buf, len) {
          if (len < 65537) {
            if (buf.subarray && STR_APPLY_UIA_OK || !buf.subarray && STR_APPLY_OK) {
              return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));
            }
          }
          var result = "";
          for (var i = 0; i < len; i++) {
            result += String.fromCharCode(buf[i]);
          }
          return result;
        }
        exports2.buf2binstring = function(buf) {
          return buf2binstring(buf, buf.length);
        };
        exports2.binstring2buf = function(str4) {
          var buf = new utils.Buf8(str4.length);
          for (var i = 0, len = buf.length; i < len; i++) {
            buf[i] = str4.charCodeAt(i);
          }
          return buf;
        };
        exports2.buf2string = function(buf, max) {
          var i, out, c, c_len;
          var len = max || buf.length;
          var utf16buf = new Array(len * 2);
          for (out = 0, i = 0; i < len; ) {
            c = buf[i++];
            if (c < 128) {
              utf16buf[out++] = c;
              continue;
            }
            c_len = _utf8len[c];
            if (c_len > 4) {
              utf16buf[out++] = 65533;
              i += c_len - 1;
              continue;
            }
            c &= c_len === 2 ? 31 : c_len === 3 ? 15 : 7;
            while (c_len > 1 && i < len) {
              c = c << 6 | buf[i++] & 63;
              c_len--;
            }
            if (c_len > 1) {
              utf16buf[out++] = 65533;
              continue;
            }
            if (c < 65536) {
              utf16buf[out++] = c;
            } else {
              c -= 65536;
              utf16buf[out++] = 55296 | c >> 10 & 1023;
              utf16buf[out++] = 56320 | c & 1023;
            }
          }
          return buf2binstring(utf16buf, out);
        };
        exports2.utf8border = function(buf, max) {
          var pos;
          max = max || buf.length;
          if (max > buf.length) {
            max = buf.length;
          }
          pos = max - 1;
          while (pos >= 0 && (buf[pos] & 192) === 128) {
            pos--;
          }
          if (pos < 0) {
            return max;
          }
          if (pos === 0) {
            return max;
          }
          return pos + _utf8len[buf[pos]] > max ? pos : max;
        };
      }, function(module22, exports2) {
        "use strict";
        module22.exports = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 };
      }, function(module22, exports2) {
        "use strict";
        module22.exports = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" };
      }, function(module22, exports2) {
        "use strict";
        function ZStream() {
          this.input = null;
          this.next_in = 0;
          this.avail_in = 0;
          this.total_in = 0;
          this.output = null;
          this.next_out = 0;
          this.avail_out = 0;
          this.total_out = 0;
          this.msg = "";
          this.state = null;
          this.data_type = 2;
          this.adler = 0;
        }
        module22.exports = ZStream;
      }, function(module22, exports2) {
        "use strict";
        function GZheader() {
          this.text = 0;
          this.time = 0;
          this.xflags = 0;
          this.os = 0;
          this.extra = null;
          this.extra_len = 0;
          this.name = "";
          this.comment = "";
          this.hcrc = 0;
          this.done = false;
        }
        module22.exports = GZheader;
      }]);
    });
  } });
  var CSV = class {
    constructor(onOpen = this.onOpen, saveButtonId = null, openButtonId = null) {
      this.onOpen = onOpen;
      this.notes = [{ idx: 0, text: "comment" }];
      if (saveButtonId !== null) {
        document.getElementById(saveButtonId).addEventListener("click", this.saveCSV);
      }
      if (openButtonId !== null) {
        document.getElementById(openButtonId).addEventListener("click", this.openCSV);
      }
    }
    processArraysForCSV(data = ["1|2|3", "3|2|1"], delimiter = "|", header = "a,b,c", saveNotes = false) {
      let csvDat = header + "\n";
      let noteIdx = 0;
      data.forEach((line, i) => {
        if (data[i] === "string" && delimiter !== ",") {
          csvDat += line.split(delimiter).join(",");
        } else {
          csvData += line.join(",");
        }
        if (saveNotes === true) {
          if (this.notes[noteIdx].idx === i) {
            line += this.notes[noteIdx].text;
            noteIdx++;
          }
        }
        if (line.indexOf("\n") < 0) {
          csvDat += "\n";
        }
      });
      return csvDat;
    }
    static saveCSV(csvDat = "a,b,c\n1,2,3\n3,2,1\n", name3 = new Date().toISOString()) {
      var hiddenElement = document.createElement("a");
      hiddenElement.href = "data:text/csv;charset=utf-8," + encodeURI(csvDat);
      hiddenElement.target = "_blank";
      if (name3 !== "") {
        hiddenElement.download = name3;
      } else {
        hiddenElement.download = Date().toISOString();
      }
      hiddenElement.click();
    }
    static openCSV(delimiter = ",", onOpen = (csvDat, header, path) => {
      return csvDat, header, path;
    }) {
      var input = document.createElement("input");
      input.accept = ".csv";
      input.type = "file";
      input.onchange = (e) => {
        var file = e.target.files[0];
        var reader = new FileReader();
        reader.onload = (event) => {
          var tempcsvData = event.target.result;
          var tempcsvArr = tempcsvData.split("\n");
          let header = [];
          var csvDat = [];
          tempcsvArr.pop();
          tempcsvArr.forEach((row, i) => {
            if (i == 0) {
              header = row.split(delimiter);
            } else {
              var temp = row.split(delimiter);
              csvDat.push(temp);
            }
          });
          onOpen(csvDat, header, input.value);
          input.value = "";
        };
        reader.readAsText(file);
      };
      input.click();
    }
    static openCSVRaw(onOpen = (csvDat, path) => {
      return csvDat, path;
    }) {
      var input = document.createElement("input");
      input.accept = ".csv";
      input.type = "file";
      input.onchange = (e) => {
        var file = e.target.files[0];
        var reader = new FileReader();
        reader.onload = (event) => {
          var tempcsvData = event.target.result;
          onOpen(tempcsvData, input.value);
          input.value = "";
        };
        reader.readAsText(file);
      };
      input.click();
    }
    onOpen(csvDat = [], header = []) {
      console.log("CSV Opened!", header, csvDat);
    }
  };
  var parseCSVData = (data, filename, head, hasend = true, parser = (lines, filename2, head2) => {
    let result = { filename: filename2 };
    let header = head2;
    if (typeof head2 === "string")
      header = head2.split(",");
    result.header = header;
    for (let i = 0; i < lines.length; i++) {
      let line = lines[i].split(",");
      for (let j = 0; j < line.length; j++) {
        if (!result[header[j]])
          result[header[j]];
        result[header[j]] = line[j];
      }
    }
    return result;
  }) => {
    let lines = data.split("\n");
    if (!head)
      head = lines[0];
    lines.shift();
    if (hasend === false)
      lines.pop();
    let result = parser(lines, filename, head);
    return result;
  };
  function toISOLocal(d2) {
    d2 = new Date(d2);
    var z3 = (n) => ("0" + n).slice(-2);
    var zz = (n) => ("00" + n).slice(-3);
    var off = d2.getTimezoneOffset();
    var sign = off < 0 ? "+" : "-";
    off = Math.abs(off);
    return d2.getFullYear() + "-" + z3(d2.getMonth() + 1) + "-" + z3(d2.getDate()) + "T" + z3(d2.getHours()) + ":" + z3(d2.getMinutes()) + ":" + z3(d2.getSeconds()) + "." + zz(d2.getMilliseconds()) + "(UTC" + sign + z3(off / 60 | 0) + ":00)";
  }
  var BrowserFS = __toESM4(require_browserfs());
  var fsInited = false;
  var fs2 = BrowserFS.BFSRequire("fs");
  var BFSBuffer = BrowserFS.BFSRequire("buffer").Buffer;
  var initFS = async (dirs = ["data"], oninit = (exists2 = []) => {
  }, onerror = (e) => {
  }, filesystem = "IndexedDB") => {
    if (fsInited)
      return true;
    else {
      fsInited = true;
      return new Promise((resolve) => {
        let oldmfs = fs2.getRootFS();
        BrowserFS.FileSystem[filesystem].Create({}, (e, mountableFileSystem) => {
          if (e)
            throw e;
          if (!mountableFileSystem) {
            onerror(e);
            throw new Error(`Error creating BrowserFS`);
          }
          BrowserFS.initialize(mountableFileSystem);
          let promises = [];
          dirs.forEach(async (dir2) => {
            promises.push(dirExists(fs2, dir2));
          });
          Promise.all(promises).then((values) => {
            oninit(values);
            fsInited = true;
            resolve(true);
          });
        });
      });
    }
  };
  var exists = async (path = "") => {
    if (!fsInited)
      await initFS([path.split("/")[0]]);
    else
      await dirExists(fs2, path.split("/")[0]);
    return new Promise((resolve) => {
      fs2.exists("/" + path, function(exists2) {
        resolve(exists2);
      });
    });
  };
  async function readFileChunk(path = "data", begin = 0, end = 5120, onread = (data) => {
  }) {
    if (!fsInited)
      await initFS([path.split("/")[0]]);
    else
      await dirExists(fs2, path.split("/")[0]);
    if (path != "") {
      return new Promise(async (resolve) => {
        fs2.open("/" + path, "r", (e, fd) => {
          if (e)
            throw e;
          fs2.read(fd, end, begin, "utf-8", (er, output, bytesRead) => {
            if (er)
              throw er;
            if (bytesRead !== 0) {
              let data = output.toString();
              fs2.close(fd, () => {
                onread(data, path);
                resolve(data);
              });
            } else
              resolve(void 0);
          });
        });
      });
    } else {
      console.error("Path name is not defined");
      return void 0;
    }
  }
  var writeFile = async (path, data, onwrite = (data2) => {
  }) => {
    if (!fsInited)
      await initFS([path.split("/")[0]]);
    else
      await dirExists(fs2, path.split("/")[0]);
    return new Promise((resolve) => {
      fs2.writeFile("/" + path, data, (err) => {
        if (err)
          throw err;
        onwrite(data);
        resolve(true);
      });
    });
  };
  var appendFile2 = async (path, data, onwrite = (data2) => {
  }) => {
    if (!fsInited)
      await initFS([path.split("/")[0]]);
    else
      await dirExists(fs2, path.split("/")[0]);
    return new Promise((resolve) => {
      fs2.appendFile("/" + path, data, (err) => {
        if (err)
          throw err;
        onwrite(data);
        resolve(true);
      });
    });
  };
  var deleteFile = async (path = "data", ondelete = () => {
  }) => {
    if (!fsInited)
      await initFS([path.split("/")[0]]);
    else
      await dirExists(fs2, path.split("/")[0]);
    return new Promise((resolve) => {
      if (path != "") {
        fs2.unlink("/" + path, (e) => {
          if (e)
            console.error(e);
          ondelete();
          resolve(true);
        });
      } else {
        console.error("Path name is not defined");
        resolve(false);
      }
    });
  };
  var listFiles = async (dir2 = "data", onload = (directory) => {
  }) => {
    if (!fsInited)
      await initFS([dir2]);
    else
      await dirExists(fs2, dir2);
    return new Promise((resolve) => {
      fs2.readdir("/" + dir2, (e, directory) => {
        if (e)
          throw e;
        if (directory) {
          onload(directory);
        }
        resolve(directory);
      });
    });
  };
  var getFileSize = async (path = "data", onread = (size) => {
    console.log(size);
  }) => {
    if (!fsInited)
      await initFS([path.split("/")[0]]);
    else
      await dirExists(fs2, path.split("/")[0]);
    return new Promise((resolve) => {
      fs2.stat("/" + path, (e, stats) => {
        if (e)
          throw e;
        let filesize = stats.size;
        onread(filesize);
        resolve(filesize);
      });
    });
  };
  var getCSVHeader = async (path = "data", onopen = (header, filename) => {
    console.log(header, filename);
  }) => {
    if (!fsInited)
      await initFS([path.split("/")[0]]);
    else
      await dirExists(fs2, path.split("/")[0]);
    return new Promise((resolve) => {
      fs2.open("/" + path, "r", (e, fd) => {
        if (e)
          throw e;
        fs2.read(fd, 65535, 0, "utf-8", (er, output, bytesRead) => {
          if (er)
            throw er;
          if (bytesRead !== 0) {
            let data = output.toString();
            let lines = data.split("\n");
            let header = lines[0];
            fs2.close(fd, () => {
              onopen(header, path);
              resolve(header);
            });
          } else
            resolve(void 0);
        });
      });
    });
  };
  var writeToCSVFromDB = async (path = "data", fileSizeLimitMb = 10) => {
    if (!fsInited)
      await initFS([path.split("/")[0]]);
    else
      await dirExists(fs2, path.split("/")[0]);
    return new Promise((resolve) => {
      if (path != "") {
        fs2.stat("/" + path, (e, stats) => {
          if (e)
            throw e;
          let filesize = stats.size;
          console.log(filesize);
          fs2.open(path, "r", (e2, fd) => {
            if (e2)
              throw e2;
            let i = 0;
            let maxFileSize = fileSizeLimitMb * 1024 * 1024;
            let end = maxFileSize;
            if (filesize < maxFileSize) {
              end = filesize;
              fs2.read(fd, end, 0, "utf-8", (e3, output, bytesRead) => {
                if (e3)
                  throw e3;
                if (bytesRead !== 0)
                  CSV.saveCSV(output.toString(), path);
                fs2.close(fd);
                resolve(true);
              });
            } else {
              const writeChunkToFile = async () => {
                if (i < filesize) {
                  if (i + end > filesize) {
                    end = filesize - i;
                  }
                  let chunk = 0;
                  fs2.read(fd, end, i, "utf-8", (e3, output, bytesRead) => {
                    if (e3)
                      throw e3;
                    if (bytesRead !== 0) {
                      CSV.saveCSV(output.toString(), path + "_" + chunk);
                      i += maxFileSize;
                      chunk++;
                      writeChunkToFile();
                      fs2.close(fd);
                      resolve(true);
                    }
                  });
                }
              };
            }
          });
        });
      } else {
        console.error("File name is not defined.");
        resolve(false);
      }
    });
  };
  async function readCSVChunkFromDB(path = "data", start = 0, end = "end") {
    if (!fsInited)
      await initFS([path.split("/")[0]]);
    else
      await dirExists(fs2, path.split("/")[0]);
    let head = await getCSVHeader(path);
    if (head)
      head = head.split(",");
    else
      return void 0;
    let resultLengths = [];
    let resultNames = [];
    let results = {};
    head.forEach((v2) => {
      if (v2) {
        resultNames.push(v2);
        resultLengths.push(1);
      } else
        resultLengths[resultLengths.length - 1]++;
    });
    let size = await getFileSize(path);
    if (end === "end")
      end = size;
    else if (end > size) {
      start = size - (end - start);
      end = size;
    }
    let data = await readFileChunk(path, start, end);
    let headeridx = 0;
    let lastIdx = 0;
    data.forEach((r, i) => {
      let row = r.split(",");
      while (lastIdx < row.length - 1) {
        let l = resultLengths[headeridx];
        if (l === 1) {
          results[resultNames[headeridx]].push(row[lastIdx]);
          lastIdx++;
        } else {
          results[resultNames[headeridx]].push(row[lastIdx].slice(lastIdx, l));
          lastIdx += l;
        }
      }
    });
    return results;
  }
  var directories = {};
  var dirExists = async (fs3, directory) => {
    return new Promise((resolve, reject) => {
      if (directories[directory] === "exists" || directories[directory] === "created") {
        resolve();
      } else {
        fs3.exists(`/${directory}`, (exists2) => {
          if (exists2) {
            directories[directory] = "exists";
            console.log(`/${directory} exists!`);
            resolve();
          } else if (directories[directory] === "creating") {
            console.log(directory + " is still being created.");
            resolve();
          } else {
            console.log(`creating /${directory}`, fs3);
            directories[directory] = "creating";
            fs3.mkdir(`/${directory}`, 1, (err) => {
              if (err) {
                throw err;
              }
              directories[directory] = "created";
              setTimeout(resolve, 500);
            });
          }
        });
      }
    });
  };
  var CSV_REFERENCE = {};
  function lerp(v0, v1, t3) {
    return (1 - t3) * v0 + t3 * v1;
  }
  function interpolerp(v0, v1, fit, floor = true) {
    if (fit <= 2)
      return [v0, v1];
    let a = 1 / fit;
    let result = new Array(fit);
    result[0] = v0;
    for (let i = 1; i <= fit; i++) {
      result[i] = lerp(v0, v1, a * i);
      if (floor)
        result[i] = Math.floor(result[i]);
    }
    return result;
  }
  var appendCSV = async (newData, filename, header) => {
    if (!filename) {
      let keys = Object.keys(CSV_REFERENCE);
      if (keys.length > 0)
        filename = keys[keys.length - 1];
      else
        filename = `csv${new Date().toISOString()}`;
    }
    let csv = CSV_REFERENCE[filename];
    if (!csv) {
      let keys = Array.from(Object.keys(newData));
      if (keys.indexOf("timestamp") > -1)
        keys.splice(keys.indexOf("timestamp"), 1);
      CSV_REFERENCE[filename] = { header: header ? header : ["timestamp", "localized", ...keys], lastX: void 0, buffer: "", buffered: 0, bufferSize: 0, toFixed: 0, xIncrement: void 0 };
      csv = CSV_REFERENCE[filename];
      header = csv.header;
    }
    if (!csv.header || csv.header?.length === 0) {
      let keys = Array.from(Object.keys(newData));
      if (keys.indexOf("timestamp") > -1)
        keys.splice(keys.indexOf("timestamp"), 1);
      csv.header = header ? header : ["timestamp", "localized", ...keys];
    } else if (header)
      csv.header = header;
    let maxLen = 1;
    for (const key in newData) {
      if (csv.header.indexOf(key) > -1 && newData[key]?.length > maxLen) {
        maxLen = newData[key]?.length;
      }
    }
    let x3;
    if (csv.xIncrement) {
      if (!csv.lastX) {
        if (typeof newData[csv.header[0]] !== "undefined") {
          x3 = newData[csv.header[0]];
        } else if (csv.header[0].toLowerCase().includes("time") || csv.header[0].toLowerCase().includes("unix"))
          x3 = Date.now();
      } else {
        if (newData[csv.header[2]]) {
          if (Array.isArray(newData[csv.header[2]]))
            x3 = csv.lastX + csv.xIncrement * newData[csv.header[2]].length;
          else
            x3 = csv.lastX + csv.xIncrement;
        } else if (newData[csv.header[0]]) {
          if (Array.isArray(newData[csv.header[0]]))
            x3 = csv.lastX + csv.xIncrement * newData[csv.header[0]].length;
          else
            x3 = csv.lastX + csv.xIncrement;
        } else
          x3 = csv.lastX + csv.xIncrement;
      }
    } else
      x3 = newData[csv.header[0]];
    if (typeof csv.lastX === "undefined")
      csv.lastX = Array.isArray(x3) ? x3[0] : x3;
    if (typeof x3 === "undefined") {
      if (csv.header[0].includes("time")) {
        let now = Date.now();
        if (maxLen === 1)
          x3 = Date.now();
        else {
          x3 = interpolerp(csv.lastX, now, maxLen);
          x3.shift();
        }
      } else {
        let newX = csv.lastX + 1;
        if (maxLen > 1) {
          x3 = new Array(maxLen).fill("");
          x3[maxLen - 1] = newX;
        } else
          x3 = newX;
      }
    } else if (maxLen > 1 && x3?.length !== maxLen) {
      if (!Array.isArray(x3) || x3.length === 1) {
        x3 = interpolerp(csv.lastX, x3, maxLen);
        x3.shift();
      } else {
        x3 = interpolerp(x3[0], x3[x3.length - 1], maxLen);
        x3.shift();
      }
    }
    let toAppend = [];
    if (Array.isArray(x3)) {
      let curIdcs = {};
      for (let i = 0; i < x3.length; i++) {
        toAppend.push([]);
        for (let j = 0; j < csv.header.length; j++) {
          let d2 = newData[csv.header[j]];
          if (j === 0) {
            toAppend[i][0] = x3[i];
            if (csv.header[j + 1] === "localized") {
              j++;
              toAppend[i][j] = toISOLocal(x3[i]);
            }
            continue;
          }
          if (d2 === void 0) {
            toAppend[i][j] = "";
          } else if (Array.isArray(d2)) {
            if (d2.length === x3.length)
              toAppend[i][j] = d2[i];
            else {
              if (!(csv.header[j] in curIdcs)) {
                curIdcs[csv.header[j]] = i;
                if (d2.length !== 1)
                  toAppend[i][j] = d2[i];
              } else {
                if (d2.length === 1 && i === x3.length - 1) {
                  toAppend[i][j] = d2[curIdcs[csv.header[j]]];
                } else if (Math.floor(d2.length * i / x3.length) > curIdcs[csv.header[j]]) {
                  curIdcs[csv.header[j]]++;
                  toAppend[i][j] = d2[curIdcs[csv.header[j]]];
                } else {
                  toAppend[i][j] = "";
                }
              }
            }
          } else {
            if (i === x3.length - 1) {
              toAppend[i][j] = d2;
            } else {
              toAppend[i][j] = "";
            }
          }
          if (typeof toAppend[i][j] === "number" && Math.floor(toAppend[i][j]) !== toAppend[i][j])
            toAppend[i][j] = toAppend[i][j].toFixed(CSV_REFERENCE[filename].toFixed);
        }
      }
    } else {
      toAppend.push([]);
      for (let j = 0; j < csv.header.length; j++) {
        if (j === 0) {
          toAppend[0][0] = x3;
          if (csv.header[j + 1] === "localized") {
            j++;
            toAppend[0][j] = toISOLocal(x3);
          }
          continue;
        }
        if (csv.header[j] in newData)
          toAppend[0][j] = newData[csv.header[j]];
        else
          toAppend[0][j] = "";
        if (typeof toAppend[0][j] === "number" && Math.floor(toAppend[0][j]) !== toAppend[0][j])
          toAppend[0][j] = toAppend[0][j].toFixed(CSV_REFERENCE[filename].toFixed);
      }
    }
    let csvProcessed = "";
    if (header)
      csvProcessed += header.join(",") + "\n";
    toAppend.forEach((arr) => {
      csvProcessed += arr.join(",") + "\n";
      if (csv.bufferSize)
        csv.buffered++;
    });
    csv.lastX = toAppend[toAppend.length - 1][0];
    if (csv.bufferSize) {
      csv.buffer += csvProcessed;
      if (csv.buffered > csv.bufferSize) {
        let r = new Promise((res, rej) => {
          exists(filename).then((fileExists) => {
            if (!fileExists) {
              writeFile(filename, csv.buffer, (written) => {
                res(written);
              });
            } else {
              appendFile2(filename, csv.buffer, (written) => {
                res(written);
              });
            }
          });
        });
        await r;
        csv.buffer = "";
        csv.buffered = 0;
        return r;
      } else
        return Promise.resolve(true);
    } else {
      return new Promise((res, rej) => {
        exists(filename).then((fileExists) => {
          if (!fileExists) {
            writeFile(filename, csvProcessed, (written) => {
              res(written);
            });
          } else {
            appendFile2(filename, csvProcessed, (written) => {
              res(written);
            });
          }
        });
      });
    }
  };
  var updateCSVHeader = (header, filename) => {
    if (CSV_REFERENCE[filename]) {
      CSV_REFERENCE[filename].header = header;
    }
  };
  var createCSV = (filename, header, toFixed = 5, bufferSize = 0, xIncrement) => {
    if (header?.indexOf("timestamp") > 1) {
      header.splice(header.indexOf("timestamp"), 1);
      header.unshift("timestamp");
    }
    if ((header?.[0].toLowerCase().includes("time") || header?.[0].toLowerCase().includes("unix")) && header[1] !== "localized") {
      header.splice(1, 0, "localized");
    }
    CSV_REFERENCE[filename] = { header, lastX: header[1] === "localized" ? Date.now() : 0, bufferSize, buffer: "", buffered: 0, toFixed, xIncrement };
    return new Promise((res, rej) => {
      writeFile(filename, CSV_REFERENCE[filename].header ? CSV_REFERENCE[filename].header.join(",") + "\n" : "", (written) => {
        res(written);
      }).catch(rej);
    });
  };
  var visualizeDirectory = (dir2, parentNode = document.body) => {
    return new Promise(async (res, rej) => {
      if (parentNode.querySelector("#bfs" + dir2))
        parentNode.querySelector("#bfs" + dir2)?.remove();
      parentNode.insertAdjacentHTML("beforeend", `<div id='bfs${dir2}' class='bfs${dir2}'></div>`);
      let div = parentNode.querySelector("#bfs" + dir2);
      await listFiles(dir2).then((directory) => {
        if (directory.length === 0)
          div.innerHTML = "No Files!";
        else
          directory.forEach((listing) => {
            div?.insertAdjacentHTML("beforeend", `<div id='${listing}' class='bfsfilediv'>
                        <span class='bfsfiletitle'>Data: </span>
                        <span>${listing}</span>
                        <button class='bfsdownloadbtn' id='download${listing}'>Download CSV</button>
                        ${listing.indexOf(".") > -1 ? `<button class='bfsdeletebtn' id='delete${listing}'>Delete</button>` : ""}
                    </div>`);
            if (document.getElementById(`delete${listing}`)) {
              document.getElementById(`delete${listing}`).onclick = () => {
                deleteFile(dir2 + "/" + listing, () => {
                  visualizeDirectory(dir2, parentNode);
                });
              };
            }
            if (document.getElementById(`download${listing}`)) {
              document.getElementById(`download${listing}`).onclick = () => {
                writeToCSVFromDB(dir2 + "/" + listing, 10);
              };
            }
          });
        res(directory);
      }).catch(rej);
    });
  };
  var csvRoutes = { appendCSV, updateCSVHeader, createCSV, visualizeDirectory, openCSV: CSV.openCSV, saveCSV: CSV.saveCSV, openCSVRaw: CSV.openCSVRaw, parseCSVData, getCSVHeader, writeToCSVFromDB, readCSVChunkFromDB, toISOLocal };

  // alerts/heartrate.ts
  var heartrate_exports = {};
  __export(heartrate_exports, {
    bufferLength: () => bufferLength,
    condition: () => condition2,
    message: () => message2
  });
  var upperBound = 150;
  var lowerBound = 25;
  var condition2 = (value) => value < lowerBound || value > upperBound;
  var message2 = (value) => {
    const relativeString = value < lowerBound ? "too low" : "too high";
    return `<h2>Heart Rate Alert</h2><p>Average heart rate${value !== void 0 ? ` (${value})` : ""} is ${relativeString} | <span>${new Date().toISOString()}</span></p>`;
  };
  var bufferLength = 5;

  // alerts/imu.ts
  var imu_exports = {};
  __export(imu_exports, {
    bufferLength: () => bufferLength2,
    condition: () => condition3,
    message: () => message3
  });
  var upperBound2 = 5e4;
  var lowerBound2 = -upperBound2;
  var condition3 = (value) => value < lowerBound2 || value > upperBound2;
  var message3 = (value) => `<h2>IMU Alert</h2><p>Latest accelerometer magnitude ${value !== void 0 ? ` (${value})` : ""} is too high | <span>${new Date().toISOString()}</span></p>`;
  var bufferLength2 = 0;

  // alerts/index.ts
  var hr = new Alert_default(heartrate_exports);
  var imu = new Alert_default(imu_exports);
  var arbitrary3 = new Alert_default(arbitrary_exports);

  // components/plot/webglplot/canvas.worker.ts
  var url3 = URL.createObjectURL(new Blob([String('(()=>{var mouseEventHandler=makeSendPropertiesHandler(["ctrlKey","metaKey","shiftKey","button","pointerType","clientX","clientY","pageX","pageY"]);var wheelEventHandlerImpl=makeSendPropertiesHandler(["deltaX","deltaY"]);var keydownEventHandler=makeSendPropertiesHandler(["ctrlKey","metaKey","shiftKey","keyCode"]);function wheelEventHandler(event,sendFn){event.preventDefault();wheelEventHandlerImpl(event,sendFn)}function preventDefaultHandler(event){event.preventDefault()}function copyProperties(src,properties,dst){for(const name of properties){dst[name]=src[name]}}function makeSendPropertiesHandler(properties){return function sendProperties(event,sendFn){const data={type:event.type};copyProperties(event,properties,data);sendFn(data)}}function touchEventHandler(event,sendFn){const touches=[];const data={type:event.type,touches};for(let i=0;i<event.touches.length;++i){const touch=event.touches[i];touches.push({pageX:touch.pageX,pageY:touch.pageY})}sendFn(data)}var orbitKeys={"37":true,"38":true,"39":true,"40":true};function filteredKeydownEventHandler(event,sendFn){const{keyCode}=event;if(orbitKeys[keyCode]){event.preventDefault();keydownEventHandler(event,sendFn)}}var eventHandlers={contextmenu:preventDefaultHandler,mousedown:mouseEventHandler,mousemove:mouseEventHandler,mouseup:mouseEventHandler,pointerdown:mouseEventHandler,pointermove:mouseEventHandler,pointerup:mouseEventHandler,touchstart:touchEventHandler,touchmove:touchEventHandler,touchend:touchEventHandler,wheel:wheelEventHandler,keydown:filteredKeydownEventHandler};function initProxyElement(element,worker,id){if(!id)id="proxy"+Math.floor(Math.random()*1e15);const sendEvent=data=>{if(!worker){handleProxyEvent(data,id)}else worker.postMessage({route:"handleProxyEvent",args:[data,id]})};let entries=Object.entries(eventHandlers);for(const[eventName,handler]of entries){element.addEventListener(eventName,function(event){handler(event,sendEvent)})}const sendSize=()=>{const rect=element.getBoundingClientRect();sendEvent({type:"resize",left:rect.left,top:rect.top,width:element.clientWidth,height:element.clientHeight})};sendSize();globalThis.addEventListener("resize",sendSize);return id}var EventDispatcher=class{addEventListener(type,listener){if(this.__listeners===void 0)this.__listeners={};const listeners=this.__listeners;if(listeners[type]===void 0){listeners[type]=[]}if(listeners[type].indexOf(listener)===-1){listeners[type].push(listener)}}hasEventListener(type,listener){if(this.__listeners===void 0)return false;const listeners=this.__listeners;return listeners[type]!==void 0&&listeners[type].indexOf(listener)!==-1}removeEventListener(type,listener){if(this.__listeners===void 0)return;const listeners=this.__listeners;const listenerArray=listeners[type];if(listenerArray!==void 0){const index=listenerArray.indexOf(listener);if(index!==-1){listenerArray.splice(index,1)}}}dispatchEvent(event,target){if(this.__listeners===void 0)return;const listeners=this.__listeners;const listenerArray=listeners[event.type];if(listenerArray!==void 0){if(!target)event.target=this;else event.target=target;const array=listenerArray.slice(0);for(let i=0,l=array.length;i<l;i++){array[i].call(this,event)}event.target=null}}};function noop(){}var ElementProxyReceiver=class extends EventDispatcher{constructor(){super();this.__listeners={};this.style={};this.setPointerCapture=()=>{};this.releasePointerCapture=()=>{};this.getBoundingClientRect=()=>{return{left:this.left,top:this.top,width:this.width,height:this.height,right:this.left+this.width,bottom:this.top+this.height}};this.handleEvent=data=>{if(data.type==="resize"){this.left=data.left;this.top=data.top;this.width=data.width;this.height=data.height;if(typeof this.proxied==="object"){this.proxied.style.width=this.width+"px";this.proxied.style.height=this.height+"px";this.proxied.clientWidth=this.width;this.proxied.clientHeight=this.height}}data.preventDefault=noop;data.stopPropagation=noop;this.dispatchEvent(data,this.proxied)};this.style={}}get clientWidth(){return this.width}get clientHeight(){return this.height}focus(){}};var ProxyManager=class{constructor(){this.targets={};this.makeProxy=(id,addTo=void 0)=>{if(!id)id=`proxyReceiver${Math.floor(Math.random()*1e15)}`;let proxy;if(this.targets[id])proxy=this.targets[id];else{proxy=new ElementProxyReceiver;this.targets[id]=proxy}if(typeof addTo==="object"){addTo.proxy=proxy;proxy.proxied=addTo;if(typeof WorkerGlobalScope!=="undefined")addTo.style=proxy.style;if(proxy.width){addTo.style.width=proxy.width+"px";addTo.clientWidth=proxy.width}if(proxy.height){addTo.style.height=proxy.height+"px";addTo.clientHeight=proxy.height}addTo.setPointerCapture=proxy.setPointerCapture.bind(proxy);addTo.releasePointerCapture=proxy.releasePointerCapture.bind(proxy);addTo.getBoundingClientRect=proxy.getBoundingClientRect.bind(proxy);addTo.addEventListener=proxy.addEventListener.bind(proxy);addTo.removeEventListener=proxy.removeEventListener.bind(proxy);addTo.handleEvent=proxy.handleEvent.bind(proxy);addTo.dispatchEvent=proxy.dispatchEvent.bind(proxy);addTo.focus=proxy.focus.bind(proxy)}};this.getProxy=id=>{return this.targets[id]};this.handleEvent=(data,id)=>{if(!this.targets[id])this.makeProxy(id);if(this.targets[id]){this.targets[id].handleEvent(data);return true}return void 0};if(!globalThis.document)globalThis.document={}}};function makeProxy(id,elm){if(this?.__node?.graph){if(!this.__node.graph.ProxyManager)this.__node.graph.ProxyManager=new ProxyManager;this.__node.graph.ProxyManager.makeProxy(id,elm)}else{if(!globalThis.ProxyManager)globalThis.ProxyManager=new ProxyManager;globalThis.ProxyManager.makeProxy(id,elm)}return id}function handleProxyEvent(data,id){if(this?.__node?.graph){if(!this.__node.graph.ProxyManager)this.__node.graph.ProxyManager=new ProxyManager;if(this.__node.graph.ProxyManager.handleEvent(data,id))return data}else{if(!globalThis.ProxyManager)globalThis.ProxyManager=new ProxyManager;if(globalThis.ProxyManager.handleEvent(data,id))return data}}var proxyElementWorkerRoutes={initProxyElement,makeProxy,handleProxyEvent};function Renderer(options){if(options.worker){let worker=options.worker;let route=options.route;if(worker instanceof Blob||typeof worker==="string"){worker=new Worker(worker)}delete options.worker;delete options.route;return transferCanvas(worker,options,route)}else{initProxyElement(options.canvas,void 0,options._id);return setupCanvas(options)}}function transferCanvas(worker,options,route){if(!options)return void 0;if(!options._id)options._id=`canvas${Math.floor(Math.random()*1e15)}`;let offscreen=options.canvas.transferControlToOffscreen();if(!options.width)options.width=options.canvas.clientWidth;if(!options.height)options.height=options.canvas.clientHeight;let message={route:route?route:"setupCanvas",args:{...options,canvas:offscreen}};if(this?.__node?.graph)this.__node.graph.run("initProxyElement",options.canvas,worker,options._id);else initProxyElement(options.canvas,worker,options._id);if(options.draw){if(typeof options.draw==="function")message.args.draw=options.draw.toString();else message.args.draw=options.draw}if(options.update){if(typeof options.update==="function")message.args.update=options.update.toString();else message.args.update=options.update}if(options.init){if(typeof options.init==="function")message.args.init=options.init.toString();else message.args.init=options.init}if(options.clear){if(typeof options.clear==="function")message.args.clear=options.clear.toString();else message.args.clear=options.clear}let transfer=[offscreen];if(options.transfer){transfer.push(...options.transfer);delete options.transfer}worker.postMessage(message,transfer);const canvascontrols={_id:options._id,width:options.width,height:options.height,worker,draw:props=>{worker.postMessage({route:"drawFrame",args:[props,options._id]})},update:props=>{worker.postMessage({route:"updateCanvas",args:[props,options._id]})},clear:()=>{worker.postMessage({route:"clearCanvas",args:options._id})},init:()=>{worker.postMessage({route:"initCanvas",args:options._id})},stop:()=>{worker.postMessage({route:"stopAnim",args:options._id})},start:()=>{worker.postMessage({route:"startAnim",args:options._id})},set:newDrawProps=>{worker.postMessage({route:"setDraw",args:[newDrawProps,options._id]})},terminate:()=>{worker.terminate()}};return canvascontrols}function setDraw(settings,_id){let canvasopts;if(this?.__node?.graph){if(_id)canvasopts=this.__node.graph.CANVASES?.[settings._id];else if(settings._id)canvasopts=this.__node.graph.CANVASES?.[settings._id];else canvasopts=this.__node.graph.CANVASES?.[Object.keys(this.__node.graph.CANVASES)[0]]}else{if(_id)canvasopts=globalThis.CANVASES?.[settings._id];else if(settings._id)canvasopts=globalThis.CANVASES?.[settings._id];else canvasopts=globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]]}if(canvasopts){if(settings.canvas){canvasopts.canvas=settings.canvas;if(this?.__node?.graph)this.__node.graph.run("makeProxy",canvasopts._id,canvasopts.canvas);else proxyElementWorkerRoutes.makeProxy(canvasopts._id,canvasopts.canvas)}if(typeof settings.context==="string")canvasopts.context=canvasopts.canvas.getContext(settings.context);else if(settings.context)canvasopts.context=settings.context;if(settings.width)canvasopts.canvas.width=settings.width;if(settings.height)canvasopts.canvas.height=settings.height;if(typeof settings.draw==="string")settings.draw=parseFunctionFromText(settings.draw);if(typeof settings.draw==="function"){canvasopts.draw=settings.draw}if(typeof settings.update==="string")settings.update=parseFunctionFromText(settings.update);if(typeof settings.update==="function"){canvasopts.update=settings.update}if(typeof settings.init==="string")settings.init=parseFunctionFromText(settings.init);if(typeof settings.init==="function"){canvasopts.init=settings.init}if(typeof settings.clear==="string")settings.clear=parseFunctionFromText(settings.clear);if(typeof settings.clear==="function"){canvasopts.clear=settings.clear}return settings._id}return void 0}function setupCanvas(options){if(this?.__node?.graph){if(!this.__node.graph.CANVASES)this.__node.graph.CANVASES={}}else if(!globalThis.CANVASES)globalThis.CANVASES={};let canvasOptions=options;options._id?canvasOptions._id=options._id:canvasOptions._id=`canvas${Math.floor(Math.random()*1e15)}`;typeof options.context==="string"?canvasOptions.context=options.canvas.getContext(options.context):canvasOptions.context=options.context;"animating"in options?canvasOptions.animating=options.animating:canvasOptions.animating=true;if(this?.__node?.graph?.CANVASES[canvasOptions._id]){this.__node.graph.run("setDraw",canvasOptions)}else if(globalThis.CANVASES?.[canvasOptions._id]){setDraw(canvasOptions)}else{if(this?.__node?.graph)canvasOptions.graph=this.__node.graph;if(this?.__node?.graph)this.__node.graph.CANVASES[canvasOptions._id]=canvasOptions;else globalThis.CANVASES[canvasOptions._id]=canvasOptions;if(this?.__node?.graph)this.__node.graph.run("makeProxy",canvasOptions._id,canvasOptions.canvas);else proxyElementWorkerRoutes.makeProxy(canvasOptions._id,canvasOptions.canvas);if(options.width)canvasOptions.canvas.width=options.width;if(options.height)canvasOptions.canvas.height=options.height;if(typeof canvasOptions.draw==="string"){canvasOptions.draw=parseFunctionFromText(canvasOptions.draw)}else if(typeof canvasOptions.draw==="function"){canvasOptions.draw=canvasOptions.draw}if(typeof canvasOptions.update==="string"){canvasOptions.update=parseFunctionFromText(canvasOptions.update)}else if(typeof canvasOptions.update==="function"){canvasOptions.update=canvasOptions.update}if(typeof canvasOptions.init==="string"){canvasOptions.init=parseFunctionFromText(canvasOptions.init)}else if(typeof canvasOptions.init==="function"){canvasOptions.init=canvasOptions.init}if(typeof canvasOptions.clear==="string"){canvasOptions.clear=parseFunctionFromText(canvasOptions.clear)}else if(typeof canvasOptions.clear==="function"){canvasOptions.clear=canvasOptions.clear}if(typeof canvasOptions.init==="function")canvasOptions.init(canvasOptions,canvasOptions.canvas,canvasOptions.context);canvasOptions.stop=()=>{stopAnim(canvasOptions._id)};canvasOptions.start=draw=>{startAnim(canvasOptions._id,draw)};canvasOptions.set=settings=>{setDraw(settings,canvasOptions._id)};if(typeof canvasOptions.draw==="function"&&canvasOptions.animating){let draw=(s,canvas,context)=>{if(s.animating){s.draw(s,canvas,context);requestAnimationFrame(()=>{draw(s,canvas,context)})}};draw(canvasOptions,canvasOptions.canvas,canvasOptions.context)}}if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope)return canvasOptions._id;else{const canvascontrols={_id:options._id,width:options.width,height:options.height,draw:props=>{drawFrame(props,options._id)},update:props=>{updateCanvas(props,options._id)},clear:()=>{clearCanvas(options._id)},init:()=>{initCanvas(options._id)},stop:()=>{stopAnim(options._id)},start:()=>{startAnim(options._id)},set:newDrawProps=>{setDraw(newDrawProps,options._id)},terminate:()=>{stopAnim(options._id)}};return canvascontrols}}function drawFrame(props,_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts){if(props)Object.assign(canvasopts,props);if(canvasopts.draw){canvasopts.draw(canvasopts,canvasopts.canvas,canvasopts.context);return _id}}return void 0}function clearCanvas(_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts?.clear){canvasopts.clear(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function initCanvas(_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts?.init){canvasopts.init(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function updateCanvas(input,_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts?.update){canvasopts.update(canvasopts,canvasopts.canvas,canvasopts.context,input);return _id}return void 0}function setProps(props,_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts){Object.assign(canvasopts,props);if(props.width)canvasopts.canvas.width=props.width;if(props.height)canvasopts.canvas.height=props.height;return _id}return void 0}function startAnim(_id,draw){let canvasopts=getCanvas.call(this,_id);canvasopts.animating=true;if(canvasopts&&draw){if(typeof draw==="string")draw=parseFunctionFromText(draw);if(typeof draw==="function"){canvasopts.draw=draw}return _id}if(typeof canvasopts?.draw==="function"){let draw2=(s,canvas,context)=>{if(s.animating){s.draw(s,canvas,context);requestAnimationFrame(()=>{draw2(s,canvas,context)})}};if(typeof canvasopts.clear==="function")canvasopts.clear(canvasopts,canvasopts.canvas,canvasopts.context);if(typeof canvasopts.init==="function")canvasopts.init(canvasopts,canvasopts.canvas,canvasopts.context);draw2(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function stopAnim(_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts){canvasopts.animating=false;if(typeof canvasopts.clear==="function")canvasopts.clear(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function getCanvas(_id){let canvasopts;if(this?.__node?.graph){if(!_id)canvasopts=this.__node.graph.CANVASES?.[Object.keys(this.__node.graph.CANVASES)[0]];else canvasopts=this.__node.graph.CANVASES?.[_id]}else{if(!_id)canvasopts=globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]];else canvasopts=globalThis.CANVASES?.[_id]}return canvasopts}var workerCanvasRoutes={...proxyElementWorkerRoutes,Renderer,transferCanvas,setupCanvas,setDraw,drawFrame,clearCanvas,initCanvas,updateCanvas,setProps,startAnim,stopAnim};function parseFunctionFromText(method=""){let getFunctionBody=methodString=>{return methodString.replace(/^\\W*(function[^{]+\\{([\\s\\S]*)\\}|[^=]+=>[^{]*\\{([\\s\\S]*)\\}|[^=]+=>(.+))/i,"$2$3$4")};let getFunctionHead=methodString=>{let startindex=methodString.indexOf("=>")+1;if(startindex<=0){startindex=methodString.indexOf("){")}if(startindex<=0){startindex=methodString.indexOf(") {")}return methodString.slice(0,methodString.indexOf("{",startindex)+1)};let newFuncHead=getFunctionHead(method);let newFuncBody=getFunctionBody(method);let newFunc;if(newFuncHead.includes("function")){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody)}else{if(newFuncHead.substring(0,6)===newFuncBody.substring(0,6)){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody.substring(newFuncBody.indexOf("{")+1,newFuncBody.length-1))}else{try{newFunc=(0,eval)(newFuncHead+newFuncBody+"}")}catch{}}}return newFunc}var b=class{constructor(e,t,s,h){this.r=e,this.g=t,this.b=s,this.a=h}};var x=class{constructor(){this.scaleX=1,this.scaleY=1,this.offsetX=0,this.offsetY=0,this.loop=false,this._vbuffer=0,this._coord=0,this.visible=true,this.intensity=1,this.xy=new Float32Array([]),this.numPoints=0,this.color=new b(0,0,0,1),this.webglNumPoints=0}};var v=class extends x{constructor(e,t){super(),this.currentIndex=0,this.webglNumPoints=t,this.numPoints=t,this.color=e,this.xy=new Float32Array(2*this.webglNumPoints)}setX(e,t){this.xy[e*2]=t}setY(e,t){this.xy[e*2+1]=t}getX(e){return this.xy[e*2]}getY(e){return this.xy[e*2+1]}lineSpaceX(e,t){for(let s=0;s<this.numPoints;s++)this.setX(s,e+t*s)}arrangeX(){this.lineSpaceX(-1,2/this.numPoints)}constY(e){for(let t=0;t<this.numPoints;t++)this.setY(t,e)}shiftAdd(e){let t=e.length;for(let s=0;s<this.numPoints-t;s++)this.setY(s,this.getY(s+t));for(let s=0;s<t;s++)this.setY(s+this.numPoints-t,e[s])}addArrayY(e){if(this.currentIndex+e.length<=this.numPoints)for(let t=0;t<e.length;t++)this.setY(this.currentIndex,e[t]),this.currentIndex++}replaceArrayY(e){if(e.length==this.numPoints)for(let t=0;t<this.numPoints;t++)this.setY(t,e[t])}};var Y=(f,e,t)=>{let s={x:0,y:0};return s.x=f.x+e.x*t,s.y=f.y+e.y*t,s};var _=f=>P(-f.y,f.x);var w=(f,e)=>{let t=T(f,e);return t=M(t),t};var S=(f,e)=>{let t={x:0,y:0};return t.x=f.x+e.x,t.y=f.y+e.y,t};var R=(f,e)=>f.x*e.x+f.y*e.y;var M=f=>{let e={x:0,y:0},t=f.x*f.x+f.y*f.y;return t>0&&(t=1/Math.sqrt(t),e.x=f.x*t,e.y=f.y*t),e};var P=(f,e)=>{let t={x:0,y:0};return t.x=f,t.y=e,t};var T=(f,e)=>{let t={x:0,y:0};return t.x=f.x-e.x,t.y=f.y-e.y,t};var C=f=>{let e,t={x:0,y:0},s={x:0,y:0},h=[],r=(n,l)=>{h.push({vec2:n,miterLength:l})},a=n=>({x:f[n*2],y:f[n*2+1]});t=w(a(1),a(0)),e=_(t),r(e,1);let o=f.length/2;for(let n=1;n<o-1;n++){let l=a(n-1),i=a(n),u=a(n+1);t=w(i,l),e=_(t),s=w(u,i);let c=F(t,s),g=N(t,c,1);r(c,g)}return t=w(a(o-1),a(o-2)),e=_(t),r(e,1),h};var F=(f,e)=>{let t=S(f,e);return t=M(t),P(-t.y,t.x)};var N=(f,e,t)=>{let s=P(-f.y,f.x);return t/R(e,s)};var d=class extends x{constructor(e,t,s){super(),this.currentIndex=0,this._thicknessRequested=0,this._actualThickness=0,this.webglNumPoints=t*2,this.numPoints=t,this.color=e,this._thicknessRequested=s,this._linePoints=new Float32Array(t*2),this.xy=new Float32Array(2*this.webglNumPoints)}convertToTriPoints(){let e=this._actualThickness/2,t=C(this._linePoints);for(let s=0;s<this.numPoints;s++){let h=this._linePoints[2*s],r=this._linePoints[2*s+1],a={x:h,y:r},o=Y(a,t[s].vec2,t[s].miterLength*e),n=Y(a,t[s].vec2,-t[s].miterLength*e);this.xy[s*4]=o.x,this.xy[s*4+1]=o.y,this.xy[s*4+2]=n.x,this.xy[s*4+3]=n.y}}setX(e,t){this._linePoints[e*2]=t}setY(e,t){this._linePoints[e*2+1]=t}lineSpaceX(e,t){for(let s=0;s<this.numPoints;s++)this.setX(s,e+t*s)}setThickness(e){this._thicknessRequested=e}getThickness(){return this._thicknessRequested}setActualThickness(e){this._actualThickness=e}};var A=class{constructor(e,t){this.debug=false,this.addLine=this.addDataLine,t==null?this.webgl=e.getContext("webgl",{antialias:true,transparent:false}):(this.webgl=e.getContext("webgl",{antialias:t.antialias,transparent:t.transparent,desynchronized:t.deSync,powerPerformance:t.powerPerformance,preserveDrawing:t.preserveDrawing}),this.debug=t.debug==null?false:t.debug),this.log("canvas type is: "+e.constructor.name),this.log(`[webgl-plot]:width=${e.width}, height=${e.height}`),this._linesData=[],this._linesAux=[],this._thickLines=[],this._surfaces=[],this.gScaleX=1,this.gScaleY=1,this.gXYratio=1,this.gOffsetX=0,this.gOffsetY=0,this.gLog10X=false,this.gLog10Y=false,this.webgl.clear(this.webgl.COLOR_BUFFER_BIT),this.webgl.viewport(0,0,e.width,e.height),this._progLine=this.webgl.createProgram(),this.initThinLineProgram(),this.webgl.enable(this.webgl.BLEND),this.webgl.blendFunc(this.webgl.SRC_ALPHA,this.webgl.ONE_MINUS_SRC_ALPHA)}get linesData(){return this._linesData}get linesAux(){return this._linesAux}get thickLines(){return this._thickLines}get surfaces(){return this._surfaces}_drawLines(e){let t=this.webgl;e.forEach(s=>{if(s.visible){t.useProgram(this._progLine);let h=t.getUniformLocation(this._progLine,"uscale");t.uniformMatrix2fv(h,false,new Float32Array([s.scaleX*this.gScaleX*(this.gLog10X?1/Math.log(10):1),0,0,s.scaleY*this.gScaleY*this.gXYratio*(this.gLog10Y?1/Math.log(10):1)]));let r=t.getUniformLocation(this._progLine,"uoffset");t.uniform2fv(r,new Float32Array([s.offsetX+this.gOffsetX,s.offsetY+this.gOffsetY]));let a=t.getUniformLocation(this._progLine,"is_log");t.uniform2iv(a,new Int32Array([this.gLog10X?1:0,this.gLog10Y?1:0]));let o=t.getUniformLocation(this._progLine,"uColor");t.uniform4fv(o,[s.color.r,s.color.g,s.color.b,s.color.a]),t.bufferData(t.ARRAY_BUFFER,s.xy,t.STREAM_DRAW),t.drawArrays(s.loop?t.LINE_LOOP:t.LINE_STRIP,0,s.webglNumPoints)}})}_drawSurfaces(e){let t=this.webgl;e.forEach(s=>{if(s.visible){t.useProgram(this._progLine);let h=t.getUniformLocation(this._progLine,"uscale");t.uniformMatrix2fv(h,false,new Float32Array([s.scaleX*this.gScaleX*(this.gLog10X?1/Math.log(10):1),0,0,s.scaleY*this.gScaleY*this.gXYratio*(this.gLog10Y?1/Math.log(10):1)]));let r=t.getUniformLocation(this._progLine,"uoffset");t.uniform2fv(r,new Float32Array([s.offsetX+this.gOffsetX,s.offsetY+this.gOffsetY]));let a=t.getUniformLocation(this._progLine,"is_log");t.uniform2iv(a,new Int32Array([this.gLog10X?1:0,this.gLog10Y?1:0]));let o=t.getUniformLocation(this._progLine,"uColor");t.uniform4fv(o,[s.color.r,s.color.g,s.color.b,s.color.a]),t.bufferData(t.ARRAY_BUFFER,s.xy,t.STREAM_DRAW),t.drawArrays(t.TRIANGLE_STRIP,0,s.webglNumPoints)}})}_drawTriangles(e){let t=this.webgl;t.bufferData(t.ARRAY_BUFFER,e.xy,t.STREAM_DRAW),t.useProgram(this._progLine);let s=t.getUniformLocation(this._progLine,"uscale");t.uniformMatrix2fv(s,false,new Float32Array([e.scaleX*this.gScaleX*(this.gLog10X?1/Math.log(10):1),0,0,e.scaleY*this.gScaleY*this.gXYratio*(this.gLog10Y?1/Math.log(10):1)]));let h=t.getUniformLocation(this._progLine,"uoffset");t.uniform2fv(h,new Float32Array([e.offsetX+this.gOffsetX,e.offsetY+this.gOffsetY]));let r=t.getUniformLocation(this._progLine,"is_log");t.uniform2iv(r,new Int32Array([0,0]));let a=t.getUniformLocation(this._progLine,"uColor");t.uniform4fv(a,[e.color.r,e.color.g,e.color.b,e.color.a]),t.drawArrays(t.TRIANGLE_STRIP,0,e.xy.length/2)}_drawThickLines(){this._thickLines.forEach(e=>{if(e.visible){let t=Math.min(this.gScaleX,this.gScaleY);e.setActualThickness(e.getThickness()/t),e.convertToTriPoints(),this._drawTriangles(e)}})}update(){this.clear(),this.draw()}draw(){this._drawLines(this.linesData),this._drawLines(this.linesAux),this._drawThickLines(),this._drawSurfaces(this.surfaces)}clear(){this.webgl.clear(this.webgl.COLOR_BUFFER_BIT)}_addLine(e){e._vbuffer=this.webgl.createBuffer(),this.webgl.bindBuffer(this.webgl.ARRAY_BUFFER,e._vbuffer),this.webgl.bufferData(this.webgl.ARRAY_BUFFER,e.xy,this.webgl.STREAM_DRAW),e._coord=this.webgl.getAttribLocation(this._progLine,"coordinates"),this.webgl.vertexAttribPointer(e._coord,2,this.webgl.FLOAT,false,0,0),this.webgl.enableVertexAttribArray(e._coord)}addDataLine(e){this._addLine(e),this.linesData.push(e)}addAuxLine(e){this._addLine(e),this.linesAux.push(e)}addThickLine(e){this._addLine(e),this._thickLines.push(e)}addSurface(e){this._addLine(e),this.surfaces.push(e)}initThinLineProgram(){let e=`\n      attribute vec2 coordinates;\n      uniform mat2 uscale;\n      uniform vec2 uoffset;\n      uniform ivec2 is_log;\n\n      void main(void) {\n         float x = (is_log[0]==1) ? log(coordinates.x) : coordinates.x;\n         float y = (is_log[1]==1) ? log(coordinates.y) : coordinates.y;\n         vec2 line = vec2(x, y);\n         gl_Position = vec4(uscale*line + uoffset, 0.0, 1.0);\n      }`,t=this.webgl.createShader(this.webgl.VERTEX_SHADER);this.webgl.shaderSource(t,e),this.webgl.compileShader(t);let s=`\n         precision mediump float;\n         uniform highp vec4 uColor;\n         void main(void) {\n            gl_FragColor =  uColor;\n         }`,h=this.webgl.createShader(this.webgl.FRAGMENT_SHADER);this.webgl.shaderSource(h,s),this.webgl.compileShader(h),this._progLine=this.webgl.createProgram(),this.webgl.attachShader(this._progLine,t),this.webgl.attachShader(this._progLine,h),this.webgl.linkProgram(this._progLine)}popDataLine(){this.linesData.pop()}removeAllLines(){this._linesData=[],this._linesAux=[],this._thickLines=[],this._surfaces=[]}removeDataLines(){this._linesData=[]}removeAuxLines(){this._linesAux=[]}viewport(e,t,s,h){this.webgl.viewport(e,t,s,h)}log(e){this.debug&&console.log("[webgl-plot]:"+e)}};var y=class{constructor(){this.plots={}}initPlot(e,t){if(t||(t=new A(e.canvas,e.webglOptions)),!e._id)e._id=`plot${Math.floor(Math.random()*1e15)}`;else if(this.plots[e._id]){let l=this.plots[e._id].initial;if(e.lines){for(let i in e.lines)if(l.lines[i]&&Array.isArray(e.lines[i])){let u=e.lines[i];e.lines[i]=l.lines[i]}}e=Object.assign(l,e)}e.overlay&&(typeof e.overlay!="object"&&(e.overlay=document.createElement("canvas"),e.overlay.style.position="absolute",e.overlay.width=e.canvas.width,e.overlay.height=e.canvas.height,e.canvas.appendChild(e.overlay)),e.overlayCtx||(e.overlayCtx=e.overlay.getContext("2d"))),e.width&&(e.canvas.width=e.width,e.canvas.style&&(e.canvas.style.width=e.width+"px"),typeof e.overlay=="object"&&(e.overlay.width=e.width,e.overlay.style&&(e.overlay.style.width=e.width+"px"))),e.height&&(e.canvas.height=e.height,e.canvas.style&&(e.canvas.style.height=e.height+"px"),typeof e.overlay=="object"&&(e.overlay.height=e.height,e.overlay.style&&(e.overlay.style.height=e.height+"px"))),e.lines?.timestamp&&delete e.lines.timestamp,e.lines||(e.lines={});let s={};for(let l in e.lines)s[l]=Object.assign({},s[l]),"viewing"in e.lines[l]||(e.lines[l].viewing=true),s[l].viewing=e.lines[l].viewing,s[l].sps=e.lines[l].sps,s[l].nSec=e.lines[l].nSec,s[l].nPoints=e.lines[l].nPoints,s[l].ymin=e.lines[l].ymin,s[l].ymax=e.lines[l].ymax,s[l].units=e.lines[l].units;let h={plot:t,settings:e,initial:Object.assign(Object.assign({},e),{lines:s}),anim:()=>{t.update()}};this.plots[e._id]=h;let r=0,a=0;Object.keys(e.lines).forEach(l=>{e.lines[l]?.viewing!==false&&a++}),e.nLines=a;let o,n;typeof e.overlay=="object"&&(o=e.overlay,n=e.overlayCtx,n.clearRect(0,0,e.overlay.width,e.overlay.height),n.font=e.overlayFont?e.overlayFont:"1em Courier",n.fillStyle=e.overlayColor?e.overlayColor:"white");for(let l in e.lines){let i=e.lines[l];if(Array.isArray(i)&&(i={values:i},e.lines[l]=i),"viewing"in i||(i.viewing=true),i.color)Array.isArray(i.color)&&(i.color=new b(...i.color));else{let m=y.HSLToRGB(360*(r/a)%360,100,50,1);h.initial.lines[l].color=[...m,1],i.color=new b(...m,1)}let u;if(i.nSec&&i.sps?u=Math.ceil(i.nSec*i.sps):i.nPoints?u=i.nPoints:i.points?u=i.points:e.linePoints?u=e.linePoints:i.values?u=i.values.length:u=1e3,i.points=u,e.lines[l].viewing===false)continue;if((i.width||e.lineWidth)&&i.width!==0){let m=e.lineWidth;m||(m=i.width),i.width?i.line=new d(i.color,u,i.width):e.lineWidth&&(i.line=new d(i.color,u,e.lineWidth)),i.line.lineSpaceX(-1,2/i.line.numPoints)}else i.line=new v(i.color,u),i.line.arrangeX();i.values?.length===i.points?i.values.length!==u&&(i.interpolate?i.values.length>u?i.values=y.downsample(i.values,u):i.values.length<u&&(i.values=y.upsample(i.values,u)):i.values.length>i.points?i.values=i.values.slice(i.values.length-i.points):i.values=[...new Array(i.points-i.values.length).fill(0),...i.values]):Array.isArray(i.values)?i.values.length>u?i.values=i.values.slice(i.values.length-u):i.values.length<u&&(i.values=[...new Array(u-i.values.length).fill(0),...i.values]):i.values=new Array(i.points).fill(0);let c=i.ymin,g=i.ymax;if(c===g?(g=i.values.length<=1e5?Math.max(...i.values):1,c=i.values.length<=1e5?Math.min(...i.values):0):isNaN(g)&&(g=i.values.length<=1e5?Math.max(...i.values):1),isNaN(c)&&(c=i.values.length<=1e5?Math.min(...i.values):0),c>g){let m=c;g=c,c=m}let p=Math.abs(c);if(i.absmax=p>g?p:g,"autoscale"in i||(i.autoscale=true),i.position||(i.position=e.nLines-r-1),i.autoscale?i.autoscale===2?("clamp"in i||(i.clamp=true),i.scaled=y.autoscale(i.values,i.position,a,i.centerZero,c,g,i.clamp)):(i.scaled=i.values,i.line.scaleY=y.getYScalar(i.values,a,i.centerZero,c,g),i.line.offsetY=y.getYOffset(i.position,a,c,i.line.scaleY)):i.scaled=i.values,i.scaled.forEach((m,L)=>i.line.setY(L,m)),i.line instanceof d?t.addThickLine(i.line):i.line instanceof v&&t.addDataLine(i.line),"xAxis"in i||(i.xAxis=true),i.xAxis){i.xColor?Array.isArray(i.xColor)&&(i.xColor=new b(...i.xColor)):i.xColor=new b(1,1,1,.3);let m=new v(i.xColor,2),L=i.autoscale?(r+1)*2/a-1-1/a:0;m.constY(L),m.arrangeX(),m.xy[2]=1,i.x=m,t.addAuxLine(m)}if(a>1&&i.autoscale&&r!==a-1){e.dividerColor?Array.isArray(e.dividerColor)&&(e.dividerColor=new b(...e.dividerColor)):e.dividerColor=new b(1,1,1,1);let m=new v(e.dividerColor,2);m.constY(i.autoscale?(r+1)*2/a-1:1),m.arrangeX(),m.xy[2]=1,i.divider=m,t.addAuxLine(m)}if(typeof e.overlay=="object"&&(i.useOverlay||!("useOverlay"in i))){let m=e.nLines-i.position-1;n.fillText(l,20,o.height*(m+.2)/e.nLines),n.fillText(`${Math.floor(g)===g?g:g?.toFixed(5)} ${i.units?i.units:""}`,o.width-100,o.height*(m+.2)/e.nLines),n.fillText(`${Math.floor(c)===c?c:c?.toFixed(5)} ${i.units?i.units:""}`,o.width-100,o.height*(m+.9)/e.nLines)}r++}return requestAnimationFrame(h.anim),this.plots[e._id]}deinitPlot(e){return typeof e=="string"&&(e=this.plots[e]),e.plot.clear(),e.plot.removeAllLines(),true}reinitPlot(e,t){if(typeof e=="string"){let s=e;e=this.plots[e],t._id||(t._id=s)}if(!!e.plot)return e.plot.clear(),e.plot.removeAllLines(),e.settings.overlayCtx&&e.settings.overlayCtx.clearRect(0,0,e.settings.overlay?.width,e.settings.overlay?.height),this.initPlot(t,e.plot)}getChartSettings(e,t){let s=this.plots[e];if(s){let h=Object.assign({},s.initial);for(let r in s.initial.lines)typeof s.initial.lines[r]?.ymax!="number"&&(h.lines[r].ymax=s.settings.lines[r]?.ymax),typeof s.initial.lines[r]?.ymin!="number"&&(h.lines[r].ymin=s.settings.lines[r]?.ymin),t&&(h.lines[r].values=s.settings.lines[r].values);return delete h.canvas,delete h.overlay,delete h.overlayCtx,h}}update(e,t,s=true){if(typeof e=="string"&&(e=this.plots[e]),!e)return false;if(t){let h=false,r,a;typeof e.settings.overlay=="object"&&(r=e.settings.overlay,a=e.settings.overlayCtx,a.font=e.settings.overlayFont?e.settings.overlayFont:"1em Courier",a.fillStyle=e.settings.overlayColor?e.settings.overlayColor:"white");for(let o in t)if(e.settings.lines[o]&&e.settings.lines[o].line){if(e.settings.lines[o]?.viewing===false)continue;let n=e.settings.lines[o];if(Array.isArray(t[o])&&n.values.length<1e5?(n.values.length===0&&(n.values.length=n.points?n.points:1e3),t[o].length===n.values.length?n.values=t[o]:y.circularBuffer(n.values,t[o])):typeof t[o]=="number"?(n.values.push(t[o]),n.values.shift()):t[o]?.values&&(n.values.length===0&&(n.values.length=n.points?n.points:1e3),t[o].values.length===n.values.length?n.values=t[o].values:y.circularBuffer(n.values,t[o].values)),n.values){n.values.length!==n.points&&(n.interpolate?n.values.length>n.points?n.values=y.downsample(n.values,n.points):n.scaled.length<n.points&&(n.values=y.upsample(n.values,n.points)):n.values.length>n.points?n.values.splice(0,n.values.length-n.points):n.values=new Array(n.points).fill(0).splice(n.points-n.values.length,0,n.values));let l=n.ymin,i=n.ymax;if(l===i?(i=n.values.length<=1e5?Math.max(...n.values):1,l=n.values.length<=1e5?Math.min(...n.values):0):isNaN(i)&&(i=n.values.length<=1e5?Math.max(...n.values):1),isNaN(l)&&(l=n.values.length<=1e5?Math.min(...n.values):0),l>i){let c=l;i=l,l=c}let u=Math.abs(l);if(n.absmax=u>i?u:i,n.autoscale?n.autoscale===2?n.scaled=y.autoscale(n.values,n.position,e.settings.nLines,n.centerZero,l,i,n.clamp):(n.scaled=n.values,n.line.scaleY=y.getYScalar(n.values,e.settings.nLines,n.centerZero,l,i),n.line.offsetY=y.getYOffset(n.position,e.settings.nLines,l,n.line.scaleY)):n.scaled=n.values,n.scaled.forEach((c,g)=>{!n.autoscale&&n.absmax>1?n.line.setY(g,c/n.absmax):n.line.setY(g,c)}),typeof e.settings.overlay=="object"&&(n.useOverlay||!("useOverlay"in n))){let c=e.settings.nLines-n.position-1;a.clearRect(0,r.height*c/e.settings.nLines,r.width,r.height/e.settings.nLines),a.fillText(o,20,r.height*(c+.2)/e.settings.nLines),a.fillText(`${Math.floor(i)===i?i:i?.toFixed(5)} ${n.units?n.units:""}`,r.width-100,r.height*(c+.2)/e.settings.nLines),a.fillText(`${Math.floor(l)===l?l:l?.toFixed(5)} ${n.units?n.units:""}`,r.width-100,r.height*(c+.9)/e.settings.nLines)}}}else e.settings.generateNewLines&&!o.includes("timestamp")&&(Array.isArray(t[o])&&(t[o]={values:t[o]}),!t[o].nSec&&!t[o].nPoints&&!e.settings.linePoints&&(t[o].nPoints=1e3),h=true);if(h)return e.settings.cleanGeneration||Object.keys(e.initial.lines).forEach(o=>{t[o]?t[o]=Object.assign(e.initial.lines[o],t[o]):t[o]=e.initial.lines[o]}),this.reinitPlot(e,{_id:e.settings._id,lines:t}),true}return s&&requestAnimationFrame(e.anim),true}updateLine(e,t,s,h,r,a,o){return e.numPoints!==t.length&&(s?e.numPoints>t.length?t=y.downsample(t,e.numPoints):e.numPoints<t.length&&(t=y.upsample(t,e.numPoints)):t.length>e.numPoints?t=t.slice(t.length-e.numPoints):t=[...new Array(t.length).fill(0),...t]),h&&(t=y.autoscale(t,r,a,o)),t.forEach((n,l)=>e.setY(l,n)),true}static autoscale(e,t=0,s=1,h=false,r,a,o){if(e?.length===0)return e;let n=typeof a=="number"?a:e.length<=1e5?Math.max(...e):1,l=typeof r=="number"?r:e.length<=1e5?Math.min(...e):0,i=1/s,u=1;if(h){let c=Math.max(Math.abs(l),Math.abs(n));return c!==0&&(u=i/c),e.map(g=>(o&&(g<l&&(g=l),g>n&&(g=n)),g*u+(i*(t+1)*2-1-i)))}else return n===l?n!==0?u=i/n:l!==0&&(u=i/Math.abs(l)):u=i/(n-l),e.map(c=>(o&&(c<l&&(c=l),c>n&&(c=n)),2*((c-l)*u-1/(2*s))+(i*(t+1)*2-1-i)))}static getYScalar(e,t=1,s=false,h,r){if(e?.length===0)return e;let a=typeof r=="number"?r:e.length<=1e5?Math.max(...e):1,o=typeof h=="number"?h:e.length<=1e5?Math.min(...e):0,n=1/t,l=1;if(s){let i=Math.max(Math.abs(o),Math.abs(a));return i!==0&&(l=n/i),2*l}else return a===o?a!==0?l=n/a:o!==0&&(l=n/Math.abs(o)):l=n/(a-o),2*l}static getYOffset(e=0,t=1,s=0,h=1){let r=1/t,a=r*(e+1)*2-1-r;return s!==0?a-=s*h+1/t:a-=h+1/t,a}static absmax(e){return Math.max(Math.abs(Math.min(...e)),Math.max(...e))}static downsample(e,t,s=1){if(e.length>t){let h=new Array(t),r=e.length/t,a=e.length-1,o=0,n=0;for(let l=r;l<e.length;l+=r){let i=Math.round(l);i>a&&(i=a);for(let u=o;u<i;u++)h[n]+=e[u];h[n]/=(i-o)*s,n++,o=i}return h}else return e}static upsample(e,t,s=1){var h=function(c,g,p){return(c+(g-c)*p)*s},r=new Array(t),a=(e.length-1)/(t-1);r[0]=e[0];for(var o=1;o<t-1;o++){var n=o*a,l=Math.floor(n),i=Math.ceil(n),u=n-l;r[o]=h(e[l],e[i],u)}return r[t-1]=e[e.length-1],r}static interpolate(e,t,s=1){return e.length>t?y.downsample(e,t,s):e.length<t?y.upsample(e,t,s):e}static HSLToRGB(e,t,s,h=255){t/=100,s/=100;let r=(1-Math.abs(2*s-1))*t,a=r*(1-Math.abs(e/60%2-1)),o=s-r/2,n=0,l=0,i=0;return 0<=e&&e<60?(n=r,l=a,i=0):60<=e&&e<120?(n=a,l=r,i=0):120<=e&&e<180?(n=0,l=r,i=a):180<=e&&e<240?(n=0,l=a,i=r):240<=e&&e<300?(n=a,l=0,i=r):300<=e&&e<360&&(n=r,l=0,i=a),n=(n+o)*h,l=(l+o)*h,i=(i+o)*h,[n,l,i]}static circularBuffer(e,t){if(t.length<e.length){let s=e.slice(t.length),h=e.length;e.splice(0,h,...s,...t)}else if(t.length>e.length){let s=e.length;e.splice(0,s,...t.slice(t.length-s))}else e.splice(0,e.length,...t);return e}static formatDataForCharts(e,t){if(Array.isArray(e)){if(Array.isArray(e[0])){let s={};if(e.forEach((h,r)=>{s[r]=h}),e=s,isNaN(e[0][0]))return}else if(t){if(e={[t]:e},isNaN(e[t][0]))return}else if(e={0:e},isNaN(e[0][0]))return}else if(typeof e=="object"){for(let s in e)if(typeof e[s]=="number"?e[s]=[e[s]]:e[s]?.values&&typeof e[s].values=="number"&&(e[s].values=[e[s].values]),isNaN(e[s][0]))return}else if(typeof e=="string"){let s;if(e.includes(`\\r\n`)){let h=e.split(`\\r\n`);e={},h.forEach((r,a)=>{r.includes("	")?s=r.split("	"):r.includes(",")?s=r.split(","):r.includes("|")&&(s=r.split("|")),s&&s.forEach((o,n)=>{if(o.includes(":")){let[l,i]=o.split(":"),u=parseFloat(i);isNaN(u)||(e[l]=[u])}else{let l=parseFloat(o);isNaN(l)||(e[n]=[l])}})})}else e.includes("	")?s=e.split("	"):e.includes(",")?s=e.split(","):e.includes("|")&&(s=e.split("|"));e={},s&&s.forEach((h,r)=>{if(h.includes(":")){let[a,o]=h.split(":"),n=parseFloat(o);isNaN(n)||(e[a]=[n])}else{let a=parseFloat(h);isNaN(a)||(e[r]=[a])}})}else typeof e=="number"&&(t?e={[t]:[e]}:e={0:[e]});return e}static padTime(e,t,s,h){let r=(e[0]-t)/s/h;return[...new Array(h-e.length).map((o,n)=>t+r*(n+1)),...e]}static interpolateForTime(e,t,s){return y.interpolate(e,Math.ceil(s*t))}};if(typeof WorkerGlobalScope!=="undefined"){globalThis.plotter=new y;const routes={...workerCanvasRoutes};self.onmessage=ev=>{if(ev.data.route){if(Array.isArray(ev.data.args)){routes[ev.data.route](...ev.data.args)}else routes[ev.data.route](ev.data.args)}}}var canvas_worker_default=self;})();\n')], { type: "text/javascript" }));
  var canvas_worker_default = url3;

  // node_modules/graphscript-services/dist/index.services.esm.js
  var __create5 = Object.create;
  var __defProp5 = Object.defineProperty;
  var __getOwnPropDesc5 = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames5 = Object.getOwnPropertyNames;
  var __getProtoOf5 = Object.getPrototypeOf;
  var __hasOwnProp5 = Object.prototype.hasOwnProperty;
  var __commonJS5 = (cb, mod) => function __require4() {
    return mod || (0, cb[__getOwnPropNames5(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __export3 = (target, all) => {
    for (var name3 in all)
      __defProp5(target, name3, { get: all[name3], enumerable: true });
  };
  var __copyProps5 = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames5(from))
        if (!__hasOwnProp5.call(to, key) && key !== except)
          __defProp5(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc5(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM5 = (mod, isNodeMode, target) => (target = mod != null ? __create5(__getProtoOf5(mod)) : {}, __copyProps5(isNodeMode || !mod || !mod.__esModule ? __defProp5(target, "default", { value: mod, enumerable: true }) : target, mod));
  var require_objectid = __commonJS5({ "node_modules/bson-objectid/objectid.js"(exports, module2) {
    var MACHINE_ID = Math.floor(Math.random() * 16777215);
    var index = ObjectID2.index = parseInt(Math.random() * 16777215, 10);
    var pid = (typeof process === "undefined" || typeof process.pid !== "number" ? Math.floor(Math.random() * 1e5) : process.pid) % 65535;
    var BufferCtr = (() => {
      try {
        return _Buffer;
      } catch (_2) {
        try {
          return Buffer;
        } catch (_3) {
          return null;
        }
      }
    })();
    var isBuffer = function(obj) {
      return !!(obj != null && obj.constructor && typeof obj.constructor.isBuffer === "function" && obj.constructor.isBuffer(obj));
    };
    var hexTable = [];
    for (i = 0; i < 256; i++) {
      hexTable[i] = (i <= 15 ? "0" : "") + i.toString(16);
    }
    var i;
    var checkForHexRegExp = new RegExp("^[0-9a-fA-F]{24}$");
    var decodeLookup = [];
    i = 0;
    while (i < 10)
      decodeLookup[48 + i] = i++;
    while (i < 16)
      decodeLookup[65 - 10 + i] = decodeLookup[97 - 10 + i] = i++;
    function ObjectID2(id) {
      if (!(this instanceof ObjectID2))
        return new ObjectID2(id);
      if (id && (id instanceof ObjectID2 || id._bsontype === "ObjectID"))
        return id;
      this._bsontype = "ObjectID";
      if (id == null || typeof id === "number") {
        this.id = this.generate(id);
        return;
      }
      var valid = ObjectID2.isValid(id);
      if (!valid && id != null) {
        throw new Error("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters");
      } else if (valid && typeof id === "string" && id.length === 24) {
        return ObjectID2.createFromHexString(id);
      } else if (id != null && id.length === 12) {
        this.id = id;
      } else if (id != null && typeof id.toHexString === "function") {
        return id;
      } else {
        throw new Error("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters");
      }
    }
    module2.exports = ObjectID2;
    ObjectID2.default = ObjectID2;
    ObjectID2.createFromTime = function(time) {
      time = parseInt(time, 10) % 4294967295;
      return new ObjectID2(hex(8, time) + "0000000000000000");
    };
    ObjectID2.createFromHexString = function(hexString) {
      if (typeof hexString === "undefined" || hexString != null && hexString.length !== 24) {
        throw new Error("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters");
      }
      var data = "";
      var i2 = 0;
      while (i2 < 24) {
        data += String.fromCharCode(decodeLookup[hexString.charCodeAt(i2++)] << 4 | decodeLookup[hexString.charCodeAt(i2++)]);
      }
      return new ObjectID2(data);
    };
    ObjectID2.isValid = function(id) {
      if (id == null)
        return false;
      if (typeof id === "number") {
        return true;
      }
      if (typeof id === "string") {
        return id.length === 12 || id.length === 24 && checkForHexRegExp.test(id);
      }
      if (id instanceof ObjectID2) {
        return true;
      }
      if (isBuffer(id)) {
        return ObjectID2.isValid(id.toString("hex"));
      }
      if (typeof id.toHexString === "function") {
        if (BufferCtr && (id.id instanceof BufferCtr || typeof id.id === "string")) {
          return id.id.length === 12 || id.id.length === 24 && checkForHexRegExp.test(id.id);
        }
      }
      return false;
    };
    ObjectID2.prototype = { constructor: ObjectID2, toHexString: function() {
      if (!this.id || !this.id.length) {
        throw new Error("invalid ObjectId, ObjectId.id must be either a string or a Buffer, but is [" + JSON.stringify(this.id) + "]");
      }
      if (this.id.length === 24) {
        return this.id;
      }
      if (isBuffer(this.id)) {
        return this.id.toString("hex");
      }
      var hexString = "";
      for (var i2 = 0; i2 < this.id.length; i2++) {
        hexString += hexTable[this.id.charCodeAt(i2)];
      }
      return hexString;
    }, equals: function(otherId) {
      if (otherId instanceof ObjectID2) {
        return this.toString() === otherId.toString();
      } else if (typeof otherId === "string" && ObjectID2.isValid(otherId) && otherId.length === 12 && isBuffer(this.id)) {
        return otherId === this.id.toString("binary");
      } else if (typeof otherId === "string" && ObjectID2.isValid(otherId) && otherId.length === 24) {
        return otherId.toLowerCase() === this.toHexString();
      } else if (typeof otherId === "string" && ObjectID2.isValid(otherId) && otherId.length === 12) {
        return otherId === this.id;
      } else if (otherId != null && (otherId instanceof ObjectID2 || otherId.toHexString)) {
        return otherId.toHexString() === this.toHexString();
      } else {
        return false;
      }
    }, getTimestamp: function() {
      var timestamp = new Date();
      var time;
      if (isBuffer(this.id)) {
        time = this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24;
      } else {
        time = this.id.charCodeAt(3) | this.id.charCodeAt(2) << 8 | this.id.charCodeAt(1) << 16 | this.id.charCodeAt(0) << 24;
      }
      timestamp.setTime(Math.floor(time) * 1e3);
      return timestamp;
    }, generate: function(time) {
      if ("number" !== typeof time) {
        time = ~~(Date.now() / 1e3);
      }
      time = parseInt(time, 10) % 4294967295;
      var inc = next();
      return String.fromCharCode(time >> 24 & 255, time >> 16 & 255, time >> 8 & 255, time & 255, MACHINE_ID >> 16 & 255, MACHINE_ID >> 8 & 255, MACHINE_ID & 255, pid >> 8 & 255, pid & 255, inc >> 16 & 255, inc >> 8 & 255, inc & 255);
    } };
    function next() {
      return index = (index + 1) % 16777215;
    }
    function hex(length, n) {
      n = n.toString(16);
      return n.length === length ? n : "00000000".substring(n.length, length) + n;
    }
    var inspect = Symbol && Symbol.for && Symbol.for("nodejs.util.inspect.custom") || "inspect";
    ObjectID2.prototype[inspect] = function() {
      return "ObjectID(" + this + ")";
    };
    ObjectID2.prototype.toJSON = ObjectID2.prototype.toHexString;
    ObjectID2.prototype.toString = ObjectID2.prototype.toHexString;
  } });
  var DataStructures_exports = {};
  __export3(DataStructures_exports, { AuthorizationStruct: () => AuthorizationStruct, ChatroomStruct: () => ChatroomStruct, CoherenceMap: () => CoherenceMap, CoherenceStruct: () => CoherenceStruct, CommentStruct: () => CommentStruct, Data: () => Data, DataStruct: () => DataStruct, DateStruct: () => DateStruct, ECGStruct: () => ECGStruct, EDAStruct: () => EDAStruct, EEGCoordinates: () => EEGCoordinates, EEGStruct: () => EEGStruct, EMGStruct: () => EMGStruct, EventStruct: () => EventStruct, EyeTrackerStruct: () => EyeTrackerStruct, FNIRSStruct: () => FNIRSStruct, FrequencyBandsStruct: () => FrequencyBandsStruct, GroupStruct: () => GroupStruct, HRVStruct: () => HRVStruct, IMUStruct: () => IMUStruct, NotificationStruct: () => NotificationStruct, PPGStruct: () => PPGStruct, ProfileStruct: () => ProfileStruct, ScheduleStruct: () => ScheduleStruct, Struct: () => Struct, eegCoordinates: () => eegCoordinates, setCoordinate: () => setCoordinate, structRegistry: () => structRegistry });
  function Struct(structType = "struct", assignProps = {}, parentUser = { _id: "" }, parentStruct = { structType: "struct", _id: "" }) {
    function randomId3(tag = "") {
      return `${tag + Math.floor(Math.random() + Math.random() * Math.random() * 1e16)}`;
    }
    let struct = { _id: randomId3(structType + "defaultId"), structType, ownerId: parentUser?._id, timestamp: Date.now(), parent: { structType: parentStruct?.structType, _id: parentStruct?._id } };
    if (!struct.ownerId)
      delete struct.ownerId;
    if (!struct?.parent?._id)
      delete struct.parent;
    if (Object.keys(assignProps).length > 0)
      Object.assign(struct, assignProps);
    return struct;
  }
  var eegCoordinates = { FP1: [-21.2, 66.9, 12.1], FPZ: [1.4, 65.1, 11.3], FP2: [24.3, 66.3, 12.5], AF7: [-41.7, 52.8, 11.3], AF3: [-32.7, 48.4, 32.8], AFZ: [1.8, 54.8, 37.9], AF4: [35.1, 50.1, 31.1], AF8: [43.9, 52.7, 9.3], F5: [-51.4, 26.7, 24.7], F3: [-39.7, 25.3, 44.7], F1: [-22.1, 26.8, 54.9], FZ: [0, 26.8, 60.6], F2: [23.6, 28.2, 55.6], F4: [41.9, 27.5, 43.9], F6: [52.9, 28.7, 25.2], F7: [-52.1, 28.6, 3.8], F8: [53.2, 28.4, 3.1], FC5: [-59.1, 3, 26.1], FC3: [-45.5, 2.4, 51.3], FC1: [-24.7, 0.3, 66.4], FCZ: [1, 1, 72.8], FC2: [26.1, 3.2, 66], FC4: [47.5, 4.6, 49.7], FC6: [60.5, 4.9, 25.5], FT9: [-53.8, -2.1, -29.1], FT7: [-59.2, 3.4, -2.1], FT8: [60.2, 4.7, -2.8], FT10: [55, -3.6, -31], T7: [-65.8, -17.8, -2.9], T5: [-61.5, -65.3, 1.1], T3: [-70.2, -21.3, -10.7], T4: [71.9, -25.2, -8.2], T6: [59.3, -67.6, 3.8], T8: [67.4, -18.5, -3.4], C5: [-63.6, -18.9, 25.8], C3: [-49.1, -20.7, 53.2], C1: [-25.1, -22.5, 70.1], CZ: [0.8, -21.9, 77.4], C2: [26.7, -20.9, 69.5], C4: [50.3, -18.8, 53], C6: [65.2, -18, 26.4], CP5: [-61.8, -46.2, 22.5], CP3: [-46.9, -47.7, 49.7], CP1: [-24, -49.1, 66.1], CPZ: [0.7, -47.9, 72.6], CP2: [25.8, -47.1, 66], CP4: [49.5, -45.5, 50.7], CP6: [62.9, -44.6, 24.4], TP9: [-73.6, -46.7, -4], TP7: [-63.6, -44.7, -4], TP8: [64.6, -45.4, -3.7], TP10: [74.6, -47.4, -3.7], P9: [-50.8, -51.3, -37.7], P7: [-55.9, -64.8, 0], P5: [-52.7, -67.1, 19.9], P3: [-41.4, -67.8, 42.4], P1: [-21.6, -71.3, 52.6], PZ: [0.7, -69.3, 56.9], P2: [24.4, -69.9, 53.5], P4: [44.2, -65.8, 42.7], P6: [54.4, -65.3, 20.2], P8: [56.4, -64.4, 0.1], P10: [51, -53.9, -36.5], PO7: [-44, -81.7, 1.6], PO3: [-33.3, -84.3, 26.5], POZ: [0, -87.9, 33.5], PO4: [35.2, -82.6, 26.1], PO8: [43.3, -82, 0.7], O1: [-25.8, -93.3, 7.7], OZ: [0.3, -97.1, 8.7], O2: [25, -95.2, 6.2] };
  function setCoordinate(channelDict, assignTo = {}) {
    if (!eegCoordinates[channelDict.tag] && channelDict.position) {
      eegCoordinates[channelDict.tag] = [channelDict.position.x, channelDict.position.y, channelDict.position.z];
    }
    if (eegCoordinates[channelDict.tag]) {
      let props2 = { channel: "", position: { x: eegCoordinates[channelDict.tag][0], y: eegCoordinates[channelDict.tag][1], z: eegCoordinates[channelDict.tag][2] } };
      return Object.assign(assignTo, props2);
    } else
      return Object.assign(assignTo, channelDict);
  }
  function EEGCoordinates(channelDicts = [], genCoherenceMap = true) {
    let structs2 = [];
    for (let channelDict of channelDicts) {
      let struct = EEGStruct(channelDict);
      structs2.push(struct);
    }
    if (genCoherenceMap) {
      structs2.push(...CoherenceMap({ channelDicts }));
    }
    return structs2;
  }
  function FrequencyBandsStruct(additionalBands = [], assignTo = {}) {
    let bands = { scp: [], delta: [], theta: [], alpha1: [], alpha2: [], beta: [], lowgamma: [], highgamma: [] };
    additionalBands.forEach((band) => bands[band] = []);
    return Object.assign(assignTo, bands);
  }
  function EEGStruct(tag = "", assignProps = {}, parentUser = { _id: "" }, parentStruct = { structType: "struct", _id: "" }) {
    let bands = FrequencyBandsStruct();
    let props2 = { tag, position: { x: 0, y: 0, z: 0 }, count: 0, times: [], raw: [], filtered: [], fftCount: 0, fftTimes: [], ffts: [], slices: JSON.parse(JSON.stringify(bands)), means: JSON.parse(JSON.stringify(bands)), startTime: Date.now() };
    let struct = Struct("eeg", props2, parentUser, parentStruct);
    if (tag)
      setCoordinate(props2, struct);
    return Object.assign(struct, assignProps);
  }
  function CoherenceStruct(coords = { 0: EEGStruct("FP1"), 1: EEGStruct("FP2") }, assignProps = {}, parentUser = { _id: "" }, parentStruct = { structType: "struct", _id: "" }) {
    let bands = FrequencyBandsStruct();
    let props2 = { tag: coords[0]?.tag + "::" + coords[1]?.tag, x0: coords[0]?.position?.x, y0: coords[0]?.position?.y, z0: coords[0]?.position?.z, x1: coords[1]?.position?.x, y1: coords[1]?.position?.y, z1: coords[1]?.position?.z, fftCount: 0, fftTimes: [], ffts: [], slices: JSON.parse(JSON.stringify(bands)), means: JSON.parse(JSON.stringify(bands)), startTime: Date.now() };
    let struct = Struct("coherence", props2, parentUser, parentStruct);
    return Object.assign(struct, assignProps);
  }
  function CoherenceMap(opts = { channelDicts: [{ ch: 0, tag: "FP1", analyze: false }, { ch: 1, tag: "FP2", analyze: false }], taggedOnly: true }, _2 = {}, parentUser = { _id: "" }, parentStruct = { structType: "struct", _id: "" }) {
    var cmap = [];
    var l = 1, k = 0;
    for (var i = 0; i < opts.channelDicts.length * (opts.channelDicts.length + 1) / 2 - opts.channelDicts.length; i++) {
      if (opts.taggedOnly === false || opts.taggedOnly === true && (opts.channelDicts[k].tag !== null && opts.channelDicts[k + l].tag !== null && (opts.channelDicts[k].tag !== "other" && opts.channelDicts[k + l].tag !== "other") && (opts.channelDicts[k].analyze === true && opts.channelDicts[k + l].analyze === true))) {
        var coord0 = EEGStruct(opts.channelDicts[k].tag);
        var coord1 = EEGStruct(opts.channelDicts[k + l].tag);
        cmap.push(CoherenceStruct({ 0: coord0, 1: coord1 }, {}, parentUser, parentStruct));
      }
      l++;
      if (l + k === opts.channelDicts.length) {
        k++;
        l = 1;
      }
    }
    return cmap;
  }
  function FNIRSStruct(tag = "", assignProps = {}, parentUser = { _id: "" }, parentStruct = { structType: "struct", _id: "" }) {
    let props2 = { tag, position: { x: 0, y: 0, z: 0 }, count: 0, times: [], red: [], ir: [], ir2: [], ambient: [], ratio: [], temp: [], beat_detect: { beats: [], breaths: [], rir: [], rir2: [], drir_dt: [], localmins: [], localmaxs: [], val_dists: [], peak_dists: [], localmins2: [], localmaxs2: [], val_dists2: [], peak_dists2: [] }, startTime: Date.now() };
    let struct = Struct("fnirs", props2, parentUser, parentStruct);
    if (tag)
      setCoordinate(props2, struct);
    return Object.assign(struct, assignProps);
  }
  function IMUStruct(tag = "", assignProps = {}, parentUser = { _id: "" }, parentStruct = { structType: "struct", _id: "" }) {
    let props2 = { tag, Ax: [], Ay: [], Az: [], Gx: [], Gy: [], Gz: [], startTime: Date.now() };
    let struct = Struct("imu", props2, parentUser, parentStruct);
    if (tag)
      setCoordinate(props2, struct);
    return Object.assign(struct, assignProps);
  }
  function EyeTrackerStruct(tag = "", assignProps = {}, parentUser = { _id: "" }, parentStruct = { structType: "struct", _id: "" }) {
    let props2 = { tag, count: 0, times: [], x: [], y: [], smax: [], smay: [], startTime: Date.now() };
    let struct = Struct("eyetracker", props2, parentUser, parentStruct);
    return Object.assign(struct, assignProps);
  }
  function ECGStruct(tag = "", assignProps = {}, parentUser = { _id: "" }, parentStruct = { structType: "struct", _id: "" }) {
    let props2 = { tag, count: 0, times: [], raw: [], filtered: [], bpm: [], hrv: [], startTime: Date.now() };
    let struct = Struct("ecg", props2, parentUser, parentStruct);
    return Object.assign(struct, assignProps);
  }
  function EDAStruct(_2 = "", __ = {}, ___ = { _id: "" }, ____ = { structType: "struct", _id: "" }) {
  }
  function PPGStruct(tag = "", assignProps = {}, parentUser = { _id: "" }, parentStruct = { structType: "struct", _id: "" }) {
    let struct = FNIRSStruct(tag, parentUser, parentStruct, assignProps);
    struct.structType = "ppg";
    return struct;
  }
  function HRVStruct(tag = "", assignProps = {}, parentUser = { _id: "" }, parentStruct = { structType: "struct", _id: "" }) {
    let struct = ECGStruct(tag, parentUser, parentStruct, assignProps);
    struct.structType = "hrv";
    return struct;
  }
  function EMGStruct(tag = "", assignProps = {}, parentUser = { _id: "" }, parentStruct = { structType: "struct", _id: "" }) {
    let struct = EEGStruct(tag, parentUser, parentStruct, assignProps);
    struct.structType = "emg";
    return struct;
  }
  function ProfileStruct(tag = "", assignProps = {}, parentUser = { _id: "" }, parentStruct = { structType: "struct", _id: "" }) {
    let props2 = { tag, name: "", username: "", firstName: "", lastName: "", email: "", phone: "", sex: "", birthday: "", type: "", userRoles: {}, socials: {}, data: {}, id: "" };
    let struct = Struct("profile", props2, parentUser, parentStruct);
    return Object.assign(struct, assignProps);
  }
  function AuthorizationStruct(tag = "", assignProps = {}, parentUser = { _id: "" }, parentStruct = { structType: "struct", _id: "" }) {
    let props2 = { tag, authorizedId: "", authorizedName: "", authorizerId: "", authorizerName: "", authorizations: {}, structs: {}, excluded: {}, groups: {}, status: "PENDING", expires: false, associatedAuthId: "" };
    let struct = Struct("authorization", props2, parentUser, parentStruct);
    return Object.assign(struct, assignProps);
  }
  function GroupStruct(tag = "", assignProps = {}, parentUser = { _id: "" }, parentStruct = { structType: "struct", _id: "" }) {
    let props2 = { tag, name: "", details: "", admins: {}, peers: {}, clients: {}, users: {} };
    let struct = Struct("group", props2, parentUser, parentStruct);
    return Object.assign(struct, assignProps);
  }
  function Data(type, data) {
    return { type, data, timestamp: Date.now() };
  }
  function DataStruct(tag = "", assignProps = {}, parentUser = { _id: "" }, parentStruct = { structType: "struct", _id: "" }) {
    let props2 = { tag, title: "", author: "", expires: false, type: "", data: new Array() };
    let struct = Struct("data", props2, parentUser, parentStruct);
    return Object.assign(struct, assignProps);
  }
  function EventStruct(tag = "", assignProps = {}, parentUser = { _id: "" }, parentStruct = { structType: "struct", _id: "" }) {
    let props2 = { tag, event: "", author: "", startTime: "", endTime: "", grade: 0, notes: "", attachments: new Array(), users: {} };
    let struct = Struct("event", props2, parentUser, parentStruct);
    return Object.assign(struct, assignProps);
  }
  function ChatroomStruct(tag = "", assignProps = {}, parentUser = { _id: "" }, parentStruct = { structType: "struct", _id: "" }) {
    let props2 = { tag, message: "", topic: "", author: "", attachments: new Array(), comments: new Array(), replies: new Array(), users: {}, audioChatActive: false, videoChatActive: false };
    let struct = Struct("chatroom", props2, parentUser, parentStruct);
    return Object.assign(struct, assignProps);
  }
  function CommentStruct(tag = "", assignProps = {}, parentUser = { _id: "" }, parentStruct = { structType: "struct", _id: "" }) {
    let props2 = { tag, author: "", replyTo: "", message: "", rating: 0, replies: new Array(), users: {}, attachments: new Array() };
    let struct = Struct("comment", props2, parentUser, parentStruct);
    return Object.assign(struct, assignProps);
  }
  function NotificationStruct(tag = "", assignProps = {}, parentUser = { _id: "" }, parentStruct = { structType: "struct", _id: "" }) {
    let props2 = { tag, note: "", parentUserId: "" };
    let struct = Struct("notification", props2, parentUser, parentStruct);
    return Object.assign(struct, assignProps);
  }
  function ScheduleStruct(tag = "", assignProps = {}, parentUser = { _id: "" }, parentStruct = { structType: "struct", _id: "" }) {
    let props2 = { tag, title: "", author: "", attachments: new Array(), dates: new Array() };
    let struct = Struct("schedule", props2, parentUser, parentStruct);
    return Object.assign(struct, assignProps);
  }
  function DateStruct(tag = "", assignProps = {}, parentUser = { _id: "" }, parentStruct = { structType: "struct", _id: "" }) {
    let props2 = { tag, timeSet: "", notes: "", recurs: "NEVER", attachments: new Array() };
    let struct = Struct("date", props2, parentUser, parentStruct);
    return Object.assign(struct, assignProps);
  }
  var structRegistry = { Struct, EEGStruct, FNIRSStruct, CoherenceStruct, CoherenceMap, FrequencyBandsStruct, IMUStruct, EyeTrackerStruct, ECGStruct, EDAStruct, PPGStruct, HRVStruct, EMGStruct, ProfileStruct, AuthorizationStruct, GroupStruct, DataStruct, EventStruct, ChatroomStruct, CommentStruct, NotificationStruct, ScheduleStruct, DateStruct };
  var EventHandler3 = class {
    constructor(data) {
      this.pushToState = {};
      this.data = {};
      this.triggers = {};
      this.setState = (updateObj) => {
        Object.assign(this.data, updateObj);
        let props2 = Object.getOwnPropertyNames(updateObj);
        for (const prop of props2) {
          if (this.triggers[prop]) {
            let fn = (obj) => {
              obj.onchange(this.data[prop]);
            };
            this.triggers[prop].forEach(fn);
          }
        }
        return this.data;
      };
      this.setValue = (key, value) => {
        this.data[key] = value;
        this.triggerEvent(key, value);
      };
      this.triggerEvent = (key, value) => {
        if (this.triggers[key]) {
          let fn = (obj) => {
            obj.onchange(value);
          };
          this.triggers[key].forEach(fn);
        }
      };
      this.subscribeEvent = (key, onchange, refObject, refKey) => {
        if (key) {
          if (refObject && refKey && !this.triggers[key]) {
            Object.defineProperty(this.data, key, { get: () => {
              return refObject[refKey];
            }, set: (value) => {
              refObject[refKey] = value;
            }, enumerable: true, configurable: true });
          }
          if (!this.triggers[key]) {
            this.triggers[key] = [];
          }
          let l = this.triggers[key].length;
          this.triggers[key].push({ sub: l, onchange });
          return this.triggers[key].length - 1;
        } else
          return void 0;
      };
      this.unsubscribeEvent = (key, sub) => {
        let triggers = this.triggers[key];
        if (triggers) {
          if (!sub) {
            delete this.triggers[key];
            delete this.data[key];
          } else {
            let sub2 = void 0;
            let obj = triggers.find((o, i) => {
              if (o.sub === sub2) {
                sub2 = i;
                return true;
              }
            });
            if (obj)
              triggers.splice(sub2, 1);
            if (Object.keys(triggers).length === 0) {
              delete this.triggers[key];
              delete this.data[key];
            }
            if (this.onRemoved)
              this.onRemoved(obj);
            return true;
          }
        }
      };
      this.subscribeEventOnce = (key, onchange) => {
        let sub;
        let changed = (value) => {
          onchange(value);
          this.unsubscribeEvent(key, sub);
        };
        sub = this.subscribeEvent(key, changed);
      };
      this.getEvent = (key, sub) => {
        for (const s in this.triggers[key]) {
          if (this.triggers[key][s].sub === sub)
            return this.triggers[key][s];
        }
      };
      this.getSnapshot = () => {
        const snapshot = {};
        for (const key in this.data) {
          snapshot[key] = this.data[key];
        }
      };
      if (typeof data === "object")
        this.data = data;
    }
  };
  var state4 = new EventHandler3();
  var import_bson_objectid = __toESM5(require_objectid());
  var Systems = { collision: { setupEntities: function(entities) {
    for (const key in entities) {
      const entity = entities[key];
      if (entity.components) {
        if (!entity.components[this.__node.tag])
          continue;
      }
      this.setupEntity(entity);
    }
    return entities;
  }, setupEntity: function(entity) {
    if (!("collisionEnabled" in entity))
      entity.collisionEnabled = true;
    if (!entity.collisionType)
      entity.collisionType = "sphere";
    if (!entity.collisionRadius)
      entity.collisionRadius = 1;
    if (!entity.collisionBoundsScale)
      entity.collisionBoundsScale = { x: 1, y: 1, z: 1 };
    if (!entity.colliding)
      entity.colliding = {};
    if (!entity.position)
      entity.position = { x: 0, y: 0, z: 0 };
    return entity;
  }, __node: { tag: "collision" }, __operator: function(entities) {
    let keys = this.entityKeys;
    for (let i = 0; i < keys.length; i++) {
      const entity1 = entities[keys[i]];
      if (entity1.components) {
        if (!entity1.components[this.__node.tag] || !entity1.collisionEnabled)
          continue;
      }
      if (!entity1.collisionEnabled)
        continue;
      for (let j = 0; j < keys.length; j++) {
        if (i === j)
          continue;
        const entity2 = entities[keys[j]];
        if (entity2.components) {
          if (!entity2.components[this.__node.tag])
            continue;
        }
        if (!entity2.collisionEnabled)
          continue;
        let colliding = Systems.collision.collisionCheck(entity1, entity2);
        if (colliding !== false) {
          if (!entity1.colliding)
            entity1.colliding = {};
          if (!entity2.colliding)
            entity2.colliding = {};
          entity1.colliding[entity2.__node.tag] = colliding;
          entity2.colliding[entity1.__node.tag] = colliding;
        }
      }
    }
    return entities;
  }, collisionCheck: (body1, body2) => {
    if (body1.collisionEnabled === false || body2.collisionEnabled === false)
      return false;
    const dist = Systems.collision.distance(body1.position, body2.position);
    if (dist < Math.max(...Object.values(body1.collisionBoundsScale)) * body1.collisionRadius + Math.max(...Object.values(body2.collisionBoundsScale)) * body2.collisionRadius) {
      let isColliding = false;
      if (body1.collisionType === "sphere") {
        if (body2.collisionType === "sphere") {
          isColliding = Systems.collision.sphereCollisionCheck(body1, body2, dist);
        } else if (body2.collisionType === "box") {
          isColliding = Systems.collision.sphereBoxCollisionCheck(body1, body2, dist);
        } else if (body2.collisionType === "point") {
          isColliding = Systems.collision.isPointInsideSphere(body2.position, body1, dist);
        }
      } else if (body1.collisionType === "box") {
        if (body2.collisionType === "sphere") {
          isColliding = Systems.collision.sphereBoxCollisionCheck(body2, body1, dist);
        } else if (body2.collisionType === "box") {
          isColliding = Systems.collision.boxCollisionCheck(body1, body2);
        } else if (body2.collisionType === "point") {
          isColliding = Systems.collision.isPointInsideBox(body1.position, body1);
        }
      } else if (body1.collisionType === "point") {
        if (body2.collisionType === "sphere") {
          isColliding = Systems.collision.isPointInsideSphere(body1.position, body2, dist);
        } else if (body2.collisionType === "box") {
          isColliding = Systems.collision.isPointInsideBox(body1.position, body2);
        }
      }
      if (isColliding)
        return dist;
    }
    return false;
  }, sphereCollisionCheck: (body1, body2, dist) => {
    if (dist === void 0)
      dist = Systems.collision.distance(body1.position, body2.position);
    return dist < body1.collisionRadius + body2.collisionRadius;
  }, boxCollisionCheck: (body1, body2) => {
    let body1minX = (body1.position.x - body1.collisionRadius) * body1.collisionBoundsScale.x;
    let body1maxX = (body1.position.x + body1.collisionRadius) * body1.collisionBoundsScale.x;
    let body1minY = (body1.position.y - body1.collisionRadius) * body1.collisionBoundsScale.y;
    let body1maxY = (body1.position.y + body1.collisionRadius) * body1.collisionBoundsScale.y;
    let body1minZ = (body1.position.z - body1.collisionRadius) * body1.collisionBoundsScale.z;
    let body1maxZ = (body1.position.z + body1.collisionRadius) * body1.collisionBoundsScale.z;
    let body2minX = (body2.position.x - body2.collisionRadius) * body1.collisionBoundsScale.x;
    let body2maxX = (body2.position.x + body2.collisionRadius) * body1.collisionBoundsScale.x;
    let body2minY = (body2.position.y - body2.collisionRadius) * body1.collisionBoundsScale.y;
    let body2maxY = (body2.position.y + body2.collisionRadius) * body1.collisionBoundsScale.y;
    let body2minZ = (body2.position.z - body2.collisionRadius) * body1.collisionBoundsScale.z;
    let body2maxZ = (body2.position.z + body2.collisionRadius) * body1.collisionBoundsScale.z;
    return (body1maxX <= body2maxX && body1maxX >= body2minX || body1minX <= body2maxX && body1minX >= body2minX) && (body1maxY <= body2maxY && body1maxY >= body2minY || body1minY <= body2maxY && body1minY >= body2minY) && (body1maxZ <= body2maxZ && body1maxZ >= body2minZ || body1minZ <= body2maxZ && body1minZ >= body2minZ);
  }, sphereBoxCollisionCheck: (sphere, box, dist) => {
    let boxMinX = (box.position.x - box.collisionRadius) * box.collisionBoundsScale.x;
    let boxMaxX = (box.position.x + box.collisionRadius) * box.collisionBoundsScale.x;
    let boxMinY = (box.position.y - box.collisionRadius) * box.collisionBoundsScale.y;
    let boxMaxY = (box.position.y + box.collisionRadius) * box.collisionBoundsScale.y;
    let boxMinZ = (box.position.z - box.collisionRadius) * box.collisionBoundsScale.z;
    let boxMaxZ = (box.position.z + box.collisionRadius) * box.collisionBoundsScale.z;
    let clamp = { x: Math.max(boxMinX, Math.min(sphere.position.x, boxMaxX)), y: Math.max(boxMinY, Math.min(sphere.position.y, boxMaxY)), z: Math.max(boxMinZ, Math.min(sphere.position.z, boxMaxZ)) };
    if (dist === void 0)
      dist = Systems.collision.distance(sphere.position, clamp);
    return dist > sphere.collisionRadius;
  }, isPointInsideSphere: (point, sphere, dist) => {
    if (dist === void 0)
      dist = Systems.collision.distance(point, sphere.position);
    return dist < sphere.collisionRadius;
  }, isPointInsideBox: (point, box) => {
    let boxminX = (box.position.x - box.collisionRadius) * box.collisionBoundsScale.x;
    let boxmaxX = (box.position.x + box.collisionRadius) * box.collisionBoundsScale.x;
    let boxminY = (box.position.y - box.collisionRadius) * box.collisionBoundsScale.x;
    let boxmaxY = (box.position.y + box.collisionRadius) * box.collisionBoundsScale.x;
    let boxminZ = (box.position.z - box.collisionRadius) * box.collisionBoundsScale.x;
    let boxmaxZ = (box.position.z + box.collisionRadius) * box.collisionBoundsScale.x;
    return point.x >= boxminX && point.x <= boxmaxX && (point.y >= boxminY && point.y <= boxmaxY) && (point.z >= boxminZ && point.z <= boxmaxZ);
  }, closestPointOnLine: (point, lineStart, lineEnd) => {
    let a = { x: lineEnd.x - lineStart.x, y: lineEnd.y - lineStart.y, z: lineEnd.z - lineStart.z };
    let b2 = { x: lineStart.x - point.x, y: lineStart.y - point.y, z: lineStart.z - point.z };
    let c = { x: lineEnd.x - point.x, y: lineEnd.y - point.y, z: lineEnd.z - point.z };
    let bdota = Systems.collision.dot(b2, a);
    if (bdota <= 0)
      return lineStart;
    let cdota = Systems.collision.dot(c, a);
    if (cdota <= 0)
      return lineEnd;
    let _bdotapluscdota = 1 / (bdota + cdota);
    return { x: lineStart.x + (lineEnd.x - lineStart.x) * bdota * _bdotapluscdota, y: lineStart.y + (lineEnd.y - lineStart.y) * bdota * _bdotapluscdota, z: lineStart.z + (lineEnd.z - lineStart.z) * bdota * _bdotapluscdota };
  }, closestPointOnPolygon: (point, t0, t1, t22) => {
    let n = Systems.collision.calcNormal(t0, t1, t22);
    let dist = Systems.collision.dot(point, n) - Systems.collision.dot(t0, n);
    let projection = Systems.collision.vecadd(point, Systems.collision.vecscale(n, -dist));
    let v0x = t22[0] - t0[0];
    let v0y = t22[1] - t0[1];
    let v0z = t22[2] - t0[2];
    let v1x = t1[0] - t0[0];
    let v1y = t1[1] - t0[1];
    let v1z = t1[2] - t0[2];
    let v2x = projection[0] - t0[0];
    let v2y = projection[1] - t0[1];
    let v2z = projection[2] - t0[2];
    let dot00 = v0x * v0x + v0y * v0y + v0z * v0z;
    let dot01 = v0x * v1x + v0y * v1y + v0z * v1z;
    let dot02 = v0x * v2x + v0y * v2y + v0z * v2z;
    let dot11 = v1x * v1x + v1y * v1y + v1z * v1z;
    let dot12 = v1x * v2x + v1y * v2y + v1z * v2z;
    let denom = dot00 * dot11 - dot01 * dot01;
    if (Math.abs(denom) < 1e-30) {
      return void 0;
    }
    let _denom = 1 / denom;
    let u3 = (dot11 * dot02 - dot01 * dot12) * _denom;
    let v2 = (dot00 * dot12 - dot01 * dot02) * _denom;
    if (u3 >= 0 && v2 >= 0 && u3 + v2 < 1) {
      return projection;
    } else
      return void 0;
  }, calcNormal: (t0, t1, t22, positive = true) => {
    var QR = Systems.collision.makeVec(t0, t1);
    var QS = Systems.collision.makeVec(t0, t22);
    if (positive === true) {
      return Systems.collision.normalize(Systems.collision.cross3D(QR, QS));
    } else {
      return Systems.collision.normalize(Systems.collision.cross3D(QS, QR));
    }
  }, dot: (v1, v2) => {
    let dot = 0;
    for (const key in v1) {
      dot += v1[key] * v2[key];
    }
    return dot;
  }, makeVec(p1, p2) {
    return { x: p2.x - p1.x, y: p2.y - p1.y, z: p2.z - p1.z };
  }, vecadd: (v1, v2) => {
    let result = Object.assign({}, v1);
    for (const key in result) {
      result[key] += v2[key];
    }
    return result;
  }, vecsub: (v1, v2) => {
    let result = Object.assign({}, v1);
    for (const key in result) {
      result[key] -= v2[key];
    }
    return result;
  }, vecmul: (v1, v2) => {
    let result = Object.assign({}, v1);
    for (const key in result) {
      result[key] *= v2[key];
    }
    return result;
  }, vecdiv: (v1, v2) => {
    let result = Object.assign({}, v1);
    for (const key in result) {
      result[key] /= v2[key];
    }
    return result;
  }, vecscale: (v1, scalar) => {
    let result = Object.assign({}, v1);
    for (const key in result) {
      result[key] *= scalar;
    }
    return result;
  }, distance: (v1, v2) => {
    let distance = 0;
    for (const key in v1) {
      distance += Math.pow(v1[key] - v2[key], 2);
    }
    return Math.sqrt(distance);
  }, magnitude: (v2) => {
    let magnitude = 0;
    for (const key in v2) {
      magnitude += v2[key] * v2[key];
    }
    return Math.sqrt(magnitude);
  }, normalize: (v2) => {
    let magnitude = Systems.collision.magnitude(v2);
    let _mag = magnitude ? 1 / magnitude : 0;
    let vn = Object.assign({}, v2);
    for (const key in v2) {
      vn[key] = v2[key] * _mag;
    }
    return vn;
  }, distance3D(v1, v2) {
    return Math.sqrt((v1.x - v2.x) * (v1.x - v2.x) + (v1.y - v2.y) * (v1.y - v2.y) + (v1.z - v2.z) * (v1.z - v2.z));
  }, cross3D(v1, v2) {
    return { x: v1.y * v2.z - v1.z * v2.y, y: v1.z * v2.x - v1.x * v2.z, z: v1.x * v2.y - v1.y * v2.x };
  }, nearestNeighborSearch(entities, isWithinRadius = 1e15) {
    var tree2 = {};
    ;
    for (const key in entities) {
      let newnode = { tag: key, position: void 0, neighbors: [] };
      newnode.position = entities[key].position;
      tree2[key] = newnode;
    }
    for (const i in tree2) {
      for (const j in tree2) {
        var dist = Systems.collision.distance3D(tree2[i].position, tree2[j].position);
        if (dist < isWithinRadius) {
          var newNeighbori = { tag: j, position: entities[j].position, dist };
          tree2[i].neighbors.push(newNeighbori);
          var newNeighborj = { tag: j, position: entities[i].position, dist };
          tree2[j].neighbors.push(newNeighborj);
        }
      }
      tree2[i].neighbors.sort(function(a, b2) {
        return a.dist - b2.dist;
      });
    }
    return tree2;
  }, generateBoundingVolumeTree(entities, mode = "octree", withinRadius = 1e15, minEntities = 3) {
    let dynamicBoundingVolumeTree = { proto: { parent: void 0, children: {}, entities: {}, collisionType: "box", collisionRadius: 1, collisionBoundsScale: { x: 1, y: 1, z: 1 }, position: { x: 0, y: 0, z: 0 } }, tree: {} };
    let maxX, maxY, maxZ;
    let minX = 0, minY = 0, minZ = 0;
    let positions = {};
    let minRadius = withinRadius;
    for (const key in entities) {
      const body = entities[key];
      let xx = body.position.x + body.collisionRadius * body.collisionBoundsScale.x;
      let yy = body.position.y + body.collisionRadius * body.collisionBoundsScale.y;
      let zz = body.position.z + body.collisionRadius * body.collisionBoundsScale.z;
      if (maxX < xx)
        maxX = xx;
      if (minX > xx)
        minX = xx;
      if (maxY < yy)
        maxY = yy;
      if (minY > yy)
        minY = yy;
      if (maxZ < zz)
        maxZ = zz;
      if (minZ > zz)
        minZ = zz;
      if (minRadius > body.collisionRadius)
        minRadius = body.collisionRadius;
      positions[key] = body.position;
    }
    ;
    let head = JSON.parse(JSON.stringify(dynamicBoundingVolumeTree.proto));
    let boxpos = { x: (maxX + minX) * 0.5, y: (maxY + minY) * 0.5, z: (maxZ + minZ) * 0.5 };
    let boxbounds = { x: maxX - boxpos.x, y: maxY - boxpos.y, z: maxZ - boxpos.z };
    head.position = boxpos;
    head.collisionBoundsScale = boxbounds;
    head.entities = entities;
    dynamicBoundingVolumeTree.tree = head;
    minRadius *= 2;
    if (mode === "octree") {
      let genOct = function(parentPos, halfbounds) {
        let oct1 = { x: parentPos.x + halfbounds.x, y: parentPos.y + halfbounds.y, z: parentPos.z + halfbounds.z };
        let oct2 = { x: parentPos.x - halfbounds.x, y: parentPos.y + halfbounds.y, z: parentPos.z + halfbounds.z };
        let oct3 = { x: parentPos.x + halfbounds.x, y: parentPos.y - halfbounds.y, z: parentPos.z + halfbounds.z };
        let oct4 = { x: parentPos.x + halfbounds.x, y: parentPos.y + halfbounds.y, z: parentPos.z - halfbounds.z };
        let oct5 = { x: parentPos.x - halfbounds.x, y: parentPos.y - halfbounds.y, z: parentPos.z + halfbounds.z };
        let oct6 = { x: parentPos.x - halfbounds.x, y: parentPos.y + halfbounds.y, z: parentPos.z - halfbounds.z };
        let oct7 = { x: parentPos.x + halfbounds.x, y: parentPos.y - halfbounds.y, z: parentPos.z - halfbounds.z };
        let oct8 = { x: parentPos.x - halfbounds.x, y: parentPos.y - halfbounds.y, z: parentPos.z - halfbounds.z };
        return [oct1, oct2, oct3, oct4, oct5, oct6, oct7, oct8];
      }, genOctTree = function(head2) {
        let halfbounds = { x: head2.collisionBoundsScale.x * 0.5, y: head2.collisionBoundsScale.y * 0.5, z: head2.collisionBoundsScale.z * 0.5 };
        let octPos = genOct(head2.position, halfbounds);
        let check = Object.assign({}, head2.bodies);
        for (let i = 0; i < 8; i++) {
          let octquadrant = Object.assign(JSON.parse(JSON.stringify(dynamicBoundingVolumeTree.proto)), { position: octPos[i], collisionBoundsScale: halfbounds });
          octquadrant.parent = head2;
          for (const j in check) {
            let collided = Systems.collision.collisionCheck(check[j], octquadrant);
            if (collided) {
              octquadrant.entities[j] = check[j];
              delete check[j];
            }
          }
          if (Object.keys(octquadrant.entities).length > minEntities - 1) {
            head2.children[i] = octquadrant;
            octquadrant.parent = head2;
            if (Object.keys(octquadrant.entities).length > minEntities && octquadrant.collisionRadius * 0.5 > minRadius) {
              genOctTree(octquadrant);
            }
          }
        }
      };
      genOctTree(head);
      return head;
    } else {
      let tree2 = Systems.collision.nearestNeighborSearch(positions, withinRadius);
      let keys = Object.keys(tree2);
      let tag = keys[Math.floor(Math.random() * keys.length)];
      let searching = true;
      let count = 0;
      let genBoundingBoxLevel = (tree22, volumes) => {
        let newVolumes = {};
        let foundidxs = {};
        let treekeys = Object.keys(tree22);
        while (searching && count < treekeys.length) {
          let node = tree22[tag];
          let i = 0;
          let j = 0;
          let ux = positions[node.tag].x - volumes[node.tag].collisionBoundsScale.x, uy = positions[node.tag].y - volumes[node.tag].collisionBoundsScale.y, uz = positions[node.tag].z - volumes[node.tag].collisionBoundsScale.z, mx = positions[node.tag].x + volumes[node.tag].collisionBoundsScale.x, my = positions[node.tag].y + volumes[node.tag].collisionBoundsScale.y, mz = positions[node.tag].z + volumes[node.tag].collisionBoundsScale.z;
          let newvolume = JSON.parse(JSON.stringify(dynamicBoundingVolumeTree.proto));
          newvolume.tag = `bound${Math.floor(Math.random() * 1e15)}`;
          newvolume.children[node.tag] = volumes[node.tag];
          newvolume.bodies[node.tag] = entities[node.tag];
          volumes[node.tag].parent = newvolume;
          foundidxs[node.tag] = true;
          i++;
          j++;
          let nkeys = Object.keys(node.neighbors);
          while (i < nkeys.length && j < 3) {
            if (foundidxs[node.neighbors[i].tag]) {
              i++;
              continue;
            }
            let uxn = positions[node.neighbors[i].tag].x - volumes[node.neighbors[i].tag].collisionBoundsScale.x, uyn = positions[node.neighbors[i].tag].y - volumes[node.neighbors[i].tag].collisionBoundsScale.y, uzn = positions[node.neighbors[i].tag].z - volumes[node.neighbors[i].tag].collisionBoundsScale.z, mxn = positions[node.neighbors[i].tag].x + volumes[node.neighbors[i].tag].collisionBoundsScale.x, myn = positions[node.neighbors[i].tag].y + volumes[node.neighbors[i].tag].collisionBoundsScale.y, mzn = positions[node.neighbors[i].tag].z + volumes[node.neighbors[i].tag].collisionBoundsScale.z;
            if (ux > uxn)
              ux = uxn;
            if (mx < mxn)
              mx = mxn;
            if (uy > uyn)
              uy = uyn;
            if (my < myn)
              my = myn;
            if (uz > uzn)
              uz = uzn;
            if (mz < mzn)
              mz = mzn;
            newvolume.children[node.neighbors[i].tag] = volumes[node.neighbors[i].tag];
            newvolume.entities[node.neighbors[i].tag] = entities[node.neighbors[i].tag];
            volumes[node.neighbors[i].tag].parent = newvolume;
            foundidxs[node.neighbors[i].tag] = true;
            i++;
            j++;
          }
          let pos = { x: (mx + ux) * 0.5, y: (my + uy) * 0.5, z: (mz + uz) * 0.5 };
          let bounds = { x: mx - pos.x, y: my - pos.y, z: mz - pos.z };
          newvolume.position = pos;
          newvolume.collisionBoundsScale = bounds;
          if (newvolume.bodies.length === 1)
            newvolume = node;
          newVolumes[newvolume.tag] = newvolume;
          while (i < node.neighbors.length) {
            if (!foundidxs[node.neighbors[i].tag])
              break;
            i++;
          }
          if (i < node.neighbors.length) {
            tag = node.neighbors[i].tag;
          } else if (Object.keys(foundidxs).length < Object.keys(tree22).length) {
            tag = keys[0];
          } else
            searching = false;
          count++;
        }
        return newVolumes;
      };
      let result = genBoundingBoxLevel(tree2, entities);
      while (Object.keys(result).length > 2) {
        let nextTree = Systems.collision.nearestNeighborSearch(result, withinRadius);
        result = genBoundingBoxLevel(nextTree, result);
      }
      head.children = result;
      head.children.forEach((n) => {
        n.parent = head;
      });
      return head;
    }
  } }, collider: { lastTime: performance.now(), setupEntities: function(entities) {
    for (const key in entities) {
      const entity = entities[key];
      if (entity.components) {
        if (!entity.components[this.__node.tag])
          continue;
      }
      this.setupEntity(entity);
    }
    return entities;
  }, setupEntity: function(entity) {
    if (!("collisionEnabled" in entity))
      Systems.collision.setupEntity(entity);
    if (!("boundingBox" in entity))
      entity.boundingBox = { bot: 0, top: 100, left: 0, right: 100, front: 0, back: 100 };
    if (!("position" in entity)) {
      Systems.movement.setupEntity(entity);
    }
    if (!("restitution" in entity))
      entity.restitution = 1;
    if (!("useBoundingBox" in entity))
      entity.useBoundingBox = true;
    if (!entity.position.x && !entity.position.y && !entity.position.z) {
      entity.position.x = Math.random() * entity.boundingBox.right;
      entity.position.y = Math.random() * entity.boundingBox.back;
      entity.position.z = Math.random() * entity.boundingBox.top;
    }
    return entity;
  }, __operator: function(entities) {
    let keys = this.entityKeys;
    for (let i = 0; i < keys.length; i++) {
      const entity1 = entities[keys[i]];
      if (entity1.components) {
        if (!entity1.components[this.__node.tag] || !entity1.collisionEnabled)
          continue;
      }
      if (entity1.useBoundingBox)
        this.checkBoundingBox(entity1);
      if (!entity1.collisionEnabled)
        continue;
      if (entity1.colliding) {
        for (const key2 in entity1.colliding) {
          const entity2 = entities[key2];
          if (entity1.colliding[key2] === false) {
            delete entity1.colliding[key2];
            delete entity2.colliding[entity1.__node.tag];
            continue;
          }
          if (!entity2.collisionEnabled)
            continue;
          if (entity2.collisionType === "box") {
            this.resolveBoxCollision(entity1, entity2, entity1.colliding[key2]);
          } else {
            if (entity1.collisionType === "box") {
              entity1.fixed = true;
              this.resolveSphereCollisions(entity1, entity2, entity1.colliding[key2]);
              entity1.fixed = false;
            } else {
              this.resolveSphereCollisions(entity1, entity2, entity1.colliding[key2]);
              delete entity2.colliding[entity1.__node.tag];
            }
          }
          delete entity1.colliding[entity2.__node.tag];
        }
        delete entity1.colliding;
      }
    }
    return entities;
  }, __node: { tag: "collider" }, checkBoundingBox: (entity) => {
    const xsize = entity.collisionRadius * entity.collisionBoundsScale.x;
    const ysize = entity.collisionRadius * entity.collisionBoundsScale.y;
    const zsize = entity.collisionRadius * entity.collisionBoundsScale.z;
    if (entity.position.y - ysize <= entity.boundingBox.front) {
      entity.velocity.y *= -entity.restitution;
      entity.position.y = entity.boundingBox.front + ysize;
    }
    if (entity.position.y + ysize >= entity.boundingBox.back) {
      entity.velocity.y *= -entity.restitution;
      entity.position.y = entity.boundingBox.back - ysize;
    }
    if (entity.position.x - xsize <= entity.boundingBox.left) {
      entity.velocity.x *= -entity.restitution;
      entity.position.x = entity.boundingBox.left + xsize;
    }
    if (entity.position.x + xsize >= entity.boundingBox.right) {
      entity.velocity.x *= -entity.restitution;
      entity.position.x = entity.boundingBox.right - xsize;
    }
    if (entity.position.z - zsize <= entity.boundingBox.bot) {
      entity.velocity.z *= -entity.restitution;
      entity.position.z = entity.boundingBox.bot + zsize;
    }
    if (entity.position.z + zsize >= entity.boundingBox.top) {
      entity.velocity.z *= -entity.restitution;
      entity.position.z = entity.boundingBox.top - zsize;
    }
  }, resolveBoxCollision: (body1, box, negate) => {
    let positionVec = Systems.collision.makeVec(body1.position, box.position);
    var directionVec = Object.values(positionVec);
    let closestSide;
    let closestDist = Infinity;
    let mul = -1;
    if (directionVec[idx] < 0)
      mul = 1;
    if (negate)
      mul = -mul;
    for (const key in body1.position) {
      let dist = Math.abs(box.position[key] - body1.position[key]);
      if (dist < closestDist && Math.abs(box.position[key] - body1.position[key] + body1.velocity[key] * 1e-17) < dist) {
        closestSide = key;
        closestDist = dist;
      }
    }
    var idx = directionVec.indexOf(closestSide);
    if (idx === 0)
      idx = "x";
    if (idx === 1)
      idx = "y";
    if (idx === 2)
      idx = "z";
    if (idx === 3)
      idx = "w";
    let boxEdgeAxisPosition = box.position[idx] + box.collisionRadius * box.collisionBoundsScale[idx] * mul;
    if (negate) {
      let body1Offset = boxEdgeAxisPosition - body1.collisionRadius * body1.collisionBoundsScale[idx] * mul;
      body1.position[idx] = body1Offset;
    } else {
      let body1Offset = boxEdgeAxisPosition + body1.collisionRadius * body1.collisionBoundsScale[idx] * mul;
      body1.position[idx] = body1Offset;
    }
    body1.velocity[idx] = -body1.velocity[idx] * body1.restitution;
    if (negate)
      body1.force[idx] = -body1.velocity[idx];
    var body2AccelMag = Systems.collision.magnitude(box.acceleration);
    var body2AccelNormal = Systems.collision.normalize(box.acceleration);
    body1.force[idx] = -body2AccelNormal[idx] * body2AccelMag * box.mass;
    if (negate)
      body1.force[idx] = -body1.force[idx];
  }, resolveSphereCollisions: (entity1, entity2, dist) => {
    if (dist === void 0)
      dist = Systems.collision.distance(entity1.position, entity2.position);
    let vecn = Systems.collision.normalize(Systems.collision.makeVec(entity1.position, entity2.position));
    let sumMass = entity1.mass + entity2.mass;
    let ratio = entity1.mass / sumMass;
    let rmin = 1 - ratio;
    if (entity1.fixed === false) {
      entity1.position.x += vecn.x * rmin * 1.01;
      entity1.position.y += vecn.y * rmin * 1.01;
      entity1.position.z += vecn.z * rmin * 1.001;
    } else {
      entity2.position.x -= vecn.x * 1.01;
      entity2.position.y -= vecn.y * 1.01;
      entity2.position.z -= vecn.z * 1.01;
    }
    if (entity2.fixed === false) {
      entity2.position.x += vecn.x * ratio * 1.01;
      entity2.position.y += vecn.y * ratio * 1.01;
      entity2.position.z += vecn.z * ratio * 1.01;
    } else {
      entity1.position.x += vecn.x * 1.01;
      entity1.position.y += vecn.y * 1.01;
      entity1.position.z += vecn.z * 1.01;
    }
    dist = Systems.collision.distance(entity1.position, entity2.position);
    let vrel = { x: entity1.velocity.x - entity2.velocity.x, y: entity1.velocity.y - entity2.velocity.y, z: entity1.velocity.z - entity2.velocity.z };
    let speed = vrel.x * vecn.x + vrel.y * vecn.y + vrel.z * vecn.z;
    if (speed > 0) {
      let impulse = 2 * speed / sumMass;
      if (entity1.fixed === false) {
        entity1.velocity.x -= impulse * vecn.x * entity2.mass * entity1.restitution;
        entity1.velocity.y -= impulse * vecn.y * entity2.mass * entity1.restitution;
        entity1.velocity.z -= impulse * vecn.z * entity2.mass * entity1.restitution;
      }
      if (entity2.fixed === false) {
        entity2.velocity.x += impulse * vecn.x * entity2.mass * entity2.restitution / entity2.mass;
        entity2.velocity.y += impulse * vecn.y * entity2.mass * entity2.restitution / entity2.mass;
        entity2.velocity.z += impulse * vecn.z * entity2.mass * entity2.restitution / entity2.mass;
      }
    }
  } }, nbody: { lastTime: performance.now(), G: 6674e-14, setupEntities: function(entities) {
    for (const key in entities) {
      const entity = entities[key];
      if (entity.components) {
        if (!entity.components[this.__node.tag])
          continue;
      }
      this.setupEntity(entity);
    }
    return entities;
  }, setupEntity: function(entity) {
    if (!("collisionEnabled" in entity))
      Systems.collider.setupEntity(entity);
    entity.isAttractor = true;
    if (!("attractorGroup" in entity))
      entity.attractorGroup = 0;
    if (!("attractorFrameSearchMax" in entity))
      entity.attractorFrameSearchMax = 10;
    if (!("attractorGroupRules" in entity))
      entity.attractorGroupRules = { 0: { G: this.G, maxDist: void 0 } };
    return entity;
  }, __operator: function(entities) {
    let keys = this.entityKeys;
    for (let i = 0; i < keys.length; i++) {
      const entity = entities[keys[i]];
      if (entity.components) {
        if (!entity.components[this.__node.tag])
          continue;
      }
      if (!entity.mass)
        continue;
      let nSearched = 0;
      nested:
        for (let j = 0; j < keys.length; j++) {
          let randKey = keys[Math.floor(Math.random() * keys.length)];
          nSearched++;
          const entity2 = entities[randKey];
          if (entity2.components) {
            if (!entity2.components[this.__node.tag])
              continue nested;
          }
          if (!entity2.mass || !entity2.isAttractor)
            continue nested;
          this.attract(entity, entity2, void 0, this.G);
          if (nSearched > entity.attractorFrameSearchMax)
            break nested;
        }
    }
    return entities;
  }, __node: { tag: "nbody" }, attract: function(body1, body2, dist, G3 = this.G, vecn) {
    if (dist === void 0)
      dist = Systems.collision.distance3D(body1.position, body2.position);
    if (vecn === void 0)
      vecn = Systems.collision.normalize(Systems.collision.makeVec(body1.position, body2.position));
    let Fg = 0;
    if (dist < 0.01)
      dist = 0.01;
    if (body1.attractorGroupRules[body2.attractorGroup]) {
      if (typeof body1.attractorGroupRules[body2.attractorGroup] === "object") {
        if (body1.attractorGroupRules[body2.attractorGroup].maxDist && body1.attractorGroupRules[body2.attractorGroup].maxDist < dist) {
        } else
          Fg = body1.attractorGroupRules[body2.attractorGroup].G * body1.mass * body2.mass / (dist * dist);
      } else
        Fg = body1.attractorGroupRules[body2.attractorGroup] * body1.mass * body2.mass / (dist * dist);
    } else
      Fg = G3 * body1.mass * body2.mass / (dist * dist);
    body1.force.x += vecn.x * Fg;
    body1.force.y += vecn.y * Fg;
    body1.force.z += vecn.z * Fg;
    body2.force.x -= vecn.x * Fg;
    body2.force.y -= vecn.y * Fg;
    body2.force.z -= vecn.z * Fg;
  } }, boid: { lastTime: performance.now(), defaultAnchor: { x: Math.random(), y: Math.random(), z: Math.random(), mul: 6e-3 }, setupEntities: function(entities) {
    for (const key in entities) {
      const entity = entities[key];
      this.setupEntity(entity);
    }
    return entities;
  }, setupEntity: function(entity) {
    if (!entity.position) {
      Systems.collider.setupEntity(entity);
    }
    let adjustedAnchor = Object.assign({}, this.defaultAnchor);
    adjustedAnchor.x *= entity.boundingBox.right;
    adjustedAnchor.y *= entity.boundingBox.back;
    adjustedAnchor.z *= entity.boundingBox.top;
    let boidDefaults = { cohesion: 1e-5, separation: 1e-4, alignment: 6e-3, swirl: adjustedAnchor, attractor: Object.assign(adjustedAnchor, { mul: 2e-3 }), useCohesion: true, useSeparation: true, useAlignment: true, useSwirl: true, useAttractor: true, useAttraction: false, groupRadius: 200, groupSize: 5, searchLimit: 5 };
    if (!entity.boid) {
      entity.boid = boidDefaults;
    } else
      entity.boid = Object.assign(boidDefaults, entity.boid);
    if (this.entityKeys.length > 1e3) {
      entity.boid.groupSize = 1;
      entity.boid.searchLimit = 1;
    }
    return entity;
  }, __operator: function(entities) {
    let now = performance.now();
    let timeStep = now - this.lastTime;
    this.lastTime = now;
    let keys = this.entityKeys;
    let length = keys.length;
    let _timeStep = 1 / timeStep;
    let w2 = -1;
    outer:
      for (let i = 0; i < keys.length; i++) {
        w2++;
        let p0 = entities[keys[i]];
        const inRange = [];
        const distances = [];
        const boidVelocities = [p0.position.x, p0.position.y, p0.position.z, 0, 0, 0, p0.velocity.x, p0.velocity.y, p0.velocity.z, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        let groupCount = 1;
        let k = -1;
        nested:
          for (let j = 0; j < keys.length; j++) {
            k++;
            if (distances.length > p0.boid.groupSize || k > p0.boid.searchLimit) {
              break nested;
            }
            let randj = keys[Math.floor(Math.random() * length)];
            if (k === w2 || randj === keys[i] || inRange.indexOf(randj) > -1) {
              continue nested;
            } else {
              let pr = entities[randj];
              let disttemp = Math.sqrt((p0.position.x - pr.position.x) * (p0.position.x - pr.position.x) + (p0.position.y - pr.position.y) * (p0.position.y - pr.position.y) + (p0.position.z - pr.position.z) * (p0.position.z - pr.position.z));
              if (disttemp > p0.boid.groupRadius) {
                continue nested;
              } else {
                distances.push(disttemp);
                inRange.push(randj);
                let distInv;
                if (p0.boid.useSeparation || p0.boid.useAlignment) {
                  distInv = p0.boid.groupRadius / (disttemp * disttemp);
                  if (distInv > p0.maxSpeed)
                    distInv = p0.maxSpeed;
                  else if (distInv < -p0.maxSpeed)
                    distInv = -p0.maxSpeed;
                }
                if (p0.boid.useCohesion) {
                  boidVelocities[0] += (pr.position.x - p0.position.x) * 0.5 * disttemp * _timeStep;
                  boidVelocities[1] += (pr.position.y - p0.position.y) * 0.5 * disttemp * _timeStep;
                  boidVelocities[2] += (pr.position.z - p0.position.z) * 0.5 * disttemp * _timeStep;
                }
                if (isNaN(disttemp) || isNaN(boidVelocities[0]) || isNaN(pr.position.x)) {
                  console.log(disttemp, i, randj, p0.position, pr.position, boidVelocities);
                  p0.position.x = NaN;
                  return;
                }
                if (p0.boid.useSeparation) {
                  boidVelocities[3] = boidVelocities[3] + (p0.position.x - pr.position.x) * distInv;
                  boidVelocities[4] = boidVelocities[4] + (p0.position.y - pr.position.y) * distInv;
                  boidVelocities[5] = boidVelocities[5] + (p0.position.z - pr.position.z) * distInv;
                }
                if (p0.boid.useAttraction && pr.boid.useAttraction) {
                  Systems.nbody.attract(p0, pr, disttemp);
                }
                if (p0.boid.useAlignment) {
                  boidVelocities[6] = boidVelocities[6] + pr.velocity.x * distInv;
                  boidVelocities[7] = boidVelocities[7] + pr.velocity.y * distInv;
                  boidVelocities[8] = boidVelocities[8] + pr.velocity.z * distInv;
                }
                groupCount++;
              }
            }
          }
        let _groupCount = 1 / groupCount;
        if (p0.boid.useCohesion) {
          boidVelocities[0] = p0.boid.cohesion * (boidVelocities[0] * _groupCount);
          boidVelocities[1] = p0.boid.cohesion * (boidVelocities[1] * _groupCount);
          boidVelocities[2] = p0.boid.cohesion * (boidVelocities[2] * _groupCount);
        } else {
          boidVelocities[0] = 0;
          boidVelocities[1] = 0;
          boidVelocities[2] = 0;
        }
        if (p0.boid.useSeparation) {
          boidVelocities[3] = p0.boid.separation * boidVelocities[3];
          boidVelocities[4] = p0.boid.separation * boidVelocities[4];
          boidVelocities[5] = p0.boid.separation * boidVelocities[5];
        } else {
          boidVelocities[3] = 0;
          boidVelocities[4] = 0;
          boidVelocities[5] = 0;
        }
        if (p0.boid.useAlignment) {
          boidVelocities[6] = -(p0.boid.alignment * boidVelocities[6] * _groupCount);
          boidVelocities[7] = p0.boid.alignment * boidVelocities[7] * _groupCount;
          boidVelocities[8] = p0.boid.alignment * boidVelocities[8] * _groupCount;
        } else {
          boidVelocities[6] = 0;
          boidVelocities[7] = 0;
          boidVelocities[8] = 0;
        }
        const swirlVec = [0, 0, 0];
        if (p0.boid.useSwirl == true) {
          boidVelocities[9] = -(p0.position.y - p0.boid.swirl.y) * p0.boid.swirl.mul;
          boidVelocities[10] = (p0.position.z - p0.boid.swirl.z) * p0.boid.swirl.mul;
          boidVelocities[11] = (p0.position.x - p0.boid.swirl.x) * p0.boid.swirl.mul;
        }
        const attractorVec = [0, 0, 0];
        if (p0.boid.useAttractor == true) {
          boidVelocities[12] = (p0.boid.attractor.x - p0.position.x) * p0.boid.attractor.mul;
          if (p0.position.x > p0.boundingBox.left || p0.position.x < p0.boundingBox.right) {
            boidVelocities[12] *= 3;
          }
          boidVelocities[13] = (p0.boid.attractor.y - p0.position.y) * p0.boid.attractor.mul;
          if (p0.position.y > p0.boundingBox.top || p0.position.y < p0.boundingBox.bottom) {
            boidVelocities[13] *= 3;
          }
          boidVelocities[14] = (p0.boid.attractor.z - p0.position.z) * p0.boid.attractor.mul;
          if (p0.position.z > p0.boundingBox.front || p0.position.z < p0.boundingBox.back) {
            boidVelocities[14] *= 3;
          }
        }
        p0.velocity.x = p0.velocity.x + boidVelocities[0] + boidVelocities[3] + boidVelocities[6] + boidVelocities[9] + boidVelocities[12] + boidVelocities[15], p0.velocity.y = p0.velocity.y + boidVelocities[1] + boidVelocities[4] + boidVelocities[7] + boidVelocities[10] + boidVelocities[13] + boidVelocities[16], p0.velocity.z = p0.velocity.z + boidVelocities[2] + boidVelocities[5] + boidVelocities[8] + boidVelocities[11] + boidVelocities[14] + boidVelocities[17];
        if (isNaN(p0.velocity.x))
          console.error(p0, i, groupCount, p0.position, p0.velocity, swirlVec, attractorVec);
      }
    return entities;
  }, __node: { tag: "boid" } }, movement: { __node: { tag: "movement" }, lastTime: performance.now(), setupEntities: function(entities) {
    for (const key in entities) {
      const entity = entities[key];
      if (entity.components) {
        if (!entity.components[this.__node.tag])
          continue;
      }
      this.setupEntity(entity);
    }
  }, setupEntity: function(entity) {
    if (!("mass" in entity))
      entity.mass = 1;
    if (!("fixed" in entity))
      entity.fixed = false;
    if (!entity.force)
      entity.force = { x: 0, y: 0, z: 0 };
    if (!("mass" in entity))
      entity.mass = 1;
    if (!("gravity" in entity))
      entity.gravity = -9.81;
    if (!entity.acceleration)
      entity.acceleration = { x: 0, y: 0, z: 0 };
    if (!entity.velocity)
      entity.velocity = { x: 0, y: 0, z: 0 };
    if (!("maxSpeed" in entity))
      entity.maxSpeed = 10;
    if (!entity.position)
      entity.position = { x: 0, y: 0, z: 0 };
    return entity;
  }, __operator: function(entities) {
    let now = performance.now();
    let timeStep = (now - this.lastTime) * 1e-3;
    this.lastTime = now;
    let keys = this.entityKeys;
    for (let i = 0; i < keys.length; i++) {
      const entity = entities[keys[i]];
      if (entity.components) {
        if (!entity.components[this.__node.tag])
          continue;
      }
      if (entity.fixed)
        continue;
      if (entity.mass) {
        if (entity.force.x) {
          entity.acceleration.x += entity.force.x / entity.mass;
          entity.force.x = 0;
        }
        if (entity.force.y) {
          entity.acceleration.y += entity.force.y / entity.mass;
          entity.force.y = 0;
        }
        if (entity.force.z) {
          entity.acceleration.z += entity.force.z / entity.mass + entity.gravity;
          entity.force.z = 0;
        }
      }
      if (entity.drag) {
        if (entity.acceleration.x)
          entity.acceleration.x -= entity.acceleration.x * entity.drag * timeStep;
        if (entity.acceleration.y)
          entity.acceleration.y -= entity.acceleration.y * entity.drag * timeStep;
        if (entity.acceleration.z)
          entity.acceleration.z -= entity.acceleration.z * entity.drag * timeStep;
      }
      if (entity.acceleration.x)
        entity.velocity.x += entity.acceleration.x * timeStep;
      if (entity.acceleration.y)
        entity.velocity.y += entity.acceleration.y * timeStep;
      if (entity.acceleration.z)
        entity.velocity.z += entity.acceleration.z * timeStep;
      if (entity.maxSpeed > 0) {
        let magnitude = Systems.collision.magnitude(entity.velocity);
        if (magnitude > entity.maxSpeed) {
          let scalar = entity.maxSpeed / magnitude;
          entity.velocity.x *= scalar;
          entity.velocity.y *= scalar;
          entity.velocity.z *= scalar;
        }
      }
      if (entity.velocity.x)
        entity.position.x += entity.velocity.x * timeStep;
      if (entity.velocity.y)
        entity.position.y += entity.velocity.y * timeStep;
      if (entity.velocity.z)
        entity.position.z += entity.velocity.z * timeStep;
    }
    return entities;
  } } };
  var b = class {
    constructor(e, t3, s, h) {
      this.r = e, this.g = t3, this.b = s, this.a = h;
    }
  };
  var x2 = class {
    constructor() {
      this.scaleX = 1, this.scaleY = 1, this.offsetX = 0, this.offsetY = 0, this.loop = false, this._vbuffer = 0, this._coord = 0, this.visible = true, this.intensity = 1, this.xy = new Float32Array([]), this.numPoints = 0, this.color = new b(0, 0, 0, 1), this.webglNumPoints = 0;
    }
  };
  var v = class extends x2 {
    constructor(e, t3) {
      super(), this.currentIndex = 0, this.webglNumPoints = t3, this.numPoints = t3, this.color = e, this.xy = new Float32Array(2 * this.webglNumPoints);
    }
    setX(e, t3) {
      this.xy[e * 2] = t3;
    }
    setY(e, t3) {
      this.xy[e * 2 + 1] = t3;
    }
    getX(e) {
      return this.xy[e * 2];
    }
    getY(e) {
      return this.xy[e * 2 + 1];
    }
    lineSpaceX(e, t3) {
      for (let s = 0; s < this.numPoints; s++)
        this.setX(s, e + t3 * s);
    }
    arrangeX() {
      this.lineSpaceX(-1, 2 / this.numPoints);
    }
    constY(e) {
      for (let t3 = 0; t3 < this.numPoints; t3++)
        this.setY(t3, e);
    }
    shiftAdd(e) {
      let t3 = e.length;
      for (let s = 0; s < this.numPoints - t3; s++)
        this.setY(s, this.getY(s + t3));
      for (let s = 0; s < t3; s++)
        this.setY(s + this.numPoints - t3, e[s]);
    }
    addArrayY(e) {
      if (this.currentIndex + e.length <= this.numPoints)
        for (let t3 = 0; t3 < e.length; t3++)
          this.setY(this.currentIndex, e[t3]), this.currentIndex++;
    }
    replaceArrayY(e) {
      if (e.length == this.numPoints)
        for (let t3 = 0; t3 < this.numPoints; t3++)
          this.setY(t3, e[t3]);
    }
  };
  var Y = (f, e, t3) => {
    let s = { x: 0, y: 0 };
    return s.x = f.x + e.x * t3, s.y = f.y + e.y * t3, s;
  };
  var _ = (f) => P(-f.y, f.x);
  var w = (f, e) => {
    let t3 = T(f, e);
    return t3 = M(t3), t3;
  };
  var S = (f, e) => {
    let t3 = { x: 0, y: 0 };
    return t3.x = f.x + e.x, t3.y = f.y + e.y, t3;
  };
  var R = (f, e) => f.x * e.x + f.y * e.y;
  var M = (f) => {
    let e = { x: 0, y: 0 }, t3 = f.x * f.x + f.y * f.y;
    return t3 > 0 && (t3 = 1 / Math.sqrt(t3), e.x = f.x * t3, e.y = f.y * t3), e;
  };
  var P = (f, e) => {
    let t3 = { x: 0, y: 0 };
    return t3.x = f, t3.y = e, t3;
  };
  var T = (f, e) => {
    let t3 = { x: 0, y: 0 };
    return t3.x = f.x - e.x, t3.y = f.y - e.y, t3;
  };
  var C3 = (f) => {
    let e, t3 = { x: 0, y: 0 }, s = { x: 0, y: 0 }, h = [], r = (n, l) => {
      h.push({ vec2: n, miterLength: l });
    }, a = (n) => ({ x: f[n * 2], y: f[n * 2 + 1] });
    t3 = w(a(1), a(0)), e = _(t3), r(e, 1);
    let o = f.length / 2;
    for (let n = 1; n < o - 1; n++) {
      let l = a(n - 1), i = a(n), u3 = a(n + 1);
      t3 = w(i, l), e = _(t3), s = w(u3, i);
      let c = F3(t3, s), g = N(t3, c, 1);
      r(c, g);
    }
    return t3 = w(a(o - 1), a(o - 2)), e = _(t3), r(e, 1), h;
  };
  var F3 = (f, e) => {
    let t3 = S(f, e);
    return t3 = M(t3), P(-t3.y, t3.x);
  };
  var N = (f, e, t3) => {
    let s = P(-f.y, f.x);
    return t3 / R(e, s);
  };
  var d = class extends x2 {
    constructor(e, t3, s) {
      super(), this.currentIndex = 0, this._thicknessRequested = 0, this._actualThickness = 0, this.webglNumPoints = t3 * 2, this.numPoints = t3, this.color = e, this._thicknessRequested = s, this._linePoints = new Float32Array(t3 * 2), this.xy = new Float32Array(2 * this.webglNumPoints);
    }
    convertToTriPoints() {
      let e = this._actualThickness / 2, t3 = C3(this._linePoints);
      for (let s = 0; s < this.numPoints; s++) {
        let h = this._linePoints[2 * s], r = this._linePoints[2 * s + 1], a = { x: h, y: r }, o = Y(a, t3[s].vec2, t3[s].miterLength * e), n = Y(a, t3[s].vec2, -t3[s].miterLength * e);
        this.xy[s * 4] = o.x, this.xy[s * 4 + 1] = o.y, this.xy[s * 4 + 2] = n.x, this.xy[s * 4 + 3] = n.y;
      }
    }
    setX(e, t3) {
      this._linePoints[e * 2] = t3;
    }
    setY(e, t3) {
      this._linePoints[e * 2 + 1] = t3;
    }
    lineSpaceX(e, t3) {
      for (let s = 0; s < this.numPoints; s++)
        this.setX(s, e + t3 * s);
    }
    setThickness(e) {
      this._thicknessRequested = e;
    }
    getThickness() {
      return this._thicknessRequested;
    }
    setActualThickness(e) {
      this._actualThickness = e;
    }
  };
  var A3 = class {
    constructor(e, t3) {
      this.debug = false, this.addLine = this.addDataLine, t3 == null ? this.webgl = e.getContext("webgl", { antialias: true, transparent: false }) : (this.webgl = e.getContext("webgl", { antialias: t3.antialias, transparent: t3.transparent, desynchronized: t3.deSync, powerPerformance: t3.powerPerformance, preserveDrawing: t3.preserveDrawing }), this.debug = t3.debug == null ? false : t3.debug), this.log("canvas type is: " + e.constructor.name), this.log(`[webgl-plot]:width=${e.width}, height=${e.height}`), this._linesData = [], this._linesAux = [], this._thickLines = [], this._surfaces = [], this.gScaleX = 1, this.gScaleY = 1, this.gXYratio = 1, this.gOffsetX = 0, this.gOffsetY = 0, this.gLog10X = false, this.gLog10Y = false, this.webgl.clear(this.webgl.COLOR_BUFFER_BIT), this.webgl.viewport(0, 0, e.width, e.height), this._progLine = this.webgl.createProgram(), this.initThinLineProgram(), this.webgl.enable(this.webgl.BLEND), this.webgl.blendFunc(this.webgl.SRC_ALPHA, this.webgl.ONE_MINUS_SRC_ALPHA);
    }
    get linesData() {
      return this._linesData;
    }
    get linesAux() {
      return this._linesAux;
    }
    get thickLines() {
      return this._thickLines;
    }
    get surfaces() {
      return this._surfaces;
    }
    _drawLines(e) {
      let t3 = this.webgl;
      e.forEach((s) => {
        if (s.visible) {
          t3.useProgram(this._progLine);
          let h = t3.getUniformLocation(this._progLine, "uscale");
          t3.uniformMatrix2fv(h, false, new Float32Array([s.scaleX * this.gScaleX * (this.gLog10X ? 1 / Math.log(10) : 1), 0, 0, s.scaleY * this.gScaleY * this.gXYratio * (this.gLog10Y ? 1 / Math.log(10) : 1)]));
          let r = t3.getUniformLocation(this._progLine, "uoffset");
          t3.uniform2fv(r, new Float32Array([s.offsetX + this.gOffsetX, s.offsetY + this.gOffsetY]));
          let a = t3.getUniformLocation(this._progLine, "is_log");
          t3.uniform2iv(a, new Int32Array([this.gLog10X ? 1 : 0, this.gLog10Y ? 1 : 0]));
          let o = t3.getUniformLocation(this._progLine, "uColor");
          t3.uniform4fv(o, [s.color.r, s.color.g, s.color.b, s.color.a]), t3.bufferData(t3.ARRAY_BUFFER, s.xy, t3.STREAM_DRAW), t3.drawArrays(s.loop ? t3.LINE_LOOP : t3.LINE_STRIP, 0, s.webglNumPoints);
        }
      });
    }
    _drawSurfaces(e) {
      let t3 = this.webgl;
      e.forEach((s) => {
        if (s.visible) {
          t3.useProgram(this._progLine);
          let h = t3.getUniformLocation(this._progLine, "uscale");
          t3.uniformMatrix2fv(h, false, new Float32Array([s.scaleX * this.gScaleX * (this.gLog10X ? 1 / Math.log(10) : 1), 0, 0, s.scaleY * this.gScaleY * this.gXYratio * (this.gLog10Y ? 1 / Math.log(10) : 1)]));
          let r = t3.getUniformLocation(this._progLine, "uoffset");
          t3.uniform2fv(r, new Float32Array([s.offsetX + this.gOffsetX, s.offsetY + this.gOffsetY]));
          let a = t3.getUniformLocation(this._progLine, "is_log");
          t3.uniform2iv(a, new Int32Array([this.gLog10X ? 1 : 0, this.gLog10Y ? 1 : 0]));
          let o = t3.getUniformLocation(this._progLine, "uColor");
          t3.uniform4fv(o, [s.color.r, s.color.g, s.color.b, s.color.a]), t3.bufferData(t3.ARRAY_BUFFER, s.xy, t3.STREAM_DRAW), t3.drawArrays(t3.TRIANGLE_STRIP, 0, s.webglNumPoints);
        }
      });
    }
    _drawTriangles(e) {
      let t3 = this.webgl;
      t3.bufferData(t3.ARRAY_BUFFER, e.xy, t3.STREAM_DRAW), t3.useProgram(this._progLine);
      let s = t3.getUniformLocation(this._progLine, "uscale");
      t3.uniformMatrix2fv(s, false, new Float32Array([e.scaleX * this.gScaleX * (this.gLog10X ? 1 / Math.log(10) : 1), 0, 0, e.scaleY * this.gScaleY * this.gXYratio * (this.gLog10Y ? 1 / Math.log(10) : 1)]));
      let h = t3.getUniformLocation(this._progLine, "uoffset");
      t3.uniform2fv(h, new Float32Array([e.offsetX + this.gOffsetX, e.offsetY + this.gOffsetY]));
      let r = t3.getUniformLocation(this._progLine, "is_log");
      t3.uniform2iv(r, new Int32Array([0, 0]));
      let a = t3.getUniformLocation(this._progLine, "uColor");
      t3.uniform4fv(a, [e.color.r, e.color.g, e.color.b, e.color.a]), t3.drawArrays(t3.TRIANGLE_STRIP, 0, e.xy.length / 2);
    }
    _drawThickLines() {
      this._thickLines.forEach((e) => {
        if (e.visible) {
          let t3 = Math.min(this.gScaleX, this.gScaleY);
          e.setActualThickness(e.getThickness() / t3), e.convertToTriPoints(), this._drawTriangles(e);
        }
      });
    }
    update() {
      this.clear(), this.draw();
    }
    draw() {
      this._drawLines(this.linesData), this._drawLines(this.linesAux), this._drawThickLines(), this._drawSurfaces(this.surfaces);
    }
    clear() {
      this.webgl.clear(this.webgl.COLOR_BUFFER_BIT);
    }
    _addLine(e) {
      e._vbuffer = this.webgl.createBuffer(), this.webgl.bindBuffer(this.webgl.ARRAY_BUFFER, e._vbuffer), this.webgl.bufferData(this.webgl.ARRAY_BUFFER, e.xy, this.webgl.STREAM_DRAW), e._coord = this.webgl.getAttribLocation(this._progLine, "coordinates"), this.webgl.vertexAttribPointer(e._coord, 2, this.webgl.FLOAT, false, 0, 0), this.webgl.enableVertexAttribArray(e._coord);
    }
    addDataLine(e) {
      this._addLine(e), this.linesData.push(e);
    }
    addAuxLine(e) {
      this._addLine(e), this.linesAux.push(e);
    }
    addThickLine(e) {
      this._addLine(e), this._thickLines.push(e);
    }
    addSurface(e) {
      this._addLine(e), this.surfaces.push(e);
    }
    initThinLineProgram() {
      let e = `
      attribute vec2 coordinates;
      uniform mat2 uscale;
      uniform vec2 uoffset;
      uniform ivec2 is_log;

      void main(void) {
         float x = (is_log[0]==1) ? log(coordinates.x) : coordinates.x;
         float y = (is_log[1]==1) ? log(coordinates.y) : coordinates.y;
         vec2 line = vec2(x, y);
         gl_Position = vec4(uscale*line + uoffset, 0.0, 1.0);
      }`, t3 = this.webgl.createShader(this.webgl.VERTEX_SHADER);
      this.webgl.shaderSource(t3, e), this.webgl.compileShader(t3);
      let s = `
         precision mediump float;
         uniform highp vec4 uColor;
         void main(void) {
            gl_FragColor =  uColor;
         }`, h = this.webgl.createShader(this.webgl.FRAGMENT_SHADER);
      this.webgl.shaderSource(h, s), this.webgl.compileShader(h), this._progLine = this.webgl.createProgram(), this.webgl.attachShader(this._progLine, t3), this.webgl.attachShader(this._progLine, h), this.webgl.linkProgram(this._progLine);
    }
    popDataLine() {
      this.linesData.pop();
    }
    removeAllLines() {
      this._linesData = [], this._linesAux = [], this._thickLines = [], this._surfaces = [];
    }
    removeDataLines() {
      this._linesData = [];
    }
    removeAuxLines() {
      this._linesAux = [];
    }
    viewport(e, t3, s, h) {
      this.webgl.viewport(e, t3, s, h);
    }
    log(e) {
      this.debug && console.log("[webgl-plot]:" + e);
    }
  };
  var y3 = class {
    constructor() {
      this.plots = {};
    }
    initPlot(e, t3) {
      if (t3 || (t3 = new A3(e.canvas, e.webglOptions)), !e._id)
        e._id = `plot${Math.floor(Math.random() * 1e15)}`;
      else if (this.plots[e._id]) {
        let l = this.plots[e._id].initial;
        if (e.lines) {
          for (let i in e.lines)
            if (l.lines[i] && Array.isArray(e.lines[i])) {
              let u3 = e.lines[i];
              e.lines[i] = l.lines[i];
            }
        }
        e = Object.assign(l, e);
      }
      e.overlay && (typeof e.overlay != "object" && (e.overlay = document.createElement("canvas"), e.overlay.style.position = "absolute", e.overlay.width = e.canvas.width, e.overlay.height = e.canvas.height, e.canvas.appendChild(e.overlay)), e.overlayCtx || (e.overlayCtx = e.overlay.getContext("2d"))), e.width && (e.canvas.width = e.width, e.canvas.style && (e.canvas.style.width = e.width + "px"), typeof e.overlay == "object" && (e.overlay.width = e.width, e.overlay.style && (e.overlay.style.width = e.width + "px"))), e.height && (e.canvas.height = e.height, e.canvas.style && (e.canvas.style.height = e.height + "px"), typeof e.overlay == "object" && (e.overlay.height = e.height, e.overlay.style && (e.overlay.style.height = e.height + "px"))), e.lines?.timestamp && delete e.lines.timestamp, e.lines || (e.lines = {});
      let s = {};
      for (let l in e.lines)
        s[l] = Object.assign({}, s[l]), "viewing" in e.lines[l] || (e.lines[l].viewing = true), s[l].viewing = e.lines[l].viewing, s[l].sps = e.lines[l].sps, s[l].nSec = e.lines[l].nSec, s[l].nPoints = e.lines[l].nPoints, s[l].ymin = e.lines[l].ymin, s[l].ymax = e.lines[l].ymax, s[l].units = e.lines[l].units;
      let h = { plot: t3, settings: e, initial: Object.assign(Object.assign({}, e), { lines: s }), anim: () => {
        t3.update();
      } };
      this.plots[e._id] = h;
      let r = 0, a = 0;
      Object.keys(e.lines).forEach((l) => {
        e.lines[l]?.viewing !== false && a++;
      }), e.nLines = a;
      let o, n;
      typeof e.overlay == "object" && (o = e.overlay, n = e.overlayCtx, n.clearRect(0, 0, e.overlay.width, e.overlay.height), n.font = e.overlayFont ? e.overlayFont : "1em Courier", n.fillStyle = e.overlayColor ? e.overlayColor : "white");
      for (let l in e.lines) {
        let i = e.lines[l];
        if (Array.isArray(i) && (i = { values: i }, e.lines[l] = i), "viewing" in i || (i.viewing = true), i.color)
          Array.isArray(i.color) && (i.color = new b(...i.color));
        else {
          let m = y3.HSLToRGB(360 * (r / a) % 360, 100, 50, 1);
          h.initial.lines[l].color = [...m, 1], i.color = new b(...m, 1);
        }
        let u3;
        if (i.nSec && i.sps ? u3 = Math.ceil(i.nSec * i.sps) : i.nPoints ? u3 = i.nPoints : i.points ? u3 = i.points : e.linePoints ? u3 = e.linePoints : i.values ? u3 = i.values.length : u3 = 1e3, i.points = u3, e.lines[l].viewing === false)
          continue;
        if ((i.width || e.lineWidth) && i.width !== 0) {
          let m = e.lineWidth;
          m || (m = i.width), i.width ? i.line = new d(i.color, u3, i.width) : e.lineWidth && (i.line = new d(i.color, u3, e.lineWidth)), i.line.lineSpaceX(-1, 2 / i.line.numPoints);
        } else
          i.line = new v(i.color, u3), i.line.arrangeX();
        i.values?.length === i.points ? i.values.length !== u3 && (i.interpolate ? i.values.length > u3 ? i.values = y3.downsample(i.values, u3) : i.values.length < u3 && (i.values = y3.upsample(i.values, u3)) : i.values.length > i.points ? i.values = i.values.slice(i.values.length - i.points) : i.values = [...new Array(i.points - i.values.length).fill(0), ...i.values]) : Array.isArray(i.values) ? i.values.length > u3 ? i.values = i.values.slice(i.values.length - u3) : i.values.length < u3 && (i.values = [...new Array(u3 - i.values.length).fill(0), ...i.values]) : i.values = new Array(i.points).fill(0);
        let c = i.ymin, g = i.ymax;
        if (c === g ? (g = i.values.length <= 1e5 ? Math.max(...i.values) : 1, c = i.values.length <= 1e5 ? Math.min(...i.values) : 0) : isNaN(g) && (g = i.values.length <= 1e5 ? Math.max(...i.values) : 1), isNaN(c) && (c = i.values.length <= 1e5 ? Math.min(...i.values) : 0), c > g) {
          let m = c;
          g = c, c = m;
        }
        let p = Math.abs(c);
        if (i.absmax = p > g ? p : g, "autoscale" in i || (i.autoscale = true), i.position || (i.position = e.nLines - r - 1), i.autoscale ? i.autoscale === 2 ? ("clamp" in i || (i.clamp = true), i.scaled = y3.autoscale(i.values, i.position, a, i.centerZero, c, g, i.clamp)) : (i.scaled = i.values, i.line.scaleY = y3.getYScalar(i.values, a, i.centerZero, c, g), i.line.offsetY = y3.getYOffset(i.position, a, c, i.line.scaleY)) : i.scaled = i.values, i.scaled.forEach((m, L) => i.line.setY(L, m)), i.line instanceof d ? t3.addThickLine(i.line) : i.line instanceof v && t3.addDataLine(i.line), "xAxis" in i || (i.xAxis = true), i.xAxis) {
          i.xColor ? Array.isArray(i.xColor) && (i.xColor = new b(...i.xColor)) : i.xColor = new b(1, 1, 1, 0.3);
          let m = new v(i.xColor, 2), L = i.autoscale ? (r + 1) * 2 / a - 1 - 1 / a : 0;
          m.constY(L), m.arrangeX(), m.xy[2] = 1, i.x = m, t3.addAuxLine(m);
        }
        if (a > 1 && i.autoscale && r !== a - 1) {
          e.dividerColor ? Array.isArray(e.dividerColor) && (e.dividerColor = new b(...e.dividerColor)) : e.dividerColor = new b(1, 1, 1, 1);
          let m = new v(e.dividerColor, 2);
          m.constY(i.autoscale ? (r + 1) * 2 / a - 1 : 1), m.arrangeX(), m.xy[2] = 1, i.divider = m, t3.addAuxLine(m);
        }
        if (typeof e.overlay == "object" && (i.useOverlay || !("useOverlay" in i))) {
          let m = e.nLines - i.position - 1;
          n.fillText(l, 20, o.height * (m + 0.2) / e.nLines), n.fillText(`${Math.floor(g) === g ? g : g?.toFixed(5)} ${i.units ? i.units : ""}`, o.width - 100, o.height * (m + 0.2) / e.nLines), n.fillText(`${Math.floor(c) === c ? c : c?.toFixed(5)} ${i.units ? i.units : ""}`, o.width - 100, o.height * (m + 0.9) / e.nLines);
        }
        r++;
      }
      return requestAnimationFrame(h.anim), this.plots[e._id];
    }
    deinitPlot(e) {
      return typeof e == "string" && (e = this.plots[e]), e.plot.clear(), e.plot.removeAllLines(), true;
    }
    reinitPlot(e, t3) {
      if (typeof e == "string") {
        let s = e;
        e = this.plots[e], t3._id || (t3._id = s);
      }
      if (!!e.plot)
        return e.plot.clear(), e.plot.removeAllLines(), e.settings.overlayCtx && e.settings.overlayCtx.clearRect(0, 0, e.settings.overlay?.width, e.settings.overlay?.height), this.initPlot(t3, e.plot);
    }
    getChartSettings(e, t3) {
      let s = this.plots[e];
      if (s) {
        let h = Object.assign({}, s.initial);
        for (let r in s.initial.lines)
          typeof s.initial.lines[r]?.ymax != "number" && (h.lines[r].ymax = s.settings.lines[r]?.ymax), typeof s.initial.lines[r]?.ymin != "number" && (h.lines[r].ymin = s.settings.lines[r]?.ymin), t3 && (h.lines[r].values = s.settings.lines[r].values);
        return delete h.canvas, delete h.overlay, delete h.overlayCtx, h;
      }
    }
    update(e, t3, s = true) {
      if (typeof e == "string" && (e = this.plots[e]), !e)
        return false;
      if (t3) {
        let h = false, r, a;
        typeof e.settings.overlay == "object" && (r = e.settings.overlay, a = e.settings.overlayCtx, a.font = e.settings.overlayFont ? e.settings.overlayFont : "1em Courier", a.fillStyle = e.settings.overlayColor ? e.settings.overlayColor : "white");
        for (let o in t3)
          if (e.settings.lines[o] && e.settings.lines[o].line) {
            if (e.settings.lines[o]?.viewing === false)
              continue;
            let n = e.settings.lines[o];
            if (Array.isArray(t3[o]) && n.values.length < 1e5 ? (n.values.length === 0 && (n.values.length = n.points ? n.points : 1e3), t3[o].length === n.values.length ? n.values = t3[o] : y3.circularBuffer(n.values, t3[o])) : typeof t3[o] == "number" ? (n.values.push(t3[o]), n.values.shift()) : t3[o]?.values && (n.values.length === 0 && (n.values.length = n.points ? n.points : 1e3), t3[o].values.length === n.values.length ? n.values = t3[o].values : y3.circularBuffer(n.values, t3[o].values)), n.values) {
              n.values.length !== n.points && (n.interpolate ? n.values.length > n.points ? n.values = y3.downsample(n.values, n.points) : n.scaled.length < n.points && (n.values = y3.upsample(n.values, n.points)) : n.values.length > n.points ? n.values.splice(0, n.values.length - n.points) : n.values = new Array(n.points).fill(0).splice(n.points - n.values.length, 0, n.values));
              let l = n.ymin, i = n.ymax;
              if (l === i ? (i = n.values.length <= 1e5 ? Math.max(...n.values) : 1, l = n.values.length <= 1e5 ? Math.min(...n.values) : 0) : isNaN(i) && (i = n.values.length <= 1e5 ? Math.max(...n.values) : 1), isNaN(l) && (l = n.values.length <= 1e5 ? Math.min(...n.values) : 0), l > i) {
                let c = l;
                i = l, l = c;
              }
              let u3 = Math.abs(l);
              if (n.absmax = u3 > i ? u3 : i, n.autoscale ? n.autoscale === 2 ? n.scaled = y3.autoscale(n.values, n.position, e.settings.nLines, n.centerZero, l, i, n.clamp) : (n.scaled = n.values, n.line.scaleY = y3.getYScalar(n.values, e.settings.nLines, n.centerZero, l, i), n.line.offsetY = y3.getYOffset(n.position, e.settings.nLines, l, n.line.scaleY)) : n.scaled = n.values, n.scaled.forEach((c, g) => {
                !n.autoscale && n.absmax > 1 ? n.line.setY(g, c / n.absmax) : n.line.setY(g, c);
              }), typeof e.settings.overlay == "object" && (n.useOverlay || !("useOverlay" in n))) {
                let c = e.settings.nLines - n.position - 1;
                a.clearRect(0, r.height * c / e.settings.nLines, r.width, r.height / e.settings.nLines), a.fillText(o, 20, r.height * (c + 0.2) / e.settings.nLines), a.fillText(`${Math.floor(i) === i ? i : i?.toFixed(5)} ${n.units ? n.units : ""}`, r.width - 100, r.height * (c + 0.2) / e.settings.nLines), a.fillText(`${Math.floor(l) === l ? l : l?.toFixed(5)} ${n.units ? n.units : ""}`, r.width - 100, r.height * (c + 0.9) / e.settings.nLines);
              }
            }
          } else
            e.settings.generateNewLines && !o.includes("timestamp") && (Array.isArray(t3[o]) && (t3[o] = { values: t3[o] }), !t3[o].nSec && !t3[o].nPoints && !e.settings.linePoints && (t3[o].nPoints = 1e3), h = true);
        if (h)
          return e.settings.cleanGeneration || Object.keys(e.initial.lines).forEach((o) => {
            t3[o] ? t3[o] = Object.assign(e.initial.lines[o], t3[o]) : t3[o] = e.initial.lines[o];
          }), this.reinitPlot(e, { _id: e.settings._id, lines: t3 }), true;
      }
      return s && requestAnimationFrame(e.anim), true;
    }
    updateLine(e, t3, s, h, r, a, o) {
      return e.numPoints !== t3.length && (s ? e.numPoints > t3.length ? t3 = y3.downsample(t3, e.numPoints) : e.numPoints < t3.length && (t3 = y3.upsample(t3, e.numPoints)) : t3.length > e.numPoints ? t3 = t3.slice(t3.length - e.numPoints) : t3 = [...new Array(t3.length).fill(0), ...t3]), h && (t3 = y3.autoscale(t3, r, a, o)), t3.forEach((n, l) => e.setY(l, n)), true;
    }
    static autoscale(e, t3 = 0, s = 1, h = false, r, a, o) {
      if (e?.length === 0)
        return e;
      let n = typeof a == "number" ? a : e.length <= 1e5 ? Math.max(...e) : 1, l = typeof r == "number" ? r : e.length <= 1e5 ? Math.min(...e) : 0, i = 1 / s, u3 = 1;
      if (h) {
        let c = Math.max(Math.abs(l), Math.abs(n));
        return c !== 0 && (u3 = i / c), e.map((g) => (o && (g < l && (g = l), g > n && (g = n)), g * u3 + (i * (t3 + 1) * 2 - 1 - i)));
      } else
        return n === l ? n !== 0 ? u3 = i / n : l !== 0 && (u3 = i / Math.abs(l)) : u3 = i / (n - l), e.map((c) => (o && (c < l && (c = l), c > n && (c = n)), 2 * ((c - l) * u3 - 1 / (2 * s)) + (i * (t3 + 1) * 2 - 1 - i)));
    }
    static getYScalar(e, t3 = 1, s = false, h, r) {
      if (e?.length === 0)
        return e;
      let a = typeof r == "number" ? r : e.length <= 1e5 ? Math.max(...e) : 1, o = typeof h == "number" ? h : e.length <= 1e5 ? Math.min(...e) : 0, n = 1 / t3, l = 1;
      if (s) {
        let i = Math.max(Math.abs(o), Math.abs(a));
        return i !== 0 && (l = n / i), 2 * l;
      } else
        return a === o ? a !== 0 ? l = n / a : o !== 0 && (l = n / Math.abs(o)) : l = n / (a - o), 2 * l;
    }
    static getYOffset(e = 0, t3 = 1, s = 0, h = 1) {
      let r = 1 / t3, a = r * (e + 1) * 2 - 1 - r;
      return s !== 0 ? a -= s * h + 1 / t3 : a -= h + 1 / t3, a;
    }
    static absmax(e) {
      return Math.max(Math.abs(Math.min(...e)), Math.max(...e));
    }
    static downsample(e, t3, s = 1) {
      if (e.length > t3) {
        let h = new Array(t3), r = e.length / t3, a = e.length - 1, o = 0, n = 0;
        for (let l = r; l < e.length; l += r) {
          let i = Math.round(l);
          i > a && (i = a);
          for (let u3 = o; u3 < i; u3++)
            h[n] += e[u3];
          h[n] /= (i - o) * s, n++, o = i;
        }
        return h;
      } else
        return e;
    }
    static upsample(e, t3, s = 1) {
      var h = function(c, g, p) {
        return (c + (g - c) * p) * s;
      }, r = new Array(t3), a = (e.length - 1) / (t3 - 1);
      r[0] = e[0];
      for (var o = 1; o < t3 - 1; o++) {
        var n = o * a, l = Math.floor(n), i = Math.ceil(n), u3 = n - l;
        r[o] = h(e[l], e[i], u3);
      }
      return r[t3 - 1] = e[e.length - 1], r;
    }
    static interpolate(e, t3, s = 1) {
      return e.length > t3 ? y3.downsample(e, t3, s) : e.length < t3 ? y3.upsample(e, t3, s) : e;
    }
    static HSLToRGB(e, t3, s, h = 255) {
      t3 /= 100, s /= 100;
      let r = (1 - Math.abs(2 * s - 1)) * t3, a = r * (1 - Math.abs(e / 60 % 2 - 1)), o = s - r / 2, n = 0, l = 0, i = 0;
      return 0 <= e && e < 60 ? (n = r, l = a, i = 0) : 60 <= e && e < 120 ? (n = a, l = r, i = 0) : 120 <= e && e < 180 ? (n = 0, l = r, i = a) : 180 <= e && e < 240 ? (n = 0, l = a, i = r) : 240 <= e && e < 300 ? (n = a, l = 0, i = r) : 300 <= e && e < 360 && (n = r, l = 0, i = a), n = (n + o) * h, l = (l + o) * h, i = (i + o) * h, [n, l, i];
    }
    static circularBuffer(e, t3) {
      if (t3.length < e.length) {
        let s = e.slice(t3.length), h = e.length;
        e.splice(0, h, ...s, ...t3);
      } else if (t3.length > e.length) {
        let s = e.length;
        e.splice(0, s, ...t3.slice(t3.length - s));
      } else
        e.splice(0, e.length, ...t3);
      return e;
    }
    static formatDataForCharts(e, t3) {
      if (Array.isArray(e)) {
        if (Array.isArray(e[0])) {
          let s = {};
          if (e.forEach((h, r) => {
            s[r] = h;
          }), e = s, isNaN(e[0][0]))
            return;
        } else if (t3) {
          if (e = { [t3]: e }, isNaN(e[t3][0]))
            return;
        } else if (e = { 0: e }, isNaN(e[0][0]))
          return;
      } else if (typeof e == "object") {
        for (let s in e)
          if (typeof e[s] == "number" ? e[s] = [e[s]] : e[s]?.values && typeof e[s].values == "number" && (e[s].values = [e[s].values]), isNaN(e[s][0]))
            return;
      } else if (typeof e == "string") {
        let s;
        if (e.includes(`\r
`)) {
          let h = e.split(`\r
`);
          e = {}, h.forEach((r, a) => {
            r.includes("	") ? s = r.split("	") : r.includes(",") ? s = r.split(",") : r.includes("|") && (s = r.split("|")), s && s.forEach((o, n) => {
              if (o.includes(":")) {
                let [l, i] = o.split(":"), u3 = parseFloat(i);
                isNaN(u3) || (e[l] = [u3]);
              } else {
                let l = parseFloat(o);
                isNaN(l) || (e[n] = [l]);
              }
            });
          });
        } else
          e.includes("	") ? s = e.split("	") : e.includes(",") ? s = e.split(",") : e.includes("|") && (s = e.split("|"));
        e = {}, s && s.forEach((h, r) => {
          if (h.includes(":")) {
            let [a, o] = h.split(":"), n = parseFloat(o);
            isNaN(n) || (e[a] = [n]);
          } else {
            let a = parseFloat(h);
            isNaN(a) || (e[r] = [a]);
          }
        });
      } else
        typeof e == "number" && (t3 ? e = { [t3]: [e] } : e = { 0: [e] });
      return e;
    }
    static padTime(e, t3, s, h) {
      let r = (e[0] - t3) / s / h;
      return [...new Array(h - e.length).map((o, n) => t3 + r * (n + 1)), ...e];
    }
    static interpolateForTime(e, t3, s) {
      return y3.interpolate(e, Math.ceil(s * t3));
    }
  };
  var url4 = URL.createObjectURL(new Blob([String('(()=>{var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __commonJS=(cb,mod)=>function __require(){return mod||(0,cb[__getOwnPropNames(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from==="object"||typeof from==="function"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:true}):target,mod));var require_browser=__commonJS({"../../node_modules/web-worker/cjs/browser.js"(exports,module){module.exports=Worker}});var EventHandler=class{constructor(data){this.pushToState={};this.data={};this.triggers={};this.setState=updateObj=>{Object.assign(this.data,updateObj);let props=Object.getOwnPropertyNames(updateObj);for(const prop of props){if(this.triggers[prop]){let fn=obj=>{obj.onchange(this.data[prop])};this.triggers[prop].forEach(fn)}}return this.data};this.setValue=(key,value)=>{this.data[key]=value;this.triggerEvent(key,value)};this.triggerEvent=(key,value)=>{if(this.triggers[key]){let fn=obj=>{obj.onchange(value)};this.triggers[key].forEach(fn)}};this.subscribeEvent=(key,onchange,refObject,refKey)=>{if(key){if(refObject&&refKey&&!this.triggers[key]){Object.defineProperty(this.data,key,{get:()=>{return refObject[refKey]},set:value=>{refObject[refKey]=value},enumerable:true,configurable:true})}if(!this.triggers[key]){this.triggers[key]=[]}let l=this.triggers[key].length;this.triggers[key].push({sub:l,onchange});return this.triggers[key].length-1}else return void 0};this.unsubscribeEvent=(key,sub)=>{let triggers=this.triggers[key];if(triggers){if(!sub){delete this.triggers[key];delete this.data[key]}else{let sub2=void 0;let obj=triggers.find((o,i)=>{if(o.sub===sub2){sub2=i;return true}});if(obj)triggers.splice(sub2,1);if(Object.keys(triggers).length===0){delete this.triggers[key];delete this.data[key]}if(this.onRemoved)this.onRemoved(obj);return true}}};this.subscribeEventOnce=(key,onchange)=>{let sub;let changed=value=>{onchange(value);this.unsubscribeEvent(key,sub)};sub=this.subscribeEvent(key,changed)};this.getEvent=(key,sub)=>{for(const s in this.triggers[key]){if(this.triggers[key][s].sub===sub)return this.triggers[key][s]}};this.getSnapshot=()=>{const snapshot={};for(const key in this.data){snapshot[key]=this.data[key]}};if(typeof data==="object")this.data=data}};var state=new EventHandler;var GraphNode=class{constructor(properties,parent,graph){this.__node={tag:`node${Math.floor(Math.random()*1e15)}`,unique:`${Math.floor(Math.random()*1e15)}`,state};this.__setProperties=(properties,parent,graph)=>{let enforceProperties=()=>{let orig=properties;if(typeof properties==="function"){if(isNativeClass(properties)){properties=new properties}else properties={__operator:properties,__node:{forward:true,tag:properties.name}}}else if(typeof properties==="string"){if(graph?.get(properties)){properties=graph.get(properties)}}if(!properties.__node.initial)properties.__node.initial=orig};enforceProperties();if(typeof properties==="object"){let assignState=()=>{if(properties.__node?.state)this.__node.state=properties.__node.state};let setProps2=()=>{if(properties.__props){if(typeof properties.__props==="function")properties.__props=new properties.__props;if(typeof properties.__props==="object"){this.__proxyObject(properties.__props)}}};let setTag=()=>{if(!properties.__node.tag){if(properties.__operator?.name)properties.__node.tag=properties.__operator.name;else properties.__node.tag=`node${Math.floor(Math.random()*1e15)}`}};let setNode=()=>{if(typeof properties.__node==="string"){if(graph?.get(properties.__node.tag)){properties=graph.get(properties.__node.tag)}else properties.__node={}}else if(!properties.__node)properties.__node={};if(graph){properties.__node.graph=graph}if(properties instanceof Graph)properties.__node.source=properties};let setParent=()=>{if(!properties.__parent&&parent)properties.__parent=parent;if(parent?.__node&&!(parent instanceof Graph||properties instanceof Graph))properties.__node.tag=parent.__node.tag+"."+properties.__node.tag;if(parent instanceof Graph&&properties instanceof Graph){if(properties.__node.loaders)Object.assign(parent.__node.loaders?parent.__node.loaders:{},properties.__node.loaders);if(parent.__node.mapGraphs){properties.__node.nodes.forEach(n=>{parent.set(properties.__node.tag+"."+n.__node.tag,n)});let ondelete=()=>{properties.__node.nodes.forEach(n=>{parent.__node.nodes.delete(properties.__node.tag+"."+n.__node.tag)})};this.__addOndisconnected(ondelete)}}};let setOp=()=>{if(typeof properties.default==="function"&&!properties.__operator){properties.__operator=properties.default}if(properties.__operator){if(typeof properties.__operator==="string"){if(graph){let n=graph.get(properties.__operator);if(n)properties.__operator=n.__operator;if(!properties.__node.tag&&properties.__operator.name)properties.__node.tag=properties.__operator.name}}if(typeof properties.__operator==="function")properties.__operator=this.__setOperator(properties.__operator);if(properties.default)properties.default=properties.__operator}};let assignProps=()=>{properties.__node=Object.assign(this.__node,properties.__node);let keys=Object.getOwnPropertyNames(properties);for(const key of keys){this[key]=properties[key]}};assignState();setTag();setProps2();setNode();setParent();assignProps();setOp()}};this.__subscribe=(callback,key,subInput,bound,target)=>{const subscribeToFunction=(k,setTarget=(callback2,target2)=>callback2,triggerCallback=callback)=>{let sub=this.__node.state.subscribeEvent(k,triggerCallback,this,key);let trigger=this.__node.state.getEvent(k,sub);trigger.source=this.__node.tag;if(key)trigger.key=key;trigger.target=setTarget(callback);if(bound)trigger.bound=bound;return sub};const subscribeToGraph=callback2=>{let fn=this.__node.graph.get(callback2);if(!fn&&callback2.includes(".")){let n=this.__node.graph.get(callback2.substring(0,callback2.lastIndexOf(".")));let key2=callback2.substring(callback2.lastIndexOf(".")+1);if(n&&typeof n[key2]==="function")callback2=(...args)=>{return n[key2](...args)}}};if(key){if(!this.__node.localState||!this.__node.localState[key]){this.__addLocalState(this,key)}if(typeof callback==="string"){if(target){if(this.__node.graph?.get(target)){let n=this.__node.graph?.get(target);if(typeof n[callback]==="function"){let fn=n[callback];callback=(...inp)=>{fn(...inp)}}else{let k2=callback;let setter=inp=>{n[k2]=inp};callback=setter}}}else if(typeof this[callback]==="function"){let fn=this[callback];callback=(...inp)=>{fn(...inp)}}else if(this.__node.graph?.get(callback))subscribeToGraph(callback);if(typeof callback!=="function")return void 0}let sub;let k=subInput?this.__node.unique+"."+key+"input":this.__node.unique+"."+key;if(typeof callback==="function")sub=subscribeToFunction(k);else if(callback?.__node)sub=subscribeToFunction(k,(callback2,target2)=>target2?target2:callback2.__node.unique,(...inp)=>{if(callback.__operator)callback.__operator(...inp)});return sub}else{if(typeof callback==="string"){if(this.__node.graph.get(callback))callback=this.__node.graph.get(callback);if(typeof callback!=="object")return void 0}let sub;let k=subInput?this.__node.unique+"input":this.__node.unique;if(typeof callback==="function")sub=subscribeToFunction(k);else if(callback?.__node)sub=subscribeToFunction(k,(callback2,target2)=>target2?target2:callback2.__node.unique,(...inp)=>{if(callback.__operator)callback.__operator(...inp)});return sub}};this.__unsubscribe=(sub,key,unsubInput)=>{if(key)return this.__node.state.unsubscribeEvent(unsubInput?this.__node.unique+"."+key+"input":this.__node.unique+"."+key,sub);else return this.__node.state.unsubscribeEvent(unsubInput?this.__node.unique+"input":this.__node.unique,sub)};this.__setOperator=fn=>{fn=fn.bind(this);if(this.__args&&this.__node.graph){fn=wrapArgs(fn,this.__args,this.__node.graph)}let inpstr=`${this.__node.unique}input`;this.__operator=(...args)=>{if(this.__node.state.triggers[inpstr])this.__node.state.setValue(inpstr,args);let result=fn(...args);if(this.__node.state.triggers[this.__node.unique]){if(typeof result?.then==="function"){result.then(res=>{if(res!==void 0)this.__node.state.setValue(this.__node.unique,res)}).catch(console.error)}else if(result!==void 0)this.__node.state.setValue(this.__node.unique,result)}return result};if(this.__parent instanceof GraphNode&&!this.__subscribedToParent){if(this.__parent.__operator){let sub=this.__parent.__subscribe(this);let ondelete=()=>{this.__parent?.__unsubscribe(sub);delete this.__subscribedToParent};this.__addOndisconnected(ondelete);this.__subscribedToParent=true}}return this.__operator};this.__addLocalState=(props,key)=>{if(!props)return;if(!this.__node.localState){this.__node.localState={}}const localState=this.__node.localState;const initState=(props2,k)=>{let str=this.__node.unique+"."+k;let inpstr=`${str}input`;if(typeof props2[k]==="function"&&k!=="__operator"){let fn=props2[k].bind(this);props2[k]=(...args)=>{if(this.__node.state.triggers[inpstr])this.__node.state.setValue(inpstr,args);let result=fn(...args);if(this.__node.state.triggers[str]){if(typeof result?.then==="function"){result.then(res=>{this.__node.state.triggerEvent(str,res)}).catch(console.error)}else this.__node.state.triggerEvent(str,result)}return result}}else{let get,set;if(this.__props?.[k]){get=()=>{return this.__props[k]};set=v=>{this.__props[k]=v;if(this.__node.state.triggers[str])this.__node.state.triggerEvent(str,v)}}else{localState[k]=props2[k];get=()=>{return localState[k]};set=v=>{localState[k]=v;if(this.__node.state.triggers[str])this.__node.state.triggerEvent(str,v)}}const descriptor={get,set,enumerable:true,configurable:true};Object.defineProperty(props2,k,descriptor);if(typeof this.__node.initial==="object"){let dec=Object.getOwnPropertyDescriptor(this.__node.initial,k);if(dec===void 0||dec?.configurable){Object.defineProperty(this.__node.initial,k,descriptor)}}}};if(key)initState(props,key);else{for(let k in props){initState(props,k)}}};this.__proxyObject=obj=>{const allProps=getAllProperties(obj);for(const k of allProps){if(typeof obj[k]==="function"){this[k]=(...args)=>{return obj[k](...args)}}else{const descriptor={get:()=>{return obj[k]},set:value=>{obj[k]=value},enumerable:true,configurable:true};Object.defineProperty(this,k,descriptor)}}};this.__setProperties(properties,parent,graph)}__addOnconnected(callback){if(Array.isArray(this.__onconnected)){this.__onconnected.push(callback)}else if(typeof this.__onconnected==="function"){this.__onconnected=[callback,this.__onconnected]}else this.__onconnected=callback}__addOndisconnected(callback){if(Array.isArray(this.__ondisconnected)){this.__ondisconnected.push(callback)}else if(typeof this.__ondisconnected==="function"){this.__ondisconnected=[callback,this.__ondisconnected]}else this.__ondisconnected=callback}__callConnected(node=this){if(typeof this.__onconnected==="function"){this.__onconnected(this)}else if(Array.isArray(this.__onconnected)){let fn=o=>{o(this)};this.__onconnected.forEach(fn)}}__callDisconnected(node=this){if(typeof this.__ondisconnected==="function")this.__ondisconnected(this);else if(Array.isArray(this.__ondisconnected)){let fn=o=>{o(this)};this.__ondisconnected.forEach(fn)}}};var Graph=class{constructor(options){this.__node={tag:`graph${Math.floor(Math.random()*1e15)}`,unique:`${Math.random()}`,nodes:new Map,state,roots:{}};this.init=options=>{if(options){let cpy=Object.assign({},options);delete cpy.roots;recursivelyAssign(this.__node,cpy);if(options.roots)this.load(options.roots)}};this.load=roots=>{function recursivelyAssignChildren(target,obj,inChildren=true,top=true){if(top){if(target)Object.assign(target,obj);else target=Object.assign({},obj);recursivelyAssignChildren(target,obj,true,false)}if(obj.__children&&!inChildren){if(obj.__children?.constructor.name==="Object"){if(target.__children?.constructor.name==="Object")recursivelyAssignChildren(target.__children,obj.__children,true,false);else target.__children=recursivelyAssignChildren({},obj.__children,true,false)}else{target.__children=obj.__children}}else if(inChildren){for(const key in obj){target[key]=Object.assign({},obj[key]);if(obj[key].__children){recursivelyAssignChildren({},obj[key].__children,false,false)}}}return target}this.__node.roots=recursivelyAssignChildren(this.__node.roots?this.__node.roots:{},roots);let cpy=Object.assign({},roots);if(cpy.__node)delete cpy.__node;let listeners=this.recursiveSet(cpy,this,void 0,roots);if(roots.__node){if(!roots.__node.tag)roots.__node._tag=`roots${Math.floor(Math.random()*1e15)}`;else if(!this.get(roots.__node.tag)){let node=new GraphNode(roots,this,this);this.set(node.__node.tag,node);this.runLoaders(node,this,roots,roots.__node.tag);if(node.__listeners){listeners[node.__node.tag]=node.__listeners}}}else if(roots.__listeners){this.setListeners(roots.__listeners)}this.setListeners(listeners);return cpy};this.setLoaders=(loaders2,replace)=>{if(replace)this.__node.loaders=loaders2;else Object.assign(this.__node.loaders,loaders2);return this.__node.loaders};this.runLoaders=(node,parent,properties,key)=>{for(const l in this.__node.loaders){if(typeof this.__node.loaders[l]==="object"){if(this.__node.loaders[l].init)this.__node.loaders[l](node,parent,this,this.__node.roots,properties,key);if(this.__node.loaders[l].connected)node.__addOnconnected(this.__node.loaders[l].connect);if(this.__node.loaders[l].disconnected)node.__addOndisconnected(this.__node.loaders[l].disconnect)}else if(typeof this.__node.loaders[l]==="function")this.__node.loaders[l](node,parent,this,this.__node.roots,properties,key)}};this.add=(properties,parent)=>{let listeners={};if(typeof parent==="string")parent=this.get(parent);let instanced;if(typeof properties==="function"){if(isNativeClass(properties)){if(properties.prototype instanceof GraphNode){properties=properties.prototype.constructor(properties,parent,this);instanced=true}else properties=new properties}else properties={__operator:properties}}else if(typeof properties==="string"){properties=this.__node.roots[properties]}if(!properties)return;if(!instanced){let keys=Object.getOwnPropertyNames(properties);let cpy={};for(const key of keys){cpy[key]=properties[key]}properties=cpy}if(!properties.__node)properties.__node={};properties.__node.initial=properties;if(typeof properties==="object"&&(!properties?.__node?.tag||!this.get(properties.__node.tag))){let node;if(instanced)node=properties;else node=new GraphNode(properties,parent,this);this.set(node.__node.tag,node);this.runLoaders(node,parent,properties,node.__node.tag);this.__node.roots[node.__node.tag]=properties;if(node.__listeners){listeners[node.__node.tag]=node.__listeners}if(node.__children){node.__children=Object.assign({},node.__children);this.recursiveSet(node.__children,node,listeners,node.__children)}this.setListeners(listeners);node.__callConnected();return node}return};this.recursiveSet=(t,parent,listeners={},origin)=>{let keys=Object.getOwnPropertyNames(origin);for(const key of keys){if(key.includes("__"))continue;let p=origin[key];if(Array.isArray(p))continue;let instanced;if(typeof p==="function"){if(isNativeClass(p)){p=new p;if(p instanceof GraphNode){p=p.prototype.constructor(p,parent,this);instanced=true}}else p={__operator:p}}else if(typeof p==="string"){if(this.__node.nodes.get(p))p=this.__node.nodes.get(p);else p=this.__node.roots[p]}else if(typeof p==="boolean"){if(this.__node.nodes.get(key))p=this.__node.nodes.get(key);else p=this.__node.roots[key]}if(typeof p==="object"){if(!instanced&&!(p instanceof GraphNode)){let keys2=Object.getOwnPropertyNames(p);let cpy={};for(const key2 of keys2){cpy[key2]=p[key2]}p=cpy}if(!p.__node)p.__node={};if(!p.__node.tag)p.__node.tag=key;if(!p.__node.initial)p.__node.initial=t[key];if(this.get(p.__node.tag)&&!(!(parent instanceof Graph)&&parent?.__node)||parent?.__node&&this.get(parent.__node.tag+"."+p.__node.tag))continue;let node;if(instanced||p instanceof GraphNode){node=p}else node=new GraphNode(p,parent,this);if(p instanceof GraphNode&&!instanced&&parent instanceof GraphNode){let sub=this.subscribe(parent.__node.tag,node.__node.tag);let ondelete=node2=>{this.unsubscribe(parent.__node.tag,sub)};node.__addOndisconnected(ondelete)}else{this.set(node.__node.tag,node);this.runLoaders(node,parent,t[key],key);t[key]=node;this.__node.roots[node.__node.tag]=p;if(node.__listeners){listeners[node.__node.tag]=node.__listeners}if(node.__children){node.__children=Object.assign({},node.__children);this.recursiveSet(node.__children,node,listeners,node.__children)}node.__callConnected()}}}return listeners};this.remove=(node,clearListeners=true)=>{this.unsubscribe(node);if(typeof node==="string")node=this.get(node);if(node instanceof GraphNode){this.delete(node.__node.tag);delete this.__node.roots[node.__node.tag];if(clearListeners){this.clearListeners(node)}node.__callDisconnected();const recursiveRemove=t=>{for(const key in t){this.unsubscribe(t[key]);this.delete(t[key].__node.tag);delete this.__node.roots[t[key].__node.tag];this.delete(key);delete this.__node.roots[key];t[key].__node.tag=t[key].__node.tag.substring(t[key].__node.tag.lastIndexOf(".")+1);if(clearListeners){this.clearListeners(t[key])}t[key].__callDisconnected();if(t[key].__children){recursiveRemove(t[key].__children)}}};if(node.__children){recursiveRemove(node.__children)}}if(node?.__node.tag&&node?.__parent){delete node?.__parent;node.__node.tag=node.__node.tag.substring(node.__node.tag.indexOf(".")+1)}return node};this.run=(node,...args)=>{if(typeof node==="string"){let nd=this.get(node);if(!nd&&node.includes(".")){nd=this.get(node.substring(0,node.lastIndexOf(".")));if(typeof nd?.[node.substring(node.lastIndexOf(".")+1)]==="function")return nd[node.substring(node.lastIndexOf(".")+1)](...args)}else if(nd?.__operator)return nd.__operator(...args)}if(node?.__operator){return node?.__operator(...args)}};this.setListeners=listeners=>{for(const key in listeners){let node=this.get(key);if(typeof listeners[key]==="object"){for(const k in listeners[key]){let n=this.get(k);let sub;if(typeof listeners[key][k]!=="object")listeners[key][k]={__callback:listeners[key][k]};else if(!listeners[key][k].__callback){for(const kk in listeners[key][k]){if(typeof listeners[key][k][kk]!=="object"){listeners[key][k][kk]={__callback:listeners[key][k][kk]};if(listeners[key][k][kk].__callback===true||typeof listeners[key][k][kk].__callback==="undefined")listeners[key][k][kk].__callback=node.__operator}let nn=this.get(kk);if(nn){if(!nn){let tag=k.substring(0,k.lastIndexOf("."));nn=this.get(tag);if(n){sub=this.subscribe(nn,listeners[key][k][kk].__callback,listeners[key][k][kk].__args,k.substring(k.lastIndexOf(".")+1),listeners[key][k][kk].inputState,key,k);if(typeof node.__listeners[k][kk]!=="object")node.__listeners[k][kk]={__callback:listeners[key][k][kk].__callback,inputState:listeners[key][k][kk]?.inputState};node.__listeners[k][kk].sub=sub}}else{sub=this.subscribe(nn,listeners[key][k][kk].__callback,listeners[key][k].__args,void 0,listeners[key][k].inputState,key,k);if(typeof node.__listeners[k][kk]!=="object")node.__listeners[k][kk]={__callback:listeners[key][k][kk].__callback,inputState:listeners[key][k][kk]?.inputState};node.__listeners[k][kk].sub=sub}}}}if("__callback"in listeners[key][k]){if(listeners[key][k].__callback===true||typeof listeners[key][k].__callback==="undefined")listeners[key][k].__callback=node.__operator;if(typeof listeners[key][k].__callback==="function")listeners[key][k].__callback=listeners[key][k].__callback.bind(node);if(typeof node.__listeners!=="object")node.__listeners={};if(!n){let tag=k.substring(0,k.lastIndexOf("."));n=this.get(tag);if(n){sub=this.subscribe(n,listeners[key][k].__callback,listeners[key][k].__args,k.substring(k.lastIndexOf(".")+1),listeners[key][k].inputState,key,k);if(typeof node.__listeners[k]!=="object")node.__listeners[k]={__callback:listeners[key][k].__callback,inputState:listeners[key][k]?.inputState};node.__listeners[k].sub=sub}}else{sub=this.subscribe(n,listeners[key][k].__callback,listeners[key][k].__args,void 0,listeners[key][k].inputState,key,k);if(typeof node.__listeners[k]!=="object")node.__listeners[k]={__callback:listeners[key][k].__callback,inputState:listeners[key][k]?.inputState};node.__listeners[k].sub=sub}}}}}};this.clearListeners=(node,listener)=>{if(typeof node==="string")node=this.get(node);if(node?.__listeners){for(const key in node.__listeners){if(listener&&key!==listener)continue;if(typeof node.__listeners[key].sub!=="number")continue;let n=this.get(key);if(!n){n=this.get(key.substring(0,key.lastIndexOf(".")));if(n){if(!node.__listeners[key].__callback){for(const k in node.__listeners[key]){this.unsubscribe(n,node.__listeners[key][k].sub,key.substring(key.lastIndexOf(".")+1),node.__listeners[key][k].inputState)}}else this.unsubscribe(n,node.__listeners[key].sub,key.substring(key.lastIndexOf(".")+1),node.__listeners[key].inputState)}}else{if(!node.__listeners[key].__callback){for(const k in node.__listeners[key]){this.unsubscribe(n,node.__listeners[key][k].sub,void 0,node.__listeners[key][k].inputState)}}else this.unsubscribe(n,node.__listeners[key].sub,void 0,node.__listeners[key].inputState)}delete node.__listeners[key]}}};this.get=tag=>{return this.__node.nodes.get(tag)};this.set=(tag,node)=>{return this.__node.nodes.set(tag,node)};this.delete=tag=>{return this.__node.nodes.delete(tag)};this.getProps=(node,getInitial)=>{if(typeof node==="string")node=this.get(node);if(node instanceof GraphNode){let cpy;if(getInitial)cpy=Object.assign({},this.__node.roots[node.__node.tag]);else{cpy=Object.assign({},node);for(const key in cpy){if(key.includes("__"))delete cpy[key]}}}};this.subscribe=(nodeEvent,onEvent,args,key,subInput,target,bound)=>{let nd=nodeEvent;if(typeof nodeEvent==="string"){nd=this.get(nodeEvent);if(!nd&&nodeEvent.includes(".")){nd=this.get(nodeEvent.substring(0,nodeEvent.lastIndexOf(".")));key=nodeEvent.substring(nodeEvent.lastIndexOf(".")+1)}}let sub;if(target instanceof GraphNode)target=target.__node.tag;if(typeof onEvent==="string"){let key2=onEvent;if(target){let node=this.get(target);if(typeof node?.[onEvent]==="function"){onEvent=function(...inp){return node[key2](...inp)}}else{onEvent=function(inp){node[key2]=inp;return node[key2]}}}else{if(this.get(onEvent)?.__operator){let node=this.get(onEvent);onEvent=function(...inp){return node.__operator(...inp)}}else if(onEvent.includes(".")){let n=this.get(onEvent.substring(0,onEvent.lastIndexOf(".")));let key3=onEvent.substring(onEvent.lastIndexOf(".")+1);if(typeof n[key3]==="function"){onEvent=function(...inp){return n[key3](...inp)}}else{onEvent=function(inp){n[key3]=inp;return n[key3]}}}}}if((typeof onEvent==="function"||onEvent instanceof GraphNode)&&args){if(onEvent instanceof GraphNode&&onEvent.__operator)onEvent=function(inp){return onEvent.__operator(inp)};onEvent=wrapArgs(onEvent,args,this)}if(nd instanceof GraphNode){sub=nd.__subscribe(onEvent,key,subInput,target,bound);let ondelete=()=>{nd.__unsubscribe(sub,key,subInput)};nd.__addOndisconnected(ondelete)}else if(typeof nodeEvent==="string"){if(this.get(nodeEvent)){if(onEvent instanceof GraphNode&&onEvent.__operator){sub=this.get(nodeEvent).__subscribe(onEvent.__operator,key,subInput,target,bound);let ondelete=()=>{this.get(nodeEvent).__unsubscribe(sub)};onEvent.__addOndisconnected(ondelete)}else if(typeof onEvent==="function"||typeof onEvent==="string"){sub=this.get(nodeEvent).__subscribe(onEvent,key,subInput,target,bound);this.__node.state.getEvent(this.get(nodeEvent).__node.unique,sub).source=nodeEvent}}else{if(typeof onEvent==="string")onEvent=this.__node.nodes.get(onEvent).__operator;if(typeof onEvent==="function")sub=this.__node.state.subscribeEvent(nodeEvent,onEvent)}}return sub};this.unsubscribe=(node,sub,key,subInput)=>{if(node instanceof GraphNode){return node.__unsubscribe(sub,key,subInput)}else return this.get(node)?.__unsubscribe(sub,key,subInput)};this.setState=update=>{this.__node.state.setState(update)};this.init(options)}};function recursivelyAssign(target,obj){for(const key in obj){if(obj[key]?.constructor.name==="Object"&&!Array.isArray(obj[key])){if(target[key]?.constructor.name==="Object"&&!Array.isArray(target[key]))recursivelyAssign(target[key],obj[key]);else target[key]=recursivelyAssign({},obj[key])}else{target[key]=obj[key]}}return target}function getAllProperties(obj){var allProps=[],curr=obj;do{var props=Object.getOwnPropertyNames(curr);let fn=function(prop){if(allProps.indexOf(prop)===-1)allProps.push(prop)};props.forEach(fn)}while(curr=Object.getPrototypeOf(curr));return allProps}function isNativeClass(thing){return typeof thing==="function"&&thing.hasOwnProperty("prototype")&&!thing.hasOwnProperty("arguments")}var wrapArgs=(callback,argOrder,graph)=>{let args=[];let getCallbackFromString=a=>{if(graph.get(a)?.__operator){let node=graph.get(a);return(...inp)=>{node.__operator(...inp)}}else if(a.includes(".")){let split=a.split(".");let popped=split.pop();let joined=split.join(".");let node=graph.get(joined);if(typeof graph.get(joined)?.[popped]==="function"){return(...inp)=>{return node[popped](...inp)}}else return()=>{return node[popped]}}else if(graph.get(a)){let node=graph.get(a);return()=>{return node}}else{let arg=a;return()=>{return arg}}};let forArg=(a,i)=>{if(a==="__output"){args[i]=inp=>{return inp}}else if(typeof a==="string"){args[i]=getCallbackFromString(a)}else if(typeof a==="function"){let fn2=a;args[i]=(...inp)=>{return fn2(...inp)}}else if(typeof a==="object"&&a.__input){let recursivelyCreateCallback=function(c){let input=c.__input;if(typeof c.__input==="string"){input=getCallbackFromString(c.__input)}if(c.__args){input=wrapArgs(input,c.__args,graph)}if(c.__output){let output=c.__output;if(typeof c.__output==="string"){output=getCallbackFromString(output)}else if(typeof a.__output==="object"){output=recursivelyCreateCallback(output)}if(typeof output==="function"){let fn2=input;input=(...inp)=>{return output(fn2(...inp))}}}return input};args[i]=recursivelyCreateCallback(a)}else{let arg=a;args[i]=()=>{return arg}}};argOrder.forEach(forArg);if(typeof callback==="string")callback=getCallbackFromString(callback);let fn=callback;callback=function(...inp){let mapArg=arg=>{return arg(...inp)};return fn(...args.map(mapArg))};return callback};var backprop=(node,parent,graph)=>{if(node.__node.backward&&parent instanceof GraphNode){graph.setListeners({[parent.__node.tag]:{[node.__node.tag]:parent}})}};var loop=(node,parent,graph)=>{if(node.__operator&&!node.__node.looperSet){if(typeof node.__node.delay==="number"){let fn=node.__operator;node.__setOperator((...args)=>{return new Promise((res,rej)=>{setTimeout(async()=>{res(await fn(...args))},node.__node.delay)})})}else if(node.__node.frame===true){let fn=node.__operator;node.__setOperator((...args)=>{return new Promise((res,rej)=>{requestAnimationFrame(async()=>{res(await fn(...args))})})})}if(typeof node.__node.repeat==="number"||typeof node.__node.recursive==="number"){let fn=node.__operator;node.__setOperator(async(...args)=>{let i=node.__node.repeat?node.__node.repeat:node.__node.recursive;let result;let repeater=async(tick,...inp)=>{while(tick>0){if(node.__node.delay||node.__node.frame){fn(...inp).then(async res=>{if(node.__node.recursive){await repeater(tick,res)}else await repeater(tick,...inp)});break}else result=await fn(...args);tick--}};await repeater(i,...args);return result})}if(node.__node.loop&&typeof node.__node.loop==="number"){node.__node.looperSet=true;let fn=node.__operator;node.__setOperator((...args)=>{if(!("looping"in node.__node))node.__node.looping=true;if(node.__node.looping){fn(...args);setTimeout(()=>{node.__operator(...args)},node.__node.loop)}});if(node.__node.looping)node.__operator();let ondelete=node2=>{if(node2.__node.looping)node2.__node.looping=false};node.__addOndisconnected(ondelete)}}};var animate=(node,parent,graph)=>{if(node.__node.animate===true||node.__animation){let fn=node.__operator;node.__setOperator((...args)=>{if(!("animating"in node.__node))node.__node.animating=true;if(node.__node.animating){if(typeof node.__animation==="function")node.__animation(...args);else fn(...args);requestAnimationFrame(()=>{node.__operator(...args)})}});if(node.__node.animating||(!("animating"in node.__node)||node.__node.animating)&&node.__animation)setTimeout(()=>{requestAnimationFrame(node.__operator)},10);let ondelete=node2=>{if(node2.__node.animating)node2.__node.animating=false};node.__addOndisconnected(ondelete)}};var branching=(node,parent,graph)=>{if(typeof node.__branch==="object"&&node.__operator&&!node.__branchApplied){let fn=node.__operator;node.__branchApplied=true;node.__operator=(...args)=>{let result=fn(...args);for(const key in node.__branch){let triggered=()=>{if(typeof node.__branch[key].then==="function"){node.__branch[key].then(result)}else if(node.__branch[key].then instanceof GraphNode&&node.__branch[key].then.__operator){node.__branch[key].then.__operator(result)}else result=node.__branch[key].then};if(typeof node.__branch[key].if==="function"){if(node.__branch[key].if(result)==true){triggered()}}else if(node.__branch[key].if===result){triggered()}}return result}}if(node.__listeners){for(const key in node.__listeners){if(typeof node.__listeners[key]==="object"){if(node.__listeners[key].branch&&!node.__listeners[key].branchApplied){let fn=node.__listeners[key].callback;node.__listeners[key].branchApplied=true;node.__listeners.callback=ret=>{let triggered=()=>{if(typeof node.__listeners[key].branch.then==="function"){ret=node.__listeners[key].branch.then(ret)}else if(node.__listeners[key].branch.then instanceof GraphNode&&node.__listeners[key].branch.then.__operator){ret=node.__listeners[key].branch.then.__operator(ret)}else ret=node.__listeners[key].branch.then};if(typeof node.__listeners[key].branch.if==="function"){if(node.__listeners[key].branch.if(ret)){triggered()}}else if(node.__listeners[key].branch.if===ret){triggered()}return fn(ret)}}}}}};var triggerListenerOncreate=(node,parent,graph)=>{if(node.__listeners){for(const key in node.__listeners){if(typeof node.__listeners[key]==="object"){if(node.__listeners[key].oncreate){node.__listeners[key].callback(node.__listeners[key].oncreate)}}}}};var bindListener=(node,parent,graph)=>{if(node.__listeners){for(const key in node.__listeners){if(typeof node.__listeners[key]==="object"){if(typeof node.__listeners[key].binding==="object"){node.__listeners.callback=node.__listeners.callback.bind(node.__listeners[key].binding)}}}}};var transformListenerResult=(node,parent,graph)=>{if(node.__listeners){for(const key in node.__listeners){if(typeof node.__listeners[key]==="object"){if(typeof node.__listeners[key].transform==="function"&&!node.__listeners[key].transformApplied){let fn=node.__listeners[key].callback;node.__listeners[key].transformApplied=true;node.__listeners.callback=ret=>{ret=node.__listeners[key].transform(ret);return fn(ret)}}}}}};var substitute__operator=(node,parent,graph)=>{if(node.post&&!node.__operator){node.__setOperator(node.post)}else if(!node.__operator&&typeof node.get=="function"){node.__setOperator(node.get)}if(!node.get&&node.__operator){node.get=node.__operator}if(node.aliases){node.aliases.forEach(a=>{graph.set(a,node);let ondelete=node2=>{graph.__node.nodes.delete(a)};node.__addOndisconnected(ondelete)})}if(typeof graph.__node.roots?.[node.__node.tag]==="object"&&node.get)graph.__node.roots[node.__node.tag].get=node.get};var loaders={backprop,loop,animate,branching,triggerListenerOncreate,bindListener,transformListenerResult,substitute__operator};var Service=class extends Graph{constructor(options){super({...options,loaders:options?.loaders?Object.assign({...loaders},options.loaders):{...loaders}});this.name=`service${Math.floor(Math.random()*1e15)}`;this.addServices=services=>{for(const s in services){if(typeof services[s]==="function")services[s]=new services[s];if(services[s]?.__node?.loaders)Object.assign(this.__node.loaders,services[s].__node.loaders);if(services[s]?.__node?.nodes){services[s].__node.nodes.forEach((n,tag)=>{if(!this.get(tag)){this.set(tag,n)}else this.set(s+"."+tag,n)});this.__node.nodes.forEach((n,k)=>{if(!services[s].__node.nodes.get(k))services[s].__node.nodes.set(k,n)});let set=this.set;this.set=(tag,node)=>{services[s].set(tag,node);return set(tag,node)};let del=this.delete;this.delete=tag=>{services[s].delete(tag);return del(tag)}}else if(typeof services[s]==="object"){this.load(services[s])}}};this.handleMethod=(route,method,args)=>{let m=method.toLowerCase();let src=this.__node.nodes.get(route);if(!src){src=this.__node.roots[route]}if(src?.[m]){if(typeof src[m]!=="function"){if(args)src[m]=args;return src[m]}else return src[m](args)}else return this.handleServiceMessage({route,args,method})};this.transmit=(...args)=>{if(typeof args[0]==="object"){if(args[0].method){return this.handleMethod(args[0].route,args[0].method,args[0].args)}else if(args[0].route){return this.handleServiceMessage(args[0])}else if(args[0].node){return this.handleGraphNodeCall(args[0].node,args[0].args)}else if(this.__node.keepState){if(args[0].route)this.setState({[args[0].route]:args[0].args});if(args[0].node)this.setState({[args[0].node]:args[0].args})}return args}else return args};this.receive=(...args)=>{if(args[0]){if(typeof args[0]==="string"){let substr=args[0].substring(0,8);if(substr.includes("{")||substr.includes("[")){if(substr.includes("\\\\"))args[0]=args[0].replace(/\\\\/g,"");if(args[0][0]===\'"\'){args[0]=args[0].substring(1,args[0].length-1)};args[0]=JSON.parse(args[0])}}}if(typeof args[0]==="object"){if(args[0].method){return this.handleMethod(args[0].route,args[0].method,args[0].args)}else if(args[0].route){return this.handleServiceMessage(args[0])}else if(args[0].node){return this.handleGraphNodeCall(args[0].node,args[0].args)}else if(this.__node.keepState){if(args[0].route)this.setState({[args[0].route]:args[0].args});if(args[0].node)this.setState({[args[0].node]:args[0].args})}return args}else return args};this.pipe=(source,destination,endpoint,method,callback)=>{if(source instanceof GraphNode){if(callback)return this.subscribe(source,res=>{let mod=callback(res);if(mod!==void 0)this.transmit({route:destination,args:mod,method});else this.transmit({route:destination,args:res,method},endpoint)});else return this.subscribe(source,res=>{this.transmit({route:destination,args:res,method},endpoint)})}else if(typeof source==="string")return this.subscribe(source,res=>{this.transmit({route:destination,args:res,method},endpoint)})};this.pipeOnce=(source,destination,endpoint,method,callback)=>{if(source instanceof GraphNode){if(callback)return source.__node.state.subscribeEventOnce(source.__node.unique,res=>{let mod=callback(res);if(mod!==void 0)this.transmit({route:destination,args:mod,method});else this.transmit({route:destination,args:res,method},endpoint)});else return this.__node.state.subscribeEventOnce(source.__node.unique,res=>{this.transmit({route:destination,args:res,method},endpoint)})}else if(typeof source==="string")return this.__node.state.subscribeEventOnce(this.__node.nodes.get(source).__node.unique,res=>{this.transmit({route:destination,args:res,method},endpoint)})};this.terminate=(...args)=>{};this.isTypedArray=isTypedArray;this.recursivelyAssign=recursivelyAssign2;this.spliceTypedArray=spliceTypedArray;this.ping=()=>{console.log("pinged!");return"pong"};this.echo=(...args)=>{this.transmit(...args);return args};if(options?.services)this.addServices(options.services);this.load(this)}handleServiceMessage(message){let call;if(typeof message==="object"){if(message.route)call=message.route;else if(message.node)call=message.node}if(call){if(Array.isArray(message.args))return this.run(call,...message.args);else return this.run(call,message.args)}else return message}handleGraphNodeCall(route,args){if(!route)return args;if(args?.args){this.handleServiceMessage(args)}else if(Array.isArray(args))return this.run(route,...args);else return this.run(route,args)}};function isTypedArray(x2){return ArrayBuffer.isView(x2)&&Object.prototype.toString.call(x2)!=="[object DataView]"}var recursivelyAssign2=(target,obj)=>{for(const key in obj){if(typeof obj[key]==="object"&&!Array.isArray(obj[key])){if(typeof target[key]==="object"&&!Array.isArray(target[key]))recursivelyAssign2(target[key],obj[key]);else target[key]=recursivelyAssign2({},obj[key])}else target[key]=obj[key]}return target};function spliceTypedArray(arr,start,end){let s=arr.subarray(0,start);let e;if(end){e=arr.subarray(end+1)}let ta;if(s.length>0||e?.length>0)ta=new arr.constructor(s.length+e.length);if(ta){if(s.length>0)ta.set(s);if(e&&e.length>0)ta.set(e,s.length)}return ta}var import_web_worker=__toESM(require_browser());var recursivelyStringifyFunctions=obj=>{let cpy={};for(const key in obj){if(typeof obj[key]==="object"){cpy[key]=recursivelyStringifyFunctions(obj[key])}else if(typeof obj[key]==="function"){cpy[key]=obj[key].toString()}}return cpy};function parseFunctionFromText(method=""){let getFunctionBody=methodString=>{return methodString.replace(/^\\W*(function[^{]+\\{([\\s\\S]*)\\}|[^=]+=>[^{]*\\{([\\s\\S]*)\\}|[^=]+=>(.+))/i,"$2$3$4")};let getFunctionHead=methodString=>{let startindex=methodString.indexOf("=>")+1;if(startindex<=0){startindex=methodString.indexOf("){")}if(startindex<=0){startindex=methodString.indexOf(") {")}return methodString.slice(0,methodString.indexOf("{",startindex)+1)};let newFuncHead=getFunctionHead(method);let newFuncBody=getFunctionBody(method);let newFunc;if(newFuncHead.includes("function")){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody)}else{if(newFuncHead.substring(0,6)===newFuncBody.substring(0,6)){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody.substring(newFuncBody.indexOf("{")+1,newFuncBody.length-1))}else{try{newFunc=(0,eval)(newFuncHead+newFuncBody+"}")}catch{}}}return newFunc}var stringifyWithCircularRefs=function(){const refs=new Map;const parents=[];const path=["this"];function clear(){refs.clear();parents.length=0;path.length=1}function updateParents(key,value){var idx=parents.length-1;var prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value||idx===0){path.push(key);parents.push(value.pushed)}else{while(idx-->=0){prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value){idx+=2;parents.length=idx;path.length=idx;--idx;parents[idx]=value;path[idx]=key;break}}idx--}}}}function checkCircular(key,value){if(value!=null){if(typeof value==="object"){if(key){updateParents(key,value)}let other=refs.get(value);if(other){return"[Circular Reference]"+other}else{refs.set(value,path.join("."))}}}return value}return function stringifyWithCircularRefs2(obj,space){try{parents.push(obj);return JSON.stringify(obj,checkCircular,space)}finally{clear()}}}();if(JSON.stringifyWithCircularRefs===void 0){JSON.stringifyWithCircularRefs=stringifyWithCircularRefs}var stringifyFast=function(){const refs=new Map;const parents=[];const path=["this"];function clear(){refs.clear();parents.length=0;path.length=1}function updateParents(key,value){var idx=parents.length-1;if(parents[idx]){var prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value||idx===0){path.push(key);parents.push(value.pushed)}else{while(idx-->=0){prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value){idx+=2;parents.length=idx;path.length=idx;--idx;parents[idx]=value;path[idx]=key;break}}idx++}}}}}function checkValues(key,value){let val;if(value!=null){if(typeof value==="object"){let c=value.constructor.name;if(key&&c==="Object"){updateParents(key,value)}let other=refs.get(value);if(other){return"[Circular Reference]"+other}else{refs.set(value,path.join("."))}if(c==="Array"){if(value.length>20){val=value.slice(value.length-20)}else val=value}else if(c.includes("Set")){val=Array.from(value)}else if(c!=="Object"&&c!=="Number"&&c!=="String"&&c!=="Boolean"){val="instanceof_"+c}else if(c==="Object"){let obj={};for(const prop in value){if(value[prop]==null){obj[prop]=value[prop]}else if(Array.isArray(value[prop])){if(value[prop].length>20)obj[prop]=value[prop].slice(value[prop].length-20);else obj[prop]=value[prop]}else if(value[prop].constructor.name==="Object"){obj[prop]={};for(const p in value[prop]){if(Array.isArray(value[prop][p])){if(value[prop][p].length>20)obj[prop][p]=value[prop][p].slice(value[prop][p].length-20);else obj[prop][p]=value[prop][p]}else{if(value[prop][p]!=null){let con=value[prop][p].constructor.name;if(con.includes("Set")){obj[prop][p]=Array.from(value[prop][p])}else if(con!=="Number"&&con!=="String"&&con!=="Boolean"){obj[prop][p]="instanceof_"+con}else{obj[prop][p]=value[prop][p]}}else{obj[prop][p]=value[prop][p]}}}}else{let con=value[prop].constructor.name;if(con.includes("Set")){obj[prop]=Array.from(value[prop])}else if(con!=="Number"&&con!=="String"&&con!=="Boolean"){obj[prop]="instanceof_"+con}else{obj[prop]=value[prop]}}}val=obj}else{val=value}}else{val=value}}return val}return function stringifyFast2(obj,space){parents.push(obj);let res=JSON.stringify(obj,checkValues,space);clear();return res}}();if(JSON.stringifyFast===void 0){JSON.stringifyFast=stringifyFast}function methodstrings(node){if(typeof node.__methods==="object"){for(const key in node.__methods){let fstr=node.__methods[key];let fn=typeof fstr==="function"?fstr:parseFunctionFromText(fstr);if(key==="__operator"){node.__setOperator(fn)}else{node[key]=fn.bind(node)}}}}var WorkerService=class extends Service{constructor(options){super();this.name="worker";this.workers={};this.threadRot=0;this.loadWorkerRoute=(rt,routeKey)=>{if(rt.workerUrl)rt.url=rt.workerUrl;if(rt.workerId)rt.__node.tag=rt.workerId;if(!rt.__node.tag)rt.__node.tag=routeKey;rt._id=rt.__node.tag;let worker;if(this.workers[rt._id])worker=this.workers[rt._id];else if(rt.worker)worker=rt.worker;if(!worker){worker=this.addWorker(rt)}rt.worker=worker;if(!rt.worker.__ondisconnected){let ondelete=rt2=>{rt2.worker?.terminate()};rt.__addOndisconnected(ondelete)}if(rt.transferFunctions){for(const prop in rt.transferFunctions){this.transferFunction(worker,rt.transferFunctions[prop],prop)}}if(rt.transferClasses){for(const prop in rt.transferClasses){this.transferClass(worker,rt.transferClasses[prop],prop)}}if(worker){if(!rt.__operator){rt.__operator=(...args)=>{if(rt.callback){if(!this.__node.nodes.get(rt.__node.tag)?.__children)worker.post(rt.callback,args);else return worker.run(rt.callback,args)}else{if(!this.__node.nodes.get(rt.__node.tag)?.__children)worker.send(args);else return worker.request(args)}}}if(rt.init){worker.run(rt.init,rt.initArgs,rt.initTransfer)}return worker}};this.workerloader={"workers":(node,parent,graph,roots)=>{let rt=node;if(!node.parentRoute&&(parent?.callback&&parent?.worker))node.parentRoute=parent?.callback;if(rt?.worker||rt?.workerId||rt?.workerUrl){let worker=this.loadWorkerRoute(rt,rt.__node.tag);if(worker){if(!rt.parentRoute&&rt.__parent?.callback)rt.parentRoute=rt.__parent.callback;if(rt.__parent&&!rt.portId){if(typeof rt.__parent==="string"){if(rt.__node.tag!==rt.__parent&&worker._id!==rt.__parent)rt.portId=this.establishMessageChannel(worker,rt.__parent)}else if(rt.__node.tag!==rt.__parent?.__node?.tag&&worker._id!==rt.__parent?.tag){rt.portId=this.establishMessageChannel(worker,rt.__parent.worker)}};if(rt.parentRoute){if(!rt.stopped){if(typeof rt.__parent==="string"&&rt.__parent===worker._id){worker.run("subscribe",[rt.parentRoute,void 0,void 0,rt.callback])}else if(rt.__node.tag===rt.__parent?.__node?.tag||worker._id===rt.__parent?.__node?.tag){worker.run("subscribe",[rt.parentRoute,void 0,void 0,rt.callback])}else worker.run("subscribeToWorker",[rt.parentRoute,rt.portId,void 0,rt.callback,void 0,void 0,rt.blocking]).then(sub=>{worker.workerSubs[rt.parentRoute+rt.portId].sub=sub})}if(!(typeof rt.__parent==="string"&&rt.__parent===worker._id)&&!(rt.__node.tag===rt.__parent?.__node?.tag||worker._id===rt.__parent?.__node?.tag))worker.workerSubs[rt.parentRoute+rt.portId]={sub:null,route:rt.parentRoute,portId:rt.portId,callback:rt.callback,blocking:rt.blocking}}else if(rt.__parent){if(typeof rt.__parent==="string"){if(!rt.stopped){if(rt.__parent===worker._id){worker.run("subscribe",[rt.__parent,void 0,rt.callback])}else worker.run("subscribeToWorker",[rt.__parent,rt.portId,void 0,rt.callback,void 0,void 0,rt.blocking]).then(sub=>{worker.workerSubs[rt.__parent+rt.portId].sub=sub})}if(!(typeof rt.__parent==="string"&&rt.__parent===worker._id))worker.workerSubs[rt.__parent+rt.portId]={sub:null,route:worker._id,portId:rt.portId,callback:rt.callback,blocking:rt.blocking}}else if(rt.__parent?.__node?.tag&&rt.__parent?.worker){if(!rt.stopped){if(rt.__node.tag===rt.__parent.__node.tag||worker._id===rt.__parent.__node.tag){worker.run("subscribe",[rt.__parent.__node.tag,void 0,void 0,rt.callback])}else worker.run("subscribeToWorker",[rt.__parent.__node.tag,rt.portId,void 0,rt.callback,void 0,void 0,rt.blocking]).then(sub=>{worker.workerSubs[rt.__parent.__node.tag+rt.portId].sub=sub})}if(!(rt.__node.tag===rt.__parent?.__node?.tag||worker._id===rt.__parent?.__node?.tag))worker.workerSubs[rt.__parent.__node.tag+rt.portId]={sub:null,route:rt.__parent.__node.tag,portId:rt.portId,callback:rt.callback,blocking:rt.blocking}}}}}else if(rt.__parent&&rt.parentRoute){if(typeof rt.__parent==="string"&&roots[rt.__parent]?.worker){roots[rt.__parent].worker.subscribe(rt.parentRoute,rt.__operator,void 0,void 0,void 0,rt.blocking)}else if(rt.__parent?.worker){rt.__parent.worker.subscribe(rt.parentRoute,rt.__operator,void 0,void 0,void 0,rt.blocking)}}return rt}};this.addDefaultMessageListener=()=>{globalThis.onmessage=ev2=>{let result=this.receive(ev2.data);if(this.__node.keepState)this.setState({[this.name]:result})}};this.postMessage=(message,target,transfer)=>{if(this.workers[target]){this.workers[target].send(message,transfer)}else{globalThis.postMessage(message,target,transfer)}};this.addWorker=options=>{let worker;if(!options._id)options._id=`worker${Math.floor(Math.random()*1e15)}`;if(options.url)worker=new import_web_worker.default(options.url);else if(options.port){worker=options.port}else if(this.workers[options._id]){if(this.workers[options._id].port)worker=this.workers[options._id].port;else worker=this.workers[options._id].worker}if(!worker)return;let send=(message,transfer)=>{return this.transmit(message,worker,transfer)};let post=(route,args,transfer,method)=>{let message={route,args};if(method)message.method=method;return this.transmit(message,worker,transfer)};let run=(route,args,transfer,method)=>{return new Promise((res,rej)=>{let callbackId=Math.random();let req={route:"runRequest",args:[{route,args},options._id,callbackId]};if(method)req.args[0].method=method;let onmessage=ev2=>{if(typeof ev2.data==="object"){if(ev2.data.callbackId===callbackId){worker.removeEventListener("message",onmessage);res(ev2.data.args)}}};worker.addEventListener("message",onmessage);this.transmit(req,worker,transfer)})};let request=(message,transfer,method)=>{return new Promise((res,rej)=>{let callbackId=Math.random();let req={route:"runRequest",args:[message,options._id,callbackId]};if(method)req.method=method;let onmessage=ev2=>{if(typeof ev2.data==="object"){if(ev2.data.callbackId===callbackId){worker.removeEventListener("message",onmessage);res(ev2.data.args)}}};worker.addEventListener("message",onmessage);this.transmit(req,worker,transfer)})};let workerSubs={};let subscribe=(route,callback,args,key,subInput,blocking)=>{return this.subscribeToWorker(route,options._id,callback,args,key,subInput,blocking)};let unsubscribe=(route,sub)=>{return run("unsubscribe",[route,sub])};let start=async(route,portId,callback,blocking)=>{if(route)await run("subscribeToWorker",[route,portId,void 0,callback,blocking]).then(sub=>{if(sub)workerSubs[route+portId]={sub,route,portId,callback,blocking}});else for(const key in workerSubs){if(typeof workerSubs[key].sub!=="number")await run("subscribeToWorker",[workerSubs[key].route,workerSubs[key].portId,void 0,workerSubs[key].callback,void 0,workerSubs[key].blocking]).then(sub=>{workerSubs[key].sub=sub});console.log(JSON.stringify(workerSubs))}return true};let stop=async(route,portId)=>{if(route&&portId&&workerSubs[route+portId]){await run("unsubscribe",[route,workerSubs[route+portId].sub]);workerSubs[route+portId].sub=false}else{for(const key in workerSubs){if(typeof workerSubs[key].sub==="number"){await run("unpipeWorkers",[workerSubs[key].route,workerSubs[key].portId,workerSubs[key].sub]).then(console.log)}workerSubs[key].sub=false}}return true};let terminate=()=>{for(const key in workerSubs){if(typeof workerSubs[key].sub==="number"){run("unpipeWorkers",[workerSubs[key].route,workerSubs[key].portId,workerSubs[key].sub])}workerSubs[key].sub=false}return this.terminate(options._id)};if(!options.onmessage)options.onmessage=ev2=>{this.receive(ev2.data);this.setState({[options._id]:ev2.data})};if(!options.onerror){options.onerror=ev2=>{console.error(ev2.data)}}worker.onmessage=options.onmessage;worker.onerror=options.onerror;this.workers[options._id]={worker,send,post,run,request,subscribe,unsubscribe,terminate,start,stop,postMessage:worker.postMessage,workerSubs,graph:this,...options};return this.workers[options._id]};this.toObjectURL=scriptTemplate=>{let blob=new Blob([scriptTemplate],{type:"text/javascript"});return URL.createObjectURL(blob)};this.transmit=(message,worker,transfer)=>{if(!transfer){transfer=this.getTransferable(message)}if(worker instanceof import_web_worker.default||worker instanceof MessagePort){worker.postMessage(message,transfer)}else if(typeof worker==="string"){if(this.workers[worker]){if(this.workers[worker].port)this.workers[worker].port.postMessage(message,transfer);else if(this.workers[worker].worker)this.workers[worker].worker.postMessage(message,transfer)}}else{let keys=Object.keys(this.workers);this.workers[keys[this.threadRot]].worker.postMessage(message,transfer);this.threadRot++;if(this.threadRot===keys.length)this.threadRot=0}return message};this.terminate=worker=>{let onclose;if(typeof worker==="string"){let obj=this.workers[worker];if(obj){delete this.workers[worker];worker=obj.worker;if(obj.onclose)onclose=obj.onclose}}else if(typeof worker==="object"){if(worker?._id){worker=worker.worker;delete this.workers[worker?._id]}}if(worker instanceof import_web_worker.default){worker.terminate();if(onclose)onclose(worker);return true}if(worker instanceof MessagePort){worker.close();if(onclose)onclose(worker);return true}return false};this.establishMessageChannel=(worker,worker2)=>{let workerId;if(typeof worker==="string"){workerId=worker;if(this.workers[worker]){if(this.workers[worker].port)worker=this.workers[worker].port;else worker2=this.workers[worker].worker}}else if(worker?.worker){worker=worker.worker}if(typeof worker2==="string"){if(this.workers[worker2]){if(this.workers[worker2].port)worker2=this.workers[worker2].port;else worker2=this.workers[worker2].worker}}else if(worker2?.worker){worker2=worker2.worker}if(worker instanceof import_web_worker.default||worker instanceof MessagePort){let channel=new MessageChannel;let portId=`port${Math.floor(Math.random()*1e15)}`;worker.postMessage({route:"addWorker",args:{port:channel.port1,_id:portId}},[channel.port1]);if(worker2 instanceof import_web_worker.default||worker2 instanceof MessagePort){worker2.postMessage({route:"addWorker",args:{port:channel.port2,_id:portId}},[channel.port2])}else if(workerId&&this.workers[workerId]){channel.port2.onmessage=this.workers[workerId].onmessage;this.workers[workerId].port=channel.port2}return portId}return false};this.request=(message,workerId,transfer,method)=>{let worker=this.workers[workerId].worker;return new Promise((res,rej)=>{let callbackId=Math.random();let req={route:"runRequest",args:[message,callbackId]};if(method)req.method=method;let onmessage=ev2=>{if(typeof ev2.data==="object"){if(ev2.data.callbackId===callbackId){worker.removeEventListener("message",onmessage);res(ev2.data.args)}}};worker.addEventListener("message",onmessage);this.transmit(req,worker,transfer)})};this.runRequest=(message,worker,callbackId)=>{let res=this.receive(message);if(typeof worker==="string"&&this.workers[worker]){if(this.workers[worker].port)worker=this.workers[worker].port;else worker=this.workers[worker].worker}if(res instanceof Promise){res.then(r=>{if(worker instanceof import_web_worker.default||worker instanceof MessagePort)worker.postMessage({args:r,callbackId});else if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope)globalThis.postMessage({args:r,callbackId})})}else{if(worker instanceof import_web_worker.default||worker instanceof MessagePort)worker.postMessage({args:res,callbackId});else if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope)globalThis.postMessage({args:res,callbackId})}return res};this.subscribeWorker=(route,worker,args,key,subInput,blocking)=>{let callback;if(blocking){let blocked=false;callback=res=>{if(!blocked){blocked=true;if(res instanceof Promise){res.then(r=>{if(worker?.run)worker.run("triggerSubscription",[route,worker._id,r]).then(ret=>{blocked=false})})}else{if(worker?.run)worker.run("triggerSubscription",[route,worker._id,res]).then(ret=>{blocked=false})}}}}else{callback=res=>{if(res instanceof Promise){res.then(r=>{if(worker?.postMessage)worker.postMessage({args:r,callbackId:route});else if(globalThis.postMessage)globalThis.postMessage({args:r,callbackId:route})})}else{if(worker?.postMessage)worker.postMessage({args:res,callbackId:route});else if(globalThis.postMessage)globalThis.postMessage({args:res,callbackId:route})}}}if(!blocking&&worker?.port){worker=worker.port}else if(!blocking&&worker?.worker){worker=worker.worker}else if(typeof worker==="string"&&this.workers[worker]){if(blocking)worker=this.workers[worker];else if(this.workers[worker].port)worker=this.workers[worker].port;else worker=this.workers[worker].worker}return this.subscribe(route,callback,args,key,subInput)};this.subscribeToWorker=(route,workerId,callback,args,key,subInput,blocking)=>{if(typeof workerId==="string"&&this.workers[workerId]){this.__node.state.subscribeEvent(workerId,res=>{if(res?.callbackId===route){if(!callback)this.setState({[workerId]:res.args});else if(typeof callback==="string"){this.run(callback,res.args)}else callback(res.args)}});return this.workers[workerId].run("subscribeWorker",[route,workerId,args,key,subInput,blocking])}};this.triggerSubscription=async(route,workerId,result)=>{if(this.__node.state.triggers[workerId])for(let i=0;i<this.__node.state.triggers[workerId].length;i++){await this.__node.state.triggers[workerId][i].onchange({args:result,callbackId:route})}return true};this.pipeWorkers=(sourceWorker,listenerWorker,sourceRoute,listenerRoute,portId,args,key,subInput,blocking)=>{if(typeof sourceWorker==="string")sourceWorker=this.workers[sourceWorker];if(typeof listenerWorker==="string")listenerWorker=this.workers[listenerWorker];if(!portId){portId=this.establishMessageChannel(sourceWorker.worker,listenerWorker.worker)}return listenerWorker.run("subscribeToWorker",[sourceRoute,portId,listenerRoute,args,key,subInput,blocking])};this.unpipeWorkers=(sourceRoute,sourceWorker,sub)=>{if(typeof sourceWorker==="string")sourceWorker=this.workers[sourceWorker];if(typeof sourceWorker==="object"){return sourceWorker.run("unsubscribe",[sourceRoute,sub])}};this.connections={workers:this.workers};if(options?.services)this.addServices(options.services);this.load(this);this.setLoaders(this.workerloader);if(options)this.init(options);if(typeof WorkerGlobalScope!=="undefined"&&globalThis instanceof WorkerGlobalScope){this.addDefaultMessageListener()}}getTransferable(message){let transfer;if(typeof message==="object"){if(message.args){if(message.args?.constructor?.name==="Object"){for(const key in message.args){if(ArrayBuffer.isView(message.args[key])){if(!transfer)transfer=[message.args[key].buffer];else transfer.push(message.args[key].buffer)}else if(message.args[key]?.constructor?.name==="ArrayBuffer"){if(!transfer)transfer=[message.args[key]];else transfer.push(message.args[key])}}}else if(Array.isArray(message.args)&&message.args.length<11){message.args.forEach(arg=>{if(ArrayBuffer.isView(arg)){transfer=[arg.buffer]}else if(arg?.constructor?.name==="ArrayBuffer")transfer=[arg]})}else if(ArrayBuffer.isView(message.args)){transfer=[message.args.buffer]}else if(message.args?.constructor?.name==="ArrayBuffer"){transfer=[message]}}else if(message?.constructor?.name==="Object"){for(const key in message){if(ArrayBuffer.isView(message[key])){if(!transfer)transfer=[message[key].buffer];else transfer.push(message[key].buffer)}else if(message[key]?.constructor?.name==="ArrayBuffer"){if(!transfer)transfer=[message[key]];else transfer.push(message[key])}}}else if(Array.isArray(message)&&message.length<11){message.forEach(arg=>{if(ArrayBuffer.isView(arg)){transfer=[arg.buffer]}else if(arg.constructor?.name==="ArrayBuffer")transfer=[arg]})}else if(ArrayBuffer.isView(message)){transfer=[message.buffer]}else if(message.constructor?.name==="ArrayBuffer"){transfer=[message]}}return transfer}transferFunction(worker,fn,fnName){if(!fnName)fnName=fn.name;return worker.request({route:"setRoute",args:[fn.toString(),fnName]})}transferClass(worker,cls,className){if(!className)className=cls.name;return worker.request({route:"receiveClass",args:[cls.toString(),className]})}receiveNode(properties){if(properties.__methods){if(!this.__node.graph.loaders.methodstrings){this.__node.graph.__node.loaders.methodstrings=methodstrings}}let node=this.__node.graph.add(properties);return node.__node.tag}transferNode(properties,worker,name){if(!properties.__node){properties.__node={}}properties.__node.tag=name;for(const key in properties){if(typeof properties[key]==="function"){if(!properties.__methods)properties.__methods={};properties.__methods[key]=properties[key].toString()}}if(worker.run)return worker.run("receiveNode",[recursivelyStringifyFunctions(properties)]);else if(worker.postMessage){worker.postMessage({route:"receiveNode",args:recursivelyStringifyFunctions(properties)},void 0);return new Promise(r=>r(name))}}};var mouseEventHandler=makeSendPropertiesHandler(["ctrlKey","metaKey","shiftKey","button","pointerType","clientX","clientY","pageX","pageY"]);var wheelEventHandlerImpl=makeSendPropertiesHandler(["deltaX","deltaY"]);var keydownEventHandler=makeSendPropertiesHandler(["ctrlKey","metaKey","shiftKey","keyCode"]);function wheelEventHandler(event,sendFn){event.preventDefault();wheelEventHandlerImpl(event,sendFn)}function preventDefaultHandler(event){event.preventDefault()}function copyProperties(src,properties,dst){for(const name of properties){dst[name]=src[name]}}function makeSendPropertiesHandler(properties){return function sendProperties(event,sendFn){const data={type:event.type};copyProperties(event,properties,data);sendFn(data)}}function touchEventHandler(event,sendFn){const touches=[];const data={type:event.type,touches};for(let i=0;i<event.touches.length;++i){const touch=event.touches[i];touches.push({pageX:touch.pageX,pageY:touch.pageY})}sendFn(data)}var orbitKeys={"37":true,"38":true,"39":true,"40":true};function filteredKeydownEventHandler(event,sendFn){const{keyCode}=event;if(orbitKeys[keyCode]){event.preventDefault();keydownEventHandler(event,sendFn)}}var eventHandlers={contextmenu:preventDefaultHandler,mousedown:mouseEventHandler,mousemove:mouseEventHandler,mouseup:mouseEventHandler,pointerdown:mouseEventHandler,pointermove:mouseEventHandler,pointerup:mouseEventHandler,touchstart:touchEventHandler,touchmove:touchEventHandler,touchend:touchEventHandler,wheel:wheelEventHandler,keydown:filteredKeydownEventHandler};function initProxyElement(element,worker,id){if(!id)id="proxy"+Math.floor(Math.random()*1e15);const sendEvent=data=>{if(!worker){handleProxyEvent(data,id)}else worker.postMessage({route:"handleProxyEvent",args:[data,id]})};let entries=Object.entries(eventHandlers);for(const[eventName,handler]of entries){element.addEventListener(eventName,function(event){handler(event,sendEvent)})}const sendSize=()=>{const rect=element.getBoundingClientRect();sendEvent({type:"resize",left:rect.left,top:rect.top,width:element.clientWidth,height:element.clientHeight})};sendSize();globalThis.addEventListener("resize",sendSize);return id}var EventDispatcher=class{addEventListener(type,listener){if(this.__listeners===void 0)this.__listeners={};const listeners=this.__listeners;if(listeners[type]===void 0){listeners[type]=[]}if(listeners[type].indexOf(listener)===-1){listeners[type].push(listener)}}hasEventListener(type,listener){if(this.__listeners===void 0)return false;const listeners=this.__listeners;return listeners[type]!==void 0&&listeners[type].indexOf(listener)!==-1}removeEventListener(type,listener){if(this.__listeners===void 0)return;const listeners=this.__listeners;const listenerArray=listeners[type];if(listenerArray!==void 0){const index=listenerArray.indexOf(listener);if(index!==-1){listenerArray.splice(index,1)}}}dispatchEvent(event,target){if(this.__listeners===void 0)return;const listeners=this.__listeners;const listenerArray=listeners[event.type];if(listenerArray!==void 0){if(!target)event.target=this;else event.target=target;const array=listenerArray.slice(0);for(let i=0,l=array.length;i<l;i++){array[i].call(this,event)}event.target=null}}};function noop(){}var ElementProxyReceiver=class extends EventDispatcher{constructor(){super();this.__listeners={};this.style={};this.setPointerCapture=()=>{};this.releasePointerCapture=()=>{};this.getBoundingClientRect=()=>{return{left:this.left,top:this.top,width:this.width,height:this.height,right:this.left+this.width,bottom:this.top+this.height}};this.handleEvent=data=>{if(data.type==="resize"){this.left=data.left;this.top=data.top;this.width=data.width;this.height=data.height;if(typeof this.proxied==="object"){this.proxied.style.width=this.width+"px";this.proxied.style.height=this.height+"px";this.proxied.clientWidth=this.width;this.proxied.clientHeight=this.height}}data.preventDefault=noop;data.stopPropagation=noop;this.dispatchEvent(data,this.proxied)};this.style={}}get clientWidth(){return this.width}get clientHeight(){return this.height}focus(){}};var ProxyManager=class{constructor(){this.targets={};this.makeProxy=(id,addTo=void 0)=>{if(!id)id=`proxyReceiver${Math.floor(Math.random()*1e15)}`;let proxy;if(this.targets[id])proxy=this.targets[id];else{proxy=new ElementProxyReceiver;this.targets[id]=proxy}if(typeof addTo==="object"){addTo.proxy=proxy;proxy.proxied=addTo;if(typeof WorkerGlobalScope!=="undefined")addTo.style=proxy.style;if(proxy.width){addTo.style.width=proxy.width+"px";addTo.clientWidth=proxy.width}if(proxy.height){addTo.style.height=proxy.height+"px";addTo.clientHeight=proxy.height}addTo.setPointerCapture=proxy.setPointerCapture.bind(proxy);addTo.releasePointerCapture=proxy.releasePointerCapture.bind(proxy);addTo.getBoundingClientRect=proxy.getBoundingClientRect.bind(proxy);addTo.addEventListener=proxy.addEventListener.bind(proxy);addTo.removeEventListener=proxy.removeEventListener.bind(proxy);addTo.handleEvent=proxy.handleEvent.bind(proxy);addTo.dispatchEvent=proxy.dispatchEvent.bind(proxy);addTo.focus=proxy.focus.bind(proxy)}};this.getProxy=id=>{return this.targets[id]};this.handleEvent=(data,id)=>{if(!this.targets[id])this.makeProxy(id);if(this.targets[id]){this.targets[id].handleEvent(data);return true}return void 0};if(!globalThis.document)globalThis.document={}}};function makeProxy(id,elm){if(this?.__node?.graph){if(!this.__node.graph.ProxyManager)this.__node.graph.ProxyManager=new ProxyManager;this.__node.graph.ProxyManager.makeProxy(id,elm)}else{if(!globalThis.ProxyManager)globalThis.ProxyManager=new ProxyManager;globalThis.ProxyManager.makeProxy(id,elm)}return id}function handleProxyEvent(data,id){if(this?.__node?.graph){if(!this.__node.graph.ProxyManager)this.__node.graph.ProxyManager=new ProxyManager;if(this.__node.graph.ProxyManager.handleEvent(data,id))return data}else{if(!globalThis.ProxyManager)globalThis.ProxyManager=new ProxyManager;if(globalThis.ProxyManager.handleEvent(data,id))return data}}var proxyElementWorkerRoutes={initProxyElement,makeProxy,handleProxyEvent};function Renderer(options){if(options.worker){let worker=options.worker;let route=options.route;if(worker instanceof Blob||typeof worker==="string"){worker=new Worker(worker)}delete options.worker;delete options.route;return transferCanvas(worker,options,route)}else{initProxyElement(options.canvas,void 0,options._id);return setupCanvas(options)}}function transferCanvas(worker,options,route){if(!options)return void 0;if(!options._id)options._id=`canvas${Math.floor(Math.random()*1e15)}`;let offscreen=options.canvas.transferControlToOffscreen();if(!options.width)options.width=options.canvas.clientWidth;if(!options.height)options.height=options.canvas.clientHeight;let message={route:route?route:"setupCanvas",args:{...options,canvas:offscreen}};if(this?.__node?.graph)this.__node.graph.run("initProxyElement",options.canvas,worker,options._id);else initProxyElement(options.canvas,worker,options._id);if(options.draw){if(typeof options.draw==="function")message.args.draw=options.draw.toString();else message.args.draw=options.draw}if(options.update){if(typeof options.update==="function")message.args.update=options.update.toString();else message.args.update=options.update}if(options.init){if(typeof options.init==="function")message.args.init=options.init.toString();else message.args.init=options.init}if(options.clear){if(typeof options.clear==="function")message.args.clear=options.clear.toString();else message.args.clear=options.clear}let transfer=[offscreen];if(options.transfer){transfer.push(...options.transfer);delete options.transfer}worker.postMessage(message,transfer);const canvascontrols={_id:options._id,width:options.width,height:options.height,worker,draw:props=>{worker.postMessage({route:"drawFrame",args:[props,options._id]})},update:props=>{worker.postMessage({route:"updateCanvas",args:[props,options._id]})},clear:()=>{worker.postMessage({route:"clearCanvas",args:options._id})},init:()=>{worker.postMessage({route:"initCanvas",args:options._id})},stop:()=>{worker.postMessage({route:"stopAnim",args:options._id})},start:()=>{worker.postMessage({route:"startAnim",args:options._id})},set:newDrawProps=>{worker.postMessage({route:"setDraw",args:[newDrawProps,options._id]})},terminate:()=>{worker.terminate()}};return canvascontrols}function setDraw(settings,_id){let canvasopts;if(this?.__node?.graph){if(_id)canvasopts=this.__node.graph.CANVASES?.[settings._id];else if(settings._id)canvasopts=this.__node.graph.CANVASES?.[settings._id];else canvasopts=this.__node.graph.CANVASES?.[Object.keys(this.__node.graph.CANVASES)[0]]}else{if(_id)canvasopts=globalThis.CANVASES?.[settings._id];else if(settings._id)canvasopts=globalThis.CANVASES?.[settings._id];else canvasopts=globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]]}if(canvasopts){if(settings.canvas){canvasopts.canvas=settings.canvas;if(this?.__node?.graph)this.__node.graph.run("makeProxy",canvasopts._id,canvasopts.canvas);else proxyElementWorkerRoutes.makeProxy(canvasopts._id,canvasopts.canvas)}if(typeof settings.context==="string")canvasopts.context=canvasopts.canvas.getContext(settings.context);else if(settings.context)canvasopts.context=settings.context;if(settings.width)canvasopts.canvas.width=settings.width;if(settings.height)canvasopts.canvas.height=settings.height;if(typeof settings.draw==="string")settings.draw=parseFunctionFromText2(settings.draw);if(typeof settings.draw==="function"){canvasopts.draw=settings.draw}if(typeof settings.update==="string")settings.update=parseFunctionFromText2(settings.update);if(typeof settings.update==="function"){canvasopts.update=settings.update}if(typeof settings.init==="string")settings.init=parseFunctionFromText2(settings.init);if(typeof settings.init==="function"){canvasopts.init=settings.init}if(typeof settings.clear==="string")settings.clear=parseFunctionFromText2(settings.clear);if(typeof settings.clear==="function"){canvasopts.clear=settings.clear}return settings._id}return void 0}function setupCanvas(options){if(this?.__node?.graph){if(!this.__node.graph.CANVASES)this.__node.graph.CANVASES={}}else if(!globalThis.CANVASES)globalThis.CANVASES={};let canvasOptions=options;options._id?canvasOptions._id=options._id:canvasOptions._id=`canvas${Math.floor(Math.random()*1e15)}`;typeof options.context==="string"?canvasOptions.context=options.canvas.getContext(options.context):canvasOptions.context=options.context;"animating"in options?canvasOptions.animating=options.animating:canvasOptions.animating=true;if(this?.__node?.graph?.CANVASES[canvasOptions._id]){this.__node.graph.run("setDraw",canvasOptions)}else if(globalThis.CANVASES?.[canvasOptions._id]){setDraw(canvasOptions)}else{if(this?.__node?.graph)canvasOptions.graph=this.__node.graph;if(this?.__node?.graph)this.__node.graph.CANVASES[canvasOptions._id]=canvasOptions;else globalThis.CANVASES[canvasOptions._id]=canvasOptions;if(this?.__node?.graph)this.__node.graph.run("makeProxy",canvasOptions._id,canvasOptions.canvas);else proxyElementWorkerRoutes.makeProxy(canvasOptions._id,canvasOptions.canvas);if(options.width)canvasOptions.canvas.width=options.width;if(options.height)canvasOptions.canvas.height=options.height;if(typeof canvasOptions.draw==="string"){canvasOptions.draw=parseFunctionFromText2(canvasOptions.draw)}else if(typeof canvasOptions.draw==="function"){canvasOptions.draw=canvasOptions.draw}if(typeof canvasOptions.update==="string"){canvasOptions.update=parseFunctionFromText2(canvasOptions.update)}else if(typeof canvasOptions.update==="function"){canvasOptions.update=canvasOptions.update}if(typeof canvasOptions.init==="string"){canvasOptions.init=parseFunctionFromText2(canvasOptions.init)}else if(typeof canvasOptions.init==="function"){canvasOptions.init=canvasOptions.init}if(typeof canvasOptions.clear==="string"){canvasOptions.clear=parseFunctionFromText2(canvasOptions.clear)}else if(typeof canvasOptions.clear==="function"){canvasOptions.clear=canvasOptions.clear}if(typeof canvasOptions.init==="function")canvasOptions.init(canvasOptions,canvasOptions.canvas,canvasOptions.context);canvasOptions.stop=()=>{stopAnim(canvasOptions._id)};canvasOptions.start=draw=>{startAnim(canvasOptions._id,draw)};canvasOptions.set=settings=>{setDraw(settings,canvasOptions._id)};if(typeof canvasOptions.draw==="function"&&canvasOptions.animating){let draw=(s,canvas,context)=>{if(s.animating){s.draw(s,canvas,context);requestAnimationFrame(()=>{draw(s,canvas,context)})}};draw(canvasOptions,canvasOptions.canvas,canvasOptions.context)}}if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope)return canvasOptions._id;else{const canvascontrols={_id:options._id,width:options.width,height:options.height,draw:props=>{drawFrame(props,options._id)},update:props=>{updateCanvas(props,options._id)},clear:()=>{clearCanvas(options._id)},init:()=>{initCanvas(options._id)},stop:()=>{stopAnim(options._id)},start:()=>{startAnim(options._id)},set:newDrawProps=>{setDraw(newDrawProps,options._id)},terminate:()=>{stopAnim(options._id)}};return canvascontrols}}function drawFrame(props,_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts){if(props)Object.assign(canvasopts,props);if(canvasopts.draw){canvasopts.draw(canvasopts,canvasopts.canvas,canvasopts.context);return _id}}return void 0}function clearCanvas(_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts?.clear){canvasopts.clear(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function initCanvas(_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts?.init){canvasopts.init(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function updateCanvas(input,_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts?.update){canvasopts.update(canvasopts,canvasopts.canvas,canvasopts.context,input);return _id}return void 0}function setProps(props,_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts){Object.assign(canvasopts,props);if(props.width)canvasopts.canvas.width=props.width;if(props.height)canvasopts.canvas.height=props.height;return _id}return void 0}function startAnim(_id,draw){let canvasopts=getCanvas.call(this,_id);canvasopts.animating=true;if(canvasopts&&draw){if(typeof draw==="string")draw=parseFunctionFromText2(draw);if(typeof draw==="function"){canvasopts.draw=draw}return _id}if(typeof canvasopts?.draw==="function"){let draw2=(s,canvas,context)=>{if(s.animating){s.draw(s,canvas,context);requestAnimationFrame(()=>{draw2(s,canvas,context)})}};if(typeof canvasopts.clear==="function")canvasopts.clear(canvasopts,canvasopts.canvas,canvasopts.context);if(typeof canvasopts.init==="function")canvasopts.init(canvasopts,canvasopts.canvas,canvasopts.context);draw2(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function stopAnim(_id){let canvasopts=getCanvas.call(this,_id);if(canvasopts){canvasopts.animating=false;if(typeof canvasopts.clear==="function")canvasopts.clear(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function getCanvas(_id){let canvasopts;if(this?.__node?.graph){if(!_id)canvasopts=this.__node.graph.CANVASES?.[Object.keys(this.__node.graph.CANVASES)[0]];else canvasopts=this.__node.graph.CANVASES?.[_id]}else{if(!_id)canvasopts=globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]];else canvasopts=globalThis.CANVASES?.[_id]}return canvasopts}var workerCanvasRoutes={...proxyElementWorkerRoutes,Renderer,transferCanvas,setupCanvas,setDraw,drawFrame,clearCanvas,initCanvas,updateCanvas,setProps,startAnim,stopAnim};function parseFunctionFromText2(method=""){let getFunctionBody=methodString=>{return methodString.replace(/^\\W*(function[^{]+\\{([\\s\\S]*)\\}|[^=]+=>[^{]*\\{([\\s\\S]*)\\}|[^=]+=>(.+))/i,"$2$3$4")};let getFunctionHead=methodString=>{let startindex=methodString.indexOf("=>")+1;if(startindex<=0){startindex=methodString.indexOf("){")}if(startindex<=0){startindex=methodString.indexOf(") {")}return methodString.slice(0,methodString.indexOf("{",startindex)+1)};let newFuncHead=getFunctionHead(method);let newFuncBody=getFunctionBody(method);let newFunc;if(newFuncHead.includes("function")){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody)}else{if(newFuncHead.substring(0,6)===newFuncBody.substring(0,6)){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody.substring(newFuncBody.indexOf("{")+1,newFuncBody.length-1))}else{try{newFunc=(0,eval)(newFuncHead+newFuncBody+"}")}catch{}}}return newFunc}var unsafeRoutes={setRoute:function(fn,fnName){if(typeof fn==="string")fn=parseFunctionFromText(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;if(this.__node.graph.get(fnName)){this.__node.graph.get(fnName).__setOperator(fn)}else{let node=this.__node.graph.add({__node:{tag:fnName},__operator:fn})}return true}return false},setNode:function(fn,fnName){if(typeof fn==="string")fn=parseFunctionFromText(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;if(this.__node.graph.get(fnName)){this.__node.graph.get(fnName).__setOperator(fn)}else this.__node.graph.add({__node:{tag:fnName},__operator:fn});return true}return false},setMethod:function(route,fn,fnName){if(typeof fn==="string")fn=parseFunctionFromText(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;if(this.__node.graph.get(route)){this.__node.graph.get(route)[fnName]=fn}else this.__node.graph.add({__node:{tag:fnName,[fnName]:fn}});return true}return false},assignRoute:function(route,source){if(this.__node.graph.get(route)&&typeof source==="object"){Object.assign(this.__node.graph.get(route),source)}},transferClass:(classObj,className)=>{if(typeof classObj==="object"){let str=classObj.toString();let message={route:"receiveClass",args:[str,className]};return message}return false},receiveClass:function(stringified,className){if(typeof stringified==="string"){if(stringified.indexOf("class")===0){let cls=(0,eval)("("+stringified+")");let name=className;if(!name)name=cls.name;this.__node.graph[name]=cls;return true}}return false},setGlobal:(key,value)=>{globalThis[key]=value;return true},assignGlobalObject:(target,source)=>{if(!globalThis[target])return false;if(typeof source==="object")Object.assign(globalThis[target],source);return true},setValue:function(key,value){this.__node.graph[key]=value;return true},assignObject:function(target,source){if(!this.__node.graph[target])return false;if(typeof source==="object")Object.assign(this.__node.graph[target],source);return true},setGlobalFunction:(fn,fnName)=>{if(typeof fn==="string")fn=parseFunctionFromText(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;globalThis[fnName]=fn;return true}return false},assignFunctionToGlobalObject:function(globalObjectName,fn,fnName){if(!globalThis[globalObjectName])return false;if(typeof fn==="string")fn=parseFunctionFromText(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;this.__node.graph[globalObjectName][fnName]=fn;return true}return false},setFunction:function(fn,fnName){if(typeof fn==="string")fn=parseFunctionFromText(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;this.__node.graph[fnName]=fn;return true}return false},assignFunctionToObject:function(objectName,fn,fnName){if(!this.__node.graph[objectName])return false;if(typeof fn==="string")fn=parseFunctionFromText(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;this.__node.graph[objectName][fnName]=fn;return true}return false}};var __defProp2=Object.defineProperty;var __defNormalProp=(obj,key,value)=>key in obj?__defProp2(obj,key,{enumerable:true,configurable:true,writable:true,value}):obj[key]=value;var __publicField=(obj,key,value)=>{__defNormalProp(obj,typeof key!=="symbol"?key+"":key,value);return value};var _Math2=class{constructor(){}static genSineWave(freq=20,peakAmp=1,nSec=1,fs=512,freq2=0,peakAmp2=1){var sineWave=[];var t=[];var increment=1/fs;for(var ti=0;ti<nSec;ti+=increment){var amplitude=Math.sin(2*Math.PI*freq*ti)*peakAmp;amplitude+=Math.sin(2*Math.PI*freq2*ti)*peakAmp2;sineWave.push(amplitude);t.push(ti)}return[t,sineWave]}static getSineAmplitude(frequency=20,peakAmplitude=1,ti=0,tOffset=0){return Math.sin(this.TWO_PI*frequency*ti+tOffset)*peakAmplitude}static mean(arr){var sum=arr.reduce((prev,curr)=>curr+=prev);return sum/arr.length}static mode(arr){return arr.sort((a,b)=>arr.filter(v=>v===a).length-arr.filter(v=>v===b).length).pop()}static std(arr,mean=void 0){let avg=mean;if(!mean)avg=this.mean(arr);let summed=0;for(let i=0;i<arr.length;i++){let subbed=arr[i]-avg;summed+=subbed*subbed}return Math.sqrt(summed/arr.length)}static relError(actual=[],forecast=[],abs=true){if(actual.length!==forecast.length)throw new Error("Input arrays of same length!");let i=actual.length;let d=new Array(actual.length);for(let j=0;j<i;j++){let dd=(actual[j]-forecast[j])/actual[j];if(abs)dd=Math.abs(dd);d[j]=dd}return d}static informationEntropy(probabilities=[]){let len=probabilities.length;let entropy=new Array(len);for(let i=0;i<len;i++){let ent=probabilities[i]*Math.log(probabilities[i]);if(isNaN(ent))ent=0;entropy[i]=ent}return entropy}static zscore(arr){let mean=this.mean(arr);let std=this.std(arr,mean);let z=new Array().length(arr.length);for(let i=0;i<arr.length;i++){z[i]=(arr[i]-mean)/std}return z}static variance(arr){var mean=this.mean(arr);return arr.reduce((a,b)=>a+(b-mean)**2,0)/arr.length}static dot(vec1,vec2){var dot=0;for(var i=0;i<vec1.length;i++){dot+=vec1[i]*vec2[i]}return dot}static cross3D(vec1,vec2){return[vec1[1]*vec2[2]-vec1[2]*vec2[1],vec1[2]*vec2[0]-vec1[0]*vec2[2],vec1[0]*vec2[1]-vec1[1]*vec2[0]]}static magnitude(vec){var sqrd=0;vec.forEach(c=>{sqrd+=c*c});return Math.sqrt(sqrd)}static distance(point1,point2){var dsqrd=0;point1.forEach((c,i)=>{dsqrd+=(point2[i]-c)*(point2[i]-c)});return Math.sqrt(dsqrd)}static midpoint(point1=[1,2,3],point2=[3,4,5]){return point1.map((c,i)=>{return(c+point2[i])*.5})}static normalize(vec){var norm=0;norm=this.magnitude(vec);var vecn=new Array(vec.length);vec.forEach((c,i)=>{vecn[i]=c*norm});return vecn}static normalizeSeries(arr=[],fromZero=true){let max=Math.max(...arr);let min=Math.min(...arr);if(fromZero==false){max=Math.max(max,Math.abs(min));min=0}if(max-min===0){min=0;if(max===0)max=1e-13}return arr.map(v=>(v-min)/(max-min))}static quadraticFormula(a,b,c){let bbmac4=Math.sqrt(b*b-4*a*c);if(!isNaN(bbmac4))return["complex","complex"];let _a2=1/(2*a);if(bbmac4===0)return[b*_a2];let nb=-b;return[(nb+bbmac4)*_a2,(nb-bbmac4)*_a2]}static newtonsMethod(foo=x2=>{return Math.pow(x2,5)+x2*x2-x2-.2},start=0,end=1,precision=.01,attempts=10){let roots=[];for(let i=0;i<attempts;i++){let seedx=Math.random()*(end-start);let guess=foo(seedx);let guess2=foo(seedx+precision);let slope=(guess2-guess)/precision;let xn=seedx+precision;while(Math.abs(slope)>precision){let step=-guess/slope2;let xn12=xn+step;guess=guess2;guess2=foo(xn12);let slope2=(guess2-guess)/(xn12-xn)}let idx;let f=roots.find((root,i2)=>{if(Math.abs(xn1-root)<precision){idx=i2;return true}});if(f)roots[idx]=(xn1+f)*.5;else roots.push(xn1)}return roots}static makeVec(point1,point2){var vec=[];point1.forEach((c,i)=>{vec.push(point2[i]-c)});return vec}static getBufferedValueByCoordinates(vb=new Array(300).fill(1),dims=[10,10,2],coordinate=[1,2,1],cardinal=void 0){let getIdx=(foundIdx=0,dimIdx=0)=>{if(dimIdx===dims.length)return foundIdx;if(dimIdx==0)foundIdx+=coordinate[dimIdx];else if(dims[dimIdx]==0)dimsAt0++;else{let reMul=(val=coordinate[dimIdx],di=dimIdx-1)=>{val*=dims[di];di--;if(di==0)return val;else return reMul(val,di)};foundIdx+=reMul(coordinate[dimIdx]+1,dimIdx-1)}dimIdx++;return getIdx(foundIdx,dimIdx)};let found=getIdx();if(cardinal){if(coordinate[coordinate.length-1]===0){let lastnonzero=0;let idx=0;while(idx!==coordinate.length-1){if(coordinate[idx]!==0)lastnonzero=idx;idx++}return vb[found-lastnonzero+cardinal]}return vb[found-dims.length+cardinal]}else{if(coordinate[coordinate.length-1]===0){let lastnonzero=0;let idx=0;while(idx!==coordinate.length-1){if(coordinate[idx]!==0)lastnonzero=idx;idx++}return vb.slice(found-lastnonzero,found+1)}return vb.slice(found-dims.length,found+1)}}static forBufferedMat(vb=new Array(100).fill(1),dims=[10,10],asIndex=(v,i,x2,y)=>{return v+x2+y}){let coordinate=[];let idx=0;let recurseFor=(depth=0,nextDepth=depth+1)=>{let result=new Array(vb.length);for(let di=0;di<dims[depth];di++){coordinate[depth]=di;if(dims[nextDepth])recurseFor(nextDepth);else{result[idx]=asIndex(vb[idx],idx,...coordinate);idx++}}return result};let recurseForArrFuncs=(depth,nextDepth=depth+1)=>{let result=new Array(vb.length);for(let di=0;di<dims[depth];di++){coordinate[depth]=di;if(dims[nextDepth])recurseFor(nextDepth);else{for(let dj=0;dj<dims.length;dj++){result[idx]=asIndex[dj](vb[idx],idx,...coordinate);idx++}}}return result};if(typeof asIndex==="function"){return recurseFor()}else if(Array.isArray(asIndex)){return recurseForArrFuncs()}}static mapBufferedMat(buffer=new Array(100).fill(1),dimensions=[10,10],asIndex=(v,idx,i,j)=>{console.log(`value:${v}, idx:${idx}, x:${i},y:${j}`);return v+i+j}){let coordinate=new Array(dimensions.length).fill(0);const iterateCoordinate=(coord,idx=0)=>{if(coord[idx]>=dimensions[idx]){coord[idx]=0;idx++;if(idx===dimensions.length)return;iterateCoordinate(coord,idx)}else coord[idx]++};let result=new Array(buffer.length);let i=0;if(typeof asIndex==="function"){while(i<buffer.length){result[i]=asIndex(buffer[i],i,...coordinate);i+=dimensions.length;iterateCoordinate(coordinate)}}else if(Array.isArray(asIndex)){while(i<buffer.length){asIndex.forEach(func=>{result[i]=func(buffer[i],i,...coordinate);i++;iterateCoordinate(coordinate)})}}return result}static combinations(choices=["a","b","c"],vecsize=3){var result=[];if(vecsize<=0){result.push([])}else{_Math2.combinations(choices,vecsize-1).forEach(function(previousComb){choices.forEach(function(element){result.push([element].concat(previousComb))})})}return result}static generateCoordinateSpace(upperBounds=[10,10,10],lowerBounds=[-10,-10,-10],steps=[1,1,1],mutater=void 0){for(let i=0;i<upperBounds.length;i++){if(lowerBounds[i]>upperBounds[i]){let temp=upperBounds[i];upperBounds[i]=lowerBounds[i];lowerBounds[i]=temp}}let result=[];let copy=[...upperBounds];let lastindex=copy.length-1;result.push([...copy]);while(copy[0]>=lowerBounds[0]){let checkNextIndex=decrIdx2=>{if(copy[decrIdx2]<=lowerBounds[decrIdx2]){if(decrIdx2===0)return;copy[decrIdx2]=upperBounds[decrIdx2];decrIdx2--;if(decrIdx2<0)return;if(typeof steps[decrIdx2]=="function")copy[decrIdx2]-=steps[decrIdx2](copy[decrIdx2]);else copy[decrIdx2]-=steps[decrIdx2];checkNextIndex(decrIdx2)}};let decrIdx=lastindex;if(typeof steps[decrIdx]=="function")copy[decrIdx]-=steps[decrIdx](copy[decrIdx]);else copy[decrIdx]-=steps[decrIdx];result.push([...copy]);checkNextIndex(decrIdx);if(mutater)result[result.length-1]=mutater(result[result.length-1])}return result}static calcVectorField(coordinates=[[0,0],[0,1],[1,0],[1,1]],formula=(x2,y)=>{return[x2*10,y*10]}){return coordinates.map(vec=>formula(...vec))}static transpose(mat){return mat[0].map((_,colIndex)=>mat.map(row=>row[colIndex]))}static matmul(a,b){var aNumRows=a.length,aNumCols=a[0].length,bNumRows=b.length,bNumCols=b[0].length,m=new Array(aNumRows);for(var r=0;r<aNumRows;++r){m[r]=new Array(bNumCols);for(var c=0;c<bNumCols;++c){m[r][c]=0;for(var i=0;i<aNumCols;++i){m[r][c]+=a[r][i]*b[i][c]}}}return m}static matscale(mat,scalar){let m=[];for(var i=0;i<mat.length;i++){m[i]=[];for(let j=0;j<mat[0].length;j++){m[i][j]=mat[i][j]*scalar}}return m}static matadd(a,b){let m=[];for(let i=0;i<a.length;i++){m[i]=[];for(var j=0;j<a[0].length;j++){m[i][j]=a[i][j]+b[i][j]}}return m}static matsub(a,b){let m=[];for(let i=0;i<a.length;i++){m[i]=[];for(var j=0;j<a[0].length;j++){m[i][j]=a[i][j]-b[i][j]}}return m}static histogram(arr=[],binSize=1,nBins=void 0){let copy=[...arr];copy.sort(function(a,b){return a-b});let binStart=Math.min(...copy);if(typeof nBins==="number"){let binEnd=Math.max(...copy);binSize=Math.abs((binEnd-binStart)/(nBins-1))}let j=binStart;let binx=[];let biny=[];for(let i=0;i<copy.length;i++){let binidx=binSize*j;if(copy[i]>binStart+binidx){j++;binidx+=binSize;let binmin=binStart+binidx;let binmid=binmin+binidx*.5;binx.push(binmid);biny.push(0)}biny[biny.length-1]++}return[binx,biny]}static normalDistribution(samples=[],normalize=true,cutoff=1e-4){let m=this.mean(samples);let vari=this.variance(samples);let nSamples=samples.length;let probabilities=[];let denom=1/(this.TWO_PI*vari);let _variance=1/vari;let sum=0;for(let i=0;i<nSamples;i++){let px=Math.exp(-.5*Math.pow((samples[i]-m)*_variance,2))*denom;if(px<cutoff)px=0;probabilities.push(px);sum+=px}if(normalize){let _sum=1/sum;probabilities=probabilities.map(x2=>x2*_sum)}return probabilities}static expectedValue(samples=[],probabilities=this.normalDistribution(samples)){return samples.reduce((sum,item,idx)=>sum+item*probabilities[idx])}static originMoment(samples=[],probabilities=this.normalDistribution(samples),order=1){return samples.reduce((sum,item,idx)=>sum+Math.pow(item,order)*probabilities[idx])}static centralMoment(samples=[],probabilities=this.normalDistribution(samples),order=1){let m=this.mean(samples);return samples.reduce((sum,item,idx)=>sum+Math.pow(item-m,order)*probabilities[idx]/samples.length)}static linearDiscriminantAnalysis(samples=[],classifier=[]){let mean=this.mean(samples);let meank=this.mean(classifier);let covariance=this.cov1d(samples,classifier);let probs=this.normalDistribution(samples);let dk=[];for(let i=0;i<samples.length;i++){dk.push(x[i]*covariance*meank-.5*mean*covariance*meank+Math.log10(probs[i]))}return dk}static conv1D(arr=[],kern=[1/3,1/3,1/3],pad=Math.floor(kern.length*.5)){let result=[];let _n=1/kern.length;if(pad>0){let pads=new Array(pad).fill(0);arr=[...pads,...arr,...pads]}let start=Math.floor(kern.length*.5);let end=arr.length-kern.length+start;for(let i=start;i<end;i++){let acc=0;for(let j=0;j<kern.length;j++){acc+=arr[i-start]*kern[j]}result.push(acc*_n)}return result}static conv2D(mat=[[],[],[]],kern=[[],[],[]],pad=0){let result=new Array(mat.length-Math.ceil(kern.length*.5)).fill([]);let mat_t;let kern_t=_Math2.transpose(kern_t);if(pad>0){let pads=new Array(pad).fill(0);mat_t=_Math2.transpose(mat);for(let i2=0;i2<mat_t.length;i2++){mat_t[i2]=[...pads,...mat_t[i2],...pads]}mat=_Math2.transpose(mat_t);for(let j=0;j<mat.length;j++){mat[j]=[...pads,...mat[j],...pads]}}let startr=Math.floor(kern[0].length*.5);let startl=Math.floor(kern_t[0].length*.5);let endr=mat[0].length-kern[0].length+startr;let endl=mat_t[0].length-kern_t[0].length+startl;let _n=1/(kern[0].length*kern_t[0].length);let iters=endr*endl;let i=startr;let x2;let y=startl;while(i<iters){let acc=0;x2=i%mat[0].length;if(x2===0){y++}for(let j=0;j<kern[0].length;j++){for(let k=0;k<kern_t[0].length;j++){acc+=mat[y-startl+k][x2-startr+j]*kern[k][j]}result[y].push(acc*_n)}i++}return result}static cov2d(mat){var mattransposed=this.transpose(mat);var matproducts=[];var rowmeans=[];var colmeans=[];mat.forEach((row,idx)=>{rowmeans.push(this.mean(row))});mattransposed.forEach((col,idx)=>{colmeans.push(this.mean(col))});mat.forEach((row,idx)=>{matproducts.push([]);for(var col=0;col<row.length;col++){matproducts[idx].push((mat[idx][col]-rowmeans[idx])*(mat[idx][col]-colmeans[col])/(row.length-1))}});var matproductstransposed=this.transpose(matproducts);var aNumRows=matproducts.length,aNumCols=matproducts[0].length,bNumRows=matproductstransposed.length,bNumCols=matproductstransposed[0].length,m=new Array(aNumRows);for(var r=0;r<aNumRows;++r){m[r]=new Array(bNumCols);for(var c=0;c<bNumCols;++c){m[r][c]=0;for(var i=0;i<aNumCols;++i){m[r][c]+=matproducts[r][i]*matproductstransposed[i][c]/(mat[0].length-1)}}}return m}static cov1d(arr1=[],arr2=[]){return this.cov2d([arr1,arr2])}static cov3d(x2=[],y=[],z=[]){return[[this.cov1d(x2,x2),this.cov1d(x2,y),this.cov1d(x2,z)],[this.cov1d(y,x2),this.cov1d(y,y),this.cov1d(y,z)],[this.cov1d(z,x2),this.cov1d(z,y),this.cov1d(z,z)]]}static covNd(dimensionalData=[]){let covariance=[];dimensionalData.forEach((arr,i)=>{covariance.push([]);dimensionalData.forEach((arr2,j)=>{covariance[i].push(this.cov1d(arr,arr2))})})}static eigens2x2(mat=[[1,2],[3,4]]){let det=mat[0][0]*mat[1][1]-mat[0][1]*mat[1][0];let mean=(mat[0][0]+mat[1][1])*.5;let sqrt=Math.sqrt(mean*mean-det);let eig1=mean+sqrt;let eig2=mean-sqrt;return[eig1,eig2]}static eigenvectors2x2(mat=[[1,2],[3,4]],eigens=[1,2]){let v1=[-mat[0][1],mat[0][0]-eigens[0]];if(v1[0]===0&&v1[1]===0){v1[0]=mat[1][1]-eigens[0];v1[1]=-mat[1][0]}let v2=[-mat[0][1],mat[0][0]-eigens[1]];if(v2[0]===0&&v2[1]===0){v2[0]=mat[1][1]-eigens[1];v2[1]=-mat[1][0]}return[v1,v2]}static fastpca2d(xarr,yarr){let cov1d=this.cov1d(xarr,yarr);let eigs=this.eigens2x2(cov1d);if(eigs[1]>eigs[0])eigs.reverse();let evs=this.eigenvectors2x2(cov1d,eigs);console.log(eigs,evs);return[eigs,evs]}static crosscorrelation(arr1,arr2){var arr2buf=[...arr2,...Array(arr2.length).fill(0)];var mean1=this.mean(arr1);var mean2=this.mean(arr2);var arr1Est=arr1.reduce((sum,item)=>sum+=Math.pow(item-mean1,2));arr1Est=Math.sqrt(Math.abs(arr1Est));var arr2Est2=arr2.reduce((sum,item)=>sum+=Math.pow(item-mean1,2));arr2Est2=Math.sqrt(Math.abs(arr2Est2));let denom=arr1Est*arr2Est2;if(denom===0)denom=1e-26;var _arrEstsMul=1/denom;var correlations=new Array(arr1.length).fill(0);for(var delay=0;delay<arr1.length;delay++){var r=arr1.reduce((sum,item,i)=>sum+=(item-mean1)*(arr2buf[delay+i]-mean2));correlations[delay]=r*_arrEstsMul}return correlations}static autocorrelation(arr1){var delaybuf=[...arr1,...Array(arr1.length).fill(0)];var mean1=this.mean(arr1);var arr1Est=arr1.reduce((sum,item)=>sum+=Math.pow(item-mean1,2));arr1Est=Math.sqrt(Math.abs(arr1Est));let denom=arr1Est*arr2Est;if(denom===0)denom=1e-26;var _arr1estsqrd=1/denom;var correlations=new Array(arr1.length).fill(0);for(var delay=0;delay<arr1.length;delay++){var r=arr1.reduce((sum,item,i)=>sum+=(item-mean1)*(delaybuf[delay+i]-mean1));correlations[delay]=r*_arr1estsqrd}return correlations}static autocorrelation2dNormalized(mat2d2){let result=[];for(let y=0;y<mat2d2.length;y++){result.push([]);for(let x2=0;x2<mat2d2[y].length;x2++){let G=0;let _G=0;for(let b=0;b<mat2d2.length;b++){for(let a=0;a<mat2d2[b].length;a++){G+=mat2d2[y][x2]*mat2d2[mat2d2.length-1-b][mat2d2[y].length-1-a];_G+=mat2d2[y][x2]*mat2d2[mat2d2.length-1][mat2d2[y].length-1]}}result[y][x2]=G/_G-1}}return result}static crosscorrelation2d(mat2d1,mat2d2){let result=[];for(let y=0;y<mat2d1.length;y++){result.push([]);for(let x2=0;x2<mat2d1[y].length;x2++){let G=0;for(let b=0;b<mat2d2.length;b++){for(let a=0;a<mat2d2[b].length;a++){G+=mat2d1[y][x2]*mat2d2[mat2d2.length-1-b][mat2d2[y].length-1-a]}}result[y][x2]=G}}return result}static crosscorrelation2dNormalized(mat2d1,mat2d2){let result=[];for(let y=0;y<mat2d1.length;y++){result.push([]);for(let x2=0;x2<mat2d1[y].length;x2++){let G=0;let _G=0;for(let b=0;b<mat2d2.length;b++){for(let a=0;a<mat2d2[b].length;a++){G+=mat2d1[y][x2]*mat2d2[mat2d.length-1-b][mat2d2[y].length-1-a];_G+=mat2d1[y][x2]*mat2d2[mat2d2.length-1][mat2d2[y].length-1]}}result[y][x2]=G/_G-1}}return result}static correlograms(dat=[[],[]]){var correlograms=[];dat.forEach((row1,i)=>{dat.forEach((row2,j)=>{if(j>=i){correlograms.push(_Math2.crosscorrelation(row1,row2))}})});return correlograms}static dft(sineWave=[]){var TWOPI=2*3.141592653589793;var real=[];var imag=[];var mags=[];for(var k=0;k<sineWave.length;k++){real.push(0);imag.push(0);for(var j=0;j<sineWave.length;j++){var shared=TWOPI*k*j/sineWave.length;real[k]=real[k]+sineWave[j]*Math.cos(shared);imag[k]=imag[k]-sineWave[j]*Math.sin(shared)}mags.push(Math.sqrt(real[k]*real[k]+imag[k]*imag[k]))}function orderMagnitudes(unorderedMags){return[...unorderedMags.slice(Math.ceil(unorderedMags.length*.5),unorderedMags.length),...unorderedMags.slice(0,Math.ceil(unorderedMags.length*.5))]}mags=orderMagnitudes(mags);let halflen=mags.length*.5;let freqs=mags.map((m,i)=>{return i-halflen});return{real,imag,freqs,mags}}static sma(arr=[],window){var smaArr=[];for(var i=0;i<arr.length;i++){if(i==0){smaArr.push(arr[0])}else if(i<window){var arrslice=arr.slice(0,i+1);smaArr.push(arrslice.reduce((previous,current)=>current+=previous)/(i+1))}else{var arrslice=arr.slice(i-window,i);smaArr.push(arrslice.reduce((previous,current)=>current+=previous)/window)}}return smaArr}static sum(arr=[]){if(arr.length>0){var sum=arr.reduce((prev,curr)=>curr+=prev);return sum}else{return 0}}static reduceArrByFactor(arr,factor=2){let x2=arr.filter((element,index)=>{return index%factor===0});return x2}static makeArr(startValue,stopValue,nSteps){var arr=[];var step=(stopValue-startValue)/(nSteps-1);for(var i=0;i<nSteps;i++){arr.push(startValue+step*i)}return arr}static autoscale(array,stackedLines=1,stackPosition=0,centerZero=false){if(array?.length===0)return array;let max=Math.max(...array);let min=Math.min(...array);let _lines=1/stackedLines;let scalar;if(centerZero){let absmax=Math.max(Math.abs(min),Math.abs(max));scalar=_lines/absmax;return array.map(y=>y*scalar+(_lines*(stackPosition+1)*2-1-_lines))}else{scalar=_lines/(max-min);return array.map(y=>2*((y-min)*scalar-1/(2*stackedLines))+(_lines*(stackPosition+1)*2-1-_lines))}}static absmax(array){return Math.max(Math.abs(Math.min(...array)),Math.max(...array))}static downsample(array,fitCount,scalar=1){if(array.length>fitCount){let output=new Array(fitCount);let incr=array.length/fitCount;let lastIdx=array.length-1;let last=0;let counter=0;for(let i=incr;i<array.length;i+=incr){let rounded=Math.round(i);if(rounded>lastIdx)rounded=lastIdx;for(let j=last;j<rounded;j++){output[counter]+=array[j]}output[counter]/=(rounded-last)*scalar;counter++;last=rounded}return output}else return array}static interpolateArray(data,fitCount,scalar=1){var linearInterpolate=function(before2,after2,atPoint2){return(before2+(after2-before2)*atPoint2)*scalar};var newData=new Array;var springFactor=(data.length-1)/(fitCount-1);newData[0]=data[0];for(var i=1;i<fitCount-1;i++){var tmp=i*springFactor;var before=Math.floor(tmp);var after=Math.ceil(tmp);var atPoint=tmp-before;newData[i]=linearInterpolate(data[before],data[after],atPoint)}newData[fitCount-1]=data[data.length-1];return newData}static isExtrema(arr,critical="peak"){let ref=[...arr];if(ref.length%2===0)ref.pop();if(arr.length>1){let pass=true;for(let i=0;i<ref.length;i++){let val=ref[i];if(critical==="peak"){if(i<Math.floor(ref.length*.5)&&val>=ref[Math.floor(ref.length*.5)]){pass=false;break}else if(i>Math.floor(ref.length*.5)&&val>=ref[Math.floor(ref.length*.5)]){pass=false;break}}else if(critical==="valley"){if(i<Math.floor(ref.length*.5)&&val<=ref[Math.floor(ref.length*.5)]){pass=false;break}else if(i>Math.floor(ref.length*.5)&&val<=ref[Math.floor(ref.length*.5)]){pass=false;break}}else{if(i<Math.floor(ref.length*.5)&&val<=ref[Math.floor(ref.length*.5)]){pass=false;break}else if(i>Math.floor(ref.length*.5)&&val<=ref[Math.floor(ref.length*.5)]){pass=false;break}}}if(critical!=="peak"&&critical!=="valley"&&pass===false){pass=true;for(let i=0;i<ref.length;i++){let val=ref[i];if(i<Math.floor(ref.length*.5)&&val>=ref[Math.floor(ref.length*.5)]){pass=false;break}else if(i>Math.floor(ref.length*.5)&&val>=ref[Math.floor(ref.length*.5)]){pass=false;break}}}return pass}else return void 0}static isCriticalPoint(arr,critical="peak"){let ref=[...arr];if(ref.length%2===0)ref.pop();if(arr.length>1){let pass=true;for(let i=0;i<ref.length;i++){let val=ref[i];if(critical==="peak"){if(i<ref.length*.5&&val<=0){pass=false;break}else if(i>ref.length*.5&&val>0){pass=false;break}}else if(critical==="valley"){if(i<ref.length*.5&&val>=0){pass=false;break}else if(i>ref.length*.5&&val<0){pass=false;break}}else{if(i<ref.length*.5&&val>=0){pass=false;break}else if(i>ref.length*.5&&val<0){pass=false;break}}}if(critical!=="peak"&&critical!=="valley"&&pass===false){pass=true;for(let i=0;i<ref.length;i++){let val=ref[i];if(i<ref.length*.5&&val<=0){pass=false;break}else if(i>ref.length*.5&&val>0){pass=false;break}}}return pass}else return void 0}static getPeakThreshold(arr,peakIndices,thresholdVar){let threshold;let filtered=arr.filter((o,i)=>{if(peakIndices.indexOf(i)>-1)return true});if(thresholdVar===0){threshold=this.mean(filtered)}else threshold=(thresholdVar+this.mean(filtered))*.5;return threshold}static column(mat,x2){let col=new Array(mat.length).fill(0).map(()=>new Array(1).fill(0));for(let i=0;i<mat.length;i++){col[i][0]=mat[i][x2]}return col}static flatten_vector(v){let v_new=[];for(let i=0;i<v.length;i++){v_new[i]=v[i][0]}return v_new}static squared_difference(v1,v2){let sum=0;for(let i=0;i<v1.length;i++){sum=sum+Math.pow(v1[i]-v2[i],2)}return sum}static shift_deflate(mat,eigenvalue,eigenvector){let len=Math.sqrt(this.matmul(this.transpose(eigenvector),eigenvector));let U=this.matscale(eigenvector,1/len);let delta=this.matscale(this.matmul(U,this.transpose(U)),eigenvalue);let M_new=this.matsub(mat,delta);return M_new}static eigenvalue_of_vector(mat,eigenvector){ev=this.matmul(this.matmul(this.transpose(eigenvector),mat),eigenvector);return ev}static power_iteration(mat,tolerance=1e-5,max_iterations=1e3){let rank=mat.length;let eigenvector=new Array(rank).fill(0).map(()=>new Array(1).fill(Math.sqrt(rank)));let eigenvalue=this.eigenvalue_of_vector(mat,eigenvector);let epsilon=1;let iter=0;while(epsilon>tolerance&&iter<max_iterations){let old_eigenvalue=JSON.parse(JSON.stringify(eigenvalue));let Mv=this.matmul(mat,eigenvector);eigenvector=this.normalize(Mv);eigenvalue=this.eigenvalue_of_vector(mat,eigenvector);epsilon=Math.abs(eigenvalue-old_eigenvalue);iter++};return[eigenvalue,eigenvector]}static eigens(mat,tolerance=1e-4,max_iterations=1e3){let eigenvalues=[];let eigenvectors=[];for(let i=0;i<mat.length;i++){let result=this.power_iteration(mat,tolerance,max_iterations);let eigenvalue=result[0];let eigenvector=result[1];eigenvalues[i]=eigenvalue;eigenvectors[i]=this.flatten_vector(eigenvector);mat=this.shift_deflate(mat,eigenvalue,eigenvector)}return[eigenvalues,eigenvectors]}static pca(mat,tolerance=1e-5){let dims=mat.length;let t=new Array(dims);let p=new Array(dims);let mat_t=this.transpose(mat);t[0]=this.column(mat,0);let epsilon=1;let iter=0;while(espilon>tolerance){iter++;p[0]=this.matmul(mat_t,t[0]);let tp=this.matmul(this.transpose(t[0]),t[0]);p[0]=this.matscale(p[0],1/tp);let p_length=Math.sqrt(this.matmul(this.transpose(p[0]),p[0]));p[0]=this.matscale(p[0],1/p_length);let t_new=this.matmul(mat,p[0]);let pp=this.matmul(this.transpose(p[0]),p[0]);t_new=this.matscale(t_new,1/pp);epsilon=this.squared_difference(t[0],t_new);t[0]=JSON.parse(JSON.stringify(t_new))}let components=this.matmul(this.transpose(t[0]),t[0]);return components}static circularBuffer(arr,newEntries){if(Array.isArray(newEntries)){if(newEntries.length<arr.length){let slice=arr.slice(newEntries.length);let len=arr.length;arr.splice(0,len,...slice,...newEntries)}else if(newEntries.length>arr.length){let len=arr.length;arr.splice(0,len,newEntries.slice(len-newEntries.length))}else{arr.splice(0,arr.length,...newEntries)}}else{arr.push(newEntries);arr.shift()}return arr}static HSLToRGB(h,s,l,scalar=255){s/=100;l/=100;let c=(1-Math.abs(2*l-1))*s,x2=c*(1-Math.abs(h/60%2-1)),m=l-c/2,r=0,g=0,b=0;if(0<=h&&h<60){r=c;g=x2;b=0}else if(60<=h&&h<120){r=x2;g=c;b=0}else if(120<=h&&h<180){r=0;g=c;b=x2}else if(180<=h&&h<240){r=0;g=x2;b=c}else if(240<=h&&h<300){r=x2;g=0;b=c}else if(300<=h&&h<360){r=c;g=0;b=x2}r=(r+m)*scalar;g=(g+m)*scalar;b=(b+m)*scalar;return[r,g,b]}static p300(event_timestamps=[],raw_signal=[],signal_timestamps=[],sps=256){let smoothingstep=Math.floor(sps/10);let smoothed=this.sma(raw_signal,smoothingstep);let peaks=this.peakDetect(smoothed,"peak",smoothingstep);let mean=this.mean(smoothed);let std=this.std(smoothed,mean);let p_idx=0;let candidates=[];if(peaks.length>0){event_timestamps.forEach((t,j)=>{while(signal_timestamps[peaks[p_idx]]<t+200){p_idx++;if(!peaks[p_idx])break}let tempi=0;let tempcandidates=[];while(signal_timestamps[peaks[p_idx+tempi]]<t+600){tempcandidates.push(p_idx+tempi);tempi++;if(!peaks[p_idx+tempi])break}if(tempcandidates.length>1){let peakvals=[];tempcandidates.forEach(tc=>{peakvals.push(smoothed[peaks[tc]])});let max=Math.max(...peakvals);let maxi=tempcandidates[peakvals.indexOf(max)];candidates.push({event_timestamp:t,event_index:j,peak_timestamp:signal_timestamps[[peaks[maxi]]],signal_index:[peaks[maxi]],signal_amplitude:raw_signal[[peaks[maxi]]],zscore:(smoothed[peaks[maxi]]-mean)/std})}else if(tempcandidates.length===1)candidates.push({event_timestamp:t,event_index:j,peak_timestamp:signal_timestamps[peaks[tempcandidates[0]]],signal_index:peaks[tempcandidates[0]],signal_amplitude:raw_signal[[peaks[tempcandidates[0]]]],zscore:(smoothed[peaks[tempcandidates[0]]]-mean)/std})})}return candidates}};var Math2=_Math2;__publicField(Math2,"TWO_PI",Math.PI*2);__publicField(Math2,"C",299792458);__publicField(Math2,"G",66743e-15);__publicField(Math2,"h",662607015e-42);__publicField(Math2,"R",8314.32);__publicField(Math2,"Ra",287);__publicField(Math2,"H",69.3);__publicField(Math2,"kbar",1054571817e-43);__publicField(Math2,"kB",1380649e-29);__publicField(Math2,"ke",89875517923e-1);__publicField(Math2,"me",91093837015e-41);__publicField(Math2,"mp",167262192369e-38);__publicField(Math2,"mn",167492749804e-38);__publicField(Math2,"P0",101325);__publicField(Math2,"T0",288.15);__publicField(Math2,"p0",1.225);__publicField(Math2,"Na",60220978e16);__publicField(Math2,"y",1.405);__publicField(Math2,"M0",28.96643);__publicField(Math2,"g0",9.80665);__publicField(Math2,"Re",6378100);__publicField(Math2,"B",1458e-9);__publicField(Math2,"S",110.4);__publicField(Math2,"Sigma",365e-12);__publicField(Math2,"imgkernels",{edgeDetection:[[-1,-1,-1],[-1,8,-1],[-1,-1,-1]],boxBlur:[[1/9,1/9,1/9],[1/9,1/9,1/9],[1/9,1/9,1/9]],sobelLeft:[[1,0,-1],[2,0,-2],[1,0,-1]],sobelRight:[[-1,0,1],[-2,0,2],[-1,0,1]],sobelTop:[[1,2,1],[0,0,0],[-1,-2,-1]],sobelBottom:[[-1,2,1],[0,0,0],[1,2,1]],identity:[[0,0,0],[0,1,0],[0,0,0]],gaussian3x3:[[1,2,1],[2,4,2],[1,2,1]],guassian7x7:[[0,0,0,5,0,0,0],[0,5,18,32,18,5,0],[0,18,64,100,64,18,0],[5,32,100,100,100,32,5],[0,18,64,100,64,18,0],[0,5,18,32,18,5,0],[0,0,0,5,0,0,0]],emboss:[[-2,-1,0],[-1,1,1],[0,1,2]],sharpen:[[0,-1,0],[-1,5,-1],[0,-1,0]]});__publicField(Math2,"integral",(func=x2=>{let y=x2;return y},range=[],stepx=.01)=>{let area=0;for(let i=range[0];i<range[1];i+=stepx){let y=func(i);area+=y*stepx}return area});__publicField(Math2,"dintegral",(func=(x2,y)=>{let z=x2+y;return z},range=[[],[]],stepx=.01,stepy=stepx)=>{let volume=0;for(let i=range[0][0]+stepx;i<range[0][1];i+=stepx){for(let j=range[1][0]+stepy;j<range[1][1];j+=stepy){let z=func(i,j);volume+=z*stepx*stepy}}return volume});__publicField(Math2,"tintegral",(func=(x2,y,z)=>{let w=x2+y+z;return w},range=[[],[],[]],stepx=.01,stepy=stepx,stepz=stepx)=>{let volume=0;for(let i=range[0][0]+stepx;i<range[0][1];i+=stepx){for(let j=range[1][0]+stepy;j<range[1][1];j+=stepy){for(let k=range[2][0]+stepz;k<range[2][1];k+=stepz){let w=func(i,j,k);volume+=w*stepx*stepy*stepz}}}return volume});__publicField(Math2,"pintegral",(func=x2=>{let y=x2;return y},range=[],stepx=.01)=>{let length=0;let y0=void 0;let yi=void 0;for(let i=range[0];i<range[1];i+=stepx){y0=yi;yi=func(i);if(y0)length+=_Math2.distance([0,y0],[stepx,yi])}return length});__publicField(Math2,"meshgrid",_Math2.generateCoordinateSpace);__publicField(Math2,"autocorrelation2d",mat2d2=>{let result=[];for(let y=0;y<mat2d2.length;y++){result.push([]);for(let x2=0;x2<mat2d2[y].length;x2++){let G=0;for(let b=0;b<mat2d2.length;b++){for(let a=0;a<mat2d2[b].length;a++){G+=mat2d2[y][x2]*mat2d2[mat2d2.length-1-b][mat2d2[y].length-1-a]}}result[y][x2]=G}}return result});__publicField(Math2,"lerp",_Math2.makeArr);__publicField(Math2,"upsample",_Math2.interpolateArray);__publicField(Math2,"lerp",(v0,v1,fit,floor=true)=>{function lerp(v02,v12,t){return(1-t)*v02+t*v12}function interpolerp(v02,v12,fit2,floor2=true){if(fit2<=2)return[v02,v12];let a=1/fit2;let result=new Array(fit2);result[0]=v02;for(let i=1;i<=fit2;i++){result[i]=lerp(v02,v12,a*i);if(floor2)result[i]=Math.floor(result[i])}return result}});__publicField(Math2,"peakDetect",(smoothedArray,type="peak",window=49)=>{let mid=Math.floor(window*.5);let peaks=[];for(let i=0;i<smoothedArray.length-window;i++){let isPeak=_Math2.isExtrema(smoothedArray.slice(i,i+window),type);if(isPeak){peaks.push(i+mid-1)}}return peaks});Object.assign(Math,Math2);if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope){self.SERVICE=new WorkerService({services:{workerCanvasRoutes,unsafeRoutes,Math,Math2}})}var Worker_default=self;})();\n')], { type: "text/javascript" }));
  function parseFunctionFromText4(method = "") {
    let getFunctionBody = (methodString) => {
      return methodString.replace(/^\W*(function[^{]+\{([\s\S]*)\}|[^=]+=>[^{]*\{([\s\S]*)\}|[^=]+=>(.+))/i, "$2$3$4");
    };
    let getFunctionHead = (methodString) => {
      let startindex = methodString.indexOf("=>") + 1;
      if (startindex <= 0) {
        startindex = methodString.indexOf("){");
      }
      if (startindex <= 0) {
        startindex = methodString.indexOf(") {");
      }
      return methodString.slice(0, methodString.indexOf("{", startindex) + 1);
    };
    let newFuncHead = getFunctionHead(method);
    let newFuncBody = getFunctionBody(method);
    let newFunc;
    if (newFuncHead.includes("function")) {
      let varName = newFuncHead.split("(")[1].split(")")[0];
      newFunc = new Function(varName, newFuncBody);
    } else {
      if (newFuncHead.substring(0, 6) === newFuncBody.substring(0, 6)) {
        let varName = newFuncHead.split("(")[1].split(")")[0];
        newFunc = new Function(varName, newFuncBody.substring(newFuncBody.indexOf("{") + 1, newFuncBody.length - 1));
      } else {
        try {
          newFunc = (0, eval)(newFuncHead + newFuncBody + "}");
        } catch {
        }
      }
    }
    return newFunc;
  }
  var stringifyWithCircularRefs3 = function() {
    const refs = /* @__PURE__ */ new Map();
    const parents = [];
    const path = ["this"];
    function clear() {
      refs.clear();
      parents.length = 0;
      path.length = 1;
    }
    function updateParents(key, value) {
      var idx = parents.length - 1;
      var prev = parents[idx];
      if (typeof prev === "object") {
        if (prev[key] === value || idx === 0) {
          path.push(key);
          parents.push(value.pushed);
        } else {
          while (idx-- >= 0) {
            prev = parents[idx];
            if (typeof prev === "object") {
              if (prev[key] === value) {
                idx += 2;
                parents.length = idx;
                path.length = idx;
                --idx;
                parents[idx] = value;
                path[idx] = key;
                break;
              }
            }
            idx--;
          }
        }
      }
    }
    function checkCircular(key, value) {
      if (value != null) {
        if (typeof value === "object") {
          if (key) {
            updateParents(key, value);
          }
          let other = refs.get(value);
          if (other) {
            return "[Circular Reference]" + other;
          } else {
            refs.set(value, path.join("."));
          }
        }
      }
      return value;
    }
    return function stringifyWithCircularRefs22(obj, space) {
      try {
        parents.push(obj);
        return JSON.stringify(obj, checkCircular, space);
      } finally {
        clear();
      }
    };
  }();
  if (JSON.stringifyWithCircularRefs === void 0) {
    JSON.stringifyWithCircularRefs = stringifyWithCircularRefs3;
  }
  var stringifyFast3 = function() {
    const refs = /* @__PURE__ */ new Map();
    const parents = [];
    const path = ["this"];
    function clear() {
      refs.clear();
      parents.length = 0;
      path.length = 1;
    }
    function updateParents(key, value) {
      var idx = parents.length - 1;
      if (parents[idx]) {
        var prev = parents[idx];
        if (typeof prev === "object") {
          if (prev[key] === value || idx === 0) {
            path.push(key);
            parents.push(value.pushed);
          } else {
            while (idx-- >= 0) {
              prev = parents[idx];
              if (typeof prev === "object") {
                if (prev[key] === value) {
                  idx += 2;
                  parents.length = idx;
                  path.length = idx;
                  --idx;
                  parents[idx] = value;
                  path[idx] = key;
                  break;
                }
              }
              idx++;
            }
          }
        }
      }
    }
    function checkValues(key, value) {
      let val;
      if (value != null) {
        if (typeof value === "object") {
          let c = value.constructor.name;
          if (key && c === "Object") {
            updateParents(key, value);
          }
          let other = refs.get(value);
          if (other) {
            return "[Circular Reference]" + other;
          } else {
            refs.set(value, path.join("."));
          }
          if (c === "Array") {
            if (value.length > 20) {
              val = value.slice(value.length - 20);
            } else
              val = value;
          } else if (c.includes("Set")) {
            val = Array.from(value);
          } else if (c !== "Object" && c !== "Number" && c !== "String" && c !== "Boolean") {
            val = "instanceof_" + c;
          } else if (c === "Object") {
            let obj = {};
            for (const prop in value) {
              if (value[prop] == null) {
                obj[prop] = value[prop];
              } else if (Array.isArray(value[prop])) {
                if (value[prop].length > 20)
                  obj[prop] = value[prop].slice(value[prop].length - 20);
                else
                  obj[prop] = value[prop];
              } else if (value[prop].constructor.name === "Object") {
                obj[prop] = {};
                for (const p in value[prop]) {
                  if (Array.isArray(value[prop][p])) {
                    if (value[prop][p].length > 20)
                      obj[prop][p] = value[prop][p].slice(value[prop][p].length - 20);
                    else
                      obj[prop][p] = value[prop][p];
                  } else {
                    if (value[prop][p] != null) {
                      let con = value[prop][p].constructor.name;
                      if (con.includes("Set")) {
                        obj[prop][p] = Array.from(value[prop][p]);
                      } else if (con !== "Number" && con !== "String" && con !== "Boolean") {
                        obj[prop][p] = "instanceof_" + con;
                      } else {
                        obj[prop][p] = value[prop][p];
                      }
                    } else {
                      obj[prop][p] = value[prop][p];
                    }
                  }
                }
              } else {
                let con = value[prop].constructor.name;
                if (con.includes("Set")) {
                  obj[prop] = Array.from(value[prop]);
                } else if (con !== "Number" && con !== "String" && con !== "Boolean") {
                  obj[prop] = "instanceof_" + con;
                } else {
                  obj[prop] = value[prop];
                }
              }
            }
            val = obj;
          } else {
            val = value;
          }
        } else {
          val = value;
        }
      }
      return val;
    }
    return function stringifyFast22(obj, space) {
      parents.push(obj);
      let res = JSON.stringify(obj, checkValues, space);
      clear();
      return res;
    };
  }();
  if (JSON.stringifyFast === void 0) {
    JSON.stringifyFast = stringifyFast3;
  }
  var unsafeRoutes3 = { setRoute: function(fn, fnName) {
    if (typeof fn === "string")
      fn = parseFunctionFromText4(fn);
    if (typeof fn === "function") {
      if (!fnName)
        fnName = fn.name;
      if (this.__node.graph.get(fnName)) {
        this.__node.graph.get(fnName).__setOperator(fn);
      } else {
        let node = this.__node.graph.add({ __node: { tag: fnName }, __operator: fn });
      }
      return true;
    }
    return false;
  }, setNode: function(fn, fnName) {
    if (typeof fn === "string")
      fn = parseFunctionFromText4(fn);
    if (typeof fn === "function") {
      if (!fnName)
        fnName = fn.name;
      if (this.__node.graph.get(fnName)) {
        this.__node.graph.get(fnName).__setOperator(fn);
      } else
        this.__node.graph.add({ __node: { tag: fnName }, __operator: fn });
      return true;
    }
    return false;
  }, setMethod: function(route, fn, fnName) {
    if (typeof fn === "string")
      fn = parseFunctionFromText4(fn);
    if (typeof fn === "function") {
      if (!fnName)
        fnName = fn.name;
      if (this.__node.graph.get(route)) {
        this.__node.graph.get(route)[fnName] = fn;
      } else
        this.__node.graph.add({ __node: { tag: fnName, [fnName]: fn } });
      return true;
    }
    return false;
  }, assignRoute: function(route, source) {
    if (this.__node.graph.get(route) && typeof source === "object") {
      Object.assign(this.__node.graph.get(route), source);
    }
  }, transferClass: (classObj, className) => {
    if (typeof classObj === "object") {
      let str22 = classObj.toString();
      let message4 = { route: "receiveClass", args: [str22, className] };
      return message4;
    }
    return false;
  }, receiveClass: function(stringified, className) {
    if (typeof stringified === "string") {
      if (stringified.indexOf("class") === 0) {
        let cls = (0, eval)("(" + stringified + ")");
        let name3 = className;
        if (!name3)
          name3 = cls.name;
        this.__node.graph[name3] = cls;
        return true;
      }
    }
    return false;
  }, setGlobal: (key, value) => {
    globalThis[key] = value;
    return true;
  }, assignGlobalObject: (target, source) => {
    if (!globalThis[target])
      return false;
    if (typeof source === "object")
      Object.assign(globalThis[target], source);
    return true;
  }, setValue: function(key, value) {
    this.__node.graph[key] = value;
    return true;
  }, assignObject: function(target, source) {
    if (!this.__node.graph[target])
      return false;
    if (typeof source === "object")
      Object.assign(this.__node.graph[target], source);
    return true;
  }, setGlobalFunction: (fn, fnName) => {
    if (typeof fn === "string")
      fn = parseFunctionFromText4(fn);
    if (typeof fn === "function") {
      if (!fnName)
        fnName = fn.name;
      globalThis[fnName] = fn;
      return true;
    }
    return false;
  }, assignFunctionToGlobalObject: function(globalObjectName, fn, fnName) {
    if (!globalThis[globalObjectName])
      return false;
    if (typeof fn === "string")
      fn = parseFunctionFromText4(fn);
    if (typeof fn === "function") {
      if (!fnName)
        fnName = fn.name;
      this.__node.graph[globalObjectName][fnName] = fn;
      return true;
    }
    return false;
  }, setFunction: function(fn, fnName) {
    if (typeof fn === "string")
      fn = parseFunctionFromText4(fn);
    if (typeof fn === "function") {
      if (!fnName)
        fnName = fn.name;
      this.__node.graph[fnName] = fn;
      return true;
    }
    return false;
  }, assignFunctionToObject: function(objectName, fn, fnName) {
    if (!this.__node.graph[objectName])
      return false;
    if (typeof fn === "string")
      fn = parseFunctionFromText4(fn);
    if (typeof fn === "function") {
      if (!fnName)
        fnName = fn.name;
      this.__node.graph[objectName][fnName] = fn;
      return true;
    }
    return false;
  } };
  var algorithms3 = {};
  var loadAlgorithms3 = (settings) => {
    return Object.assign(algorithms3, settings);
  };
  function createSubprocess3(options, inputs) {
    let ctx = { _id: options._id ? options._id : `algorithm${Math.floor(Math.random() * 1e15)}`, ondata: options.ondata, run: (data) => {
      return ctx.ondata(ctx, data);
    } };
    if (options.structs)
      recursivelyAssign33(ctx, JSON.parse(JSON.stringify(options.structs)));
    if (inputs)
      recursivelyAssign33(ctx, JSON.parse(JSON.stringify(inputs)));
    if (options.oncreate) {
      ctx.oncreate = options.oncreate;
    }
    if (ctx.oncreate) {
      ctx.oncreate(ctx);
    }
    return ctx;
  }
  var recursivelyAssign33 = (target, obj) => {
    for (const key in obj) {
      if (typeof obj[key] === "object" && !Array.isArray(obj[key])) {
        if (typeof target[key] === "object" && !Array.isArray(target[key]))
          recursivelyAssign33(target[key], obj[key]);
        else
          target[key] = recursivelyAssign33({}, obj[key]);
      } else
        target[key] = obj[key];
    }
    return target;
  };
  var subprocessRoutes3 = { ...unsafeRoutes3, loadAlgorithms: loadAlgorithms3, "initSubprocesses": async function initSubprocesses3(subprocesses, service) {
    if (!service)
      service = this.__node.graph;
    if (!service)
      return void 0;
    for (const p in subprocesses) {
      let s = subprocesses[p];
      if (!s.worker && s.url)
        s.worker = service.addWorker({ url: s.url });
      if (!s.worker)
        continue;
      let w2 = s.worker;
      let wpId;
      wpId = service.establishMessageChannel(w2.worker, s.source?.worker);
      if (!s.source)
        s.source = service;
      if (typeof s.subprocess === "object") {
        const p2 = s.subprocess;
        if (!p2.name)
          continue;
        if (typeof p2.oncreate === "function") {
          p2.oncreate = p2.oncreate.toString();
        }
        if (typeof p2.ondata === "function") {
          p2.ondata = p2.ondata.toString();
        }
        s.worker.post("addSubprocessTemplate", [p2.name, p2.structs, p2.oncreate, p2.ondata, p2.props]);
        s.subprocess = p2.name;
      }
      if (s.init) {
        let r = await w2.run(s.init, s.initArgs);
        s.otherArgs = r;
      }
      if (s.otherArgs) {
        w2.run("setValue", ["otherArgsProxy", Array.isArray(s.otherArgs) ? s.otherArgs : [s.otherArgs]]);
      }
      if (s.pipeTo) {
        w2.run("setValue", ["routeProxy", s.route]);
        w2.run("setValue", ["pipeRoute", s.pipeTo.route]);
        if (s.url && !s.pipeTo.worker) {
          let w22 = service.addWorker({ url: s.url });
          s.pipeTo.portId = service.establishMessageChannel(w2.worker, w22.worker);
          s.pipeTo.worker = w22;
        }
        if (s.pipeTo.init) {
          s.pipeTo.otherArgs = await s.pipeTo.worker.run(s.pipeTo.init, s.pipeTo.initArgs);
        }
        w2.run("setValue", ["pipePort", s.pipeTo.portId]);
        if (s.pipeTo.otherArgs)
          w2.run("setValue", ["otherPipeArgs", s.pipeTo.otherArgs]);
        service.transferFunction(w2, function pipeResults(data) {
          let inp = data;
          if (this.__node.graph.otherArgsProxy)
            inp = [data, ...this.__node.graph.otherArgsProxy];
          let r = this.__node.graph.run(this.__node.graph.routeProxy, inp);
          if (!s.blocking)
            return new Promise((res) => {
              if (r instanceof Promise) {
                r.then((rr) => {
                  if (rr !== void 0) {
                    let args = rr;
                    if (this.__node.graph.otherPipeArgs)
                      args = [rr, ...this.__node.graph.otherPipeArgs];
                    if (this.workers[this.__node.graph.pipePort]) {
                      s.blocking = true;
                      this.workers[this.__node.graph.pipePort].run(this.__node.graph.pipeRoute, args).then((result) => {
                        s.blocking = false;
                        res(result);
                      });
                    }
                  }
                });
              } else if (r !== void 0) {
                let args = r;
                if (this.__node.graph.otherPipeArgs)
                  args = [r, ...this.__node.graph.otherPipeArgs];
                if (this.workers[this.__node.graph.pipePort]) {
                  s.blocking = true;
                  this.workers[this.__node.graph.pipePort].run(this.__node.graph.pipeRoute, args).then((result) => {
                    s.blocking = false;
                    res(result);
                  });
                }
              }
            });
          return void 0;
        }, s.route + "_pipeResults");
        s.route = s.route + "_pipeResults";
      } else {
        w2.run("setValue", ["routeProxy", s.route]);
        service.transferFunction(w2, function routeProxy(data) {
          let r;
          if (this.__node.graph.otherArgsProxy)
            r = this.__node.graph.nodes.get(this.__node.graph.routeProxy).__operator(data, ...this.__node.graph.otherArgsProxy);
          else
            r = this.__node.graph.nodes.get(this.__node.graph.routeProxy).__operator(data);
          if (this.__node.graph.state.triggers[this.__node.graph.routeProxy]) {
            if (r instanceof Promise) {
              r.then((rr) => {
                this.setState({ [this.__node.graph.routeProxy]: rr });
              });
            } else
              this.setState({ [this.__node.graph.routeProxy]: r });
          }
          return r;
        }, s.route + "_routeProxy");
        s.route = s.route + "_routeProxy";
        if (!s.stopped)
          w2.run("subscribeToWorker", [s.subscribeRoute, wpId, s.route]).then((sub) => {
            s.sub = sub;
          });
      }
      s.stop = async () => {
        if (s.source && typeof s.sub === "number") {
          s.source.unsubscribe(s.subscribeRoute, s.sub);
          return true;
        }
        return void 0;
      };
      s.start = async () => {
        if (typeof s.sub !== "number")
          return w2.run("subscribeToWorker", [s.subscribeRoute, wpId, s.route, s.blocking]).then((sub) => {
            s.sub = sub;
          });
      };
      s.setArgs = async (args) => {
        if (Array.isArray(args))
          await w2.run("setValue", ["otherArgsProxy", args]);
        else if (typeof args === "object") {
          for (const key in args) {
            await w2.run("setValue", [key, args[key]]);
          }
        }
        return true;
      };
      s.terminate = () => {
        w2.terminate();
        if (s.source?.worker && typeof s.sub === "number") {
          s.source.post("unsubscribe", s.sub);
        }
        if (s.pipeTo?.worker) {
          s.pipeTo.worker.terminate();
        }
      };
      if (s.callback)
        w2.subscribe(s.route, (res) => {
          if (typeof s.callback === "string")
            this.__node.graph.run(s.callback, res);
          else
            s.callback(res);
        });
    }
    return subprocesses;
  }, "addSubprocessTemplate": function subprocesstempalte3(name3, structs2, oncreate2, ondata2, props2) {
    if (typeof oncreate2 === "string")
      oncreate2 = parseFunctionFromText4(oncreate2);
    if (typeof ondata2 === "string")
      ondata2 = parseFunctionFromText4(ondata2);
    if (typeof ondata2 === "function") {
      algorithms3[name3] = { ondata: ondata2, oncreate: typeof oncreate2 === "function" ? oncreate2 : null, structs: structs2 };
      if (typeof props2 === "object")
        Object.assign(algorithms3[name3], props2);
      return true;
    }
  }, "updateSubprocess": function updatesubprocess3(structs2, _id) {
    if (!this.__node.graph.ALGORITHMS)
      this.__node.graph.ALGORITHMS = {};
    if (!_id)
      _id = Object.keys(this.__node.graph.ALGORITHMS)[0];
    if (!_id)
      return;
    Object.assign(this.__node.graph.ALGORITHMS[_id], structs2);
  }, "createSubprocess": function creatsubprocess3(options, inputs) {
    if (!this.__node.graph.ALGORITHMS)
      this.__node.graph.ALGORITHMS = {};
    if (typeof options === "string") {
      options = algorithms3[options];
    }
    if (typeof options === "object") {
      if (typeof options.ondata === "string")
        options.ondata = parseFunctionFromText4(options.ondata);
      let ctx;
      if (typeof options?.ondata === "function")
        ctx = createSubprocess3(options, inputs);
      if (ctx)
        this.__node.graph.ALGORITHMS[ctx._id] = ctx;
      if (ctx)
        return ctx._id;
    }
    return false;
  }, "runSubprocess": function runsubprocess3(data, _id) {
    if (!this.__node.graph.ALGORITHMS)
      this.__node.graph.ALGORITHMS = {};
    if (!_id)
      _id = Object.keys(this.__node.graph.ALGORITHMS)[0];
    if (!_id)
      return;
    let res = this.__node.graph.ALGORITHMS[_id].run(data);
    if (res !== void 0) {
      if (Array.isArray(res)) {
        let pass = [];
        res.forEach((r) => {
          if (r !== void 0) {
            pass.push(r);
            this.__node.graph.setState({ [_id]: r });
          }
        });
        if (pass.length > 0) {
          return pass;
        }
      } else {
        this.__node.graph.setState({ [_id]: res });
        return res;
      }
    }
  } };
  var __defProp23 = Object.defineProperty;
  var __defNormalProp = (obj, key, value) => key in obj ? __defProp23(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
  var __publicField = (obj, key, value) => {
    __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
    return value;
  };
  var _Math2 = class {
    constructor() {
    }
    static genSineWave(freq = 20, peakAmp = 1, nSec = 1, fs3 = 512, freq2 = 0, peakAmp2 = 1) {
      var sineWave = [];
      var t3 = [];
      var increment = 1 / fs3;
      for (var ti = 0; ti < nSec; ti += increment) {
        var amplitude = Math.sin(2 * Math.PI * freq * ti) * peakAmp;
        amplitude += Math.sin(2 * Math.PI * freq2 * ti) * peakAmp2;
        sineWave.push(amplitude);
        t3.push(ti);
      }
      return [t3, sineWave];
    }
    static getSineAmplitude(frequency = 20, peakAmplitude = 1, ti = 0, tOffset = 0) {
      return Math.sin(this.TWO_PI * frequency * ti + tOffset) * peakAmplitude;
    }
    static mean(arr) {
      var sum = arr.reduce((prev, curr) => curr += prev);
      return sum / arr.length;
    }
    static mode(arr) {
      return arr.sort((a, b2) => arr.filter((v2) => v2 === a).length - arr.filter((v2) => v2 === b2).length).pop();
    }
    static std(arr, mean2 = void 0) {
      let avg = mean2;
      if (!mean2)
        avg = this.mean(arr);
      let summed = 0;
      for (let i = 0; i < arr.length; i++) {
        let subbed = arr[i] - avg;
        summed += subbed * subbed;
      }
      return Math.sqrt(summed / arr.length);
    }
    static relError(actual = [], forecast = [], abs = true) {
      if (actual.length !== forecast.length)
        throw new Error("Input arrays of same length!");
      let i = actual.length;
      let d2 = new Array(actual.length);
      for (let j = 0; j < i; j++) {
        let dd = (actual[j] - forecast[j]) / actual[j];
        if (abs)
          dd = Math.abs(dd);
        d2[j] = dd;
      }
      return d2;
    }
    static informationEntropy(probabilities = []) {
      let len = probabilities.length;
      let entropy = new Array(len);
      for (let i = 0; i < len; i++) {
        let ent = probabilities[i] * Math.log(probabilities[i]);
        if (isNaN(ent))
          ent = 0;
        entropy[i] = ent;
      }
      return entropy;
    }
    static zscore(arr) {
      let mean2 = this.mean(arr);
      let std = this.std(arr, mean2);
      let z3 = new Array().length(arr.length);
      for (let i = 0; i < arr.length; i++) {
        z3[i] = (arr[i] - mean2) / std;
      }
      return z3;
    }
    static variance(arr) {
      var mean2 = this.mean(arr);
      return arr.reduce((a, b2) => a + (b2 - mean2) ** 2, 0) / arr.length;
    }
    static dot(vec1, vec2) {
      var dot = 0;
      for (var i = 0; i < vec1.length; i++) {
        dot += vec1[i] * vec2[i];
      }
      return dot;
    }
    static cross3D(vec1, vec2) {
      return [vec1[1] * vec2[2] - vec1[2] * vec2[1], vec1[2] * vec2[0] - vec1[0] * vec2[2], vec1[0] * vec2[1] - vec1[1] * vec2[0]];
    }
    static magnitude(vec) {
      var sqrd = 0;
      vec.forEach((c) => {
        sqrd += c * c;
      });
      return Math.sqrt(sqrd);
    }
    static distance(point1, point2) {
      var dsqrd = 0;
      point1.forEach((c, i) => {
        dsqrd += (point2[i] - c) * (point2[i] - c);
      });
      return Math.sqrt(dsqrd);
    }
    static midpoint(point1 = [1, 2, 3], point2 = [3, 4, 5]) {
      return point1.map((c, i) => {
        return (c + point2[i]) * 0.5;
      });
    }
    static normalize(vec) {
      var norm = 0;
      norm = this.magnitude(vec);
      var vecn = new Array(vec.length);
      vec.forEach((c, i) => {
        vecn[i] = c * norm;
      });
      return vecn;
    }
    static normalizeSeries(arr = [], fromZero = true) {
      let max = Math.max(...arr);
      let min = Math.min(...arr);
      if (fromZero == false) {
        max = Math.max(max, Math.abs(min));
        min = 0;
      }
      if (max - min === 0) {
        min = 0;
        if (max === 0)
          max = 1e-13;
      }
      return arr.map((v2) => (v2 - min) / (max - min));
    }
    static quadraticFormula(a, b2, c) {
      let bbmac4 = Math.sqrt(b2 * b2 - 4 * a * c);
      if (!isNaN(bbmac4))
        return ["complex", "complex"];
      let _a2 = 1 / (2 * a);
      if (bbmac4 === 0)
        return [b2 * _a2];
      let nb = -b2;
      return [(nb + bbmac4) * _a2, (nb - bbmac4) * _a2];
    }
    static newtonsMethod(foo = (x22) => {
      return Math.pow(x22, 5) + x22 * x22 - x22 - 0.2;
    }, start = 0, end = 1, precision = 0.01, attempts = 10) {
      let roots = [];
      for (let i = 0; i < attempts; i++) {
        let seedx = Math.random() * (end - start);
        let guess = foo(seedx);
        let guess2 = foo(seedx + precision);
        let slope = (guess2 - guess) / precision;
        let xn = seedx + precision;
        while (Math.abs(slope) > precision) {
          let step = -guess / slope2;
          let xn12 = xn + step;
          guess = guess2;
          guess2 = foo(xn12);
          let slope2 = (guess2 - guess) / (xn12 - xn);
        }
        let idx;
        let f = roots.find((root, i2) => {
          if (Math.abs(xn1 - root) < precision) {
            idx = i2;
            return true;
          }
        });
        if (f)
          roots[idx] = (xn1 + f) * 0.5;
        else
          roots.push(xn1);
      }
      return roots;
    }
    static makeVec(point1, point2) {
      var vec = [];
      point1.forEach((c, i) => {
        vec.push(point2[i] - c);
      });
      return vec;
    }
    static getBufferedValueByCoordinates(vb = new Array(300).fill(1), dims = [10, 10, 2], coordinate = [1, 2, 1], cardinal = void 0) {
      let getIdx = (foundIdx = 0, dimIdx = 0) => {
        if (dimIdx === dims.length)
          return foundIdx;
        if (dimIdx == 0)
          foundIdx += coordinate[dimIdx];
        else if (dims[dimIdx] == 0)
          dimsAt0++;
        else {
          let reMul = (val = coordinate[dimIdx], di = dimIdx - 1) => {
            val *= dims[di];
            di--;
            if (di == 0)
              return val;
            else
              return reMul(val, di);
          };
          foundIdx += reMul(coordinate[dimIdx] + 1, dimIdx - 1);
        }
        dimIdx++;
        return getIdx(foundIdx, dimIdx);
      };
      let found = getIdx();
      if (cardinal) {
        if (coordinate[coordinate.length - 1] === 0) {
          let lastnonzero = 0;
          let idx = 0;
          while (idx !== coordinate.length - 1) {
            if (coordinate[idx] !== 0)
              lastnonzero = idx;
            idx++;
          }
          return vb[found - lastnonzero + cardinal];
        }
        return vb[found - dims.length + cardinal];
      } else {
        if (coordinate[coordinate.length - 1] === 0) {
          let lastnonzero = 0;
          let idx = 0;
          while (idx !== coordinate.length - 1) {
            if (coordinate[idx] !== 0)
              lastnonzero = idx;
            idx++;
          }
          return vb.slice(found - lastnonzero, found + 1);
        }
        return vb.slice(found - dims.length, found + 1);
      }
    }
    static forBufferedMat(vb = new Array(100).fill(1), dims = [10, 10], asIndex = (v2, i, x22, y22) => {
      return v2 + x22 + y22;
    }) {
      let coordinate = [];
      let idx = 0;
      let recurseFor = (depth = 0, nextDepth = depth + 1) => {
        let result = new Array(vb.length);
        for (let di = 0; di < dims[depth]; di++) {
          coordinate[depth] = di;
          if (dims[nextDepth])
            recurseFor(nextDepth);
          else {
            result[idx] = asIndex(vb[idx], idx, ...coordinate);
            idx++;
          }
        }
        return result;
      };
      let recurseForArrFuncs = (depth, nextDepth = depth + 1) => {
        let result = new Array(vb.length);
        for (let di = 0; di < dims[depth]; di++) {
          coordinate[depth] = di;
          if (dims[nextDepth])
            recurseFor(nextDepth);
          else {
            for (let dj = 0; dj < dims.length; dj++) {
              result[idx] = asIndex[dj](vb[idx], idx, ...coordinate);
              idx++;
            }
          }
        }
        return result;
      };
      if (typeof asIndex === "function") {
        return recurseFor();
      } else if (Array.isArray(asIndex)) {
        return recurseForArrFuncs();
      }
    }
    static mapBufferedMat(buffer = new Array(100).fill(1), dimensions = [10, 10], asIndex = (v2, idx, i, j) => {
      console.log(`value:${v2}, idx:${idx}, x:${i},y:${j}`);
      return v2 + i + j;
    }) {
      let coordinate = new Array(dimensions.length).fill(0);
      const iterateCoordinate = (coord, idx = 0) => {
        if (coord[idx] >= dimensions[idx]) {
          coord[idx] = 0;
          idx++;
          if (idx === dimensions.length)
            return;
          iterateCoordinate(coord, idx);
        } else
          coord[idx]++;
      };
      let result = new Array(buffer.length);
      let i = 0;
      if (typeof asIndex === "function") {
        while (i < buffer.length) {
          result[i] = asIndex(buffer[i], i, ...coordinate);
          i += dimensions.length;
          iterateCoordinate(coordinate);
        }
      } else if (Array.isArray(asIndex)) {
        while (i < buffer.length) {
          asIndex.forEach((func) => {
            result[i] = func(buffer[i], i, ...coordinate);
            i++;
            iterateCoordinate(coordinate);
          });
        }
      }
      return result;
    }
    static combinations(choices = ["a", "b", "c"], vecsize = 3) {
      var result = [];
      if (vecsize <= 0) {
        result.push([]);
      } else {
        _Math2.combinations(choices, vecsize - 1).forEach(function(previousComb) {
          choices.forEach(function(element) {
            result.push([element].concat(previousComb));
          });
        });
      }
      return result;
    }
    static generateCoordinateSpace(upperBounds = [10, 10, 10], lowerBounds = [-10, -10, -10], steps = [1, 1, 1], mutater = void 0) {
      for (let i = 0; i < upperBounds.length; i++) {
        if (lowerBounds[i] > upperBounds[i]) {
          let temp = upperBounds[i];
          upperBounds[i] = lowerBounds[i];
          lowerBounds[i] = temp;
        }
      }
      let result = [];
      let copy = [...upperBounds];
      let lastindex = copy.length - 1;
      result.push([...copy]);
      while (copy[0] >= lowerBounds[0]) {
        let checkNextIndex = (decrIdx2) => {
          if (copy[decrIdx2] <= lowerBounds[decrIdx2]) {
            if (decrIdx2 === 0)
              return;
            copy[decrIdx2] = upperBounds[decrIdx2];
            decrIdx2--;
            if (decrIdx2 < 0)
              return;
            if (typeof steps[decrIdx2] == "function")
              copy[decrIdx2] -= steps[decrIdx2](copy[decrIdx2]);
            else
              copy[decrIdx2] -= steps[decrIdx2];
            checkNextIndex(decrIdx2);
          }
        };
        let decrIdx = lastindex;
        if (typeof steps[decrIdx] == "function")
          copy[decrIdx] -= steps[decrIdx](copy[decrIdx]);
        else
          copy[decrIdx] -= steps[decrIdx];
        result.push([...copy]);
        checkNextIndex(decrIdx);
        if (mutater)
          result[result.length - 1] = mutater(result[result.length - 1]);
      }
      return result;
    }
    static calcVectorField(coordinates = [[0, 0], [0, 1], [1, 0], [1, 1]], formula = (x22, y22) => {
      return [x22 * 10, y22 * 10];
    }) {
      return coordinates.map((vec) => formula(...vec));
    }
    static transpose(mat) {
      return mat[0].map((_2, colIndex) => mat.map((row) => row[colIndex]));
    }
    static matmul(a, b2) {
      var aNumRows = a.length, aNumCols = a[0].length, bNumRows = b2.length, bNumCols = b2[0].length, m = new Array(aNumRows);
      for (var r = 0; r < aNumRows; ++r) {
        m[r] = new Array(bNumCols);
        for (var c = 0; c < bNumCols; ++c) {
          m[r][c] = 0;
          for (var i = 0; i < aNumCols; ++i) {
            m[r][c] += a[r][i] * b2[i][c];
          }
        }
      }
      return m;
    }
    static matscale(mat, scalar) {
      let m = [];
      for (var i = 0; i < mat.length; i++) {
        m[i] = [];
        for (let j = 0; j < mat[0].length; j++) {
          m[i][j] = mat[i][j] * scalar;
        }
      }
      return m;
    }
    static matadd(a, b2) {
      let m = [];
      for (let i = 0; i < a.length; i++) {
        m[i] = [];
        for (var j = 0; j < a[0].length; j++) {
          m[i][j] = a[i][j] + b2[i][j];
        }
      }
      return m;
    }
    static matsub(a, b2) {
      let m = [];
      for (let i = 0; i < a.length; i++) {
        m[i] = [];
        for (var j = 0; j < a[0].length; j++) {
          m[i][j] = a[i][j] - b2[i][j];
        }
      }
      return m;
    }
    static histogram(arr = [], binSize = 1, nBins = void 0) {
      let copy = [...arr];
      copy.sort(function(a, b2) {
        return a - b2;
      });
      let binStart = Math.min(...copy);
      if (typeof nBins === "number") {
        let binEnd = Math.max(...copy);
        binSize = Math.abs((binEnd - binStart) / (nBins - 1));
      }
      let j = binStart;
      let binx = [];
      let biny = [];
      for (let i = 0; i < copy.length; i++) {
        let binidx = binSize * j;
        if (copy[i] > binStart + binidx) {
          j++;
          binidx += binSize;
          let binmin = binStart + binidx;
          let binmid = binmin + binidx * 0.5;
          binx.push(binmid);
          biny.push(0);
        }
        biny[biny.length - 1]++;
      }
      return [binx, biny];
    }
    static normalDistribution(samples = [], normalize = true, cutoff = 1e-4) {
      let m = this.mean(samples);
      let vari = this.variance(samples);
      let nSamples = samples.length;
      let probabilities = [];
      let denom = 1 / (this.TWO_PI * vari);
      let _variance = 1 / vari;
      let sum = 0;
      for (let i = 0; i < nSamples; i++) {
        let px = Math.exp(-0.5 * Math.pow((samples[i] - m) * _variance, 2)) * denom;
        if (px < cutoff)
          px = 0;
        probabilities.push(px);
        sum += px;
      }
      if (normalize) {
        let _sum = 1 / sum;
        probabilities = probabilities.map((x22) => x22 * _sum);
      }
      return probabilities;
    }
    static expectedValue(samples = [], probabilities = this.normalDistribution(samples)) {
      return samples.reduce((sum, item, idx) => sum + item * probabilities[idx]);
    }
    static originMoment(samples = [], probabilities = this.normalDistribution(samples), order = 1) {
      return samples.reduce((sum, item, idx) => sum + Math.pow(item, order) * probabilities[idx]);
    }
    static centralMoment(samples = [], probabilities = this.normalDistribution(samples), order = 1) {
      let m = this.mean(samples);
      return samples.reduce((sum, item, idx) => sum + Math.pow(item - m, order) * probabilities[idx] / samples.length);
    }
    static linearDiscriminantAnalysis(samples = [], classifier = []) {
      let mean2 = this.mean(samples);
      let meank = this.mean(classifier);
      let covariance = this.cov1d(samples, classifier);
      let probs = this.normalDistribution(samples);
      let dk = [];
      for (let i = 0; i < samples.length; i++) {
        dk.push(x[i] * covariance * meank - 0.5 * mean2 * covariance * meank + Math.log10(probs[i]));
      }
      return dk;
    }
    static conv1D(arr = [], kern = [1 / 3, 1 / 3, 1 / 3], pad = Math.floor(kern.length * 0.5)) {
      let result = [];
      let _n = 1 / kern.length;
      if (pad > 0) {
        let pads = new Array(pad).fill(0);
        arr = [...pads, ...arr, ...pads];
      }
      let start = Math.floor(kern.length * 0.5);
      let end = arr.length - kern.length + start;
      for (let i = start; i < end; i++) {
        let acc = 0;
        for (let j = 0; j < kern.length; j++) {
          acc += arr[i - start] * kern[j];
        }
        result.push(acc * _n);
      }
      return result;
    }
    static conv2D(mat = [[], [], []], kern = [[], [], []], pad = 0) {
      let result = new Array(mat.length - Math.ceil(kern.length * 0.5)).fill([]);
      let mat_t;
      let kern_t = _Math2.transpose(kern_t);
      if (pad > 0) {
        let pads = new Array(pad).fill(0);
        mat_t = _Math2.transpose(mat);
        for (let i2 = 0; i2 < mat_t.length; i2++) {
          mat_t[i2] = [...pads, ...mat_t[i2], ...pads];
        }
        mat = _Math2.transpose(mat_t);
        for (let j = 0; j < mat.length; j++) {
          mat[j] = [...pads, ...mat[j], ...pads];
        }
      }
      let startr = Math.floor(kern[0].length * 0.5);
      let startl = Math.floor(kern_t[0].length * 0.5);
      let endr = mat[0].length - kern[0].length + startr;
      let endl = mat_t[0].length - kern_t[0].length + startl;
      let _n = 1 / (kern[0].length * kern_t[0].length);
      let iters = endr * endl;
      let i = startr;
      let x22;
      let y22 = startl;
      while (i < iters) {
        let acc = 0;
        x22 = i % mat[0].length;
        if (x22 === 0) {
          y22++;
        }
        for (let j = 0; j < kern[0].length; j++) {
          for (let k = 0; k < kern_t[0].length; j++) {
            acc += mat[y22 - startl + k][x22 - startr + j] * kern[k][j];
          }
          result[y22].push(acc * _n);
        }
        i++;
      }
      return result;
    }
    static cov2d(mat) {
      var mattransposed = this.transpose(mat);
      var matproducts = [];
      var rowmeans = [];
      var colmeans = [];
      mat.forEach((row, idx) => {
        rowmeans.push(this.mean(row));
      });
      mattransposed.forEach((col, idx) => {
        colmeans.push(this.mean(col));
      });
      mat.forEach((row, idx) => {
        matproducts.push([]);
        for (var col = 0; col < row.length; col++) {
          matproducts[idx].push((mat[idx][col] - rowmeans[idx]) * (mat[idx][col] - colmeans[col]) / (row.length - 1));
        }
      });
      var matproductstransposed = this.transpose(matproducts);
      var aNumRows = matproducts.length, aNumCols = matproducts[0].length, bNumRows = matproductstransposed.length, bNumCols = matproductstransposed[0].length, m = new Array(aNumRows);
      for (var r = 0; r < aNumRows; ++r) {
        m[r] = new Array(bNumCols);
        for (var c = 0; c < bNumCols; ++c) {
          m[r][c] = 0;
          for (var i = 0; i < aNumCols; ++i) {
            m[r][c] += matproducts[r][i] * matproductstransposed[i][c] / (mat[0].length - 1);
          }
        }
      }
      return m;
    }
    static cov1d(arr1 = [], arr2 = []) {
      return this.cov2d([arr1, arr2]);
    }
    static cov3d(x22 = [], y22 = [], z3 = []) {
      return [[this.cov1d(x22, x22), this.cov1d(x22, y22), this.cov1d(x22, z3)], [this.cov1d(y22, x22), this.cov1d(y22, y22), this.cov1d(y22, z3)], [this.cov1d(z3, x22), this.cov1d(z3, y22), this.cov1d(z3, z3)]];
    }
    static covNd(dimensionalData = []) {
      let covariance = [];
      dimensionalData.forEach((arr, i) => {
        covariance.push([]);
        dimensionalData.forEach((arr2, j) => {
          covariance[i].push(this.cov1d(arr, arr2));
        });
      });
    }
    static eigens2x2(mat = [[1, 2], [3, 4]]) {
      let det = mat[0][0] * mat[1][1] - mat[0][1] * mat[1][0];
      let mean2 = (mat[0][0] + mat[1][1]) * 0.5;
      let sqrt = Math.sqrt(mean2 * mean2 - det);
      let eig1 = mean2 + sqrt;
      let eig2 = mean2 - sqrt;
      return [eig1, eig2];
    }
    static eigenvectors2x2(mat = [[1, 2], [3, 4]], eigens = [1, 2]) {
      let v1 = [-mat[0][1], mat[0][0] - eigens[0]];
      if (v1[0] === 0 && v1[1] === 0) {
        v1[0] = mat[1][1] - eigens[0];
        v1[1] = -mat[1][0];
      }
      let v2 = [-mat[0][1], mat[0][0] - eigens[1]];
      if (v2[0] === 0 && v2[1] === 0) {
        v2[0] = mat[1][1] - eigens[1];
        v2[1] = -mat[1][0];
      }
      return [v1, v2];
    }
    static fastpca2d(xarr, yarr) {
      let cov1d = this.cov1d(xarr, yarr);
      let eigs = this.eigens2x2(cov1d);
      if (eigs[1] > eigs[0])
        eigs.reverse();
      let evs = this.eigenvectors2x2(cov1d, eigs);
      console.log(eigs, evs);
      return [eigs, evs];
    }
    static crosscorrelation(arr1, arr2) {
      var arr2buf = [...arr2, ...Array(arr2.length).fill(0)];
      var mean1 = this.mean(arr1);
      var mean2 = this.mean(arr2);
      var arr1Est = arr1.reduce((sum, item) => sum += Math.pow(item - mean1, 2));
      arr1Est = Math.sqrt(Math.abs(arr1Est));
      var arr2Est2 = arr2.reduce((sum, item) => sum += Math.pow(item - mean1, 2));
      arr2Est2 = Math.sqrt(Math.abs(arr2Est2));
      let denom = arr1Est * arr2Est2;
      if (denom === 0)
        denom = 1e-26;
      var _arrEstsMul = 1 / denom;
      var correlations = new Array(arr1.length).fill(0);
      for (var delay = 0; delay < arr1.length; delay++) {
        var r = arr1.reduce((sum, item, i) => sum += (item - mean1) * (arr2buf[delay + i] - mean2));
        correlations[delay] = r * _arrEstsMul;
      }
      return correlations;
    }
    static autocorrelation(arr1) {
      var delaybuf = [...arr1, ...Array(arr1.length).fill(0)];
      var mean1 = this.mean(arr1);
      var arr1Est = arr1.reduce((sum, item) => sum += Math.pow(item - mean1, 2));
      arr1Est = Math.sqrt(Math.abs(arr1Est));
      let denom = arr1Est * arr2Est;
      if (denom === 0)
        denom = 1e-26;
      var _arr1estsqrd = 1 / denom;
      var correlations = new Array(arr1.length).fill(0);
      for (var delay = 0; delay < arr1.length; delay++) {
        var r = arr1.reduce((sum, item, i) => sum += (item - mean1) * (delaybuf[delay + i] - mean1));
        correlations[delay] = r * _arr1estsqrd;
      }
      return correlations;
    }
    static autocorrelation2dNormalized(mat2d2) {
      let result = [];
      for (let y22 = 0; y22 < mat2d2.length; y22++) {
        result.push([]);
        for (let x22 = 0; x22 < mat2d2[y22].length; x22++) {
          let G3 = 0;
          let _G = 0;
          for (let b2 = 0; b2 < mat2d2.length; b2++) {
            for (let a = 0; a < mat2d2[b2].length; a++) {
              G3 += mat2d2[y22][x22] * mat2d2[mat2d2.length - 1 - b2][mat2d2[y22].length - 1 - a];
              _G += mat2d2[y22][x22] * mat2d2[mat2d2.length - 1][mat2d2[y22].length - 1];
            }
          }
          result[y22][x22] = G3 / _G - 1;
        }
      }
      return result;
    }
    static crosscorrelation2d(mat2d1, mat2d2) {
      let result = [];
      for (let y22 = 0; y22 < mat2d1.length; y22++) {
        result.push([]);
        for (let x22 = 0; x22 < mat2d1[y22].length; x22++) {
          let G3 = 0;
          for (let b2 = 0; b2 < mat2d2.length; b2++) {
            for (let a = 0; a < mat2d2[b2].length; a++) {
              G3 += mat2d1[y22][x22] * mat2d2[mat2d2.length - 1 - b2][mat2d2[y22].length - 1 - a];
            }
          }
          result[y22][x22] = G3;
        }
      }
      return result;
    }
    static crosscorrelation2dNormalized(mat2d1, mat2d2) {
      let result = [];
      for (let y22 = 0; y22 < mat2d1.length; y22++) {
        result.push([]);
        for (let x22 = 0; x22 < mat2d1[y22].length; x22++) {
          let G3 = 0;
          let _G = 0;
          for (let b2 = 0; b2 < mat2d2.length; b2++) {
            for (let a = 0; a < mat2d2[b2].length; a++) {
              G3 += mat2d1[y22][x22] * mat2d2[mat2d.length - 1 - b2][mat2d2[y22].length - 1 - a];
              _G += mat2d1[y22][x22] * mat2d2[mat2d2.length - 1][mat2d2[y22].length - 1];
            }
          }
          result[y22][x22] = G3 / _G - 1;
        }
      }
      return result;
    }
    static correlograms(dat = [[], []]) {
      var correlograms = [];
      dat.forEach((row1, i) => {
        dat.forEach((row2, j) => {
          if (j >= i) {
            correlograms.push(_Math2.crosscorrelation(row1, row2));
          }
        });
      });
      return correlograms;
    }
    static dft(sineWave = []) {
      var TWOPI = 2 * 3.141592653589793;
      var real = [];
      var imag = [];
      var mags = [];
      for (var k = 0; k < sineWave.length; k++) {
        real.push(0);
        imag.push(0);
        for (var j = 0; j < sineWave.length; j++) {
          var shared = TWOPI * k * j / sineWave.length;
          real[k] = real[k] + sineWave[j] * Math.cos(shared);
          imag[k] = imag[k] - sineWave[j] * Math.sin(shared);
        }
        mags.push(Math.sqrt(real[k] * real[k] + imag[k] * imag[k]));
      }
      function orderMagnitudes(unorderedMags) {
        return [...unorderedMags.slice(Math.ceil(unorderedMags.length * 0.5), unorderedMags.length), ...unorderedMags.slice(0, Math.ceil(unorderedMags.length * 0.5))];
      }
      mags = orderMagnitudes(mags);
      let halflen = mags.length * 0.5;
      let freqs = mags.map((m, i) => {
        return i - halflen;
      });
      return { real, imag, freqs, mags };
    }
    static sma(arr = [], window2) {
      var smaArr = [];
      for (var i = 0; i < arr.length; i++) {
        if (i == 0) {
          smaArr.push(arr[0]);
        } else if (i < window2) {
          var arrslice = arr.slice(0, i + 1);
          smaArr.push(arrslice.reduce((previous, current) => current += previous) / (i + 1));
        } else {
          var arrslice = arr.slice(i - window2, i);
          smaArr.push(arrslice.reduce((previous, current) => current += previous) / window2);
        }
      }
      return smaArr;
    }
    static sum(arr = []) {
      if (arr.length > 0) {
        var sum = arr.reduce((prev, curr) => curr += prev);
        return sum;
      } else {
        return 0;
      }
    }
    static reduceArrByFactor(arr, factor = 2) {
      let x22 = arr.filter((element, index) => {
        return index % factor === 0;
      });
      return x22;
    }
    static makeArr(startValue, stopValue, nSteps) {
      var arr = [];
      var step = (stopValue - startValue) / (nSteps - 1);
      for (var i = 0; i < nSteps; i++) {
        arr.push(startValue + step * i);
      }
      return arr;
    }
    static autoscale(array, stackedLines = 1, stackPosition = 0, centerZero = false) {
      if (array?.length === 0)
        return array;
      let max = Math.max(...array);
      let min = Math.min(...array);
      let _lines = 1 / stackedLines;
      let scalar;
      if (centerZero) {
        let absmax = Math.max(Math.abs(min), Math.abs(max));
        scalar = _lines / absmax;
        return array.map((y22) => y22 * scalar + (_lines * (stackPosition + 1) * 2 - 1 - _lines));
      } else {
        scalar = _lines / (max - min);
        return array.map((y22) => 2 * ((y22 - min) * scalar - 1 / (2 * stackedLines)) + (_lines * (stackPosition + 1) * 2 - 1 - _lines));
      }
    }
    static absmax(array) {
      return Math.max(Math.abs(Math.min(...array)), Math.max(...array));
    }
    static downsample(array, fitCount, scalar = 1) {
      if (array.length > fitCount) {
        let output = new Array(fitCount);
        let incr = array.length / fitCount;
        let lastIdx = array.length - 1;
        let last = 0;
        let counter = 0;
        for (let i = incr; i < array.length; i += incr) {
          let rounded = Math.round(i);
          if (rounded > lastIdx)
            rounded = lastIdx;
          for (let j = last; j < rounded; j++) {
            output[counter] += array[j];
          }
          output[counter] /= (rounded - last) * scalar;
          counter++;
          last = rounded;
        }
        return output;
      } else
        return array;
    }
    static interpolateArray(data, fitCount, scalar = 1) {
      var linearInterpolate = function(before2, after2, atPoint2) {
        return (before2 + (after2 - before2) * atPoint2) * scalar;
      };
      var newData = new Array();
      var springFactor = (data.length - 1) / (fitCount - 1);
      newData[0] = data[0];
      for (var i = 1; i < fitCount - 1; i++) {
        var tmp = i * springFactor;
        var before = Math.floor(tmp);
        var after = Math.ceil(tmp);
        var atPoint = tmp - before;
        newData[i] = linearInterpolate(data[before], data[after], atPoint);
      }
      newData[fitCount - 1] = data[data.length - 1];
      return newData;
    }
    static isExtrema(arr, critical = "peak") {
      let ref = [...arr];
      if (ref.length % 2 === 0)
        ref.pop();
      if (arr.length > 1) {
        let pass = true;
        for (let i = 0; i < ref.length; i++) {
          let val = ref[i];
          if (critical === "peak") {
            if (i < Math.floor(ref.length * 0.5) && val >= ref[Math.floor(ref.length * 0.5)]) {
              pass = false;
              break;
            } else if (i > Math.floor(ref.length * 0.5) && val >= ref[Math.floor(ref.length * 0.5)]) {
              pass = false;
              break;
            }
          } else if (critical === "valley") {
            if (i < Math.floor(ref.length * 0.5) && val <= ref[Math.floor(ref.length * 0.5)]) {
              pass = false;
              break;
            } else if (i > Math.floor(ref.length * 0.5) && val <= ref[Math.floor(ref.length * 0.5)]) {
              pass = false;
              break;
            }
          } else {
            if (i < Math.floor(ref.length * 0.5) && val <= ref[Math.floor(ref.length * 0.5)]) {
              pass = false;
              break;
            } else if (i > Math.floor(ref.length * 0.5) && val <= ref[Math.floor(ref.length * 0.5)]) {
              pass = false;
              break;
            }
          }
        }
        if (critical !== "peak" && critical !== "valley" && pass === false) {
          pass = true;
          for (let i = 0; i < ref.length; i++) {
            let val = ref[i];
            if (i < Math.floor(ref.length * 0.5) && val >= ref[Math.floor(ref.length * 0.5)]) {
              pass = false;
              break;
            } else if (i > Math.floor(ref.length * 0.5) && val >= ref[Math.floor(ref.length * 0.5)]) {
              pass = false;
              break;
            }
          }
        }
        return pass;
      } else
        return void 0;
    }
    static isCriticalPoint(arr, critical = "peak") {
      let ref = [...arr];
      if (ref.length % 2 === 0)
        ref.pop();
      if (arr.length > 1) {
        let pass = true;
        for (let i = 0; i < ref.length; i++) {
          let val = ref[i];
          if (critical === "peak") {
            if (i < ref.length * 0.5 && val <= 0) {
              pass = false;
              break;
            } else if (i > ref.length * 0.5 && val > 0) {
              pass = false;
              break;
            }
          } else if (critical === "valley") {
            if (i < ref.length * 0.5 && val >= 0) {
              pass = false;
              break;
            } else if (i > ref.length * 0.5 && val < 0) {
              pass = false;
              break;
            }
          } else {
            if (i < ref.length * 0.5 && val >= 0) {
              pass = false;
              break;
            } else if (i > ref.length * 0.5 && val < 0) {
              pass = false;
              break;
            }
          }
        }
        if (critical !== "peak" && critical !== "valley" && pass === false) {
          pass = true;
          for (let i = 0; i < ref.length; i++) {
            let val = ref[i];
            if (i < ref.length * 0.5 && val <= 0) {
              pass = false;
              break;
            } else if (i > ref.length * 0.5 && val > 0) {
              pass = false;
              break;
            }
          }
        }
        return pass;
      } else
        return void 0;
    }
    static getPeakThreshold(arr, peakIndices, thresholdVar) {
      let threshold;
      let filtered = arr.filter((o, i) => {
        if (peakIndices.indexOf(i) > -1)
          return true;
      });
      if (thresholdVar === 0) {
        threshold = this.mean(filtered);
      } else
        threshold = (thresholdVar + this.mean(filtered)) * 0.5;
      return threshold;
    }
    static column(mat, x22) {
      let col = new Array(mat.length).fill(0).map(() => new Array(1).fill(0));
      for (let i = 0; i < mat.length; i++) {
        col[i][0] = mat[i][x22];
      }
      return col;
    }
    static flatten_vector(v2) {
      let v_new = [];
      for (let i = 0; i < v2.length; i++) {
        v_new[i] = v2[i][0];
      }
      return v_new;
    }
    static squared_difference(v1, v2) {
      let sum = 0;
      for (let i = 0; i < v1.length; i++) {
        sum = sum + Math.pow(v1[i] - v2[i], 2);
      }
      return sum;
    }
    static shift_deflate(mat, eigenvalue, eigenvector) {
      let len = Math.sqrt(this.matmul(this.transpose(eigenvector), eigenvector));
      let U = this.matscale(eigenvector, 1 / len);
      let delta = this.matscale(this.matmul(U, this.transpose(U)), eigenvalue);
      let M_new = this.matsub(mat, delta);
      return M_new;
    }
    static eigenvalue_of_vector(mat, eigenvector) {
      ev = this.matmul(this.matmul(this.transpose(eigenvector), mat), eigenvector);
      return ev;
    }
    static power_iteration(mat, tolerance = 1e-5, max_iterations = 1e3) {
      let rank = mat.length;
      let eigenvector = new Array(rank).fill(0).map(() => new Array(1).fill(Math.sqrt(rank)));
      let eigenvalue = this.eigenvalue_of_vector(mat, eigenvector);
      let epsilon = 1;
      let iter = 0;
      while (epsilon > tolerance && iter < max_iterations) {
        let old_eigenvalue = JSON.parse(JSON.stringify(eigenvalue));
        let Mv = this.matmul(mat, eigenvector);
        eigenvector = this.normalize(Mv);
        eigenvalue = this.eigenvalue_of_vector(mat, eigenvector);
        epsilon = Math.abs(eigenvalue - old_eigenvalue);
        iter++;
      }
      ;
      return [eigenvalue, eigenvector];
    }
    static eigens(mat, tolerance = 1e-4, max_iterations = 1e3) {
      let eigenvalues = [];
      let eigenvectors = [];
      for (let i = 0; i < mat.length; i++) {
        let result = this.power_iteration(mat, tolerance, max_iterations);
        let eigenvalue = result[0];
        let eigenvector = result[1];
        eigenvalues[i] = eigenvalue;
        eigenvectors[i] = this.flatten_vector(eigenvector);
        mat = this.shift_deflate(mat, eigenvalue, eigenvector);
      }
      return [eigenvalues, eigenvectors];
    }
    static pca(mat, tolerance = 1e-5) {
      let dims = mat.length;
      let t3 = new Array(dims);
      let p = new Array(dims);
      let mat_t = this.transpose(mat);
      t3[0] = this.column(mat, 0);
      let epsilon = 1;
      let iter = 0;
      while (espilon > tolerance) {
        iter++;
        p[0] = this.matmul(mat_t, t3[0]);
        let tp = this.matmul(this.transpose(t3[0]), t3[0]);
        p[0] = this.matscale(p[0], 1 / tp);
        let p_length = Math.sqrt(this.matmul(this.transpose(p[0]), p[0]));
        p[0] = this.matscale(p[0], 1 / p_length);
        let t_new = this.matmul(mat, p[0]);
        let pp = this.matmul(this.transpose(p[0]), p[0]);
        t_new = this.matscale(t_new, 1 / pp);
        epsilon = this.squared_difference(t3[0], t_new);
        t3[0] = JSON.parse(JSON.stringify(t_new));
      }
      let components = this.matmul(this.transpose(t3[0]), t3[0]);
      return components;
    }
    static circularBuffer(arr, newEntries) {
      if (Array.isArray(newEntries)) {
        if (newEntries.length < arr.length) {
          let slice = arr.slice(newEntries.length);
          let len = arr.length;
          arr.splice(0, len, ...slice, ...newEntries);
        } else if (newEntries.length > arr.length) {
          let len = arr.length;
          arr.splice(0, len, newEntries.slice(len - newEntries.length));
        } else {
          arr.splice(0, arr.length, ...newEntries);
        }
      } else {
        arr.push(newEntries);
        arr.shift();
      }
      return arr;
    }
    static HSLToRGB(h, s, l, scalar = 255) {
      s /= 100;
      l /= 100;
      let c = (1 - Math.abs(2 * l - 1)) * s, x22 = c * (1 - Math.abs(h / 60 % 2 - 1)), m = l - c / 2, r = 0, g = 0, b2 = 0;
      if (0 <= h && h < 60) {
        r = c;
        g = x22;
        b2 = 0;
      } else if (60 <= h && h < 120) {
        r = x22;
        g = c;
        b2 = 0;
      } else if (120 <= h && h < 180) {
        r = 0;
        g = c;
        b2 = x22;
      } else if (180 <= h && h < 240) {
        r = 0;
        g = x22;
        b2 = c;
      } else if (240 <= h && h < 300) {
        r = x22;
        g = 0;
        b2 = c;
      } else if (300 <= h && h < 360) {
        r = c;
        g = 0;
        b2 = x22;
      }
      r = (r + m) * scalar;
      g = (g + m) * scalar;
      b2 = (b2 + m) * scalar;
      return [r, g, b2];
    }
    static p300(event_timestamps = [], raw_signal = [], signal_timestamps = [], sps11 = 256) {
      let smoothingstep = Math.floor(sps11 / 10);
      let smoothed = this.sma(raw_signal, smoothingstep);
      let peaks = this.peakDetect(smoothed, "peak", smoothingstep);
      let mean2 = this.mean(smoothed);
      let std = this.std(smoothed, mean2);
      let p_idx = 0;
      let candidates = [];
      if (peaks.length > 0) {
        event_timestamps.forEach((t3, j) => {
          while (signal_timestamps[peaks[p_idx]] < t3 + 200) {
            p_idx++;
            if (!peaks[p_idx])
              break;
          }
          let tempi = 0;
          let tempcandidates = [];
          while (signal_timestamps[peaks[p_idx + tempi]] < t3 + 600) {
            tempcandidates.push(p_idx + tempi);
            tempi++;
            if (!peaks[p_idx + tempi])
              break;
          }
          if (tempcandidates.length > 1) {
            let peakvals = [];
            tempcandidates.forEach((tc) => {
              peakvals.push(smoothed[peaks[tc]]);
            });
            let max = Math.max(...peakvals);
            let maxi = tempcandidates[peakvals.indexOf(max)];
            candidates.push({ event_timestamp: t3, event_index: j, peak_timestamp: signal_timestamps[[peaks[maxi]]], signal_index: [peaks[maxi]], signal_amplitude: raw_signal[[peaks[maxi]]], zscore: (smoothed[peaks[maxi]] - mean2) / std });
          } else if (tempcandidates.length === 1)
            candidates.push({ event_timestamp: t3, event_index: j, peak_timestamp: signal_timestamps[peaks[tempcandidates[0]]], signal_index: peaks[tempcandidates[0]], signal_amplitude: raw_signal[[peaks[tempcandidates[0]]]], zscore: (smoothed[peaks[tempcandidates[0]]] - mean2) / std });
        });
      }
      return candidates;
    }
  };
  var Math2 = _Math2;
  __publicField(Math2, "TWO_PI", Math.PI * 2);
  __publicField(Math2, "C", 299792458);
  __publicField(Math2, "G", 66743e-15);
  __publicField(Math2, "h", 662607015e-42);
  __publicField(Math2, "R", 8314.32);
  __publicField(Math2, "Ra", 287);
  __publicField(Math2, "H", 69.3);
  __publicField(Math2, "kbar", 1054571817e-43);
  __publicField(Math2, "kB", 1380649e-29);
  __publicField(Math2, "ke", 89875517923e-1);
  __publicField(Math2, "me", 91093837015e-41);
  __publicField(Math2, "mp", 167262192369e-38);
  __publicField(Math2, "mn", 167492749804e-38);
  __publicField(Math2, "P0", 101325);
  __publicField(Math2, "T0", 288.15);
  __publicField(Math2, "p0", 1.225);
  __publicField(Math2, "Na", 60220978e16);
  __publicField(Math2, "y", 1.405);
  __publicField(Math2, "M0", 28.96643);
  __publicField(Math2, "g0", 9.80665);
  __publicField(Math2, "Re", 6378100);
  __publicField(Math2, "B", 1458e-9);
  __publicField(Math2, "S", 110.4);
  __publicField(Math2, "Sigma", 365e-12);
  __publicField(Math2, "imgkernels", { edgeDetection: [[-1, -1, -1], [-1, 8, -1], [-1, -1, -1]], boxBlur: [[1 / 9, 1 / 9, 1 / 9], [1 / 9, 1 / 9, 1 / 9], [1 / 9, 1 / 9, 1 / 9]], sobelLeft: [[1, 0, -1], [2, 0, -2], [1, 0, -1]], sobelRight: [[-1, 0, 1], [-2, 0, 2], [-1, 0, 1]], sobelTop: [[1, 2, 1], [0, 0, 0], [-1, -2, -1]], sobelBottom: [[-1, 2, 1], [0, 0, 0], [1, 2, 1]], identity: [[0, 0, 0], [0, 1, 0], [0, 0, 0]], gaussian3x3: [[1, 2, 1], [2, 4, 2], [1, 2, 1]], guassian7x7: [[0, 0, 0, 5, 0, 0, 0], [0, 5, 18, 32, 18, 5, 0], [0, 18, 64, 100, 64, 18, 0], [5, 32, 100, 100, 100, 32, 5], [0, 18, 64, 100, 64, 18, 0], [0, 5, 18, 32, 18, 5, 0], [0, 0, 0, 5, 0, 0, 0]], emboss: [[-2, -1, 0], [-1, 1, 1], [0, 1, 2]], sharpen: [[0, -1, 0], [-1, 5, -1], [0, -1, 0]] });
  __publicField(Math2, "integral", (func = (x22) => {
    let y22 = x22;
    return y22;
  }, range = [], stepx = 0.01) => {
    let area = 0;
    for (let i = range[0]; i < range[1]; i += stepx) {
      let y22 = func(i);
      area += y22 * stepx;
    }
    return area;
  });
  __publicField(Math2, "dintegral", (func = (x22, y22) => {
    let z3 = x22 + y22;
    return z3;
  }, range = [[], []], stepx = 0.01, stepy = stepx) => {
    let volume = 0;
    for (let i = range[0][0] + stepx; i < range[0][1]; i += stepx) {
      for (let j = range[1][0] + stepy; j < range[1][1]; j += stepy) {
        let z3 = func(i, j);
        volume += z3 * stepx * stepy;
      }
    }
    return volume;
  });
  __publicField(Math2, "tintegral", (func = (x22, y22, z3) => {
    let w2 = x22 + y22 + z3;
    return w2;
  }, range = [[], [], []], stepx = 0.01, stepy = stepx, stepz = stepx) => {
    let volume = 0;
    for (let i = range[0][0] + stepx; i < range[0][1]; i += stepx) {
      for (let j = range[1][0] + stepy; j < range[1][1]; j += stepy) {
        for (let k = range[2][0] + stepz; k < range[2][1]; k += stepz) {
          let w2 = func(i, j, k);
          volume += w2 * stepx * stepy * stepz;
        }
      }
    }
    return volume;
  });
  __publicField(Math2, "pintegral", (func = (x22) => {
    let y22 = x22;
    return y22;
  }, range = [], stepx = 0.01) => {
    let length = 0;
    let y0 = void 0;
    let yi = void 0;
    for (let i = range[0]; i < range[1]; i += stepx) {
      y0 = yi;
      yi = func(i);
      if (y0)
        length += _Math2.distance([0, y0], [stepx, yi]);
    }
    return length;
  });
  __publicField(Math2, "meshgrid", _Math2.generateCoordinateSpace);
  __publicField(Math2, "autocorrelation2d", (mat2d2) => {
    let result = [];
    for (let y22 = 0; y22 < mat2d2.length; y22++) {
      result.push([]);
      for (let x22 = 0; x22 < mat2d2[y22].length; x22++) {
        let G3 = 0;
        for (let b2 = 0; b2 < mat2d2.length; b2++) {
          for (let a = 0; a < mat2d2[b2].length; a++) {
            G3 += mat2d2[y22][x22] * mat2d2[mat2d2.length - 1 - b2][mat2d2[y22].length - 1 - a];
          }
        }
        result[y22][x22] = G3;
      }
    }
    return result;
  });
  __publicField(Math2, "lerp", _Math2.makeArr);
  __publicField(Math2, "upsample", _Math2.interpolateArray);
  __publicField(Math2, "lerp", (v0, v1, fit, floor = true) => {
    function lerp2(v02, v12, t3) {
      return (1 - t3) * v02 + t3 * v12;
    }
    function interpolerp2(v02, v12, fit2, floor2 = true) {
      if (fit2 <= 2)
        return [v02, v12];
      let a = 1 / fit2;
      let result = new Array(fit2);
      result[0] = v02;
      for (let i = 1; i <= fit2; i++) {
        result[i] = lerp2(v02, v12, a * i);
        if (floor2)
          result[i] = Math.floor(result[i]);
      }
      return result;
    }
  });
  __publicField(Math2, "peakDetect", (smoothedArray, type = "peak", window2 = 49) => {
    let mid = Math.floor(window2 * 0.5);
    let peaks = [];
    for (let i = 0; i < smoothedArray.length - window2; i++) {
      let isPeak = _Math2.isExtrema(smoothedArray.slice(i, i + window2), type);
      if (isPeak) {
        peaks.push(i + mid - 1);
      }
    }
    return peaks;
  });
  Object.assign(Math, Math2);
  var accel_gyro = { structs: { accelConstant: 1 / 8192, gyroConstant: 1 / 65.5, gyroXAngle: 0, gyroYAngle: 0, gyroZAngle: 0, px: 0, py: 0, pz: 0, sps: 100, lastAccelTime: Date.now(), lastGyroTime: Date.now() }, ondata: (ctx, data) => {
    if (!("ax" in data) && !("gx" in data))
      return void 0;
    if (!data.timestamp) {
      if (data.ax && Array.isArray(data.ax) || data.gx && Array.isArray(data.gx)) {
        let len = data.ax ? data.ax.length : data.gx.length;
        let now = Date.now();
        let toInterp = [now - len * ctx.sps * 1e3, now];
        data.timestamp = Math2.upsample(toInterp, len);
      } else {
        data.timestamp = Date.now();
      }
    }
    let result;
    if (data.ax) {
      let apass = (timestamp, ax, ay, az) => {
        ax = ax * ctx.accelConstant;
        ay = ay * ctx.accelConstant;
        az = az * ctx.accelConstant;
        const accelXAngle = Math.atan(ay / Math.sqrt(ax * ax) + az * az * 180 / Math.PI) + ctx.accelXError;
        const accelYAngle = Math.atan(-ax / Math.sqrt(ay * ay) + az * az * 180 / Math.PI) + ctx.accelYError;
        return { ax, ay, az, roll: accelXAngle, pitch: accelYAngle };
      };
      if (Array.isArray(data.timestamp)) {
        result = data.timestamp.map((v2, i) => {
          return apass(v2, data.ax[i], data.ay[i], data.az[i]);
        });
      } else
        result = apass(data.timestamp, data.ax, data.ay, data.az);
    }
    if (data.gx) {
      let gpass = (timestamp, gx, gy, gz) => {
        const elapsed = timestamp - ctx.lastGyroTime;
        ctx.lastGyroTime = timestamp;
        gx = gx * ctx.gyroConstant + ctx.gyroXError;
        gy = gy * ctx.gyroConstant + ctx.gyroYError;
        gz = gz * ctx.gyroConstant + ctx.gyroZError;
        ctx.gyroXAngle += gx * elapsed;
        ctx.gyroYAngle += gy * elapsed;
        ctx.gyroZAngle += gz * elapsed;
        return { gx, gy, gz, roll: ctx.gyroXAngle, pitch: ctx.gyroYAngle, yaw: ctx.gyroZAngle };
      };
      let res;
      if (Array.isArray(data.timestamp)) {
        res = data.timestamp.map((v2, i) => {
          if (result) {
            let r = gpass(v2, data.gx[i], data.gy[i], data.gz[i]);
            result.roll = result.roll * 0.04 + r.roll * 0.96;
            result.pitch = result.pitch * 0.04 + r.pitch * 0.96;
            result.yaw = res.yaw;
          } else
            return gpass(v2, data.gx[i], data.gy[i], data.gz[i]);
        });
        if (!result)
          result = res;
      } else {
        res = gpass(data.timestamp, data.gx, data.gy, data.gz);
        if (result) {
          result.roll = result.roll * 0.04 + res.roll * 0.96;
          result.pitch = result.pitch * 0.04 + res.pitch * 0.96;
          result.yaw = res.yaw;
        } else
          result = res;
      }
    } else if (ctx.gyroXAngle || ctx.gyroYAngle || ctx.gyroZAngle) {
      result.roll = result.roll * 0.04 + ctx.gyroXAngle * 0.96;
      result.pitch = result.pitch * 0.04 + ctx.gyroYAngle * 0.96;
      result.yaw = ctx.gyroXAngle;
    }
    if (result.ax) {
      const setPositionOffset = (timestamp, result2) => {
        const elapsed = timestamp - ctx.lastAccelTime;
        ctx.lastAccelTime = timestamp;
        ctx.px += result2.ax * elapsed * elapsed * Math.cos(ctx.pitch * Math.PI * 0.005555555555);
        ctx.py += result2.ay * elapsed * elapsed * Math.cos(ctx.roll * Math.PI * 0.005555555555);
        ctx.pz += result2.az * elapsed * elapsed * Math.sin(ctx.pitch * Math.PI * 0.005555555555);
        result2.px = ctx.px;
        result2.py = ctx.py;
        result2.pz = ctx.pz;
        return result2;
      };
      if (Array.isArray(data.timestamp)) {
        data.timestamp.map((timestamp, i) => {
          setPositionOffset(timestamp, result);
        });
      } else {
        setPositionOffset(data.timestamp, result);
      }
    }
    return result;
  } };
  var Biquad = class {
    constructor(type, freq, sps11, Q = 1 / Math.sqrt(2), dbGain = 0) {
      this.a0 = 0;
      this.a1 = 0;
      this.a2 = 0;
      this.b0 = 0;
      this.b1 = 0;
      this.b2 = 0;
      this.x1 = 0;
      this.x2 = 0;
      this.y1 = 0;
      this.y2 = 0;
      let types = ["lowpass", "highpass", "bandpass", "notch", "peak", "lowshelf", "highshelf"];
      if (types.indexOf(type) < 0) {
        console.error("Valid types: 'lowpass','highpass','bandpass','notch','peak','lowshelf','highshelf'");
        return;
      }
      this.type = type;
      this.freq = freq;
      this.sps = sps11;
      this.Q = Q;
      this.dbGain = dbGain;
      let A22 = Math.pow(10, dbGain / 40);
      let omega = 2 * Math.PI * freq / sps11;
      let sn = Math.sin(omega);
      let cs = Math.cos(omega);
      let alpha = sn / (2 * Q);
      let beta = Math.sqrt(A22 + A22);
      this[type](A22, sn, cs, alpha, beta);
      this.b0 /= this.a0;
      this.b1 /= this.a0;
      this.b2 /= this.a0;
      this.a1 /= this.a0;
      this.a2 /= this.a0;
    }
    lowpass(A22, sn, cs, alpha, beta) {
      this.b0 = (1 - cs) * 0.5;
      this.b1 = 1 - cs;
      this.b2 = (1 - cs) * 0.5;
      this.a0 = 1 + alpha;
      this.a1 = -2 * cs;
      this.a2 = 1 - alpha;
    }
    highpass(A22, sn, cs, alpha, beta) {
      this.b0 = (1 + cs) * 0.5;
      this.b1 = -(1 + cs);
      this.b2 = (1 + cs) * 0.5;
      this.a0 = 1 + alpha;
      this.a1 = -2 * cs;
      this.a2 = 1 - alpha;
    }
    bandpass(A22, sn, cs, alpha, beta) {
      this.b0 = alpha;
      this.b1 = 0;
      this.b2 = -alpha;
      this.a0 = 1 + alpha;
      this.a1 = -2 * cs;
      this.a2 = 1 - alpha;
    }
    notch(A22, sn, cs, alpha, beta) {
      this.b0 = 1;
      this.b1 = -2 * cs;
      this.b2 = 1;
      this.a0 = 1 + alpha;
      this.a1 = -2 * cs;
      this.a2 = 1 - alpha;
    }
    peak(A22, sn, cs, alpha, beta) {
      this.b0 = 1 + alpha * A22;
      this.b1 = -2 * cs;
      this.b2 = 1 - alpha * A22;
      this.a0 = 1 + alpha / A22;
      this.a1 = -2 * cs;
      this.a2 = 1 - alpha / A22;
    }
    lowshelf(A22, sn, cs, alpha, beta) {
      this.b0 = A22 * (A22 + 1 - (A22 - 1) * cs + beta * sn);
      this.b1 = 2 * A22 * (A22 - 1 - (A22 + 1) * cs);
      this.b2 = A22 * (A22 + 1 - (A22 - 1) * cs - beta * sn);
      this.a0 = A22 + 1 + (A22 + 1) * cs + beta * sn;
      this.a1 = 2 * (A22 - 1 + (A22 + 1) * cs);
      this.a2 = A22 + 1 + (A22 - 1) * cs - beta * sn;
    }
    highshelf(A22, sn, cs, alpha, beta) {
      this.b0 = A22 * (A22 + 1 + (A22 - 1) * cs + beta * sn);
      this.b1 = 2 * A22 * (A22 - 1 + (A22 + 1) * cs);
      this.b2 = A22 * (A22 + 1 - (A22 - 1) * cs - beta * sn);
      this.a0 = A22 + 1 - (A22 + 1) * cs - beta * sn;
      this.a1 = 2 * (A22 - 1 - (A22 + 1) * cs);
      this.a2 = A22 + 1 - (A22 - 1) * cs - beta * sn;
    }
    applyFilter(signal_step) {
      let y22 = this.b0 * signal_step + this.b1 * this.x1 + this.b2 * this.x2 - this.a1 * this.y1 - this.a2 * this.y2;
      this.x2 = this.x1;
      this.x1 = signal_step;
      this.y2 = this.y1;
      this.y1 = y22;
      return y22;
    }
    zResult(freq) {
      try {
        let phi = Math.pow(Math.sin(Math.PI * freq * 2 / (2 * this.sps)), 2);
        let result = (Math.pow(this.b0 + this.b1 + this.b2, 2) - 4 * (this.b0 * this.b1 + 4 * this.b0 * this.b2 + this.b1 * this.b2) * phi + 16 * this.b0 * this.b2 * phi * phi) / (Math.pow(1 + this.a1 + this.a2, 2) - 4 * (this.a1 + 4 * this.a2 + this.a1 * this.a2) * phi + 16 * this.a2 * phi * phi);
        return result;
      } catch (err) {
        return -200;
      }
    }
    static calcCenterFrequency(freqStart, freqEnd) {
      return (freqStart + freqEnd) / 2;
    }
    static calcBandwidth(freqStart, freqEnd) {
      return freqEnd - this.calcCenterFrequency(freqStart, freqEnd);
    }
    static calcBandpassQ(frequency, bandwidth, resonance = Math.pow(10, Math.floor(Math.log10(frequency)))) {
      let Q = resonance * Math.sqrt((frequency - bandwidth) * (frequency + bandwidth)) / (2 * bandwidth);
      return Q;
    }
    static calcNotchQ(frequency, bandwidth, resonance = Math.pow(10, Math.floor(Math.log10(frequency)))) {
      let Q = resonance * frequency * bandwidth / Math.sqrt((frequency - bandwidth) * (frequency + bandwidth));
      return Q;
    }
  };
  var beat_detect = { structs: { refdata: [], lowpass: void 0, smoothed: [], timestamp: [], peaks: [], valleys: [], peak_distances: [], valley_distances: [], beats: [], lastPeak: 0, lastValley: 0, sps: 100, maxFreq: 4, limit: 10 }, oncreate: (context) => {
    if (!context.lowpass) {
      let freq = context.maxFreq;
      if (!freq)
        freq = 1;
      if (freq > 1)
        freq *= 0.5;
      context.lowpass = new Biquad("lowpass", context.maxFreq, context.sps);
      context.peakFinderWindow = Math.floor(context.sps / context.maxFreq);
      if (context.peakFinderWindow % 2 === 0)
        context.peakFinderWindow += 1;
      if (context.peakFinderWindow < 5)
        context.peakFinderWindow = 5;
      context.midpoint = Math.round(context.peakFinderWindow * 0.5);
    }
  }, ondata: (context, data) => {
    if (!("red" in data) && !("heg" in data) && !("raw" in data))
      return void 0;
    let refdata = data.red ? data.red : data.heg ? data.heg : data.raw;
    if (!("timestamp" in data)) {
      if (Array.isArray(refdata)) {
        let now = Date.now();
        let len;
        if (refdata)
          len = refdata.length;
        let toInterp = [now - refdata.length * context.sps * 1e3, now];
        data.timestamp = Math2.upsample(toInterp, refdata.length);
      } else {
        data.timestamp = Date.now();
      }
    }
    let pass = (amplitude, timestamp) => {
      if (amplitude) {
        context.refdata.push(amplitude);
      }
      context.timestamp.push(timestamp);
      let beat;
      if (context.refdata.length > context.peakFinderWindow) {
        context.refdata.shift();
        context.timestamp.shift();
      }
      context.smoothed.push(context.lowpass.applyFilter(context.refdata[context.refdata.length - 1]));
      if (context.smoothed.length > context.peakFinderWindow) {
        context.smoothed.shift();
      }
      if (context.smoothed.length === context.peakFinderWindow) {
        if (Math2.isExtrema(context.smoothed, "valley")) {
          context.valleys.push({ value: context.smoothed[context.smoothed.length - context.midpoint ? context.midpoint : 1], timestamp: context.timestamp[context.timestamp.length - context.midpoint ? context.midpoint : 1] });
        } else if (Math2.isExtrema(context.smoothed, "peak")) {
          context.peaks.push({ value: context.smoothed[context.smoothed.length - context.midpoint ? context.midpoint : 1], timestamp: context.timestamp[context.timestamp.length - context.midpoint ? context.midpoint : 1] });
        }
        if (context.valleys.length > 2 && context.peaks.length > 2) {
          if (context.valleys[context.valleys.length - 1].timestamp < context.peaks[context.peaks.length - 2].timestamp)
            context.peaks.splice(context.peaks.length - 1);
          if (context.peaks[context.peaks.length - 1].timestamp < context.valleys[context.valleys.length - 2].timestamp)
            context.valleys.splice(context.valleys.length - 1);
          context.valley_distances.push({ distance: context.valleys[context.valleys.length - 1].timestamp - context.valleys[context.valleys.length - 2].timestamp, timestamp: context.valleys[context.valleys.length - 1].timestamp, peak0: context.valleys[context.valleys.length - 1].value, peak1: context.valleys[context.valleys.length - 2].value });
          context.peak_distances.push({ distance: context.peaks[context.peaks.length - 1].timestamp - context.peaks[context.peaks.length - 2].timestamp, timestamp: context.peaks[context.peaks.length - 1].timestamp, peak0: context.peaks[context.peaks.length - 1].value, peak1: context.peaks[context.peaks.length - 2].value });
          if (context.peak_distances.length > 1 && context.valley_distances.length > 1) {
            if (context.lastPeak < context.peaks[context.peaks.length - 1].timestamp && context.lastValley < context.peaks[context.peaks.length - 1].timestamp) {
              if (context.valley_distances[context.valley_distances.length - 1].timestamp > context.peak_distances[context.peak_distances.length - 1].timestamp) {
                let bpm, change = 0;
                if (context.beats.length < 1) {
                  bpm = 60 / (5e-4 * (context.peak_distances[context.peak_distances.length - 1].distance + context.valley_distances[context.valley_distances.length - 1].distance));
                } else if (context.beats[context.beats.length - 1].timestamp !== context.peak_distances[context.peak_distances.length - 1].timestamp) {
                  bpm = 60 / (5e-4 * (context.peak_distances[context.peak_distances.length - 1].dt + context.valley_distances[context.valley_distances.length - 1].dt));
                  change = Math.abs(bpm - context.beats[context.beats.length - 1].bpm);
                }
                beat = { timestamp: context.peak_distances[context.peak_distances.length - 1].timestamp, change, bpm, height0: context.peak_distances[context.peak_distances.length - 1].peak0 - context.valley_distances[context.valley_distances.length - 1].peak0, height1: context.peak_distances[context.peak_distances.length - 1].peak1 - context.valley_distances[context.valley_distances.length - 1].peak1 };
                context.beats.push(beat);
                context.lastPeak = context.peaks[context.peaks.length - 1].timestamp;
                context.lastValley = context.peaks[context.peaks.length - 1].timestamp;
              } else {
                let bpm, change = 0;
                if (context.beats.length < 2) {
                  bpm = 60 / (5e-4 * (context.peak_distances[context.peak_distances.length - 2].distance + context.valley_distances[context.valley_distances.length - 2].distance));
                } else if (context.beats[context.beats.length - 1].timestamp !== context.peak_distances[context.peak_distances.length - 2].timestamp) {
                  bpm = 60 / (5e-4 * (context.peak_distances[context.peak_distances.length - 2].distance + context.valley_distances[context.valley_distances.length - 2].distance));
                  change = Math.abs(bpm - context.beats[context.beats.length - 2].bpm);
                }
                beat = { timestamp: context.peak_distances[context.peak_distances.length - 2].timestamp, change, bpm, height0: context.peak_distances[context.peak_distances.length - 2].peak0 - context.valley_distances[context.valley_distances.length - 2].peak0, height1: context.peak_distances[context.peak_distances.length - 2].peak1 - context.valley_distances[context.valley_distances.length - 2].peak1 };
                context.beats.push(beat);
                context.lastPeak = context.peaks[context.peaks.length - 1].timestamp;
                context.lastValley = context.peaks[context.peaks.length - 1].timestamp;
              }
            }
          }
          if (context.peaks.length > context.limit) {
            context.peaks.shift();
          }
          if (context.valleys.length > context.limit) {
            context.valleys.shift();
          }
          if (context.peak_distances.length > context.limit) {
            context.peak_distances.shift();
          }
          if (context.valley_distances.length > context.limit) {
            context.valley_distances.shift();
          }
          if (context.beats.length > context.limit) {
            context.beats.shift();
          }
        }
      }
      return beat;
    };
    if (data.red) {
      if ("ir" in data && !Array.isArray(data.red))
        return pass(data.red + data.ir, data.timestamp);
      let result;
      if (data.ir)
        result = data.red.map((v2, i) => {
          return pass(v2 + data.ir[i], data.timestamp[i]);
        });
      else
        result = data.red.map((v2, i) => {
          return pass(v2, data.timestamp[i]);
        });
      return result;
    } else if (data.raw) {
      if (!Array.isArray(data.raw))
        return pass(data.raw, data.timestamp);
      let result = data.raw.map((v2, i) => {
        return pass(v2, data.timestamp[i]);
      });
      return result;
    } else if (Array.isArray(data.heg)) {
      if (!Array.isArray(data.heg))
        return pass(data.heg, data.timestamp);
      let result = data.heg.map((v2, i) => {
        return pass(v2, data.timestamp[i]);
      });
      return result;
    }
  } };
  var blink_detect = { structs: { sps: 250, intervals: {}, watch: ["0"], tolerance: 0.2 }, oncreate: (ctx) => {
    ctx.watch.forEach((ch) => ctx.intervals[ch] = { lowpass: new Biquad("lowpass", 20, ctx.sps), filtered: [], averaged: [] });
  }, ondata: (ctx, data) => {
    let checkCt = 5;
    let averageCt = 50;
    let found = {};
    let passed = false;
    let pass = (key, n) => {
      let next = ctx.intervals[key].lowpass.applyFilter(n);
      ctx.intervals[key].filtered.push(next);
      ctx.intervals[key].averaged.push(next);
      if (ctx.intervals[key].filtered.length > checkCt) {
        if (ctx.intervals[key].averaged.length > averageCt) {
          ctx.intervals[key].averaged.splice(0, checkCt);
          let mean2 = Math2.mean(ctx.intervals[key].averaged);
          if (Math.abs(Math.min(...ctx.intervals[key].filtered)) > Math.abs(mean2) + ctx.tolerance) {
            ctx.intervals[key].filtered.length = 0;
            passed = true;
            found[key] = true;
          }
        } else
          ctx.intervals[key].filtered.shift();
      }
    };
    for (const key in ctx.intervals) {
      if (data[key]) {
        if (Array.isArray(data[key])) {
          data[key].forEach((n) => {
            pass(key, n);
          });
        } else if (typeof data[key] === "number")
          pass(key, data[key]);
      }
    }
    if (passed)
      return found;
  } };
  var _ArrayManip3 = class {
    constructor() {
      this.recursivelyAssign = (target, obj) => {
        for (const key in obj) {
          if (typeof obj[key] === "object") {
            if (typeof target[key] === "object")
              this.recursivelyAssign(target[key], obj[key]);
            else
              target[key] = this.recursivelyAssign({}, obj[key]);
          } else
            target[key] = obj[key];
        }
        return target;
      };
    }
    static autoscale(array, lineIdx = 0, nLines = 1, centerZero = false, ymin, ymax, clamp) {
      if (array?.length === 0)
        return array;
      let max = ymax ? ymax : Math.max(...array);
      let min = ymin ? ymin : Math.min(...array);
      let _lines = 1 / nLines;
      let scalar = 1;
      if (centerZero) {
        let absmax = Math.max(Math.abs(min), Math.abs(max));
        if (absmax !== 0)
          scalar = _lines / absmax;
        return array.map((y22) => {
          if (clamp) {
            if (y22 < min)
              y22 = min;
            if (y22 > max)
              y22 = max;
          }
          return y22 * scalar + (_lines * (lineIdx + 1) * 2 - 1 - _lines);
        });
      } else {
        if (max === min) {
          if (max !== 0) {
            scalar = _lines / max;
          } else if (min !== 0) {
            scalar = _lines / Math.abs(min);
          }
        } else
          scalar = _lines / (max - min);
        return array.map((y22) => {
          if (clamp) {
            if (y22 < min)
              y22 = min;
            if (y22 > max)
              y22 = max;
          }
          return 2 * ((y22 - min) * scalar - 1 / (2 * nLines)) + (_lines * (lineIdx + 1) * 2 - 1 - _lines);
        });
      }
    }
    static genTimestamps(ct, sps11) {
      let now = Date.now();
      let toInterp = [now - ct * 1e3 / sps11, now];
      return _ArrayManip3.upsample(toInterp, ct);
    }
    static absmax(array) {
      return Math.max(Math.abs(Math.min(...array)), Math.max(...array));
    }
    static downsample(array, fitCount, scalar = 1) {
      if (array.length > fitCount) {
        let output = new Array(fitCount);
        let incr = array.length / fitCount;
        let lastIdx = array.length - 1;
        let last = 0;
        let counter = 0;
        for (let i = incr; i < array.length; i += incr) {
          let rounded = Math.round(i);
          if (rounded > lastIdx)
            rounded = lastIdx;
          for (let j = last; j < rounded; j++) {
            output[counter] += array[j];
          }
          output[counter] /= (rounded - last) * scalar;
          counter++;
          last = rounded;
        }
        return output;
      } else
        return array;
    }
    static upsample(array, fitCount, scalar = 1) {
      var linearInterpolate = function(before2, after2, atPoint2) {
        return (before2 + (after2 - before2) * atPoint2) * scalar;
      };
      var newData = new Array(fitCount);
      var springFactor = (array.length - 1) / (fitCount - 1);
      newData[0] = array[0];
      for (var i = 1; i < fitCount - 1; i++) {
        var tmp = i * springFactor;
        var before = Math.floor(tmp);
        var after = Math.ceil(tmp);
        var atPoint = tmp - before;
        newData[i] = linearInterpolate(array[before], array[after], atPoint);
      }
      newData[fitCount - 1] = array[array.length - 1];
      return newData;
    }
    static interpolate(array, fitCount, scalar = 1) {
      if (array.length > fitCount) {
        return _ArrayManip3.downsample(array, fitCount, scalar);
      } else if (array.length < fitCount) {
        return _ArrayManip3.upsample(array, fitCount, scalar);
      }
      return array;
    }
    static HSLToRGB(h, s, l, scalar = 255) {
      s /= 100;
      l /= 100;
      let c = (1 - Math.abs(2 * l - 1)) * s, x3 = c * (1 - Math.abs(h / 60 % 2 - 1)), m = l - c / 2, r = 0, g = 0, b2 = 0;
      if (0 <= h && h < 60) {
        r = c;
        g = x3;
        b2 = 0;
      } else if (60 <= h && h < 120) {
        r = x3;
        g = c;
        b2 = 0;
      } else if (120 <= h && h < 180) {
        r = 0;
        g = c;
        b2 = x3;
      } else if (180 <= h && h < 240) {
        r = 0;
        g = x3;
        b2 = c;
      } else if (240 <= h && h < 300) {
        r = x3;
        g = 0;
        b2 = c;
      } else if (300 <= h && h < 360) {
        r = c;
        g = 0;
        b2 = x3;
      }
      r = (r + m) * scalar;
      g = (g + m) * scalar;
      b2 = (b2 + m) * scalar;
      return [r, g, b2];
    }
    static circularBuffer(arr, newEntries) {
      if (newEntries.length < arr.length) {
        let slice = arr.slice(newEntries.length);
        let len = arr.length;
        arr.splice(0, len, ...slice, ...newEntries);
      } else if (newEntries.length > arr.length) {
        let len = arr.length;
        arr.splice(0, len, ...newEntries.slice(newEntries.length - len));
      } else {
        arr.splice(0, arr.length, ...newEntries);
      }
      return arr;
    }
    static reformatData(data, key) {
      if (Array.isArray(data)) {
        if (Array.isArray(data[0])) {
          let d2 = {};
          data.forEach((arr, i) => {
            d2[i] = arr;
          });
          data = d2;
          if (isNaN(data[0][0]))
            return void 0;
        } else if (key) {
          data = { [key]: data };
          if (isNaN(data[key][0]))
            return void 0;
        } else {
          data = { 0: data };
          if (isNaN(data[0][0]))
            return void 0;
        }
      } else if (typeof data === "object") {
        for (const key2 in data) {
          if (typeof data[key2] === "number")
            data[key2] = [data[key2]];
          else if (data[key2]?.values) {
            if (typeof data[key2].values === "number")
              data[key2].values = [data[key2].values];
          }
          if (isNaN(data[key2][0]))
            return void 0;
        }
      } else if (typeof data === "string") {
        let split;
        if (data.includes("\r\n")) {
          let lines = data.split("\r\n");
          data = {};
          lines.forEach((l, j) => {
            if (l.includes("	")) {
              split = l.split("	");
            } else if (l.includes(",")) {
              split = l.split(",");
            } else if (l.includes("|")) {
              split = l.split("|");
            }
            if (Array.isArray(split)) {
              split.forEach((val, i) => {
                if (val.includes(":")) {
                  let [key2, v2] = val.split(":");
                  let fl = parseFloat(v2);
                  if (fl)
                    data[key2] = [fl];
                  else
                    return void 0;
                } else {
                  let fl = parseFloat(val);
                  if (fl)
                    data[i] = [fl];
                  else
                    return void 0;
                }
              });
            }
          });
        } else if (data.includes("	")) {
          split = data.split("	");
        } else if (data.includes(",")) {
          split = data.split(",");
        } else if (data.includes("|")) {
          split = data.split("|");
        }
        data = {};
        if (Array.isArray(split)) {
          split.forEach((val, i) => {
            if (val.includes(":")) {
              let [key2, v2] = val.split(":");
              let fl = parseFloat(v2);
              if (fl)
                data[key2] = [fl];
              else
                return void 0;
            } else {
              let fl = parseFloat(val);
              if (fl)
                data[i] = [fl];
              else
                return void 0;
            }
          });
        }
      } else if (typeof data === "number") {
        if (key)
          data = { [key]: [data] };
        else
          data = { 0: [data] };
      }
      return data;
    }
    static padTime(data, lastValue, time, targetFit) {
      let slopeIncr = (data[0] - lastValue) / time / targetFit;
      let padded = [...new Array(targetFit - data.length).map((_2, i) => lastValue + slopeIncr * (i + 1)), ...data];
      return padded;
    }
    static interpolateForTime(data, time, targetSPS) {
      return _ArrayManip3.interpolate(data, Math.ceil(targetSPS * time));
    }
    isTypedArray(x3) {
      return ArrayBuffer.isView(x3) && Object.prototype.toString.call(x3) !== "[object DataView]";
    }
    spliceTypedArray(arr, start, end) {
      let s = arr.subarray(0, start);
      let e;
      if (end) {
        e = arr.subarray(end + 1);
      }
      let n;
      if (s.length > 0 || e?.length > 0)
        n = new arr.constructor(s.length + e.length);
      if (s.length > 0)
        n.set(s);
      if (e && e.length > 0)
        n.set(e, s.length);
      return n;
    }
  };
  var ArrayManip3 = _ArrayManip3;
  ArrayManip3.bufferValues = (objects, property, keys, buffer) => {
    if (!Array.isArray(keys) && typeof keys === "object")
      keys = Object.keys(keys);
    if (!buffer) {
      let object_keys = Object.keys(objects);
      if (keys)
        buffer = new Float32Array(object_keys.length * keys.length);
      else {
        if (typeof objects[object_keys[0]][property] === "object") {
          keys = Object.keys(objects[object_keys[0]][property]);
          buffer = new Float32Array(object_keys.length * keys.length);
        } else
          buffer = new Float32Array(object_keys.length);
      }
    }
    let i = 0;
    for (const key in objects) {
      if (objects[key][property]) {
        if (keys) {
          for (let j = 0; j < keys.length; j++) {
            buffer[i] = objects[key][property][keys[j]];
            i++;
          }
        } else {
          buffer[i] = objects[key][property];
          i++;
        }
      }
    }
    return buffer;
  };
  var rechk3 = /^([<>])?(([1-9]\d*)?([xcbB?hHiIfdsp]))*$/;
  var refmt3 = /([1-9]\d*)?([xcbB?hHiIfdsp])/g;
  var str3 = (v2, o, c) => String.fromCharCode(...new Uint8Array(v2.buffer, v2.byteOffset + o, c));
  var rts3 = (v2, o, c, s) => new Uint8Array(v2.buffer, v2.byteOffset + o, c).set(s.split("").map((str22) => str22.charCodeAt(0)));
  var pst3 = (v2, o, c) => str3(v2, o + 1, Math.min(v2.getUint8(o), c - 1));
  var tsp3 = (v2, o, c, s) => {
    v2.setUint8(o, s.length);
    rts3(v2, o + 1, c - 1, s);
  };
  var lut3 = (le) => ({ x: (c) => [1, c, 0], c: (c) => [c, 1, (o) => ({ u: (v2) => str3(v2, o, 1), p: (v2, c2) => rts3(v2, o, 1, c2) })], "?": (c) => [c, 1, (o) => ({ u: (v2) => Boolean(v2.getUint8(o)), p: (v2, B3) => v2.setUint8(o, B3) })], b: (c) => [c, 1, (o) => ({ u: (v2) => v2.getInt8(o), p: (v2, b2) => v2.setInt8(o, b2) })], B: (c) => [c, 1, (o) => ({ u: (v2) => v2.getUint8(o), p: (v2, B3) => v2.setUint8(o, B3) })], h: (c) => [c, 2, (o) => ({ u: (v2) => v2.getInt16(o, le), p: (v2, h) => v2.setInt16(o, h, le) })], H: (c) => [c, 2, (o) => ({ u: (v2) => v2.getUint16(o, le), p: (v2, H3) => v2.setUint16(o, H3, le) })], i: (c) => [c, 4, (o) => ({ u: (v2) => v2.getInt32(o, le), p: (v2, i) => v2.setInt32(o, i, le) })], I: (c) => [c, 4, (o) => ({ u: (v2) => v2.getUint32(o, le), p: (v2, I) => v2.setUint32(o, I, le) })], f: (c) => [c, 4, (o) => ({ u: (v2) => v2.getFloat32(o, le), p: (v2, f) => v2.setFloat32(o, f, le) })], d: (c) => [c, 8, (o) => ({ u: (v2) => v2.getFloat64(o, le), p: (v2, d2) => v2.setFloat64(o, d2, le) })], s: (c) => [1, c, (o) => ({ u: (v2) => str3(v2, o, c), p: (v2, s) => rts3(v2, o, c, s.slice(0, c)) })], p: (c) => [1, c, (o) => ({ u: (v2) => pst3(v2, o, c), p: (v2, s) => tsp3(v2, o, c, s.slice(0, c - 1)) })] });
  var errbuf3 = new RangeError("Structure larger than remaining buffer");
  var errval3 = new RangeError("Not enough values for structure");
  var _ByteParser3 = class extends ArrayManip3 {
    static toDataView(value) {
      if (!(value instanceof DataView)) {
        if (typeof value === "string" && parseInt(value))
          value = parseInt(value);
        if (typeof value === "string") {
          let enc = new TextEncoder();
          let hascodes = {};
          for (const code in _ByteParser3.codes) {
            while (value.indexOf(code) > -1) {
              let idx = value.indexOf(code);
              value = value.replace(code, "");
              hascodes[idx] = code;
            }
          }
          let encoded = Array.from(enc.encode(value));
          for (const key in hascodes) {
            encoded.splice(parseInt(key), 0, _ByteParser3.codes[hascodes[key]]);
          }
          value = new DataView(new Uint8Array(encoded).buffer);
        } else if (typeof value === "number") {
          let tmp = value;
          if (value < 256) {
            value = new DataView(new ArrayBuffer(1));
            value.setUint8(0, tmp);
          } else if (value < 65536) {
            value = new DataView(new ArrayBuffer(2));
            value.setInt16(0, tmp);
          } else {
            value = new DataView(new ArrayBuffer(4));
            value.setUint32(0, tmp);
          }
        } else if (value instanceof ArrayBuffer || typeof SharedArrayBuffer !== "undefined" && value instanceof SharedArrayBuffer) {
          value = new DataView(value);
        } else if (Array.isArray(value)) {
          value = new DataView(Uint8Array.from(value).buffer);
        } else if (typeof value === "object") {
          value = new TextEncoder().encode(JSON.stringify(value));
        }
      }
      return value;
    }
    static searchBuffer(buffer, searchString, limit) {
      var needle = searchString;
      var haystack = buffer;
      var search = _ByteParser3.boyerMoore(needle);
      var skip = search.byteLength;
      var indices = [];
      for (var i = search(haystack); i !== -1; i = search(haystack, i + skip)) {
        indices.push(i);
        if (limit) {
          if (indices.length >= limit)
            break;
        }
      }
      return indices;
    }
    static bytesToInt16(x0, x1) {
      let int16 = (255 & x0) << 8 | 255 & x1;
      if ((int16 & 32768) > 0) {
        int16 |= 4294901760;
      } else {
        int16 &= 65535;
      }
      return int16;
    }
    static bytesToUInt16(x0, x1) {
      return x0 * 256 + x1;
    }
    static Uint16ToBytes(y22) {
      return [y22 & 255, y22 >> 8 & 255];
    }
    static bytesToInt24(x0, x1, x22) {
      let int24 = (255 & x0) << 16 | (255 & x1) << 8 | 255 & x22;
      if ((int24 & 8388608) > 0) {
        int24 |= 4278190080;
      } else {
        int24 &= 16777215;
      }
      return int24;
    }
    static bytesToUInt24(x0, x1, x22) {
      return x0 * 65536 + x1 * 256 + x22;
    }
    static Uint24ToBytes(y22) {
      return [y22 & 255, y22 >> 8 & 255, y22 >> 16 & 255];
    }
    static bytesToInt32(x0, x1, x22, x3) {
      let int32 = (255 & x0) << 24 | (255 & x1) << 16 | (255 & x22) << 8 | 255 & x3;
      if ((int32 & 2147483648) > 0) {
        int32 |= 0;
      } else {
        int32 &= 4294967295;
      }
      return int32;
    }
    static bytesToUInt32(x0, x1, x22, x3) {
      return x0 * 16777216 + x1 * 65536 + x22 * 256 + x3;
    }
    static Uint32ToBytes(y22) {
      return [y22 & 255, y22 >> 8 & 255, y22 >> 16 & 255, y22 >> 24 & 255];
    }
    static get2sCompliment(val, nbits4) {
      if (val > 4294967296)
        return null;
      return val << 32 - nbits4 >> 32 - nbits4;
    }
    static getSignedInt(...args) {
      let pos = 0;
      function getInt(size) {
        var value = 0;
        var first = true;
        while (size--) {
          if (first) {
            let byte = args[pos++];
            value += byte & 127;
            if (byte & 128) {
              value -= 128;
            }
            first = false;
          } else {
            value *= 256;
            value += args[pos++];
          }
        }
        return value;
      }
      return getInt(args.length);
    }
    static asUint8Array(input) {
      if (input instanceof Uint8Array) {
        return input;
      } else if (typeof input === "string") {
        var arr = new Uint8Array(input.length);
        for (var i = 0; i < input.length; i++) {
          var c = input.charCodeAt(i);
          if (c > 127) {
            throw new TypeError("Only ASCII patterns are supported");
          }
          arr[i] = c;
        }
        return arr;
      } else {
        return new Uint8Array(input);
      }
    }
    static boyerMoore(patternBuffer) {
      var pattern = _ByteParser3.asUint8Array(patternBuffer);
      var M2 = pattern.length;
      if (M2 === 0) {
        throw new TypeError("patternBuffer must be at least 1 byte long");
      }
      var R2 = 256;
      var rightmost_positions = new Int32Array(R2);
      for (var c = 0; c < R2; c++) {
        rightmost_positions[c] = -1;
      }
      for (var j = 0; j < M2; j++) {
        rightmost_positions[pattern[j]] = j;
      }
      var boyerMooreSearch = (txtBuffer, start, end) => {
        var txt = _ByteParser3.asUint8Array(txtBuffer);
        if (start === void 0)
          start = 0;
        if (end === void 0)
          end = txt.length;
        var pat = pattern;
        var right = rightmost_positions;
        var lastIndex = end - pat.length;
        var lastPatIndex = pat.length - 1;
        var skip;
        for (var i = start; i <= lastIndex; i += skip) {
          skip = 0;
          for (var j2 = lastPatIndex; j2 >= 0; j2--) {
            var c2 = txt[i + j2];
            if (pat[j2] !== c2) {
              skip = Math.max(1, j2 - right[c2]);
              break;
            }
          }
          if (skip === 0) {
            return i;
          }
        }
        return -1;
      };
      boyerMooreSearch.byteLength = pattern.byteLength;
      return boyerMooreSearch;
    }
    static struct(format) {
      let fns = [], size = 0, m = rechk3.exec(format);
      if (!m) {
        throw new RangeError("Invalid format string");
      }
      const t3 = lut3("<" === m[1]), lu = (n, c) => t3[c](n ? parseInt(n, 10) : 1);
      while (m = refmt3.exec(format)) {
        ((r, s, f) => {
          for (let i = 0; i < r; ++i, size += s) {
            if (f) {
              fns.push(f(size));
            }
          }
        })(...lu(...m.slice(1)));
      }
      const unpack_from = (arrb, offs) => {
        if (arrb.byteLength < (offs | 0) + size) {
          throw errbuf3;
        }
        let v2 = new DataView(arrb, offs | 0);
        return fns.map((f) => f.u(v2));
      };
      const pack_into = (arrb, offs, ...values) => {
        if (values.length < fns.length) {
          throw errval3;
        }
        if (arrb.byteLength < offs + size) {
          throw errbuf3;
        }
        const v2 = new DataView(arrb, offs);
        new Uint8Array(arrb, offs, size).fill(0);
        fns.forEach((f, i) => f.p(v2, values[i]));
      };
      const pack = (...values) => {
        let b2 = new ArrayBuffer(size);
        pack_into(b2, 0, ...values);
        return b2;
      };
      const unpack = (arrb) => unpack_from(arrb, 0);
      function* iter_unpack(arrb) {
        for (let offs = 0; offs + size <= arrb.byteLength; offs += size) {
          yield unpack_from(arrb, offs);
        }
      }
      return Object.freeze({ unpack, pack, unpack_from, pack_into, iter_unpack, format, size });
    }
  };
  var ByteParser3 = _ByteParser3;
  ByteParser3.codes = { "\\n": 10, "\\r": 13, "\\t": 9, "\\s": 32, "\\b": 8, "\\f": 12, "\\": 92 };
  var rms = { structs: { sps: 250, nSec: 1, watch: ["0", "1", "2", "3"], data: {}, rms: {} }, ondata: (ctx, data) => {
    ctx.watch.forEach((key) => {
      if (data[key]) {
        if (!ctx.data[key]) {
          if (Array.isArray(data[key])) {
            ctx.data[key] = new Array(Math.floor(ctx.sps * ctx.nSec)).fill(data[key][0]);
          } else
            ctx.data[key] = new Array(Math.floor(ctx.sps * ctx.nSec)).fill(data[key]);
        }
        ByteParser3.circularBuffer(ctx.data[key], data[key]);
      }
    });
    if (data.timestamp) {
      if (Array.isArray(data.timestamp)) {
        ctx.rms.timestamp = data.timestamp[data.timestamp.length - 1];
      } else
        ctx.rms.timestamp = data.timestamp;
    } else
      ctx.rms.timestamp = Date.now();
    return new Promise(async (res) => {
      await Promise.all(ctx.watch.map(async (key) => {
        if (ctx.data[key])
          ctx.rms[key] = Math.sqrt(Math.abs(ctx.data[key].reduce((p, v2, i) => p + v2 * v2) / ctx.data[key].length));
        else
          delete ctx.rms[key];
      }));
      res(ctx.rms);
    });
  } };
  var circularBuffer2d = { structs: { bufferSize: 250, watch: ["0", "1", "2", "3"], data: {}, blocking: false }, oncreate: (ctx) => {
    for (const key in ctx.watch) {
      ctx.data[key] = new Array(ctx.bufferSize).fill(0);
    }
  }, ondata: (ctx, data) => {
    let buffer2d = [];
    ctx.watch.forEach((key) => {
      if (data[key]) {
        ByteParser3.circularBuffer(ctx.data[key], data[key]);
        buffer2d.push(ctx.data[key]);
      }
    });
    return buffer2d;
  } };
  Object.assign(algorithms3, { beat_detect, accel_gyro, heartrate: beat_detect, breath: Object.assign({}, beat_detect), blink_detect, rms, circularBuffer2d });
  algorithms3["breath"].structs = JSON.parse(JSON.stringify(algorithms3["breath"].structs));
  algorithms3["breath"].structs.maxFreq = 0.2;

  // node_modules/graphscript/src/services/worker/ProxyListener.ts
  var mouseEventHandler3 = makeSendPropertiesHandler3([
    "ctrlKey",
    "metaKey",
    "shiftKey",
    "button",
    "pointerType",
    "clientX",
    "clientY",
    "pageX",
    "pageY"
  ]);
  var wheelEventHandlerImpl3 = makeSendPropertiesHandler3([
    "deltaX",
    "deltaY"
  ]);
  var keydownEventHandler3 = makeSendPropertiesHandler3([
    "ctrlKey",
    "metaKey",
    "shiftKey",
    "keyCode"
  ]);
  function wheelEventHandler3(event, sendFn) {
    event.preventDefault();
    wheelEventHandlerImpl3(event, sendFn);
  }
  function preventDefaultHandler3(event) {
    event.preventDefault();
  }
  function copyProperties3(src, properties, dst) {
    for (const name3 of properties) {
      dst[name3] = src[name3];
    }
  }
  function makeSendPropertiesHandler3(properties) {
    return function sendProperties(event, sendFn) {
      const data = { type: event.type };
      copyProperties3(event, properties, data);
      sendFn(data);
    };
  }
  function touchEventHandler3(event, sendFn) {
    const touches = [];
    const data = { type: event.type, touches };
    for (let i = 0; i < event.touches.length; ++i) {
      const touch = event.touches[i];
      touches.push({
        pageX: touch.pageX,
        pageY: touch.pageY
      });
    }
    sendFn(data);
  }
  var orbitKeys3 = {
    "37": true,
    "38": true,
    "39": true,
    "40": true
  };
  function filteredKeydownEventHandler3(event, sendFn) {
    const { keyCode } = event;
    if (orbitKeys3[keyCode]) {
      event.preventDefault();
      keydownEventHandler3(event, sendFn);
    }
  }
  var eventHandlers3 = {
    contextmenu: preventDefaultHandler3,
    mousedown: mouseEventHandler3,
    mousemove: mouseEventHandler3,
    mouseup: mouseEventHandler3,
    pointerdown: mouseEventHandler3,
    pointermove: mouseEventHandler3,
    pointerup: mouseEventHandler3,
    touchstart: touchEventHandler3,
    touchmove: touchEventHandler3,
    touchend: touchEventHandler3,
    wheel: wheelEventHandler3,
    keydown: filteredKeydownEventHandler3
  };
  function initProxyElement3(element, worker, id) {
    if (!id)
      id = "proxy" + Math.floor(Math.random() * 1e15);
    const sendEvent = (data) => {
      if (!worker) {
        handleProxyEvent3(data, id);
      } else
        worker.postMessage({ route: "handleProxyEvent", args: [data, id] });
    };
    let entries = Object.entries(eventHandlers3);
    for (const [eventName, handler] of entries) {
      element.addEventListener(eventName, function(event) {
        handler(event, sendEvent);
      });
    }
    const sendSize = () => {
      const rect = element.getBoundingClientRect();
      sendEvent({
        type: "resize",
        left: rect.left,
        top: rect.top,
        width: element.clientWidth,
        height: element.clientHeight
      });
    };
    sendSize();
    globalThis.addEventListener("resize", sendSize);
    return id;
  }
  var EventDispatcher3 = class {
    addEventListener(type, listener) {
      if (this.__listeners === void 0)
        this.__listeners = {};
      const listeners = this.__listeners;
      if (listeners[type] === void 0) {
        listeners[type] = [];
      }
      if (listeners[type].indexOf(listener) === -1) {
        listeners[type].push(listener);
      }
    }
    hasEventListener(type, listener) {
      if (this.__listeners === void 0)
        return false;
      const listeners = this.__listeners;
      return listeners[type] !== void 0 && listeners[type].indexOf(listener) !== -1;
    }
    removeEventListener(type, listener) {
      if (this.__listeners === void 0)
        return;
      const listeners = this.__listeners;
      const listenerArray = listeners[type];
      if (listenerArray !== void 0) {
        const index = listenerArray.indexOf(listener);
        if (index !== -1) {
          listenerArray.splice(index, 1);
        }
      }
    }
    dispatchEvent(event, target) {
      if (this.__listeners === void 0)
        return;
      const listeners = this.__listeners;
      const listenerArray = listeners[event.type];
      if (listenerArray !== void 0) {
        if (!target)
          event.target = this;
        else
          event.target = target;
        const array = listenerArray.slice(0);
        for (let i = 0, l = array.length; i < l; i++) {
          array[i].call(this, event);
        }
        event.target = null;
      }
    }
  };
  function noop3() {
  }
  var ElementProxyReceiver3 = class extends EventDispatcher3 {
    constructor() {
      super();
      this.__listeners = {};
      this.style = {};
      this.setPointerCapture = () => {
      };
      this.releasePointerCapture = () => {
      };
      this.getBoundingClientRect = () => {
        return {
          left: this.left,
          top: this.top,
          width: this.width,
          height: this.height,
          right: this.left + this.width,
          bottom: this.top + this.height
        };
      };
      this.handleEvent = (data) => {
        if (data.type === "resize") {
          this.left = data.left;
          this.top = data.top;
          this.width = data.width;
          this.height = data.height;
          if (typeof this.proxied === "object") {
            this.proxied.style.width = this.width + "px";
            this.proxied.style.height = this.height + "px";
            this.proxied.clientWidth = this.width;
            this.proxied.clientHeight = this.height;
          }
        }
        data.preventDefault = noop3;
        data.stopPropagation = noop3;
        this.dispatchEvent(data, this.proxied);
      };
      this.style = {};
    }
    get clientWidth() {
      return this.width;
    }
    get clientHeight() {
      return this.height;
    }
    focus() {
    }
  };
  var ProxyManager3 = class {
    constructor() {
      this.targets = {};
      this.makeProxy = (id, addTo = void 0) => {
        if (!id)
          id = `proxyReceiver${Math.floor(Math.random() * 1e15)}`;
        let proxy;
        if (this.targets[id])
          proxy = this.targets[id];
        else {
          proxy = new ElementProxyReceiver3();
          this.targets[id] = proxy;
        }
        if (typeof addTo === "object") {
          addTo.proxy = proxy;
          proxy.proxied = addTo;
          if (typeof WorkerGlobalScope !== "undefined")
            addTo.style = proxy.style;
          if (proxy.width) {
            addTo.style.width = proxy.width + "px";
            addTo.clientWidth = proxy.width;
          }
          if (proxy.height) {
            addTo.style.height = proxy.height + "px";
            addTo.clientHeight = proxy.height;
          }
          addTo.setPointerCapture = proxy.setPointerCapture.bind(proxy);
          addTo.releasePointerCapture = proxy.releasePointerCapture.bind(proxy);
          addTo.getBoundingClientRect = proxy.getBoundingClientRect.bind(proxy);
          addTo.addEventListener = proxy.addEventListener.bind(proxy);
          addTo.removeEventListener = proxy.removeEventListener.bind(proxy);
          addTo.handleEvent = proxy.handleEvent.bind(proxy);
          addTo.dispatchEvent = proxy.dispatchEvent.bind(proxy);
          addTo.focus = proxy.focus.bind(proxy);
        }
      };
      this.getProxy = (id) => {
        return this.targets[id];
      };
      this.handleEvent = (data, id) => {
        if (!this.targets[id])
          this.makeProxy(id);
        if (this.targets[id]) {
          this.targets[id].handleEvent(data);
          return true;
        }
        return void 0;
      };
      if (!globalThis.document)
        globalThis.document = {};
    }
  };
  function makeProxy3(id, elm) {
    if (this?.__node?.graph) {
      if (!this.__node.graph.ProxyManager)
        this.__node.graph.ProxyManager = new ProxyManager3();
      this.__node.graph.ProxyManager.makeProxy(id, elm);
    } else {
      if (!globalThis.ProxyManager)
        globalThis.ProxyManager = new ProxyManager3();
      globalThis.ProxyManager.makeProxy(id, elm);
    }
    return id;
  }
  function handleProxyEvent3(data, id) {
    if (this?.__node?.graph) {
      if (!this.__node.graph.ProxyManager)
        this.__node.graph.ProxyManager = new ProxyManager3();
      if (this.__node.graph.ProxyManager.handleEvent(data, id))
        return data;
    } else {
      if (!globalThis.ProxyManager)
        globalThis.ProxyManager = new ProxyManager3();
      if (globalThis.ProxyManager.handleEvent(data, id))
        return data;
    }
  }
  var proxyElementWorkerRoutes3 = {
    initProxyElement: initProxyElement3,
    makeProxy: makeProxy3,
    handleProxyEvent: handleProxyEvent3
  };

  // node_modules/graphscript/src/services/worker/WorkerCanvas.ts
  function Renderer3(options) {
    if (options.worker) {
      let worker = options.worker;
      let route = options.route;
      if (worker instanceof Blob || typeof worker === "string") {
        worker = new Worker(worker);
      }
      delete options.worker;
      delete options.route;
      return transferCanvas3(worker, options, route);
    } else {
      initProxyElement3(options.canvas, void 0, options._id);
      return setupCanvas3(options);
    }
  }
  function transferCanvas3(worker, options, route) {
    if (!options)
      return void 0;
    if (!options._id)
      options._id = `canvas${Math.floor(Math.random() * 1e15)}`;
    let offscreen = options.canvas.transferControlToOffscreen();
    if (!options.width)
      options.width = options.canvas.clientWidth;
    if (!options.height)
      options.height = options.canvas.clientHeight;
    let message4 = { route: route ? route : "setupCanvas", args: {
      ...options,
      canvas: offscreen
    } };
    if (this?.__node?.graph)
      this.__node.graph.run("initProxyElement", options.canvas, worker, options._id);
    else
      initProxyElement3(options.canvas, worker, options._id);
    if (options.draw) {
      if (typeof options.draw === "function")
        message4.args.draw = options.draw.toString();
      else
        message4.args.draw = options.draw;
    }
    if (options.update) {
      if (typeof options.update === "function")
        message4.args.update = options.update.toString();
      else
        message4.args.update = options.update;
    }
    if (options.init) {
      if (typeof options.init === "function")
        message4.args.init = options.init.toString();
      else
        message4.args.init = options.init;
    }
    if (options.clear) {
      if (typeof options.clear === "function")
        message4.args.clear = options.clear.toString();
      else
        message4.args.clear = options.clear;
    }
    let transfer = [offscreen];
    if (options.transfer) {
      transfer.push(...options.transfer);
      delete options.transfer;
    }
    worker.postMessage(message4, transfer);
    const canvascontrols = {
      _id: options._id,
      width: options.width,
      height: options.height,
      worker,
      draw: (props2) => {
        worker.postMessage({ route: "drawFrame", args: [props2, options._id] });
      },
      update: (props2) => {
        worker.postMessage({ route: "updateCanvas", args: [props2, options._id] });
      },
      clear: () => {
        worker.postMessage({ route: "clearCanvas", args: options._id });
      },
      init: () => {
        worker.postMessage({ route: "initCanvas", args: options._id });
      },
      stop: () => {
        worker.postMessage({ route: "stopAnim", args: options._id });
      },
      start: () => {
        worker.postMessage({ route: "startAnim", args: options._id });
      },
      set: (newDrawProps) => {
        worker.postMessage({ route: "setDraw", args: [newDrawProps, options._id] });
      },
      terminate: () => {
        worker.terminate();
      }
    };
    return canvascontrols;
  }
  function setDraw3(settings, _id) {
    let canvasopts;
    if (this?.__node?.graph) {
      if (_id)
        canvasopts = this.__node.graph.CANVASES?.[settings._id];
      else if (settings._id)
        canvasopts = this.__node.graph.CANVASES?.[settings._id];
      else
        canvasopts = this.__node.graph.CANVASES?.[Object.keys(this.__node.graph.CANVASES)[0]];
    } else {
      if (_id)
        canvasopts = globalThis.CANVASES?.[settings._id];
      else if (settings._id)
        canvasopts = globalThis.CANVASES?.[settings._id];
      else
        canvasopts = globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]];
    }
    if (canvasopts) {
      if (settings.canvas) {
        canvasopts.canvas = settings.canvas;
        if (this?.__node?.graph)
          this.__node.graph.run("makeProxy", canvasopts._id, canvasopts.canvas);
        else
          proxyElementWorkerRoutes3.makeProxy(canvasopts._id, canvasopts.canvas);
      }
      if (typeof settings.context === "string")
        canvasopts.context = canvasopts.canvas.getContext(settings.context);
      else if (settings.context)
        canvasopts.context = settings.context;
      if (settings.width)
        canvasopts.canvas.width = settings.width;
      if (settings.height)
        canvasopts.canvas.height = settings.height;
      if (typeof settings.draw === "string")
        settings.draw = parseFunctionFromText5(settings.draw);
      if (typeof settings.draw === "function") {
        canvasopts.draw = settings.draw;
      }
      if (typeof settings.update === "string")
        settings.update = parseFunctionFromText5(settings.update);
      if (typeof settings.update === "function") {
        canvasopts.update = settings.update;
      }
      if (typeof settings.init === "string")
        settings.init = parseFunctionFromText5(settings.init);
      if (typeof settings.init === "function") {
        canvasopts.init = settings.init;
      }
      if (typeof settings.clear === "string")
        settings.clear = parseFunctionFromText5(settings.clear);
      if (typeof settings.clear === "function") {
        canvasopts.clear = settings.clear;
      }
      return settings._id;
    }
    return void 0;
  }
  function setupCanvas3(options) {
    if (this?.__node?.graph) {
      if (!this.__node.graph.CANVASES)
        this.__node.graph.CANVASES = {};
    } else if (!globalThis.CANVASES)
      globalThis.CANVASES = {};
    let canvasOptions = options;
    options._id ? canvasOptions._id = options._id : canvasOptions._id = `canvas${Math.floor(Math.random() * 1e15)}`;
    typeof options.context === "string" ? canvasOptions.context = options.canvas.getContext(options.context) : canvasOptions.context = options.context;
    "animating" in options ? canvasOptions.animating = options.animating : canvasOptions.animating = true;
    if (this?.__node?.graph?.CANVASES[canvasOptions._id]) {
      this.__node.graph.run("setDraw", canvasOptions);
    } else if (globalThis.CANVASES?.[canvasOptions._id]) {
      setDraw3(canvasOptions);
    } else {
      if (this?.__node?.graph)
        canvasOptions.graph = this.__node.graph;
      if (this?.__node?.graph)
        this.__node.graph.CANVASES[canvasOptions._id] = canvasOptions;
      else
        globalThis.CANVASES[canvasOptions._id] = canvasOptions;
      if (this?.__node?.graph)
        this.__node.graph.run("makeProxy", canvasOptions._id, canvasOptions.canvas);
      else
        proxyElementWorkerRoutes3.makeProxy(canvasOptions._id, canvasOptions.canvas);
      if (options.width)
        canvasOptions.canvas.width = options.width;
      if (options.height)
        canvasOptions.canvas.height = options.height;
      if (typeof canvasOptions.draw === "string") {
        canvasOptions.draw = parseFunctionFromText5(canvasOptions.draw);
      } else if (typeof canvasOptions.draw === "function") {
        canvasOptions.draw = canvasOptions.draw;
      }
      if (typeof canvasOptions.update === "string") {
        canvasOptions.update = parseFunctionFromText5(canvasOptions.update);
      } else if (typeof canvasOptions.update === "function") {
        canvasOptions.update = canvasOptions.update;
      }
      if (typeof canvasOptions.init === "string") {
        canvasOptions.init = parseFunctionFromText5(canvasOptions.init);
      } else if (typeof canvasOptions.init === "function") {
        canvasOptions.init = canvasOptions.init;
      }
      if (typeof canvasOptions.clear === "string") {
        canvasOptions.clear = parseFunctionFromText5(canvasOptions.clear);
      } else if (typeof canvasOptions.clear === "function") {
        canvasOptions.clear = canvasOptions.clear;
      }
      if (typeof canvasOptions.init === "function")
        canvasOptions.init(canvasOptions, canvasOptions.canvas, canvasOptions.context);
      canvasOptions.stop = () => {
        stopAnim3(canvasOptions._id);
      };
      canvasOptions.start = (draw) => {
        startAnim3(canvasOptions._id, draw);
      };
      canvasOptions.set = (settings) => {
        setDraw3(settings, canvasOptions._id);
      };
      if (typeof canvasOptions.draw === "function" && canvasOptions.animating) {
        let draw = (s, canvas, context) => {
          if (s.animating) {
            s.draw(s, canvas, context);
            requestAnimationFrame(() => {
              draw(s, canvas, context);
            });
          }
        };
        draw(canvasOptions, canvasOptions.canvas, canvasOptions.context);
      }
    }
    if (typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope)
      return canvasOptions._id;
    else {
      const canvascontrols = {
        _id: options._id,
        width: options.width,
        height: options.height,
        draw: (props2) => {
          drawFrame3(props2, options._id);
        },
        update: (props2) => {
          updateCanvas3(props2, options._id);
        },
        clear: () => {
          clearCanvas3(options._id);
        },
        init: () => {
          initCanvas3(options._id);
        },
        stop: () => {
          stopAnim3(options._id);
        },
        start: () => {
          startAnim3(options._id);
        },
        set: (newDrawProps) => {
          setDraw3(newDrawProps, options._id);
        },
        terminate: () => {
          stopAnim3(options._id);
        }
      };
      return canvascontrols;
    }
  }
  function drawFrame3(props2, _id) {
    let canvasopts = getCanvas3.call(this, _id);
    if (canvasopts) {
      if (props2)
        Object.assign(canvasopts, props2);
      if (canvasopts.draw) {
        canvasopts.draw(canvasopts, canvasopts.canvas, canvasopts.context);
        return _id;
      }
    }
    return void 0;
  }
  function clearCanvas3(_id) {
    let canvasopts = getCanvas3.call(this, _id);
    if (canvasopts?.clear) {
      canvasopts.clear(canvasopts, canvasopts.canvas, canvasopts.context);
      return _id;
    }
    return void 0;
  }
  function initCanvas3(_id) {
    let canvasopts = getCanvas3.call(this, _id);
    if (canvasopts?.init) {
      canvasopts.init(canvasopts, canvasopts.canvas, canvasopts.context);
      return _id;
    }
    return void 0;
  }
  function updateCanvas3(input, _id) {
    let canvasopts = getCanvas3.call(this, _id);
    if (canvasopts?.update) {
      canvasopts.update(canvasopts, canvasopts.canvas, canvasopts.context, input);
      return _id;
    }
    return void 0;
  }
  function setProps3(props2, _id) {
    let canvasopts = getCanvas3.call(this, _id);
    if (canvasopts) {
      Object.assign(canvasopts, props2);
      if (props2.width)
        canvasopts.canvas.width = props2.width;
      if (props2.height)
        canvasopts.canvas.height = props2.height;
      return _id;
    }
    return void 0;
  }
  function startAnim3(_id, draw) {
    let canvasopts = getCanvas3.call(this, _id);
    canvasopts.animating = true;
    if (canvasopts && draw) {
      if (typeof draw === "string")
        draw = parseFunctionFromText5(draw);
      if (typeof draw === "function") {
        canvasopts.draw = draw;
      }
      return _id;
    }
    if (typeof canvasopts?.draw === "function") {
      let draw2 = (s, canvas, context) => {
        if (s.animating) {
          s.draw(s, canvas, context);
          requestAnimationFrame(() => {
            draw2(s, canvas, context);
          });
        }
      };
      if (typeof canvasopts.clear === "function")
        canvasopts.clear(canvasopts, canvasopts.canvas, canvasopts.context);
      if (typeof canvasopts.init === "function")
        canvasopts.init(canvasopts, canvasopts.canvas, canvasopts.context);
      draw2(canvasopts, canvasopts.canvas, canvasopts.context);
      return _id;
    }
    return void 0;
  }
  function stopAnim3(_id) {
    let canvasopts = getCanvas3.call(this, _id);
    if (canvasopts) {
      canvasopts.animating = false;
      if (typeof canvasopts.clear === "function")
        canvasopts.clear(canvasopts, canvasopts.canvas, canvasopts.context);
      return _id;
    }
    return void 0;
  }
  function getCanvas3(_id) {
    let canvasopts;
    if (this?.__node?.graph) {
      if (!_id)
        canvasopts = this.__node.graph.CANVASES?.[Object.keys(this.__node.graph.CANVASES)[0]];
      else
        canvasopts = this.__node.graph.CANVASES?.[_id];
    } else {
      if (!_id)
        canvasopts = globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]];
      else
        canvasopts = globalThis.CANVASES?.[_id];
    }
    return canvasopts;
  }
  var workerCanvasRoutes3 = {
    ...proxyElementWorkerRoutes3,
    Renderer: Renderer3,
    transferCanvas: transferCanvas3,
    setupCanvas: setupCanvas3,
    setDraw: setDraw3,
    drawFrame: drawFrame3,
    clearCanvas: clearCanvas3,
    initCanvas: initCanvas3,
    updateCanvas: updateCanvas3,
    setProps: setProps3,
    startAnim: startAnim3,
    stopAnim: stopAnim3
  };
  function parseFunctionFromText5(method = "") {
    let getFunctionBody = (methodString) => {
      return methodString.replace(/^\W*(function[^{]+\{([\s\S]*)\}|[^=]+=>[^{]*\{([\s\S]*)\}|[^=]+=>(.+))/i, "$2$3$4");
    };
    let getFunctionHead = (methodString) => {
      let startindex = methodString.indexOf("=>") + 1;
      if (startindex <= 0) {
        startindex = methodString.indexOf("){");
      }
      if (startindex <= 0) {
        startindex = methodString.indexOf(") {");
      }
      return methodString.slice(0, methodString.indexOf("{", startindex) + 1);
    };
    let newFuncHead = getFunctionHead(method);
    let newFuncBody = getFunctionBody(method);
    let newFunc;
    if (newFuncHead.includes("function")) {
      let varName = newFuncHead.split("(")[1].split(")")[0];
      newFunc = new Function(varName, newFuncBody);
    } else {
      if (newFuncHead.substring(0, 6) === newFuncBody.substring(0, 6)) {
        let varName = newFuncHead.split("(")[1].split(")")[0];
        newFunc = new Function(varName, newFuncBody.substring(newFuncBody.indexOf("{") + 1, newFuncBody.length - 1));
      } else {
        try {
          newFunc = (0, eval)(newFuncHead + newFuncBody + "}");
        } catch {
        }
      }
    }
    return newFunc;
  }

  // components/plot/webglplot/plotter.ts
  var WGLPlotter = class {
    constructor(options) {
      this.plotter = new y3();
      this.create = (options = this.options) => {
        const init = (options2, canvas, context) => {
          this.plotter.initPlot(options2);
          let onresize = (o) => {
            canvas.width = canvas.clientWidth;
            canvas.height = canvas.clientHeight;
            options2.overlay.width = canvas.clientWidth;
            options2.overlay.height = canvas.clientHeight;
            this.plotter.plots[options2._id].plot.webgl.viewport(0, 0, canvas.width, canvas.height);
            this.plotter.plots[options2._id].plot.update();
          };
          if (typeof window !== "undefined")
            window.addEventListener("resize", onresize);
          else
            canvas.addEventListener("resize", onresize);
          setTimeout(() => {
            onresize(canvas);
          }, 10);
        };
        const update = (options2, canvas, context, input) => {
          this.plotter.update(options2._id, input);
        };
        const clear = (options2, canvas, context) => {
          this.plotter.deinitPlot(options2._id);
        };
        options.init = init;
        options.update = update;
        options.clear = clear;
        if (options.worker) {
          if (options.worker === true)
            options.worker = new Worker(canvas_worker_default);
          else if (typeof options.worker === "string" || options.worker instanceof Blob)
            options.worker = new Worker(options.worker);
          if (options.overlay) {
            let offscreen = options.overlay.transferControlToOffscreen();
            options.overlay = offscreen;
            options.transfer = [options.overlay];
          }
        }
        this.plot = workerCanvasRoutes3.Renderer(options);
        return this.plot;
      };
      this.__operator = (data) => {
        if (!this.plot)
          this.create(this.options);
        this.plot.update(data);
      };
      if (options) {
        this.options = options;
        this.create(options);
      }
    }
  };

  // components/Display.ts
  var merge = (o, override) => {
    for (let key in override) {
      const oVal = o[key];
      const val = override[key];
      if (oVal && typeof oVal === "object" && typeof val === "object")
        merge(o[key], val);
      else {
        try {
          o[key] = val;
        } catch {
        }
      }
    }
  };
  var Display = class extends Module {
    constructor(info) {
      super(info);
      this.__element = "div";
      this.style = {
        position: "relative",
        border: "1px solid white",
        margin: "10px",
        flex: "1 1 250px"
      };
      this.__children = {
        header: {
          __element: "h3",
          innerHTML: "Graph Visualization",
          style: {
            background: "black",
            fontSize: "1.0em",
            margin: "0px",
            padding: "10px"
          }
        },
        ui: {
          __element: "div",
          style: {
            height: "200px",
            overflowY: "scroll",
            fontSize: "12px",
            background: "#1b1a1a"
          }
        }
      };
      const copy = Object.assign({}, info);
      if (copy.__children) {
        const newChildren = copy.__children;
        delete copy.__children;
        for (let key in newChildren) {
          if (!this.__children[key])
            this.__children[key] = newChildren[key];
          else
            merge(this.__children[key], newChildren[key]);
        }
      }
      merge(this, copy);
      if (copy.name)
        this.__children.header.innerHTML = info.name;
    }
  };
  var Display_default = Display;

  // components/plot/Plot.ts
  var Plot = class extends Display_default {
    constructor(info) {
      super(info);
      this.workers = workers;
      this.__children.ui.workers = this.workers;
      this.__children.ui.state = this.state;
      this.__children.ui.__onrender = function(div) {
        let canvas = div.querySelector("#chart");
        let overlay = div.querySelector("#overlay");
        const lines = this.lines;
        let plotter = new WGLPlotter({
          canvas,
          overlay,
          lines,
          worker: canvas_worker_default,
          generateNewLines: false
        });
        if (this.state) {
          plotter.__listeners = {
            [`state.${this.state}`]: function(data) {
              this.__operator(data);
            }
          };
        }
        this.workers.add(plotter);
      };
      this.__children.ui.__children = {
        chart: {
          __element: "canvas",
          style: { height: "100%", width: "100%", backgroundColor: "black" }
        },
        overlay: {
          __element: "canvas",
          style: { height: "100%", width: "100%", transform: "translateY(-102%)" }
        }
      };
      this.state = info.state;
      this.lines = info.lines;
      if (info.workers)
        this.workers = info.workers;
      Object.defineProperty(this.__children.ui, "workers", { get: () => this.workers, enumerable: true });
      Object.defineProperty(this.__children.ui, "state", { get: () => this.state, enumerable: true });
      Object.defineProperty(this.__children.ui, "lines", { get: () => this.lines, enumerable: true });
    }
  };
  var Plot_default = Plot;

  // tree.ts
  var detected = {
    emg: false,
    ppg: false,
    imu: false,
    env: false,
    emg2: false
  };
  function genTimestamps(ct, sps11, from) {
    let now = from ? from : Date.now();
    let toInterp = [now - ct * 1e3 / sps11, now];
    return ByteParser2.upsample(toInterp, ct);
  }
  function setReadoutText(data) {
    let html = ``;
    for (let key in data) {
      const cap = key.charAt(0).toUpperCase() + key.slice(1);
      const val = data[key][data[key].length - 1] ?? data[key][0];
      html += `<p><b>${cap}:</b> ${val ? val % 1 !== 0 ? val.toFixed(5) : val : val}</p>`;
    }
    this.innerHTML = html;
  }
  var tree = {
    state: state3,
    detected,
    alerts: {
      __element: "div",
      __listeners: {
        "state.ppg": (data) => {
          if (data.bpm) {
            hr.check(data.bpm);
          }
        },
        "state.imu": (data) => {
          data.ax.map((v2, i) => {
            let mag = Math.sqrt(data.ax[i] * data.ax[i] + data.ay[i] * data.ay[i] + data.az[i] * data.az[i]);
            imu.check(mag);
            return mag;
          });
        }
      }
    },
    readout: {
      __element: "div",
      style: {
        position: "fixed",
        top: "0px",
        right: "0px",
        width: "200px",
        height: "100vh",
        background: "rgba(0,0,0, 0.5)",
        padding: "10px",
        overflowY: "scroll",
        fontSize: "80%",
        zIndex: 1
      },
      __children: {
        PPG: {
          __element: "div",
          __children: {
            header: {
              __element: "h3",
              innerText: "PPG"
            },
            output: {
              __element: "div"
            }
          }
        },
        IMU: {
          __element: "div",
          __children: {
            header: {
              __element: "h3",
              innerText: "IMU"
            },
            output: {
              __element: "div"
            }
          }
        },
        EMG: {
          __element: "div",
          __children: {
            header: {
              __element: "h3",
              innerText: "EMG"
            },
            output: {
              __element: "div"
            }
          }
        },
        ENV: {
          __element: "div",
          __children: {
            header: {
              __element: "h3",
              innerText: "ENV"
            },
            output: {
              __element: "div"
            }
          }
        }
      },
      __listeners: {
        "state.ppg": function(data) {
          if (this.state !== "hidden")
            setReadoutText.call(this.__children.PPG.__children.output, data);
        },
        "state.imu": function(data) {
          if (this.state !== "hidden")
            setReadoutText.call(this.__children.IMU.__children.output, data);
        },
        "state.emg": function(data) {
          if (this.state !== "hidden")
            setReadoutText.call(this.__children.EMG.__children.output, data);
        },
        "state.env": function(data) {
          if (this.state !== "hidden")
            setReadoutText.call(this.__children.ENV.__children.output, data);
        }
      }
    },
    readoutToggle: {
      __element: "button",
      innerText: "Toggle Readout",
      style: {
        position: "fixed",
        bottom: "0px",
        right: "0px",
        margin: "25px",
        zIndex: 99
      },
      toggle: function(state5) {
        const readout = document.getElementById("readout");
        if (readout) {
          if (state5 === "visible" || readout.style.display === "none") {
            state5 = "visible";
            readout.style.display = "block";
          } else {
            state5 = "hidden";
            readout.style.display = "none";
          }
          localStorage.setItem("sensormodules-readout-state", state5);
          readout.node.state = state5;
        }
      },
      __onconnected: function() {
        const state5 = localStorage.getItem("sensormodules-readout-state");
        this.toggle(state5);
      },
      onclick: function() {
        this.toggle();
      }
    },
    main: {
      __element: "div",
      style: {
        width: "100%",
        height: "100%",
        overflow: "scroll",
        padding: "50px"
      },
      __children: {
        controls: {
          __element: "div",
          __children: {
            header: {
              __element: "h2",
              innerText: "Controls"
            },
            hr: {
              __element: "hr"
            },
            body: {
              __element: "div",
              style: {
                padding: "25px 0px"
              },
              __children: {
                connect: {
                  __element: "button",
                  innerHTML: "Connect Device",
                  onclick: (ev2) => {
                    let connect = () => {
                      let csvworkers = {
                        emg: workers_default.addWorker({ url: stream_big_worker_default }),
                        ppg: workers_default.addWorker({ url: stream_big_worker_default }),
                        imu: workers_default.addWorker({ url: stream_big_worker_default }),
                        env: workers_default.addWorker({ url: stream_big_worker_default }),
                        emg2: workers_default.addWorker({ url: stream_big_worker_default })
                      };
                      let algoworkers = {
                        hr: workers_default.addWorker({ url: stream_big_worker_default }),
                        breath: workers_default.addWorker({ url: stream_big_worker_default })
                      };
                      algoworkers.hr?.run("createSubprocess", ["heartrate", { sps: 100 }]).then((id) => {
                        algoworkers.hr?.subscribe(id, (heartbeat) => {
                          const data = {
                            hr: heartbeat.bpm,
                            hrv: heartbeat.change,
                            timestamp: heartbeat.timestamp
                          };
                          if (state3.recording) {
                            csvworkers.ppg?.run("appendCSV", data);
                          }
                          state3.ppg = data;
                        });
                      });
                      algoworkers.breath?.run("createSubprocess", ["breath", { sps: 100 }]).then((id) => {
                        algoworkers.breath?.subscribe(id, (breath) => {
                          const data = {
                            breath: breath.bpm,
                            brv: breath.change,
                            timestamp: breath.timestamp
                          };
                          if (state3.recording) {
                            csvworkers.ppg?.run("appendCSV", data);
                          }
                          state3.ppg = data;
                        });
                      });
                      let clearworkers = () => {
                        for (const key in csvworkers) {
                          csvworkers[key].terminate();
                        }
                        for (const key in algoworkers) {
                          algoworkers[key].terminate();
                        }
                        workers_default.unsubscribe("state", sub, "recording");
                      };
                      let disconnect = (controls) => {
                        if (!controls) {
                          clearworkers();
                        } else {
                          ev2.target.innerHTML = "Disconnect";
                          ev2.target.onclick = () => {
                            document.getElementById("record").style.display = "none";
                            clearworkers();
                            controls?.disconnect();
                            ev2.target.innerHTML = "Connect Device";
                            ev2.target.onclick = () => {
                              connect();
                            };
                          };
                        }
                      };
                      let sub = workers_default.subscribe("state", (recording) => {
                        if (recording) {
                          if (detected.emg)
                            csvworkers.emg?.run("createCSV", [
                              `data/EMG_${new Date().toISOString()}.csv`,
                              [
                                "timestamp",
                                "0",
                                "1"
                              ],
                              5,
                              250
                            ]);
                          if (detected.imu)
                            csvworkers.imu?.run("createCSV", [
                              `data/IMU_${new Date().toISOString()}.csv`,
                              [
                                "timestamp",
                                "ax",
                                "ay",
                                "az",
                                "gx",
                                "gy",
                                "gz",
                                "mpu_dietemp"
                              ],
                              0,
                              100
                            ]);
                          if (detected.ppg)
                            csvworkers.ppg?.run("createCSV", [
                              `data/PPG_${new Date().toISOString()}.csv`,
                              [
                                "timestamp",
                                "red",
                                "ir",
                                "hr",
                                "spo2",
                                "breath",
                                "max_dietemp"
                              ],
                              0,
                              100
                            ]);
                          if (detected.env)
                            csvworkers.env?.run("createCSV", [
                              `data/ENV_${new Date().toISOString()}.csv`,
                              [
                                "timestamp",
                                "temperature",
                                "pressure",
                                "humidity",
                                "altitude"
                              ],
                              4
                            ]);
                        } else {
                          visualizeDirectory("data", document.getElementById("csvs"));
                        }
                      }, void 0, "recording");
                      const device = initDevice("BLE", "nrf5x", {
                        ondecoded: {
                          "0002cafe-b0ba-8bad-f00d-deadbeef0000": (data) => {
                            state3.emg = data;
                            if (!detected.emg)
                              detected.emg = true;
                            if (state3.recording) {
                              csvworkers.emg?.run("appendCSV", data);
                            }
                          },
                          "0003cafe-b0ba-8bad-f00d-deadbeef0000": (data) => {
                            state3.ppg = data;
                            if (!detected.ppg)
                              detected.ppg = true;
                            let d2 = Object.assign({}, data);
                            d2.timestamp = genTimestamps(32, 100, data.timestamp);
                            algoworkers.hr?.post("runSubprocess", d2);
                            algoworkers.breath?.post("runSubprocess", d2);
                            if (state3.recording) {
                              csvworkers.ppg?.run("appendCSV", data);
                            }
                          },
                          "0004cafe-b0ba-8bad-f00d-deadbeef0000": (data) => {
                            state3.imu = data;
                            if (!detected.imu)
                              detected.imu = true;
                            if (state3.recording) {
                              csvworkers.imu?.run("appendCSV", data);
                            }
                          },
                          "0005cafe-b0ba-8bad-f00d-deadbeef0000": (data) => {
                            state3.emg2 = data;
                          },
                          "0006cafe-b0ba-8bad-f00d-deadbeef0000": (data) => {
                            state3.env = data;
                            if (!detected.env)
                              detected.env = true;
                            if (state3.recording) {
                              csvworkers.env?.run("appendCSV", data);
                            }
                          }
                        },
                        onconnect: () => {
                          console.log("onconnect");
                          document.getElementById("record").style.display = "";
                          const sps11 = 250;
                          const gain4 = 32;
                          const nbits4 = 24;
                          const vref4 = 1.2;
                          let defaultsetting6 = {
                            sps: sps11,
                            useDCBlock: false,
                            useBandpass: false,
                            useLowpass: true,
                            lowpassHz: 30,
                            useScaling: true,
                            scalar: 0.96 * 1e3 * vref4 / (gain4 * (Math.pow(2, nbits4) - 1))
                          };
                          const ads131m08FilterSettings3 = {
                            "0": JSON.parse(JSON.stringify(defaultsetting6)),
                            "1": JSON.parse(JSON.stringify(defaultsetting6)),
                            "2": JSON.parse(JSON.stringify(defaultsetting6)),
                            "3": JSON.parse(JSON.stringify(defaultsetting6)),
                            "4": JSON.parse(JSON.stringify(defaultsetting6)),
                            "5": JSON.parse(JSON.stringify(defaultsetting6)),
                            "6": JSON.parse(JSON.stringify(defaultsetting6)),
                            "7": JSON.parse(JSON.stringify(defaultsetting6))
                          };
                          device?.then((res) => {
                            res.workers.streamworker.run("setFilters", ads131m08FilterSettings3);
                          });
                        },
                        ondisconnect: () => {
                          disconnect();
                        }
                      });
                      device?.then(disconnect).catch((err) => {
                        disconnect();
                      });
                    };
                    connect();
                  }
                }
              }
            }
          }
        },
        modules: {
          __element: "div",
          __children: {
            header: {
              __element: "h2",
              innerText: "Modules"
            },
            hr: {
              __element: "hr"
            },
            body: {
              __element: "div",
              style: {
                display: "flex",
                flexWrap: "wrap",
                padding: "25px 0px"
              },
              __children: {
                arbitrary: new Display_default(arbitrary2),
                PPG: new Plot_default({
                  name: "PPG Readings",
                  state: "ppg",
                  lines: {
                    ...max3010xChartSettings.lines,
                    hr: { sps: 1, nSec: 100, units: "bpm" },
                    hrv: { sps: 1, nSec: 100, units: "bpm" },
                    breath: { sps: 1, nSec: 100, units: "bpm" }
                  }
                }),
                IMU: new Plot_default({
                  name: "IMU Readings",
                  state: "imu",
                  lines: mpu6050ChartSettings.lines
                }),
                EMG: new Plot_default({
                  name: "EMG Readings",
                  state: "emg",
                  lines: {
                    0: ads131m08ChartSettings2.lines?.["0"],
                    1: ads131m08ChartSettings2.lines?.["1"]
                  }
                }),
                ENV: new Plot_default({
                  name: "ENV Readings",
                  state: "env",
                  lines: bme280ChartSettings.lines
                }),
                csvs: new Display_default({
                  name: "CSVs",
                  __onconnected: function() {
                    this.__children.ui.style.padding = "25px";
                  },
                  __onrender: function(elm) {
                    visualizeDirectory("data", this.__children.ui.__props);
                    const recordButton = document.createElement("button");
                    recordButton.id = "record";
                    recordButton.innerHTML = "Record";
                    recordButton.style.position = "absolute";
                    recordButton.style.top = "0px";
                    recordButton.style.right = "0px";
                    recordButton.onclick = function(ev2) {
                      recordButton.innerHTML = "Stop Recording";
                      state3.recording = true;
                      this.onclick = function(ev3) {
                        recordButton.innerHTML = "Record";
                        state3.recording = false;
                      };
                    };
                    elm.appendChild(recordButton);
                  }
                })
              }
            }
          }
        }
      }
    }
  };
  var tree_default = tree;

  // index.ts
  workers.__node.loaders.html = htmlloader;
  workers.load(tree_default);
  window.onkeydown = (ev2) => {
    if (ev2.key === "a") {
      if (arbitrary2.alert)
        arbitrary2.alert.throw();
    }
  };
})();
/*!
 *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.
 *  
 *  howler.js v2.2.3
 *  howlerjs.com
 *
 *  (c) 2013-2020, James Simpson of GoldFire Studios
 *  goldfirestudios.com
 *
 *  MIT License
 */
/*!
 *  howler.js v2.2.3
 *  howlerjs.com
 *
 *  (c) 2013-2020, James Simpson of GoldFire Studios
 *  goldfirestudios.com
 *
 *  MIT License
 */
/*!
* The buffer module from node.js, for the browser.
*
* @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
* @license  MIT
*/
/*! Capacitor: https://capacitorjs.com/ - MIT License */
